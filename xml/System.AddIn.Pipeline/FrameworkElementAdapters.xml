<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a15803ba825d2f9a71f1f19cc5f22fe331007a99" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69337031" /></Metadata><TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <TypeSignature Language="F#" Value="type FrameworkElementAdapters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" />jest używany przez dodatki Windows Presentation Foundation (WPF) do konwersji między <see cref="T:System.Windows.FrameworkElement" /> <see cref="T:System.AddIn.Contract.INativeHandleContract" />i.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Windows Presentation Foundation (WPF) rozszerza model dodatku .NET Framework, aby zezwolić na przekazywanie WPF interfejsów użytkownika między aplikacjami hosta i dodatkami. WPF wymaga, aby WPF interfejsów użytkownika, które są przesyłane bezpośrednio lub pośrednio z <xref:System.Windows.FrameworkElement>. Jednak Dodatki i aplikacje hosta są zwykle uruchamiane w oddzielnych domenach aplikacji i są w związku z tym oddzielone granicą izolacji. Z tego powodu model dodatku .NET Framework wymaga, aby typy, które są przesyłane przez granicę izolacji, były zdalne. Typ komunikacji zdalnej jest zgodny z jedną z następujących czynności:  
  
-   <xref:System.Runtime.Serialization.ISerializable> Implementuje interfejs.  
  
-   Ma zastosowany <xref:System.SerializableAttribute> atrybut.  
  
-   Pochodzi od <xref:System.MarshalByRefObject> klasy.  
  
 <xref:System.Windows.FrameworkElement>nie jest zdalny i musi być konwertowany na typ zdalny, zanim zostanie przeniesiona między granicą izolacji między dodatkiem a aplikacją hosta. W tym celu należy wywołać metodę statyczną <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> w celu przeprowadzenia <xref:System.Windows.FrameworkElement> konwersji do <xref:System.AddIn.Contract.INativeHandleContract>wystąpienia zdalnego.  
  
 <xref:System.AddIn.Contract.INativeHandleContract> Po przekazaniu przez granicę izolacji, należy ją przekonwertować na typ, który może być wyświetlany przez aplikację hosta lub dodatek. W tym przypadku metoda statyczna <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> jest wywoływana w celu <xref:System.AddIn.Contract.INativeHandleContract> konwersji do <xref:System.Windows.FrameworkElement>.  
  
 Aby uzyskać bardziej szczegółowy opis dodatków WPF, zobacz [Omówienie dodatków WPF](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberSignature Language="F#" Value="static member ContractToViewAdapter : System.AddIn.Contract.INativeHandleContract -&gt; System.Windows.FrameworkElement" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter nativeHandleContract" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract"><see cref="T:System.AddIn.Contract.INativeHandleContract" /> Który został przesłany przez granicę izolacji między aplikacją hosta a dodatkiem.</param>
        <summary>Zwraca obiekt <see cref="T:System.Windows.FrameworkElement" /> , który został przekonwertowany <see cref="T:System.AddIn.Contract.INativeHandleContract" />z.</summary>
        <returns>Element <see cref="T:System.Windows.FrameworkElement" /> , który będzie wyświetlany z poziomu aplikacji lub dodatku hosta, w zależności od kierunku, w [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] którym jest przenoszona między nimi.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberSignature Language="F#" Value="static member ViewToContractAdapter : System.Windows.FrameworkElement -&gt; System.AddIn.Contract.INativeHandleContract" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root"><see cref="T:System.Windows.FrameworkElement" /> Do przekazywania przez granicę izolacji między aplikacją hosta i dodatkiem.</param>
        <summary>Zwraca wartość <see cref="T:System.Windows.FrameworkElement" />, która została przekonwertowana z. <see cref="T:System.AddIn.Contract.INativeHandleContract" /></summary>
        <returns>, Który jest przesyłany z aplikacji hosta lub dodatku, w zależności od kierunku, w [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] którym jest przenoszona między nimi. <see cref="T:System.AddIn.Contract.INativeHandleContract" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="root" />nie jest elementem głównym drzewa elementów.</exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/bb913905(v=vs.90)">Dodatek WPF ma wiele przykładów interfejsów użytkownika</related>
      </Docs>
    </Member>
  </Members>
</Type>
