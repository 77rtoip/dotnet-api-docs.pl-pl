<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d70e37e9b46c2e2fe503e9a1bdfe484e1e3d8f6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37704777" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <TypeSignature Language="F#" Value="type FrameworkElementAdapters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> jest używany przez dodatkach Windows Presentation Foundation (WPF), aby wykonać konwersję między <see cref="T:System.Windows.FrameworkElement" /> i <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Windows Presentation Foundation (WPF) rozszerza model dodatku .NET Framework umożliwia WPF UI przekazywane między dodatków i hostowania aplikacji. WPF wymaga interfejsów użytkownika WPF, są przekazywane albo bezpośrednio lub pośrednio dziedziczyć <xref:System.Windows.FrameworkElement>. Jednakże dodatki i hosta aplikacji są zazwyczaj uruchamiane w innej aplikacji domeny i są w związku z tym, oddzielone izolującą granicę. Z tego powodu model dodatku .NET Framework wymaga typy, które są przekazywane przez granicę izolacji, być może być zastosowana zdalnie. Typ może być zastosowana zdalnie jest zgodny z jednym z następujących czynności:  
  
-   Implementuje <xref:System.Runtime.Serialization.ISerializable> interfejsu.  
  
-   Ma <xref:System.SerializableAttribute> zastosowany.  
  
-   Pochodzi od klasy <xref:System.MarshalByRefObject> klasy.  
  
 <xref:System.Windows.FrameworkElement> nie jest wykonywane zdalnie i musi zostać skonwertowany do typu może być zastosowana zdalnie, zanim zostanie on przekazany przez granicę izolacji między dodatek a aplikacją hosta. W tym celu należy wywołać statyczną <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> metodę, aby przekonwertować <xref:System.Windows.FrameworkElement> do wystąpienia może być zastosowana zdalnie <xref:System.AddIn.Contract.INativeHandleContract>.  
  
 Gdy <xref:System.AddIn.Contract.INativeHandleContract> jest przekazywany przez granicę izolacji muszą zostać skonwertowane do typu, który można wyświetlić w aplikacji hosta lub dodatek. W tym przypadku statycznej <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> metoda jest wywoływana w celu przekonwertowania <xref:System.AddIn.Contract.INativeHandleContract> do <xref:System.Windows.FrameworkElement>.  
  
 Aby uzyskać bardziej szczegółowe specyfikacji dodatki WPF, zobacz [Przegląd dodatki WPF](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberSignature Language="F#" Value="static member ContractToViewAdapter : System.AddIn.Contract.INativeHandleContract -&gt; System.Windows.FrameworkElement" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter nativeHandleContract" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract">
          <see cref="T:System.AddIn.Contract.INativeHandleContract" /> Który został przekazany przez granicę izolacji między aplikacją hosta i dodatku.</param>
        <summary>Zwraca <see cref="T:System.Windows.FrameworkElement" /> , została przekonwertowana z <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
        <returns>A <see cref="T:System.Windows.FrameworkElement" /> które będzie wyświetlane z aplikacją hosta lub dodatek, w zależności od kierunku, w którym [! INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-UI-MD.MD)] są przekazywane między nimi.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberSignature Language="F#" Value="static member ViewToContractAdapter : System.Windows.FrameworkElement -&gt; System.AddIn.Contract.INativeHandleContract" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root">
          <see cref="T:System.Windows.FrameworkElement" /> Przekazywane przez granicę izolacji między aplikacją hosta i dodatku.</param>
        <summary>Zwraca <see cref="T:System.AddIn.Contract.INativeHandleContract" /> , została przekonwertowana z <see cref="T:System.Windows.FrameworkElement" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.INativeHandleContract" /> Przekazana z aplikacją hosta lub dodatek, w zależności od kierunku, w którym [! INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-UI-MD.MD)] są przekazywane między nimi.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="root" /> nie jest elementem głównym drzewa elementów.</exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      </Docs>
    </Member>
  </Members>
</Type>