<Type Name="TaskFactory" FullName="System.Threading.Tasks.TaskFactory">
  <TypeSignature Language="C#" Value="public class TaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="88ee9-101">Umożliwia tworzenie i planowanie <see cref="T:System.Threading.Tasks.Task" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="88ee9-101">Provides support for creating and scheduling <see cref="T:System.Threading.Tasks.Task" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-102">.NET Framework zapewnia dwie fabryki umożliwiające tworzenie i planowanie zadań:</span><span class="sxs-lookup"><span data-stu-id="88ee9-102">The .NET Framework provides two factories for creating and scheduling tasks:</span></span>  
  
-   <span data-ttu-id="88ee9-103"><xref:System.Threading.Tasks.TaskFactory> Klasy, która tworzy <xref:System.Threading.Tasks.Task> i <xref:System.Threading.Tasks.Task%601> obiektów.</span><span class="sxs-lookup"><span data-stu-id="88ee9-103">The <xref:System.Threading.Tasks.TaskFactory> class, which creates <xref:System.Threading.Tasks.Task> and <xref:System.Threading.Tasks.Task%601> objects.</span></span> <span data-ttu-id="88ee9-104">Można wywoływać przeciążenia tej metody, aby utworzyć i wykonać zadanie, które wymaga argumentów innych niż domyślne.</span><span class="sxs-lookup"><span data-stu-id="88ee9-104">You can call the overloads of this method to create and execute a task that requires non-default arguments.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="88ee9-105">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metoda zapewnia Najprostszym sposobem tworzenia zadania z domyślnej wartości konfiguracji i natychmiast rozpocząć.</span><span class="sxs-lookup"><span data-stu-id="88ee9-105">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a task with default configuration values and start it immediately.</span></span>  
  
-   <span data-ttu-id="88ee9-106"><xref:System.Threading.Tasks.TaskFactory%601> Klasy, która tworzy <xref:System.Threading.Tasks.Task%601> obiektów.</span><span class="sxs-lookup"><span data-stu-id="88ee9-106">The <xref:System.Threading.Tasks.TaskFactory%601> class, which creates <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
 <span data-ttu-id="88ee9-107"><xref:System.Threading.Tasks.TaskFactory> Klasa umożliwia wykonaj następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="88ee9-107">The <xref:System.Threading.Tasks.TaskFactory> class allows you to do the following:</span></span>  
  
-   <span data-ttu-id="88ee9-108">Utwórz zadanie i natychmiast rozpocząć przez wywołanie metody <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="88ee9-108">Create a task and start it immediately by calling the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> method.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="88ee9-109">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metoda zapewnia Najprostszym sposobem tworzenia zadania z domyślnej wartości konfiguracji i natychmiast rozpocząć.</span><span class="sxs-lookup"><span data-stu-id="88ee9-109">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a task with default configuration values and start it immediately.</span></span>  
  
-   <span data-ttu-id="88ee9-110">Tworzenie zadań, która rozpoczyna się po zakończeniu jednego z zadań w tablicy przez wywołanie metody <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="88ee9-110">Create a task that starts when any one of the tasks in an array has completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> method.</span></span>  
  
-   <span data-ttu-id="88ee9-111">Tworzenie zadań, która rozpoczyna się po zakończeniu wszystkich zadań w tablicy przez wywołanie metody <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="88ee9-111">Create a task that starts when all the tasks in an array have completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method.</span></span>  
  
 <span data-ttu-id="88ee9-112">Statycznych <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> właściwość zwraca domyślną <xref:System.Threading.Tasks.TaskFactory%601> obiektu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-112">The static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property returns a default <xref:System.Threading.Tasks.TaskFactory%601> object.</span></span> <span data-ttu-id="88ee9-113">Można również wywołać jeden z <xref:System.Threading.Tasks.TaskFactory> klasy konstruktorów, aby skonfigurować <xref:System.Threading.Tasks.Task> obiekty, które <xref:System.Threading.Tasks.TaskFactory> tworzy klasy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-113">You can also call one of the <xref:System.Threading.Tasks.TaskFactory> class constructors to configure the <xref:System.Threading.Tasks.Task> objects that  the <xref:System.Threading.Tasks.TaskFactory> class creates.</span></span> <span data-ttu-id="88ee9-114">Poniższy przykład Konfiguruje nowy <xref:System.Threading.Tasks.TaskFactory> obiektu do utworzenia zadania, które mają token anulowania określony, opcje tworzenia zadań kontynuacji opcje i harmonogramu dostosowane zadanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-114">The following example configures a new <xref:System.Threading.Tasks.TaskFactory> object to create tasks that have a specified cancellation token, task creation options, continuation options, and a customized task scheduler.</span></span>  
  
 [!code-csharp[TPL_Factories#1](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_factories/cs/program.cs#1)]
 [!code-vb[TPL_Factories#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_factories/vb/factories_vb.vb#1)]  
  
 <span data-ttu-id="88ee9-115">W większości przypadków, nie trzeba utworzyć obiekt klasy <xref:System.Threading.Tasks.TaskFactory> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="88ee9-115">In most cases, you do not have to instantiate a new <xref:System.Threading.Tasks.TaskFactory> instance.</span></span> <span data-ttu-id="88ee9-116">Zamiast tego można użyć <xref:System.Threading.Tasks.Task.Factory%2A?displayProperty=nameWithType> właściwość, która zwraca obiekt fabryki, które są używane wartości domyślne.</span><span class="sxs-lookup"><span data-stu-id="88ee9-116">Instead, you can use the <xref:System.Threading.Tasks.Task.Factory%2A?displayProperty=nameWithType> property, which returns a factory object that uses default values.</span></span> <span data-ttu-id="88ee9-117">Następnie można wywołać metody jego do uruchamiania nowego zadania lub zdefiniuj kontynuacje zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-117">You can then call its methods to start new tasks or define task continuations.</span></span> <span data-ttu-id="88ee9-118">Ilustracja Zobacz przykład.</span><span class="sxs-lookup"><span data-stu-id="88ee9-118">For an illustration, see the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88ee9-119">W poniższym przykładzie użyto statycznych <xref:System.Threading.Tasks.Task.Factory%2A> właściwości do łączenia dwóch się <xref:System.Threading.Tasks.TaskFactory.StartNew%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="88ee9-119">The following example uses the static <xref:System.Threading.Tasks.Task.Factory%2A> property to make two calls to the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="88ee9-120">Pierwszy wypełnia tablicy z nazwami plików w katalogu Moje dokumenty użytkownika, podczas gdy druga wypełnia tablicę nazw podkatalogi katalogu Moje dokumenty użytkownika.</span><span class="sxs-lookup"><span data-stu-id="88ee9-120">The first populates an array with the names of files in the user's MyDocuments directory, while the second populates an array with the names of subdirectories of the user's MyDocuments directory.</span></span> <span data-ttu-id="88ee9-121">Następnie wywołuje <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> metodę, która wyświetla informacje o liczbę plików i katalogów w dwóch tablic, po wykonaniu pierwsze dwa zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-121">It then calls the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> method, which displays information about the number of files and directories in the two arrays after the first two tasks have completed execution.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.Factory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.factory/cs/factory1.cs#1)]
 [!code-vb[System.Threading.Tasks.Task.Factory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.factory/vb/factory1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="88ee9-122">Wszystkie publiczne i chronione elementy członkowskie <see cref="T:System.Threading.Tasks.TaskFactory" /> są wątkowo i mogą być używane jednocześnie wiele wątków.</span><span class="sxs-lookup"><span data-stu-id="88ee9-122">All public and protected members of <see cref="T:System.Threading.Tasks.TaskFactory" /> are thread-safe and may be used concurrently from multiple threads.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88ee9-123">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Tasks.TaskFactory" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-123">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskFactory" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88ee9-124">Inicjuje <see cref="T:System.Threading.Tasks.TaskFactory" /> wystąpienia z konfiguracji domyślnej.</span><span class="sxs-lookup"><span data-stu-id="88ee9-124">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory" /> instance with the default configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-125">Ten konstruktor tworzy <xref:System.Threading.Tasks.TaskFactory> wystąpienia z konfiguracji domyślnej.</span><span class="sxs-lookup"><span data-stu-id="88ee9-125">This constructor creates a <xref:System.Threading.Tasks.TaskFactory> instance with a default configuration.</span></span> <span data-ttu-id="88ee9-126"><xref:System.Threading.Tasks.TaskCreationOptions> Właściwość jest inicjowana na <xref:System.Threading.Tasks.TaskCreationOptions.None>, <xref:System.Threading.Tasks.TaskContinuationOptions> właściwość jest inicjowana na <xref:System.Threading.Tasks.TaskContinuationOptions.None>i <xref:System.Threading.Tasks.TaskScheduler> właściwość jest inicjowana do bieżącego harmonogramu (zobacz <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="88ee9-126">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="88ee9-127"><see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> Która zostanie przypisana do zadania utworzone przez to <see cref="T:System.Threading.Tasks.TaskFactory" /> , chyba że jawnie określono inny CancellationToken podczas wywoływania metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="88ee9-127">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another CancellationToken is explicitly specified while calling the factory methods.</span></span></param>
        <summary><span data-ttu-id="88ee9-128">Inicjuje <see cref="T:System.Threading.Tasks.TaskFactory" /> wystąpienia z określoną konfiguracją.</span><span class="sxs-lookup"><span data-stu-id="88ee9-128">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory" /> instance with the specified configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-129">Ten konstruktor tworzy <xref:System.Threading.Tasks.TaskFactory> wystąpienia z konfiguracji domyślnej.</span><span class="sxs-lookup"><span data-stu-id="88ee9-129">This constructor creates a <xref:System.Threading.Tasks.TaskFactory> instance with a default configuration.</span></span> <span data-ttu-id="88ee9-130"><xref:System.Threading.Tasks.TaskCreationOptions> Właściwość jest inicjowana na <xref:System.Threading.Tasks.TaskCreationOptions.None>, <xref:System.Threading.Tasks.TaskContinuationOptions> właściwość jest inicjowana na <xref:System.Threading.Tasks.TaskContinuationOptions.None>i <xref:System.Threading.Tasks.TaskScheduler> właściwość jest inicjowana do bieżącego harmonogramu (zobacz <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="88ee9-130">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scheduler As TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="scheduler"><span data-ttu-id="88ee9-131"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Na potrzeby zaplanować wszystkie zadania utworzone za pomocą tego fabryka zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-131">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to use to schedule any tasks created with this TaskFactory.</span></span> <span data-ttu-id="88ee9-132">Wartości null wskazuje, że powinny być używane bieżącego harmonogramu zadań systemu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-132">A null value indicates that the current TaskScheduler should be used.</span></span></param>
        <summary><span data-ttu-id="88ee9-133">Inicjuje <see cref="T:System.Threading.Tasks.TaskFactory" /> wystąpienia z określoną konfiguracją.</span><span class="sxs-lookup"><span data-stu-id="88ee9-133">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory" /> instance with the specified configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-134">W tym konstruktorze <xref:System.Threading.Tasks.TaskCreationOptions> właściwość jest inicjowana na <xref:System.Threading.Tasks.TaskCreationOptions.None>, <xref:System.Threading.Tasks.TaskContinuationOptions> właściwość jest inicjowana na <xref:System.Threading.Tasks.TaskContinuationOptions.None>i <xref:System.Threading.Tasks.TaskScheduler> właściwość jest inicjowana na `scheduler`, chyba że jest ona pusta, w którym to przypadku Właściwość jest inicjowana do bieżącego harmonogramu (zobacz <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="88ee9-134">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's null, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions, continuationOptions As TaskContinuationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions"><span data-ttu-id="88ee9-135">Wartość domyślna <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> do użycia podczas tworzenia zadania przy użyciu tego fabryka zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-135">The default <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> to use when creating tasks with this TaskFactory.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-136">Wartość domyślna <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> używany do tworzenia zadań kontynuacji z Ta fabryka zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-136">The default <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> to use when creating continuation tasks with this TaskFactory.</span></span></param>
        <summary><span data-ttu-id="88ee9-137">Inicjuje <see cref="T:System.Threading.Tasks.TaskFactory" /> wystąpienia z określoną konfiguracją.</span><span class="sxs-lookup"><span data-stu-id="88ee9-137">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory" /> instance with the specified configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-138">W tym konstruktorze <xref:System.Threading.Tasks.TaskCreationOptions> właściwość jest inicjowana na `creationOptions`, <xref:System.Threading.Tasks.TaskContinuationOptions> właściwość jest inicjowana na `continuationOptions`i <xref:System.Threading.Tasks.TaskScheduler> właściwość jest inicjowana do bieżącego harmonogramu (zobacz <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="88ee9-138">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-139"><paramref name="creationOptions" /> Argument określa nieprawidłowy <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="88ee9-139">The <paramref name="creationOptions" /> argument specifies an invalid <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> value.</span></span> <span data-ttu-id="88ee9-140">Aby uzyskać więcej informacji, zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-140">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span></span>  
  
 <span data-ttu-id="88ee9-141">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-141">-or-</span></span>  
  
 <span data-ttu-id="88ee9-142"><paramref name="continuationOptions" /> Argument określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="88ee9-142">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="88ee9-143">Wartość domyślna <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> która zostanie przypisana do zadania utworzone przez to <see cref="T:System.Threading.Tasks.TaskFactory" /> , chyba że jawnie określono inny CancellationToken podczas wywoływania metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="88ee9-143">The default <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another CancellationToken is explicitly specified while calling the factory methods.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-144">Wartość domyślna <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> do użycia podczas tworzenia zadania przy użyciu tego fabryka zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-144">The default <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> to use when creating tasks with this TaskFactory.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-145">Wartość domyślna <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> używany do tworzenia zadań kontynuacji z Ta fabryka zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-145">The default <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> to use when creating continuation tasks with this TaskFactory.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-146">Wartość domyślna <see cref="T:System.Threading.Tasks.TaskScheduler" /> na potrzeby zaplanować wszystkie zadania utworzone za pomocą tego fabryka zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-146">The default <see cref="T:System.Threading.Tasks.TaskScheduler" /> to use to schedule any Tasks created with this TaskFactory.</span></span> <span data-ttu-id="88ee9-147">Wartości null wskazuje, że TaskScheduler.Current powinny być używane.</span><span class="sxs-lookup"><span data-stu-id="88ee9-147">A null value indicates that TaskScheduler.Current should be used.</span></span></param>
        <summary><span data-ttu-id="88ee9-148">Inicjuje <see cref="T:System.Threading.Tasks.TaskFactory" /> wystąpienia z określoną konfiguracją.</span><span class="sxs-lookup"><span data-stu-id="88ee9-148">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory" /> instance with the specified configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-149">W tym konstruktorze <xref:System.Threading.Tasks.TaskCreationOptions> właściwość jest inicjowana na `creationOptions`, <xref:System.Threading.Tasks.TaskContinuationOptions> właściwość jest inicjowana na `continuationOptions`i <xref:System.Threading.Tasks.TaskScheduler> właściwość jest inicjowana na `scheduler`, chyba że jest ona pusta, w którym to przypadku Właściwość jest inicjowana do bieżącego harmonogramu (zobacz <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="88ee9-149">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's null, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-150"><paramref name="creationOptions" /> Argument określa nieprawidłowy <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="88ee9-150">The <paramref name="creationOptions" /> argument specifies an invalid <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> value.</span></span> <span data-ttu-id="88ee9-151">Aby uzyskać więcej informacji, zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-151">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />.</span></span>  
  
 <span data-ttu-id="88ee9-152">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-152">-or-</span></span>  
  
 <span data-ttu-id="88ee9-153"><paramref name="continuationOptions" /> Argument określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="88ee9-153">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88ee9-154">Pobiera token anulowania domyślny dla tej fabryki zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-154">Gets the default cancellation token for this task factory.</span></span></summary>
        <value><span data-ttu-id="88ee9-155">Domyślny token anulowania zadań dla tej fabryki zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-155">The default task cancellation token for this task factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-156">Ta właściwość zwraca wartość domyślna <xref:System.Threading.CancellationToken> która zostanie przypisana wszystkie zadania utworzone w tej fabryce, chyba że innego <xref:System.Threading.CancellationToken> jest jawnie określona podczas wywołania metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="88ee9-156">This property returns the default <xref:System.Threading.CancellationToken> that will be assigned to all tasks created by this factory, unless another <xref:System.Threading.CancellationToken> value is explicitly specified during the call to the factory methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskContinuationOptions ContinuationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskContinuationOptions ContinuationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory.ContinuationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContinuationOptions As TaskContinuationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskContinuationOptions ContinuationOptions { System::Threading::Tasks::TaskContinuationOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88ee9-157">Pobiera domyślne opcje kontynuacji zadania dla tej fabryki zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-157">Gets the default task continuation options for this task factory.</span></span></summary>
        <value><span data-ttu-id="88ee9-158">Domyślne opcje kontynuacji zadań dla tej fabryki zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-158">The default task continuation options for this task factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-159">Wartość właściwości służy do tworzenia wszystkich zadań kontynuacji, chyba że inne opcje są jawnie określone podczas wywołania metody tej fabryki.</span><span class="sxs-lookup"><span data-stu-id="88ee9-159">The property value is used to create all continuation tasks, unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAll">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88ee9-160">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-160">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task[]&gt; continuationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task[]&gt; continuationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationAction As Action(Of Task())) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^&gt; ^ continuationAction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task[]&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="88ee9-161">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-161">The array of tasks from which to continue.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-162">Delegat akcji do wykonania, gdy wszystkie zadania w <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-162">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <summary><span data-ttu-id="88ee9-163">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-163">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-164">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-164">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-165"><xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> Wykonuje metodę `continuationAction` delegata, gdy wszystkie zadania w programie `tasks` tablicy została ukończona, niezależnie od ich stanami ukończenia.</span><span class="sxs-lookup"><span data-stu-id="88ee9-165">The <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method executes the `continuationAction` delegate when all tasks in the `tasks` array have completed, regardless of their completion status.</span></span>  
  
 <span data-ttu-id="88ee9-166">Wyjątków zgłaszanych przez zadania w `tasks` tablicy nie są dostępne dla zadania kontynuacji za pośrednictwem Obsługa wyjątków strukturalnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-166">Exceptions thrown by tasks in the `tasks` array are not available to the continuation task through structured exception handling.</span></span> <span data-ttu-id="88ee9-167">Można określić, które wyjątek, sprawdzając <xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=nameWithType> właściwości każdego zadania w `tasks` tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-167">You can determine which exceptions were thrown by examining the <xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=nameWithType> property of each task in the `tasks` array.</span></span> <span data-ttu-id="88ee9-168">Umożliwia strukturze obsługi wyjątków, aby obsługa wyjątków zgłaszanych przez zadania w `tasks` tablicy, należy wywołać <xref:System.Threading.Tasks.Task.WaitAll%28System.Threading.Tasks.Task%5B%5D%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="88ee9-168">To use structured exception handling to handle exceptions thrown by tasks in the `tasks` array, call the <xref:System.Threading.Tasks.Task.WaitAll%28System.Threading.Tasks.Task%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88ee9-169">Poniższy przykład powoduje uruchomienie poszczególnych zadań, które użycie wyrażenia regularnego, aby określić liczbę słów w zestawie plików tekstowych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-169">The following example launches separate tasks that use a regular expression to count the number of words in a set of text files.</span></span> <span data-ttu-id="88ee9-170"><xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> Metoda jest używana do uruchomienia zadania, które wyświetla całkowitą wyrazów po zakończeniu poprzedzających zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-170">The <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method is used to launch a task that displays the total word count when all the antecedent tasks have completed.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.ContinueWhenAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.continuewhenall/cs/continuewhenall1.cs#1)]
 [!code-vb[System.Threading.Tasks.Task.ContinueWhenAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.continuewhenall/vb/continuewhenall1.vb#1)]  
  
 <span data-ttu-id="88ee9-171">Wywołanie zadania kontynuacji <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType> — metoda nie zezwala na jego obsługa wyjątków zgłaszanych przez zadania poprzedzających, więc przykładzie <xref:System.Threading.Tasks.Task.Status%2A?displayProperty=nameWithType> właściwości każdego poprzedzających zadania, aby określić, czy zadanie zakończyło się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-171">The call to the continuation task's <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType> method does not allow it to handle exceptions thrown by the antecedent tasks, so the example examines the <xref:System.Threading.Tasks.Task.Status%2A?displayProperty=nameWithType> property of each antecedent task to determine whether the task succeeded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-172">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-172">An element in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-173"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-173">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-174">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-174">-or-</span></span>  
  
 <span data-ttu-id="88ee9-175"><paramref name="continuationAction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-175">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-176"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-176">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task[]&gt; continuationAction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task[]&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task[]&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="88ee9-177">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-177">The array of tasks from which to continue.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-178">Delegat akcji do wykonania, gdy wszystkie zadania w <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-178">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-179">Token anulowania do przypisania do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-179">The cancellation token to assign to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="88ee9-180">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-180">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-181">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-181">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-182">The [\], Action(Task\<xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%2CSystem.Threading.CancellationToken%29> method executes the `continuationAction` delegate when all tasks in the `tasks` array have completed, regardless of their completion status.</span><span class="sxs-lookup"><span data-stu-id="88ee9-182">The [\], Action(Task\<xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%2CSystem.Threading.CancellationToken%29> method executes the `continuationAction` delegate when all tasks in the `tasks` array have completed, regardless of their completion status.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88ee9-183">Poniższy przykład tworzy token anulowania, który przekazuje do poszczególnych zadań, które użycie wyrażenia regularnego, aby określić liczbę słów w zestawie plików tekstowych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-183">The following example creates a cancellation token, which it passes to separate tasks that use a regular expression to count the number of words in a set of text files.</span></span> <span data-ttu-id="88ee9-184">Token anulowania jest ustawiona, jeśli nie można odnaleźć pliku.</span><span class="sxs-lookup"><span data-stu-id="88ee9-184">The cancellation token is set if a file cannot be found.</span></span> <span data-ttu-id="88ee9-185">[\], Akcja (zadanie\<xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A > Metoda jest używana do uruchomienia zadania, które wyświetla całkowitą wyrazów po zakończeniu poprzedzających zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-185">The [\], Action(Task\<xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method is used to launch a task that displays the total word count when all the antecedent tasks have completed.</span></span> <span data-ttu-id="88ee9-186">Jeśli ustawiono token anulowania, co oznacza, że co najmniej jedno zadanie zostało anulowane, obsługuje on <xref:System.AggregateException> wyjątek i wyświetla komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-186">If the cancellation token is set, which indicates that one or more tasks have been cancelled, it handles the <xref:System.AggregateException> exception and displays an error message.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.ContinueWhenAll#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.continuewhenall/cs/continuewhenall2.cs#2)]
 [!code-vb[System.Threading.Tasks.Task.ContinueWhenAll#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.continuewhenall/vb/continuewhenall2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-187">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-187">An element in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
 <span data-ttu-id="88ee9-188">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-188">-or-</span></span>  
  
 <span data-ttu-id="88ee9-189"><see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-189">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-190"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-190">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-191">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-191">-or-</span></span>  
  
 <span data-ttu-id="88ee9-192"><paramref name="continuationAction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-192">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-193"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-193">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task[]&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task[]&gt; continuationAction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationAction As Action(Of Task()), continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^&gt; ^ continuationAction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task[]&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="88ee9-194">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-194">The array of tasks from which to continue.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-195">Delegat akcji do wykonania, gdy wszystkie zadania w <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-195">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-196">Bitowe połączenie wartości wyliczenia, które kontrolują zachowanie nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-196">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span></span> <span data-ttu-id="88ee9-197">NotOn * i * zadziała tylko elementy członkowskie nie są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="88ee9-197">The NotOn* and OnlyOn* members are not supported.</span></span></param>
        <summary><span data-ttu-id="88ee9-198">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-198">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-199">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-199">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-200">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-200">An element in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-201"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-201">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-202">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-202">-or-</span></span>  
  
 <span data-ttu-id="88ee9-203"><paramref name="continuationAction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-203">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-204"><paramref name="continuationOptions" /> Argument określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="88ee9-204">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-205"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-205">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task[]&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task[]&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task[]&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="88ee9-206">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-206">The array of tasks from which to continue.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-207">Delegat akcji do wykonania, gdy wszystkie zadania w <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-207">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-208">Token anulowania do przypisania do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-208">The cancellation token to assign to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-209">Bitowe połączenie wartości wyliczenia, które kontrolują zachowanie nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-209">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-210">Obiekt, który służy do planowania nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-210">The object that is used to schedule the new continuation task.</span></span></param>
        <summary><span data-ttu-id="88ee9-211">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-211">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-212">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-212">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-213"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-213">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-214">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-214">-or-</span></span>  
  
 <span data-ttu-id="88ee9-215"><paramref name="continuationAction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-215">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-216">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-216">-or-</span></span>  
  
 <span data-ttu-id="88ee9-217"><paramref name="scheduler" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-217">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-218"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-218">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt; continuationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[]&gt; continuationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationAction As Action(Of Task(Of TAntecedentResult)())) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^&gt; ^ continuationAction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-219">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-219">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-220">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-220">The array of tasks from which to continue.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-221">Delegat akcji do wykonania, gdy wszystkie zadania w <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-221">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <summary><span data-ttu-id="88ee9-222">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-222">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-223">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-223">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-224">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-224">An element in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-225"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-225">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-226">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-226">-or-</span></span>  
  
 <span data-ttu-id="88ee9-227"><paramref name="continuationAction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-227">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-228"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-228">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt; continuationAction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[]&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-229">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-229">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-230">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-230">The array of tasks from which to continue.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-231">Delegat akcji do wykonania, gdy wszystkie zadania w <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-231">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-232">Token anulowania do przypisania do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-232">The cancellation token to assign to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="88ee9-233">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-233">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-234">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-234">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-235">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-235">An element in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
 <span data-ttu-id="88ee9-236">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-236">-or-</span></span>  
  
 <span data-ttu-id="88ee9-237"><see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-237">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-238"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-238">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-239">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-239">-or-</span></span>  
  
 <span data-ttu-id="88ee9-240"><paramref name="continuationAction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-240">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-241"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-241">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[]&gt; continuationAction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationAction As Action(Of Task(Of TAntecedentResult)()), continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^&gt; ^ continuationAction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-242">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-242">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-243">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-243">The array of tasks from which to continue.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-244">Delegat akcji do wykonania, gdy wszystkie zadania w <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-244">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-245">Bitowe połączenie wartości wyliczenia, które kontrolują zachowanie nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-245">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span></span> <span data-ttu-id="88ee9-246">NotOn * i * zadziała tylko elementy członkowskie nie są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="88ee9-246">The NotOn* and OnlyOn* members are not supported.</span></span></param>
        <summary><span data-ttu-id="88ee9-247">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-247">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-248">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-248">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-249">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-249">An element in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-250"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-250">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-251">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-251">-or-</span></span>  
  
 <span data-ttu-id="88ee9-252"><paramref name="continuationAction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-252">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-253"><paramref name="continuationOptions" /> Argument określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="88ee9-253">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-254"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-254">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[]&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-255">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-255">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-256">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-256">The array of tasks from which to continue.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-257">Delegat akcji do wykonania, gdy wszystkie zadania w <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-257">The action delegate to execute when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-258">Token anulowania do przypisania do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-258">The cancellation token to assign to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-259">Bitowe połączenie wartości wyliczenia, które kontrolują zachowanie nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-259">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span></span> <span data-ttu-id="88ee9-260">NotOn * i * zadziała tylko elementy członkowskie nie są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="88ee9-260">The NotOn* and OnlyOn* members are not supported.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-261">Obiekt, który służy do planowania nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-261">The object that is used to schedule the new continuation task.</span></span></param>
        <summary><span data-ttu-id="88ee9-262">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-262">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-263">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-263">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-264"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-264">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-265">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-265">-or-</span></span>  
  
 <span data-ttu-id="88ee9-266"><paramref name="continuationAction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-266">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-267">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-267">-or-</span></span>  
  
 <span data-ttu-id="88ee9-268"><paramref name="scheduler" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-268">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-269"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-269">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !!TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TResult) (tasks As Task(), continuationFunction As Func(Of Task(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-270">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzonego zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-270">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-271">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-271">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-272">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-272">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <summary><span data-ttu-id="88ee9-273">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-273">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-274">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-274">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-275">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-275">An element in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-276"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-276">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-277">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-277">-or-</span></span>  
  
 <span data-ttu-id="88ee9-278"><paramref name="continuationFunction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-278">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-279"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-279">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-280">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzonego zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-280">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-281">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-281">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-282">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-282">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-283">Token anulowania do przypisania do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-283">The cancellation token to assign to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="88ee9-284">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-284">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-285">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-285">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-286">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-286">An element in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
 <span data-ttu-id="88ee9-287">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-287">-or-</span></span>  
  
 <span data-ttu-id="88ee9-288"><see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-288">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-289"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-289">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-290">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-290">-or-</span></span>  
  
 <span data-ttu-id="88ee9-291"><paramref name="continuationFunction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-291">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-292"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-292">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !!TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TResult) (tasks As Task(), continuationFunction As Func(Of Task(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-293">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzonego zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-293">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-294">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-294">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-295">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-295">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-296">Bitowe połączenie wartości wyliczenia, które kontrolują zachowanie nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-296">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span></span> <span data-ttu-id="88ee9-297">NotOn * i * zadziała tylko elementy członkowskie nie są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="88ee9-297">The NotOn* and OnlyOn* members are not supported.</span></span></param>
        <summary><span data-ttu-id="88ee9-298">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-298">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-299">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-299">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-300">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-300">An element in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-301"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-301">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-302">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-302">-or-</span></span>  
  
 <span data-ttu-id="88ee9-303"><paramref name="continuationFunction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-303">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-304"><paramref name="continuationOptions" /> Argument określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="88ee9-304">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-305"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-305">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-306">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzonego zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-306">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-307">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-307">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-308">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-308">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-309">Token anulowania do przypisania do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-309">The cancellation token to assign to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-310">Bitowe połączenie wartości wyliczenia, które kontrolują zachowanie nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-310">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span></span> <span data-ttu-id="88ee9-311">NotOn * i * zadziała tylko elementy członkowskie nie są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="88ee9-311">The NotOn* and OnlyOn* members are not supported.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-312">Obiekt, który służy do planowania nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-312">The object that is used to schedule the new continuation task.</span></span></param>
        <summary><span data-ttu-id="88ee9-313">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-313">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-314">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-314">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-315"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-315">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-316">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-316">-or-</span></span>  
  
 <span data-ttu-id="88ee9-317"><paramref name="continuationFunction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-317">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-318">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-318">-or-</span></span>  
  
 <span data-ttu-id="88ee9-319"><paramref name="scheduler" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-319">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-320"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-320">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !!TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult, TResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-321">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-321">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-322">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzonego zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-322">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-323">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-323">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-324">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-324">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <summary><span data-ttu-id="88ee9-325">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-325">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-326">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-326">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-327">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-327">An element in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-328"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-328">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-329">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-329">-or-</span></span>  
  
 <span data-ttu-id="88ee9-330"><paramref name="continuationFunction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-330">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-331"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-331">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-332">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-332">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-333">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzonego zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-333">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-334">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-334">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-335">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-335">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-336">Token anulowania do przypisania do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-336">The cancellation token to assign to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="88ee9-337">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-337">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-338">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-338">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-339">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-339">An element in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
 <span data-ttu-id="88ee9-340">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-340">-or-</span></span>  
  
 <span data-ttu-id="88ee9-341"><see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-341">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-342"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-342">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-343">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-343">-or-</span></span>  
  
 <span data-ttu-id="88ee9-344"><paramref name="continuationFunction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-344">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-345"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-345">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !!TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult, TResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-346">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-346">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-347">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzonego zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-347">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-348">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-348">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-349">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-349">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-350">Bitowe połączenie wartości wyliczenia, które kontrolują zachowanie nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-350">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span></span> <span data-ttu-id="88ee9-351">NotOn * i * zadziała tylko elementy członkowskie nie są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="88ee9-351">The NotOn* and OnlyOn* members are not supported.</span></span></param>
        <summary><span data-ttu-id="88ee9-352">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-352">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-353">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-353">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-354">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-354">An element in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-355"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-355">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-356">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-356">-or-</span></span>  
  
 <span data-ttu-id="88ee9-357"><paramref name="continuationFunction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-357">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-358"><paramref name="continuationOptions" /> Argument określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="88ee9-358">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-359"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-359">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAll&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-360">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-360">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-361">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzonego zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-361">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created task.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-362">Tablica zadań, z którego można kontynuować.</span><span class="sxs-lookup"><span data-stu-id="88ee9-362">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-363">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span><span class="sxs-lookup"><span data-stu-id="88ee9-363">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-364">Token anulowania do przypisania do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-364">The cancellation token to assign to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-365">Bitowe połączenie wartości wyliczenia, które kontrolują zachowanie nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-365">A bitwise combination of the enumeration values that control the behavior of the new continuation task.</span></span> <span data-ttu-id="88ee9-366">NotOn * i * zadziała tylko elementy członkowskie nie są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="88ee9-366">The NotOn* and OnlyOn* members are not supported.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-367">Obiekt, który służy do planowania nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-367">The object that is used to schedule the new continuation task.</span></span></param>
        <summary><span data-ttu-id="88ee9-368">Tworzy zadanie kontynuacji, która rozpoczyna się po ukończeniu zestaw określonych zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-368">Creates a continuation task that starts when a set of specified tasks has completed.</span></span></summary>
        <returns><span data-ttu-id="88ee9-369">Nowe zadanie kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-369">The new continuation task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-370"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-370">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-371">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-371">-or-</span></span>  
  
 <span data-ttu-id="88ee9-372"><paramref name="continuationFunction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-372">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-373">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-373">-or-</span></span>  
  
 <span data-ttu-id="88ee9-374"><paramref name="scheduler" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-374">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-375"><paramref name="tasks" /> Tablica jest pusta lub zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-375">The <paramref name="tasks" /> array is empty or contains a null value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-376"><paramref name="continuationOptions" /> Argument określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="88ee9-376">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-377">Element <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-377">An element in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
 <span data-ttu-id="88ee9-378">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-378">-or-</span></span>  
  
 <span data-ttu-id="88ee9-379"><see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-379">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAny">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88ee9-380">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-380">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task&gt; continuationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task&gt; continuationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationAction As Action(Of Task)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task ^&gt; ^ continuationAction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="88ee9-381">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-381">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-382">Delegat akcji do wykonania, gdy jedno zadanie w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-382">The action delegate to execute when one task in the <c>tasks</c> array completes.</span></span></param>
        <summary><span data-ttu-id="88ee9-383">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-383">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-384">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-384">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="88ee9-385">Poniższy przykład przedstawia użycie `ContinueWhenAny` i `ContinueWhenAll`:</span><span class="sxs-lookup"><span data-stu-id="88ee9-385">The following example shows how to use `ContinueWhenAny` and `ContinueWhenAll`:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task#05](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task/cs/continuewhenmulti.cs#05)]
 [!code-vb[System.Threading.Tasks.Task#05](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task/vb/continuewhenmulti.vb#05)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-386">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-386">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-387"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-387">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-388">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-388">-or-</span></span>  
  
 <span data-ttu-id="88ee9-389"><paramref name="continuationAction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-389">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-390"><paramref name="tasks" /> Tablica zawiera <see langword="null" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="88ee9-390">The <paramref name="tasks" /> array contains a <see langword="null" /> value.</span></span>  
  
 <span data-ttu-id="88ee9-391">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-391">-or-</span></span>  
  
 <span data-ttu-id="88ee9-392"><paramref name="tasks" /> Tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-392">The <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task&gt; continuationAction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="88ee9-393">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-393">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-394">Delegat akcji do wykonania, gdy jedno zadanie w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-394">The action delegate to execute when one task in the <c>tasks</c> array completes.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-395"><see cref="T:System.Threading.CancellationToken" /> Który zostanie przypisany do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-395">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="88ee9-396">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-396">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-397">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-397">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-398">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-398">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
 <span data-ttu-id="88ee9-399">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-399">-or-</span></span>  
  
 <span data-ttu-id="88ee9-400"><paramref name="cancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-400"><paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-401"><paramref name="tasks" /> Tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-401">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="88ee9-402">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-402">-or-</span></span>  
  
 <span data-ttu-id="88ee9-403"><paramref name="continuationAction" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-403">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-404"><paramref name="tasks" /> Tablica zawiera <see langword="null" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="88ee9-404">The <paramref name="tasks" /> array contains a <see langword="null" /> value.</span></span>  
  
 <span data-ttu-id="88ee9-405">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-405">-or-</span></span>  
  
 <span data-ttu-id="88ee9-406"><paramref name="tasks" /> Tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-406">The <paramref name="tasks" /> array is empty .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task&gt; continuationAction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationAction As Action(Of Task), continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task ^&gt; ^ continuationAction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="88ee9-407">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-407">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-408">Delegat akcji do wykonania, gdy jedno zadanie w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-408">The action delegate to execute when one task in the <c>tasks</c> array completes.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-409"><see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> Wartość, która steruje zachowaniem utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-409">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-410">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-410">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-411">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-411">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-412">NotOn * i * zadziała tylko <xref:System.Threading.Tasks.TaskContinuationOptions>, którego ograniczenie, dla którego <xref:System.Threading.Tasks.TaskStatus> stanów utrzymania zostaną wykonane, są niedozwolone z ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="88ee9-412">The NotOn* and OnlyOn* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-413">Wyjątek zgłaszany, gdy jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-413">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-414">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-414">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-415">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-415">-or-</span></span>  
  
 <span data-ttu-id="88ee9-416">Wyjątek zgłaszany, gdy <paramref name="continuationAction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-416">The exception that is thrown when the <paramref name="continuationAction" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-417">Wyjątek zgłaszany, gdy <paramref name="continuationOptions" /> argument określa nieprawidłową wartość wyliczenie TaskContinuationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-417">The exception that is thrown when the <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-418">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-418">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-419">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-419">-or-</span></span>  
  
 <span data-ttu-id="88ee9-420">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-420">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action&lt;System.Threading.Tasks.Task&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="88ee9-421">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-421">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-422">Delegat akcji do wykonania, gdy jedno zadanie w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-422">The action delegate to execute when one task in the <c>tasks</c> array completes.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-423"><see cref="T:System.Threading.CancellationToken" /> Który zostanie przypisany do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-423">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-424"><see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> Wartość, która steruje zachowaniem utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-424">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-425"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Używany do zaplanowania utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-425">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-426">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-426">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-427">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-427">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-428">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-428">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-429">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-429">-or-</span></span>  
  
 <span data-ttu-id="88ee9-430">Wyjątek zgłaszany, gdy <paramref name="continuationAction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-430">The exception that is thrown when the <paramref name="continuationAction" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-431">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-431">-or-</span></span>  
  
 <span data-ttu-id="88ee9-432">Wyjątek zgłaszany, gdy <paramref name="scheduler" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-432">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-433">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-433">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-434">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-434">-or-</span></span>  
  
 <span data-ttu-id="88ee9-435">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-435">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt; continuationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;&gt; continuationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationAction As Action(Of Task(Of TAntecedentResult))) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ continuationAction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-436">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-436">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-437">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-437">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-438">Delegat akcji do wykonania, gdy jedno zadanie w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-438">The action delegate to execute when one task in the <c>tasks</c> array completes.</span></span></param>
        <summary><span data-ttu-id="88ee9-439">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-439">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-440">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-440">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-441">Wyjątek zgłaszany, gdy jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-441">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-442">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-442">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-443">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-443">-or-</span></span>  
  
 <span data-ttu-id="88ee9-444">Wyjątek zgłaszany, gdy <paramref name="continuationAction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-444">The exception that is thrown when the <paramref name="continuationAction" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-445">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-445">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-446">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-446">-or-</span></span>  
  
 <span data-ttu-id="88ee9-447">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-447">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt; continuationAction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-448">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-448">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-449">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-449">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-450">Delegat akcji do wykonania, gdy jedno zadanie w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-450">The action delegate to execute when one task in the <c>tasks</c> array completes.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-451"><see cref="T:System.Threading.CancellationToken" /> Który zostanie przypisany do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-451">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="88ee9-452">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-452">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-453">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-453">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-454">Wyjątek zgłaszany, gdy jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-454">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
 <span data-ttu-id="88ee9-455">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-455">-or-</span></span>  
  
 <span data-ttu-id="88ee9-456">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-456">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-457">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-457">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-458">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-458">-or-</span></span>  
  
 <span data-ttu-id="88ee9-459">Wyjątek zgłaszany, gdy <paramref name="continuationAction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-459">The exception that is thrown when the <paramref name="continuationAction" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-460">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-460">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-461">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-461">-or-</span></span>  
  
 <span data-ttu-id="88ee9-462">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-462">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;&gt; continuationAction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationAction As Action(Of Task(Of TAntecedentResult)), continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ continuationAction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-463">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-463">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-464">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-464">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-465">Delegat akcji do wykonania, gdy jedno zadanie w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-465">The action delegate to execute when one task in the <c>tasks</c> array completes.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-466"><see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> Wartość, która steruje zachowaniem utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-466">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-467">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-467">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-468">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-468">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-469">NotOn * i * zadziała tylko <xref:System.Threading.Tasks.TaskContinuationOptions>, którego ograniczenie, dla którego <xref:System.Threading.Tasks.TaskStatus> stanów utrzymania zostaną wykonane, są niedozwolone z ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="88ee9-469">The NotOn* and OnlyOn* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-470">Wyjątek zgłaszany, gdy jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-470">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-471">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-471">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-472">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-472">-or-</span></span>  
  
 <span data-ttu-id="88ee9-473">Wyjątek zgłaszany, gdy <paramref name="continuationAction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-473">The exception that is thrown when the <paramref name="continuationAction" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-474">Wyjątek zgłaszany, gdy <paramref name="continuationOptions" /> argument określa nieprawidłową wartość wyliczenie TaskContinuationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-474">The exception that is thrown when the <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-475">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-475">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-476">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-476">-or-</span></span>  
  
 <span data-ttu-id="88ee9-477">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-477">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Action&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-478">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-478">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-479">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-479">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationAction"><span data-ttu-id="88ee9-480">Delegat akcji do wykonania, gdy jedno zadanie w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-480">The action delegate to execute when one task in the <c>tasks</c> array completes.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-481"><see cref="T:System.Threading.CancellationToken" /> Który zostanie przypisany do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-481">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-482"><see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> Wartość, która steruje zachowaniem utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-482">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-483"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Używany do zaplanowania utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-483">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-484">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-484">Creates a continuation <see cref="T:System.Threading.Tasks.Task" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-485">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-485">The new continuation <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-486">NotOn * i * zadziała tylko <xref:System.Threading.Tasks.TaskContinuationOptions>, którego ograniczenie, dla którego <xref:System.Threading.Tasks.TaskStatus> stanów utrzymania zostaną wykonane, są niedozwolone z ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="88ee9-486">The NotOn* and OnlyOn* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-487">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-487">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-488">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-488">-or-</span></span>  
  
 <span data-ttu-id="88ee9-489">Wyjątek zgłaszany, gdy <paramref name="continuationAction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-489">The exception that is thrown when the <paramref name="continuationAction" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-490">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-490">-or-</span></span>  
  
 <span data-ttu-id="88ee9-491">Wyjątek zgłaszany, gdy <paramref name="scheduler" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-491">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-492">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-492">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-493">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-493">-or-</span></span>  
  
 <span data-ttu-id="88ee9-494">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-494">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !!TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TResult) (tasks As Task(), continuationFunction As Func(Of Task, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-495">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-495">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-496">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-496">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-497">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-497">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span></span></param>
        <summary><span data-ttu-id="88ee9-498">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task`1" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-498">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-499">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-499">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-500">Wyjątek zgłaszany, gdy jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-500">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-501">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-501">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-502">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-502">-or-</span></span>  
  
 <span data-ttu-id="88ee9-503">Wyjątek zgłaszany, gdy <paramref name="continuationFunction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-503">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-504">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-504">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-505">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-505">-or-</span></span>  
  
 <span data-ttu-id="88ee9-506">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-506">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-507">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-507">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-508">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-508">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-509">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-509">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-510"><see cref="T:System.Threading.CancellationToken" /> Który zostanie przypisany do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-510">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="88ee9-511">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task`1" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-511">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-512">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-512">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-513">Wyjątek zgłaszany, gdy jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-513">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
 <span data-ttu-id="88ee9-514">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-514">-or-</span></span>  
  
 <span data-ttu-id="88ee9-515">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-515">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-516">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-516">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-517">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-517">-or-</span></span>  
  
 <span data-ttu-id="88ee9-518">Wyjątek zgłaszany, gdy <paramref name="continuationFunction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-518">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-519">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-519">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-520">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-520">-or-</span></span>  
  
 <span data-ttu-id="88ee9-521">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-521">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !!TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TResult) (tasks As Task(), continuationFunction As Func(Of Task, TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-522">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-522">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-523">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-523">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-524">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-524">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-525"><see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> Wartość, która steruje zachowaniem utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-525">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-526">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task`1" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-526">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-527">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-527">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-528">NotOn * i * zadziała tylko <xref:System.Threading.Tasks.TaskContinuationOptions>, którego ograniczenie, dla którego <xref:System.Threading.Tasks.TaskStatus> stanów utrzymania zostaną wykonane, są niedozwolone z ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="88ee9-528">The NotOn* and OnlyOn* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-529">Wyjątek zgłaszany, gdy jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-529">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-530">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-530">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-531">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-531">-or-</span></span>  
  
 <span data-ttu-id="88ee9-532">Wyjątek zgłaszany, gdy <paramref name="continuationFunction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-532">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-533">Wyjątek zgłaszany, gdy <paramref name="continuationOptions" /> argument określa nieprawidłową wartość wyliczenie TaskContinuationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-533">The exception that is thrown when the <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-534">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-534">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-535">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-535">-or-</span></span>  
  
 <span data-ttu-id="88ee9-536">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-536">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TResult&gt; (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TResult&gt;(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-537">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-537">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-538">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-538">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-539">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-539">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-540"><see cref="T:System.Threading.CancellationToken" /> Który zostanie przypisany do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-540">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-541"><see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> Wartość, która steruje zachowaniem utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-541">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-542"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Używany do zaplanowania utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-542">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-543">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task`1" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-543">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-544">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-544">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-545">NotOn * i * zadziała tylko <xref:System.Threading.Tasks.TaskContinuationOptions>, którego ograniczenie, dla którego <xref:System.Threading.Tasks.TaskStatus> stanów utrzymania zostaną wykonane, są niedozwolone z ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="88ee9-545">The NotOn* and OnlyOn* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-546">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-546">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-547">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-547">-or-</span></span>  
  
 <span data-ttu-id="88ee9-548">Wyjątek zgłaszany, gdy <paramref name="continuationFunction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-548">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-549">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-549">-or-</span></span>  
  
 <span data-ttu-id="88ee9-550">Wyjątek zgłaszany, gdy <paramref name="scheduler" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-550">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-551">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-551">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-552">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-552">-or-</span></span>  
  
 <span data-ttu-id="88ee9-553">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-553">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !!TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult, TResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-554">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-554">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-555">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-555">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-556">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-556">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-557">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-557">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span></span></param>
        <summary><span data-ttu-id="88ee9-558">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task`1" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-558">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-559">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-559">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-560">Wyjątek zgłaszany, gdy jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-560">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-561">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-561">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-562">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-562">-or-</span></span>  
  
 <span data-ttu-id="88ee9-563">Wyjątek zgłaszany, gdy <paramref name="continuationFunction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-563">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-564">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-564">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-565">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-565">-or-</span></span>  
  
 <span data-ttu-id="88ee9-566">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-566">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-567">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-567">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-568">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-568">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-569">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-569">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-570">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-570">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-571"><see cref="T:System.Threading.CancellationToken" /> Który zostanie przypisany do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-571">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="88ee9-572">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task`1" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-572">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-573">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-573">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-574">Wyjątek zgłaszany, gdy jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-574">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
 <span data-ttu-id="88ee9-575">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-575">-or-</span></span>  
  
 <span data-ttu-id="88ee9-576">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-576">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-577">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-577">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-578">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-578">-or-</span></span>  
  
 <span data-ttu-id="88ee9-579">Wyjątek zgłaszany, gdy <paramref name="continuationFunction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-579">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-580">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-580">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-581">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-581">-or-</span></span>  
  
 <span data-ttu-id="88ee9-582">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-582">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !!TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult, TResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-583">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-583">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-584">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-584">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-585">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-585">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-586">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-586">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-587"><see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> Wartość, która steruje zachowaniem utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-587">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-588">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task`1" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-588">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-589">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-589">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-590">NotOn * i * zadziała tylko <xref:System.Threading.Tasks.TaskContinuationOptions>, którego ograniczenie, dla którego <xref:System.Threading.Tasks.TaskStatus> stanów utrzymania zostaną wykonane, są niedozwolone z ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="88ee9-590">The NotOn* and OnlyOn* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-591">Wyjątek zgłaszany, gdy jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-591">The exception that is thrown when one of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-592">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-592">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-593">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-593">-or-</span></span>  
  
 <span data-ttu-id="88ee9-594">Wyjątek zgłaszany, gdy <paramref name="continuationFunction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-594">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-595">Wyjątek zgłaszany, gdy <paramref name="continuationOptions" /> argument określa nieprawidłową wartość wyliczenie TaskContinuationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-595">The exception that is thrown when the <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-596">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-596">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-597">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-597">-or-</span></span>  
  
 <span data-ttu-id="88ee9-598">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-598">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult,TResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ContinueWhenAny&lt;TAntecedentResult, TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !!TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="88ee9-599">Typ wyniku Antecedent <c>zadania</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-599">The type of the result of the antecedent <c>tasks</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-600">Typ wyniku, który jest zwracany przez <c>continuationFunction</c> delegować i skojarzone z utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-600">The type of the result that is returned by the <c>continuationFunction</c> delegate and associated with the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="88ee9-601">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-601">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="88ee9-602">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="88ee9-602">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-603"><see cref="T:System.Threading.CancellationToken" /> Który zostanie przypisany do nowego zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-603">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="88ee9-604"><see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> Wartość, która steruje zachowaniem utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-604">The <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value that controls the behavior of the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-605"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Używany do zaplanowania utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-605">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-606">Tworzy utrzymania <see cref="T:System.Threading.Tasks.Task`1" /> który zostanie uruchomiony po zakończeniu zadań wiążących się z podanego zestawu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-606">Creates a continuation <see cref="T:System.Threading.Tasks.Task`1" /> that will be started upon the completion of any Task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="88ee9-607">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-607">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-608">NotOn * i * zadziała tylko <xref:System.Threading.Tasks.TaskContinuationOptions>, którego ograniczenie, dla którego <xref:System.Threading.Tasks.TaskStatus> stanów utrzymania zostaną wykonane, są niedozwolone z ContinueWhenAny.</span><span class="sxs-lookup"><span data-stu-id="88ee9-608">The NotOn* and OnlyOn* <xref:System.Threading.Tasks.TaskContinuationOptions>, which constrain for which <xref:System.Threading.Tasks.TaskStatus> states a continuation will be executed, are illegal with ContinueWhenAny.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-609">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablicy ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-609">The exception that is thrown when the <paramref name="tasks" /> array is null.</span></span>  
  
 <span data-ttu-id="88ee9-610">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-610">-or-</span></span>  
  
 <span data-ttu-id="88ee9-611">Wyjątek zgłaszany, gdy <paramref name="continuationFunction" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-611">The exception that is thrown when the <paramref name="continuationFunction" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-612">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-612">-or-</span></span>  
  
 <span data-ttu-id="88ee9-613">Wyjątek zgłaszany, gdy <paramref name="scheduler" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-613">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88ee9-614">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica zawiera wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-614">The exception that is thrown when the <paramref name="tasks" /> array contains a null value.</span></span>  
  
 <span data-ttu-id="88ee9-615">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-615">-or-</span></span>  
  
 <span data-ttu-id="88ee9-616">Wyjątek zgłaszany, gdy <paramref name="tasks" /> tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="88ee9-616">The exception that is thrown when the <paramref name="tasks" /> array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskCreationOptions CreationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory.CreationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreationOptions As TaskCreationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskCreationOptions CreationOptions { System::Threading::Tasks::TaskCreationOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskCreationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88ee9-617">Pobiera domyślne opcje tworzenia zadań dla tej fabryki zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-617">Gets the default task creation options for this task factory.</span></span></summary>
        <value><span data-ttu-id="88ee9-618">Domyślne opcje tworzenia zadań dla tej fabryki zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-618">The default task creation options for this task factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-619">Wartość właściwości służy do tworzenia wszystkich zadań, o ile inne opcje są jawnie określony podczas wywołania metody tej fabryki.</span><span class="sxs-lookup"><span data-stu-id="88ee9-619">The property value is used to create all tasks, unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromAsync">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88ee9-620">Tworzy <see cref="T:System.Threading.Tasks.Task" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-620">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync (IAsyncResult asyncResult, Action&lt;IAsyncResult&gt; endMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync(class System.IAsyncResult asyncResult, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult})" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Action(Of IAsyncResult)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FromAsync(IAsyncResult ^ asyncResult, Action&lt;IAsyncResult ^&gt; ^ endMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="88ee9-621">IAsyncResult, w których zakończenia zdarzenia powinny wywoływać przetwarzania <c>endMethod</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-621">The IAsyncResult whose completion should trigger the processing of the <c>endMethod</c>.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-622">Delegat akcji, która przetwarza ukończonej <c>asyncResult</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-622">The action delegate that processes the completed <c>asyncResult</c>.</span></span></param>
        <summary><span data-ttu-id="88ee9-623">Tworzy <see cref="T:System.Threading.Tasks.Task" /> , który jest wykonywany po określonej akcji — metoda end <see cref="T:System.IAsyncResult" /> zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-623">Creates a <see cref="T:System.Threading.Tasks.Task" /> that executes an end method action when a specified <see cref="T:System.IAsyncResult" /> completes.</span></span></summary>
        <returns><span data-ttu-id="88ee9-624">A <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-624">A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="88ee9-625"><xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> Overloads które trwają `asyncResult` nie są efektywne przeciążeń, które przyjmują parametr `beginMethod` parametru.</span><span class="sxs-lookup"><span data-stu-id="88ee9-625">The <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> overloads that take an `asyncResult` parameter are not as efficient as the overloads that take a `beginMethod` parameter.</span></span> <span data-ttu-id="88ee9-626">Jeśli wydajność jest problem, użyj przeciążeń, które zapewniają `beginMethod` / `endMethod` wzorca.</span><span class="sxs-lookup"><span data-stu-id="88ee9-626">If performance is an issue, use the overloads that provide the `beginMethod`/`endMethod` pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-627">Wyjątek zgłaszany, gdy <paramref name="asyncResult" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-627">The exception that is thrown when the <paramref name="asyncResult" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-628">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-628">-or-</span></span>  
  
 <span data-ttu-id="88ee9-629">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-629">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginMethod"><span data-ttu-id="88ee9-630">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-630">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-631">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-631">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-632">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-632">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <summary><span data-ttu-id="88ee9-633">Tworzy <see cref="T:System.Threading.Tasks.Task" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-633">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-634">Utworzony <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-634">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-635">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-635">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span>  <span data-ttu-id="88ee9-636">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-636">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-637">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-637">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-638">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-638">-or-</span></span>  
  
 <span data-ttu-id="88ee9-639">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-639">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync (IAsyncResult asyncResult, Action&lt;IAsyncResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync(class System.IAsyncResult asyncResult, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Action(Of IAsyncResult), creationOptions As TaskCreationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FromAsync(IAsyncResult ^ asyncResult, Action&lt;IAsyncResult ^&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="88ee9-640">IAsyncResult, w których zakończenia zdarzenia powinny wywoływać przetwarzania <c>endMethod</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-640">The IAsyncResult whose completion should trigger the processing of the <c>endMethod</c>.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-641">Delegat akcji, która przetwarza ukończonej <c>asyncResult</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-641">The action delegate that processes the completed <c>asyncResult</c>.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-642">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-642">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-643">Tworzy <see cref="T:System.Threading.Tasks.Task" /> , który jest wykonywany po określonej akcji — metoda end <see cref="T:System.IAsyncResult" /> zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-643">Creates a <see cref="T:System.Threading.Tasks.Task" /> that executes an end method action when a specified <see cref="T:System.IAsyncResult" /> completes.</span></span></summary>
        <returns><span data-ttu-id="88ee9-644">A <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-644">A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="88ee9-645"><xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> Overloads które trwają `asyncResult` nie są efektywne przeciążeń, które przyjmują parametr `beginMethod` parametru.</span><span class="sxs-lookup"><span data-stu-id="88ee9-645">The <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> overloads that take an `asyncResult` parameter are not as efficient as the overloads that take a `beginMethod` parameter.</span></span> <span data-ttu-id="88ee9-646">Jeśli wydajność jest problem, użyj przeciążeń, które zapewniają `beginMethod` / `endMethod` wzorca.</span><span class="sxs-lookup"><span data-stu-id="88ee9-646">If performance is an issue, use the overloads that provide the `beginMethod`/`endMethod` pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-647">Wyjątek zgłaszany, gdy <paramref name="asyncResult" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-647">The exception that is thrown when the <paramref name="asyncResult" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-648">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-648">-or-</span></span>  
  
 <span data-ttu-id="88ee9-649">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-649">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-650">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-650">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-651">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-651">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), state As Object, creationOptions As TaskCreationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="beginMethod"><span data-ttu-id="88ee9-652">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-652">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-653">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-653">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-654">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-654">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-655">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-655">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-656">Tworzy <see cref="T:System.Threading.Tasks.Task" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-656">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-657">Utworzony <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-657">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-658">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-658">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-659">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-659">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="88ee9-660"><xref:System.Threading.Tasks.TaskCreationOptions> Wartości <xref:System.Threading.Tasks.TaskCreationOptions.PreferFairness>, <xref:System.Threading.Tasks.TaskCreationOptions.LongRunning> i <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent> są wszystkie wykluczają się wzajemnie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-660">The <xref:System.Threading.Tasks.TaskCreationOptions> values <xref:System.Threading.Tasks.TaskCreationOptions.PreferFairness>, <xref:System.Threading.Tasks.TaskCreationOptions.LongRunning> and <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent> are all mutually exclusive.</span></span> <span data-ttu-id="88ee9-661">W metodach metody FromAsync albo `LongRunning` lub `AttachedToParent` samodzielnie spowoduje <xref:System.ArgumentOutOfRangeException> zostanie wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="88ee9-661">In the FromAsync methods, either `LongRunning` or `AttachedToParent` by themselves will cause an <xref:System.ArgumentOutOfRangeException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-662">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-662">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-663">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-663">-or-</span></span>  
  
 <span data-ttu-id="88ee9-664">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-664">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-665">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-665">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync (IAsyncResult asyncResult, Action&lt;IAsyncResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync(class System.IAsyncResult asyncResult, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Action(Of IAsyncResult), creationOptions As TaskCreationOptions, scheduler As TaskScheduler) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FromAsync(IAsyncResult ^ asyncResult, Action&lt;IAsyncResult ^&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="88ee9-666">IAsyncResult, w których zakończenia zdarzenia powinny wywoływać przetwarzania <c>endMethod</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-666">The IAsyncResult whose completion should trigger the processing of the <c>endMethod</c>.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-667">Delegat akcji, która przetwarza ukończonej <c>asyncResult</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-667">The action delegate that processes the completed <c>asyncResult</c>.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-668">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-668">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-669"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Używany można zaplanować zadanie, które wykonuje metodę end.</span><span class="sxs-lookup"><span data-stu-id="88ee9-669">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the task that executes the end method.</span></span></param>
        <summary><span data-ttu-id="88ee9-670">Tworzy <see cref="T:System.Threading.Tasks.Task" /> , który jest wykonywany po określonej akcji — metoda end <see cref="T:System.IAsyncResult" /> zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-670">Creates a <see cref="T:System.Threading.Tasks.Task" /> that executes an end method action when a specified <see cref="T:System.IAsyncResult" /> completes.</span></span></summary>
        <returns><span data-ttu-id="88ee9-671">Utworzony <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-671">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="88ee9-672"><xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> Overloads które trwają `asyncResult` nie są efektywne przeciążeń, które przyjmują parametr `beginMethod` parametru.</span><span class="sxs-lookup"><span data-stu-id="88ee9-672">The <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> overloads that take an `asyncResult` parameter are not as efficient as the overloads that take a `beginMethod` parameter.</span></span> <span data-ttu-id="88ee9-673">Jeśli wydajność jest problem, użyj przeciążeń, które zapewniają `beginMethod` / `endMethod` wzorca.</span><span class="sxs-lookup"><span data-stu-id="88ee9-673">If performance is an issue, use the overloads that provide the `beginMethod`/`endMethod` pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-674">Wyjątek zgłaszany, gdy <paramref name="asyncResult" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-674">The exception that is thrown when the <paramref name="asyncResult" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-675">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-675">-or-</span></span>  
  
 <span data-ttu-id="88ee9-676">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-676">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-677">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-677">-or-</span></span>  
  
 <span data-ttu-id="88ee9-678">Wyjątek zgłaszany, gdy <paramref name="scheduler" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-678">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-679">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-679">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-680">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-680">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-681">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-681">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, !!TArg1 arg1, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), arg1 As TArg1, state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, TArg1 arg1, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="88ee9-682">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-682">The type of the first argument passed to the <c>beginMethod</c> delegate.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-683">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-683">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-684">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-684">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="88ee9-685">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-685">The first argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-686">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-686">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <summary><span data-ttu-id="88ee9-687">Tworzy <see cref="T:System.Threading.Tasks.Task" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-687">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-688">Utworzony <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-688">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-689">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-689">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-690">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-690">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-691">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-691">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-692">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-692">-or-</span></span>  
  
 <span data-ttu-id="88ee9-693">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-693">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, !!TArg1 arg1, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), arg1 As TArg1, state As Object, creationOptions As TaskCreationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, TArg1 arg1, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="88ee9-694">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-694">The type of the first argument passed to the <c>beginMethod</c> delegate.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-695">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-695">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-696">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-696">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="88ee9-697">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-697">The first argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-698">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-698">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-699">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-699">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-700">Tworzy <see cref="T:System.Threading.Tasks.Task" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-700">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-701">Utworzony <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-701">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-702">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-702">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-703">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-703">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-704">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-704">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-705">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-705">-or-</span></span>  
  
 <span data-ttu-id="88ee9-706">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-706">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-707">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-707">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-708">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-708">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-709">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-709">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TResult&gt;(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TResult) (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-710">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-710">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="asyncResult"><span data-ttu-id="88ee9-711">IAsyncResult, w których zakończenia zdarzenia powinny wywoływać przetwarzania <c>endMethod</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-711">The IAsyncResult whose completion should trigger the processing of the <c>endMethod</c>.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-712">Delegat funkcji, która przetwarza ukończonej <c>asyncResult</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-712">The function delegate that processes the completed <c>asyncResult</c>.</span></span></param>
        <summary><span data-ttu-id="88ee9-713">Tworzy <see cref="T:System.Threading.Tasks.Task`1" /> , który jest wykonywany funkcja metody end po określonej <see cref="T:System.IAsyncResult" /> zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-713">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span></span></summary>
        <returns><span data-ttu-id="88ee9-714">A <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-714">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="88ee9-715"><xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> Overloads które trwają `asyncResult` nie są efektywne przeciążeń, które przyjmują parametr `beginMethod` parametru.</span><span class="sxs-lookup"><span data-stu-id="88ee9-715">The <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> overloads that take an `asyncResult` parameter are not as efficient as the overloads that take a `beginMethod` parameter.</span></span> <span data-ttu-id="88ee9-716">Jeśli wydajność jest problem, użyj przeciążeń, które zapewniają `beginMethod` / `endMethod` wzorca.</span><span class="sxs-lookup"><span data-stu-id="88ee9-716">If performance is an issue, use the overloads that provide the `beginMethod`/`endMethod` pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-717">Wyjątek zgłaszany, gdy <paramref name="asyncResult" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-717">The exception that is thrown when the <paramref name="asyncResult" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-718">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-718">-or-</span></span>  
  
 <span data-ttu-id="88ee9-719">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-719">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TResult&gt;(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TResult) (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-720">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-720">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-721">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-721">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-722">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-722">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-723">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-723">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <summary><span data-ttu-id="88ee9-724">Tworzy <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-724">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-725">Utworzony <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-725">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-726">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-726">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-727">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-727">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-728">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-728">-or-</span></span>  
  
 <span data-ttu-id="88ee9-729">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-729">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TResult&gt;(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TResult) (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-730">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-730">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="asyncResult"><span data-ttu-id="88ee9-731">IAsyncResult, w których zakończenia zdarzenia powinny wywoływać przetwarzania <c>endMethod</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-731">The IAsyncResult whose completion should trigger the processing of the <c>endMethod</c>.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-732">Delegat funkcji, która przetwarza ukończonej <c>asyncResult</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-732">The function delegate that processes the completed <c>asyncResult</c>.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-733">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-733">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-734">Tworzy <see cref="T:System.Threading.Tasks.Task`1" /> , który jest wykonywany funkcja metody end po określonej <see cref="T:System.IAsyncResult" /> zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-734">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span></span></summary>
        <returns><span data-ttu-id="88ee9-735">A <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-735">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="88ee9-736"><xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> Overloads które trwają `asyncResult` nie są efektywne przeciążeń, które przyjmują parametr `beginMethod` parametru.</span><span class="sxs-lookup"><span data-stu-id="88ee9-736">The <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> overloads that take an `asyncResult` parameter are not as efficient as the overloads that take a `beginMethod` parameter.</span></span> <span data-ttu-id="88ee9-737">Jeśli wydajność jest problem, użyj przeciążeń, które zapewniają `beginMethod` / `endMethod` wzorca.</span><span class="sxs-lookup"><span data-stu-id="88ee9-737">If performance is an issue, use the overloads that provide the `beginMethod`/`endMethod` pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-738">Wyjątek zgłaszany, gdy <paramref name="asyncResult" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-738">The exception that is thrown when the <paramref name="asyncResult" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-739">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-739">-or-</span></span>  
  
 <span data-ttu-id="88ee9-740">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-740">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-741">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-741">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-742">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-742">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-743">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-743">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TResult&gt;(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TResult) (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-744">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-744">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-745">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-745">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-746">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-746">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-747">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-747">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-748">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-748">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-749">Tworzy <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-749">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-750">Utworzony <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-750">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-751">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-751">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-752">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-752">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-753">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-753">-or-</span></span>  
  
 <span data-ttu-id="88ee9-754">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-754">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-755">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-755">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-756">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-756">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-757">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-757">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TResult&gt; (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TResult&gt;(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TResult) (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions, scheduler As TaskScheduler) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-758">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-758">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="asyncResult"><span data-ttu-id="88ee9-759">IAsyncResult, w których zakończenia zdarzenia powinny wywoływać przetwarzania <c>endMethod</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-759">The IAsyncResult whose completion should trigger the processing of the <c>endMethod</c>.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-760">Delegat funkcji, która przetwarza ukończonej <c>asyncResult</c>.</span><span class="sxs-lookup"><span data-stu-id="88ee9-760">The function delegate that processes the completed <c>asyncResult</c>.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-761">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-761">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-762"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Używany można zaplanować zadanie, które wykonuje metodę end.</span><span class="sxs-lookup"><span data-stu-id="88ee9-762">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the task that executes the end method.</span></span></param>
        <summary><span data-ttu-id="88ee9-763">Tworzy <see cref="T:System.Threading.Tasks.Task`1" /> , który jest wykonywany funkcja metody end po określonej <see cref="T:System.IAsyncResult" /> zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-763">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span></span></summary>
        <returns><span data-ttu-id="88ee9-764">A <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-764">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="88ee9-765"><xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> Overloads które trwają `asyncResult` nie są efektywne przeciążeń, które przyjmują parametr `beginMethod` parametru.</span><span class="sxs-lookup"><span data-stu-id="88ee9-765">The <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> overloads that take an `asyncResult` parameter are not as efficient as the overloads that take a `beginMethod` parameter.</span></span> <span data-ttu-id="88ee9-766">Jeśli wydajność jest problem, użyj przeciążeń, które zapewniają `beginMethod` / `endMethod` wzorca.</span><span class="sxs-lookup"><span data-stu-id="88ee9-766">If performance is an issue, use the overloads that provide the `beginMethod`/`endMethod` pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-767">Wyjątek zgłaszany, gdy <paramref name="asyncResult" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-767">The exception that is thrown when the <paramref name="asyncResult" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-768">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-768">-or-</span></span>  
  
 <span data-ttu-id="88ee9-769">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-769">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-770">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-770">-or-</span></span>  
  
 <span data-ttu-id="88ee9-771">Wyjątek zgłaszany, gdy <paramref name="scheduler" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-771">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-772">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-772">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-773">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-773">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-774">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-774">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), arg1 As TArg1, arg2 As TArg2, state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="88ee9-775">Typ drugiego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-775">The type of the second argument passed to <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TArg2"><span data-ttu-id="88ee9-776">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-776">The type of the first argument passed to the <c>beginMethod</c> delegate.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-777">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-777">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-778">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-778">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="88ee9-779">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-779">The first argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="arg2"><span data-ttu-id="88ee9-780">Drugi argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-780">The second argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-781">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-781">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <summary><span data-ttu-id="88ee9-782">Tworzy <see cref="T:System.Threading.Tasks.Task" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-782">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-783">Utworzony <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-783">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-784">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-784">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-785">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-785">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-786">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-786">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-787">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-787">-or-</span></span>  
  
 <span data-ttu-id="88ee9-788">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-788">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), arg1 As TArg1, arg2 As TArg2, state As Object, creationOptions As TaskCreationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="88ee9-789">Typ drugiego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-789">The type of the second argument passed to <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TArg2"><span data-ttu-id="88ee9-790">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-790">The type of the first argument passed to the <c>beginMethod</c> delegate.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-791">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-791">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-792">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-792">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="88ee9-793">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-793">The first argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="arg2"><span data-ttu-id="88ee9-794">Drugi argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-794">The second argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-795">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-795">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-796">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-796">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-797">Tworzy <see cref="T:System.Threading.Tasks.Task" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-797">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-798">Utworzony <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-798">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-799">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-799">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-800">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-800">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-801">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-801">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-802">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-802">-or-</span></span>  
  
 <span data-ttu-id="88ee9-803">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-803">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-804">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-804">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-805">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-805">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-806">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-806">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TResult&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TArg1, TResult&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, !!TArg1 arg1, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TResult) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="88ee9-807">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-807">The type of the first argument passed to the <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-808">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-808">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-809">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-809">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-810">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-810">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="88ee9-811">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-811">The first argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-812">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-812">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <summary><span data-ttu-id="88ee9-813">Tworzy <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-813">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-814">Utworzony <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-814">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-815">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-815">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-816">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-816">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-817">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-817">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-818">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-818">-or-</span></span>  
  
 <span data-ttu-id="88ee9-819">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-819">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TResult&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TArg1, TResult&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, !!TArg1 arg1, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TResult) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="88ee9-820">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-820">The type of the first argument passed to the <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-821">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-821">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-822">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-822">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-823">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-823">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="88ee9-824">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-824">The first argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-825">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-825">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-826">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-826">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-827">Tworzy <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-827">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-828">Utworzony <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-828">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-829">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-829">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-830">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-830">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-831">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-831">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-832">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-832">-or-</span></span>  
  
 <span data-ttu-id="88ee9-833">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-833">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-834">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-834">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-835">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-835">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-836">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-836">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="88ee9-837">Typ drugiego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-837">The type of the second argument passed to <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TArg2"><span data-ttu-id="88ee9-838">Typ trzeci argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-838">The type of the third argument passed to <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TArg3"><span data-ttu-id="88ee9-839">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-839">The type of the first argument passed to the <c>beginMethod</c> delegate.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-840">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-840">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-841">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-841">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="88ee9-842">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-842">The first argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="arg2"><span data-ttu-id="88ee9-843">Drugi argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-843">The second argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="arg3"><span data-ttu-id="88ee9-844">Trzeci argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-844">The third argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-845">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-845">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <summary><span data-ttu-id="88ee9-846">Tworzy <see cref="T:System.Threading.Tasks.Task" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-846">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-847">Utworzony <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-847">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-848">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-848">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-849">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-849">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-850">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-850">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-851">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-851">-or-</span></span>  
  
 <span data-ttu-id="88ee9-852">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-852">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Action&lt;IAsyncResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Action`1&lt;class System.IAsyncResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Action(Of IAsyncResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object, creationOptions As TaskCreationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Action&lt;IAsyncResult ^&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Action&lt;System.IAsyncResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="88ee9-853">Typ drugiego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-853">The type of the second argument passed to <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TArg2"><span data-ttu-id="88ee9-854">Typ trzeci argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-854">The type of the third argument passed to <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TArg3"><span data-ttu-id="88ee9-855">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-855">The type of the first argument passed to the <c>beginMethod</c> delegate.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-856">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-856">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-857">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-857">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="88ee9-858">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-858">The first argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="arg2"><span data-ttu-id="88ee9-859">Drugi argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-859">The second argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="arg3"><span data-ttu-id="88ee9-860">Trzeci argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-860">The third argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-861">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-861">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-862">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-862">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-863">Tworzy <see cref="T:System.Threading.Tasks.Task" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-863">Creates a <see cref="T:System.Threading.Tasks.Task" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-864">Utworzony <see cref="T:System.Threading.Tasks.Task" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-864">The created <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-865">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-865">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-866">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-866">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-867">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-867">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-868">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-868">-or-</span></span>  
  
 <span data-ttu-id="88ee9-869">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-869">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-870">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-870">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-871">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-871">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-872">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-872">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TResult&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TArg1, TArg2, TResult&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TResult) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="88ee9-873">Typ drugiego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-873">The type of the second argument passed to <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TArg2"><span data-ttu-id="88ee9-874">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-874">The type of the first argument passed to the <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-875">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-875">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-876">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-876">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-877">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-877">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="88ee9-878">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-878">The first argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="arg2"><span data-ttu-id="88ee9-879">Drugi argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-879">The second argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-880">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-880">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <summary><span data-ttu-id="88ee9-881">Tworzy <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-881">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-882">Utworzony <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-882">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-883">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-883">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-884">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-884">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-885">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-885">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-886">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-886">-or-</span></span>  
  
 <span data-ttu-id="88ee9-887">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-887">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TResult&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TArg1, TArg2, TResult&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TResult) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="88ee9-888">Typ drugiego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-888">The type of the second argument passed to <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TArg2"><span data-ttu-id="88ee9-889">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-889">The type of the first argument passed to the <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-890">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-890">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-891">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-891">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-892">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-892">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="88ee9-893">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-893">The first argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="arg2"><span data-ttu-id="88ee9-894">Drugi argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-894">The second argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-895">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-895">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-896">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-896">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-897">Tworzy <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-897">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-898">Utworzony <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-898">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-899">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-899">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-900">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-900">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-901">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-901">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-902">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-902">-or-</span></span>  
  
 <span data-ttu-id="88ee9-903">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-903">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-904">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-904">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-905">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-905">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-906">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-906">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3, TResult&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3, TResult) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="88ee9-907">Typ drugiego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-907">The type of the second argument passed to <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TArg2"><span data-ttu-id="88ee9-908">Typ trzeci argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-908">The type of the third argument passed to <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TArg3"><span data-ttu-id="88ee9-909">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-909">The type of the first argument passed to the <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-910">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-910">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-911">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-911">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-912">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-912">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="88ee9-913">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-913">The first argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="arg2"><span data-ttu-id="88ee9-914">Drugi argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-914">The second argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="arg3"><span data-ttu-id="88ee9-915">Trzeci argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-915">The third argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-916">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-916">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <summary><span data-ttu-id="88ee9-917">Tworzy <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-917">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-918">Utworzony <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-918">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-919">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-919">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-920">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-920">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-921">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-921">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-922">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-922">-or-</span></span>  
  
 <span data-ttu-id="88ee9-923">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-923">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3,TResult&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3, TResult&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !!TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3, TResult) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3, typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="88ee9-924">Typ drugiego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-924">The type of the second argument passed to <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TArg2"><span data-ttu-id="88ee9-925">Typ trzeci argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-925">The type of the third argument passed to <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TArg3"><span data-ttu-id="88ee9-926">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-926">The type of the first argument passed to the <c>beginMethod</c> delegate.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="88ee9-927">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-927">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="88ee9-928">Delegat, który rozpoczyna operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-928">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="88ee9-929">Delegat, który kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-929">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="88ee9-930">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-930">The first argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="arg2"><span data-ttu-id="88ee9-931">Drugi argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-931">The second argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="arg3"><span data-ttu-id="88ee9-932">Trzeci argument przekazany do <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-932">The third argument passed to the <c>beginMethod</c> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-933">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-933">An object containing data to be used by the <c>beginMethod</c> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-934">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-934">The TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-935">Tworzy <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący pary metod rozpoczęcia i zakończenia, zgodnych ze wzorcem Model programowania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="88ee9-935">Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="88ee9-936">Utworzony <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="88ee9-936">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-937">`beginMethod` Delegata jest uruchomiona w wątku, który <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> działa na.</span><span class="sxs-lookup"><span data-stu-id="88ee9-937">The `beginMethod` delegate is started on the thread that <xref:System.Threading.Tasks.TaskFactory.FromAsync%2A> is running on.</span></span> <span data-ttu-id="88ee9-938">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="88ee9-938">This method throws any exceptions thrown by the `beginMethod`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-939">Wyjątek zgłaszany, gdy <paramref name="beginMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-939">The exception that is thrown when the <paramref name="beginMethod" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-940">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-940">-or-</span></span>  
  
 <span data-ttu-id="88ee9-941">Wyjątek zgłaszany, gdy <paramref name="endMethod" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-941">The exception that is thrown when the <paramref name="endMethod" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-942">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-942">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-943">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-943">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-944">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-944">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler Scheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler Scheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory.Scheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ Scheduler { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88ee9-945">Pobiera domyślny harmonogram zadań dla tej fabryki zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-945">Gets the default task scheduler for this task factory.</span></span></summary>
        <value><span data-ttu-id="88ee9-946">Domyślny harmonogram zadań dla tej fabryki zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-946">The default task scheduler for this task factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-947">Wartość właściwości służy do zaplanować wszystkie zadania, chyba że jawnie określono inny harmonogramu podczas wywołania metody tej fabryki.</span><span class="sxs-lookup"><span data-stu-id="88ee9-947">The property value is used to schedule all tasks, unless another scheduler is explicitly specified during calls to this factory's methods.</span></span>  
  
 <span data-ttu-id="88ee9-948">Jeśli wartość tej właściwości jest `null`, wartość <xref:System.Threading.Tasks.TaskScheduler.Current%2A> właściwość jest używana.</span><span class="sxs-lookup"><span data-stu-id="88ee9-948">If this property value is `null`, the value of the <xref:System.Threading.Tasks.TaskScheduler.Current%2A> property is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartNew">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88ee9-949">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-949">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-950">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metoda jest zalecany sposób uruchamiania zadań powiązanych z obliczeń.</span><span class="sxs-lookup"><span data-stu-id="88ee9-950">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method is the recommended way to launch a compute-bound task.</span></span> <span data-ttu-id="88ee9-951">Użyj <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> metody tylko wtedy, gdy wymagają szczegółową kontrolę dla zadania długotrwałe, powiązane z obliczeń.</span><span class="sxs-lookup"><span data-stu-id="88ee9-951">Use the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> method only when you require fine-grained control for a long-running, compute-bound task.</span></span> <span data-ttu-id="88ee9-952">W tym scenariuszy, w których chcesz kontrolować następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="88ee9-952">This includes scenarios in which you want to control the following:</span></span>  
  
-   <span data-ttu-id="88ee9-953">Opcje tworzenia zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-953">Task creation options.</span></span> <span data-ttu-id="88ee9-954">Zadania utworzone przez <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metody domyślnie są tworzone za pomocą <xref:System.Threading.Tasks.TaskCreationOptions.DenyChildAttach?displayProperty=nameWithType> opcji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-954">Tasks created by the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method by default are created with the <xref:System.Threading.Tasks.TaskCreationOptions.DenyChildAttach?displayProperty=nameWithType> option.</span></span> <span data-ttu-id="88ee9-955">Aby zmienić to zachowanie, lub w celu zapewnienia innych <xref:System.Threading.Tasks.TaskCreationOptions> opcje wywołania <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="88ee9-955">To override this behavior, or to provide other <xref:System.Threading.Tasks.TaskCreationOptions> options, call a <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> overload.</span></span>  
  
-   <span data-ttu-id="88ee9-956">Przekazywanie parametru.</span><span class="sxs-lookup"><span data-stu-id="88ee9-956">Parameter passing.</span></span> <span data-ttu-id="88ee9-957">Przeciążeń <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> — metoda pozwala przekazać parametr do delegata zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-957">The overloads of the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method do not allow you to pass a parameter to the task delegate.</span></span> <span data-ttu-id="88ee9-958">Overloads z <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> Wykonaj metodę.</span><span class="sxs-lookup"><span data-stu-id="88ee9-958">Overloads of the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> method do.</span></span>  
  
-   <span data-ttu-id="88ee9-959">Harmonogram zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-959">The task scheduler.</span></span> <span data-ttu-id="88ee9-960">Przeciążeń <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metody za pomocą domyślnego harmonogramu zadań.</span><span class="sxs-lookup"><span data-stu-id="88ee9-960">The overloads of the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method use the default task scheduler.</span></span> <span data-ttu-id="88ee9-961">Aby kontrolować harmonogram zadań, należy wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> przeciążenia z `scheduler` parametru.</span><span class="sxs-lookup"><span data-stu-id="88ee9-961">To control the task scheduler, call a <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> overload with a `scheduler` parameter.</span></span> <span data-ttu-id="88ee9-962">Aby uzyskać więcej informacji zobacz.</span><span class="sxs-lookup"><span data-stu-id="88ee9-962">For more information, see .</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="88ee9-963">Delegat akcji do wykonania asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-963">The action delegate to execute asynchronously.</span></span></param>
        <summary><span data-ttu-id="88ee9-964">Utworzenie i uruchomienie zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-964">Creates and starts a task.</span></span></summary>
        <returns><span data-ttu-id="88ee9-965">Uruchomiono zadanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-965">The started task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-966">Wywoływanie <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z jej konstruktorów, a następnie podczas wywoływania <xref:System.Threading.Tasks.Task.Start%2A?displayProperty=nameWithType> metodę, aby zaplanować zadanie do wykonania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-966">Calling <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> is functionally equivalent to creating a task by using one of its constructors, and then calling the <xref:System.Threading.Tasks.Task.Start%2A?displayProperty=nameWithType> method to schedule the task for execution.</span></span>  
  
 <span data-ttu-id="88ee9-967">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%28System.Action%29?displayProperty=nameWithType> metody w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%29> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-967">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%28System.Action%29?displayProperty=nameWithType> method as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%29> with default parameters.</span></span> <span data-ttu-id="88ee9-968">Należy jednak pamiętać, że występuje różnica w zachowaniu między obiema metodami dotyczące: <xref:System.Threading.Tasks.Task.Run%28System.Action%29?displayProperty=nameWithType> domyślnie nie pozwala na podrzędnych zadań wprowadzenie <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> opcję dołączenia do bieżącego <xref:System.Threading.Tasks.Task> wystąpienia, podczas gdy <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%29> jest.</span><span class="sxs-lookup"><span data-stu-id="88ee9-968">Note, however, that there is a difference in behavior between the two methods regarding : <xref:System.Threading.Tasks.Task.Run%28System.Action%29?displayProperty=nameWithType> by default does not allow child tasks started with the <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> option to attach to the current <xref:System.Threading.Tasks.Task> instance, whereas <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%29> does.</span></span> <span data-ttu-id="88ee9-969">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-969">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88ee9-970">W poniższym przykładzie użyto <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%29> wielokrotnie wywoływać metodę <xref:System.Action> delegata, który generuje losowy numer zinterpretuje ją jako punkt kodu Unicode, konwertuje go na jednostki kodowany w formacie UTF16 kodu i wyświetla informacje o powstałe w ten sposób znak lub znaki.</span><span class="sxs-lookup"><span data-stu-id="88ee9-970">The following example uses the <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%29> method to repeatedly invoke an <xref:System.Action> delegate that generates a random number, interprets it as a Unicode code point, converts it to a UTF16-encoded code unit, and displays information about the resulting character or characters.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskFactory.StartNew#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/cs/startnew1.cs#1)]
 [!code-vb[System.Threading.Tasks.TaskFactory.StartNew#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/vb/startnew1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-971"><paramref name="action" /> Argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-971">The <paramref name="action" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action action, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action action, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action ^ action, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="88ee9-972">Delegat akcji do wykonania asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-972">The action delegate to execute asynchronously.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-973"><see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> Które zostanie przypisane do nowego zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-973">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new task.</span></span></param>
        <summary><span data-ttu-id="88ee9-974">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-974">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-975">Rozpoczęto <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-975">The started <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-976">Wywoływanie `StartNew` jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z jej konstruktorów i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-976">Calling `StartNew` is functionally equivalent to creating a Task using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-977">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%28System.Action%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> metody w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%2CSystem.Threading.CancellationToken%29> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-977">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%28System.Action%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%2CSystem.Threading.CancellationToken%29> with default parameters.</span></span> <span data-ttu-id="88ee9-978">Należy jednak pamiętać, że występuje różnica w zachowaniu między obiema metodami dotyczące: <xref:System.Threading.Tasks.Task.Run%28System.Action%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> domyślnie nie pozwala na podrzędnych zadań wprowadzenie <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> opcję dołączenia do bieżącego <xref:System.Threading.Tasks.Task> wystąpienia, podczas gdy <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%2CSystem.Threading.CancellationToken%29> jest.</span><span class="sxs-lookup"><span data-stu-id="88ee9-978">Note, however, that there is a difference in behavior between the two methods regarding : <xref:System.Threading.Tasks.Task.Run%28System.Action%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> by default does not allow child tasks started with the <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> option to attach to the current <xref:System.Threading.Tasks.Task> instance, whereas <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%2CSystem.Threading.CancellationToken%29> does.</span></span> <span data-ttu-id="88ee9-979">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-979">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88ee9-980">Następujące przykładowe wywołania <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%2CSystem.Threading.CancellationToken%29> metodę, aby utworzyć zadanie, który iteruje po plików w katalogu C:\Windows\System32.</span><span class="sxs-lookup"><span data-stu-id="88ee9-980">The following example calls the <xref:System.Threading.Tasks.TaskFactory.StartNew%28System.Action%2CSystem.Threading.CancellationToken%29> method to create a task that iterates the files in the C:\Windows\System32 directory.</span></span> <span data-ttu-id="88ee9-981">Wywołania wyrażenia lambda <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metody w celu dodania informacji o poszczególnych plików do <xref:System.Collections.Generic.List%601> obiektu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-981">The lambda expression calls the <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method to add information about each  file to a <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="88ee9-982">Odłączyć każdego zadania zagnieżdżonego wywoływane przez <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> pętli sprawdza stan token anulowania i, jeśli żądanie anulowania wywołuje <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="88ee9-982">Each detached nested task invoked by the <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> loop checks the state of the cancellation token and, if cancellation is requested, calls the <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="88ee9-983"><xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> Metoda zgłasza <xref:System.OperationCanceledException> wyjątek, który jest obsługiwany w `catch` zablokować, jeśli wątek wywołujący wywołuje <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="88ee9-983">The <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method throws an <xref:System.OperationCanceledException> exception that is handled in a `catch` block when the calling thread calls the <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskFactory.StartNew#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/cs/startnew2.cs#2)]
 [!code-vb[System.Threading.Tasks.TaskFactory.StartNew#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/vb/startnew2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-984">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-984">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-985">Wyjątek zgłaszany, gdy <paramref name="action" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-985">The exception that is thrown when the <paramref name="action" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action action, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action action, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action ^ action, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="88ee9-986">Delegat akcji do wykonania asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-986">The action delegate to execute asynchronously.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-987">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-987">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" /></span></span></param>
        <summary><span data-ttu-id="88ee9-988">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-988">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-989">Rozpoczęto <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-989">The started <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-990">Wywoływanie StartNew jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z jej konstruktorów i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-990">Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-991">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%2A> metody z <xref:System.Action> obiektu w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-991">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-992">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-992">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-993">Wyjątek zgłaszany, gdy <paramref name="action" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-993">The exception that is thrown when the <paramref name="action" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-994">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-994">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action&lt;object&gt; action, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action`1&lt;object&gt; action, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (action As Action(Of Object), state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action&lt;System::Object ^&gt; ^ action, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="88ee9-995">Delegat akcji do wykonania asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-995">The action delegate to execute asynchronously.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-996">Obiekt zawierający dane, które mają być używane przez <c>akcji</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-996">An object containing data to be used by the <c>action</c> delegate.</span></span></param>
        <summary><span data-ttu-id="88ee9-997">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-997">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-998">Rozpoczęto <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-998">The started <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-999">Wywoływanie <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> jest funkcjonalnym odpowiednikiem tworzenie <xref:System.Threading.Tasks.Task> przy użyciu jednej z jej konstruktorów i wywołując <xref:System.Threading.Tasks.Task.Start%2A> metody do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-999">Calling <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> is functionally equivalent to creating a <xref:System.Threading.Tasks.Task> using one of its constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1000">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%2A> metody z <xref:System.Action> obiektu w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1000">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-1001">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1001">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88ee9-1002">W poniższym przykładzie zdefiniowano tablicę wyrazów 6.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1002">The following example defines an array of 6-letter words.</span></span> <span data-ttu-id="88ee9-1003">Każdego wyrazu są następnie przekazywane do <xref:System.Action%601> delegata, która zaszyfrowanie wyraz i wyświetla oryginalnego word i jego wersja zaszyfrowany.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1003">Each word is then passed to an <xref:System.Action%601> delegate, which scrambles the word and displays the original word and its scrambled version.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskFactory.StartNew#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/cs/startnew3.cs#3)]
 [!code-vb[System.Threading.Tasks.TaskFactory.StartNew#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/vb/startnew3.vb#3)]  
  
 <span data-ttu-id="88ee9-1004">Należy pamiętać, że w przykładzie są inicjowane pojedynczego generatora liczb losowych, która jest chroniona przez blokady.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1004">Note that the example initializes a single random number generator, which is protected by a lock.</span></span> <span data-ttu-id="88ee9-1005">Na potrzeby blokady, zobacz "System.Random klasy i wątku bezpieczeństwa" w <xref:System.Random> klasy tematu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1005">For the need of a lock, see "The System.Random class and thread safety" in the <xref:System.Random> class topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1006"><paramref name="action" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1006">The <paramref name="action" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action&lt;object&gt; action, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action`1&lt;object&gt; action, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action&lt;System::Object ^&gt; ^ action, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="88ee9-1007">Delegat akcji do wykonania asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1007">The action delegate to execute asynchronously.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-1008">Obiekt zawierający dane, które mają być używane przez <c>akcji</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1008">An object containing data to be used by the <c>action</c> delegate.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-1009"><see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> Które zostanie przypisane do nowego <see cref="T:System.Threading.Tasks.Task" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1009">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task" /></span></span></param>
        <summary><span data-ttu-id="88ee9-1010">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1010">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-1011">Rozpoczęto <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1011">The started <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-1012">Wywoływanie StartNew jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z jej konstruktorów i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1012">Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1013">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%2A> metody z <xref:System.Action> obiektu w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1013">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-1014">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1014">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88ee9-1015">W poniższym przykładzie zdefiniowano tablicę wyrazów 6.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1015">The following example defines an array of 6-letter words.</span></span> <span data-ttu-id="88ee9-1016">Każdego wyrazu są następnie przekazywane do <xref:System.Action%601> delegata, która zaszyfrowanie wyraz i wyświetla oryginalnego word i jego wersja zaszyfrowany.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1016">Each word is then passed to an <xref:System.Action%601> delegate, which scrambles the word and displays the original word and its scrambled version.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskFactory.StartNew#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/cs/startnew4.cs#4)]
 [!code-vb[System.Threading.Tasks.TaskFactory.StartNew#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskfactory.startnew/vb/startnew4.vb#4)]  
  
 <span data-ttu-id="88ee9-1017">Należy pamiętać, że w przykładzie są inicjowane pojedynczego generatora liczb losowych, która jest chroniona przez blokady.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1017">Note that the example initializes a single random number generator, which is protected by a lock.</span></span> <span data-ttu-id="88ee9-1018">Na potrzeby blokady, zobacz "System.Random klasy i wątku bezpieczeństwa" w <xref:System.Random> klasy tematu.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1018">For the need of a lock, see "The System.Random class and thread safety" in the <xref:System.Random> class topic.</span></span> <span data-ttu-id="88ee9-1019">Do obsługi możliwości uszkodzenie generatora liczb losowych, token anulowania jest przekazywana do zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1019">To handle the possibility of corruption of the random number generator, a cancellation token is passed to task.</span></span> <span data-ttu-id="88ee9-1020">Jeśli dwie liczb losowych równa zero, metoda założono, że generatora liczb losowych jest uszkodzony i ustawia token anulowania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1020">If two random numbers equal zero, the method assumes that the random number generator is corrupted and sets the cancellation token.</span></span> <span data-ttu-id="88ee9-1021">Przed rozpoczęciem sortowania `chars` tablica zawierająca sześciu znaków w edytorze wywołania metody <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> metodę, aby zgłosić <xref:System.OperationCanceledException> czy token został anulowany.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1021">Before sorting the `chars` array that contains the six characters in a word, the method calls the <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method to throw an <xref:System.OperationCanceledException> if the token has been canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-1022">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1022">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1023">Wyjątek zgłaszany, gdy <paramref name="action" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1023">The exception that is thrown when the <paramref name="action" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action&lt;object&gt; action, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action`1&lt;object&gt; action, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (action As Action(Of Object), state As Object, creationOptions As TaskCreationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action&lt;System::Object ^&gt; ^ action, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="88ee9-1024">Delegat akcji do wykonania asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1024">The action delegate to execute asynchronously.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-1025">Obiekt zawierający dane, które mają być używane przez <c>akcji</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1025">An object containing data to be used by the <c>action</c> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-1026">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1026">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" /></span></span></param>
        <summary><span data-ttu-id="88ee9-1027">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1027">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-1028">Rozpoczęto <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1028">The started <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-1029">Wywoływanie StartNew jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z jej konstruktorów i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1029">Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1030">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%2A> metody z <xref:System.Action> obiektu w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1030">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-1031">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1031">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1032">Wyjątek zgłaszany, gdy <paramref name="action" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1032">The exception that is thrown when the <paramref name="action" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-1033">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1033">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action action, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action action, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action ^ action, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="88ee9-1034">Delegat akcji do wykonania asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1034">The action delegate to execute asynchronously.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-1035"><see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> Które zostanie przypisane do nowego <see cref="T:System.Threading.Tasks.Task" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1035">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task" /></span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-1036">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1036">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" /></span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-1037"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Używany do zaplanowania utworzony <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1037">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-1038">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1038">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-1039">Rozpoczęto <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1039">The started <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-1040">Wywoływanie StartNew jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z jej konstruktorów i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1040">Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1041">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%2A> metody z <xref:System.Action> obiektu w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1041">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-1042">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1042">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-1043">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1043">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1044">Wyjątek zgłaszany, gdy <paramref name="action" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1044">The exception that is thrown when the <paramref name="action" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-1045">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-1045">-or-</span></span>  
  
 <span data-ttu-id="88ee9-1046">Wyjątek zgłaszany, gdy <paramref name="scheduler" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1046">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-1047">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1047">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-1048">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1048">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-1049">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1049">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartNew (Action&lt;object&gt; action, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartNew(class System.Action`1&lt;object&gt; action, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartNew(Action&lt;System::Object ^&gt; ^ action, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="88ee9-1050">Delegat akcji do wykonania asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1050">The action delegate to execute asynchronously.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-1051">Obiekt zawierający dane, które mają być używane przez <c>akcji</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1051">An object containing data to be used by the <c>action</c> delegate.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-1052"><see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> Które zostanie przypisane do nowego zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1052">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new task.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-1053">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1053">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task" /></span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-1054"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Używany do zaplanowania utworzony <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1054">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created <see cref="T:System.Threading.Tasks.Task" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-1055">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1055">Creates and starts a <see cref="T:System.Threading.Tasks.Task" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-1056">Rozpoczęto <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1056">The started <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-1057">Wywoływanie StartNew jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z jej konstruktorów i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1057">Calling StartNew is functionally equivalent to creating a Task using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1058">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%2A> metody z <xref:System.Action> obiektu w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1058">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as  a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-1059">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1059">For more information and code examples, see [Task.Run vs Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-1060">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1060">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1061">Wyjątek zgłaszany, gdy <paramref name="action" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1061">The exception that is thrown when the <paramref name="action" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-1062">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-1062">-or-</span></span>  
  
 <span data-ttu-id="88ee9-1063">Wyjątek zgłaszany, gdy <paramref name="scheduler" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1063">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-1064">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1064">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-1065">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1065">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-1066">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1066">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;TResult&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew(Of TResult) (function As Func(Of TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-1067">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1067">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="function"><span data-ttu-id="88ee9-1068">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępny za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1068">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-1069">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1069">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-1070">Rozpoczęto <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1070">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-1071">Wywoływanie <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> jest funkcjonalnym odpowiednikiem tworzenie <xref:System.Threading.Tasks.Task%601> przy użyciu jednej z jej konstruktorów i wywołując <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1071">Calling <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1072">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można wywołać <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> metody w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1072">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can call the <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> method as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-1073">Należy jednak pamiętać, że występuje różnica w zachowaniu między obiema metodami dotyczące: <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> domyślnie nie pozwala na podrzędnych zadań wprowadzenie <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> opcję dołączenia do bieżącego <xref:System.Threading.Tasks.Task%601> wystąpienia, podczas gdy <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%29> jest.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1073">Note, however, that there is a difference in behavior between the two methods regarding : <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> by default does not allow child tasks started with the <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> option to attach to the current <xref:System.Threading.Tasks.Task%601> instance, whereas <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%29> does.</span></span> <span data-ttu-id="88ee9-1074">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz wpis [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1074">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88ee9-1075">Poniższy przykład jest aplikacji łatwo dodawać, który generuje dwie liczb losowych, a następnie monituje użytkownika o podanie ich sumę.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1075">The following example is a simple addition app that generates two random numbers and prompts the user to enter their sum.</span></span> <span data-ttu-id="88ee9-1076">Następnie informuje, czy odpowiedź jest poprawna lub, jeśli odpowiedź użytkownika nie jest prawidłową liczbą monituje użytkownika o ponowne Wprowadź prawidłową liczbę.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1076">It then indicates whether the answer is correct or, if the user's response is not a valid number, prompts the user to re-enter a valid number.</span></span> <span data-ttu-id="88ee9-1077"><xref:System.Threading.Tasks.TaskFactory.StartNew%2A> Służy do tworzenia <xref:System.Threading.Tasks.Task%601> obiektów, które zwracają liczb losowych, aby dodać.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1077">The <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> is used to create the <xref:System.Threading.Tasks.Task%601> objects that return the random numbers to add.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.Run#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.run/cs/run5.cs#5)]
 [!code-vb[System.Threading.Tasks.Task.Run#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.run/vb/run5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1078"><paramref name="function" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1078">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;object,TResult&gt; function, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`2&lt;object, !!TResult&gt; function, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew(Of TResult) (function As Func(Of Object, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-1079">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1079">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="function"><span data-ttu-id="88ee9-1080">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępny za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1080">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-1081">Obiekt zawierający dane, które mają być używane przez <c>funkcja</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1081">An object containing data to be used by the <c>function</c> delegate.</span></span></param>
        <summary><span data-ttu-id="88ee9-1082">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1082">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-1083">Rozpoczęto <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1083">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-1084">Wywoływanie StartNew jest funkcjonalnym odpowiednikiem tworzenie <xref:System.Threading.Tasks.Task%601> przy użyciu jednej z jej konstruktorów i wywołując <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1084">Calling StartNew is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1085">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%2A> metody z <xref:System.Action> obiektu w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1085">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-1086">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz wpis [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1086">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1087">Wyjątek zgłaszany, gdy <paramref name="function" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1087">The exception that is thrown when the <paramref name="function" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-1088">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1088">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="function"><span data-ttu-id="88ee9-1089">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępny za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1089">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-1090"><see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> Które zostanie przypisane do nowego <see cref="T:System.Threading.Tasks.Task" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1090">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task" /></span></span></param>
        <summary><span data-ttu-id="88ee9-1091">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1091">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-1092">Rozpoczęto <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1092">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-1093">Wywoływanie <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> jest funkcjonalnym odpowiednikiem tworzenie <xref:System.Threading.Tasks.Task%601> przy użyciu jednej z jej konstruktorów i wywołując <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1093">Calling <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1094">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> metody w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1094">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29> with default parameters.</span></span> <span data-ttu-id="88ee9-1095">Należy jednak pamiętać, że występuje różnica w zachowaniu między obiema metodami dotyczące: <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> domyślnie nie pozwala na podrzędnych zadań wprowadzenie <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> opcję dołączenia do bieżącego <xref:System.Threading.Tasks.Task%601> wystąpienia, podczas gdy <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29> jest.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1095">Note, however, that there is a difference in behavior between the two methods regarding : <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> by default does not allow child tasks started with the <xref:System.Threading.Tasks.TaskCreationOptions.AttachedToParent?displayProperty=nameWithType> option to attach to the current <xref:System.Threading.Tasks.Task%601> instance, whereas <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29> does.</span></span> <span data-ttu-id="88ee9-1096">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz wpis [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1096">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88ee9-1097">W poniższym przykładzie użyto dwóch zadań do obliczenia sekwencji Fibonacci końcówką F100 = F100 1 + F100 2 wartościami inicjatora F1 = 1, F2 = 1 i F1 = 0, F2 = 1.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1097">The following example uses two tasks to compute the Fibonacci sequence ending in F100 = F100-1 + F100-2 with seed values F1= 1, F2 = 1 and F1 = 0, F2= 1.</span></span> <span data-ttu-id="88ee9-1098">Około pół godziny, token anulowania jest ustawiony jako wykonania operacji.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1098">Approximately half of the time, a cancellation token is set as the operations execute.</span></span> <span data-ttu-id="88ee9-1099">Dane wyjściowe z przykładu pokazuje wynik, jeśli dwa zadania zakończy się pomyślnie, a token zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1099">The output from the example shows the result if the two tasks complete successfully and if the token is cancelled.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.Run#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.run/cs/Run9.cs#9)]
 [!code-vb[System.Threading.Tasks.Task.Run#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.run/vb/Run9.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-1100">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1100">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1101">Wyjątek zgłaszany, gdy <paramref name="function" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1101">The exception that is thrown when the <paramref name="function" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;TResult&gt; function, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew(Of TResult) (function As Func(Of TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-1102">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1102">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="function"><span data-ttu-id="88ee9-1103">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępny za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1103">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-1104">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1104">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-1105">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1105">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-1106">Rozpoczęto <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1106">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-1107">Wywoływanie StartNew jest funkcjonalnym odpowiednikiem tworzenie <xref:System.Threading.Tasks.Task%601> przy użyciu jednej z jej konstruktorów i wywołując <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1107">Calling StartNew is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1108">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%2A> metody z <xref:System.Action> obiektu w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1108">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-1109">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz wpis [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1109">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1110">Wyjątek zgłaszany, gdy <paramref name="function" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1110">The exception that is thrown when the <paramref name="function" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-1111">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1111">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-1112">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1112">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-1113">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1113">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`2&lt;object, !!TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-1114">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1114">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="function"><span data-ttu-id="88ee9-1115">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępny za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1115">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-1116">Obiekt zawierający dane, które mają być używane przez <c>funkcja</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1116">An object containing data to be used by the <c>function</c> delegate.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-1117"><see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> Które zostanie przypisane do nowego <see cref="T:System.Threading.Tasks.Task" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1117">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task" /></span></span></param>
        <summary><span data-ttu-id="88ee9-1118">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1118">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-1119">Rozpoczęto <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1119">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-1120">Wywoływanie StartNew jest funkcjonalnym odpowiednikiem tworzenie <xref:System.Threading.Tasks.Task%601> przy użyciu jednej z jej konstruktorów i wywołując <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1120">Calling StartNew is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1121">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%2A> metody z <xref:System.Action> obiektu w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1121">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-1122">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz wpis [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1122">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-1123">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1123">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1124">Wyjątek zgłaszany, gdy <paramref name="function" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1124">The exception that is thrown when the <paramref name="function" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;object,TResult&gt; function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`2&lt;object, !!TResult&gt; function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew(Of TResult) (function As Func(Of Object, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-1125">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1125">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="function"><span data-ttu-id="88ee9-1126">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępny za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1126">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-1127">Obiekt zawierający dane, które mają być używane przez <c>funkcja</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1127">An object containing data to be used by the <c>function</c> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-1128">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1128">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-1129">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1129">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-1130">Rozpoczęto <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1130">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-1131">Wywoływanie StartNew jest funkcjonalnym odpowiednikiem tworzenie <xref:System.Threading.Tasks.Task%601> przy użyciu jednej z jej konstruktorów i wywołując <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1131">Calling StartNew is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1132">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%2A> metody z <xref:System.Action> obiektu w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1132">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-1133">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz wpis [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1133">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1134">Wyjątek zgłaszany, gdy <paramref name="function" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1134">The exception that is thrown when the <paramref name="function" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-1135">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1135">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-1136">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1136">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-1137">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1137">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-1138">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1138">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="function"><span data-ttu-id="88ee9-1139">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępny za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1139">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-1140"><see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> Które zostanie przypisane do nowego zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1140">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new task.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-1141">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1141">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-1142"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Używany do zaplanowania utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1142">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-1143">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1143">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-1144">Rozpoczęto <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1144">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-1145">Wywoływanie StartNew jest funkcjonalnym odpowiednikiem tworzenie <xref:System.Threading.Tasks.Task%601> przy użyciu jednej z jej konstruktorów i wywołując <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1145">Calling StartNew is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1146">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%2A> metody z <xref:System.Action> obiektu w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1146">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-1147">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz wpis [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1147">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-1148">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1148">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1149">Wyjątek zgłaszany, gdy <paramref name="function" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1149">The exception that is thrown when the <paramref name="function" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-1150">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-1150">-or-</span></span>  
  
 <span data-ttu-id="88ee9-1151">Wyjątek zgłaszany, gdy <paramref name="scheduler" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1151">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-1152">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1152">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-1153">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1153">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-1154">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1154">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew&lt;TResult&gt; (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; StartNew&lt;TResult&gt;(class System.Func`2&lt;object, !!TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="88ee9-1155">Typ wyniku dostępne za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1155">The type of the result available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></typeparam>
        <param name="function"><span data-ttu-id="88ee9-1156">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępny za pośrednictwem <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1156">A function delegate that returns the future result to be available through the <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <param name="state"><span data-ttu-id="88ee9-1157">Obiekt zawierający dane, które mają być używane przez <c>funkcja</c> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1157">An object containing data to be used by the <c>function</c> delegate.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88ee9-1158"><see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> Które zostanie przypisane do nowego zadania.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1158">The <see cref="P:System.Threading.Tasks.TaskFactory.CancellationToken" /> that will be assigned to the new task.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="88ee9-1159">Wartość TaskCreationOptions, która steruje zachowaniem utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1159">A TaskCreationOptions value that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="88ee9-1160"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Używany do zaplanowania utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1160">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="88ee9-1161">Utworzenie i uruchomienie <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1161">Creates and starts a <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></summary>
        <returns><span data-ttu-id="88ee9-1162">Rozpoczęto <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1162">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88ee9-1163">Wywoływanie StartNew jest funkcjonalnym odpowiednikiem tworzenie <xref:System.Threading.Tasks.Task%601> przy użyciu jednej z jej konstruktorów i wywołując <xref:System.Threading.Tasks.Task.Start%2A> do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1163">Calling StartNew is functionally equivalent to creating a <xref:System.Threading.Tasks.Task%601> using one of its constructors and then calling <xref:System.Threading.Tasks.Task.Start%2A> to schedule it for execution.</span></span>  
  
 <span data-ttu-id="88ee9-1164">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można użyć <xref:System.Threading.Tasks.Task.Run%2A> metody z <xref:System.Action> obiektu w prosty sposób, aby wywołać <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> z parametrów domyślnych.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1164">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the <xref:System.Threading.Tasks.Task.Run%2A> method with an <xref:System.Action> object as a quick way to call <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> with default parameters.</span></span> <span data-ttu-id="88ee9-1165">Aby uzyskać więcej informacji oraz przykłady kodu, zobacz wpis [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) w programowania równoległego z blogu .NET.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1165">For more information and code examples, see the entry [Task.Run vs. Task.Factory.StartNew](http://blogs.msdn.com/b/pfxteam/archive/2011/10/24/10229468.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88ee9-1166">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1166">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88ee9-1167">Wyjątek zgłaszany, gdy <paramref name="function" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1167">The exception that is thrown when the <paramref name="function" /> argument is null.</span></span>  
  
 <span data-ttu-id="88ee9-1168">—lub—</span><span class="sxs-lookup"><span data-stu-id="88ee9-1168">-or-</span></span>  
  
 <span data-ttu-id="88ee9-1169">Wyjątek zgłaszany, gdy <paramref name="scheduler" /> argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1169">The exception that is thrown when the <paramref name="scheduler" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88ee9-1170">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1170">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-1171">Wyjątek zgłaszany, gdy <paramref name="creationOptions" /> argument określa nieprawidłową wartość TaskCreationOptions.</span><span class="sxs-lookup"><span data-stu-id="88ee9-1171">The exception that is thrown when the <paramref name="creationOptions" /> argument specifies an invalid TaskCreationOptions value.</span></span> <span data-ttu-id="88ee9-1172">Aby uzyskać więcej informacji zobacz uwagi dla <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span><span class="sxs-lookup"><span data-stu-id="88ee9-1172">For more information, see the Remarks for <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" /></span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>