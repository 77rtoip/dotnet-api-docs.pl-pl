<Type Name="TaskFactory&lt;TResult&gt;" FullName="System.Threading.Tasks.TaskFactory&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="747373803d9599335d466c7382a5dde926cb04ca" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36606751" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TaskFactory&lt;TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskFactory`1&lt;TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskFactory(Of TResult)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class TaskFactory" />
  <TypeSignature Language="F#" Value="type TaskFactory&lt;'Result&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult">
      <span data-ttu-id="57e54-101">Wartość zwracana <see cref="T:System.Threading.Tasks.Task`1" /> obiektów utworzonych przez metody tej klasy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="57e54-101">The return value of the <see cref="T:System.Threading.Tasks.Task`1" /> objects that the methods of this class create.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="57e54-102">Umożliwia tworzenie i planowanie <see cref="T:System.Threading.Tasks.Task`1" /> obiektów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="57e54-102">Provides support for creating and scheduling <see cref="T:System.Threading.Tasks.Task`1" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-103">.NET Framework zapewnia dwie fabryki umożliwiające tworzenie i planowanie zadań:</span><span class="sxs-lookup"><span data-stu-id="57e54-103">The .NET Framework provides two factories for creating and scheduling tasks:</span></span>  
  
-   <span data-ttu-id="57e54-104"><xref:System.Threading.Tasks.TaskFactory> Klasy, która tworzy <xref:System.Threading.Tasks.Task> i <xref:System.Threading.Tasks.Task%601> obiektów.</span><span class="sxs-lookup"><span data-stu-id="57e54-104">The <xref:System.Threading.Tasks.TaskFactory> class, which creates <xref:System.Threading.Tasks.Task> and <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
-   <span data-ttu-id="57e54-105"><xref:System.Threading.Tasks.TaskFactory%601> Klasy, która tworzy <xref:System.Threading.Tasks.Task%601> obiektów.</span><span class="sxs-lookup"><span data-stu-id="57e54-105">The <xref:System.Threading.Tasks.TaskFactory%601> class, which creates <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
 <span data-ttu-id="57e54-106"><xref:System.Threading.Tasks.TaskFactory%601> Klasa umożliwia wykonaj następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="57e54-106">The <xref:System.Threading.Tasks.TaskFactory%601> class allows you to do the following:</span></span>  
  
-   <span data-ttu-id="57e54-107">Utwórz zadanie i natychmiast rozpocząć przez wywołanie metody <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="57e54-107">Create a task and start it immediately by calling the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> method.</span></span> <span data-ttu-id="57e54-108">Można wywoływać przeciążenia tej metody, aby utworzyć i wykonać zadanie, które wymaga argumentów innych niż domyślne.</span><span class="sxs-lookup"><span data-stu-id="57e54-108">You can call the overloads of this method to create and execute a task that requires non-default arguments.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="57e54-109">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metoda zapewnia Najprostszym sposobem tworzenia zadania z domyślnej wartości konfiguracji i natychmiast rozpocząć.</span><span class="sxs-lookup"><span data-stu-id="57e54-109">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a task with default configuration values and start it immediately.</span></span>  
  
-   <span data-ttu-id="57e54-110">Tworzenie zadań, która rozpoczyna się po zakończeniu jednego z zadań w tablicy przez wywołanie metody <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> lub <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="57e54-110">Create a task that starts when any one of the tasks in an array has completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> or   <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> method.</span></span>  
  
-   <span data-ttu-id="57e54-111">Tworzenie zadań, która rozpoczyna się po zakończeniu wszystkich zadań w tablicy przez wywołanie metody <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> lub <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="57e54-111">Create a task that starts when all the tasks in an array have completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> or <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method.</span></span>  
  
 <span data-ttu-id="57e54-112">Statycznych <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> właściwość zwraca domyślną <xref:System.Threading.Tasks.TaskFactory%601> obiektu.</span><span class="sxs-lookup"><span data-stu-id="57e54-112">The static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property returns a default <xref:System.Threading.Tasks.TaskFactory%601> object.</span></span> <span data-ttu-id="57e54-113">Można również wywołać jeden z <xref:System.Threading.Tasks.TaskFactory%601> klasy konstruktorów, aby skonfigurować <xref:System.Threading.Tasks.Task%601> obiekty, które <xref:System.Threading.Tasks.TaskFactory%601> tworzy klasy.</span><span class="sxs-lookup"><span data-stu-id="57e54-113">You can also call one of the <xref:System.Threading.Tasks.TaskFactory%601> class constructors to configure the <xref:System.Threading.Tasks.Task%601> objects that  the <xref:System.Threading.Tasks.TaskFactory%601> class creates.</span></span> <span data-ttu-id="57e54-114">Poniższy przykład Konfiguruje nowy <xref:System.Threading.Tasks.TaskFactory%601> obiektu do utworzenia zadania, które mają token anulowania określony, opcje tworzenia zadań kontynuacji opcje i harmonogramu dostosowane zadanie.</span><span class="sxs-lookup"><span data-stu-id="57e54-114">The following example configures a new <xref:System.Threading.Tasks.TaskFactory%601> object to create tasks that have a specified cancellation token, task creation options, continuation options, and a customized task scheduler.</span></span>  
  
 [!code-csharp[TPL_Factories#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_factories/cs/factoriestresult.cs#2)]
 [!code-vb[TPL_Factories#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_factories/vb/factoriestresult.vb#2)]  
  
 <span data-ttu-id="57e54-115">W większości przypadków, nie trzeba utworzyć obiekt klasy <xref:System.Threading.Tasks.TaskFactory%601> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="57e54-115">In most cases, you do not have to instantiate a new <xref:System.Threading.Tasks.TaskFactory%601> instance.</span></span> <span data-ttu-id="57e54-116">Zamiast tego można użyć statycznych <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> właściwość, która zwraca obiekt fabryki, które są używane wartości domyślne.</span><span class="sxs-lookup"><span data-stu-id="57e54-116">Instead, you can use the static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property, which returns a factory object that uses default values.</span></span> <span data-ttu-id="57e54-117">Następnie można wywołać metody jego do uruchamiania nowego zadania lub zdefiniuj kontynuacje zadań.</span><span class="sxs-lookup"><span data-stu-id="57e54-117">You can then call its methods to start new tasks or define task continuations.</span></span> <span data-ttu-id="57e54-118">Ilustracja Zobacz przykład.</span><span class="sxs-lookup"><span data-stu-id="57e54-118">For an illustration, see the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57e54-119">W poniższym przykładzie użyto statycznych <xref:System.Threading.Tasks.Task%601.Factory%2A> właściwości do łączenia dwóch się <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="57e54-119">The following example uses the static <xref:System.Threading.Tasks.Task%601.Factory%2A> property to make two calls to the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="57e54-120">Pierwszym zadaniem zwraca tablicę ciągów, który jest wypełniana nazwy plików w katalogu Moje dokumenty użytkownika, podczas gdy druga zwraca tablicę ciągów, wypełniony nazwy podkatalogi katalogu Moje dokumenty użytkownika.</span><span class="sxs-lookup"><span data-stu-id="57e54-120">The first task returns a string array that is populated with the names of files in the user's MyDocuments directory, while the second returns a string array that is populated with the names of subdirectories of the user's MyDocuments directory.</span></span> <span data-ttu-id="57e54-121">Następnie wywołuje <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> metodę, która wyświetla informacje o liczbę plików i katalogów w tablicach zwrócony przez dwa zadania po zakończeniu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="57e54-121">It then calls the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> method, which displays information about the number of files and directories in the arrays returned by the two tasks after they have completed execution.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.Factory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.factory/cs/factory2.cs#2)]
 [!code-vb[System.Threading.Tasks.Task.Factory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.factory/vb/factory2.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="57e54-122">Wszystkie publiczne i chronione elementy członkowskie <see cref="T:System.Threading.Tasks.TaskFactory`1" /> są wątkowo i mogą być używane jednocześnie wiele wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="57e54-122">All public and protected members of <see cref="T:System.Threading.Tasks.TaskFactory`1" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="57e54-123">Inicjuje <see cref="T:System.Threading.Tasks.TaskFactory`1" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-123">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="57e54-124">Inicjuje <see cref="T:System.Threading.Tasks.TaskFactory`1" /> wystąpienia z konfiguracji domyślnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-124">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-125">Ten konstruktor tworzy <xref:System.Threading.Tasks.TaskFactory%601> wystąpienia z konfiguracji domyślnej.</span><span class="sxs-lookup"><span data-stu-id="57e54-125">This constructor creates a <xref:System.Threading.Tasks.TaskFactory%601> instance with a default configuration.</span></span> <span data-ttu-id="57e54-126"><xref:System.Threading.Tasks.TaskCreationOptions> Właściwość jest inicjowana na <xref:System.Threading.Tasks.TaskCreationOptions.None>, <xref:System.Threading.Tasks.TaskContinuationOptions> właściwość jest inicjowana na <xref:System.Threading.Tasks.TaskContinuationOptions.None>i <xref:System.Threading.Tasks.TaskScheduler> właściwość jest inicjowana do bieżącego harmonogramu (zobacz <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="57e54-126">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.CancellationToken -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; cancellationToken" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-127">Domyślny token anulowania, która zostanie przypisana do zadania utworzone przez to <see cref="T:System.Threading.Tasks.TaskFactory" /> , chyba że jawnie określono inny token anulowania, podczas wywoływania metody fabryki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-127">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-128">Inicjuje <see cref="T:System.Threading.Tasks.TaskFactory`1" /> wystąpienia z konfiguracji domyślnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-128">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-129">Ten konstruktor tworzy <xref:System.Threading.Tasks.TaskFactory%601> wystąpienia z konfiguracji domyślnej.</span><span class="sxs-lookup"><span data-stu-id="57e54-129">This constructor creates a <xref:System.Threading.Tasks.TaskFactory%601> instance with a default configuration.</span></span> <span data-ttu-id="57e54-130"><xref:System.Threading.Tasks.TaskCreationOptions> Właściwość jest inicjowana na <xref:System.Threading.Tasks.TaskCreationOptions.None>, <xref:System.Threading.Tasks.TaskContinuationOptions> właściwość jest inicjowana na <xref:System.Threading.Tasks.TaskContinuationOptions.None>i <xref:System.Threading.Tasks.TaskScheduler> właściwość jest inicjowana do bieżącego harmonogramu (zobacz <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="57e54-130">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scheduler As TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; scheduler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="scheduler">
          <span data-ttu-id="57e54-131">Harmonogram na potrzeby zaplanować wszystkie zadania utworzone z tym <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-131">The scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
          <span data-ttu-id="57e54-132">Wartość null oznacza, że bieżący <see cref="T:System.Threading.Tasks.TaskScheduler" /> powinien być używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-132">A null value indicates that the current <see cref="T:System.Threading.Tasks.TaskScheduler" /> should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-133">Inicjuje <see cref="T:System.Threading.Tasks.TaskFactory`1" /> wystąpienia z określoną konfiguracją.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-133">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-134">W tym konstruktorze <xref:System.Threading.Tasks.TaskCreationOptions> właściwość jest inicjowana na <xref:System.Threading.Tasks.TaskCreationOptions.None>, <xref:System.Threading.Tasks.TaskContinuationOptions> właściwość jest inicjowana na <xref:System.Threading.Tasks.TaskContinuationOptions.None>i <xref:System.Threading.Tasks.TaskScheduler> właściwość jest inicjowana na `scheduler`, chyba że ma ona `null`w którym to przypadku właściwość jest inicjowana do bieżącego harmonogramu (zobacz <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="57e54-134">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's `null`, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions, continuationOptions As TaskContinuationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; (creationOptions, continuationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions">
          <span data-ttu-id="57e54-135">Domyślne opcje używane podczas tworzenia zadania z tym <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-135">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="57e54-136">Domyślne opcje używane podczas tworzenia zadania kontynuacji z tym <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-136">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-137">Inicjuje <see cref="T:System.Threading.Tasks.TaskFactory`1" /> wystąpienia z określoną konfiguracją.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-137">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-138">W tym konstruktorze <xref:System.Threading.Tasks.TaskCreationOptions> właściwość jest inicjowana na `creationOptions`, <xref:System.Threading.Tasks.TaskContinuationOptions> właściwość jest inicjowana na `continuationOptions`i <xref:System.Threading.Tasks.TaskScheduler> właściwość jest inicjowana do bieżącego harmonogramu (zobacz <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="57e54-138">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-139">
            <paramref name="creationOptions" /> lub <paramref name="continuationOptions" /> określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-139">
              <paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; (cancellationToken, creationOptions, continuationOptions, scheduler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-140">Domyślny token anulowania, która zostanie przypisana do zadania utworzone przez to <see cref="T:System.Threading.Tasks.TaskFactory" /> , chyba że jawnie określono inny token anulowania, podczas wywoływania metody fabryki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-140">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="57e54-141">Domyślne opcje używane podczas tworzenia zadania z tym <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-141">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="57e54-142">Domyślne opcje używane podczas tworzenia zadania kontynuacji z tym <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-142">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="57e54-143">Harmonogram domyślny na potrzeby zaplanować wszystkie zadania utworzone z tym <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-143">The default scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
          <span data-ttu-id="57e54-144">Wartość null oznacza, że <see cref="P:System.Threading.Tasks.TaskScheduler.Current" /> powinien być używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-144">A null value indicates that <see cref="P:System.Threading.Tasks.TaskScheduler.Current" /> should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-145">Inicjuje <see cref="T:System.Threading.Tasks.TaskFactory`1" /> wystąpienia z określoną konfiguracją.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-145">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-146">W tym konstruktorze <xref:System.Threading.Tasks.TaskCreationOptions> właściwość jest inicjowana na `creationOptions`, <xref:System.Threading.Tasks.TaskContinuationOptions> właściwość jest inicjowana na `continuationOptions`i <xref:System.Threading.Tasks.TaskScheduler> właściwość jest inicjowana na `scheduler`, chyba że ma ona `null`w którym to przypadku właściwość jest inicjowana do bieżącego harmonogramu (zobacz <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="57e54-146">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's `null`, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-147">
            <paramref name="creationOptions" /> lub <paramref name="continuationOptions" /> określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-147">
              <paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57e54-148">Pobiera token anulowania domyślny dla tej fabryki zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-148">Gets the default cancellation token for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57e54-149">Domyślny token anulowania dla tej fabryki zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-149">The default cancellation token for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-150">Ta właściwość zwraca domyślny token anulowania, który zostanie przypisany do wszystkie zadania utworzone w tej fabryce, chyba że jawnie określono inną wartość token anulowania podczas wywołania metody fabryki zadań.</span><span class="sxs-lookup"><span data-stu-id="57e54-150">This property returns the default cancellation token that will be assigned to all tasks created by this factory unless another cancellation token value is explicitly specified during the call to the task factory methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskContinuationOptions ContinuationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskContinuationOptions ContinuationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.ContinuationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContinuationOptions As TaskContinuationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskContinuationOptions ContinuationOptions { System::Threading::Tasks::TaskContinuationOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.ContinuationOptions : System.Threading.Tasks.TaskContinuationOptions" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.ContinuationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57e54-151">Pobiera <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> wartość wyliczenia dla tej fabryki zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-151">Gets the <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> enumeration value for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57e54-152">Jedna z wartości wyliczenia, które określa domyślne opcje kontynuacji dla tej fabryki zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-152">One of the enumeration values that specifies the default continuation options for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-153">Ta właściwość zwraca domyślne opcje kontynuacji dla tej fabryki.</span><span class="sxs-lookup"><span data-stu-id="57e54-153">This property returns the default continuation options for this factory.</span></span> <span data-ttu-id="57e54-154">One będzie służyć do tworzenia wszystkich zadań kontynuacji, o ile inne opcje są jawnie określony podczas wywołania metody tej fabryki.</span><span class="sxs-lookup"><span data-stu-id="57e54-154">They will be used to create all continuation tasks unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAll">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="57e54-155">Tworzy zadanie kontynuacji, które zostanie uruchomione po zakończeniu zestaw udostępnionego zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-155">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationFunction As Func(Of Task(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="57e54-156">Tablica zadań, z którego można kontynuować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-156">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-157">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-157">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-158">Tworzy zadanie kontynuacji, które zostanie uruchomione po zakończeniu zestaw udostępnionego zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-158">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-159">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-159">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-160">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-160">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-161">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-161">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-162">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-162">
              <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-163">- lub - <paramref name="continuationFunction" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-163">-or-  The <paramref name="continuationFunction" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-164">
            <paramref name="tasks" /> Tablica zawiera wartość null lub jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-164">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="57e54-165">Tablica zadań, z którego można kontynuować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-165">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-166">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-166">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-167">Token anulowania, który zostanie przypisany do nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-167">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-168">Tworzy zadanie kontynuacji, które zostanie uruchomione po zakończeniu zestaw udostępnionego zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-168">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-169">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-169">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-170">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-170">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-171">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-171">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="57e54-172">- lub - <see cref="T:System.Threading.CancellationTokenSource" /> utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-172">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-173">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-173">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-174">- lub - <paramref name="continuationFunction" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-174">-or-  <paramref name="continuationFunction" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-175">
            <paramref name="tasks" /> Tablica zawiera wartość null lub jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-175">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationFunction As Func(Of Task(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="57e54-176">Tablica zadań, z którego można kontynuować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-176">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-177">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-177">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="57e54-178">Jedna z wartości wyliczenia, które kontroluje sposób działania zadania utworzone kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-178">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="57e54-179">NotOn * lub * zadziała tylko wartości nie są prawidłowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-179">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-180">Tworzy zadanie kontynuacji, które zostanie uruchomione po zakończeniu zestaw udostępnionego zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-180">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-181">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-181">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-182">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-182">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-183">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-183">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-184">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-184">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-185">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-185">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-186">
            <paramref name="continuationOptions" /> Argument określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-186">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-187">
            <paramref name="tasks" /> Tablica zawiera wartość null lub jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-187">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="57e54-188">Tablica zadań, z którego można kontynuować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-188">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-189">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-189">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-190">Token anulowania, który zostanie przypisany do nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-190">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="57e54-191">Jedna z wartości wyliczenia, które kontroluje sposób działania zadania utworzone kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-191">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="57e54-192">NotOn * lub * zadziała tylko wartości nie są prawidłowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-192">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="57e54-193">Harmonogramu, która jest używana do zaplanowania zadania utworzone kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-193">The scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-194">Tworzy zadanie kontynuacji, które zostanie uruchomione po zakończeniu zestaw udostępnionego zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-194">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-195">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-195">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-196">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-196">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-197">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-197">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-198">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-198">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-199">- lub - <paramref name="scheduler" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-199">-or-  The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-200">
            <paramref name="tasks" /> Tablica zawiera wartość null lub jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-200">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-201">
            <paramref name="continuationOptions" /> Określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-201">
              <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-202">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-202">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="57e54-203">- lub - <see cref="T:System.Threading.CancellationTokenSource" /> utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-203">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="57e54-204">Typ wyniku Antecedent <c>zadania</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-204">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="57e54-205">Tablica zadań, z którego można kontynuować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-205">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-206">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-206">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-207">Tworzy zadanie kontynuacji, które zostanie uruchomione po zakończeniu zestaw udostępnionego zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-207">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-208">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-208">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-209">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-209">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-210">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-210">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-211">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-211">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-212">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-212">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-213">
            <paramref name="tasks" /> Tablica zawiera wartość null lub jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-213">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="57e54-214">Typ wyniku Antecedent <c>zadania</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-214">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="57e54-215">Tablica zadań, z którego można kontynuować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-215">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-216">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-216">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-217">Token anulowania, który zostanie przypisany do nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-217">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-218">Tworzy zadanie kontynuacji, które zostanie uruchomione po zakończeniu zestaw udostępnionego zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-218">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-219">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-219">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-220">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-220">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-221">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-221">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="57e54-222">- lub - <see cref="T:System.Threading.CancellationTokenSource" /> utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-222">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-223">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-223">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-224">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-224">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-225">
            <paramref name="tasks" /> Tablica zawiera wartość null lub jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-225">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="57e54-226">Typ wyniku Antecedent <c>zadania</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-226">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="57e54-227">Tablica zadań, z którego można kontynuować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-227">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-228">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-228">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="57e54-229">Jedna z wartości wyliczenia, które kontroluje sposób działania zadania utworzone kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-229">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="57e54-230">NotOn * lub * zadziała tylko wartości nie są prawidłowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-230">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-231">Tworzy zadanie kontynuacji, które zostanie uruchomione po zakończeniu zestaw udostępnionego zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-231">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-232">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-232">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-233">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-233">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-234">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-234">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-235">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-235">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-236">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-236">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-237">
            <paramref name="continuationOptions" /> Argument określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-237">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-238">
            <paramref name="tasks" /> Tablica zawiera wartość null lub jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-238">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="57e54-239">Typ wyniku Antecedent <c>zadania</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-239">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="57e54-240">Tablica zadań, z którego można kontynuować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-240">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-241">Delegat funkcji działa asynchronicznie, gdy wszystkie zadania w programie <c>zadania</c> tablicy została ukończona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-241">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-242">Token anulowania, który zostanie przypisany do nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-242">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="57e54-243">Jedna z wartości wyliczenia, które kontroluje sposób działania zadania utworzone kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-243">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="57e54-244">NotOn * lub * zadziała tylko wartości nie są prawidłowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-244">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="57e54-245">Harmonogramu, która jest używana do zaplanowania zadania utworzone kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-245">The scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-246">Tworzy zadanie kontynuacji, które zostanie uruchomione po zakończeniu zestaw udostępnionego zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-246">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-247">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-247">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-248">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-248">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-249">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-249">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-250">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-250">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-251">- lub - <paramref name="scheduler" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-251">-or-  The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-252">
            <paramref name="tasks" /> Tablica zawiera wartość null lub jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-252">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-253">
            <paramref name="continuationOptions" /> Argument określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-253">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-254">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-254">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="57e54-255">- lub - <see cref="T:System.Threading.CancellationTokenSource" /> utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-255">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAny">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="57e54-256">Tworzy kontynuacji zadanie, które zostanie uruchomione po zakończeniu zadań wiążących się z podanego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-256">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationFunction As Func(Of Task, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="57e54-257">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-257">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-258">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-258">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-259">Tworzy kontynuacji zadanie, które zostanie uruchomione po zakończeniu zadań wiążących się z podanego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-259">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-260">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-260">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-261">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-261">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-262">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-262">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-263">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-263">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-264">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-264">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-265">
            <paramref name="tasks" /> Tablica zawiera wartość null lub jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-265">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="57e54-266">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-266">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-267">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-267">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-268">Token anulowania, który zostanie przypisany do nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-268">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-269">Tworzy kontynuacji zadanie, które zostanie uruchomione po zakończeniu zadań wiążących się z podanego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-269">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-270">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-270">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-271">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-271">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-272">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-272">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="57e54-273">- lub - <see cref="T:System.Threading.CancellationTokenSource" /> utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-273">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-274">
            <paramref name="tasks" /> Tablicy ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-274">The <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="57e54-275">- lub - <paramref name="continuationFunction" /> argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-275">-or-  The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-276">
            <paramref name="tasks" /> Tablica zawiera wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-276">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="57e54-277">- lub - <paramref name="tasks" /> tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-277">-or-  The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationFunction As Func(Of Task, TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="57e54-278">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-278">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-279">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-279">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="57e54-280">Jedna z wartości wyliczenia, które kontroluje sposób działania zadania utworzone kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-280">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="57e54-281">
            <see langword="NotOn*" /> Lub <see langword="OnlyOn*" /> wartości są nieprawidłowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-281">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-282">Tworzy kontynuacji zadanie, które zostanie uruchomione po zakończeniu zadań wiążących się z podanego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-282">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-283">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-283">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-284">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-284">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-285">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-285">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-286">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-286">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-287">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-287">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-288">
            <paramref name="continuationOptions" /> Argument określa nieprawidłowej wartości wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-288">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-289">
            <paramref name="tasks" /> Tablica zawiera wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-289">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="57e54-290">- lub - <paramref name="tasks" /> tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-290">-or-  The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="57e54-291">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-291">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-292">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-292">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-293">Token anulowania, który zostanie przypisany do nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-293">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="57e54-294">Jedna z wartości wyliczenia, które kontroluje sposób działania zadania utworzone kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-294">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="57e54-295">
            <see langword="NotOn*" /> Lub <see langword="OnlyOn*" /> wartości są nieprawidłowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-295">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="57e54-296">Harmonogram zadań, służący do zaplanowania zadania utworzone kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-296">The task scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-297">Tworzy kontynuacji zadanie, które zostanie uruchomione po zakończeniu zadań wiążących się z podanego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-297">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-298">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-298">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-299">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-299">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-300">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-300">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-301">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-301">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-302">- lub - <paramref name="scheduler" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-302">-or-  The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-303">
            <paramref name="tasks" /> Tablica zawiera wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-303">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="57e54-304">- lub - <paramref name="tasks" /> tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-304">-or-  The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-305">
            <paramref name="continuationOptions" /> Argument określa nieprawidłowy <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-305">The <paramref name="continuationOptions" /> argument specifies an invalid <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-306">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-306">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="57e54-307">- lub - <see cref="T:System.Threading.CancellationTokenSource" /> utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-307">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="57e54-308">Typ wyniku Antecedent <c>zadania</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-308">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="57e54-309">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-309">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-310">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-310">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-311">Tworzy kontynuacji zadanie, które zostanie uruchomione po zakończeniu zadań wiążących się z podanego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-311">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-312">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-312">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-313">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-313">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-314">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-314">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-315">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-315">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-316">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-316">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-317">
            <paramref name="tasks" /> Tablica zawiera wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-317">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="57e54-318">- lub - <paramref name="tasks" /> tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-318">-or-  The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="57e54-319">Typ wyniku Antecedent <c>zadania</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-319">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="57e54-320">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-320">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-321">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-321">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-322">Token anulowania, który zostanie przypisany do nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-322">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-323">Tworzy kontynuacji zadanie, które zostanie uruchomione po zakończeniu zadań wiążących się z podanego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-323">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-324">Nowe zadanie kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-324">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-325">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-325">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-326">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-326">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="57e54-327">- lub - <see cref="T:System.Threading.CancellationTokenSource" /> utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-327">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-328">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-328">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-329">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-329">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-330">
            <paramref name="tasks" /> Tablica zawiera wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-330">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="57e54-331">- lub - <paramref name="tasks" /> tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-331">-or-  The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="57e54-332">Typ wyniku Antecedent <c>zadania</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-332">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="57e54-333">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-333">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-334">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-334">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="57e54-335">Jedna z wartości wyliczenia, które kontroluje sposób działania zadania utworzone kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-335">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="57e54-336">
            <see langword="NotOn*" /> Lub <see langword="OnlyOn*" /> wartości są nieprawidłowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-336">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-337">Tworzy kontynuacji zadanie, które zostanie uruchomione po zakończeniu zadań wiążących się z podanego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-337">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-338">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-338">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-339">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-339">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-340">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-340">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-341">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-341">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-342">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-342">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-343">
            <paramref name="continuationOptions" /> Argument określa nieprawidłowej wartości wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-343">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-344">
            <paramref name="tasks" /> Tablica zawiera wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-344">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="57e54-345">- lub - <paramref name="tasks" /> tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-345">-or-  The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="57e54-346">Typ wyniku Antecedent <c>zadania</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-346">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="57e54-347">Tablica zadań, z których mają być kontynuowana po ukończeniu zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-347">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="57e54-348">Delegat funkcji działa asynchronicznie, po jednym zadań w <c>zadania</c> zakończeniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-348">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-349">Token anulowania, który zostanie przypisany do nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-349">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="57e54-350">Jedna z wartości wyliczenia, które kontroluje sposób działania zadania utworzone kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-350">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="57e54-351">
            <see langword="NotOn*" /> Lub <see langword="OnlyOn*" /> wartości są nieprawidłowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-351">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="57e54-352">
            <see cref="T:System.Threading.Tasks.TaskScheduler" /> Używany do zaplanowania utworzony kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-352">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-353">Tworzy kontynuacji zadanie, które zostanie uruchomione po zakończeniu zadań wiążących się z podanego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-353">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-354">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-354">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-355">Po zakończeniu zadania jest jeden z tych stanów: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled> stanów.</span><span class="sxs-lookup"><span data-stu-id="57e54-355">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-356">
            <paramref name="tasks" /> Tablica jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-356">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-357">- lub - <paramref name="continuationFunction" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-357">-or-  The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-358">- lub - <paramref name="scheduler" /> argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-358">-or-  The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57e54-359">
            <paramref name="tasks" /> Tablica zawiera wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-359">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="57e54-360">- lub - <paramref name="tasks" /> tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-360">-or-  The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-361">
            <paramref name="continuationOptions" /> Argument określa nieprawidłową wartość wyliczenie TaskContinuationOptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-361">The <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-362">Jeden z elementów w <paramref name="tasks" /> tablicy został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-362">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="57e54-363">- lub - <see cref="T:System.Threading.CancellationTokenSource" /> utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-363">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskCreationOptions CreationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.CreationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreationOptions As TaskCreationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskCreationOptions CreationOptions { System::Threading::Tasks::TaskCreationOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.CreationOptions : System.Threading.Tasks.TaskCreationOptions" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.CreationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskCreationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57e54-364">Pobiera <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> wartość wyliczenia dla tej fabryki zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-364">Gets the <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> enumeration value for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57e54-365">Jedna z wartości wyliczenia, które określa domyślne opcje tworzenia tej fabryki zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-365">One of the enumeration values that specifies the default creation options for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-366">Ta właściwość zwraca domyślne opcje tworzenia dla tej fabryki.</span><span class="sxs-lookup"><span data-stu-id="57e54-366">This property returns the default creation options for this factory.</span></span> <span data-ttu-id="57e54-367">One będzie służyć do tworzenia wszystkich zadań, o ile inne opcje są jawnie określony podczas wywołania metody tej fabryki.</span><span class="sxs-lookup"><span data-stu-id="57e54-367">They will be used to create all tasks unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromAsync">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="57e54-368">Tworzy wystąpienie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-368">Creates a task instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="57e54-369">
            <see cref="T:System.IAsyncResult" /> Którego zakończenia zdarzenia powinny wywoływać przetwarzania <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-369">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="57e54-370">Delegat funkcji, która przetwarza ukończonej <c>asyncResult</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-370">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-371">Tworzy zadanie, które wykonuje funkcja metody end po określonej <see cref="T:System.IAsyncResult" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-371">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-372">A <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-372">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-373">
            <paramref name="asyncResult" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-373">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-374">- lub - <paramref name="endMethod" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-374">-or-  The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginMethod">
          <span data-ttu-id="57e54-375">Delegat, który rozpoczyna operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-375">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="57e54-376">Delegat, który kończy operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-376">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="57e54-377">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-377">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-378">Tworzy zadanie, które reprezentuje parę begin i metody end, zgodnych ze wzorcem Model programowania asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-378">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-379">Utworzone zadanie reprezentujące operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-379">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-380">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="57e54-380">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="57e54-381">Wyjątki dla `endmethod` są generowane, gdy trwa oczekiwanie na zadanie zwrócone.</span><span class="sxs-lookup"><span data-stu-id="57e54-381">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-382">
            <paramref name="beginMethod" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-382">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-383">- lub - <paramref name="endMethod" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-383">-or-  The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="57e54-384">
            <see cref="T:System.IAsyncResult" /> Którego zakończenia zdarzenia powinny wywoływać przetwarzania <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-384">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="57e54-385">Delegat funkcji, która przetwarza ukończonej <c>asyncResult</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-385">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="57e54-386">Jedna z wartości wyliczenia, które kontroluje sposób działania utworzone zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-386">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-387">Tworzy zadanie, które wykonuje funkcja metody end po określonej <see cref="T:System.IAsyncResult" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-387">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-388">Zadanie reprezentujące operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-388">A task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-389">
            <paramref name="asyncResult" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-389">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-390">- lub - <paramref name="endMethod" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-390">-or-  The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-391">
            <paramref name="creationOptions" /> Argument określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-391">The <paramref name="creationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="beginMethod">
          <span data-ttu-id="57e54-392">Delegat, który rozpoczyna operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-392">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="57e54-393">Delegat, który kończy operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-393">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="57e54-394">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-394">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="57e54-395">Jedna z wartości wyliczenia, które kontroluje sposób działania utworzone zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-395">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-396">Tworzy zadanie, które reprezentuje parę begin i metody end, zgodnych ze wzorcem Model programowania asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-396">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-397">Utworzony <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-397">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-398">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="57e54-398">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="57e54-399">Wyjątki dla `endmethod` są generowane, gdy trwa oczekiwanie na zadanie zwrócone.</span><span class="sxs-lookup"><span data-stu-id="57e54-399">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-400">
            <paramref name="beginMethod" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-400">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-401">- lub - <paramref name="endMethod" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-401">-or-  The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-402">
            <paramref name="creationOptions" /> Argument określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-402">The <paramref name="creationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions, scheduler As TaskScheduler) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="57e54-403">
            <see cref="T:System.IAsyncResult" /> Którego zakończenia zdarzenia powinny wywoływać przetwarzania <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-403">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="57e54-404">Delegat funkcji, która przetwarza ukończonej <c>asyncResult</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-404">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="57e54-405">Jedna z wartości wyliczenia, które kontroluje sposób działania utworzone zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-405">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="57e54-406">Harmonogram zadań, który służy do planowania zadań, która wykonuje end — metoda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-406">The task scheduler that is used to schedule the task that executes the end method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-407">Tworzy zadanie, które wykonuje funkcja metody end po określonej <see cref="T:System.IAsyncResult" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-407">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-408">Utworzone zadanie reprezentujące operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-408">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-409">
            <paramref name="asyncResult" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-409">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-410">- lub - <paramref name="endMethod" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-410">-or-  The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-411">- lub - <paramref name="scheduler" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-411">-or-  The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-412">
            <paramref name="creationOptions" /> Parametr określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-412">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="57e54-413">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-413">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="57e54-414">Delegat, który rozpoczyna operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-414">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="57e54-415">Delegat, który kończy operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-415">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="57e54-416">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-416">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="57e54-417">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-417">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-418">Tworzy zadanie, które reprezentuje parę begin i metody end, zgodnych ze wzorcem Model programowania asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-418">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-419">Utworzone zadanie reprezentujące operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-419">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-420">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="57e54-420">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="57e54-421">Wyjątki dla `endmethod` są generowane, gdy trwa oczekiwanie na zadanie zwrócone.</span><span class="sxs-lookup"><span data-stu-id="57e54-421">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-422">
            <paramref name="beginMethod" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-422">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-423">- lub - <paramref name="endMethod" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-423">-or-  The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="57e54-424">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-424">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="57e54-425">Delegat, który rozpoczyna operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-425">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="57e54-426">Delegat, który kończy operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-426">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="57e54-427">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-427">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="57e54-428">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-428">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="57e54-429">Jedna z wartości wyliczenia, które kontroluje sposób działania utworzone zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-429">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-430">Tworzy zadanie, które reprezentuje parę begin i metody end, zgodnych ze wzorcem Model programowania asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-430">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-431">Utworzone zadanie reprezentujące operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-431">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-432">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="57e54-432">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="57e54-433">Wyjątki dla `endmethod` są generowane, gdy trwa oczekiwanie na zadanie zwrócone.</span><span class="sxs-lookup"><span data-stu-id="57e54-433">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-434">
            <paramref name="beginMethod" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-434">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-435">- lub - <paramref name="endMethod" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-435">-or-  The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-436">
            <paramref name="creationOptions" /> Parametr określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-436">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="57e54-437">Typ drugiego argumentu przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-437">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="57e54-438">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-438">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="57e54-439">Delegat, który rozpoczyna operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-439">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="57e54-440">Delegat, który kończy operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-440">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="57e54-441">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-441">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="57e54-442">Drugi argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-442">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="57e54-443">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-443">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-444">Tworzy zadanie, które reprezentuje parę begin i metody end, zgodnych ze wzorcem Model programowania asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-444">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-445">Utworzone zadanie reprezentujące operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-445">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-446">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="57e54-446">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="57e54-447">Wyjątki dla `endmethod` są generowane, gdy trwa oczekiwanie na zadanie zwrócone.</span><span class="sxs-lookup"><span data-stu-id="57e54-447">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-448">
            <paramref name="beginMethod" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-448">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-449">- lub - <paramref name="endMethod" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-449">-or-  The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="57e54-450">Typ drugiego argumentu przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-450">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="57e54-451">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-451">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="57e54-452">Delegat, który rozpoczyna operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-452">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="57e54-453">Delegat, który kończy operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-453">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="57e54-454">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-454">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="57e54-455">Drugi argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-455">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="57e54-456">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-456">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="57e54-457">Obiekt, który kontroluje sposób działania utworzony <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-457">An object that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-458">Tworzy zadanie, które reprezentuje parę begin i metody end, zgodnych ze wzorcem Model programowania asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-458">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-459">Utworzone zadanie reprezentujące operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-459">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-460">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="57e54-460">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="57e54-461">Wyjątki dla `endmethod` są generowane, gdy trwa oczekiwanie na zadanie zwrócone.</span><span class="sxs-lookup"><span data-stu-id="57e54-461">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-462">
            <paramref name="beginMethod" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-462">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-463">- lub - <paramref name="endMethod" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-463">-or-  The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-464">
            <paramref name="creationOptions" /> Parametr określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-464">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="57e54-465">Typ drugiego argumentu przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-465">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="57e54-466">Typ trzeci argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-466">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="57e54-467">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-467">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="57e54-468">Delegat, który rozpoczyna operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-468">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="57e54-469">Delegat, który kończy operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-469">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="57e54-470">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-470">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="57e54-471">Drugi argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-471">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="57e54-472">Trzeci argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-472">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="57e54-473">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-473">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-474">Tworzy zadanie, które reprezentuje parę begin i metody end, zgodnych ze wzorcem Model programowania asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-474">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-475">Utworzone zadanie reprezentujące operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-475">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-476">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="57e54-476">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="57e54-477">Wyjątki dla `endmethod` są generowane, gdy trwa oczekiwanie na zadanie zwrócone.</span><span class="sxs-lookup"><span data-stu-id="57e54-477">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-478">
            <paramref name="beginMethod" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-478">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-479">- lub - <paramref name="endMethod" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-479">-or-  The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="57e54-480">Typ drugiego argumentu przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-480">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="57e54-481">Typ trzeci argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-481">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="57e54-482">Typ pierwszego argumentu przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-482">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="57e54-483">Delegat, który rozpoczyna operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-483">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="57e54-484">Delegat, który kończy operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-484">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="57e54-485">Pierwszy argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-485">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="57e54-486">Drugi argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-486">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="57e54-487">Trzeci argument przekazany do <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-487">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="57e54-488">Obiekt zawierający dane, które mają być używane przez <c>beginMethod</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-488">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="57e54-489">Obiekt, który kontroluje sposób działania utworzone zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-489">An object that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-490">Tworzy zadanie, które reprezentuje parę begin i metody end, zgodnych ze wzorcem Model programowania asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-490">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-491">Utworzone zadanie reprezentujące operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-491">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-492">Ta metoda zgłasza wszelkie wyjątki zgłaszane przez `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="57e54-492">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="57e54-493">Wyjątki dla `endmethod` są generowane, gdy trwa oczekiwanie na zadanie zwrócone.</span><span class="sxs-lookup"><span data-stu-id="57e54-493">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-494">
            <paramref name="beginMethod" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-494">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-495">- lub - <paramref name="endMethod" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-495">-or-  The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-496">
            <paramref name="creationOptions" /> Parametr określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-496">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Scheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler Scheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler Scheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.Scheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ Scheduler { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheduler : System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.Scheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57e54-497">Pobiera harmonogram zadań dla tej fabryki zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-497">Gets the task scheduler for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57e54-498">Harmonogram zadań dla tej fabryki zadań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-498">The task scheduler for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-499">Ta właściwość zwraca harmonogram domyślny dla tej fabryki.</span><span class="sxs-lookup"><span data-stu-id="57e54-499">This property returns the default scheduler for this factory.</span></span> <span data-ttu-id="57e54-500">Będzie służyć do zaplanowania wszystkie zadania, chyba że jawnie określono inny harmonogramu podczas wywołania metody tej fabryki.</span><span class="sxs-lookup"><span data-stu-id="57e54-500">It will be used to schedule all tasks unless another scheduler is explicitly specified during calls to this factory's methods.</span></span>  
  
 <span data-ttu-id="57e54-501">Jeśli ta właściwość zwraca `null`, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> będą używane.</span><span class="sxs-lookup"><span data-stu-id="57e54-501">If this property returns `null`, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> will be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartNew">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="57e54-502">Utworzenie i uruchomienie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-502">Creates and starts a task.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew function" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="57e54-503">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępne za pośrednictwem zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-503">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-504">Utworzenie i uruchomienie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-504">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-505">Uruchomiono zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-505">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-506">Wywoływanie `StartNew` jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z <xref:System.Threading.Tasks.Task%601> konstruktorów, a następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> metody do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="57e54-506">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors, and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="57e54-507">Jednakże, chyba że muszą być oddzielone tworzenie i planowanie, `StartNew` przedstawia zalecane podejście, dla uproszczenia i wydajności.</span><span class="sxs-lookup"><span data-stu-id="57e54-507">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-508">
            <paramref name="function" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-508">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of Object, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="57e54-509">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępne za pośrednictwem zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-509">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="57e54-510">Obiekt zawierający dane, które mają być używane przez <c>funkcja</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-510">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-511">Utworzenie i uruchomienie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-511">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-512">Uruchomiono zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-512">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-513">Wywoływanie `StartNew` jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z <xref:System.Threading.Tasks.Task%601> konstruktory i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> metody do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="57e54-513">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="57e54-514">Jednakże, chyba że muszą być oddzielone tworzenie i planowanie, `StartNew` przedstawia zalecane podejście, dla uproszczenia i wydajności.</span><span class="sxs-lookup"><span data-stu-id="57e54-514">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-515">
            <paramref name="function" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-515">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="57e54-516">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępne za pośrednictwem zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-516">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-517">Token anulowania, który zostanie przypisany do nowego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-517">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-518">Utworzenie i uruchomienie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-518">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-519">Uruchomiono zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-519">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-520">Wywoływanie `StartNew` jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z <xref:System.Threading.Tasks.Task%601> konstruktory i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> metody do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="57e54-520">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="57e54-521">Jednakże, chyba że muszą być oddzielone tworzenie i planowanie, `StartNew` przedstawia zalecane podejście, dla uproszczenia i wydajności.</span><span class="sxs-lookup"><span data-stu-id="57e54-521">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-522">Token anulowania źródła utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-522">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-523">
            <paramref name="function" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-523">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="57e54-524">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępne za pośrednictwem zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-524">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="57e54-525">Jedna z wartości wyliczenia, które kontroluje sposób działania utworzone zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-525">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-526">Utworzenie i uruchomienie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-526">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-527">Rozpoczęto <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-527">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-528">Wywoływanie `StartNew` jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z <xref:System.Threading.Tasks.Task%601> konstruktory i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> metody do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="57e54-528">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="57e54-529">Jednakże, chyba że muszą być oddzielone tworzenie i planowanie, `StartNew` przedstawia zalecane podejście, dla uproszczenia i wydajności.</span><span class="sxs-lookup"><span data-stu-id="57e54-529">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-530">
            <paramref name="function" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-530">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-531">
            <paramref name="creationOptions" /> Parametr określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-531">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="57e54-532">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępne za pośrednictwem zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-532">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="57e54-533">Obiekt zawierający dane, które mają być używane przez <c>funkcja</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-533">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-534">Token anulowania, który zostanie przypisany do nowego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-534">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-535">Utworzenie i uruchomienie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-535">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-536">Uruchomiono zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-536">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-537">Wywoływanie `StartNew` jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z <xref:System.Threading.Tasks.Task%601> konstruktory i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> metody do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="57e54-537">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="57e54-538">Jednakże, chyba że muszą być oddzielone tworzenie i planowanie, `StartNew` przedstawia zalecane podejście, dla uproszczenia i wydajności.</span><span class="sxs-lookup"><span data-stu-id="57e54-538">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-539">Token anulowania źródła utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-539">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-540">
            <paramref name="function" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-540">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of Object, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="57e54-541">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępne za pośrednictwem zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-541">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="57e54-542">Obiekt zawierający dane, które mają być używane przez <c>funkcja</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-542">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="57e54-543">Jedna z wartości wyliczenia, które kontroluje sposób działania utworzone zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-543">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-544">Utworzenie i uruchomienie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-544">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-545">Uruchomiono zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-545">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-546">Wywoływanie `StartNew` jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z <xref:System.Threading.Tasks.Task%601> konstruktory i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> metody do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="57e54-546">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="57e54-547">Jednakże, chyba że muszą być oddzielone tworzenie i planowanie, `StartNew` przedstawia zalecane podejście, dla uproszczenia i wydajności.</span><span class="sxs-lookup"><span data-stu-id="57e54-547">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-548">
            <paramref name="function" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-548">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-549">
            <paramref name="creationOptions" /> Parametr określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-549">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="57e54-550">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępne za pośrednictwem zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-550">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-551">Token anulowania, który zostanie przypisany do nowego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-551">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="57e54-552">Jedna z wartości wyliczenia, które kontroluje sposób działania utworzone zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-552">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="57e54-553">Harmonogram zadań, służący do zaplanowania zadania utworzone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-553">The task scheduler that is used to schedule the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-554">Utworzenie i uruchomienie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-554">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-555">Uruchomiono zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-555">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-556">Wywoływanie `StartNew` jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z <xref:System.Threading.Tasks.Task%601> konstruktory i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> metody do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="57e54-556">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="57e54-557">Jednakże, chyba że muszą być oddzielone tworzenie i planowanie, `StartNew` przedstawia zalecane podejście, dla uproszczenia i wydajności.</span><span class="sxs-lookup"><span data-stu-id="57e54-557">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-558">Token anulowania źródła utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-558">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-559">
            <paramref name="function" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-559">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-560">- lub - <paramref name="scheduler" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-560">-or-  The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-561">
            <paramref name="creationOptions" /> Parametr określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-561">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="57e54-562">Delegat funkcji zwracającej przyszłych wynik, który ma być dostępne za pośrednictwem zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-562">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="57e54-563">Obiekt zawierający dane, które mają być używane przez <c>funkcja</c> delegowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-563">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57e54-564">Token anulowania, który zostanie przypisany do nowego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-564">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="57e54-565">Jedna z wartości wyliczenia, które kontroluje sposób działania utworzone zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-565">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="57e54-566">Harmonogram zadań, służący do zaplanowania zadania utworzone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-566">The task scheduler that is used to schedule the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57e54-567">Utworzenie i uruchomienie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-567">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57e54-568">Uruchomiono zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-568">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e54-569">Wywoływanie `StartNew` jest funkcjonalnym odpowiednikiem tworzenia zadania przy użyciu jednej z <xref:System.Threading.Tasks.Task%601> konstruktory i następnie wywołania <xref:System.Threading.Tasks.Task.Start%2A> metody do zaplanowania jej wykonanie.</span><span class="sxs-lookup"><span data-stu-id="57e54-569">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="57e54-570">Jednakże, chyba że muszą być oddzielone tworzenie i planowanie, `StartNew` przedstawia zalecane podejście, dla uproszczenia i wydajności.</span><span class="sxs-lookup"><span data-stu-id="57e54-570">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="57e54-571">Token anulowania źródła utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-571">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57e54-572">
            <paramref name="function" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-572">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57e54-573">- lub - <paramref name="scheduler" /> argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-573">-or-  The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57e54-574">
            <paramref name="creationOptions" /> Parametr określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57e54-574">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>