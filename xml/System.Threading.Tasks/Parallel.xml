<Type Name="Parallel" FullName="System.Threading.Tasks.Parallel">
  <TypeSignature Language="C#" Value="public static class Parallel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Parallel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Parallel" />
  <TypeSignature Language="VB.NET" Value="Public Class Parallel" />
  <TypeSignature Language="C++ CLI" Value="public ref class Parallel abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a6201-101">Zapewnia obsługę pętle równoległe i regionów.</span><span class="sxs-lookup"><span data-stu-id="a6201-101">Provides support for parallel loops and regions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-102"><xref:System.Threading.Tasks.Parallel> Klasa udostępnia dane oparte na bibliotece równoległych elementy zastępcze typowych operacji takich jak pętle, dla każdej pętli i wykonywania zbiór instrukcji.</span><span class="sxs-lookup"><span data-stu-id="a6201-102">The <xref:System.Threading.Tasks.Parallel> class provides library-based data parallel replacements for common operations such as for loops, for each loops, and execution of a set of statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6201-103">W tym przykładzie przedstawiono różne podejścia do wykonania pętli równoległej przy użyciu wielu konstrukcji języka.</span><span class="sxs-lookup"><span data-stu-id="a6201-103">This example demonstrates several approaches to implementing a parallel loop using multiple language constructs.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#07](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelintro.cs#07)]
 [!code-vb[System.Threading.Tasks.Parallel#07](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelintro.vb#07)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="a6201-104">Wszystkie publiczne i chronione elementy członkowskie <see cref="T:System.Threading.Tasks.Parallel" /> są wątkowo i mogą być używane jednocześnie wiele wątków.</span><span class="sxs-lookup"><span data-stu-id="a6201-104">All public and protected members of <see cref="T:System.Threading.Tasks.Parallel" /> are thread-safe and may be used concurrently from multiple threads.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName="For">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6201-105">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) pętli, w którym iteracji może działać równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-105">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop in which iterations may run in parallel.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, Action&lt;int,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Action`2&lt;int32, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Integer, toExclusive As Integer, body As Action(Of Integer, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, Action&lt;int, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="a6201-106">Indeks początkowy, włącznie.</span><span class="sxs-lookup"><span data-stu-id="a6201-106">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="a6201-107">Końcowy indeks, wyłącznego.</span><span class="sxs-lookup"><span data-stu-id="a6201-107">The end index, exclusive.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-108">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-108">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-109">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) pętli, w którym iteracji może działać równolegle i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-109">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-110">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-110">A  structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-111">`body` Delegata jest wywoływana raz dla każdej wartości w zakresie iteracji (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="a6201-111">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="a6201-112">Są dostarczane z dwoma argumentami:</span><span class="sxs-lookup"><span data-stu-id="a6201-112">It is provided with two arguments:</span></span>  
  
-   <span data-ttu-id="a6201-113"><xref:System.Int32> Wartość, która reprezentuje liczby iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-113">An <xref:System.Int32> value that represents the iteration count.</span></span>  
  
-   <span data-ttu-id="a6201-114">A <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do przedwcześnie wyjścia z pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-114">A <xref:System.Threading.Tasks.ParallelLoopState> instance that can be used to break out of the loop prematurely.</span></span> <span data-ttu-id="a6201-115"><xref:System.Threading.Tasks.ParallelLoopState> Obiekt jest tworzony przez kompilator; nie można utworzyć wystąpienia w kodzie użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a6201-115">The <xref:System.Threading.Tasks.ParallelLoopState> object is created by the compiler; it cannot be instantiated in user code.</span></span>  
  
 <span data-ttu-id="a6201-116">Wywoływanie <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> informuje metody `for` iteracji po bieżącym nie ma do wykonania operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-116">Calling the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> method informs the `for` operation that iterations after the current one don't have to execute.</span></span> <span data-ttu-id="a6201-117">Wszystkie iteracje przed bieżącą jedną będzie nadal jednak do wykonania, jeśli jeszcze tego nie.</span><span class="sxs-lookup"><span data-stu-id="a6201-117">However, all iterations before the current one will still have to be executed if they haven't already.</span></span>  
  
 <span data-ttu-id="a6201-118">W związku z tym wywołaniem <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> jest podobny do przy użyciu operacji podziału w ramach konwencjonalnej `for` , takich jak pętli w języku C#, ale nie jest idealne substitute: na przykład, nie ma żadnej gwarancji, że iteracji po bieżącym ostatecznie nie będzie wykonanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-118">Therefore, calling <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> is similar to using a break operation within a conventional `for` loop in a language like C#, but it is not a perfect substitute: For example, there is no guarantee that iterations after the current one will definitely not execute.</span></span>  
  
 <span data-ttu-id="a6201-119">Jeśli wykonywania wszystkich iteracji, zanim bieżący nie jest konieczne, użyj <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> metody zamiast <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>.</span><span class="sxs-lookup"><span data-stu-id="a6201-119">If executing all iterations before the current one is not necessary, use the <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> method instead of using <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>.</span></span> <span data-ttu-id="a6201-120">Wywoływanie <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> informuje o `for` pętli czy mogą porzucić wszystkie pozostałe iteracji, niezależnie od tego, czy są one przed lub po bieżącej iteracji, ponieważ wszystkie wymagane pracy będzie jeszcze zakończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-120">Calling <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> informs the `for` loop that it may abandon all remaining iterations, regardless of whether they're before or after the current iteration, because all required work will have already been completed.</span></span> <span data-ttu-id="a6201-121">Jednak z <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>, nie ma żadnych gwarancji, wskazujące, którzy nie zostanie wykonany innych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-121">However, as with <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>, there are no guarantees regarding which other iterations will not execute.</span></span>  
  
 <span data-ttu-id="a6201-122">Jeśli pętla jest zakończył pracę przedwcześnie, <xref:System.Threading.Tasks.ParallelLoopResult> struktury, która jest zwracana będzie zawierać informacje dotyczące zakończenia pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-122">If a loop is ended prematurely, the <xref:System.Threading.Tasks.ParallelLoopResult> structure that is returned will contain relevant information about the loop's completion.</span></span>  
  
 <span data-ttu-id="a6201-123">Jeśli `fromInclusive` jest większa niż lub równa `toExclusive`, metoda zwraca się natychmiast bez wykonywania żadnych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-123">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6201-124">Poniższy przykład wykonuje maksymalnie 100 iteracji pętli równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-124">The following example executes up to 100 iterations of a loop in parallel.</span></span> <span data-ttu-id="a6201-125">Wstrzymuje każdej iteracji dla losowo wybranym interwałem z zakresu od 1 do 1000 milisekund.</span><span class="sxs-lookup"><span data-stu-id="a6201-125">Each iteration pauses for a random interval from 1 to 1,000 milliseconds.</span></span> <span data-ttu-id="a6201-126">Określa losowo generowanej wartości, na które iteracji pętli <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="a6201-126">A randomly generated value determines on which iteration of the loop the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="a6201-127">Jako dane wyjściowe w przykładzie pokazano, nie iteracji, którego indeks jest większy niż <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> początek wartości właściwości po wywołaniu <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="a6201-127">As the output from the example shows, no iterations whose index is greater than the <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> property value start after the call to the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.ParallelLoopState#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallelloopstate/cs/break1.cs#2)]
 [!code-vb[System.Threading.Tasks.ParallelLoopState#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallelloopstate/vb/break1.vb#2)]  
  
 <span data-ttu-id="a6201-128">Ponieważ iteracji pętli są nadal mogą być wykonywane podczas <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> metoda jest wywoływana, wywołuje każdej iteracji <xref:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration%2A?displayProperty=nameWithType> właściwość do sprawdzenia, czy inny iteracji została wywołana <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="a6201-128">Because iterations of the loop are still likely to be executing when the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method is called, each iteration calls the <xref:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration%2A?displayProperty=nameWithType> property to check whether another iteration has called the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a6201-129">Jeśli wartość właściwości jest `true`, iteracji sprawdza wartość <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> właściwości i, jeśli jest większa niż wartość indeksu bieżącej iteracji, zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="a6201-129">If  the property value is `true`, the iteration checks the value of the <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> property and, if it is greater than the current iteration's index value, returns immediately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-130"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-130">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-131">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-131">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.ParallelLoopState" />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, Action&lt;int&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Action`1&lt;int32&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Integer, toExclusive As Integer, body As Action(Of Integer)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, Action&lt;int&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="a6201-132">Indeks początkowy, włącznie.</span><span class="sxs-lookup"><span data-stu-id="a6201-132">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="a6201-133">Końcowy indeks, wyłącznego.</span><span class="sxs-lookup"><span data-stu-id="a6201-133">The end index, exclusive.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-134">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-134">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-135">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) pętli, w którym iteracji może działać równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-135">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop in which iterations may run in parallel.</span></span></summary>
        <returns><span data-ttu-id="a6201-136">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-136">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-137">`body` Delegata jest wywoływana raz dla każdej wartości w zakresie iteracji (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="a6201-137">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="a6201-138">Jest podana liczba iteracji (<xref:System.Int32>) jako parametr.</span><span class="sxs-lookup"><span data-stu-id="a6201-138">It is provided with the iteration count (<xref:System.Int32>) as a parameter.</span></span>  
  
 <span data-ttu-id="a6201-139">Jeśli `fromInclusive` jest większa niż lub równa `toExclusive`, metoda zwraca się natychmiast bez wykonywania żadnych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-139">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6201-140">W poniższym przykładzie użyto <xref:System.Threading.Tasks.Parallel.For%2A> metodę 100 wywołania delegata, który generuje losowe bajtów wartości i oblicza sumę ich.</span><span class="sxs-lookup"><span data-stu-id="a6201-140">The following example uses the <xref:System.Threading.Tasks.Parallel.For%2A> method for 100 invocations of a delegate that generates random byte values and computes their sum.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel.For#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel.for/cs/for1.cs#1)]
 [!code-vb[System.Threading.Tasks.Parallel.For#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel.for/vb/for1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-141"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-141">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-142">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-142">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, Action&lt;long,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Action`2&lt;int64, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Long, toExclusive As Long, body As Action(Of Long, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, Action&lt;long, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="a6201-143">Indeks początkowy, włącznie.</span><span class="sxs-lookup"><span data-stu-id="a6201-143">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="a6201-144">Końcowy indeks, wyłącznego.</span><span class="sxs-lookup"><span data-stu-id="a6201-144">The end index, exclusive.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-145">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-145">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-146">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) pętli z indeksami 64-bitowych, w których iteracji może działać równolegle i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-146">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop with 64-bit indexes in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-147">A <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> strukturę, która zawiera informacje na temat jaka część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-147">A <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> structure that contains information on what portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-148">`body` Delegata jest wywoływana raz dla każdej wartości w zakresie iteracji (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="a6201-148">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="a6201-149">Znajduje się z następującymi parametrami: liczba iteracji (<xref:System.Int64>), a <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do przedwcześnie wyjścia z pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-149">It is provided with the following parameters: the iteration count (<xref:System.Int64>), and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 <span data-ttu-id="a6201-150">Wywoływanie <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> informuje metody `for` operacji iteracji po bieżącej nie muszą być wykonywane, ale wszystkie iteracje przed bieżącym czy.</span><span class="sxs-lookup"><span data-stu-id="a6201-150">Calling the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> method informs the `for` operation that iterations after the current one don’t have to be executed, but all iterations before the current one do.</span></span>  
  
 <span data-ttu-id="a6201-151">W związku z tym wywoływania przerwania jest podobny do przy użyciu operacji podziału w ramach konwencjonalnej `for` , takich jak pętli w języku C#, ale nie jest idealne substitute: na przykład, nie ma żadnej gwarancji tej iteracji po bieżącej zdecydowanie nie wykona.</span><span class="sxs-lookup"><span data-stu-id="a6201-151">Therefore, calling Break is similar to using a break operation within a conventional `for` loop in a language like C#, but it is not a perfect substitute: For example, there is no guarantee that iterations after the current one will definitely not execute.</span></span>  
  
 <span data-ttu-id="a6201-152">Jeśli wykonywania wszystkich iteracji, zanim bieżący nie jest konieczne, użyj <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> metody zamiast <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>.</span><span class="sxs-lookup"><span data-stu-id="a6201-152">If executing all iterations before the current one is not necessary, use the <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> method instead of using <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>.</span></span> <span data-ttu-id="a6201-153">Wywoływanie <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> informuje o `for` pętli czy mogą porzucić wszystkie pozostałe iteracji, niezależnie od tego, czy są one przed lub po bieżącej iteracji, ponieważ wszystkie wymagane pracy będzie jeszcze zakończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-153">Calling <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> informs the `for` loop that it may abandon all remaining iterations, regardless of whether they're before or after the current iteration, because all required work will have already been completed.</span></span> <span data-ttu-id="a6201-154">Jednak z <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>, nie ma żadnych gwarancji, wskazujące, którzy nie zostanie wykonany innych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-154">However, as with <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>, there are no guarantees regarding which other iterations will not execute.</span></span>  
  
 <span data-ttu-id="a6201-155">Jeśli pętla jest zakończył pracę przedwcześnie, <xref:System.Threading.Tasks.ParallelLoopResult> struktury, która jest zwracana będzie zawierać informacje dotyczące zakończenia pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-155">If a loop is ended prematurely, the <xref:System.Threading.Tasks.ParallelLoopResult> structure that is returned will contain relevant information about the loop's completion.</span></span>  
  
 <span data-ttu-id="a6201-156">Jeśli `fromInclusive` jest większa niż lub równa `toExclusive`, a następnie metoda zwraca się natychmiast bez wykonywania żadnych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-156">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-157"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-157">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-158">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-158">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, Action&lt;long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Action`1&lt;int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Long, toExclusive As Long, body As Action(Of Long)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, Action&lt;long&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="a6201-159">Indeks początkowy, włącznie.</span><span class="sxs-lookup"><span data-stu-id="a6201-159">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="a6201-160">Końcowy indeks, wyłącznego.</span><span class="sxs-lookup"><span data-stu-id="a6201-160">The end index, exclusive.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-161">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-161">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-162">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) pętli z indeksami 64-bitowych, w których iteracji może być uruchamiane równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-162">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop with 64-bit indexes in which iterations may run in parallel.</span></span></summary>
        <returns><span data-ttu-id="a6201-163">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-163">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-164">`body` Delegata jest wywoływana raz dla każdej wartości w zakresie iteracji (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="a6201-164">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="a6201-165">Jest podana liczba iteracji (<xref:System.Int64>) jako parametr.</span><span class="sxs-lookup"><span data-stu-id="a6201-165">It is provided with the iteration count (<xref:System.Int64>) as a parameter.</span></span>  
  
 <span data-ttu-id="a6201-166">Jeśli `fromInclusive` jest większa niż lub równa `toExclusive`, metoda zwraca się natychmiast bez wykonywania żadnych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-166">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-167"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-167">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-168">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-168">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;int,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;int32, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;int, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="a6201-169">Indeks początkowy, włącznie.</span><span class="sxs-lookup"><span data-stu-id="a6201-169">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="a6201-170">Końcowy indeks, wyłącznego.</span><span class="sxs-lookup"><span data-stu-id="a6201-170">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-171">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-171">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-172">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-172">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-173">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) pętli w iteracji, które może działać równolegle, można skonfigurować opcje pętli i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-173">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-174">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-174">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-175">`body` Delegata jest wywoływana raz dla każdej wartości w zakresie iteracji (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="a6201-175">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="a6201-176">Znajduje się z następującymi parametrami: liczba iteracji (<xref:System.Int32>), a <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do przedwcześnie wyjścia z pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-176">It is provided with the following parameters: the iteration count (<xref:System.Int32>), and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 <span data-ttu-id="a6201-177">Jeśli `fromInclusive` jest większa niż lub równa `toExclusive`, metoda zwraca się natychmiast bez wykonywania żadnych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-177">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-178"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-178">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-179"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-179">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-180">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-180">-or-</span></span>  
  
 <span data-ttu-id="a6201-181"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-181">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-182">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-182">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-183"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-183">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;int&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;int32&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;int&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="a6201-184">Indeks początkowy, włącznie.</span><span class="sxs-lookup"><span data-stu-id="a6201-184">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="a6201-185">Końcowy indeks, wyłącznego.</span><span class="sxs-lookup"><span data-stu-id="a6201-185">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-186">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-186">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-187">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-187">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-188">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) pętli, w którym iteracji może działać równolegle i można skonfigurować opcje pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-188">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop in which iterations may run in parallel and loop options can be configured.</span></span></summary>
        <returns><span data-ttu-id="a6201-189">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-189">A  structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-190">`body` Delegata jest wywoływana raz dla każdej wartości w zakresie iteracji (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="a6201-190">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="a6201-191">Jest podana liczba iteracji (<xref:System.Int32>) jako parametr.</span><span class="sxs-lookup"><span data-stu-id="a6201-191">It is provided with the iteration count (<xref:System.Int32>) as a parameter.</span></span>  
  
 <span data-ttu-id="a6201-192">Jeśli `fromInclusive` jest większa niż lub równa `toExclusive`, a następnie metoda zwraca się natychmiast bez wykonywania żadnych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-192">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6201-193">Poniższy przykład przedstawia sposób anulowanie równoległej pętli:</span><span class="sxs-lookup"><span data-stu-id="a6201-193">The following example shows how to cancel a parallel loop:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#05](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelforcancel.cs#05)]
 [!code-vb[System.Threading.Tasks.Parallel#05](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelforcancel.vb#05)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-194"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-194">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-195"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-195">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-196">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-196">-or-</span></span>  
  
 <span data-ttu-id="a6201-197"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-197">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-198">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-198">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-199"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-199">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;long,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;int64, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;long, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="a6201-200">Indeks początkowy, włącznie.</span><span class="sxs-lookup"><span data-stu-id="a6201-200">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="a6201-201">Końcowy indeks, wyłącznego.</span><span class="sxs-lookup"><span data-stu-id="a6201-201">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-202">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-202">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-203">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-203">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-204">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) pętli z 64-bitowe indeksy w iteracji, które może działać równolegle, można skonfigurować opcje pętli i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-204">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic)  loop with 64-bit indexes in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-205">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-205">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-206">`body` Delegata jest wywoływana raz dla każdej wartości w zakresie iteracji (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="a6201-206">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="a6201-207">Znajduje się z następującymi parametrami: liczba iteracji (<xref:System.Int64>), a <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do przedwcześnie wyjścia z pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-207">It is provided with the following parameters: the iteration count (<xref:System.Int64>), and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 <span data-ttu-id="a6201-208">Jeśli `fromInclusive` jest większa niż lub równa `toExclusive`, metoda zwraca się natychmiast bez wykonywania żadnych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-208">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6201-209">Poniższy przykład przedstawia użycie <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> metody z <xref:System.Threading.Tasks.ParallelOptions> obiektu:</span><span class="sxs-lookup"><span data-stu-id="a6201-209">The following example shows how to use the <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method with a <xref:System.Threading.Tasks.ParallelOptions> object:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#03](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelfor.cs#03)]
 [!code-vb[System.Threading.Tasks.Parallel#03](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelfor.vb#03)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-210"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-210">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-211"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-211">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-212">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-212">-or-</span></span>  
  
 <span data-ttu-id="a6201-213"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-213">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-214">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-214">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-215"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-215">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;long&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="a6201-216">Indeks początkowy, włącznie.</span><span class="sxs-lookup"><span data-stu-id="a6201-216">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="a6201-217">Końcowy indeks, wyłącznego.</span><span class="sxs-lookup"><span data-stu-id="a6201-217">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-218">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-218">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-219">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-219">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-220">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) pętli z indeksami 64-bitowych, w których iteracji może działać równolegle i można skonfigurować opcje pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-220">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop with 64-bit indexes in which iterations may run in parallel and loop options can be configured.</span></span></summary>
        <returns><span data-ttu-id="a6201-221">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-221">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-222">Obsługuje 64-bitowe indeksy.</span><span class="sxs-lookup"><span data-stu-id="a6201-222">Supports 64-bit indexes.</span></span> <span data-ttu-id="a6201-223">`body` Delegata jest wywoływana raz dla każdej wartości w zakresie iteracji (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="a6201-223">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="a6201-224">Jest podana liczba iteracji (<xref:System.Int64>) jako parametr.</span><span class="sxs-lookup"><span data-stu-id="a6201-224">It is provided with the iteration count (<xref:System.Int64>) as a parameter.</span></span>  
  
 <span data-ttu-id="a6201-225">Jeśli `fromInclusive` jest większa niż lub równa `toExclusive`, a następnie metoda zwraca się natychmiast bez wykonywania żadnych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-225">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6201-226">Poniższy przykład przedstawia użycie <xref:System.Threading.Tasks.ParallelOptions> na określanie harmonogramu zadań niestandardowych:</span><span class="sxs-lookup"><span data-stu-id="a6201-226">The following example shows how to use <xref:System.Threading.Tasks.ParallelOptions> to specify a custom task scheduler:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#06](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelforwithscheduler.cs#06)]
 [!code-vb[System.Threading.Tasks.Parallel#06](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelforwithscheduler.vb#06)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-227"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-227">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-228"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-228">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-229">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-229">-or-</span></span>  
  
 <span data-ttu-id="a6201-230"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-230">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-231">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-231">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-232"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-232">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (int fromInclusive, int toExclusive, Func&lt;TLocal&gt; localInit, Func&lt;int,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int32 fromInclusive, int32 toExclusive, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int32, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For(Of TLocal) (fromInclusive As Integer, toExclusive As Integer, localInit As Func(Of TLocal), body As Func(Of Integer, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, Func&lt;TLocal&gt; ^ localInit, Func&lt;int, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal"><span data-ttu-id="a6201-233">Typ danych lokalnych wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-233">The type of the thread-local data.</span></span></typeparam>
        <param name="fromInclusive"><span data-ttu-id="a6201-234">Indeks początkowy, włącznie.</span><span class="sxs-lookup"><span data-stu-id="a6201-234">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="a6201-235">Końcowy indeks, wyłącznego.</span><span class="sxs-lookup"><span data-stu-id="a6201-235">The end index, exclusive.</span></span></param>
        <param name="localInit"><span data-ttu-id="a6201-236">Delegat funkcji, która zwraca stan początkowy danych lokalnych dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-236">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-237">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-237">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="a6201-238">Delegat, który wykonuje ostateczne działania na lokalnym stan każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-238">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="a6201-239">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) pętli z danymi lokalnymi wątku, w którym iteracji może działać równolegle i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-239">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop with thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-240">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-240">A  structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-241">`body` Delegata jest wywoływana raz dla każdej wartości w zakresie iteracji (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="a6201-241">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="a6201-242">Znajduje się z następującymi parametrami: liczba iteracji (<xref:System.Int32>), <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do wyjścia z pętli przedwcześnie i niektóre stanu lokalnego, który może być udostępniana między iteracji, które są wykonywane na tym samym wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-242">It is provided with the following parameters: the iteration count (<xref:System.Int32>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="a6201-243">`localInit` Delegata jest wywoływana raz dla każdego zadania, które uczestniczy w wykonywania pętli i zwraca stan początkowy lokalnego dla każdego z tych zadań.</span><span class="sxs-lookup"><span data-stu-id="a6201-243">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="a6201-244">Te stany początkowej są przekazywane do pierwszej `body` wywołania dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-244">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="a6201-245">Co wywołanie treści kolejnych zwraca wartość stanu prawdopodobnie modyfikacji przekazywany do następnego wywołania treści.</span><span class="sxs-lookup"><span data-stu-id="a6201-245">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="a6201-246">Na koniec ostatniego wywołania treści dla każdego zadania zwraca wartość stanu, który jest przekazywany do `localFinally` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-246">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="a6201-247">`localFinally` Delegata jest wywoływana raz na zadanie do wykonania akcji końcowego na stan lokalnego każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-247">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="a6201-248">Ten delegat może wywołać jednocześnie na wielu zadań; w związku z tym należy zsynchronizować dostęp do zmiennych udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="a6201-248">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="a6201-249"><xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> Metoda może używać zadania więcej niż wątków w okresie istnienia działania jako ukończone istniejącego zadania i zostały zastąpione przez nowe zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-249">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="a6201-250">Dzięki temu odpowiadającego <xref:System.Threading.Tasks.TaskScheduler> obiekt możliwość dodawania, zmieniania lub usuwania wątków, które usługa pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-250">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="a6201-251">Jeśli `fromInclusive` jest większa niż lub równa `toExclusive`, a następnie metoda zwraca się natychmiast bez wykonywania żadnych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-251">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 <span data-ttu-id="a6201-252">Na przykład, który używa tej metody, zobacz [porady: zapisywanie równoległej pętli for ze zmiennymi lokalnymi wątku](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-252">For an example that uses this method, see [How to: Write a Parallel.For Loop with Thread-Local Variables](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-253"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-253">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-254">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-254">-or-</span></span>  
  
 <span data-ttu-id="a6201-255"><paramref name="localInit" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-255">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-256">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-256">-or-</span></span>  
  
 <span data-ttu-id="a6201-257"><paramref name="localFinally" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-257">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-258">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-258">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (long fromInclusive, long toExclusive, Func&lt;TLocal&gt; localInit, Func&lt;long,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int64 fromInclusive, int64 toExclusive, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int64, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For(Of TLocal) (fromInclusive As Long, toExclusive As Long, localInit As Func(Of TLocal), body As Func(Of Long, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, Func&lt;TLocal&gt; ^ localInit, Func&lt;long, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal"><span data-ttu-id="a6201-259">Typ danych lokalnych wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-259">The type of the thread-local data.</span></span></typeparam>
        <param name="fromInclusive"><span data-ttu-id="a6201-260">Indeks początkowy, włącznie.</span><span class="sxs-lookup"><span data-stu-id="a6201-260">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="a6201-261">Końcowy indeks, wyłącznego.</span><span class="sxs-lookup"><span data-stu-id="a6201-261">The end index, exclusive.</span></span></param>
        <param name="localInit"><span data-ttu-id="a6201-262">Delegat funkcji, która zwraca stan początkowy danych lokalnych dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-262">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-263">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-263">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="a6201-264">Delegat, który wykonuje ostateczne działania na lokalnym stan każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-264">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="a6201-265">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) pętli z 64-bitowe indeksy i danymi lokalnymi wątku w którym iteracji może działać równolegle i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-265">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic)  loop with 64-bit indexes and thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-266">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-266">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-267">`body` Delegata jest wywoływana raz dla każdej wartości w zakresie iteracji (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="a6201-267">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="a6201-268">Znajduje się z następującymi parametrami: liczba iteracji (<xref:System.Int64>), <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do wyjścia z pętli przedwcześnie i niektóre stan lokalnego, który może być udostępniana między iteracji, które są wykonywane na tym samym zadaniem.</span><span class="sxs-lookup"><span data-stu-id="a6201-268">It is provided with the following parameters: the iteration count (<xref:System.Int64>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same task.</span></span>  
  
 <span data-ttu-id="a6201-269">`localInit` Delegata jest wywoływana raz dla każdego zadania, które uczestniczy w wykonywania pętli i zwraca stan początkowy lokalnego dla każdego z tych zadań.</span><span class="sxs-lookup"><span data-stu-id="a6201-269">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="a6201-270">Te stany początkowej są przekazywane do pierwszej `body` wywołania dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-270">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="a6201-271">Co wywołanie treści kolejnych zwraca wartość stanu prawdopodobnie modyfikacji przekazywany do następnego wywołania treści.</span><span class="sxs-lookup"><span data-stu-id="a6201-271">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="a6201-272">Na koniec ostatniego wywołania treści dla każdego zadania zwraca wartość stanu, który jest przekazywany do `localFinally` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-272">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="a6201-273">`localFinally` Delegata jest wywoływana raz na zadanie do wykonania akcji końcowego na stan lokalnego każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-273">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="a6201-274">Ten delegat może wywołać jednocześnie na wielu zadań; w związku z tym należy zsynchronizować dostęp do zmiennych udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="a6201-274">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="a6201-275"><xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> Metoda może używać zadania więcej niż wątków w okresie istnienia działania jako ukończone istniejącego zadania i zostały zastąpione przez nowe zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-275">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="a6201-276">Dzięki temu odpowiadającego <xref:System.Threading.Tasks.TaskScheduler> obiekt możliwość dodawania, zmieniania lub usuwania wątków, które usługa pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-276">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="a6201-277">Jeśli `fromInclusive` jest większa niż lub równa `toExclusive`, a następnie metoda zwraca się natychmiast bez wykonywania żadnych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-277">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 <span data-ttu-id="a6201-278">Na przykład, który używa tej metody, zobacz [porady: zapisywanie równoległej pętli for ze zmiennymi lokalnymi wątku](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-278">For an example that uses this method, see [How to: Write a Parallel.For Loop with Thread-Local Variables](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-279"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-279">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-280">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-280">-or-</span></span>  
  
 <span data-ttu-id="a6201-281"><paramref name="localInit" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-281">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-282">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-282">-or-</span></span>  
  
 <span data-ttu-id="a6201-283"><paramref name="localFinally" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-283">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-284">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-284">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;int,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int32 fromInclusive, int32 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int32, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;int, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal"><span data-ttu-id="a6201-285">Typ danych lokalnych wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-285">The type of the thread-local data.</span></span></typeparam>
        <param name="fromInclusive"><span data-ttu-id="a6201-286">Indeks początkowy, włącznie.</span><span class="sxs-lookup"><span data-stu-id="a6201-286">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="a6201-287">Końcowy indeks, wyłącznego.</span><span class="sxs-lookup"><span data-stu-id="a6201-287">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-288">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-288">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="a6201-289">Delegat funkcji, która zwraca stan początkowy danych lokalnych dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-289">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-290">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-290">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="a6201-291">Delegat, który wykonuje ostateczne działania na lokalnym stan każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-291">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="a6201-292">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) pętli z danymi lokalnymi wątku, w których iteracji może działać równolegle, można skonfigurować opcje pętli i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-292">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic)  loop with thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-293">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-293">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-294">`body` Delegata jest wywoływana raz dla każdej wartości w zakresie iteracji (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="a6201-294">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="a6201-295">Znajduje się z następującymi parametrami: liczba iteracji (<xref:System.Int32>), <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do wyjścia z pętli przedwcześnie i niektóre stan lokalnego, który może być udostępniana między iteracji, które są wykonywane na tym samym zadaniem.</span><span class="sxs-lookup"><span data-stu-id="a6201-295">It is provided with the following parameters: the iteration count (<xref:System.Int32>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same task.</span></span>  
  
 <span data-ttu-id="a6201-296">`localInit` Delegata jest wywoływana raz dla każdego zadania, które uczestniczy w wykonywania pętli i zwraca stan początkowy lokalnego dla każdego z tych zadań.</span><span class="sxs-lookup"><span data-stu-id="a6201-296">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="a6201-297">Te stany początkowej są przekazywane do pierwszej `body` wywołania dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-297">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="a6201-298">Co wywołanie treści kolejnych zwraca wartość stanu prawdopodobnie modyfikacji przekazywany do następnego wywołania treści.</span><span class="sxs-lookup"><span data-stu-id="a6201-298">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="a6201-299">Na koniec ostatniego wywołania treści dla każdego zadania zwraca wartość stanu, który jest przekazywany do `localFinally` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-299">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="a6201-300">`localFinally` Delegata jest wywoływana raz na zadanie do wykonania akcji końcowego na stan lokalnego każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-300">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="a6201-301">Ten delegat może wywołać jednocześnie na wielu wątków; w związku z tym należy zsynchronizować dostęp do zmiennych udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="a6201-301">This delegate might be invoked concurrently on multiple threads; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="a6201-302"><xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> Metoda może używać zadania więcej niż wątków w okresie istnienia działania jako ukończone istniejącego zadania i zostały zastąpione przez nowe zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-302">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="a6201-303">Dzięki temu odpowiadającego <xref:System.Threading.Tasks.TaskScheduler> obiekt możliwość dodawania, zmieniania lub usuwania wątków, które usługa pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-303">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="a6201-304">Jeśli `fromInclusive` jest większa niż lub równa `toExclusive`, a następnie metoda zwraca się natychmiast bez wykonywania żadnych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-304">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6201-305">W poniższym przykładzie użyto zmiennych thread-local można obliczyć sumę wyniki wiele długich operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-305">The following example uses thread-local variables to compute the sum of the results of many lengthy operations.</span></span> <span data-ttu-id="a6201-306">W tym przykładzie ogranicza stopień równoległości cztery.</span><span class="sxs-lookup"><span data-stu-id="a6201-306">This example limits the degree of parallelism to four.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#04](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/threadlocalforwithoptions.cs#04)]
 [!code-vb[System.Threading.Tasks.Parallel#04](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/threadlocalforwithoptions.vb#04)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-307"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-307">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-308">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-308">-or-</span></span>  
  
 <span data-ttu-id="a6201-309"><paramref name="localInit" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-309">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-310">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-310">-or-</span></span>  
  
 <span data-ttu-id="a6201-311"><paramref name="localFinally" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-311">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-312">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-312">-or-</span></span>  
  
 <span data-ttu-id="a6201-313"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-313">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-314"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-314">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-315"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-315">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-316">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-316">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;long,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int64 fromInclusive, int64 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int64, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;long, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal"><span data-ttu-id="a6201-317">Typ danych lokalnych wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-317">The type of the thread-local data.</span></span></typeparam>
        <param name="fromInclusive"><span data-ttu-id="a6201-318">Indeks początkowy, włącznie.</span><span class="sxs-lookup"><span data-stu-id="a6201-318">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="a6201-319">Końcowy indeks, wyłącznego.</span><span class="sxs-lookup"><span data-stu-id="a6201-319">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-320">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-320">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="a6201-321">Delegat funkcji, która zwraca dane lokalne dla każdego wątku stanu początkowego.</span><span class="sxs-lookup"><span data-stu-id="a6201-321">The function delegate that returns the initial state of the local data for each thread.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-322">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-322">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="a6201-323">Delegat, który wykonuje czynność końcowego na stan lokalnego każdy wątek.</span><span class="sxs-lookup"><span data-stu-id="a6201-323">The delegate that performs a final action on the local state of each thread.</span></span></param>
        <summary><span data-ttu-id="a6201-324">Wykonuje <see langword="for" /> (<see langword="For" /> w języku Visual Basic) z 64-bitowe indeksy w pętli i danych lokalnej wątku, w którym iteracji może działać równolegle, można skonfigurować opcje pętli i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-324">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop with 64-bit indexes and thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-325">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-325">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-326">`body` Delegata jest wywoływana raz dla każdej wartości w zakresie iteracji (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="a6201-326">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="a6201-327">Znajduje się z następującymi parametrami: liczba iteracji (<xref:System.Int64>), <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do wyjścia z pętli przedwcześnie i niektóre stanu lokalnego, który może być udostępniana między iteracji, które są wykonywane na tym samym wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-327">It is provided with the following parameters: the iteration count (<xref:System.Int64>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="a6201-328">`localInit` Delegata jest wywoływana raz dla każdego wątku, który uczestniczy w wykonywania pętli i zwraca stan początkowy lokalnego dla każdego z tych wątków.</span><span class="sxs-lookup"><span data-stu-id="a6201-328">The `localInit` delegate is invoked once for each thread that participates in the loop's execution and returns the initial local state for each of those threads.</span></span> <span data-ttu-id="a6201-329">Te stany początkowej są przekazywane do pierwszej `body` wywołań w każdym wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-329">These initial states are passed to the first `body` invocations on each thread.</span></span> <span data-ttu-id="a6201-330">Co wywołanie treści kolejnych zwraca wartość stanu prawdopodobnie modyfikacji przekazywany do następnego wywołania treści.</span><span class="sxs-lookup"><span data-stu-id="a6201-330">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="a6201-331">Na koniec ostatniego wywołania treści na każdy wątek zwraca wartość stanu, który jest przekazywany do `localFinally` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-331">Finally, the last body invocation on each thread returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="a6201-332">`localFinally` Delegata jest wywoływana raz na wątku w celu wykonania akcji końcowego na stan lokalnego dla każdego wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-332">The `localFinally` delegate is invoked once per thread to perform a final action on each thread's local state.</span></span> <span data-ttu-id="a6201-333">Ten delegat może wywołać jednocześnie na wielu wątków; w związku z tym należy zsynchronizować dostęp do zmiennych udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="a6201-333">This delegate might be invoked concurrently on multiple threads; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="a6201-334"><xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> Metoda może używać zadania więcej niż wątków w okresie istnienia działania jako ukończone istniejącego zadania i zostały zastąpione przez nowe zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-334">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="a6201-335">Dzięki temu odpowiadającego <xref:System.Threading.Tasks.TaskScheduler> obiekt możliwość dodawania, zmieniania lub usuwania wątków, które usługa pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-335">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="a6201-336">Jeśli `fromInclusive` jest większa niż lub równa `toExclusive`, a następnie metoda zwraca się natychmiast bez wykonywania żadnych iteracji.</span><span class="sxs-lookup"><span data-stu-id="a6201-336">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-337"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-337">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-338">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-338">-or-</span></span>  
  
 <span data-ttu-id="a6201-339"><paramref name="localInit" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-339">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-340">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-340">-or-</span></span>  
  
 <span data-ttu-id="a6201-341"><paramref name="localFinally" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-341">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-342">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-342">-or-</span></span>  
  
 <span data-ttu-id="a6201-343"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-343">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-344"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-344">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-345"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-345">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-346">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-346">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ForEach&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6201-347">Wykonuje <see langword="foreach" /> (<see langword="For Each " /> w języku Visual Basic) operacji, w którym iteracji może działać równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-347">Executes a <see langword="foreach" /> (<see langword="For Each " /> in Visual Basic) operation in which iterations may run in parallel.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As OrderablePartitioner(Of TSource), body As Action(Of TSource, ParallelLoopState, Long)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-348">Typ elementów w <c>źródła</c>.</span><span class="sxs-lookup"><span data-stu-id="a6201-348">The type of the elements in <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-349">Prędkości partycjonerem, który zawiera oryginalnego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a6201-349">The orderable partitioner that contains the original data source.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-350">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-350">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-351">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji na <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> w którym iteracji może działać równolegle i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-351">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-352">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-352">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-353">To przeciążenie jest dostępna dla scenariuszy, w której chcesz przesłonić domyślny schemat partycjonowania.</span><span class="sxs-lookup"><span data-stu-id="a6201-353">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="a6201-354">Na przykład małych jednostek pętli mogą korzystać z partycjonowania zakresu.</span><span class="sxs-lookup"><span data-stu-id="a6201-354">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="a6201-355"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda oczekuje niestandardowe partycjonery, aby obsługiwać partycjonowanie dynamiczne.</span><span class="sxs-lookup"><span data-stu-id="a6201-355">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="a6201-356">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) i [porady: Implementowanie partycji dynamicznych](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-356">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-357"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-357">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-358">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-358">-or-</span></span>  
  
 <span data-ttu-id="a6201-359"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-359">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6201-360"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> Właściwości w <paramref name="source" /> zwraca prędkości partycjonera <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-360">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> orderable partitioner returns <see langword="false" />.</span></span>  
  
 <span data-ttu-id="a6201-361">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-361">-or-</span></span>  
  
 <span data-ttu-id="a6201-362"><see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> Właściwość w partycjonera prędkości źródła zwraca <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-362">The <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> property in the source orderable partitioner returns <see langword="false" />.</span></span>  
  
 <span data-ttu-id="a6201-363">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-363">-or-</span></span>  
  
 <span data-ttu-id="a6201-364">Zwraca wszystkie metody w partycjonera prędkości źródła <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-364">Any methods in the source orderable partitioner return <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As Partitioner(Of TSource), body As Action(Of TSource, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-365">Typ elementów w <c>źródła</c>.</span><span class="sxs-lookup"><span data-stu-id="a6201-365">The type of the elements in <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-366">Partycjonerem, który zawiera oryginalnego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a6201-366">The partitioner that contains the original data source.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-367">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-367">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-368">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji na <see cref="T:System.Collections.Concurrent.Partitioner" /> której iteracji może działać równolegle, a stan pętli podlegający monitorowaniu i wykonywać na nich operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-368">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-369">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-369">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-370">To przeciążenie jest dostępna dla scenariuszy, w której chcesz przesłonić domyślny schemat partycjonowania.</span><span class="sxs-lookup"><span data-stu-id="a6201-370">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="a6201-371">Na przykład małych jednostek pętli mogą korzystać z partycjonowania zakresu.</span><span class="sxs-lookup"><span data-stu-id="a6201-371">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="a6201-372"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda oczekuje niestandardowe partycjonery, aby obsługiwać partycjonowanie dynamiczne.</span><span class="sxs-lookup"><span data-stu-id="a6201-372">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="a6201-373">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) i [porady: Implementowanie partycji dynamicznych](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-373">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-374"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-374">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-375">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-375">-or-</span></span>  
  
 <span data-ttu-id="a6201-376"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-376">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6201-377"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> Właściwości w <paramref name="source" /> zwraca obiekt partitioner <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-377">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span></span>  
  
 <span data-ttu-id="a6201-378">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-378">-or-</span></span>  
  
 <span data-ttu-id="a6201-379">Metody w <paramref name="source" /> zwraca obiekt partitioner <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-379">A method in the <paramref name="source" /> partitioner returns <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-380">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-380">-or-</span></span>  
  
 <span data-ttu-id="a6201-381"><see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> Metody w <paramref name="source" /> partycjoner zwrócił nieprawidłową liczbę partycji.</span><span class="sxs-lookup"><span data-stu-id="a6201-381">The <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> method in the <paramref name="source" /> partitioner does not return the correct number of partitions.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As Partitioner(Of TSource), body As Action(Of TSource)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, Action&lt;TSource&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-382">Typ elementów w <c>źródła</c>.</span><span class="sxs-lookup"><span data-stu-id="a6201-382">The type of the elements in <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-383">Partycjonerem, który zawiera oryginalnego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a6201-383">The partitioner that contains the original data source.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-384">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-384">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-385">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji na <see cref="T:System.Collections.Concurrent.Partitioner" /> w iteracji, które może działać równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-385">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel.</span></span></summary>
        <returns><span data-ttu-id="a6201-386">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-386">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-387">To przeciążenie jest dostępna dla scenariuszy, w której chcesz przesłonić domyślny schemat partycjonowania.</span><span class="sxs-lookup"><span data-stu-id="a6201-387">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="a6201-388">Na przykład małych jednostek pętli mogą korzystać z partycjonowania zakresu.</span><span class="sxs-lookup"><span data-stu-id="a6201-388">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="a6201-389"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda oczekuje niestandardowe partycjonery, aby obsługiwać partycjonowanie dynamiczne.</span><span class="sxs-lookup"><span data-stu-id="a6201-389">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="a6201-390">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) i [porady: Implementowanie partycji dynamicznych](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-390">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6201-391">Poniższy przykład przedstawia sposób Implementowanie partycjonera zakresu do używania z <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="a6201-391">The following example shows how to implement a range partitioner for use with <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel_RangePartitioners#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel_rangepartitioners/cs/rangepartitioner.cs#01)]
 [!code-vb[System.Threading.Tasks.Parallel_RangePartitioners#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel_rangepartitioners/vb/rangepart.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-392"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-392">The <paramref name="source" /> argument is  <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-393">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-393">-or-</span></span>  
  
 <span data-ttu-id="a6201-394"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-394">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6201-395"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> Właściwości w <paramref name="source" /> zwraca obiekt partitioner <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-395">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span></span>  
  
 <span data-ttu-id="a6201-396">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-396">-or-</span></span>  
  
 <span data-ttu-id="a6201-397">Wyjątek zgłaszany, gdy wszystkie metody w <paramref name="source" /> partycjonera zwrotu <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-397">The exception that is thrown when any methods in the <paramref name="source" /> partitioner return <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-398">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-398">-or-</span></span>  
  
 <span data-ttu-id="a6201-399"><see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> Metody w <paramref name="source" /> partycjoner zwrócił nieprawidłową liczbę partycji.</span><span class="sxs-lookup"><span data-stu-id="a6201-399">The <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> method in the <paramref name="source" /> partitioner does not return the correct number of partitions.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As IEnumerable(Of TSource), body As Action(Of TSource, ParallelLoopState, Long)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-400">Typ danych w źródle.</span><span class="sxs-lookup"><span data-stu-id="a6201-400">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-401">Źródło danych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a6201-401">An enumerable data source.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-402">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-402">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-403">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operację z 64-bitowe indeksy na <see cref="T:System.Collections.IEnumerable" /> której iteracji może działać równolegle, a stan pętli podlegający monitorowaniu i wykonywać na nich operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-403">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-404">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-404">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-405">`body` Delegata jest wywoływana raz dla każdego elementu w `source` wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="a6201-405">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="a6201-406">Znajduje się z następującymi parametrami: bieżący element <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do wyjścia z pętli przedwcześnie i indeks bieżącego elementu (<xref:System.Int64>).</span><span class="sxs-lookup"><span data-stu-id="a6201-406">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and the current element's index (<xref:System.Int64>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-407"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-407">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-408">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-408">-or-</span></span>  
  
 <span data-ttu-id="a6201-409"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-409">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-410">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-410">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As IEnumerable(Of TSource), body As Action(Of TSource, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-411">Typ danych w źródle.</span><span class="sxs-lookup"><span data-stu-id="a6201-411">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-412">Źródło danych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a6201-412">An enumerable data source.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-413">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-413">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-414">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji na <see cref="T:System.Collections.IEnumerable" /> której iteracji może działać równolegle, a stan pętli podlegający monitorowaniu i wykonywać na nich operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-414">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-415">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-415">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-416">`body` Delegata jest wywoływana raz dla każdego elementu w `source` wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="a6201-416">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="a6201-417">Znajduje się z następującymi parametrami: bieżący element i <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do przedwcześnie wyjścia z pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-417">It is provided with the following parameters: the current element, and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-418"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-418">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-419">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-419">-or-</span></span>  
  
 <span data-ttu-id="a6201-420"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-420">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-421">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-421">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As IEnumerable(Of TSource), body As Action(Of TSource)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Action&lt;TSource&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-422">Typ danych w źródle.</span><span class="sxs-lookup"><span data-stu-id="a6201-422">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-423">Źródło danych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a6201-423">An enumerable data source.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-424">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-424">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-425">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji na <see cref="T:System.Collections.IEnumerable" /> w iteracji, które może działać równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-425">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel.</span></span></summary>
        <returns><span data-ttu-id="a6201-426">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-426">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-427">`body` Delegata jest wywoływana raz dla każdego elementu w `source` wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="a6201-427">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="a6201-428">Z bieżącego elementu jest podana jako parametr.</span><span class="sxs-lookup"><span data-stu-id="a6201-428">It is provided with the current element as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6201-429">W poniższym przykładzie użyto <xref:System.Threading.Tasks.Parallel.ForEach%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Action%7B%60%600%7D%29> metodę, aby określić liczbę samogłoski i inny niż odstęp w pliku tekstowym.</span><span class="sxs-lookup"><span data-stu-id="a6201-429">The following example uses the <xref:System.Threading.Tasks.Parallel.ForEach%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Action%7B%60%600%7D%29> method to count the number of vowels and non-whitespace characters in a text file.</span></span> <span data-ttu-id="a6201-430">W takim przypadku <xref:System.Threading.Tasks.ParallelLoopResult> wartość zwrócona przez metodę jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="a6201-430">In this case, the <xref:System.Threading.Tasks.ParallelLoopResult> value returned by the method is ignored.</span></span> <span data-ttu-id="a6201-431">Należy pamiętać, że ponieważ operacje można uruchomić równolegle, musisz zapewnić, że zmienne licznik zwiększany jest operacją niepodzielną, i wiele wątków nie próbuj uzyskać jednocześnie dostęp do zmiennych licznika.</span><span class="sxs-lookup"><span data-stu-id="a6201-431">Note that, because operations can run in parallel, you must ensure that incrementing the counter variables is an atomic operation, and that multiple threads do not attempt to access the counter variables simultaneously.</span></span> <span data-ttu-id="a6201-432">W tym celu w przykładzie użyto `lock` instrukcji (w języku C#) i `SyncLock` instrukcji (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a6201-432">For this purpose, the example uses the `lock` statement (in C#) and the `SyncLock` statement (in Visual Basic).</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel.ForEach#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel.foreach/cs/foreach1.cs#1)]
 [!code-vb[System.Threading.Tasks.Parallel.ForEach#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel.foreach/vb/foreach1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-433"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-433">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-434">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-434">-or-</span></span>  
  
 <span data-ttu-id="a6201-435"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-435">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-436">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-436">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-437">Typ elementów w <c>źródła</c>.</span><span class="sxs-lookup"><span data-stu-id="a6201-437">The type of the elements in <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-438">Prędkości partycjonerem, który zawiera oryginalnego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a6201-438">The orderable partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-439">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-439">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-440">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-440">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-441">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji na <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> w iteracji, które może działać równolegle, można skonfigurować opcje pętli i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-441">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-442">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-442">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-443">To przeciążenie jest dostępna dla scenariuszy, w której chcesz przesłonić domyślny schemat partycjonowania.</span><span class="sxs-lookup"><span data-stu-id="a6201-443">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="a6201-444">Na przykład małych jednostek pętli mogą korzystać z partycjonowania zakresu.</span><span class="sxs-lookup"><span data-stu-id="a6201-444">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="a6201-445"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda oczekuje niestandardowe partycjonery, aby obsługiwać partycjonowanie dynamiczne.</span><span class="sxs-lookup"><span data-stu-id="a6201-445">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="a6201-446">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) i [porady: Implementowanie partycji dynamicznych](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-446">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-447"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-447">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-448"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-448">The <paramref name="source" /> argument is  <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-449">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-449">-or-</span></span>  
  
 <span data-ttu-id="a6201-450"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-450">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-451">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-451">-or-</span></span>  
  
 <span data-ttu-id="a6201-452"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-452">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-453"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-453">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6201-454"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> Właściwości w <paramref name="source" /> zwraca prędkości partycjonera <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-454">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> orderable partitioner returns <see langword="false" />.</span></span>  
  
 <span data-ttu-id="a6201-455">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-455">-or-</span></span>  
  
 <span data-ttu-id="a6201-456"><see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> Właściwości w <paramref name="source" /> zwraca prędkości partycjonera <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-456">The <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> property in the <paramref name="source" /> orderable partitioner returns <see langword="false" />.</span></span>  
  
 <span data-ttu-id="a6201-457">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-457">-or-</span></span>  
  
 <span data-ttu-id="a6201-458">Wyjątek zgłaszany, gdy wszystkie metody w <paramref name="source" /> prędkości partycjonera zwrotu <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-458">The exception that is thrown when any methods in the <paramref name="source" /> orderable partitioner return <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-459">Typ elementów w <c>źródła</c>.</span><span class="sxs-lookup"><span data-stu-id="a6201-459">The type of the elements in <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-460">Partycjonerem, który zawiera oryginalnego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a6201-460">The partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-461">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-461">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-462">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-462">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-463">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji na <see cref="T:System.Collections.Concurrent.Partitioner" /> w iteracji, które może działać równolegle, można skonfigurować opcje pętli i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-463">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-464">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-464">A  structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-465">To przeciążenie jest dostępna dla scenariuszy, w której chcesz przesłonić domyślny schemat partycjonowania.</span><span class="sxs-lookup"><span data-stu-id="a6201-465">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="a6201-466">Na przykład małych jednostek pętli mogą korzystać z partycjonowania zakresu.</span><span class="sxs-lookup"><span data-stu-id="a6201-466">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="a6201-467"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda oczekuje niestandardowe partycjonery, aby obsługiwać partycjonowanie dynamiczne.</span><span class="sxs-lookup"><span data-stu-id="a6201-467">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="a6201-468">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) i [porady: Implementowanie partycji dynamicznych](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-468">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-469"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-469">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-470"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-470">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-471"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-471">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-472">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-472">-or-</span></span>  
  
 <span data-ttu-id="a6201-473"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-473">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-474">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-474">-or-</span></span>  
  
 <span data-ttu-id="a6201-475"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-475">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6201-476"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> Właściwości w <paramref name="source" /> zwraca obiekt partitioner <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-476">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span></span>  
  
 <span data-ttu-id="a6201-477">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-477">-or-</span></span>  
  
 <span data-ttu-id="a6201-478">Wyjątek zgłaszany, gdy wszystkie metody w <paramref name="source" /> partycjonera zwrotu <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-478">The exception that is thrown when any methods in the <paramref name="source" /> partitioner return <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-479">Typ elementów w <c>źródła</c>.</span><span class="sxs-lookup"><span data-stu-id="a6201-479">The type of the elements in <c>source</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-480">Partycjonerem, który zawiera oryginalnego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a6201-480">The partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-481">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-481">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-482">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-482">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-483">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji na <see cref="T:System.Collections.Concurrent.Partitioner" /> w którym iteracji może działać równolegle i można skonfigurować opcje pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-483">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel and loop options can be configured.</span></span></summary>
        <returns><span data-ttu-id="a6201-484">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-484">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-485">To przeciążenie jest dostępna dla scenariuszy, w której chcesz przesłonić domyślny schemat partycjonowania.</span><span class="sxs-lookup"><span data-stu-id="a6201-485">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="a6201-486">Na przykład małych jednostek pętli mogą korzystać z partycjonowania zakresu.</span><span class="sxs-lookup"><span data-stu-id="a6201-486">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="a6201-487"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda oczekuje niestandardowe partycjonery, aby obsługiwać partycjonowanie dynamiczne.</span><span class="sxs-lookup"><span data-stu-id="a6201-487">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="a6201-488">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) i [porady: Implementowanie partycji dynamicznych](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-488">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-489"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-489">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-490"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-490">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-491"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-491">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-492">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-492">-or-</span></span>  
  
 <span data-ttu-id="a6201-493"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-493">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-494">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-494">-or-</span></span>  
  
 <span data-ttu-id="a6201-495"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-495">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6201-496"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> Właściwości w <paramref name="source" /> zwraca obiekt partitioner <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-496">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span></span>  
  
 <span data-ttu-id="a6201-497">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-497">-or-</span></span>  
  
 <span data-ttu-id="a6201-498">Wyjątek zgłaszany, gdy wszystkie metody w <paramref name="source" /> partycjonera zwrotu <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-498">The exception that is thrown when any methods in the <paramref name="source" /> partitioner return <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-499">Typ danych w źródle.</span><span class="sxs-lookup"><span data-stu-id="a6201-499">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-500">Źródło danych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a6201-500">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-501">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-501">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-502">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-502">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-503">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operację z 64-bitowe indeksy na <see cref="T:System.Collections.IEnumerable" /> w iteracji, które może działać równolegle, można skonfigurować opcje pętli i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-503">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-504">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-504">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-505">`body` Delegata jest wywoływana raz dla każdego elementu w `source` wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="a6201-505">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="a6201-506">Znajduje się z następującymi parametrami: bieżący element <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do wyjścia z pętli przedwcześnie i indeks bieżącego elementu (<xref:System.Int64>).</span><span class="sxs-lookup"><span data-stu-id="a6201-506">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and the current element's index (<xref:System.Int64>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-507"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-507">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-508"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-508">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-509">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-509">-or-</span></span>  
  
 <span data-ttu-id="a6201-510"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-510">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-511">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-511">-or-</span></span>  
  
 <span data-ttu-id="a6201-512"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-512">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-513">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-513">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-514"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-514">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-515">Typ danych w źródle.</span><span class="sxs-lookup"><span data-stu-id="a6201-515">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-516">Źródło danych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a6201-516">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-517">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-517">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-518">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-518">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-519">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji na <see cref="T:System.Collections.IEnumerable" /> w iteracji, które może działać równolegle, można skonfigurować opcje pętli i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-519">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-520">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-520">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-521">`body` Delegata jest wywoływana raz dla każdego elementu w `source` wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="a6201-521">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="a6201-522">Znajduje się z następującymi parametrami: bieżący element i <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do przedwcześnie wyjścia z pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-522">It is provided with the following parameters: the current element, and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-523"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-523">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-524"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-524">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-525">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-525">-or-</span></span>  
  
 <span data-ttu-id="a6201-526"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-526">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-527">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-527">-or-</span></span>  
  
 <span data-ttu-id="a6201-528"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-528">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-529">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-529">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-530"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-530">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource&gt; ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-531">Typ danych w źródle.</span><span class="sxs-lookup"><span data-stu-id="a6201-531">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-532">Źródło danych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a6201-532">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-533">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-533">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-534">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-534">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="a6201-535">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji na <see cref="T:System.Collections.IEnumerable" /> w którym iteracji może działać równolegle i można skonfigurować opcje pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-535">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel and loop options can be configured.</span></span></summary>
        <returns><span data-ttu-id="a6201-536">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-536">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-537">`body` Delegata jest wywoływana raz dla każdego elementu w `source` wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="a6201-537">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="a6201-538">Z bieżącego elementu jest podana jako parametr.</span><span class="sxs-lookup"><span data-stu-id="a6201-538">It is provided with the current element as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-539"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-539">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-540"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-540">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-541">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-541">-or-</span></span>  
  
 <span data-ttu-id="a6201-542"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-542">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-543">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-543">-or-</span></span>  
  
 <span data-ttu-id="a6201-544"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-544">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-545">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-545">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-546"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-546">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As OrderablePartitioner(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, Long, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-547">Typ elementów w <c>źródła</c>.</span><span class="sxs-lookup"><span data-stu-id="a6201-547">The type of the elements in <c>source</c>.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="a6201-548">Typ danych lokalnych wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-548">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-549">Prędkości partycjonerem, który zawiera oryginalnego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a6201-549">The orderable partitioner that contains the original data source.</span></span></param>
        <param name="localInit"><span data-ttu-id="a6201-550">Delegat funkcji, która zwraca stan początkowy danych lokalnych dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-550">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-551">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-551">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="a6201-552">Delegat, który wykonuje ostateczne działania na lokalnym stan każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-552">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="a6201-553">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji z danymi lokalnymi wątku na <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> w iteracji, które może działać równolegle, można skonfigurować opcje pętli i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-553">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-554">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-554">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-555">To przeciążenie jest dostępna dla scenariuszy, w której chcesz przesłonić domyślny schemat partycjonowania.</span><span class="sxs-lookup"><span data-stu-id="a6201-555">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="a6201-556">Na przykład małych jednostek pętli mogą korzystać z partycjonowania zakresu.</span><span class="sxs-lookup"><span data-stu-id="a6201-556">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="a6201-557"><xref:System.Threading.Tasks.Parallel.ForEach%2A> Metoda oczekuje niestandardowe partycjonery, aby obsługiwać partycjonowanie dynamiczne.</span><span class="sxs-lookup"><span data-stu-id="a6201-557">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="a6201-558">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) i [porady: Implementowanie partycji dynamicznych](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-558">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="a6201-559">`localInit` Delegata jest wywoływana raz dla każdego zadania, które uczestniczy w wykonywania pętli i zwraca stan początkowy lokalnego dla każdego z tych zadań.</span><span class="sxs-lookup"><span data-stu-id="a6201-559">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="a6201-560">Te stany początkowej są przekazywane do pierwszej `body` wywołania dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-560">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="a6201-561">Co wywołanie treści kolejnych zwraca wartość stanu prawdopodobnie modyfikacji przekazywany do następnego wywołania treści.</span><span class="sxs-lookup"><span data-stu-id="a6201-561">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="a6201-562">Na koniec ostatniego wywołania treści dla każdego zadania zwraca wartość stanu, który jest przekazywany do `localFinally` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-562">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="a6201-563">`localFinally` Delegata jest wywoływana raz na zadanie do wykonania akcji końcowego na stan lokalnego każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-563">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="a6201-564">Ten delegat może wywołać jednocześnie na wielu zadań; w związku z tym należy zsynchronizować dostęp do zmiennych udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="a6201-564">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="a6201-565"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda może używać zadania więcej niż wątków w okresie istnienia działania jako ukończone istniejącego zadania i zostały zastąpione przez nowe zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-565">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="a6201-566">Dzięki temu odpowiadającego <xref:System.Threading.Tasks.TaskScheduler> obiekt możliwość dodawania, zmieniania lub usuwania wątków, które usługa pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-566">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-567"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-567">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-568">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-568">-or-</span></span>  
  
 <span data-ttu-id="a6201-569"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-569">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-570">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-570">-or-</span></span>  
  
 <span data-ttu-id="a6201-571"><paramref name="localInit" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-571">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-572">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-572">-or-</span></span>  
  
 <span data-ttu-id="a6201-573"><paramref name="localFinally" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-573">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6201-574"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> Właściwości w <paramref name="source" /> <see cref="T:System.Collections.Concurrent.Partitioner" /> zwraca <see langword="false" /> lub zwraca obiekt partitioner <see langword="null" /> partycji.</span><span class="sxs-lookup"><span data-stu-id="a6201-574">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-575">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-575">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As Partitioner(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-576">Typ elementów w <c>źródła</c>.</span><span class="sxs-lookup"><span data-stu-id="a6201-576">The type of the elements in <c>source</c>.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="a6201-577">Typ danych lokalnych wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-577">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-578">Partycjonerem, który zawiera oryginalnego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a6201-578">The partitioner that contains the original data source.</span></span></param>
        <param name="localInit"><span data-ttu-id="a6201-579">Delegat funkcji, która zwraca stan początkowy danych lokalnych dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-579">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-580">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-580">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="a6201-581">Delegat, który wykonuje ostateczne działania na lokalnym stan każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-581">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="a6201-582">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji z danymi lokalnymi wątku na <see cref="T:System.Collections.Concurrent.Partitioner" /> w którym iteracji może działać równolegle i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-582">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-583">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-583">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-584">To przeciążenie jest dostępna dla scenariuszy, w której chcesz przesłonić domyślny schemat partycjonowania.</span><span class="sxs-lookup"><span data-stu-id="a6201-584">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="a6201-585">Na przykład małych jednostek pętli mogą korzystać z partycjonowania zakresu.</span><span class="sxs-lookup"><span data-stu-id="a6201-585">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="a6201-586"><xref:System.Threading.Tasks.Parallel.ForEach%2A> Metoda oczekuje niestandardowe partycjonery, aby obsługiwać partycjonowanie dynamiczne.</span><span class="sxs-lookup"><span data-stu-id="a6201-586">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="a6201-587">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) i [porady: Implementowanie partycji dynamicznych](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-587">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="a6201-588">`localInit` Delegata jest wywoływana raz dla każdego wątku, który uczestniczy w wykonywania pętli i zwraca stan początkowy lokalnego dla każdego z tych zadań.</span><span class="sxs-lookup"><span data-stu-id="a6201-588">The `localInit` delegate is invoked once for each thread that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="a6201-589">Te stany początkowej są przekazywane do pierwszej `body` wywołania dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-589">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="a6201-590">Co wywołanie treści kolejnych zwraca wartość stanu prawdopodobnie modyfikacji przekazywany do następnego wywołania treści.</span><span class="sxs-lookup"><span data-stu-id="a6201-590">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="a6201-591">Na koniec ostatniego wywołania treści dla każdego zadania zwraca wartość stanu, który jest przekazywany do `localFinally` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-591">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="a6201-592">`localFinally` Delegata jest wywoływana raz na zadanie do wykonania akcji końcowego na stan lokalnego każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-592">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="a6201-593">Ten delegat może wywołać jednocześnie na wielu zadań; w związku z tym należy zsynchronizować dostęp do zmiennych udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="a6201-593">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="a6201-594"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda może używać zadania więcej niż wątków w okresie istnienia działania jako ukończone istniejącego zadania i zostały zastąpione przez nowe zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-594">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="a6201-595">Dzięki temu odpowiadającego <xref:System.Threading.Tasks.TaskScheduler> obiekt możliwość dodawania, zmieniania lub usuwania wątków, które usługa pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-595">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-596"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-596">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-597">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-597">-or-</span></span>  
  
 <span data-ttu-id="a6201-598"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-598">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-599">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-599">-or-</span></span>  
  
 <span data-ttu-id="a6201-600"><paramref name="localInit" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-600">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-601">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-601">-or-</span></span>  
  
 <span data-ttu-id="a6201-602"><paramref name="localFinally" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-602">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6201-603"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> Właściwości w <paramref name="source" /> <see cref="T:System.Collections.Concurrent.Partitioner" /> zwraca <see langword="false" /> lub zwraca obiekt partitioner <see langword="null" /> partycji.</span><span class="sxs-lookup"><span data-stu-id="a6201-603">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-604">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-604">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As IEnumerable(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, Long, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-605">Typ danych w źródle.</span><span class="sxs-lookup"><span data-stu-id="a6201-605">The type of the data in the source.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="a6201-606">Typ danych lokalnych wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-606">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-607">Źródło danych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a6201-607">An enumerable data source.</span></span></param>
        <param name="localInit"><span data-ttu-id="a6201-608">Delegat funkcji, która zwraca stan początkowy danych lokalnych dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-608">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-609">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-609">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="a6201-610">Delegat, który wykonuje ostateczne działania na lokalnym stan każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-610">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="a6201-611">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji z danymi lokalnymi wątku na <see cref="T:System.Collections.IEnumerable" /> w którym iteracji może działać równolegle i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-611">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-612">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-612">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-613">`body` Delegata jest wywoływana raz dla każdego elementu w `source` wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="a6201-613">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="a6201-614">Są dostarczane z następującymi parametrami: bieżący element <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do wyjścia z pętli przedwcześnie, indeks bieżącego elementu (<xref:System.Int64>), a niektóre stanu lokalnego, który może być udostępniana między iteracji, które są wykonywane w tym samym wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-614">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, the current element's index (<xref:System.Int64>), and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="a6201-615">`localInit` Delegata jest wywoływana raz dla każdego zadania, które uczestniczy w wykonywania pętli i zwraca stan początkowy lokalnego dla każdego z tych zadań.</span><span class="sxs-lookup"><span data-stu-id="a6201-615">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="a6201-616">Te stany początkowej są przekazywane do pierwszej `body` wywołania dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-616">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="a6201-617">Co wywołanie treści kolejnych zwraca wartość stanu prawdopodobnie modyfikacji przekazywany do następnego wywołania treści.</span><span class="sxs-lookup"><span data-stu-id="a6201-617">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="a6201-618">Na koniec ostatniego wywołania treści dla każdego zadania zwraca wartość stanu, który jest przekazywany do `localFinally` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-618">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="a6201-619">`localFinally` Delegata jest wywoływana raz na zadanie do wykonania akcji końcowego na stan lokalnego każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-619">The `localFinally` delegate is invoked once per task to perform a final action on each task’s local state.</span></span> <span data-ttu-id="a6201-620">Ten delegat może wywołać jednocześnie na wielu zadań; w związku z tym należy zsynchronizować dostęp do zmiennych udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="a6201-620">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="a6201-621"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda może używać zadania więcej niż wątków w okresie istnienia działania jako ukończone istniejącego zadania i zostały zastąpione przez nowe zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-621">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="a6201-622">Dzięki temu odpowiadającego <xref:System.Threading.Tasks.TaskScheduler> obiekt możliwość dodawania, zmieniania lub usuwania wątków, które usługa pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-622">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-623"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-623">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-624">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-624">-or-</span></span>  
  
 <span data-ttu-id="a6201-625"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-625">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-626">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-626">-or-</span></span>  
  
 <span data-ttu-id="a6201-627"><paramref name="localInit" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-627">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-628">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-628">-or-</span></span>  
  
 <span data-ttu-id="a6201-629"><paramref name="localFinally" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-629">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-630">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-630">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As IEnumerable(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-631">Typ danych w źródle.</span><span class="sxs-lookup"><span data-stu-id="a6201-631">The type of the data in the source.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="a6201-632">Typ danych lokalnych wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-632">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-633">Źródło danych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a6201-633">An enumerable data source.</span></span></param>
        <param name="localInit"><span data-ttu-id="a6201-634">Delegat funkcji, która zwraca stan początkowy danych lokalnych dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-634">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-635">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-635">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="a6201-636">Delegat, który wykonuje ostateczne działania na lokalnym stan każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-636">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="a6201-637">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji z danymi lokalnymi wątku na <see cref="T:System.Collections.IEnumerable" /> której iteracji może działać równolegle, a stan pętli podlegający monitorowaniu i wykonywać na nich operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-637">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-638">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-638">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-639">`body` Delegata jest wywoływana raz dla każdego elementu w `source` wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="a6201-639">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="a6201-640">Znajduje się z następującymi parametrami: bieżący element <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do wyjścia z pętli przedwcześnie i niektóre stanu lokalnego, który może być udostępniana między iteracji, które są wykonywane na tym samym wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-640">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="a6201-641">`localInit` Delegata jest wywoływana raz dla każdego zadania, które uczestniczy w wykonywania pętli i zwraca stan początkowy lokalnego dla każdego z tych zadań.</span><span class="sxs-lookup"><span data-stu-id="a6201-641">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="a6201-642">Te stany początkowej są przekazywane do pierwszej `body` wywołania dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-642">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="a6201-643">Co wywołanie treści kolejnych zwraca wartość stanu prawdopodobnie modyfikacji przekazywany do następnego wywołania treści.</span><span class="sxs-lookup"><span data-stu-id="a6201-643">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="a6201-644">Na koniec ostatniego wywołania treści dla każdego zadania zwraca wartość stanu, który jest przekazywany do `localFinally` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-644">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="a6201-645">`localFinally` Delegata jest wywoływana raz na wątek do wykonywania akcji końcowego na stan lokalnego każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-645">The `localFinally` delegate is invoked once per thread to perform a final action on each task’s local state.</span></span> <span data-ttu-id="a6201-646">Ten delegat może wywołać jednocześnie na wielu zadań; w związku z tym należy zsynchronizować dostęp do zmiennych udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="a6201-646">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="a6201-647"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda może używać zadania więcej niż wątków w okresie istnienia działania jako ukończone istniejącego zadania i zostały zastąpione przez nowe zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-647">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="a6201-648">Dzięki temu odpowiadającego <xref:System.Threading.Tasks.TaskScheduler> obiekt możliwość dodawania, zmieniania lub usuwania wątków, które usługa pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-648">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6201-649">Poniższy przykład przedstawia użycie <xref:System.Threading.Tasks.Parallel.ForEach%2A> metoda ze stanu lokalnego:</span><span class="sxs-lookup"><span data-stu-id="a6201-649">The following example shows how to use a <xref:System.Threading.Tasks.Parallel.ForEach%2A> method with local state:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelforeach.cs#02)]
 [!code-vb[System.Threading.Tasks.Parallel#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelforeach.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-650"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-650">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-651">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-651">-or-</span></span>  
  
 <span data-ttu-id="a6201-652"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-652">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-653">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-653">-or-</span></span>  
  
 <span data-ttu-id="a6201-654"><paramref name="localInit" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-654">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-655">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-655">-or-</span></span>  
  
 <span data-ttu-id="a6201-656"><paramref name="localFinally" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-656">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-657">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-657">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-658">Typ elementów w <c>źródła</c>.</span><span class="sxs-lookup"><span data-stu-id="a6201-658">The type of the elements in <c>source</c>.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="a6201-659">Typ danych lokalnych wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-659">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-660">Prędkości partycjonerem, który zawiera oryginalnego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a6201-660">The orderable partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-661">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-661">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="a6201-662">Delegat funkcji, która zwraca stan początkowy danych lokalnych dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-662">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-663">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-663">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="a6201-664">Delegat, który wykonuje ostateczne działania na lokalnym stan każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-664">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="a6201-665">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji z 64-bitowe indeksy i z danymi lokalnymi wątku na <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> w iteracji, które może działać równolegle, można skonfigurować opcje pętli i monitorować stan pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-665">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with 64-bit indexes and  with thread-local data on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel , loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-666">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-666">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-667">To przeciążenie jest dostępna dla scenariuszy, w której chcesz przesłonić domyślny schemat partycjonowania.</span><span class="sxs-lookup"><span data-stu-id="a6201-667">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="a6201-668">Na przykład małych jednostek pętli mogą korzystać z partycjonowania zakresu.</span><span class="sxs-lookup"><span data-stu-id="a6201-668">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="a6201-669"><xref:System.Threading.Tasks.Parallel.ForEach%2A> Metoda oczekuje niestandardowe partycjonery, aby obsługiwać partycjonowanie dynamiczne.</span><span class="sxs-lookup"><span data-stu-id="a6201-669">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="a6201-670">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) i [porady: Implementowanie partycji dynamicznych](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-670">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="a6201-671">`localInit` Delegata jest wywoływana raz dla każdego zadania, które uczestniczy w wykonywania pętli i zwraca stan początkowy lokalnego dla każdego z tych zadań.</span><span class="sxs-lookup"><span data-stu-id="a6201-671">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="a6201-672">Te stany początkowej są przekazywane do pierwszej `body` wywołania dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-672">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="a6201-673">Co wywołanie treści kolejnych zwraca wartość stanu prawdopodobnie modyfikacji przekazywany do następnego wywołania treści.</span><span class="sxs-lookup"><span data-stu-id="a6201-673">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="a6201-674">Na koniec ostatniego wywołania treści na każdy wątek zwraca wartość stanu, który jest przekazywany do `localFinally` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-674">Finally, the last body invocation on each thread returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="a6201-675">`localFinally` Delegata jest wywoływana raz na zadanie do wykonania akcji końcowego na stan lokalnego każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-675">The `localFinally` delegate is invoked once per task to perform a final action on each task’s local state.</span></span> <span data-ttu-id="a6201-676">Ten delegat może wywołać jednocześnie na wielu zadań; w związku z tym należy zsynchronizować dostęp do zmiennych udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="a6201-676">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="a6201-677"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda może używać zadania więcej niż wątków w okresie istnienia działania jako ukończone istniejącego zadania i zostały zastąpione przez nowe zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-677">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="a6201-678">Dzięki temu odpowiadającego <xref:System.Threading.Tasks.TaskScheduler> obiekt możliwość dodawania, zmieniania lub usuwania wątków, które usługa pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-678">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-679"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-679">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-680">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-680">-or-</span></span>  
  
 <span data-ttu-id="a6201-681"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-681">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-682">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-682">-or-</span></span>  
  
 <span data-ttu-id="a6201-683"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-683">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-684">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-684">-or-</span></span>  
  
 <span data-ttu-id="a6201-685"><paramref name="localInit" /> Lub <paramref name="localFinally" /> argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-685">The <paramref name="localInit" /> or <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6201-686"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> Właściwości w <paramref name="source" /> <see cref="T:System.Collections.Concurrent.Partitioner" /> zwraca <see langword="false" /> lub zwraca obiekt partitioner <see langword="null" /> partycji.</span><span class="sxs-lookup"><span data-stu-id="a6201-686">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-687">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-687">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-688"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-688">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-689"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-689">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-690">Typ elementów w <c>źródła</c>.</span><span class="sxs-lookup"><span data-stu-id="a6201-690">The type of the elements in <c>source</c>.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="a6201-691">Typ danych lokalnych wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-691">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-692">Partycjonerem, który zawiera oryginalnego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a6201-692">The partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-693">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-693">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="a6201-694">Delegat funkcji, która zwraca stan początkowy danych lokalnych dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-694">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-695">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-695">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="a6201-696">Delegat, który wykonuje ostateczne działania na lokalnym stan każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-696">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="a6201-697">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji z danymi lokalnymi wątku na <see cref="T:System.Collections.Concurrent.Partitioner" /> w iteracji, które może działać równolegle, można skonfigurować opcje pętli i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-697">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation  with thread-local data on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-698">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-698">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-699">To przeciążenie jest dostępna dla scenariuszy, w której chcesz przesłonić domyślny schemat partycjonowania.</span><span class="sxs-lookup"><span data-stu-id="a6201-699">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="a6201-700">Na przykład małych jednostek pętli mogą korzystać z partycjonowania zakresu.</span><span class="sxs-lookup"><span data-stu-id="a6201-700">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="a6201-701"><xref:System.Threading.Tasks.Parallel.ForEach%2A> Metoda oczekuje niestandardowe partycjonery, aby obsługiwać partycjonowanie dynamiczne.</span><span class="sxs-lookup"><span data-stu-id="a6201-701">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="a6201-702">To przeciążenie jest dostępna dla scenariuszy o małych jednostek pętli, które mogą korzystać z partycjonowania statycznego zakresu.</span><span class="sxs-lookup"><span data-stu-id="a6201-702">This overload is provided for scenarios with small loop bodies that might benefit from static range partitioning.</span></span> <span data-ttu-id="a6201-703">Partycjonery musi obsługiwać partycje dynamiczne.</span><span class="sxs-lookup"><span data-stu-id="a6201-703">Partitioners must support dynamic partitions.</span></span>  <span data-ttu-id="a6201-704">Aby uzyskać więcej informacji, zobacz [niestandardowe Partycjonery dla PLINQ i TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) i [porady: Implementowanie partycji dynamicznych](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-704">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="a6201-705">`localInit` Delegata jest wywoływana raz dla każdego zadania, które uczestniczy w wykonywania pętli i zwraca stan początkowy lokalnego dla każdego z tych zadań.</span><span class="sxs-lookup"><span data-stu-id="a6201-705">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="a6201-706">Te stany początkowej są przekazywane do pierwszej `body` wywołania dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-706">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="a6201-707">Co wywołanie treści kolejnych zwraca wartość stanu prawdopodobnie modyfikacji przekazywany do następnego wywołania treści.</span><span class="sxs-lookup"><span data-stu-id="a6201-707">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="a6201-708">Na koniec ostatniego wywołania treści dla każdego zadania zwraca wartość stanu, który jest przekazywany do `localFinally` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-708">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="a6201-709">`localFinally` Delegata jest wywoływana raz na zadanie do wykonania akcji końcowego na stan lokalnego każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-709">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="a6201-710">Ten delegat może wywołać jednocześnie na wielu zadań; w związku z tym należy zsynchronizować dostęp do zmiennych udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="a6201-710">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="a6201-711"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda może używać zadania więcej niż wątków w okresie istnienia działania jako ukończone istniejącego zadania i zostały zastąpione przez nowe zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-711">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="a6201-712">Dzięki temu odpowiadającego <xref:System.Threading.Tasks.TaskScheduler> obiekt możliwość dodawania, zmieniania lub usuwania wątków, które usługa pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-712">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-713"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-713">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-714">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-714">-or-</span></span>  
  
 <span data-ttu-id="a6201-715"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-715">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-716">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-716">-or-</span></span>  
  
 <span data-ttu-id="a6201-717"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-717">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-718">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-718">-or-</span></span>  
  
 <span data-ttu-id="a6201-719"><paramref name="localInit" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-719">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-720">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-720">-or-</span></span>  
  
 <span data-ttu-id="a6201-721"><paramref name="localFinally" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-721">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6201-722"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> Właściwości w <paramref name="source" /> <see cref="T:System.Collections.Concurrent.Partitioner" /> zwraca <see langword="false" /> lub zwraca obiekt partitioner <see langword="null" /> partycji.</span><span class="sxs-lookup"><span data-stu-id="a6201-722">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-723">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-723">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-724"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-724">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-725"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-725">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-726">Typ danych w źródle.</span><span class="sxs-lookup"><span data-stu-id="a6201-726">The type of the data in the source.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="a6201-727">Typ danych lokalnych wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-727">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-728">Źródło danych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a6201-728">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-729">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-729">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="a6201-730">Delegat funkcji, która zwraca stan początkowy danych lokalnych dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-730">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-731">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-731">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="a6201-732">Delegat, który wykonuje ostateczne działania na lokalnym stan każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-732">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="a6201-733">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji z danymi lokalnymi wątku i 64-bitowe indeksy na <see cref="T:System.Collections.IEnumerable" /> w iteracji, które może działać równolegle, można skonfigurować opcje pętli i monitorowania stanu pętli i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-733">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data and 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="a6201-734">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-734">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-735">`body` Delegata jest wywoływana raz dla każdego elementu w `source` wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="a6201-735">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="a6201-736">Są dostarczane z następującymi parametrami: bieżący element <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do wyjścia z pętli przedwcześnie, indeks bieżącego elementu (<xref:System.Int64>), a niektóre stanu lokalnego, który może być udostępniana między iteracji, które są wykonywane w tym samym wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-736">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, the current element's index (<xref:System.Int64>), and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="a6201-737">`localInit` Delegata jest wywoływana raz dla każdego zadania, które uczestniczy w wykonywania pętli i zwraca stan początkowy lokalnego dla każdego z tych zadań.</span><span class="sxs-lookup"><span data-stu-id="a6201-737">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="a6201-738">Te stany początkowej są przekazywane do pierwszej `body` wywołania dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-738">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="a6201-739">Co wywołanie treści kolejnych zwraca wartość stanu prawdopodobnie modyfikacji przekazywany do następnego wywołania treści.</span><span class="sxs-lookup"><span data-stu-id="a6201-739">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="a6201-740">Na koniec ostatniego wywołania treści dla każdego zadania zwraca wartość stanu, który jest przekazywany do `localFinally` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-740">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="a6201-741">`localFinally` Delegata jest wywoływana raz na wątek do wykonywania akcji końcowego na stan lokalnego każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-741">The `localFinally` delegate is invoked once per thread to perform a final action on each task’s local state.</span></span> <span data-ttu-id="a6201-742">Ten delegat może wywołać jednocześnie na wielu zadań; w związku z tym należy zsynchronizować dostęp do zmiennych udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="a6201-742">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="a6201-743"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda może używać zadania więcej niż wątków w okresie istnienia działania jako ukończone istniejącego zadania i zostały zastąpione przez nowe zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-743">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="a6201-744">Dzięki temu odpowiadającego <xref:System.Threading.Tasks.TaskScheduler> obiekt możliwość dodawania, zmieniania lub usuwania wątków, które usługa pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-744">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-745"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-745">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-746">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-746">-or-</span></span>  
  
 <span data-ttu-id="a6201-747"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-747">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-748">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-748">-or-</span></span>  
  
 <span data-ttu-id="a6201-749"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-749">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-750">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-750">-or-</span></span>  
  
 <span data-ttu-id="a6201-751"><paramref name="localInit" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-751">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-752">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-752">-or-</span></span>  
  
 <span data-ttu-id="a6201-753"><paramref name="localFinally" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-753">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-754"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-754">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-755"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-755">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-756">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-756">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a6201-757">Typ danych w źródle.</span><span class="sxs-lookup"><span data-stu-id="a6201-757">The type of the data in the source.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="a6201-758">Typ danych lokalnych wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-758">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a6201-759">Źródło danych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a6201-759">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="a6201-760">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-760">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="a6201-761">Delegat funkcji, która zwraca stan początkowy danych lokalnych dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-761">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="a6201-762">Delegat, które jest wywoływane raz na iterację.</span><span class="sxs-lookup"><span data-stu-id="a6201-762">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="a6201-763">Delegat, który wykonuje ostateczne działania na lokalnym stan każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-763">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="a6201-764">Wykonuje <see langword="foreach" /> (<see langword="For Each" /> w języku Visual Basic) operacji z danymi lokalnymi wątku na <see cref="T:System.Collections.IEnumerable" /> w iteracji, które może działać równolegle, można skonfigurować opcje pętli i stan pętli podlegający monitorowaniu i wykonywać na nich operacji...</span><span class="sxs-lookup"><span data-stu-id="a6201-764">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated..</span></span></summary>
        <returns><span data-ttu-id="a6201-765">Struktura, która zawiera informacje o część pętlę ukończone.</span><span class="sxs-lookup"><span data-stu-id="a6201-765">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-766">`body` Delegata jest wywoływana raz dla każdego elementu w `source` wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="a6201-766">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="a6201-767">Znajduje się z następującymi parametrami: bieżący element <xref:System.Threading.Tasks.ParallelLoopState> wystąpienia, który może służyć do wyjścia z pętli przedwcześnie i niektóre stanu lokalnego, który może być udostępniana między iteracji, które są wykonywane na tym samym wątku.</span><span class="sxs-lookup"><span data-stu-id="a6201-767">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="a6201-768">`localInit` Delegata jest wywoływana raz dla każdego zadania, które uczestniczy w wykonywania pętli i zwraca stan początkowy lokalnego dla każdego z tych zadań.</span><span class="sxs-lookup"><span data-stu-id="a6201-768">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="a6201-769">Te stany początkowej są przekazywane do pierwszej `body` wywołania dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-769">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="a6201-770">Co wywołanie treści kolejnych zwraca wartość stanu prawdopodobnie modyfikacji przekazywany do następnego wywołania treści.</span><span class="sxs-lookup"><span data-stu-id="a6201-770">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="a6201-771">Na koniec ostatniego wywołania treści dla każdego zadania zwraca wartość stanu, który jest przekazywany do `localFinally` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="a6201-771">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="a6201-772">`localFinally` Delegata jest wywoływana raz na wątek do wykonywania akcji końcowego na stan lokalnego każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-772">The `localFinally` delegate is invoked once per thread to perform a final action on each task’s local state.</span></span> <span data-ttu-id="a6201-773">Ten delegat może wywołać jednocześnie na wielu zadań; w związku z tym należy zsynchronizować dostęp do zmiennych udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="a6201-773">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="a6201-774"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> Metoda może używać zadania więcej niż wątków w okresie istnienia działania jako ukończone istniejącego zadania i zostały zastąpione przez nowe zadania.</span><span class="sxs-lookup"><span data-stu-id="a6201-774">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="a6201-775">Dzięki temu odpowiadającego <xref:System.Threading.Tasks.TaskScheduler> obiekt możliwość dodawania, zmieniania lub usuwania wątków, które usługa pętli.</span><span class="sxs-lookup"><span data-stu-id="a6201-775">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-776"><paramref name="source" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-776">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-777">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-777">-or-</span></span>  
  
 <span data-ttu-id="a6201-778"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-778">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-779">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-779">-or-</span></span>  
  
 <span data-ttu-id="a6201-780"><paramref name="body" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-780">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-781">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-781">-or-</span></span>  
  
 <span data-ttu-id="a6201-782"><paramref name="localInit" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-782">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-783">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-783">-or-</span></span>  
  
 <span data-ttu-id="a6201-784"><paramref name="localFinally" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-784">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-785"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> argument zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="a6201-785">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-786"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-786">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-787">Wyjątek, który zawiera wszystkie poszczególne wyjątków zgłaszanych na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="a6201-787">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6201-788">Wykonuje każdego z podanych akcji prawdopodobnie równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-788">Executes each of the provided actions, possibly in parallel.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static void Invoke (params Action[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Invoke(class System.Action[] actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Invoke (ParamArray actions As Action())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Invoke(... cli::array &lt;Action ^&gt; ^ actions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="System.Action[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actions"><span data-ttu-id="a6201-789">Tablica <see cref="T:System.Action" /> do wykonania.</span><span class="sxs-lookup"><span data-stu-id="a6201-789">An array of <see cref="T:System.Action" /> to execute.</span></span></param>
        <summary><span data-ttu-id="a6201-790">Wykonuje każdego z podanych akcji prawdopodobnie równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-790">Executes each of the provided actions, possibly in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-791">Ta metoda może służyć do wykonywania zestawu działań, potencjalnie równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-791">This method can be used to execute a set of operations, potentially in parallel.</span></span>  
  
 <span data-ttu-id="a6201-792">Gwarancje nie zostały wprowadzone o kolejność wykonywania działań lub czy są one wykonywane równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-792">No guarantees are made about the order in which the operations execute or whether they execute in parallel.</span></span> <span data-ttu-id="a6201-793">Ta metoda nie zwraca dopóki nie zakończy się każdego z podanych operacje, niezależnie od tego, czy Zakończenie występuje z powodu zakończenia normalne lub wyjątkowe.</span><span class="sxs-lookup"><span data-stu-id="a6201-793">This method does not return until each of the provided operations has completed, regardless of whether completion occurs due to normal or exceptional termination.</span></span>  
  
 <span data-ttu-id="a6201-794">Aby uzyskać więcej informacji, zobacz [porady: użycie parallel_invoke podczas przeprowadzania do przeprowadzania operacji równoległych](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-794">For more information, see [How to: Use Parallel.Invoke to Execute Parallel Operations](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6201-795">W tym przykładzie przedstawiono sposób użycia <xref:System.Threading.Tasks.Parallel.Invoke%2A> metody za pomocą innych metod, delegatów anonimowego i wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="a6201-795">This example demonstrates how to use the <xref:System.Threading.Tasks.Parallel.Invoke%2A> method with other methods, anonymous delegates, and lambda expressions.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelinvoke.cs#01)]
 [!code-vb[System.Threading.Tasks.Parallel#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelinvoke.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-796"><paramref name="actions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-796">The <paramref name="actions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-797">Wyjątek zgłaszany, gdy wszystkie działania w <paramref name="actions" /> tablicy zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a6201-797">The exception that is thrown when any action in the <paramref name="actions" /> array throws an exception.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a6201-798"><paramref name="actions" /> Tablica zawiera <see langword="null" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="a6201-798">The <paramref name="actions" /> array contains a <see langword="null" /> element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static void Invoke (System.Threading.Tasks.ParallelOptions parallelOptions, params Action[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Invoke(class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action[] actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Invoke(System::Threading::Tasks::ParallelOptions ^ parallelOptions, ... cli::array &lt;Action ^&gt; ^ actions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="actions" Type="System.Action[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parallelOptions"><span data-ttu-id="a6201-799">Obiekt, który konfiguruje działanie tej operacji.</span><span class="sxs-lookup"><span data-stu-id="a6201-799">An object that configures the behavior of this operation.</span></span></param>
        <param name="actions"><span data-ttu-id="a6201-800">Tablica akcje do wykonania.</span><span class="sxs-lookup"><span data-stu-id="a6201-800">An array of actions to execute.</span></span></param>
        <summary><span data-ttu-id="a6201-801">Wykonuje każdego z podanych akcji prawdopodobnie równolegle, o ile operacja została anulowana przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a6201-801">Executes each of the provided actions, possibly in parallel, unless the operation is cancelled by the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6201-802">Ta metoda może służyć do wykonywania zestawu działań, potencjalnie równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-802">This method can be used to execute a set of operations, potentially in parallel.</span></span> <span data-ttu-id="a6201-803">Token anulowania przekazany przy użyciu <xref:System.Threading.Tasks.ParallelOptions> obiekt wywołujący, aby anulować operację całego umożliwia struktury.</span><span class="sxs-lookup"><span data-stu-id="a6201-803">The cancellation token passed in with the <xref:System.Threading.Tasks.ParallelOptions> structure enables the caller to cancel the entire operation.</span></span> <span data-ttu-id="a6201-804">Aby uzyskać więcej informacji, zobacz [anulowanie w zarządzanych wątkach](~/docs/standard/threading/cancellation-in-managed-threads.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-804">For more information, see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).</span></span>  
  
 <span data-ttu-id="a6201-805">Gwarancje nie zostały wprowadzone o kolejność wykonywania działań lub czy są one wykonywane równolegle.</span><span class="sxs-lookup"><span data-stu-id="a6201-805">No guarantees are made about the order in which the operations execute or whether they execute in parallel.</span></span> <span data-ttu-id="a6201-806">Ta metoda nie zwraca dopóki nie zakończy się każdego z podanych operacje, niezależnie od tego, czy Zakończenie występuje z powodu zakończenia normalne lub wyjątkowe.</span><span class="sxs-lookup"><span data-stu-id="a6201-806">This method does not return until each of the provided operations has completed, regardless of whether completion occurs due to normal or exceptional termination.</span></span>  
  
 <span data-ttu-id="a6201-807">Aby uzyskać więcej informacji, zobacz [porady: użycie parallel_invoke podczas przeprowadzania do przeprowadzania operacji równoległych](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span><span class="sxs-lookup"><span data-stu-id="a6201-807">For more information, see [How to: Use Parallel.Invoke to Execute Parallel Operations](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="a6201-808"><see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="a6201-808">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> is set.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6201-809"><paramref name="actions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-809">The <paramref name="actions" /> argument is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6201-810">—lub—</span><span class="sxs-lookup"><span data-stu-id="a6201-810">-or-</span></span>  
  
 <span data-ttu-id="a6201-811"><paramref name="parallelOptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6201-811">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="a6201-812">Wyjątek zgłaszany, gdy wszystkie działania w <paramref name="actions" /> tablicy zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a6201-812">The exception that is thrown when any action in the <paramref name="actions" /> array throws an exception.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a6201-813"><paramref name="actions" /> Tablica zawiera <see langword="null" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="a6201-813">The <paramref name="actions" /> array contains a <see langword="null" /> element.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a6201-814"><see cref="T:System.Threading.CancellationTokenSource" /> Skojarzone z <see cref="T:System.Threading.CancellationToken" /> w <paramref name="parallelOptions" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="a6201-814">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>