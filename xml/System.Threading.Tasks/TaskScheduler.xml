<Type Name="TaskScheduler" FullName="System.Threading.Tasks.TaskScheduler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87f581e4666a42d1ea6037aa75f9d64296c41160" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69229837" /></Metadata><TypeSignature Language="C#" Value="public abstract class TaskScheduler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TaskScheduler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskScheduler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TaskScheduler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskScheduler abstract" />
  <TypeSignature Language="F#" Value="type TaskScheduler = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Id={Id}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.TaskScheduler/SystemThreadingTasks_TaskSchedulerDebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1876-101">Reprezentuje obiekt obsługujący zadania kolejkowania zadań na niskim poziomie w wątkach.</span><span class="sxs-lookup"><span data-stu-id="a1876-101">Represents an object that handles the low-level work of queuing tasks onto threads.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1876-102">Wystąpienie <xref:System.Threading.Tasks.TaskScheduler> klasy reprezentuje harmonogram zadań.</span><span class="sxs-lookup"><span data-stu-id="a1876-102">An instance of the <xref:System.Threading.Tasks.TaskScheduler> class represents a task scheduler.</span></span> <span data-ttu-id="a1876-103">Harmonogram zadań zapewnia, że zadanie zadania zostanie ostatecznie wykonane.</span><span class="sxs-lookup"><span data-stu-id="a1876-103">A task scheduler ensures that the work of a task is eventually executed.</span></span>  
  
 <span data-ttu-id="a1876-104">Domyślny harmonogram zadań jest oparty na puli wątków .NET Framework 4, która zapewnia kradzieży w ramach równoważenia obciążenia, iniekcję wątków/wycofanie w celu zapewnienia maksymalnej przepływności i ogólną wydajność.</span><span class="sxs-lookup"><span data-stu-id="a1876-104">The default task scheduler is based on the .NET Framework 4 thread pool, which provides work-stealing for load-balancing, thread injection/retirement for maximum throughput, and overall good performance.</span></span> <span data-ttu-id="a1876-105">Powinno to być wystarczające dla większości scenariuszy.</span><span class="sxs-lookup"><span data-stu-id="a1876-105">It should be sufficient for most scenarios.</span></span>  
  
 <span data-ttu-id="a1876-106"><xref:System.Threading.Tasks.TaskScheduler> Klasa służy również jako punkt rozszerzenia dla wszystkich dostosowywalnych logiki planowania.</span><span class="sxs-lookup"><span data-stu-id="a1876-106">The <xref:System.Threading.Tasks.TaskScheduler> class also serves as the extension point for all customizable scheduling logic.</span></span>  <span data-ttu-id="a1876-107">Obejmuje to takie mechanizmy jak planowanie zadania do wykonania oraz sposób ujawniania zaplanowanych zadań w debugerach.</span><span class="sxs-lookup"><span data-stu-id="a1876-107">This includes mechanisms such as how to schedule a task for execution, and how scheduled tasks should be exposed to debuggers.</span></span> <span data-ttu-id="a1876-108">Jeśli jest wymagana specjalna funkcja, można utworzyć harmonogram niestandardowy i włączyć go dla określonych zadań lub zapytań.</span><span class="sxs-lookup"><span data-stu-id="a1876-108">If you require special functionality, you can create a custom scheduler and enable it for specific tasks or queries.</span></span>  
  
 <span data-ttu-id="a1876-109">W tym temacie:</span><span class="sxs-lookup"><span data-stu-id="a1876-109">In this topic:</span></span>  
[<span data-ttu-id="a1876-110">Domyślny harmonogram zadań i Pula wątków</span><span class="sxs-lookup"><span data-stu-id="a1876-110">The default task scheduler and the thread pool</span></span>](#Default)  
 [<span data-ttu-id="a1876-111">Kolejka globalna a kolejki lokalne</span><span class="sxs-lookup"><span data-stu-id="a1876-111">The global queue vs. local queues</span></span>](#Queues)  
 [<span data-ttu-id="a1876-112">Kradzież służbowa</span><span class="sxs-lookup"><span data-stu-id="a1876-112">Work stealing</span></span>](#Stealing)  
 [<span data-ttu-id="a1876-113">Zadania długotrwałe</span><span class="sxs-lookup"><span data-stu-id="a1876-113">Long-running tasks</span></span>](#LongRunning)  
 [<span data-ttu-id="a1876-114">Dekreślenie zadań</span><span class="sxs-lookup"><span data-stu-id="a1876-114">Task inlining</span></span>](#Inlining)  
[<span data-ttu-id="a1876-115">Określanie kontekstu synchronizacji</span><span class="sxs-lookup"><span data-stu-id="a1876-115">Specifying a synchronization context</span></span>](#Sync)  
  
<a name="Default"></a>   
## <a name="the-default-task-scheduler-and-the-thread-pool"></a><span data-ttu-id="a1876-116">Domyślny harmonogram zadań i Pula wątków</span><span class="sxs-lookup"><span data-stu-id="a1876-116">The default task scheduler and the thread pool</span></span>  
 <span data-ttu-id="a1876-117">Domyślny harmonogram dla biblioteki zadań równoległych i PLINQ używa puli wątków .NET Framework, która jest reprezentowana przez <xref:System.Threading.ThreadPool> klasę, do kolejki i wykonywania pracy.</span><span class="sxs-lookup"><span data-stu-id="a1876-117">The default scheduler for the Task Parallel Library and PLINQ uses the .NET Framework thread pool, which is represented by the <xref:System.Threading.ThreadPool> class, to queue and execute work.</span></span> <span data-ttu-id="a1876-118">Pula wątków używa informacji dostarczonych przez <xref:System.Threading.Tasks.Task> typ do wydajnej obsługi równoległości (długotrwałych jednostek pracy), które często przedstawiają zadania równoległe i zapytania.</span><span class="sxs-lookup"><span data-stu-id="a1876-118">The thread pool uses the information that is provided by the <xref:System.Threading.Tasks.Task> type to efficiently     support the fine-grained parallelism (short-lived units of work) that parallel tasks and queries often represent.</span></span>  
  
<a name="Queues"></a>   
### <a name="the-global-queue-vs-local-queues"></a><span data-ttu-id="a1876-119">Kolejka globalna a kolejki lokalne</span><span class="sxs-lookup"><span data-stu-id="a1876-119">The global queue vs. local queues</span></span>  
 <span data-ttu-id="a1876-120">Pula wątków utrzymuje globalną kolejkę roboczą FIFO (pierwszy na zewnątrz) dla wątków w każdej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a1876-120">The thread pool maintains a global FIFO (first-in, first-out) work queue for threads in each application domain.</span></span> <span data-ttu-id="a1876-121">Za każdym razem, gdy <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> program wywołuje <xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A?displayProperty=nameWithType>metodę (lub), praca jest umieszczana w tej kolejce udostępnionej i ostatecznie odwołuje się do następnego wątku, który staną się dostępne.</span><span class="sxs-lookup"><span data-stu-id="a1876-121">Whenever a program calls the <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> (or <xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A?displayProperty=nameWithType>) method, the work is put on this shared queue and eventually de-queued onto the next thread that becomes available.</span></span> <span data-ttu-id="a1876-122">Począwszy od .NET Framework 4, ta kolejka została ulepszona w celu użycia algorytmu bez blokady podobnego <xref:System.Collections.Concurrent.ConcurrentQueue%601> do klasy.</span><span class="sxs-lookup"><span data-stu-id="a1876-122">Starting with the .NET Framework 4, this queue has been improved to use a lock-free algorithm that resembles the <xref:System.Collections.Concurrent.ConcurrentQueue%601> class.</span></span> <span data-ttu-id="a1876-123">Korzystając z tej implementacji bezpłatnej blokady, Pula wątków poświęca mniej czasu na kolejki i usuwa elementy robocze z kolejki.</span><span class="sxs-lookup"><span data-stu-id="a1876-123">By using this lock-free implementation, the thread pool spends less time when it queues and de-queues work items.</span></span> <span data-ttu-id="a1876-124">Ta korzyść wydajności jest dostępna dla wszystkich programów, które używają puli wątków.</span><span class="sxs-lookup"><span data-stu-id="a1876-124">This performance benefit is available to all programs that use the thread pool.</span></span>  
  
 <span data-ttu-id="a1876-125">Zadania najwyższego poziomu, które są zadaniami, które nie są tworzone w kontekście innego zadania, są umieszczane w kolejce globalnej tak samo jak każdy inny element roboczy.</span><span class="sxs-lookup"><span data-stu-id="a1876-125">Top-level tasks, which are tasks that are not created in the context of another task, are put on the global queue just like any other work item.</span></span> <span data-ttu-id="a1876-126">Jednak zadania zagnieżdżone lub podrzędne, które są tworzone w kontekście innego zadania, są obsługiwane bardzo inaczej.</span><span class="sxs-lookup"><span data-stu-id="a1876-126">However, nested or child tasks, which are created in the context of another task, are handled quite differently.</span></span> <span data-ttu-id="a1876-127">Zadanie podrzędne lub zagnieżdżone jest umieszczane w lokalnej kolejce, która jest specyficzna dla wątku, w którym wykonywane jest zadanie nadrzędne.</span><span class="sxs-lookup"><span data-stu-id="a1876-127">A child or nested task is put on a local queue that is specific to the thread on which the parent task is executing.</span></span> <span data-ttu-id="a1876-128">Zadanie nadrzędne może być zadaniem najwyższego poziomu lub może być również elementem podrzędnym innego zadania.</span><span class="sxs-lookup"><span data-stu-id="a1876-128">The parent task may be a top-level task or it also may be the child of another task.</span></span> <span data-ttu-id="a1876-129">Gdy ten wątek jest gotowy do dalszej pracy, najpierw szuka kolejki lokalnej.</span><span class="sxs-lookup"><span data-stu-id="a1876-129">When this thread is ready for more work, it first looks in the local queue.</span></span> <span data-ttu-id="a1876-130">Jeśli elementy robocze czekają na to, można uzyskać do nich dostęp szybko.</span><span class="sxs-lookup"><span data-stu-id="a1876-130">If work items are waiting there, they can be accessed quickly.</span></span> <span data-ttu-id="a1876-131">Kolejki lokalne są dostępne w pierwszej kolejności (LIFO) w celu zachowania lokalizacji pamięci podręcznej i zmniejszenia rywalizacji.</span><span class="sxs-lookup"><span data-stu-id="a1876-131">The local queues are accessed in last-in, first-out order (LIFO) to preserve cache locality and reduce contention.</span></span> <span data-ttu-id="a1876-132">Aby uzyskać więcej informacji o zadaniach podrzędnych i zadaniach zagnieżdżonych, zobacz [dołączone i odłączone zadania podrzędne](~/docs/standard/parallel-programming/attached-and-detached-child-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="a1876-132">For more information about child tasks and nested tasks, see [Attached and Detached Child Tasks](~/docs/standard/parallel-programming/attached-and-detached-child-tasks.md).</span></span>  
  
 <span data-ttu-id="a1876-133">Użycie kolejek lokalnych nie tylko zmniejsza nacisk na kolejkę globalną, ale również korzysta z lokalizacji danych.</span><span class="sxs-lookup"><span data-stu-id="a1876-133">The use of local queues not only reduces pressure on the global queue, but also takes advantage of data locality.</span></span> <span data-ttu-id="a1876-134">Elementy robocze w lokalnej kolejce często odwołują się do struktur danych, które znajdują się fizycznie blisko siebie w pamięci.</span><span class="sxs-lookup"><span data-stu-id="a1876-134">Work items in the local queue frequently reference data structures that are physically near one another in memory.</span></span> <span data-ttu-id="a1876-135">W takich przypadkach dane znajdują się już w pamięci podręcznej po wykonaniu pierwszego zadania i można szybko uzyskać do niego dostęp.</span><span class="sxs-lookup"><span data-stu-id="a1876-135">In these cases, the data is already in the cache after the first task has run and can be accessed quickly.</span></span> <span data-ttu-id="a1876-136">Zarówno [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md) , jak <xref:System.Threading.Tasks.Parallel> i Klasa używają zagnieżdżonych zadań i podrzędnych zadań i osiągają znaczący przyspieszenia przy użyciu lokalnych kolejek roboczych.</span><span class="sxs-lookup"><span data-stu-id="a1876-136">Both [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md) and the <xref:System.Threading.Tasks.Parallel> class use nested tasks and child tasks extensively, and achieve significant speedups by using the local work queues.</span></span>  
  
<a name="Stealing"></a>   
### <a name="work-stealing"></a><span data-ttu-id="a1876-137">Kradzież służbowa</span><span class="sxs-lookup"><span data-stu-id="a1876-137">Work stealing</span></span>  
 <span data-ttu-id="a1876-138">Począwszy od .NET Framework 4, Pula wątków zawiera również algorytm kradzieży pracy, który pomaga upewnić się, że żadne wątki nie są bezczynne, a inne nadal pracują w swoich kolejkach.</span><span class="sxs-lookup"><span data-stu-id="a1876-138">Starting with the .NET Framework 4, the thread pool also features a work-stealing algorithm to help make sure that no threads are sitting idle while others still have work in their queues.</span></span> <span data-ttu-id="a1876-139">Gdy wątek puli wątków jest gotowy do większej pracy, najpierw przegląda on szefa kolejki lokalnej, a następnie w kolejce globalnej, a następnie w kolejkach lokalnych innych wątków.</span><span class="sxs-lookup"><span data-stu-id="a1876-139">When a thread-pool thread is ready for more work, it first looks at the head of its local queue, then in the global queue, and then in the local queues of other threads.</span></span> <span data-ttu-id="a1876-140">Jeśli odnajdzie element roboczy w lokalnej kolejce innego wątku, najpierw zastosuje heurystykę, aby upewnić się, że może uruchamiać pracę wydajnie.</span><span class="sxs-lookup"><span data-stu-id="a1876-140">If it finds a work item in the local queue of another thread, it first applies heuristics to make sure that it can run the work efficiently.</span></span> <span data-ttu-id="a1876-141">Jeśli to możliwe, oddziałuje element roboczy z ogona (w kolejności FIFO).</span><span class="sxs-lookup"><span data-stu-id="a1876-141">If it can, it de-queues the work item from the tail (in FIFO order).</span></span> <span data-ttu-id="a1876-142">Pozwala to zmniejszyć rywalizację na każdą lokalną kolejkę i zachowuje miejscowość danych.</span><span class="sxs-lookup"><span data-stu-id="a1876-142">This reduces contention on each local queue and preserves data locality.</span></span> <span data-ttu-id="a1876-143">Ta architektura ułatwia Równoważenie obciążenia puli wątków wydajniej niż przeszłe wersje.</span><span class="sxs-lookup"><span data-stu-id="a1876-143">This architecture helps the thread pool load-balance work more efficiently than past versions did.</span></span>  
  
<a name="LongRunning"></a>   
### <a name="long-running-tasks"></a><span data-ttu-id="a1876-144">Zadania długotrwałe</span><span class="sxs-lookup"><span data-stu-id="a1876-144">Long-running tasks</span></span>  
 <span data-ttu-id="a1876-145">Można jawnie uniemożliwić umieszczenie zadania w kolejce lokalnej.</span><span class="sxs-lookup"><span data-stu-id="a1876-145">You may want to explicitly prevent a task from being put on a local queue.</span></span> <span data-ttu-id="a1876-146">Na przykład może być wiadomo, że określony element roboczy zostanie uruchomiony przez stosunkowo długi czas i będzie można zablokować wszystkie inne elementy robocze w lokalnej kolejce.</span><span class="sxs-lookup"><span data-stu-id="a1876-146">For example, you may know that a particular work item will run for a relatively long time and is likely to block all other work items on the local queue.</span></span> <span data-ttu-id="a1876-147">W takim przypadku można określić <xref:System.Threading.Tasks.TaskCreationOptions?displayProperty=nameWithType> opcję, która udostępnia wskazówkę do harmonogramu, że dodatkowy wątek może być wymagany dla zadania, aby nie blokował postępów innych wątków ani elementów roboczych w lokalnej kolejce.</span><span class="sxs-lookup"><span data-stu-id="a1876-147">In this case, you can specify the <xref:System.Threading.Tasks.TaskCreationOptions?displayProperty=nameWithType> option, which provides a hint to the scheduler that an additional thread might be required for the task so that it does not block the forward progress of other threads or work items on the local queue.</span></span> <span data-ttu-id="a1876-148">Korzystając z tej opcji, można uniknąć całkowitego wykorzystania puli wątków, łącznie z kolejkami globalnymi i lokalnymi.</span><span class="sxs-lookup"><span data-stu-id="a1876-148">By using this option you avoid the thread pool completely, including the global and local queues.</span></span>  
  
<a name="Inlining"></a>   
### <a name="task-inlining"></a><span data-ttu-id="a1876-149">Dekreślenie zadań</span><span class="sxs-lookup"><span data-stu-id="a1876-149">Task inlining</span></span>  
 <span data-ttu-id="a1876-150">W niektórych przypadkach, gdy <xref:System.Threading.Tasks.Task> czeka, może być wykonywane synchronicznie w wątku, który wykonuje operację oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="a1876-150">In some cases when a <xref:System.Threading.Tasks.Task> is waited on, it may be executed synchronously on the thread that is performing the wait operation.</span></span> <span data-ttu-id="a1876-151">Zwiększa to wydajność, uniemożliwiając konieczność dodatkowego wątku i zamiast niego przy użyciu istniejącego wątku, który mógłby zostać zablokowany w inny sposób.</span><span class="sxs-lookup"><span data-stu-id="a1876-151">This enhances performance by preventing the need for an additional thread and instead using the existing thread, which would have blocked otherwise.</span></span> <span data-ttu-id="a1876-152">Aby zapobiec błędom ze względu na współużytkowania wątkowości, wykreślenie zadań następuje tylko wtedy, gdy obiekt docelowy oczekiwania zostanie znaleziony w lokalnej kolejce wątku.</span><span class="sxs-lookup"><span data-stu-id="a1876-152">To prevent errors due to reentrancy, task inlining only occurs when the wait target is found in the relevant thread's local queue.</span></span>  
  
<a name="Sync"></a>   
## <a name="specifying-a-synchronization-context"></a><span data-ttu-id="a1876-153">Określanie kontekstu synchronizacji</span><span class="sxs-lookup"><span data-stu-id="a1876-153">Specifying a synchronization context</span></span>  
 <span data-ttu-id="a1876-154">Możesz użyć <xref:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext%2A?displayProperty=nameWithType> metody, aby określić, że zadanie powinno zostać zaplanowane do uruchomienia w określonym wątku.</span><span class="sxs-lookup"><span data-stu-id="a1876-154">You can use the <xref:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext%2A?displayProperty=nameWithType> method to specify that a task should be scheduled to run on a particular thread.</span></span> <span data-ttu-id="a1876-155">Jest to przydatne w strukturach, takich jak Windows Forms i Windows Presentation Foundation, gdzie dostęp do obiektów interfejsu użytkownika jest często ograniczony do kodu, który jest uruchomiony w tym samym wątku, w którym został utworzony obiekt interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a1876-155">This is useful in frameworks such as Windows Forms and Windows Presentation Foundation where access to user interface objects is often restricted to code that is running on the same thread on which the UI object was created.</span></span>  
  
 <span data-ttu-id="a1876-156">W poniższym przykładzie użyto <xref:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext%2A?displayProperty=nameWithType> metody w aplikacji Windows Presentation Foundation (WPF) do zaplanowania zadania w tym samym wątku, w którym został utworzony formant interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a1876-156">The following example uses the <xref:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext%2A?displayProperty=nameWithType> method in a Windows Presentation Foundation (WPF) app to schedule a task on the same thread that the user interface (UI) control was created on.</span></span>   <span data-ttu-id="a1876-157">Przykład tworzy mozaikę obrazów, które są losowo wybierane z określonego katalogu.</span><span class="sxs-lookup"><span data-stu-id="a1876-157">The example creates a mosaic of images that are randomly selected from a specified directory.</span></span> <span data-ttu-id="a1876-158">Obiekty WPF są używane do ładowania obrazów i ich zmiany.</span><span class="sxs-lookup"><span data-stu-id="a1876-158">The WPF objects are used to load and resize the images.</span></span> <span data-ttu-id="a1876-159">Nieprzetworzone piksele są następnie przenoszone do zadania, które <xref:System.Threading.Tasks.Parallel.For%2A> używa pętli w celu zapisania danych pikseli w dużej jednobajtowej tablicy.</span><span class="sxs-lookup"><span data-stu-id="a1876-159">The raw pixels are then passed to a task that uses a <xref:System.Threading.Tasks.Parallel.For%2A> loop to write the pixel data into a large single-byte array.</span></span> <span data-ttu-id="a1876-160">Synchronizacja nie jest wymagana, ponieważ dwa kafelki nie zajmują tych samych elementów tablicy.</span><span class="sxs-lookup"><span data-stu-id="a1876-160">No synchronization is required because no two tiles occupy the same array elements.</span></span> <span data-ttu-id="a1876-161">Kafelki można także pisać w dowolnej kolejności, ponieważ ich położenie jest obliczane niezależnie od innego kafelka.</span><span class="sxs-lookup"><span data-stu-id="a1876-161">The tiles can also be written in any order because their position is calculated independently of any other tile.</span></span> <span data-ttu-id="a1876-162">Duża tablica jest następnie przenoszona do zadania uruchamianego w wątku interfejsu użytkownika, gdzie dane pikseli są ładowane do kontrolki obrazu.</span><span class="sxs-lookup"><span data-stu-id="a1876-162">The large array is then passed to a task that runs on the UI thread, where the pixel data is loaded into an Image control.</span></span>  
  
 <span data-ttu-id="a1876-163">Przykład przenosi dane z wątku interfejsu użytkownika, modyfikuje go przy użyciu pętli równoległych <xref:System.Threading.Tasks.Task> i obiektów, a następnie przekazuje je z powrotem do zadania uruchomionego w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a1876-163">The example moves data off the UI thread, modifies it by using parallel loops and <xref:System.Threading.Tasks.Task> objects, and then passes it back to a task that runs on the UI thread.</span></span> <span data-ttu-id="a1876-164">Takie podejście jest przydatne, gdy konieczne jest użycie biblioteki zadań równoległych do wykonywania operacji, które nie są obsługiwane przez interfejs API WPF, lub nie są wystarczająco szybkie.</span><span class="sxs-lookup"><span data-stu-id="a1876-164">This approach is useful when you have to use the Task Parallel Library to perform operations that either are not supported by the WPF API, or are not sufficiently fast.</span></span> <span data-ttu-id="a1876-165">Innym sposobem na utworzenie mozaiki obrazu w WPF jest użycie <xref:System.Windows.Controls.WrapPanel?displayProperty=nameWithType> kontrolki i dodanie do niej obrazów.</span><span class="sxs-lookup"><span data-stu-id="a1876-165">Another way to create an image mosaic in WPF is to use a <xref:System.Windows.Controls.WrapPanel?displayProperty=nameWithType> control and add images to it.</span></span> <span data-ttu-id="a1876-166"><xref:System.Windows.Controls.WrapPanel> Obsługuje rozmieszczenie kafelków.</span><span class="sxs-lookup"><span data-stu-id="a1876-166">The <xref:System.Windows.Controls.WrapPanel> handles the work of positioning the tiles.</span></span> <span data-ttu-id="a1876-167">Jednak ta operacja może zostać wykonana tylko w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a1876-167">However, this work can only be performed on the UI thread.</span></span>  
  
 [!code-csharp[TPL_SyncContext#01](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_synccontext/cs/mainwindow.xaml.cs#01)]
 [!code-vb[TPL_SyncContext#01](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_synccontext/vb/MainWindow.xaml.vb#01)]  
  
 <span data-ttu-id="a1876-168">Aby utworzyć przykład, Utwórz projekt aplikacji WPF w programie Visual Studio i nadaj mu nazwę WPF_CS1 (dla projektu C# WPF) lub WPF_VB1 (dla projektu WPF Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a1876-168">To create the example, create a WPF application project in Visual Studio and name it WPF_CS1 (for a C# WPF project) or WPF_VB1 (for a Visual Basic WPF project).</span></span> <span data-ttu-id="a1876-169">Następnie wykonaj poniższe czynności:</span><span class="sxs-lookup"><span data-stu-id="a1876-169">Then do the following:</span></span>  
  
1. <span data-ttu-id="a1876-170">W widoku projektu przeciągnij <xref:System.Windows.Controls.Image> kontrolkę z **przybornika** w lewym górnym rogu powierzchni projektowej.</span><span class="sxs-lookup"><span data-stu-id="a1876-170">In design view, drag an <xref:System.Windows.Controls.Image> control from the **Toolbox** onto the upper left corner of the design surface.</span></span> <span data-ttu-id="a1876-171">W polu tekstowym **Nazwa** okna **Właściwości** Nadaj formantowi nazwę "Image".</span><span class="sxs-lookup"><span data-stu-id="a1876-171">In the **Name** textbox of the **Properties** window, name the control "image".</span></span>    
  
2. <span data-ttu-id="a1876-172">Przeciągnij kontrolkę z przybornika do lewej dolnej części okna aplikacji. \*\*\*\* <xref:System.Windows.Controls.Button></span><span class="sxs-lookup"><span data-stu-id="a1876-172">Drag a <xref:System.Windows.Controls.Button> control from the **Toolbox** to the lower left part of the application window.</span></span> <span data-ttu-id="a1876-173">W widoku XAML Określ <xref:System.Windows.Controls.ContentControl.Content%2A> właściwość przycisku jako "Utwórz mozaikę" i określ jej <xref:System.Windows.FrameworkElement.Width> właściwość jako "100".</span><span class="sxs-lookup"><span data-stu-id="a1876-173">In XAML view, specify the <xref:System.Windows.Controls.ContentControl.Content%2A> property of the button as "Make a mosaic", and specify its <xref:System.Windows.FrameworkElement.Width> property as "100".</span></span> <span data-ttu-id="a1876-174">Połącz zdarzenie z programem `<Button>` obsługi `Click="button_Click"` zdarzeń zdefiniowanym w kodzie przykład poprzez dodanie do elementu. `button_Click` <xref:System.Windows.Controls.Primitives.ButtonBase.Click></span><span class="sxs-lookup"><span data-stu-id="a1876-174">Connect the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event with the `button_Click` event handler defined in the example's code by adding `Click="button_Click"` to the `<Button>` element.</span></span> <span data-ttu-id="a1876-175">W polu tekstowym **Nazwa** okna **Właściwości** Nazwij kontrolkę "przycisk".</span><span class="sxs-lookup"><span data-stu-id="a1876-175">In the **Name** textbox of the **Properties** window, name the control "button".</span></span>  
  
3. <span data-ttu-id="a1876-176">Zamień całą zawartość pliku MainWindow.xaml.cs lub MainWindow. XAML. vb na kod z tego przykładu.</span><span class="sxs-lookup"><span data-stu-id="a1876-176">Replace the entire contents of the MainWindow.xaml.cs or MainWindow.xaml.vb file with the code from this example.</span></span> <span data-ttu-id="a1876-177">W przypadku C# projektu WPF upewnij się, że nazwa obszaru roboczego jest zgodna z nazwą projektu.</span><span class="sxs-lookup"><span data-stu-id="a1876-177">For a C# WPF project, make sure that the name of the workspace matches the project name.</span></span> 
  
4. <span data-ttu-id="a1876-178">Przykład odczytuje obrazy JPEG z katalogu o nazwie obrazy\\C:\Users\Public\Pictures\Sample.</span><span class="sxs-lookup"><span data-stu-id="a1876-178">The example reads JPEG images from a directory named C:\Users\Public\Pictures\Sample Pictures\\.</span></span> <span data-ttu-id="a1876-179">Utwórz katalog i umieść w nim kilka obrazów albo zmień ścieżkę, aby odwoływać się do innego katalogu, który zawiera obrazy.</span><span class="sxs-lookup"><span data-stu-id="a1876-179">Either create the directory and place some images in it, or change the path to refer to some other directory that contains images.</span></span> 
  
<span data-ttu-id="a1876-180">Ten przykład ma pewne ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a1876-180">This example has some limitations.</span></span> <span data-ttu-id="a1876-181">Na przykład obsługiwane są tylko obrazy 32-bitów-na pikseli. obrazy w innych formatach są uszkodzone przez <xref:System.Windows.Media.Imaging.BitmapImage> obiekt podczas operacji zmiany rozmiarów.</span><span class="sxs-lookup"><span data-stu-id="a1876-181">For example, only 32-bits-per-pixel images are supported; images in other formats are corrupted by the <xref:System.Windows.Media.Imaging.BitmapImage> object during the resizing operation.</span></span> <span data-ttu-id="a1876-182">Ponadto obrazy źródłowe muszą być większe niż rozmiar kafelka.</span><span class="sxs-lookup"><span data-stu-id="a1876-182">Also, the source images must all be larger than the tile size.</span></span> <span data-ttu-id="a1876-183">W tym celu można dodać funkcję do obsługi wielu formatów pikseli i rozmiarów plików.</span><span class="sxs-lookup"><span data-stu-id="a1876-183">As a further exercise, you can add functionality to handle multiple pixel formats and file sizes.</span></span>  
  
## Examples  
 <span data-ttu-id="a1876-184">Poniższy przykład jest pobierany z [przykładów dotyczących programowania równoległego przy użyciu .NET Framework 4](https://go.microsoft.com/fwlink/?LinkID=165717) w witrynie sieci Web galerii kodu MSDN.</span><span class="sxs-lookup"><span data-stu-id="a1876-184">The following example is taken from the [Samples for Parallel Programming with the .NET Framework 4](https://go.microsoft.com/fwlink/?LinkID=165717) on the MSDN Code Gallery Web site.</span></span>  <span data-ttu-id="a1876-185">Tworzy niestandardowy harmonogram zadań, który ogranicza liczbę wątków używanych przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="a1876-185">It creates a custom task scheduler that limits the number of threads used by the app.</span></span> <span data-ttu-id="a1876-186">Następnie uruchamia dwa zestawy zadań i wyświetla informacje o zadaniu i wątku, w którym zadanie jest wykonywane.</span><span class="sxs-lookup"><span data-stu-id="a1876-186">It then launches two sets of tasks and displays information about the task and the thread on which the task is executing.</span></span>  
  
 [!code-csharp[TPL_Schedulers#02](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_schedulers/cs/limitex1.cs#02)]
 [!code-vb[TPL_Schedulers#02](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_schedulers/vb/module2.vb#02)]  
  
 <span data-ttu-id="a1876-187">Dodatkowo kilka przykładowych harmonogramów zadań jest dostępnych w galerii kodu: [Przykłady programowania równoległego w .NET Framework 4](https://go.microsoft.com/fwlink/?LinkID=165717).</span><span class="sxs-lookup"><span data-stu-id="a1876-187">In addition, several sample task schedulers are available on Code Gallery: [Samples for Parallel Programming with the .NET Framework 4](https://go.microsoft.com/fwlink/?LinkID=165717).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="a1876-188">Wszystkie elementy członkowskie typu abstrakcyjnego <see cref="T:System.Threading.Tasks.TaskScheduler" /> są bezpieczne dla wątków i mogą być używane jednocześnie z wielu wątków.</span><span class="sxs-lookup"><span data-stu-id="a1876-188">All members of the abstract <see cref="T:System.Threading.Tasks.TaskScheduler" /> type are thread-safe and may be used from multiple threads concurrently.</span></span></threadsafe>
    <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
    <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-189">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-189">Task Parallel Library (TPL)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TaskScheduler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TaskScheduler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1876-190"><see cref="T:System.Threading.Tasks.TaskScheduler" />Inicjuje.</span><span class="sxs-lookup"><span data-stu-id="a1876-190">Initializes the <see cref="T:System.Threading.Tasks.TaskScheduler" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-191">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-191">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.TaskScheduler Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.Tasks.TaskScheduler Current" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskScheduler.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::Tasks::TaskScheduler ^ Current { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.TaskScheduler.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1876-192"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Pobiera skojarzone z aktualnie wykonywanym zadaniem.</span><span class="sxs-lookup"><span data-stu-id="a1876-192">Gets the <see cref="T:System.Threading.Tasks.TaskScheduler" /> associated with the currently executing task.</span></span></summary>
        <value><span data-ttu-id="a1876-193"><see cref="T:System.Threading.Tasks.TaskScheduler" /> Zwraca skojarzoną z aktualnie wykonywanym zadaniem.</span><span class="sxs-lookup"><span data-stu-id="a1876-193">Returns the <see cref="T:System.Threading.Tasks.TaskScheduler" /> associated with the currently executing task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1876-194">Gdy nie wywołano z poziomu zadania, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> program <xref:System.Threading.Tasks.TaskScheduler.Default%2A> zwróci harmonogram.</span><span class="sxs-lookup"><span data-stu-id="a1876-194">When not called from within a task, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> will return the <xref:System.Threading.Tasks.TaskScheduler.Default%2A> scheduler.</span></span>  
  
 <span data-ttu-id="a1876-195">Aby uzyskać więcej informacji, zobacz <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="a1876-195">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-196">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-196">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.TaskScheduler Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.Tasks.TaskScheduler Default" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskScheduler.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::Tasks::TaskScheduler ^ Default { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.TaskScheduler.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1876-197">Pobiera domyślne <see cref="T:System.Threading.Tasks.TaskScheduler" /> wystąpienie dostarczone przez .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="a1876-197">Gets the default <see cref="T:System.Threading.Tasks.TaskScheduler" /> instance that is provided by the .NET Framework.</span></span></summary>
        <value><span data-ttu-id="a1876-198">Zwraca wystąpienie domyślne <see cref="T:System.Threading.Tasks.TaskScheduler" /> .</span><span class="sxs-lookup"><span data-stu-id="a1876-198">Returns the default <see cref="T:System.Threading.Tasks.TaskScheduler" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1876-199">Aby uzyskać więcej informacji, zobacz <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="a1876-199">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-200">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-200">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TaskScheduler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TaskScheduler ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="taskScheduler.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1876-201">Zwalnia wszystkie zasoby skojarzone z tym harmonogramem.</span><span class="sxs-lookup"><span data-stu-id="a1876-201">Frees all resources associated with this scheduler.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCurrentSynchronizationContext">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.TaskScheduler FromCurrentSynchronizationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.TaskScheduler FromCurrentSynchronizationContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromCurrentSynchronizationContext () As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::TaskScheduler ^ FromCurrentSynchronizationContext();" />
      <MemberSignature Language="F#" Value="static member FromCurrentSynchronizationContext : unit -&gt; System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1876-202">Tworzy skojarzenie z bieżącym <see cref="T:System.Threading.SynchronizationContext" />. <see cref="T:System.Threading.Tasks.TaskScheduler" /></span><span class="sxs-lookup"><span data-stu-id="a1876-202">Creates a <see cref="T:System.Threading.Tasks.TaskScheduler" /> associated with the current <see cref="T:System.Threading.SynchronizationContext" />.</span></span></summary>
        <returns><span data-ttu-id="a1876-203">Skojarzone z bieżącym <see cref="T:System.Threading.SynchronizationContext" />, zgodnie z oczekiwaniami <see cref="P:System.Threading.SynchronizationContext.Current" />. <see cref="T:System.Threading.Tasks.TaskScheduler" /></span><span class="sxs-lookup"><span data-stu-id="a1876-203">A <see cref="T:System.Threading.Tasks.TaskScheduler" /> associated with the current <see cref="T:System.Threading.SynchronizationContext" />, as determined by <see cref="P:System.Threading.SynchronizationContext.Current" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1876-204">Wszystkie <xref:System.Threading.Tasks.Task> wystąpienia dodane do zwróconego harmonogramu będą wykonywane przez wywołanie <xref:System.Threading.SynchronizationContext.Post%2A> metody w tym kontekście.</span><span class="sxs-lookup"><span data-stu-id="a1876-204">All <xref:System.Threading.Tasks.Task> instances queued to the returned scheduler will be executed through a call to the <xref:System.Threading.SynchronizationContext.Post%2A> method on that context.</span></span>  
  
 <span data-ttu-id="a1876-205">Aby uzyskać więcej informacji, zobacz <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="a1876-205">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1876-206">Nie można użyć bieżącego SynchronizationContext jako elementu TaskScheduler.</span><span class="sxs-lookup"><span data-stu-id="a1876-206">The current SynchronizationContext may not be used as a TaskScheduler.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-207">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-207">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledTasks">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt; GetScheduledTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Threading.Tasks.Task&gt; GetScheduledTasks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.GetScheduledTasks" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetScheduledTasks () As IEnumerable(Of Task)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Threading::Tasks::Task ^&gt; ^ GetScheduledTasks();" />
      <MemberSignature Language="F#" Value="abstract member GetScheduledTasks : unit -&gt; seq&lt;System.Threading.Tasks.Task&gt;" Usage="taskScheduler.GetScheduledTasks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1876-208">W przypadku obsługi debugera program generuje wyliczalne <see cref="T:System.Threading.Tasks.Task" /> wystąpienia, które są obecnie umieszczane w kolejce do harmonogramu, oczekując na wykonanie.</span><span class="sxs-lookup"><span data-stu-id="a1876-208">For debugger support only, generates an enumerable of <see cref="T:System.Threading.Tasks.Task" /> instances currently queued to the scheduler waiting to be executed.</span></span></summary>
        <returns><span data-ttu-id="a1876-209">Wartość wyliczalna, która umożliwia debugerowi przechodzenie zadań aktualnie umieszczonych w kolejce do tego harmonogramu.</span><span class="sxs-lookup"><span data-stu-id="a1876-209">An enumerable that allows a debugger to traverse the tasks currently queued to this scheduler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1876-210">Klasa pochodna <xref:System.Threading.Tasks.TaskScheduler> implementowania tej metody w celu obsługi integracji z debugerami.</span><span class="sxs-lookup"><span data-stu-id="a1876-210">A class derived from <xref:System.Threading.Tasks.TaskScheduler> implements this method in order to support integration with debuggers.</span></span> <span data-ttu-id="a1876-211">Ta metoda będzie wywoływana tylko przez .NET Framework, gdy debuger zażąda dostępu do danych.</span><span class="sxs-lookup"><span data-stu-id="a1876-211">This method will only be invoked by the .NET Framework when the debugger requests access to the data.</span></span> <span data-ttu-id="a1876-212">Wyliczalne zwrócenia będzie przenoszone przez narzędzia debugowania w celu uzyskania dostępu do zadań znajdujących się obecnie w kolejce do tego harmonogramu, co umożliwia debugerowi udostępnienie informacji w interfejsie użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a1876-212">The enumerable returned will be traversed by debugging utilities to access the tasks currently queued to this scheduler, enabling the debugger to provide a representation of this information in the user interface.</span></span>  
  
 <span data-ttu-id="a1876-213">Należy pamiętać, że w przypadku wywołania tej metody wszystkie pozostałe wątki w procesie zostaną zamrożone.</span><span class="sxs-lookup"><span data-stu-id="a1876-213">It is important to note that, when this method is called, all other threads in the process will be frozen.</span></span> <span data-ttu-id="a1876-214">W związku z tym ważne jest, aby uniknąć synchronizacji z innymi wątkami, które mogą prowadzić do blokowania.</span><span class="sxs-lookup"><span data-stu-id="a1876-214">Therefore, it's important to avoid synchronization with other threads that may lead to blocking.</span></span> <span data-ttu-id="a1876-215">Jeśli wymagana jest synchronizacja i nie można uzyskać blokady w tej metodzie, należy zgłosić wyjątek, aby debuger nie blokował.</span><span class="sxs-lookup"><span data-stu-id="a1876-215">If synchronization is necessary, and you are unable to acquire the lock in this method, then you should throw an exception so that the debugger does not block.</span></span> <span data-ttu-id="a1876-216">Poniższy przykład przedstawia jedną z C#możliwych metod:</span><span class="sxs-lookup"><span data-stu-id="a1876-216">The following example shows one possible approach in C#:</span></span>
  
```csharp
protected override IEnumerable<Task> GetScheduledTasks()  
{  
    bool lockTaken = false;  
    try  
    {  
        Monitor.TryEnter(_syncObj, ref lockTaken);  
        if (lockTaken)  
        {  
            return _tasks.ToArray();  
        }  
        else throw new NotSupportedException();  
    }  
    finally  
    {  
    if (lockTaken) Monitor.Exit(_syncObj);  
    }}  
```  
  
 <span data-ttu-id="a1876-217">Ponadto ta metoda i wyliczalne zwracane nie mogą modyfikować żadnego stanu widocznego globalnie.</span><span class="sxs-lookup"><span data-stu-id="a1876-217">Additionally, this method and the enumerable returned must not modify any globally visible state.</span></span>  
  
 <span data-ttu-id="a1876-218">Zwrócony wyliczalny nigdy nie powinien mieć wartości null.</span><span class="sxs-lookup"><span data-stu-id="a1876-218">The returned enumerable should never be null.</span></span> <span data-ttu-id="a1876-219">Jeśli obecnie nie ma żadnych zadań w kolejce, zamiast tego należy zwrócić pustą wartością wyliczalną.</span><span class="sxs-lookup"><span data-stu-id="a1876-219">If there are currently no queued tasks, an empty enumerable should be returned instead.</span></span>  
  
 <span data-ttu-id="a1876-220">Deweloperzy implementujący debugery niestandardowe nie powinni wywoływać tej metody bezpośrednio, ale powinny używać metody `GetScheduledTasksForDebugger` otoki wewnętrznej:. `internal Task[] GetScheduledTasksForDebugger()`</span><span class="sxs-lookup"><span data-stu-id="a1876-220">Developers who are implementing custom debuggers shouldn't call this method directly, but should use the internal wrapper method `GetScheduledTasksForDebugger` instead: `internal Task[] GetScheduledTasksForDebugger()`.</span></span> <span data-ttu-id="a1876-221">Ta metoda otoki zwraca tablicę zadań zamiast wartości wyliczalnej.</span><span class="sxs-lookup"><span data-stu-id="a1876-221">This wrapper method returns an array of tasks instead of an enumerable.</span></span> <span data-ttu-id="a1876-222">Aby pobrać listę aktywnych harmonogramów, użyj metody `internal static TaskScheduler[] GetTaskSchedulersForDebugger()`wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="a1876-222">To retrieve a list of active schedulers, use the internal method `internal static TaskScheduler[] GetTaskSchedulersForDebugger()`.</span></span> <span data-ttu-id="a1876-223">Ta metoda statyczna zwraca tablicę wszystkich aktywnych <xref:System.Threading.Tasks.TaskScheduler> wystąpień.</span><span class="sxs-lookup"><span data-stu-id="a1876-223">This static method returns an array of all active <xref:System.Threading.Tasks.TaskScheduler> instances.</span></span> <span data-ttu-id="a1876-224">Następnie można użyć `GetScheduledTasksForDebugger` każdego wystąpienia harmonogramu do pobrania listy zaplanowanych zadań.</span><span class="sxs-lookup"><span data-stu-id="a1876-224">You can then use `GetScheduledTasksForDebugger` on each scheduler instance to retrieve its list of scheduled tasks.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a1876-225">Ten harmonogram nie może w tej chwili wygenerować listy zadań znajdujących się w kolejce.</span><span class="sxs-lookup"><span data-stu-id="a1876-225">This scheduler is unable to generate a list of queued tasks at this time.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-226">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-226">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskScheduler.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : int" Usage="System.Threading.Tasks.TaskScheduler.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1876-227">Pobiera unikatowy identyfikator dla tego <see cref="T:System.Threading.Tasks.TaskScheduler" />elementu.</span><span class="sxs-lookup"><span data-stu-id="a1876-227">Gets the unique ID for this <see cref="T:System.Threading.Tasks.TaskScheduler" />.</span></span></summary>
        <value><span data-ttu-id="a1876-228">Zwraca unikatowy identyfikator dla tego <see cref="T:System.Threading.Tasks.TaskScheduler" />elementu.</span><span class="sxs-lookup"><span data-stu-id="a1876-228">Returns the unique ID for this <see cref="T:System.Threading.Tasks.TaskScheduler" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1876-229">Aby uzyskać więcej informacji, zobacz <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="a1876-229">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-230">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-230">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaximumConcurrencyLevel">
      <MemberSignature Language="C#" Value="public virtual int MaximumConcurrencyLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumConcurrencyLevel" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumConcurrencyLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumConcurrencyLevel { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumConcurrencyLevel : int" Usage="System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1876-231">Wskazuje maksymalny poziom <see cref="T:System.Threading.Tasks.TaskScheduler" /> współbieżności, który jest w stanie obsłużyć.</span><span class="sxs-lookup"><span data-stu-id="a1876-231">Indicates the maximum concurrency level this <see cref="T:System.Threading.Tasks.TaskScheduler" /> is able to support.</span></span></summary>
        <value><span data-ttu-id="a1876-232">Zwraca liczbę całkowitą reprezentującą maksymalny poziom współbieżności.</span><span class="sxs-lookup"><span data-stu-id="a1876-232">Returns an integer that represents the maximum concurrency level.</span></span> <span data-ttu-id="a1876-233">Domyślny harmonogram zwraca wartość <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a1876-233">The default scheduler returns <see cref="F:System.Int32.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1876-234">Aby uzyskać więcej informacji, zobacz <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="a1876-234">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-235">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-235">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="QueueTask">
      <MemberSignature Language="C#" Value="protected internal abstract void QueueTask (System.Threading.Tasks.Task task);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void QueueTask(class System.Threading.Tasks.Task task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void QueueTask(System::Threading::Tasks::Task ^ task);" />
      <MemberSignature Language="F#" Value="abstract member QueueTask : System.Threading.Tasks.Task -&gt; unit" Usage="taskScheduler.QueueTask task" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="a1876-236"><see cref="T:System.Threading.Tasks.Task" /> Do umieszczenia w kolejce.</span><span class="sxs-lookup"><span data-stu-id="a1876-236">The <see cref="T:System.Threading.Tasks.Task" /> to be queued.</span></span></param>
        <summary><span data-ttu-id="a1876-237">Kolejkuje <see cref="T:System.Threading.Tasks.Task" /> do harmonogramu.</span><span class="sxs-lookup"><span data-stu-id="a1876-237">Queues a <see cref="T:System.Threading.Tasks.Task" /> to the scheduler.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1876-238">Klasa pochodna <xref:System.Threading.Tasks.TaskScheduler> implementowania tej metody w celu akceptowania zadań zaplanowanych w harmonogramie.</span><span class="sxs-lookup"><span data-stu-id="a1876-238">A class derived from <xref:System.Threading.Tasks.TaskScheduler> implements this method to accept tasks being scheduled on the scheduler.</span></span>  
  
 <span data-ttu-id="a1876-239">W przypadku typowej implementacji zadanie jest przechowywane w wewnętrznej strukturze danych, które będzie obsługiwany przez wątki, które będą wykonywały te zadania w pewnym czasie w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="a1876-239">A typical implementation would store the task in an internal data structure, which would be serviced by threads that would execute those tasks at some time in the future.</span></span>  
  
 <span data-ttu-id="a1876-240">Ta metoda jest przeznaczona tylko do wywoływania przez .NET Framework i nie powinna być wywoływana bezpośrednio przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="a1876-240">This method is only meant to be called by the .NET Framework and should not be called directly by the derived class.</span></span> <span data-ttu-id="a1876-241">Jest to niezbędne do utrzymania spójności systemu.</span><span class="sxs-lookup"><span data-stu-id="a1876-241">This is necessary for maintaining the consistency of the system.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1876-242"><paramref name="task" /> Argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="a1876-242">The <paramref name="task" /> argument is null.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-243">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-243">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryDequeue">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryDequeue (System.Threading.Tasks.Task task);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryDequeue(class System.Threading.Tasks.Task task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryDequeue(System::Threading::Tasks::Task ^ task);" />
      <MemberSignature Language="F#" Value="abstract member TryDequeue : System.Threading.Tasks.Task -&gt; bool&#xA;override this.TryDequeue : System.Threading.Tasks.Task -&gt; bool" Usage="taskScheduler.TryDequeue task" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="a1876-244"><see cref="T:System.Threading.Tasks.Task" /> Ma zostać usunięty z kolejki.</span><span class="sxs-lookup"><span data-stu-id="a1876-244">The <see cref="T:System.Threading.Tasks.Task" /> to be dequeued.</span></span></param>
        <summary><span data-ttu-id="a1876-245">Próbuje usunąć z kolejki <see cref="T:System.Threading.Tasks.Task" /> element, który wcześniej został umieszczony w kolejce do tego harmonogramu.</span><span class="sxs-lookup"><span data-stu-id="a1876-245">Attempts to dequeue a <see cref="T:System.Threading.Tasks.Task" /> that was previously queued to this scheduler.</span></span></summary>
        <returns><span data-ttu-id="a1876-246">Wartość logiczna określająca, czy <paramref name="task" /> argument został pomyślnie usunięty z kolejki.</span><span class="sxs-lookup"><span data-stu-id="a1876-246">A Boolean denoting whether the <paramref name="task" /> argument was successfully dequeued.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1876-247">Aby uzyskać więcej informacji, zobacz <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="a1876-247">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 <span data-ttu-id="a1876-248">Ta metoda może być wykonywana w bloku finally; w związku z tym powinna zostać zwrócona tak szybko, jak to możliwe <xref:System.Threading.CancellationTokenRegistration> , aby wszystkie zasoby, takie jak obiekty, mogły zostać zlikwidowane w odpowiednim czasie.</span><span class="sxs-lookup"><span data-stu-id="a1876-248">This method may execute in a finally block; therefore it should return as quickly as possible so that any resources such as <xref:System.Threading.CancellationTokenRegistration> objects can be disposed of in a timely manner.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1876-249"><paramref name="task" /> Argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="a1876-249">The <paramref name="task" /> argument is null.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-250">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-250">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryExecuteTask">
      <MemberSignature Language="C#" Value="protected bool TryExecuteTask (System.Threading.Tasks.Task task);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool TryExecuteTask(class System.Threading.Tasks.Task task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool TryExecuteTask(System::Threading::Tasks::Task ^ task);" />
      <MemberSignature Language="F#" Value="member this.TryExecuteTask : System.Threading.Tasks.Task -&gt; bool" Usage="taskScheduler.TryExecuteTask task" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="a1876-251"><see cref="T:System.Threading.Tasks.Task" /> Obiekt, który ma zostać wykonany.</span><span class="sxs-lookup"><span data-stu-id="a1876-251">A <see cref="T:System.Threading.Tasks.Task" /> object to be executed.</span></span></param>
        <summary><span data-ttu-id="a1876-252">Próbuje wykonać podane <see cref="T:System.Threading.Tasks.Task" /> w tym harmonogramie.</span><span class="sxs-lookup"><span data-stu-id="a1876-252">Attempts to execute the provided <see cref="T:System.Threading.Tasks.Task" /> on this scheduler.</span></span></summary>
        <returns><span data-ttu-id="a1876-253">Wartość logiczna, która ma wartość <paramref name="task" /> true, jeśli została wykonana pomyślnie, wartość false, jeśli nie została.</span><span class="sxs-lookup"><span data-stu-id="a1876-253">A Boolean that is true if <paramref name="task" /> was successfully executed, false if it was not.</span></span> <span data-ttu-id="a1876-254">Typową przyczyną niepowodzenia wykonania jest to, że zadanie zostało wykonane wcześniej lub jest w trakcie wykonywania przez inny wątek.</span><span class="sxs-lookup"><span data-stu-id="a1876-254">A common reason for execution failure is that the task had previously been executed or is in the process of being executed by another thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1876-255">Implementacje usługi Scheduler są <xref:System.Threading.Tasks.Task> dostarczane z wystąpieniami, które mają <xref:System.Threading.Tasks.TaskScheduler.QueueTask%2A> być wykonane za <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline%2A> pomocą metody lub metody.</span><span class="sxs-lookup"><span data-stu-id="a1876-255">Scheduler implementations are provided with <xref:System.Threading.Tasks.Task> instances to be executed through either the <xref:System.Threading.Tasks.TaskScheduler.QueueTask%2A> method or the <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline%2A> method.</span></span> <span data-ttu-id="a1876-256">Gdy harmonogram uzna, że jest on właściwy do uruchomienia podanego <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTask%2A> zadania, należy do tego celu użyć.</span><span class="sxs-lookup"><span data-stu-id="a1876-256">When the scheduler deems it appropriate to run the provided task, <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTask%2A> should be used to do so.</span></span> <span data-ttu-id="a1876-257">TryExecuteTask obsługuje wszystkie aspekty wykonywania zadania, w tym wywołania akcji, obsługę wyjątków, zarządzanie stanami i kontrolę cyklu życia.</span><span class="sxs-lookup"><span data-stu-id="a1876-257">TryExecuteTask handles all aspects of executing a task, including action invocation, exception handling, state management, and lifecycle control.</span></span>  
  
 <span data-ttu-id="a1876-258"><xref:System.Threading.Tasks.TaskScheduler.TryExecuteTask%2A>może być używany tylko w przypadku zadań udostępnionych w tym harmonogramie przez infrastrukturę .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="a1876-258"><xref:System.Threading.Tasks.TaskScheduler.TryExecuteTask%2A> must only be used for tasks provided to this scheduler by the .NET Framework infrastructure.</span></span> <span data-ttu-id="a1876-259">Nie należy używać go do wykonywania dowolnych zadań uzyskanych za poorednictwem mechanizmów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a1876-259">It should not be used to execute arbitrary tasks obtained through custom mechanisms.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1876-260">Nie <paramref name="task" /> jest skojarzony z tym harmonogramem.</span><span class="sxs-lookup"><span data-stu-id="a1876-260">The <paramref name="task" /> is not associated with this scheduler.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-261">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-261">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryExecuteTaskInline">
      <MemberSignature Language="C#" Value="protected abstract bool TryExecuteTaskInline (System.Threading.Tasks.Task task, bool taskWasPreviouslyQueued);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryExecuteTaskInline(class System.Threading.Tasks.Task task, bool taskWasPreviouslyQueued) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryExecuteTaskInline(System::Threading::Tasks::Task ^ task, bool taskWasPreviouslyQueued);" />
      <MemberSignature Language="F#" Value="abstract member TryExecuteTaskInline : System.Threading.Tasks.Task * bool -&gt; bool" Usage="taskScheduler.TryExecuteTaskInline (task, taskWasPreviouslyQueued)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
        <Parameter Name="taskWasPreviouslyQueued" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="a1876-262"><see cref="T:System.Threading.Tasks.Task" /> Do wykonania.</span><span class="sxs-lookup"><span data-stu-id="a1876-262">The <see cref="T:System.Threading.Tasks.Task" /> to be executed.</span></span></param>
        <param name="taskWasPreviouslyQueued"><span data-ttu-id="a1876-263">Wartość logiczna określająca, czy zadanie zostało wcześniej dodane do kolejki.</span><span class="sxs-lookup"><span data-stu-id="a1876-263">A Boolean denoting whether or not task has previously been queued.</span></span> <span data-ttu-id="a1876-264">Jeśli ten parametr ma wartość true, zadanie mogło wcześniej znajdować się w kolejce (zaplanowane); Jeśli wartość jest równa false, to zadanie jest znane, aby nie zostało dodane do kolejki i to wywołanie jest wykonywane w celu wykonania zadania wbudowanego bez jego kolejkowania.</span><span class="sxs-lookup"><span data-stu-id="a1876-264">If this parameter is True, then the task may have been previously queued (scheduled); if False, then the task is known not to have been queued, and this call is being made in order to execute the task inline without queuing it.</span></span></param>
        <summary><span data-ttu-id="a1876-265">Określa, czy dostarczone <see cref="T:System.Threading.Tasks.Task" /> może być wykonywane synchronicznie w tym wywołaniu, a jeśli to możliwe, wykonuje je.</span><span class="sxs-lookup"><span data-stu-id="a1876-265">Determines whether the provided <see cref="T:System.Threading.Tasks.Task" /> can be executed synchronously in this call, and if it can, executes it.</span></span></summary>
        <returns><span data-ttu-id="a1876-266">Wartość logiczna wskazująca, czy zadanie zostało wykonane wewnętrznie.</span><span class="sxs-lookup"><span data-stu-id="a1876-266">A Boolean value indicating whether the task was executed inline.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1876-267">Klasa pochodna <xref:System.Threading.Tasks.TaskScheduler> implementowania tej funkcji do obsługi wbudowanego wykonywania zadania w wątku, który inicjuje oczekiwanie na obiekt zadania.</span><span class="sxs-lookup"><span data-stu-id="a1876-267">A class derived from <xref:System.Threading.Tasks.TaskScheduler> implements this function to support inline execution of a task on a thread that initiates a wait on that task object.</span></span> <span data-ttu-id="a1876-268">Wykonywanie wbudowane jest opcjonalne i żądanie może zostać odrzucone przez zwrócenie wartości false.</span><span class="sxs-lookup"><span data-stu-id="a1876-268">Inline execution is optional, and the request may be rejected by returning false.</span></span> <span data-ttu-id="a1876-269">Jednak im więcej zadań, które można przeskalować, tym lepsze będzie skalowanie harmonogramu.</span><span class="sxs-lookup"><span data-stu-id="a1876-269">However, the more tasks that can be inlined, the better the scheduler will scale.</span></span> <span data-ttu-id="a1876-270">W rzeczywistości harmonogram, który jest zbyt mały, może być podatny na zakleszczenia.</span><span class="sxs-lookup"><span data-stu-id="a1876-270">In fact, a scheduler that inlines too little may be prone to deadlocks.</span></span> <span data-ttu-id="a1876-271">Właściwa implementacja powinna mieć pewność, że żądanie wykonywane w ramach zasad gwarantowanych przez harmonogram może być pomyślnie wbudowane.</span><span class="sxs-lookup"><span data-stu-id="a1876-271">A proper implementation should ensure that a request executing under the policies guaranteed by the scheduler can successfully inline.</span></span> <span data-ttu-id="a1876-272">Na przykład jeśli harmonogram używa dedykowanego wątku do wykonywania zadań, wszystkie żądania wykreślania z tego wątku powinny zakończyć się powodzeniem.</span><span class="sxs-lookup"><span data-stu-id="a1876-272">For example, if a scheduler uses a dedicated thread to execute tasks, any inlining requests from that thread should succeed.</span></span>  
  
 <span data-ttu-id="a1876-273">Jeśli harmonogram zdecyduje się wykonać wykonywanie w wierszu, należy to zrobić przez wywołanie <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTask%2A> metody bazowej TaskScheduler z podanym obiektem zadania i propagowanie wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="a1876-273">If a scheduler decides to perform the inline execution, it should do so by calling to the base TaskScheduler's <xref:System.Threading.Tasks.TaskScheduler.TryExecuteTask%2A> method with the provided task object, propagating the return value.</span></span> <span data-ttu-id="a1876-274">Może być również konieczne, aby harmonogram usunął zadanie wbudowane z wewnętrznych struktur danych, jeśli zdecyduje się on przestrzegać żądania wykreślania.</span><span class="sxs-lookup"><span data-stu-id="a1876-274">It may also be appropriate for the scheduler to remove an inlined task from its internal data structures if it decides to honor the inlining request.</span></span> <span data-ttu-id="a1876-275">Należy jednak zauważyć, że w pewnych okolicznościach harmonogram może być proszony o wbudowanie zadania, które nie zostało wcześniej dostarczone z tą <xref:System.Threading.Tasks.TaskScheduler.QueueTask%2A> metodą.</span><span class="sxs-lookup"><span data-stu-id="a1876-275">Note, however, that under some circumstances a scheduler may be asked to inline a task that was not previously provided to it with the <xref:System.Threading.Tasks.TaskScheduler.QueueTask%2A> method.</span></span>  
  
 <span data-ttu-id="a1876-276">Harmonogram pochodny jest odpowiedzialny za upewnienie się, że wątek wywołujący jest odpowiedni do wykonywania danego zadania, o ile ma to zastosowanie do własnych zasad planowania i wykonywania.</span><span class="sxs-lookup"><span data-stu-id="a1876-276">The derived scheduler is responsible for making sure that the calling thread is suitable for executing the given task as far as its own scheduling and execution policies are concerned.</span></span>  
  
 <span data-ttu-id="a1876-277">Aby uzyskać więcej informacji, zobacz <xref:System.Threading.Tasks.TaskScheduler>.</span><span class="sxs-lookup"><span data-stu-id="a1876-277">For more information, see <xref:System.Threading.Tasks.TaskScheduler>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1876-278"><paramref name="task" /> Argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="a1876-278">The <paramref name="task" /> argument is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1876-279"><paramref name="task" /> Zostało już wykonane.</span><span class="sxs-lookup"><span data-stu-id="a1876-279">The <paramref name="task" /> was already executed.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-280">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-280">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnobservedTaskException">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Threading.Tasks.UnobservedTaskExceptionEventArgs&gt; UnobservedTaskException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Threading.Tasks.UnobservedTaskExceptionEventArgs&gt; UnobservedTaskException" />
      <MemberSignature Language="DocId" Value="E:System.Threading.Tasks.TaskScheduler.UnobservedTaskException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event UnobservedTaskException As EventHandler(Of UnobservedTaskExceptionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Threading::Tasks::UnobservedTaskExceptionEventArgs ^&gt; ^ UnobservedTaskException;" />
      <MemberSignature Language="F#" Value="member this.UnobservedTaskException : EventHandler&lt;System.Threading.Tasks.UnobservedTaskExceptionEventArgs&gt; " Usage="member this.UnobservedTaskException : System.EventHandler&lt;System.Threading.Tasks.UnobservedTaskExceptionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Threading.Tasks.UnobservedTaskExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1876-281">Występuje, gdy wyjątek niezauważalnego zadania wyzwala zasady eskalacji wyjątku, które domyślnie spowodują przerwanie procesu.</span><span class="sxs-lookup"><span data-stu-id="a1876-281">Occurs when a faulted task's unobserved exception is about to trigger exception escalation policy, which, by default, would terminate the process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1876-282">To zdarzenie dla całej domeny aplikacji udostępnia mechanizm zapobiegania zasadom eskalacji wyjątków (domyślnie przerywa proces) od wyzwalania.</span><span class="sxs-lookup"><span data-stu-id="a1876-282">This application domain-wide event provides a mechanism to prevent exception escalation policy (which, by default, terminates the process) from triggering.</span></span>  
  
 <span data-ttu-id="a1876-283">Aby ułatwić deweloperom pisanie kodu asynchronicznego na podstawie zadań, [!INCLUDE[net_v45](~/includes/net-v45-md.md)] zmiany domyślne zachowanie wyjątków dla niezauważalnych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="a1876-283">To make it easier for developers to write asynchronous code based on tasks, the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] changes the default exception behavior for unobserved exceptions.</span></span> <span data-ttu-id="a1876-284">Chociaż niezauważalne wyjątki nadal zgłaszają <xref:System.Threading.Tasks.TaskScheduler.UnobservedTaskException> wyjątek, proces nie zostanie domyślnie zakończony.</span><span class="sxs-lookup"><span data-stu-id="a1876-284">Although unobserved exceptions still raise the <xref:System.Threading.Tasks.TaskScheduler.UnobservedTaskException> exception, the process does not terminate by default.</span></span> <span data-ttu-id="a1876-285">Zamiast tego wyjątek jest obsługiwany przez środowisko uruchomieniowe po wywołaniu zdarzenia, niezależnie od tego, czy program obsługi zdarzeń obserwuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a1876-285">Instead, the exception is handled by the runtime after the event is raised, regardless of whether an event handler observes the exception.</span></span> <span data-ttu-id="a1876-286">Takie zachowanie można skonfigurować.</span><span class="sxs-lookup"><span data-stu-id="a1876-286">This behavior can be configured.</span></span> <span data-ttu-id="a1876-287">Począwszy od [`<ThrowUnobservedTaskExceptions>`,można](~/docs/framework/configure-apps/file-schema/runtime/throwunobservedtaskexceptions-element.md) użyć elementu konfiguracji, aby przywrócić zachowanie [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] i zakończyć proces: [!INCLUDE[net_v45](~/includes/net-v45-md.md)]</span><span class="sxs-lookup"><span data-stu-id="a1876-287">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can use the [`<ThrowUnobservedTaskExceptions>`](~/docs/framework/configure-apps/file-schema/runtime/throwunobservedtaskexceptions-element.md) configuration element to revert to the behavior of the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and terminate the process:</span></span>  
  
```xml  
<configuration>   
   <runtime>   
      <ThrowUnobservedTaskExceptions enabled="true"/>   
   </runtime>   
</configuration>  
  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="a1876-288">Biblioteka zadań równoległych (TPL)</span><span class="sxs-lookup"><span data-stu-id="a1876-288">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/runtime/throwunobservedtaskexceptions-element.md"><span data-ttu-id="a1876-289">&lt;ThrowUnobservedTaskExceptions&gt; , element</span><span class="sxs-lookup"><span data-stu-id="a1876-289">&lt;ThrowUnobservedTaskExceptions&gt; Element</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
