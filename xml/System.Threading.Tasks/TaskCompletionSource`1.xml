<Type Name="TaskCompletionSource&lt;TResult&gt;" FullName="System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6f553c4ea953d5b333ada0d202bdb76dbb63c317" /><Meta Name="ms.sourcegitcommit" Value="690605a2d62010b93e13edf329aafe2bdc57423a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/11/2019" /><Meta Name="ms.locfileid" Value="67801853" /></Metadata><TypeSignature Language="C#" Value="public class TaskCompletionSource&lt;TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskCompletionSource`1&lt;TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskCompletionSource`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskCompletionSource(Of TResult)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class TaskCompletionSource" />
  <TypeSignature Language="F#" Value="type TaskCompletionSource&lt;'Result&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult"><span data-ttu-id="6ba89-101">Typ wartości wynik skojarzony z tym <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-101">The type of the result value associated with this <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></typeparam>
    <summary><span data-ttu-id="6ba89-102">Reprezentuje stronę producentów <see cref="T:System.Threading.Tasks.Task`1" /> niepowiązany z delegatem, zapewniając dostęp do strony klienta przez <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6ba89-102">Represents the producer side of a <see cref="T:System.Threading.Tasks.Task`1" /> unbound to a delegate, providing access to the consumer side through the <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ba89-103">W wielu scenariuszach, warto włączyć <xref:System.Threading.Tasks.Task%601> reprezentujący zewnętrzne operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="6ba89-103">In many scenarios, it is useful to enable a <xref:System.Threading.Tasks.Task%601> to represent an external asynchronous operation.</span></span> <span data-ttu-id="6ba89-104"><xref:System.Threading.Tasks.TaskCompletionSource%601> znajduje się w tym celu.</span><span class="sxs-lookup"><span data-stu-id="6ba89-104"><xref:System.Threading.Tasks.TaskCompletionSource%601> is provided for this purpose.</span></span> <span data-ttu-id="6ba89-105">Umożliwia utworzenie zadania, które można przekazać do klientów.</span><span class="sxs-lookup"><span data-stu-id="6ba89-105">It enables the creation of a task that can be handed out to consumers.</span></span> <span data-ttu-id="6ba89-106">Klienci mogą korzystać z elementów członkowskich zadania taki sam sposób tak samo jak w innym scenariuszu obsługi zmiennych składowych zadania.</span><span class="sxs-lookup"><span data-stu-id="6ba89-106">The consumers can use the members of the task the same way as they would in any other scenario handling task member variables.</span></span> <span data-ttu-id="6ba89-107">Jednak w przeciwieństwie do większości zadań, stan zadania utworzone przez TaskCompletionSource jest kontrolowana jawnie za pomocą metod na TaskCompletionSource.</span><span class="sxs-lookup"><span data-stu-id="6ba89-107">However, unlike most tasks, the state of a task created by a TaskCompletionSource is controlled explicitly by the methods on TaskCompletionSource.</span></span> <span data-ttu-id="6ba89-108">Dzięki temu zakończenia operacji asynchronicznej zewnętrzne są propagowane do zadania podstawowego.</span><span class="sxs-lookup"><span data-stu-id="6ba89-108">This enables the completion of the external asynchronous operation to be propagated to the underlying Task.</span></span> <span data-ttu-id="6ba89-109">Oddzielenie gwarantuje również, że odbiorcy nie będą mogli przejście stanu bez dostępu do odpowiednich TaskCompletionSource.</span><span class="sxs-lookup"><span data-stu-id="6ba89-109">The separation also ensures that consumers are not able to transition the state without access to the corresponding TaskCompletionSource.</span></span> <span data-ttu-id="6ba89-110">Aby uzyskać więcej informacji, zobacz wpis [charakter TaskCompletionSource\<TResult >](https://devblogs.microsoft.com/pfxteam/the-nature-of-taskcompletionsourcetresult/) w Programowanie równoległe z bloga platformy .NET.</span><span class="sxs-lookup"><span data-stu-id="6ba89-110">For more information, see the entry [The Nature of TaskCompletionSource\<TResult>](https://devblogs.microsoft.com/pfxteam/the-nature-of-taskcompletionsourcetresult/) in the Parallel Programming with .NET blog.</span></span>  
  
 <span data-ttu-id="6ba89-111">[Przykłady rozszerzenia równoległe](https://go.microsoft.com/fwlink/?LinkID=165717) również zawierają przykłady dotyczące używania <xref:System.Threading.Tasks.TaskCompletionSource%601>.</span><span class="sxs-lookup"><span data-stu-id="6ba89-111">The [Parallel Extensions samples](https://go.microsoft.com/fwlink/?LinkID=165717) also contain examples of how to use <xref:System.Threading.Tasks.TaskCompletionSource%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ba89-112">Poniższy przykład pokazuje, jak używać <xref:System.Threading.Tasks.TaskCompletionSource%601>:</span><span class="sxs-lookup"><span data-stu-id="6ba89-112">The following example shows how to use a <xref:System.Threading.Tasks.TaskCompletionSource%601>:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskCompletionSource#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskcompletionsource/cs/taskcompletionsource.cs#01)]
 [!code-vb[System.Threading.Tasks.TaskCompletionSource#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskcompletionsource/vb/taskcompletionsource.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="6ba89-113">Wszystkie elementy członkowskie <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> są odporne na wątki i mogą być używane jednocześnie z wielu wątków.</span><span class="sxs-lookup"><span data-stu-id="6ba89-113">All members of <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> are thread-safe and may be used from multiple threads concurrently.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-114">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-114">Using TPL with Other Asynchronous Patterns</span></span></related>
    <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-115">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-115">How to: Wrap EAP Patterns in a Task</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ba89-116">Tworzy <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6ba89-116">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ba89-117">Tworzy <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-117">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-118">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-118">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-119">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-119">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; : obj -&gt; System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="6ba89-120">Stan do użycia jako bazowego <see cref="T:System.Threading.Tasks.Task`1" />firmy AsyncState.</span><span class="sxs-lookup"><span data-stu-id="6ba89-120">The state to use as the underlying <see cref="T:System.Threading.Tasks.Task`1" />'s AsyncState.</span></span></param>
        <summary><span data-ttu-id="6ba89-121">Tworzy <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> z określonym stanem.</span><span class="sxs-lookup"><span data-stu-id="6ba89-121">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> with the specified state.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-122">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-122">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-123">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-123">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; : System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; creationOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions"><span data-ttu-id="6ba89-124">Opcje do użycia podczas tworzenia podstawowych <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-124">The options to use when creating the underlying <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="6ba89-125">Tworzy <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> z określonymi opcjami.</span><span class="sxs-lookup"><span data-stu-id="6ba89-125">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> with the specified options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ba89-126"><xref:System.Threading.Tasks.Task%601> Utworzony przez to wystąpienie i dostępne za pośrednictwem jego <xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A> właściwość zostanie uruchomiony, przy użyciu określonego `creationOptions`.</span><span class="sxs-lookup"><span data-stu-id="6ba89-126">The <xref:System.Threading.Tasks.Task%601> created by this instance and accessible through its <xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A> property will be instantiated using the specified `creationOptions`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ba89-127"><paramref name="creationOptions" /> Reprezentują opcje nieprawidłowa do użycia z usługą <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-127">The <paramref name="creationOptions" /> represent options invalid for use with a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-128">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-128">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-129">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-129">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object, creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; : obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; (state, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="6ba89-130">Stan do użycia jako bazowego <see cref="T:System.Threading.Tasks.Task`1" />firmy AsyncState.</span><span class="sxs-lookup"><span data-stu-id="6ba89-130">The state to use as the underlying <see cref="T:System.Threading.Tasks.Task`1" />'s AsyncState.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="6ba89-131">Opcje do użycia podczas tworzenia podstawowych <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-131">The options to use when creating the underlying <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="6ba89-132">Tworzy <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> o określonym stanie i opcje.</span><span class="sxs-lookup"><span data-stu-id="6ba89-132">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> with the specified state and options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ba89-133"><paramref name="creationOptions" /> Reprezentują opcje nieprawidłowa do użycia z usługą <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-133">The <paramref name="creationOptions" /> represent options invalid for use with a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-134">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-134">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-135">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-135">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetCanceled">
      <MemberSignature Language="C#" Value="public void SetCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCanceled ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCanceled();" />
      <MemberSignature Language="F#" Value="member this.SetCanceled : unit -&gt; unit" Usage="taskCompletionSource.SetCanceled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ba89-136">Zmienia podstawową <see cref="T:System.Threading.Tasks.Task`1" /> do <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="6ba89-136">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ba89-137">Podstawowe <see cref="T:System.Threading.Tasks.Task`1" /> jest już w jednym z trzech stanów końcowe: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, lub <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />, lub jeśli bazowego <see cref="T:System.Threading.Tasks.Task`1" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-137">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />, or if the underlying <see cref="T:System.Threading.Tasks.Task`1" /> has already been disposed.</span></span></exception>
        <altmember cref="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-138">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-138">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-139">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-139">How to: Wrap EAP Patterns in a Task</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="6ba89-140">Anulowanie zadania</span><span class="sxs-lookup"><span data-stu-id="6ba89-140">Task Cancellation</span></span></related>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ba89-141"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> Został usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-141">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetException">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ba89-142">Zmienia podstawową <see cref="T:System.Threading.Tasks.Task`1" /> do obiektu <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="6ba89-142">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> object into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetException">
      <MemberSignature Language="C#" Value="public void SetException (System.Collections.Generic.IEnumerable&lt;Exception&gt; exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetException(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetException (exceptions As IEnumerable(Of Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ exceptions);" />
      <MemberSignature Language="F#" Value="member this.SetException : seq&lt;Exception&gt; -&gt; unit" Usage="taskCompletionSource.SetException exceptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="exceptions"><span data-ttu-id="6ba89-143">Zbieranie wyjątków, które chcesz powiązać to <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-143">The collection of exceptions to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="6ba89-144">Zmienia podstawową <see cref="T:System.Threading.Tasks.Task`1" /> do <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> stanu i powiąże kolekcję obiektów wyjątków.</span><span class="sxs-lookup"><span data-stu-id="6ba89-144">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds a collection of exception objects to it.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ba89-145"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> Został usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-145">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6ba89-146"><paramref name="exceptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-146">The <paramref name="exceptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ba89-147">Istnieją co najmniej jeden element o wartości null w <paramref name="exceptions" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-147">There are one or more null elements in <paramref name="exceptions" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ba89-148">Podstawowe <see cref="T:System.Threading.Tasks.Task`1" /> jest już w jednym z trzech stanów końcowe: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, lub <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-148">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-149">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-149">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-150">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-150">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetException">
      <MemberSignature Language="C#" Value="public void SetException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="member this.SetException : Exception -&gt; unit" Usage="taskCompletionSource.SetException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="6ba89-151">Wyjątek, aby powiązać to <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-151">The exception to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="6ba89-152">Zmienia podstawową <see cref="T:System.Threading.Tasks.Task`1" /> do <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> stanu i wiąże go z określonym wyjątkiem.</span><span class="sxs-lookup"><span data-stu-id="6ba89-152">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds it to a specified exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ba89-153"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> Został usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-153">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6ba89-154"><paramref name="exception" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-154">The <paramref name="exception" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ba89-155">Podstawowe <see cref="T:System.Threading.Tasks.Task`1" /> jest już w jednym z trzech stanów końcowe: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, lub <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-155">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-156">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-156">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-157">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-157">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetResult">
      <MemberSignature Language="C#" Value="public void SetResult (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResult(!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResult (result As TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResult(TResult result);" />
      <MemberSignature Language="F#" Value="member this.SetResult : 'Result -&gt; unit" Usage="taskCompletionSource.SetResult result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="6ba89-158">Wartość wyniku, który chcesz powiązać to <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-158">The result value to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="6ba89-159">Zmienia podstawową <see cref="T:System.Threading.Tasks.Task`1" /> do <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="6ba89-159">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> state.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ba89-160"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> Został usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-160">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ba89-161">Podstawowe <see cref="T:System.Threading.Tasks.Task`1" /> jest już w jednym z trzech stanów końcowe: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, lub <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-161">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-162">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-162">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-163">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-163">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Task">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; Task { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; Task" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Task As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task&lt;TResult&gt; ^ Task { System::Threading::Tasks::Task&lt;TResult&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Task : System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;.Task" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6ba89-164">Pobiera <see cref="T:System.Threading.Tasks.Task`1" /> utworzył <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-164">Gets the <see cref="T:System.Threading.Tasks.Task`1" /> created by this <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></summary>
        <value><span data-ttu-id="6ba89-165">Zwraca <see cref="T:System.Threading.Tasks.Task`1" /> utworzył <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-165">Returns the <see cref="T:System.Threading.Tasks.Task`1" /> created by this <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ba89-166">Ta właściwość umożliwia konsumentowi dostępu <xref:System.Threading.Tasks.Task%601> , jest kontrolowane przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="6ba89-166">This property enables a consumer to access the <xref:System.Threading.Tasks.Task%601> that is controlled by this instance.</span></span> <span data-ttu-id="6ba89-167">Po utworzeniu <xref:System.Threading.Tasks.TaskCompletionSource%601> obiektu <xref:System.Threading.Tasks.Task.Status%2A> właściwość to <xref:System.Threading.Tasks.Task%601> zwraca obiekt <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation></span><span class="sxs-lookup"><span data-stu-id="6ba89-167">When you create a <xref:System.Threading.Tasks.TaskCompletionSource%601> object, the <xref:System.Threading.Tasks.Task.Status%2A> property of this <xref:System.Threading.Tasks.Task%601> object returns <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation></span></span>  
  
 <span data-ttu-id="6ba89-168"><xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, I <xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A> metod (i ich warianty "Try"), w tym wystąpienia wszystkich wynik na liście odpowiednimi stanami w tym podstawowe zadania.</span><span class="sxs-lookup"><span data-stu-id="6ba89-168">The <xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, and <xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A> methods (and their "Try" variants) on this instance all result in the relevant state transitions on this underlying Task.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-169">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-169">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-170">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-170">How to: Wrap EAP Patterns in a Task</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="6ba89-171">Programowanie asynchroniczne oparte na zadaniach</span><span class="sxs-lookup"><span data-stu-id="6ba89-171">Task-based Asynchronous Programming</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TrySetCanceled">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ba89-172">Podejmuje próbę przejścia bazowego <see cref="T:System.Threading.Tasks.Task`1" /> do <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="6ba89-172">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TrySetCanceled">
      <MemberSignature Language="C#" Value="public bool TrySetCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetCanceled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetCanceled();" />
      <MemberSignature Language="F#" Value="member this.TrySetCanceled : unit -&gt; bool" Usage="taskCompletionSource.TrySetCanceled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ba89-173">Podejmuje próbę przejścia bazowego <see cref="T:System.Threading.Tasks.Task`1" /> do <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="6ba89-173">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span></span></summary>
        <returns><span data-ttu-id="6ba89-174">Wartość true, jeśli operacja się powiodła. wartość false, jeśli operacja nie powiodła się albo ten obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-174">True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ba89-175">Ta operacja zostanie zwrócona wartość FAŁSZ, jeśli <xref:System.Threading.Tasks.Task%601> jest już w jednym z trzech stanów końcowe: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span><span class="sxs-lookup"><span data-stu-id="6ba89-175">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 <span data-ttu-id="6ba89-176">Ta metoda również zwraca wartość false, jeśli podstawowa <xref:System.Threading.Tasks.Task%601> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-176">This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-177">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-177">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-178">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-178">How to: Wrap EAP Patterns in a Task</span></span></related>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ba89-179"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> Został usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-179">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrySetCanceled">
      <MemberSignature Language="C#" Value="public bool TrySetCanceled (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetCanceled(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetCanceled(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.TrySetCanceled : System.Threading.CancellationToken -&gt; bool" Usage="taskCompletionSource.TrySetCanceled cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="6ba89-180">Token anulowania.</span><span class="sxs-lookup"><span data-stu-id="6ba89-180">A cancellation token.</span></span></param>
        <summary><span data-ttu-id="6ba89-181">Podejmuje próbę przejścia bazowego <see cref="T:System.Threading.Tasks.Task`1" /> do <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> stanu i umożliwia token anulowania, który ma być przechowywany w anulowanych zadań.</span><span class="sxs-lookup"><span data-stu-id="6ba89-181">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state and enables a cancellation token to be stored in the canceled task.</span></span></summary>
        <returns><span data-ttu-id="6ba89-182"><see langword="true" /> Jeśli operacja się powiedzie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-182"><see langword="true" /> if the operation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ba89-183">Metoda zwraca wartość false, jeśli podstawowa <xref:System.Threading.Tasks.Task%601> obiekt jest już w jeden z następujących trzech stanów końcowej.</span><span class="sxs-lookup"><span data-stu-id="6ba89-183">The method returns false if the underlying <xref:System.Threading.Tasks.Task%601> object is already in one of the following three final states.</span></span>  
  
-   <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType>  
  
-   <xref:System.Threading.Tasks.TaskStatus.Faulted?displayProperty=nameWithType>  
  
-   <xref:System.Threading.Tasks.TaskStatus.RanToCompletion?displayProperty=nameWithType>  
  
 <span data-ttu-id="6ba89-184">Ta metoda zwraca też wartość `false` Jeśli bazowego <xref:System.Threading.Tasks.Task%601> obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-184">This method also returns `false` if the underlying <xref:System.Threading.Tasks.Task%601> object has already been disposed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TrySetException">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ba89-185">Podejmuje próbę przejścia bazowego <see cref="T:System.Threading.Tasks.Task`1" /> do obiektu <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="6ba89-185">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> object into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TrySetException">
      <MemberSignature Language="C#" Value="public bool TrySetException (System.Collections.Generic.IEnumerable&lt;Exception&gt; exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetException(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetException (exceptions As IEnumerable(Of Exception)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ exceptions);" />
      <MemberSignature Language="F#" Value="member this.TrySetException : seq&lt;Exception&gt; -&gt; bool" Usage="taskCompletionSource.TrySetException exceptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="exceptions"><span data-ttu-id="6ba89-186">Zbieranie wyjątków, które chcesz powiązać to <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-186">The collection of exceptions to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="6ba89-187">Podejmuje próbę przejścia bazowego <see cref="T:System.Threading.Tasks.Task`1" /> do <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> stanu i powiąże kolekcję obiektów wyjątków.</span><span class="sxs-lookup"><span data-stu-id="6ba89-187">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds a collection of exception objects to it.</span></span></summary>
        <returns><span data-ttu-id="6ba89-188">Wartość true, jeśli operacja się powiodła. w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="6ba89-188">True if the operation was successful; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ba89-189">Ta operacja zostanie zwrócona wartość FAŁSZ, jeśli <xref:System.Threading.Tasks.Task%601> jest już w jednym z trzech stanów końcowe: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span><span class="sxs-lookup"><span data-stu-id="6ba89-189">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ba89-190"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> Został usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-190">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6ba89-191"><paramref name="exceptions" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-191">The <paramref name="exceptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ba89-192">Istnieją co najmniej jeden element o wartości null w <paramref name="exceptions" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-192">There are one or more null elements in <paramref name="exceptions" />.</span></span>  
  
<span data-ttu-id="6ba89-193">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ba89-193">-or-</span></span> 
<span data-ttu-id="6ba89-194"><paramref name="exceptions" /> Kolekcja jest pusta.</span><span class="sxs-lookup"><span data-stu-id="6ba89-194">The <paramref name="exceptions" /> collection is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-195">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-195">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-196">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-196">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrySetException">
      <MemberSignature Language="C#" Value="public bool TrySetException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="member this.TrySetException : Exception -&gt; bool" Usage="taskCompletionSource.TrySetException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="6ba89-197">Wyjątek, aby powiązać to <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-197">The exception to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="6ba89-198">Podejmuje próbę przejścia bazowego <see cref="T:System.Threading.Tasks.Task`1" /> do <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> stanu i wiąże go z określonym wyjątkiem.</span><span class="sxs-lookup"><span data-stu-id="6ba89-198">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds it to a specified exception.</span></span></summary>
        <returns><span data-ttu-id="6ba89-199">Wartość true, jeśli operacja się powiodła. w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="6ba89-199">True if the operation was successful; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ba89-200">Ta operacja zostanie zwrócona wartość FAŁSZ, jeśli <xref:System.Threading.Tasks.Task%601> jest już w jednym z trzech stanów końcowe: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span><span class="sxs-lookup"><span data-stu-id="6ba89-200">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ba89-201"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> Został usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-201">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6ba89-202"><paramref name="exception" /> Argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-202">The <paramref name="exception" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-203">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-203">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-204">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-204">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrySetResult">
      <MemberSignature Language="C#" Value="public bool TrySetResult (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetResult(!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetResult (result As TResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetResult(TResult result);" />
      <MemberSignature Language="F#" Value="member this.TrySetResult : 'Result -&gt; bool" Usage="taskCompletionSource.TrySetResult result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="6ba89-205">Wartość wyniku, który chcesz powiązać to <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="6ba89-205">The result value to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="6ba89-206">Podejmuje próbę przejścia bazowego <see cref="T:System.Threading.Tasks.Task`1" /> do <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="6ba89-206">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> state.</span></span></summary>
        <returns><span data-ttu-id="6ba89-207">Wartość true, jeśli operacja się powiodła. w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="6ba89-207">True if the operation was successful; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ba89-208">Ta operacja zostanie zwrócona wartość FAŁSZ, jeśli <xref:System.Threading.Tasks.Task%601> jest już w jednym z trzech stanów końcowe: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, lub <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span><span class="sxs-lookup"><span data-stu-id="6ba89-208">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 <span data-ttu-id="6ba89-209">Ta metoda również zwraca wartość false, jeśli podstawowa <xref:System.Threading.Tasks.Task%601> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-209">This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="6ba89-210">Korzystanie z modelu TPL z innymi wzorami asynchronicznymi</span><span class="sxs-lookup"><span data-stu-id="6ba89-210">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="6ba89-211">Instrukcje: Opakowywanie wzorców EAP w zadaniu</span><span class="sxs-lookup"><span data-stu-id="6ba89-211">How to: Wrap EAP Patterns in a Task</span></span></related>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ba89-212"><see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> Został usunięty.</span><span class="sxs-lookup"><span data-stu-id="6ba89-212">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>