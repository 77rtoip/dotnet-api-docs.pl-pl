<Type Name="Task&lt;TResult&gt;" FullName="System.Threading.Tasks.Task&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dfc5ddad31514a7b54c390de2444ed672b85bae7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30579982" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Task&lt;TResult&gt; : System.Threading.Tasks.Task" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Task`1&lt;TResult&gt; extends System.Threading.Tasks.Task" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Task`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Task(Of TResult)&#xA;Inherits Task" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class Task : System::Threading::Tasks::Task" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Threading.Tasks.Task</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Id = {Id}, Status = {Status}, Method = {DebuggerDisplayMethodDescription}, Result = {DebuggerDisplayResultDescription}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.SystemThreadingTasks_FutureDebugView`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult">
      <span data-ttu-id="ca306-101">Typ wyniku utworzonego przez to <see cref="T:System.Threading.Tasks.Task`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca306-101">The type of the result produced by this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ca306-102">Reprezentuje operację asynchroniczną, która może zwracać wartości.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca306-102">Represents an asynchronous operation that can return a value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-103"><xref:System.Threading.Tasks.Task%601> Klasy reprezentuje jednej operacji, która zwraca wartość i która zazwyczaj wykonuje asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="ca306-103">The <xref:System.Threading.Tasks.Task%601> class represents a single operation that returns a value and that usually executes asynchronously.</span></span> <span data-ttu-id="ca306-104"><xref:System.Threading.Tasks.Task%601> obiekty są jednym z centralnej składników [wzorca asynchronicznego opartego na zadaniach](~/docs/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap.md) najpierw wprowadzone w programie .NET Framework 4.</span><span class="sxs-lookup"><span data-stu-id="ca306-104"><xref:System.Threading.Tasks.Task%601> objects are one of the central components of the [task-based asynchronous pattern](~/docs/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap.md) first introduced in the .NET Framework 4.</span></span> <span data-ttu-id="ca306-105">Ponieważ praca jest wykonywana przez <xref:System.Threading.Tasks.Task%601> obiektu zazwyczaj wykonuje asynchronicznie w wątku puli wątków zamiast synchronicznie na wątku głównego aplikacji, można użyć <xref:System.Threading.Tasks.Task.Status%2A> właściwości, oraz z <xref:System.Threading.Tasks.Task.IsCanceled%2A>, <xref:System.Threading.Tasks.Task.IsCompleted%2A>, i <xref:System.Threading.Tasks.Task.IsFaulted%2A> właściwości, aby określić stan zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-105">Because the work performed by a <xref:System.Threading.Tasks.Task%601> object typically executes asynchronously on a thread pool thread rather than synchronously on the main application thread, you can use the <xref:System.Threading.Tasks.Task.Status%2A> property, as well as the <xref:System.Threading.Tasks.Task.IsCanceled%2A>, <xref:System.Threading.Tasks.Task.IsCompleted%2A>, and <xref:System.Threading.Tasks.Task.IsFaulted%2A> properties, to determine the   state of a task.</span></span> <span data-ttu-id="ca306-106">Najczęściej wyrażenia lambda jest używany do określenia pracę zadania do wykonania.</span><span class="sxs-lookup"><span data-stu-id="ca306-106">Most commonly, a lambda expression is used to specify the work that the task is to perform.</span></span>  
  
 <span data-ttu-id="ca306-107"><xref:System.Threading.Tasks.Task%601> można tworzyć wystąpień różne sposoby.</span><span class="sxs-lookup"><span data-stu-id="ca306-107"><xref:System.Threading.Tasks.Task%601> instances may be created in a variety of ways.</span></span> <span data-ttu-id="ca306-108">Najbardziej typowe podejście, które jest dostępne począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], jest wywołanie statycznych <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> lub <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-108">The most common approach, which is available starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], is to call the static <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> or <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ca306-109">Te metody zapewniają prosty sposób można uruchomić zadania przy użyciu wartości domyślnej i bez uzyskiwania dodatkowe parametry.</span><span class="sxs-lookup"><span data-stu-id="ca306-109">These methods provide a simple way to start a task by using default values and without acquiring additional parameters.</span></span> <span data-ttu-id="ca306-110">W poniższym przykładzie użyto <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> metodę, aby uruchomić zadanie, które wykonuje pętlę, a następnie wyświetla liczby iteracji pętli:</span><span class="sxs-lookup"><span data-stu-id="ca306-110">The following example uses the <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> method to start a task that loops and then displays the number of loop iterations:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1/cs/run1.cs#6)]
 [!code-vb[System.Threading.Tasks.Task\`1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1/vb/run1.vb#6)]  
  
 <span data-ttu-id="ca306-111">Zamiast i najczęściej można uruchomić zadania [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], jest wywołanie statycznych <xref:System.Threading.Tasks.TaskFactory.StartNew%2A?displayProperty=nameWithType> lub <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-111">An alternative, and the most common way to start a task in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], is to call the static <xref:System.Threading.Tasks.TaskFactory.StartNew%2A?displayProperty=nameWithType> or <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ca306-112"><xref:System.Threading.Tasks.Task.Factory%2A?displayProperty=nameWithType> Zwraca <xref:System.Threading.Tasks.TaskFactory> obiektu i <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> zwraca właściwość <xref:System.Threading.Tasks.TaskFactory%601> obiektu.</span><span class="sxs-lookup"><span data-stu-id="ca306-112">The <xref:System.Threading.Tasks.Task.Factory%2A?displayProperty=nameWithType> property returns a <xref:System.Threading.Tasks.TaskFactory> object, and the <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property returns a <xref:System.Threading.Tasks.TaskFactory%601> object.</span></span> <span data-ttu-id="ca306-113">Overloads z ich `StartNew` metody umożliwiają przekazywać argumenty, Zdefiniuj opcje tworzenia zadań i określanie harmonogramu zadań.</span><span class="sxs-lookup"><span data-stu-id="ca306-113">Overloads of their `StartNew` method let you pass arguments, define task creation options, and specify a task scheduler.</span></span> <span data-ttu-id="ca306-114">W poniższym przykładzie użyto <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%29?displayProperty=nameWithType> metody, aby uruchomić zadanie.</span><span class="sxs-lookup"><span data-stu-id="ca306-114">The following example uses the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%29?displayProperty=nameWithType> method to start a task.</span></span> <span data-ttu-id="ca306-115">Jest funkcjonalnym odpowiednikiem kodu w poprzednim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="ca306-115">It is functionally equivalent to the code in the previous example.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1/cs/startnew1.cs#7)]
 [!code-vb[System.Threading.Tasks.Task\`1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1/vb/startnew1.vb#7)]  
  
 <span data-ttu-id="ca306-116">Aby uzyskać bardziej szczegółowy przykłady, zobacz [opartego na zadaniach asynchronicznej programowania](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="ca306-116">For more complete examples, see [Task-based Asynchronous Programming](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md).</span></span>  
  
 <span data-ttu-id="ca306-117"><xref:System.Threading.Tasks.Task%601> Klasa udostępnia także konstruktorów, który zainicjować zadanie, ale który nie należy planować go do wykonania.</span><span class="sxs-lookup"><span data-stu-id="ca306-117">The <xref:System.Threading.Tasks.Task%601> class also provides constructors that initialize the task but that do not schedule it for execution.</span></span> <span data-ttu-id="ca306-118">Ze względu na wydajność <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> i `Task.Factory.StartNew` metody są preferowane mechanizmy tworzenie i Planowanie zadania obliczeniową, ale w przypadku scenariuszy, w których muszą być oddzielone zadania tworzenia i planowania konstruktorów mogą być używane i zadania <xref:System.Threading.Tasks.Task.Start%2A> — metoda mogą następnie służyć do planowania zadań do wykonania w późniejszym czasie.</span><span class="sxs-lookup"><span data-stu-id="ca306-118">For performance reasons, the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> and `Task.Factory.StartNew` methods are the preferred mechanisms for creating and scheduling computational tasks, but for scenarios where task creation and scheduling must be separated, the constructors may be used, and the task's <xref:System.Threading.Tasks.Task.Start%2A> method may then be used to schedule the task for execution at a later time.</span></span>  
  
 <span data-ttu-id="ca306-119">Począwszy od aplikacji klasycznych kierowanych [!INCLUDE[net_v46](~/includes/net-v46-md.md)], kultury wątku, które tworzy i wywołuje zadania staje się częścią kontekst wątku.</span><span class="sxs-lookup"><span data-stu-id="ca306-119">Starting with desktop apps that target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], the culture of the thread that creates and invokes a task becomes part of the thread's context.</span></span> <span data-ttu-id="ca306-120">Niezależnie od bieżącej kultury wątku, w której wykonuje zadanie, bieżącej kultury zadania jest kultury wątku.</span><span class="sxs-lookup"><span data-stu-id="ca306-120">That is, regardless of the current culture of the thread on which the task executes, the current culture of the task is the culture of the calling thread.</span></span> <span data-ttu-id="ca306-121">Dla aplikacji, które odnoszą się do wersji programu .NET Framework, przed [!INCLUDE[net_v46](~/includes/net-v46-md.md)], kultura zadania jest kultura wątku, w której wykonuje zadanie.</span><span class="sxs-lookup"><span data-stu-id="ca306-121">For apps that target versions of the .NET Framework prior to the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], the culture of the task is the culture of the thread on which the task executes.</span></span> <span data-ttu-id="ca306-122">Aby uzyskać więcej informacji, zobacz sekcję "Kultury i oparty na zadaniach asynchronicznej operacji" w <xref:System.Globalization.CultureInfo> tematu.</span><span class="sxs-lookup"><span data-stu-id="ca306-122">For more information, see the "Culture and task-based asynchronous operations" section in the <xref:System.Globalization.CultureInfo> topic.</span></span> <span data-ttu-id="ca306-123">Należy pamiętać, że aplikacje ze sklepu wykonaj środowiska wykonawczego systemu Windows w ustawiania i pobierania domyślną kulturę.</span><span class="sxs-lookup"><span data-stu-id="ca306-123">Note that Store apps follow the Windows Runtime in setting and getting the default culture.</span></span>  
  
<span data-ttu-id="ca306-124">Dla operacji, które nie zwracają wartości, możesz użyć <xref:System.Threading.Tasks.Task> klasy.</span><span class="sxs-lookup"><span data-stu-id="ca306-124">For operations that do not return a value, you use the <xref:System.Threading.Tasks.Task> class.</span></span> <span data-ttu-id="ca306-125">Jeśli projektujesz C# 7, więcej lekkie zadania, który jest typem wartości, a nie typu odwołania użyj <xref:System.Threading.Tasks.ValueTask%601?displayProperty=nameWithType> struktury; jest obsługiwana, począwszy od C# 7.</span><span class="sxs-lookup"><span data-stu-id="ca306-125">If you're developing with C# 7, for a more lightweight task that is a value type rather than a reference type, use the <xref:System.Threading.Tasks.ValueTask%601?displayProperty=nameWithType> structure; it is supported starting with C# 7.</span></span> 
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="ca306-126">Wszystkie elementy członkowskie <see cref="T:System.Threading.Tasks.Task`1" />, z wyjątkiem <see cref="M:System.Threading.Tasks.Task.Dispose" />, są wątkowo i mogą być używane przez wiele wątków jednocześnie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca306-126">All members of <see cref="T:System.Threading.Tasks.Task`1" />, except for <see cref="M:System.Threading.Tasks.Task.Dispose" />, are thread-safe and may be used from multiple threads concurrently.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Threading.Tasks.Task" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca306-127">Inicjuje nowy <see cref="T:System.Threading.Tasks.Task`1" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-127">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;TResult&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TResult&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As Func(Of TResult))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;TResult&gt; ^ function);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="ca306-128">Delegat, który reprezentuje kod do wykonania w zadaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-128">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="ca306-129">Gdy funkcja została ukończona, zadania <see cref="P:System.Threading.Tasks.Task`1.Result" /> właściwość zostanie ustawiona do zwrócenia wartości wynik funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-129">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-130">Inicjuje nowy <see cref="T:System.Threading.Tasks.Task`1" /> o określonej funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-130">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-131">Zamiast wywoływania najczęściej ten konstruktor do tworzenia wystąpienia <xref:System.Threading.Tasks.Task%601> obiektu, a następnie uruchom zadanie jest wywołując statycznych <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> i <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-131">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> and <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%29?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="ca306-132">Zaletą tylko oferowane przez ten konstruktor jest możliwość tworzenia wystąpienia obiektu od wywołanie zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-132">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca306-133">Poniższy przykład oblicza przybliżoną liczbę słów w pliki tekstowe, które reprezentują książek opublikowanych.</span><span class="sxs-lookup"><span data-stu-id="ca306-133">The following example counts the approximate number of words in text files that represent published books.</span></span> <span data-ttu-id="ca306-134">Każde zadanie jest odpowiedzialny za otwarcie pliku asynchronicznego odczytywania jego całą zawartość i obliczanie słów przy użyciu wyrażenia regularnego.</span><span class="sxs-lookup"><span data-stu-id="ca306-134">Each task is responsible for opening a file, reading its entire contents asynchronously, and calculating the word count by using a regular expression.</span></span> <span data-ttu-id="ca306-135"><xref:System.Threading.Tasks.Task.WaitAll%28System.Threading.Tasks.Task%5B%5D%29?displayProperty=nameWithType> Metoda jest wywoływana, aby upewnić się, że wszystkie zadania zostały ukończone przed wyświetleniem wyrazów każdego książki do konsoli.</span><span class="sxs-lookup"><span data-stu-id="ca306-135">The <xref:System.Threading.Tasks.Task.WaitAll%28System.Threading.Tasks.Task%5B%5D%29?displayProperty=nameWithType> method is called to ensure that all tasks have completed before displaying the word count of each book to the console.</span></span>  
  
 <span data-ttu-id="ca306-136">Podczas tworzenia wystąpienia obiektu jest oddzielony od wykonania obiektu w tym przykładzie, aby przykładzie można Sprawdź, czy każdy plik istnieje.</span><span class="sxs-lookup"><span data-stu-id="ca306-136">Object instantiation is separated from object execution in this example so that the example can ensure that each file exists.</span></span> <span data-ttu-id="ca306-137">Jeśli nie, wyświetla nazwę brakujący plik.</span><span class="sxs-lookup"><span data-stu-id="ca306-137">If they do not,  it displays the name of the missing file.</span></span> <span data-ttu-id="ca306-138">W przeciwnym razie wywołuje <xref:System.Threading.Tasks.Task.Start%2A?displayProperty=nameWithType> metody do uruchamiania każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-138">Otherwise, it calls the <xref:System.Threading.Tasks.Task.Start%2A?displayProperty=nameWithType> method to launch each task.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.ctor/cs/run3.cs#2)]
 [!code-vb[System.Threading.Tasks.Task.ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.ctor/vb/run3.vb#2)]  
  
 <span data-ttu-id="ca306-139">Wzorzec wyrażenia regularnego `\p{P}*\s+` dopasowuje zero, jeden lub więcej znaków interpunkcyjnych następuje co najmniej jeden znak odstępu.</span><span class="sxs-lookup"><span data-stu-id="ca306-139">The regular expression pattern `\p{P}*\s+` matches zero, one, or more punctuation characters followed by one or more whitespace characters.</span></span> <span data-ttu-id="ca306-140">Zakłada się, czy łączna liczba dopasowań jest równe przybliżonej słów.</span><span class="sxs-lookup"><span data-stu-id="ca306-140">It assumes that the total number of matches equals the approximate word count.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-141">
            <paramref name="function" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-141">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;object,TResult&gt; function, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, !TResult&gt; function, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As Func(Of Object, TResult), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="ca306-142">Delegat, który reprezentuje kod do wykonania w zadaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-142">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="ca306-143">Gdy funkcja została ukończona, zadania <see cref="P:System.Threading.Tasks.Task`1.Result" /> właściwość zostanie ustawiona do zwrócenia wartości wynik funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-143">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-144">Obiekt reprezentujący dane mają być używane przez akcję.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-144">An object representing data to be used by the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-145">Inicjuje nowy <see cref="T:System.Threading.Tasks.Task`1" /> przy użyciu określonej funkcji i stanu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-145">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-146">Zamiast wywoływania najczęściej ten konstruktor do tworzenia wystąpienia <xref:System.Threading.Tasks.Task%601> obiektu, a następnie uruchom zadanie jest wywołując statycznych <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-146">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ca306-147">Zaletą tylko oferowane przez ten konstruktor jest możliwość tworzenia wystąpienia obiektu od wywołanie zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-147">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-148">
            <paramref name="function" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-148">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="ca306-149">Delegat, który reprezentuje kod do wykonania w zadaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-149">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="ca306-150">Gdy funkcja została ukończona, zadania <see cref="P:System.Threading.Tasks.Task`1.Result" /> właściwość zostanie ustawiona do zwrócenia wartości wynik funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-150">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca306-151">
            <see cref="T:System.Threading.CancellationToken" /> Do przypisania do tego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-151">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to this task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-152">Inicjuje nowy <see cref="T:System.Threading.Tasks.Task`1" /> o określonej funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-152">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-153">Zamiast wywoływania najczęściej ten konstruktor do tworzenia wystąpienia <xref:System.Threading.Tasks.Task%601> obiektu, a następnie uruchom zadanie jest wywołując statycznych <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> i <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-153">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> and <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="ca306-154">Zaletą tylko oferowane przez ten konstruktor jest możliwość tworzenia wystąpienia obiektu od wywołanie zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-154">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-155">
            <see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-155">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-156">
            <paramref name="function" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-156">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;TResult&gt; function, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As Func(Of TResult), creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;TResult&gt; ^ function, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="ca306-157">Delegat, który reprezentuje kod do wykonania w zadaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-157">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="ca306-158">Gdy funkcja została ukończona, zadania <see cref="P:System.Threading.Tasks.Task`1.Result" /> właściwość zostanie ustawiona do zwrócenia wartości wynik funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-158">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="ca306-159">
            <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> Pozwala dostosować zachowanie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-159">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-160">Inicjuje nowy <see cref="T:System.Threading.Tasks.Task`1" /> z podanych opcji funkcji i tworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-160">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and creation options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-161">Zamiast wywoływania najczęściej ten konstruktor do tworzenia wystąpienia <xref:System.Threading.Tasks.Task%601> obiektu, a następnie uruchom zadanie jest wywołując statycznych <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%2CSystem.Threading.Tasks.TaskCreationOptions%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-161">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%2CSystem.Threading.Tasks.TaskCreationOptions%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ca306-162">Zaletą tylko oferowane przez ten konstruktor jest możliwość tworzenia wystąpienia obiektu od wywołanie zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-162">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca306-163">
            <paramref name="creationOptions" /> Argument określa nieprawidłową wartość <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-163">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-164">
            <paramref name="function" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-164">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="ca306-165">Delegat, który reprezentuje kod do wykonania w zadaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-165">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="ca306-166">Gdy funkcja została ukończona, zadania <see cref="P:System.Threading.Tasks.Task`1.Result" /> właściwość zostanie ustawiona do zwrócenia wartości wynik funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-166">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-167">Obiekt reprezentujący dane mają być używane przez funkcję.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-167">An object representing data to be used by the function.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca306-168">
            <see cref="T:System.Threading.CancellationToken" /> Do przypisania do nowego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-168">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-169">Inicjuje nowy <see cref="T:System.Threading.Tasks.Task`1" /> z określonej akcji, stanu i opcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-169">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-170">Zamiast wywoływania najczęściej ten konstruktor do tworzenia wystąpienia <xref:System.Threading.Tasks.Task%601> obiektu, a następnie uruchom zadanie jest wywołując statycznych <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-170">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ca306-171">Zaletą tylko oferowane przez ten konstruktor jest możliwość tworzenia wystąpienia obiektu od wywołanie zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-171">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-172">
            <see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-172">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-173">
            <paramref name="function" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-173">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;object,TResult&gt; function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As Func(Of Object, TResult), state As Object, creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="ca306-174">Delegat, który reprezentuje kod do wykonania w zadaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-174">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="ca306-175">Gdy funkcja została ukończona, zadania <see cref="P:System.Threading.Tasks.Task`1.Result" /> właściwość zostanie ustawiona do zwrócenia wartości wynik funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-175">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-176">Obiekt reprezentujący dane mają być używane przez funkcję.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-176">An object representing data to be used by the function.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="ca306-177">
            <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> Pozwala dostosować zachowanie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-177">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-178">Inicjuje nowy <see cref="T:System.Threading.Tasks.Task`1" /> z określonej akcji, stanu i opcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-178">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-179">Zamiast wywoływania najczęściej ten konstruktor do tworzenia wystąpienia <xref:System.Threading.Tasks.Task%601> obiektu, a następnie uruchom zadanie jest wywołując statycznych <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.Tasks.TaskCreationOptions%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-179">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.Tasks.TaskCreationOptions%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ca306-180">Zaletą tylko oferowane przez ten konstruktor jest możliwość tworzenia wystąpienia obiektu od wywołanie zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-180">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca306-181">
            <paramref name="creationOptions" /> Argument określa nieprawidłową wartość <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-181">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-182">
            <paramref name="function" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-182">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="ca306-183">Delegat, który reprezentuje kod do wykonania w zadaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-183">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="ca306-184">Gdy funkcja została ukończona, zadania <see cref="P:System.Threading.Tasks.Task`1.Result" /> właściwość zostanie ustawiona do zwrócenia wartości wynik funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-184">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca306-185">
            <see cref="T:System.Threading.CancellationToken" /> Które zostanie przypisane do nowego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-185">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="ca306-186">
            <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> Pozwala dostosować zachowanie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-186">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-187">Inicjuje nowy <see cref="T:System.Threading.Tasks.Task`1" /> z podanych opcji funkcji i tworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-187">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and creation options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-188">Zamiast wywoływania najczęściej ten konstruktor do tworzenia wystąpienia <xref:System.Threading.Tasks.Task%601> obiektu, a następnie uruchom zadanie jest wywołując statycznych <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%2CSystem.Threading.Tasks.TaskCreationOptions%2CSystem.Threading.Tasks.TaskScheduler%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-188">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%2CSystem.Threading.Tasks.TaskCreationOptions%2CSystem.Threading.Tasks.TaskScheduler%29?displayProperty=nameWithType> method.</span></span>  <span data-ttu-id="ca306-189">Zaletą tylko oferowane przez ten konstruktor jest możliwość tworzenia wystąpienia obiektu od wywołanie zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-189">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-190">
            <see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-190">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca306-191">
            <paramref name="creationOptions" /> Argument określa nieprawidłową wartość <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-191">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-192">
            <paramref name="function" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-192">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="ca306-193">Delegat, który reprezentuje kod do wykonania w zadaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-193">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="ca306-194">Gdy funkcja została ukończona, zadania <see cref="P:System.Threading.Tasks.Task`1.Result" /> właściwość zostanie ustawiona do zwrócenia wartości wynik funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-194">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-195">Obiekt reprezentujący dane mają być używane przez funkcję.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-195">An object representing data to be used by the function.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca306-196">
            <see cref="T:System.Threading.CancellationToken" /> Do przypisania do nowego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-196">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="ca306-197">
            <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> Pozwala dostosować zachowanie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-197">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-198">Inicjuje nowy <see cref="T:System.Threading.Tasks.Task`1" /> z określonej akcji, stanu i opcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-198">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-199">Zamiast wywoływania najczęściej ten konstruktor do tworzenia wystąpienia <xref:System.Threading.Tasks.Task%601> obiektu, a następnie uruchom zadanie jest wywołując statycznych <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.CancellationToken%2CSystem.Threading.Tasks.TaskCreationOptions%2CSystem.Threading.Tasks.TaskScheduler%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-199">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.CancellationToken%2CSystem.Threading.Tasks.TaskCreationOptions%2CSystem.Threading.Tasks.TaskScheduler%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ca306-200">Zaletą tylko oferowane przez ten konstruktor jest możliwość tworzenia wystąpienia obiektu od wywołanie zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-200">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-201">
            <see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-201">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca306-202">
            <paramref name="creationOptions" /> Argument określa nieprawidłową wartość <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-202">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-203">
            <paramref name="function" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-203">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAwait">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;TResult&gt; ConfigureAwait (bool continueOnCapturedContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1&lt;!TResult&gt; ConfigureAwait(bool continueOnCapturedContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureAwait (continueOnCapturedContext As Boolean) As ConfiguredTaskAwaitable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredTaskAwaitable&lt;TResult&gt; ConfigureAwait(bool continueOnCapturedContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="continueOnCapturedContext">
          <span data-ttu-id="ca306-204">wartość true, aby próba zorganizowania kontynuacji wstecz do oryginalnego kontekstu przechwycone; w przeciwnym razie wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-204">true to attempt to marshal the continuation back to the original context captured; otherwise, false.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-205">Konfiguruje awaiter umożliwia to await <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-205">Configures an awaiter used to await this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-206">Obiekt używany do await to zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-206">An object used to await this task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWith">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca306-207">Tworzy zadanie kontynuacji wykonywany po zakończeniu inne zadanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-207">Creates a continuation task that executes when another task completes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult))) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="ca306-208">Akcje, kiedy antecedent <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-208">An action to run when the antecedent <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-209">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania jako argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-209">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-210">Tworzy utrzymania wykonujący asynchronicznie, po zakończeniu wykonywania zadań docelowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-210">Creates a continuation that executes asynchronously when the target task completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-211">Utworzenie nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-211">A new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-212">Zwrócona <xref:System.Threading.Tasks.Task> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub wcześniej został zakończony z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-212">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting early due to being canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca306-213">Poniższy przykład tworzy poprzedzających zadanie, które używa sito Eratosthenes do obliczenia liczb pierwszych od 1 do wartości wprowadzonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ca306-213">The following example creates an antecedent task that uses the Sieve of Eratosthenes to calculate the prime numbers between 1 and a value entered by the user.</span></span> <span data-ttu-id="ca306-214">Tablica jest używana do przechowywania informacji na temat liczby pierwsze.</span><span class="sxs-lookup"><span data-stu-id="ca306-214">An array is used to hold information about the prime numbers.</span></span> <span data-ttu-id="ca306-215">Indeks tablicy jest liczbą i wartości elementu wskazuje, czy liczba ta jest złożony (jego wartość wynosi `true`) lub zapisują (jego wartość wynosi `false`).</span><span class="sxs-lookup"><span data-stu-id="ca306-215">The array index represents the number, and the element's value indicates whether that number is composite (its value is `true`) or prime (its value is `false`).</span></span> <span data-ttu-id="ca306-216">To zadanie są następnie przekazywane do kontynuacji zadania, który jest odpowiedzialny za wyodrębnianie liczb pierwszych z tablicy całkowitą i ich wyświetlanie.</span><span class="sxs-lookup"><span data-stu-id="ca306-216">This task is then passed to a continuation task, which is responsible for extracting the prime numbers from the integer array and displaying them.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1.ContinueWith#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/cs/continue2.cs#2)]
 [!code-vb[System.Threading.Tasks.Task\`1.ContinueWith#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/vb/continue2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-217">
            <see cref="T:System.Threading.Tasks.Task`1" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-217">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-218">
            <paramref name="continuationAction" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-218">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult), Object), state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="ca306-219">Akcje, kiedy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-219">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-220">Podczas uruchamiania, delegat jest przekazywany jako argumenty ukończonego zadania i obiektu stanu dostarczony przez obiekt wywołujący.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-220">When run, the delegate is   passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-221">Obiekt reprezentujący dane mają być używane przez akcję kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-221">An object representing data to be used by the continuation action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-222">Tworzy utrzymania to stan przekazany informacje i, który jest wykonywany kiedy element docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-222">Creates a continuation that that is passed state information and that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-223">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-223">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-224">Zwrócona <xref:System.Threading.Tasks.Task> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-224">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca306-225">Poniższy przykład tworzy zadanie, które jest przekazywany liczbą całkowitą z przedziału od 2 do 20 i zwraca tablicę zawierającą wykładniki pierwszych dziesięciu (od n<sup>1</sup> n<sup>10</sup>) tego numeru.</span><span class="sxs-lookup"><span data-stu-id="ca306-225">The following example creates a task that is passed an integer between 2 and 20 and returns an array that contains the first ten exponents (from n<sup>1</sup> to n<sup>10</sup>) of that number.</span></span> <span data-ttu-id="ca306-226">Zadania kontynuacji jest odpowiedzialny za wyświetlanie wykładniki.</span><span class="sxs-lookup"><span data-stu-id="ca306-226">A continuation task is then responsible for displaying the exponents.</span></span> <span data-ttu-id="ca306-227">Przekazuje zarówno antecedent i oryginalna liczba którego wykładniki generuje antecedent.</span><span class="sxs-lookup"><span data-stu-id="ca306-227">It is passed both the antecedent and the original number whose exponents the antecedent generates.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1.ContinueWith#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/cs/continuewith3.cs#3)]
 [!code-vb[System.Threading.Tasks.Task\`1.ContinueWith#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/vb/continuewith3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-228">
            <paramref name="continuationAction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-228">The <paramref name="continuationAction" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="ca306-229">Akcje, kiedy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-229">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-230">Podczas uruchamiania, delegat jest przekazywany ukończonego zadania jako argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-230">When run, the delegate is passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca306-231">Token anulowania, który jest przekazywany do nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-231">The cancellation token that is passed to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-232">Tworzy kontynuacji można anulować, która wykonuje asynchronicznie podczas docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-232">Creates a cancelable continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-233">Utworzenie nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-233">A new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-234">Zwrócona <xref:System.Threading.Tasks.Task> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-234">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca306-235">Poniższy przykład tworzy poprzedzających zadanie, które używa sito Eratosthenes do obliczenia liczb pierwszych od 1 do wartości wprowadzonej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ca306-235">The following example creates an antecedent task that uses the Sieve of Eratosthenes to calculate the prime numbers between 1 and a value entered by the user.</span></span> <span data-ttu-id="ca306-236">Tablica jest używana do przechowywania informacji na temat liczby pierwsze.</span><span class="sxs-lookup"><span data-stu-id="ca306-236">An array is used to hold information about the prime numbers.</span></span> <span data-ttu-id="ca306-237">Indeks tablicy jest liczbą i wartości elementu wskazuje, czy liczba ta jest złożony (jego wartość wynosi `true`) lub zapisują (jego wartość wynosi `false`).</span><span class="sxs-lookup"><span data-stu-id="ca306-237">The array index represents the number, and the element's value indicates whether that number is composite (its value is `true`) or prime (its value is `false`).</span></span> <span data-ttu-id="ca306-238">To zadanie są następnie przekazywane do kontynuacji zadania, który jest odpowiedzialny za wyodrębnianie liczb pierwszych z tablicy całkowitą i ich wyświetlanie.</span><span class="sxs-lookup"><span data-stu-id="ca306-238">This task is then passed to a continuation task, which is responsible for extracting the prime numbers from the integer array and displaying them.</span></span>  
  
 <span data-ttu-id="ca306-239">Token anulowania jest przekazywany do antecedent i zadania kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="ca306-239">A cancellation token is passed to both the antecedent and the continuation task.</span></span> <span data-ttu-id="ca306-240">A <xref:System.Timers.Timer?displayProperty=nameWithType> obiekt jest używany do definiowania wartość limitu czasu w milisekundach 100.</span><span class="sxs-lookup"><span data-stu-id="ca306-240">A <xref:System.Timers.Timer?displayProperty=nameWithType> object is used to define a timeout value of 100 milliseconds.</span></span> <span data-ttu-id="ca306-241">Jeśli wyzwala zdarzenie, <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType> wywołania metody, token anulowania jest używany do żądania anulowania zadań.</span><span class="sxs-lookup"><span data-stu-id="ca306-241">If the event fires, the <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType> method is called, and the cancellation token is used to request cancellation of the tasks.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1.ContinueWith#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/cs/continue1.cs#1)]
 [!code-vb[System.Threading.Tasks.Task\`1.ContinueWith#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/vb/continue1.vb#1)]  
  
 <span data-ttu-id="ca306-242">Zazwyczaj podanie wartości około 100 000 powoduje, że limit czasu wygaśnięcia i <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> zdarzenia i żądania anulowania, należy ustawić wartość.</span><span class="sxs-lookup"><span data-stu-id="ca306-242">Typically, supplying a value of about 100,000 causes the timeout interval to expire and the <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event to fire, and the cancellation request to be set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-243">
            <see cref="T:System.Threading.Tasks.Task`1" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-243">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
          <span data-ttu-id="ca306-244">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-244">-or-</span>
          </span>
          <span data-ttu-id="ca306-245">
            <see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-245">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-246">
            <paramref name="continuationAction" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-246">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult)), continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="ca306-247">Akcje, zgodnie z warunek określony w <c>continuationOptions</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-247">An action to according the condition specified in <c>continuationOptions</c>.</span>
          </span>
          <span data-ttu-id="ca306-248">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania jako argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-248">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="ca306-249">Opcje kiedy zaplanowano kontynuacji i jak działa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-249">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="ca306-250">Obejmuje to kryteria, takich jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, a także opcje wykonywania, takie jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-250">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-251">Tworzy kontynuacji, która wykonuje zgodnie z warunek określony w <paramref name="continuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-251">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-252">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-252">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-253">Zwrócona <xref:System.Threading.Tasks.Task> nie zostanie zaplanowane do uruchomienia, dopiero po ukończeniu bieżącego zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-253">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed.</span></span> <span data-ttu-id="ca306-254">Jeśli określone kryteria kontynuacji za pośrednictwem `continuationOptions` parametru nie są spełnione, zostanie anulowane zadania kontynuacji zamiast zaplanowane.</span><span class="sxs-lookup"><span data-stu-id="ca306-254">If the continuation criteria specified through the `continuationOptions` parameter are not met, the continuation task will be canceled instead of scheduled.</span></span>  
  
 <span data-ttu-id="ca306-255">Aby uzyskać więcej informacji, zobacz [tworzenie łańcuchów zadań przy użyciu zadań kontynuacji](~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ca306-255">For more information, see [Chaining Tasks by Using Continuation Tasks](~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-256">
            <see cref="T:System.Threading.Tasks.Task`1" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-256">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-257">
            <paramref name="continuationAction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-257">The <paramref name="continuationAction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca306-258">
            <paramref name="continuationOptions" /> Argument określa nieprawidłową wartość <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-258">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult)), scheduler As TaskScheduler) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="ca306-259">Akcje, kiedy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-259">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-260">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania jako argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-260">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="ca306-261">
            <see cref="T:System.Threading.Tasks.TaskScheduler" /> Do skojarzenia z zadania kontynuacji i do użycia podczas jego wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-261">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-262">Tworzy kontynuacji, która wykonuje asynchronicznie podczas docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-262">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-263">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-263">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-264">Zwrócona <xref:System.Threading.Tasks.Task> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-264">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-265">
            <see cref="T:System.Threading.Tasks.Task`1" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-265">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-266">
            <paramref name="continuationAction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-266">The <paramref name="continuationAction" /> argument is null.</span>
          </span>
          <span data-ttu-id="ca306-267">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-267">-or-</span>
          </span>
          <span data-ttu-id="ca306-268">
            <paramref name="scheduler" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-268">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="ca306-269">Akcje, kiedy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-269">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-270">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania i obiektu stanu dostarczony przez obiekt wywołujący, jako argumenty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-270">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-271">Obiekt reprezentujący dane mają być używane przez akcję kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-271">An object representing data to be used by the continuation action.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca306-272">
            <see cref="T:System.Threading.CancellationToken" /> Który zostanie przypisany do nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-272">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-273">Tworzy utrzymania wykonujący, gdy element docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-273">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-274">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-274">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-275">Zwrócona <xref:System.Threading.Tasks.Task> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-275">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has  completed, whether it completes due to running to completion successfully, faulting due to an  unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-276">
            <paramref name="continuationAction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-276">The <paramref name="continuationAction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-277">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-277">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult), Object), state As Object, continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="ca306-278">Akcje, kiedy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-278">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-279">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania i obiektu stanu dostarczony przez obiekt wywołujący, jako argumenty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-279">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-280">Obiekt reprezentujący dane mają być używane przez akcję kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-280">An object representing data to be used by the continuation action.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="ca306-281">Opcje kiedy zaplanowano kontynuacji i jak działa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-281">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="ca306-282">Obejmuje to kryteria, takich jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, a także opcje wykonywania, takie jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-282">This includes criteria, such  as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-283">Tworzy utrzymania wykonujący, gdy element docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-283">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-284">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-284">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-285">Zwrócona <xref:System.Threading.Tasks.Task> nie zostanie zaplanowane do uruchomienia, dopiero po ukończeniu bieżącego zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-285">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed.</span></span> <span data-ttu-id="ca306-286">Jeśli określone kryteria kontynuacji za pośrednictwem `continuationOptions` parametru nie są spełnione, zostanie anulowane zadania kontynuacji zamiast zaplanowane.</span><span class="sxs-lookup"><span data-stu-id="ca306-286">If the continuation criteria specified through the `continuationOptions` parameter are not met, the continuation task will be canceled instead of scheduled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-287">
            <paramref name="continuationAction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-287">The <paramref name="continuationAction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca306-288">
            <paramref name="continuationOptions" /> Argument określa nieprawidłową wartość <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-288">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult), Object), state As Object, scheduler As TaskScheduler) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="ca306-289">Akcje, kiedy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-289">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-290">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania i obiektu stanu dostarczony przez obiekt wywołujący, jako argumenty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-290">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-291">Obiekt reprezentujący dane mają być używane przez akcję kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-291">An object representing data to be used by the continuation action.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="ca306-292">
            <see cref="T:System.Threading.Tasks.TaskScheduler" /> Do skojarzenia z zadania kontynuacji i do użycia podczas jego wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-292">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-293">Tworzy utrzymania wykonujący, gdy element docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-293">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-294">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-294">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-295">Zwrócona <xref:System.Threading.Tasks.Task> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-295">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-296">
            <paramref name="scheduler" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-296">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="ca306-297">Akcję w celu uruchomienia, zgodnie z warunek określony w <c>continuationOptions</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-297">An action to run according the condition specified in <c>continuationOptions</c>.</span>
          </span>
          <span data-ttu-id="ca306-298">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania jako argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-298">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca306-299">
            <see cref="T:System.Threading.CancellationToken" /> Który zostanie przypisany do nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-299">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="ca306-300">Opcje kiedy zaplanowano kontynuacji i jak działa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-300">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="ca306-301">Obejmuje to kryteria, takich jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, a także opcje wykonywania, takie jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-301">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="ca306-302">
            <see cref="T:System.Threading.Tasks.TaskScheduler" /> Do skojarzenia z zadania kontynuacji i do użycia podczas jego wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-302">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-303">Tworzy kontynuacji, która wykonuje zgodnie z warunek określony w <paramref name="continuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-303">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-304">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-304">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-305">Zwrócona <xref:System.Threading.Tasks.Task> nie zostanie zaplanowane do uruchomienia, dopiero po ukończeniu bieżącego zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-305">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed.</span></span> <span data-ttu-id="ca306-306">Jeśli kryteria określone przez `continuationOptions` parametru nie są spełnione, zostanie anulowane zadania kontynuacji zamiast zaplanowane.</span><span class="sxs-lookup"><span data-stu-id="ca306-306">If the criteria specified through the `continuationOptions` parameter are not met, the continuation task will be canceled instead of scheduled.</span></span> <span data-ttu-id="ca306-307">Aby uzyskać więcej informacji, zobacz [tworzenie łańcuchów zadań przy użyciu zadań kontynuacji](~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ca306-307">For more information, see [Chaining Tasks by Using Continuation Tasks](~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-308">
            <see cref="T:System.Threading.Tasks.Task`1" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-308">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
          <span data-ttu-id="ca306-309">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-309">-or-</span>
          </span>
          <span data-ttu-id="ca306-310">
            <see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-310">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-311">
            <paramref name="continuationAction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-311">The <paramref name="continuationAction" /> argument is null.</span>
          </span>
          <span data-ttu-id="ca306-312">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-312">-or-</span>
          </span>
          <span data-ttu-id="ca306-313">
            <paramref name="scheduler" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-313">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca306-314">
            <paramref name="continuationOptions" /> Argument określa nieprawidłową wartość <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-314">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="ca306-315">Akcje, kiedy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-315">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-316">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania i obiektu stanu dostarczony przez obiekt wywołujący, jako argumenty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-316">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-317">Obiekt reprezentujący dane mają być używane przez akcję kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-317">An object representing data to be used by the continuation action.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca306-318">
            <see cref="T:System.Threading.CancellationToken" /> Który zostanie przypisany do nowego zadania kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-318">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="ca306-319">Opcje kiedy zaplanowano kontynuacji i jak działa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-319">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="ca306-320">Obejmuje to kryteria, takich jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, a także opcje wykonywania, takie jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-320">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as  well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="ca306-321">
            <see cref="T:System.Threading.Tasks.TaskScheduler" /> Do skojarzenia z zadania kontynuacji i do użycia podczas jego wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-321">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its  execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-322">Tworzy utrzymania wykonujący, gdy element docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-322">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-323">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-323">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-324">Zwrócona <xref:System.Threading.Tasks.Task> nie zostanie zaplanowane do uruchomienia, dopiero po ukończeniu bieżącego zadania.</span><span class="sxs-lookup"><span data-stu-id="ca306-324">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has  completed.</span></span> <span data-ttu-id="ca306-325">Jeśli kryteria określone przez `continuationOptions` parametru nie są spełnione, zostanie anulowane zadania kontynuacji zamiast zaplanowane.</span><span class="sxs-lookup"><span data-stu-id="ca306-325">If the criteria specified through the `continuationOptions` parameter  are not met, the continuation task will be canceled instead of scheduled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-326">
            <paramref name="scheduler" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-326">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca306-327">
            <paramref name="continuationOptions" /> Argument określa nieprawidłową wartość <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-327">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-328">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-328">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), TNewResult)) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="ca306-329">Typ wyniku utworzonego przez kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-329">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="ca306-330">Funkcja uruchomiony, jeśli <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-330">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-331">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania jako argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-331">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-332">Tworzy kontynuacji, która wykonuje asynchronicznie podczas docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-332">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-333">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-333">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-334">Zwrócona <xref:System.Threading.Tasks.Task%601> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-334">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-335">
            <see cref="T:System.Threading.Tasks.Task`1" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-335">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-336">
            <paramref name="continuationFunction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-336">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="ca306-337">Typ wyniku utworzonego przez kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-337">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="ca306-338">Funkcja uruchomiony, jeśli <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-338">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-339">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania i obiektu stanu dostarczony przez obiekt wywołujący, jako argumenty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-339">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-340">Obiekt reprezentujący dane mają być używane przez funkcję kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-340">An object representing data to be used by the continuation function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-341">Tworzy utrzymania wykonujący, gdy element docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-341">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-342">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-342">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-343">Zwrócona <xref:System.Threading.Tasks.Task%601> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-343">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current  task has completed, whether it completes due to running to completion successfully, faulting due  to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca306-344">Poniższy przykład tworzy łańcuch zadań kontynuacji.</span><span class="sxs-lookup"><span data-stu-id="ca306-344">The following example creates a chain of continuation tasks.</span></span> <span data-ttu-id="ca306-345">Każde zadanie zawiera bieżący czas <xref:System.DateTime> obiektu dla argumentu stanu <xref:System.Threading.Tasks.Task.ContinueWith%28System.Action%7BSystem.Threading.Tasks.Task%2CSystem.Object%7D%2CSystem.Object%29> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-345">Each task provides the current time, a <xref:System.DateTime> object, for the state argument of the <xref:System.Threading.Tasks.Task.ContinueWith%28System.Action%7BSystem.Threading.Tasks.Task%2CSystem.Object%7D%2CSystem.Object%29> method.</span></span> <span data-ttu-id="ca306-346">Każdy <xref:System.DateTime> wartość reprezentuje czas, o której zadanie Kontynuuj została utworzona.</span><span class="sxs-lookup"><span data-stu-id="ca306-346">Each <xref:System.DateTime> value represents the time at which the continue task is created.</span></span> <span data-ttu-id="ca306-347">Każde zadanie tworzy jako wynik drugi <xref:System.DateTime> wartość, która reprezentuje czas, w którym kończy zadanie.</span><span class="sxs-lookup"><span data-stu-id="ca306-347">Each task produces as its result a second <xref:System.DateTime> value that represents the time at which the task finishes.</span></span> <span data-ttu-id="ca306-348">Po zakończeniu wszystkich zadań, w przykładzie przedstawiono daty i godziny jaką każdego zadania kontynuacji uruchamia i zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="ca306-348">After all tasks finish, the example displays the date and times at which each continuation task starts and finishes.</span></span>  
  
 [!code-csharp[TPL_ContinuationState#1](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_continuationstate/cs/continuationstate.cs#1)]
 [!code-vb[TPL_ContinuationState#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_continuationstate/vb/continuationstate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-349">
            <paramref name="continuationFunction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-349">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="ca306-350">Typ wyniku utworzonego przez kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-350">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="ca306-351">Funkcja uruchomiony, jeśli <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-351">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-352">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania jako argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-352">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca306-353">
            <see cref="T:System.Threading.CancellationToken" /> Które zostanie przypisane do nowego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-353">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-354">Tworzy kontynuacji, która wykonuje asynchronicznie podczas docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-354">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-355">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-355">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-356">Zwrócona <xref:System.Threading.Tasks.Task%601> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-356">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-357">
            <see cref="T:System.Threading.Tasks.Task`1" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-357">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
          <span data-ttu-id="ca306-358">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-358">-or-</span>
          </span>
          <span data-ttu-id="ca306-359">
            <see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-359">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-360">
            <paramref name="continuationFunction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-360">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), TNewResult), continuationOptions As TaskContinuationOptions) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="ca306-361">Typ wyniku utworzonego przez kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-361">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="ca306-362">Funkcja do uruchomienia, zgodnie z warunek określony w <c>continuationOptions</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-362">A function to run according the condition specified in <c>continuationOptions</c>.</span>
          </span>
          <span data-ttu-id="ca306-363">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania jako argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-363">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="ca306-364">Opcje kiedy zaplanowano kontynuacji i jak działa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-364">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="ca306-365">Obejmuje to kryteria, takich jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, a także opcje wykonywania, takie jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-365">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-366">Tworzy kontynuacji, która wykonuje zgodnie z warunek określony w <paramref name="continuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-366">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-367">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-367">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-368">Zwrócona <xref:System.Threading.Tasks.Task%601> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-368">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 <span data-ttu-id="ca306-369">`continuationFunction`, Po wykonaniu powinien zwrócić <xref:System.Threading.Tasks.Task%601>...</span><span class="sxs-lookup"><span data-stu-id="ca306-369">The `continuationFunction`, when executed, should return a <xref:System.Threading.Tasks.Task%601>..</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-370">
            <see cref="T:System.Threading.Tasks.Task`1" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-370">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-371">
            <paramref name="continuationFunction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-371">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca306-372">
            <paramref name="continuationOptions" /> Argument określa nieprawidłową wartość <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-372">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), TNewResult), scheduler As TaskScheduler) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="ca306-373">Typ wyniku utworzonego przez kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-373">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="ca306-374">Funkcja uruchomiony, jeśli <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-374">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-375">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania jako argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-375">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="ca306-376">
            <see cref="T:System.Threading.Tasks.TaskScheduler" /> Do skojarzenia z zadania kontynuacji i do użycia podczas jego wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-376">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-377">Tworzy kontynuacji, która wykonuje asynchronicznie podczas docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-377">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-378">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-378">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-379">Zwrócona <xref:System.Threading.Tasks.Task%601> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-379">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-380">
            <see cref="T:System.Threading.Tasks.Task`1" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-380">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-381">
            <paramref name="continuationFunction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-381">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
          <span data-ttu-id="ca306-382">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-382">-or-</span>
          </span>
          <span data-ttu-id="ca306-383">
            <paramref name="scheduler" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-383">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="ca306-384">Typ wyniku utworzonego przez kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-384">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="ca306-385">Funkcja uruchomiony, jeśli <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-385">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-386">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania i obiektu stanu dostarczony przez obiekt wywołujący, jako argumenty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-386">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-387">Obiekt reprezentujący dane mają być używane przez funkcję kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-387">An object representing data to be used by the continuation function.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca306-388">
            <see cref="T:System.Threading.CancellationToken" /> Które zostanie przypisane do nowego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-388">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-389">Tworzy utrzymania wykonujący, gdy element docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-389">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-390">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-390">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-391">Zwrócona <xref:System.Threading.Tasks.Task%601> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-391">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current  task has completed, whether it completes due to running to completion successfully, faulting due  to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-392">
            <paramref name="continuationFunction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-392">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-393">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-393">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object, continuationOptions As TaskContinuationOptions) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="ca306-394">Typ wyniku utworzonego przez kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-394">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="ca306-395">Funkcja uruchomiony, jeśli <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-395">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-396">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania i obiektu stanu dostarczony przez obiekt wywołujący, jako argumenty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-396">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-397">Obiekt reprezentujący dane mają być używane przez funkcję kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-397">An object representing data to be used by the continuation function.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="ca306-398">Opcje kiedy zaplanowano kontynuacji i jak działa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-398">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="ca306-399">Obejmuje to kryteria, takich jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, a także opcje wykonywania, takie jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-399">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-400">Tworzy utrzymania wykonujący, gdy element docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-400">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-401">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-401">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-402">Zwrócona <xref:System.Threading.Tasks.Task%601> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-402">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current  task has completed, whether it completes due to running to completion successfully, faulting due  to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 <span data-ttu-id="ca306-403">`continuationFunction`, Po wykonaniu powinien zwrócić <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="ca306-403">The `continuationFunction`, when executed, should return a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="ca306-404">Stan wykonania tego zadania zostanie przeniesiona do zadania zwracany z wywołania ContinueWith.</span><span class="sxs-lookup"><span data-stu-id="ca306-404">This task's completion state will be transferred to the task returned from the ContinueWith call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-405">
            <paramref name="continuationFunction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-405">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca306-406">
            <paramref name="continuationOptions" /> Argument określa nieprawidłową wartość <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-406">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object, scheduler As TaskScheduler) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="ca306-407">Typ wyniku utworzonego przez kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-407">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="ca306-408">Funkcja uruchomiony, jeśli <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-408">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-409">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania i obiektu stanu dostarczony przez obiekt wywołujący, jako argumenty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-409">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-410">Obiekt reprezentujący dane mają być używane przez funkcję kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-410">An object representing data to be used by the continuation function.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="ca306-411">
            <see cref="T:System.Threading.Tasks.TaskScheduler" /> Do skojarzenia z zadania kontynuacji i do użycia podczas jego wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-411">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-412">Tworzy utrzymania wykonujący, gdy element docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-412">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-413">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-413">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-414">Zwrócona <xref:System.Threading.Tasks.Task%601> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-414">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has  completed, whether it completes due to running to completion successfully, faulting due to an  unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-415">
            <paramref name="scheduler" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-415">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="ca306-416">Typ wyniku utworzonego przez kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-416">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="ca306-417">Funkcja do uruchomienia, zgodnie z warunek określony w <c>continuationOptions</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-417">A function to run according the condition specified in <c>continuationOptions</c>.</span>
          </span>
          <span data-ttu-id="ca306-418">Podczas uruchamiania, delegat zostaną przekazane jako argument, to zadanie ukończone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-418">When run, the delegate will be passed as an argument this completed task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca306-419">
            <see cref="T:System.Threading.CancellationToken" /> Które zostanie przypisane do nowego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-419">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="ca306-420">Opcje kiedy zaplanowano kontynuacji i jak działa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-420">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="ca306-421">Obejmuje to kryteria, takich jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, a także opcje wykonywania, takie jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-421">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="ca306-422">
            <see cref="T:System.Threading.Tasks.TaskScheduler" /> Do skojarzenia z zadania kontynuacji i do użycia podczas jego wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-422">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-423">Tworzy kontynuacji, która wykonuje zgodnie z warunek określony w <paramref name="continuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-423">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-424">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-424">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-425">Zwrócona <xref:System.Threading.Tasks.Task%601> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-425">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 <span data-ttu-id="ca306-426">`continuationFunction`, Po wykonaniu powinien zwrócić <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="ca306-426">The `continuationFunction`, when executed, should return a <xref:System.Threading.Tasks.Task%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-427">
            <see cref="T:System.Threading.Tasks.Task`1" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-427">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
          <span data-ttu-id="ca306-428">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-428">-or-</span>
          </span>
          <span data-ttu-id="ca306-429">
            <see cref="T:System.Threading.CancellationTokenSource" /> Utworzony <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-429">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-430">
            <paramref name="continuationFunction" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-430">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
          <span data-ttu-id="ca306-431">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-431">-or-</span>
          </span>
          <span data-ttu-id="ca306-432">
            <paramref name="scheduler" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-432">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca306-433">
            <paramref name="continuationOptions" /> Argument określa nieprawidłową wartość <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-433">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="ca306-434">Typ wyniku utworzonego przez kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-434">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="ca306-435">Funkcja uruchomiony, jeśli <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-435">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="ca306-436">Podczas uruchamiania, delegat zostaną przekazane ukończonego zadania i obiektu stanu dostarczony przez obiekt wywołujący, jako argumenty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-436">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ca306-437">Obiekt reprezentujący dane mają być używane przez funkcję kontynuacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-437">An object representing data to be used by the continuation function.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca306-438">
            <see cref="T:System.Threading.CancellationToken" /> Które zostanie przypisane do nowego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-438">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="ca306-439">Opcje kiedy zaplanowano kontynuacji i jak działa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-439">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="ca306-440">Obejmuje to kryteria, takich jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, a także opcje wykonywania, takie jak <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-440">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="ca306-441">
            <see cref="T:System.Threading.Tasks.TaskScheduler" /> Do skojarzenia z zadania kontynuacji i do użycia podczas jego wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-441">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca306-442">Tworzy utrzymania wykonujący, gdy element docelowy <see cref="T:System.Threading.Tasks.Task`1" /> zakończeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-442">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-443">Nowe kontynuacji <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-443">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-444">Zwrócona <xref:System.Threading.Tasks.Task%601> nie są planowane do wykonania dopiero po ukończeniu bieżącego zadania, czy jego zakończenie z powodu pomyślnie wykonywane ukończenia, powodujący błąd z powodu nieobsługiwanego wyjątku lub zamykanie się wcześniej z powodu anulowania.</span><span class="sxs-lookup"><span data-stu-id="ca306-444">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has  completed, whether it completes due to running to completion successfully, faulting due to an  unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 <span data-ttu-id="ca306-445">`continuationFunction`, Po wykonaniu powinien zwrócić <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="ca306-445">The `continuationFunction`, when executed, should return a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="ca306-446">Stan wykonania tego zadania zostanie przeniesiona na zadanie zwrócone z <xref:System.Threading.Tasks.Task%601.ContinueWith%2A?displayProperty=nameWithType> wywołania.</span><span class="sxs-lookup"><span data-stu-id="ca306-446">This task's completion state will be transferred to the task returned from the <xref:System.Threading.Tasks.Task%601.ContinueWith%2A?displayProperty=nameWithType> call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca306-447">
            <paramref name="scheduler" /> Argument ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-447">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca306-448">
            <paramref name="continuationOptions" /> Argument określa nieprawidłową wartość <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-448">The  <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca306-449">Podana <see cref="T:System.Threading.CancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-449">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Factory">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.TaskFactory&lt;TResult&gt; Factory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.Tasks.TaskFactory`1&lt;!TResult&gt; Factory" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Task`1.Factory" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Factory As TaskFactory(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::Tasks::TaskFactory&lt;TResult&gt; ^ Factory { System::Threading::Tasks::TaskFactory&lt;TResult&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskFactory&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca306-450">Zapewnia dostęp do metody fabrykę do tworzenia i konfigurowania <see cref="T:System.Threading.Tasks.Task`1" /> wystąpień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-450">Provides access to factory methods for creating and configuring <see cref="T:System.Threading.Tasks.Task`1" /> instances.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca306-451">Obiekt fabryki, który może tworzyć różnych <see cref="T:System.Threading.Tasks.Task`1" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-451">A factory object that can create a variety of <see cref="T:System.Threading.Tasks.Task`1" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-452">Ta właściwość zwraca domyślnego wystąpienia programu <xref:System.Threading.Tasks.TaskFactory%601> klasy, która jest taka sama jak utworzony przez wywołanie metody bez parametrów <xref:System.Threading.Tasks.TaskFactory%601.%23ctor?displayProperty=nameWithType> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="ca306-452">This property returns a default instance of the <xref:System.Threading.Tasks.TaskFactory%601> class that is identical to the one created by calling the parameterless <xref:System.Threading.Tasks.TaskFactory%601.%23ctor?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="ca306-453">Ma ona wartości następujących właściwości:</span><span class="sxs-lookup"><span data-stu-id="ca306-453">It has the following property values:</span></span>  
  
|<span data-ttu-id="ca306-454">Właściwość</span><span class="sxs-lookup"><span data-stu-id="ca306-454">Property</span></span>|<span data-ttu-id="ca306-455">Wartość</span><span class="sxs-lookup"><span data-stu-id="ca306-455">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Threading.Tasks.TaskFactory%601.CancellationToken%2A?displayProperty=nameWithType>|<xref:System.Threading.CancellationToken.None%2A?displayProperty=nameWithType>|  
|<xref:System.Threading.Tasks.TaskFactory%601.ContinuationOptions%2A?displayProperty=nameWithType>|<xref:System.Threading.Tasks.TaskContinuationOptions.None?displayProperty=nameWithType>|  
|<xref:System.Threading.Tasks.TaskFactory%601.CreationOptions%2A?displayProperty=nameWithType>|<xref:System.Threading.Tasks.TaskCreationOptions.None?displayProperty=nameWithType>|  
|<xref:System.Threading.Tasks.TaskFactory%601.Scheduler%2A?displayProperty=nameWithType>|<span data-ttu-id="ca306-456">`null`, lub <xref:System.Threading.Tasks.TaskScheduler.Current%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ca306-456">`null`, or <xref:System.Threading.Tasks.TaskScheduler.Current%2A?displayProperty=nameWithType></span></span>|  
  
 <span data-ttu-id="ca306-457">Najbardziej typowe użycie tej właściwości jest utworzenie i uruchomić nowe zadanie w jednym wywołaniu <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-457">The most common use of this property is to create and start a new task in a single call to the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca306-458">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> metoda zapewnia Najprostszym sposobem tworzenia <xref:System.Threading.Tasks.Task%601> obiekt o wartości konfiguracji domyślnej.</span><span class="sxs-lookup"><span data-stu-id="ca306-458">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a <xref:System.Threading.Tasks.Task%601> object with default configuration values.</span></span>  
  
 <span data-ttu-id="ca306-459">W poniższym przykładzie użyto statycznych <xref:System.Threading.Tasks.Task%601.Factory%2A> właściwość, aby utworzyć trzy wywołania <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-459">The following example uses the static <xref:System.Threading.Tasks.Task%601.Factory%2A> property to make three calls to the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ca306-460">Pierwszy uruchamia `Task<Int32>` obiektu, który wykonuje wyrażenia lambda, która zwraca wartość 1.</span><span class="sxs-lookup"><span data-stu-id="ca306-460">The first starts a `Task<Int32>` object, which executes a lambda expression that returns 1.</span></span> <span data-ttu-id="ca306-461">Drugi uruchamia `Task<Test>` obiektu, który wykonuje wyrażenia lambda, która tworzy nowy `Test` wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ca306-461">The second starts a `Task<Test>` object, which executes a lambda expression that instantiates a new `Test` instance.</span></span> <span data-ttu-id="ca306-462">Trzeci uruchamia `Task<String[]>` obiektu, który wylicza pliki w katalogu C:\Users\Public\Pictures\Sample Pictures\.</span><span class="sxs-lookup"><span data-stu-id="ca306-462">The third starts a `Task<String[]>` object, which enumerates the files in the C:\Users\Public\Pictures\Sample Pictures\ directory.</span></span> <span data-ttu-id="ca306-463">(Uwaga pomyślne wykonanie przykładzie wymaga, że katalog istnieje i że zawiera on plików.</span><span class="sxs-lookup"><span data-stu-id="ca306-463">(Note that successful execution of the example requires that the directory exist and that it contain files.</span></span>  
  
 [!code-csharp[TPL#10](~/samples/snippets/csharp/VS_Snippets_Misc/tpl/cs/returnavalue10.cs#10)]
 [!code-vb[TPL#10](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl/vb/10_returnavalue.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt; GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.TaskAwaiter`1&lt;!TResult&gt; GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As TaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::TaskAwaiter&lt;TResult&gt; GetAwaiter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca306-464">Pobiera awaiter umożliwia to await <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-464">Gets an awaiter used to await this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca306-465">Wystąpienie awaiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-465">An awaiter instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-466">Ta metoda jest przeznaczona dla kompilatora użytkownika, a nie do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="ca306-466">This method is intended for compiler user rather than use directly in code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public TResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TResult Result" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Task`1.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TResult Result { TResult get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca306-467">Pobiera wartość wyniku <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-467">Gets the result value of this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca306-468">Wartość wyniku <see cref="T:System.Threading.Tasks.Task`1" />, czyli z tego samego typu co parametr typu zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-468">The result value of this <see cref="T:System.Threading.Tasks.Task`1" />, which is of the same type as the task's type parameter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca306-469">Uzyskiwanie dostępu do właściwości metody dostępu get blokuje wątek wywołujący przed zakończeniem operacji asynchronicznej; jest to odpowiednik wywołania <xref:System.Threading.Tasks.Task.Wait%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ca306-469">Accessing the property's get accessor blocks the calling thread until the asynchronous operation is complete; it is equivalent to calling the <xref:System.Threading.Tasks.Task.Wait%2A> method.</span></span>  
  
 <span data-ttu-id="ca306-470">Po udostępnieniu wynik operacji, są przechowywane i zwracany jest od razu na kolejnych wywołań <xref:System.Threading.Tasks.Task%601.Result%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ca306-470">Once the result of an operation is available, it is stored and is returned immediately on subsequent calls to the <xref:System.Threading.Tasks.Task%601.Result%2A> property.</span></span> <span data-ttu-id="ca306-471">Należy zauważyć, że jeśli wystąpił wyjątek podczas operacji zadania lub zadanie zostało anulowane, <xref:System.Threading.Tasks.Task%601.Result%2A> właściwości nie zwraca wartości.</span><span class="sxs-lookup"><span data-stu-id="ca306-471">Note that, if an exception occurred during the operation of the task, or if the task has been cancelled, the <xref:System.Threading.Tasks.Task%601.Result%2A> property does not return a value.</span></span> <span data-ttu-id="ca306-472">Zamiast tego próby dostępu do właściwości value zgłasza <xref:System.AggregateException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ca306-472">Instead, attempting to access the property value throws an <xref:System.AggregateException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca306-473">Poniższy przykład jest narzędziem wiersza polecenia, który oblicza liczbę bajtów w plikach w każdym katalogu, którego nazwa jest przekazywany jako argument wiersza polecenia.</span><span class="sxs-lookup"><span data-stu-id="ca306-473">The following example is a command-line utility that calculates the number of bytes in the files in each directory whose name is passed as a command-line argument.</span></span> <span data-ttu-id="ca306-474">Jeśli katalog zawiera pliki, wykonuje on Wyrażenie lambda, które tworzy <xref:System.IO.FileStream> obiekt dla każdego pliku w katalogu i pobiera wartość jego <xref:System.IO.FileStream.Length%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ca306-474">If the directory contains files, it executes a lambda expression that instantiates a <xref:System.IO.FileStream> object for each file in the directory and retrieves the value of its <xref:System.IO.FileStream.Length%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ca306-475">Jeśli katalog nie zawiera plików, po prostu wywołuje metodę <xref:System.Threading.Tasks.Task.FromResult%2A> metody, aby utworzyć zadanie, którego <xref:System.Threading.Tasks.Task%601.Result%2A?displayProperty=nameWithType> właściwości to zero (0).</span><span class="sxs-lookup"><span data-stu-id="ca306-475">If a directory contains no files, it simply calls the <xref:System.Threading.Tasks.Task.FromResult%2A> method to create a task whose <xref:System.Threading.Tasks.Task%601.Result%2A?displayProperty=nameWithType> property is zero (0).</span></span> <span data-ttu-id="ca306-476">Po zakończeniu zadania, całkowita liczba bajtów we wszystkich katalogu plików jest dostępna z <xref:System.Threading.Tasks.Task%601.Result%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ca306-476">When the tasks finish, the total number of bytes in all a directory's files is available from the <xref:System.Threading.Tasks.Task%601.Result%2A> property.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.FromResult#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.fromresult/cs/fromresult1.cs#1)]
 [!code-vb[System.Threading.Tasks.Task.FromResult#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.fromresult/vb/fromresult1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="ca306-477">Zadanie zostało anulowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-477">The task was canceled.</span>
          </span>
          <span data-ttu-id="ca306-478">
            <see cref="P:System.AggregateException.InnerExceptions" /> Kolekcja zawiera <see cref="T:System.Threading.Tasks.TaskCanceledException" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-478">The <see cref="P:System.AggregateException.InnerExceptions" /> collection contains a <see cref="T:System.Threading.Tasks.TaskCanceledException" /> object.</span>
          </span>
          <span data-ttu-id="ca306-479">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-479">-or-</span>
          </span>
          <span data-ttu-id="ca306-480">Wystąpił wyjątek podczas wykonywania zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-480">An exception was thrown during the execution of the task.</span>
          </span>
          <span data-ttu-id="ca306-481">
            <see cref="P:System.AggregateException.InnerExceptions" /> Kolekcja zawiera informacje o wyjątków i wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca306-481">The <see cref="P:System.AggregateException.InnerExceptions" /> collection contains information about the exception or exceptions.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>