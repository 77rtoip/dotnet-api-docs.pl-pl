<Type Name="StateChangedEventArgs" FullName="System.Speech.Synthesis.StateChangedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d90071e475e20f7be4c50aea4c8a28401d7ff239" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39729431" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StateChangedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StateChangedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.StateChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class StateChangedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class StateChangedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type StateChangedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0c157-101">Zwraca dane z <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" /> zdarzeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c157-101">Returns data from the <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c157-102">Wystąpienie <xref:System.Speech.Synthesis.StateChangedEventArgs> jest tworzone, gdy <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu zgłasza <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0c157-102">An instance of <xref:System.Speech.Synthesis.StateChangedEventArgs> is created when the <xref:System.Speech.Synthesis.SpeechSynthesizer> object raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged> event.</span></span> <span data-ttu-id="0c157-103">Aby uzyskać wartości dla nowej i poprzedniej <xref:System.Speech.Synthesis.SynthesizerState>, dostępu <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> i <xref:System.Speech.Synthesis.StateChangedEventArgs.PreviousState> właściwości programu obsługi zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0c157-103">To obtain the values for the new and the previous <xref:System.Speech.Synthesis.SynthesizerState>, access the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> and <xref:System.Speech.Synthesis.StateChangedEventArgs.PreviousState> properties  in the handler for the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c157-104">Poniższy przykład pokazuje informacje, które są dostępne informacje <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0c157-104">The following example demonstrates the information that is available about the <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Subscribe to StateChanged event.  
        synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
        // Subscribe to the SpeakProgress event.  
        synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt.  
        synth.Speak("What is your favorite color?");  
  
        // Pause the SpeechSynthesizer object.  
        synth.Pause();  
  
        // Resume the SpeechSynthesizer object.  
        synth.Resume();  
      }  
  
      Console.WriteLine("\nPress any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the speak progress of the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="PreviousState">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState PreviousState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState PreviousState" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.StateChangedEventArgs.PreviousState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousState As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState PreviousState { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousState : System.Speech.Synthesis.SynthesizerState" Usage="System.Speech.Synthesis.StateChangedEventArgs.PreviousState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c157-105">Pobiera stan <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> przed <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c157-105">Gets the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> before the <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c157-106">Zwraca stan Syntezator przed zmianą stanu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c157-106">Returns the state of the synthesizer before the state changed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c157-107"><xref:System.Speech.Synthesis.StateChangedEventArgs.PreviousState%2A> Właściwość reprezentuje stan Syntezator ze składową o <xref:System.Speech.Synthesis.SynthesizerState> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="0c157-107">The <xref:System.Speech.Synthesis.StateChangedEventArgs.PreviousState%2A> property represents the synthesizer state with a member of the <xref:System.Speech.Synthesis.SynthesizerState> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.StateChangedEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Speech.Synthesis.SynthesizerState" Usage="System.Speech.Synthesis.StateChangedEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c157-108">Pobiera stan <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> przed <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c157-108">Gets the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> before the <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c157-109">Stan Syntezator po zmianie stanu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c157-109">The state of the synthesizer after the state changed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c157-110"><xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> Właściwość reprezentuje stan Syntezator ze składową o <xref:System.Speech.Synthesis.SynthesizerState> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="0c157-110">The <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property represents the synthesizer state with a member of the <xref:System.Speech.Synthesis.SynthesizerState> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>