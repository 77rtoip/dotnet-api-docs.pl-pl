<Type Name="VoiceInfo" FullName="System.Speech.Synthesis.VoiceInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c8fc798472f2a71e12f5e121858b44a1687e4f56" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30578992" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VoiceInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit VoiceInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.VoiceInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class VoiceInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class VoiceInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{(_name != null ? "'" + _name + "' " : "") +  (_culture != null ? " '" + _culture.ToString () + "' " : "") + (_gender != VoiceGender.NotSet ? " '" + _gender.ToString () + "' " : "") + (_age != VoiceAge.NotSet ? " '" + _age.ToString () + "' " : "") + (_variant &gt; 0 ? " " + _variant.ToString () : "")}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1ad88-101">Reprezentuje aparat syntezy zainstalowanych mowy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ad88-101">Represents an installed speech synthesis engine.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ad88-102">Głos jest aparat syntezy zainstalowanych mowy, który jest również nazywany tekst na mowę aparat lub aparatu TTS.</span><span class="sxs-lookup"><span data-stu-id="1ad88-102">A voice is an installed speech synthesis engine, which is also referred to as a text-to-speech engine or a TTS engine.</span></span> <span data-ttu-id="1ad88-103"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiektu używa głosu, aby wygenerować mowy z pliku tekstowego.</span><span class="sxs-lookup"><span data-stu-id="1ad88-103">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object uses a voice to generate speech from text.</span></span> <span data-ttu-id="1ad88-104">Właściwości <xref:System.Speech.Synthesis.VoiceInfo> obiektu identyfikujące głosu i opisujące jego właściwości.</span><span class="sxs-lookup"><span data-stu-id="1ad88-104">The properties of the <xref:System.Speech.Synthesis.VoiceInfo> object identify a voice and describe its characteristics.</span></span> <span data-ttu-id="1ad88-105">Najbardziej Definiowanie cech głosu jest jego <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A>, który definiuje jednego języka, który można mowy głosu.</span><span class="sxs-lookup"><span data-stu-id="1ad88-105">The most defining characteristic of a voice is its <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A>, which defines the single language that a voice can speak.</span></span>  
  
 <span data-ttu-id="1ad88-106"><xref:System.Speech.Synthesis.SpeechSynthesizer.Voice%2A> Zwraca <xref:System.Speech.Synthesis.VoiceInfo> obiektu, który zawiera informacje o bieżącym głos używany przez <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="1ad88-106">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Voice%2A> property returns a <xref:System.Speech.Synthesis.VoiceInfo> object that contains information about the current voice in use by the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="1ad88-107">Można również użyć <xref:System.Speech.Synthesis.VoiceInfo> obiekt, aby uzyskać informacje na temat zainstalowanych w systemie, głosy zwrócony przez <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices> metody.</span><span class="sxs-lookup"><span data-stu-id="1ad88-107">You can also use a <xref:System.Speech.Synthesis.VoiceInfo> object to get information about any of the voices that are installed on the system, as returned by the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices> method.</span></span> <span data-ttu-id="1ad88-108">Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Synthesis.InstalledVoice>.</span><span class="sxs-lookup"><span data-stu-id="1ad88-108">See <xref:System.Speech.Synthesis.InstalledVoice> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ad88-109">Poniższy przykład jest częścią aplikacji konsoli, która inicjuje <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu i dane wyjściowe konsoli listę zainstalowanych głosów (silników syntezy mowy) i przedstawiono informacje, które są dostępne dla każdego głosu.</span><span class="sxs-lookup"><span data-stu-id="1ad88-109">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
  </Docs>
  <Members>
    <Member MemberName="AdditionalInfo">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; AdditionalInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; AdditionalInfo" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.AdditionalInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalInfo As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ AdditionalInfo { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ad88-110">Pobiera dodatkowe informacje na temat głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-110">Gets additional information about the voice.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ad88-111">Zwraca kolekcję par nazw i wartości, które opisują i zidentyfikować głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-111">Returns a collection of name/value pairs that describe and identify the voice.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Age">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceAge Age { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.VoiceAge Age" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.Age" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Age As VoiceAge" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceAge Age { System::Speech::Synthesis::VoiceAge get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceAge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ad88-112">Pobiera wieku głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-112">Gets the age of the voice.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ad88-113">Zwraca wieku głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-113">Returns the age of the voice.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ad88-114"><xref:System.Speech.Synthesis.VoiceInfo.Age%2A> Właściwości pobiera członkiem <xref:System.Speech.Synthesis.VoiceAge> wyliczenia wskazująca wieku głosu.</span><span class="sxs-lookup"><span data-stu-id="1ad88-114">The <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> property gets a member of the <xref:System.Speech.Synthesis.VoiceAge> enumeration that indicates the age of the voice.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ad88-115">Pobiera kultury głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-115">Gets the culture of the voice.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ad88-116">Zwraca <see cref="T:System.Globalization.CultureInfo" /> obiektu, który zawiera informacje o określoną kulturę, takich jak nazwy kultury, system pisma i używany kalendarz oraz sposób formatowania dat i sortowanie ciągów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-116">Returns a <see cref="T:System.Globalization.CultureInfo" /> object that provides information about a specific culture, such as the names of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ad88-117"><xref:System.Globalization.CultureInfo> Klasy Określa unikatową nazwę dla każdego kultury.</span><span class="sxs-lookup"><span data-stu-id="1ad88-117">The <xref:System.Globalization.CultureInfo> class specifies a unique name for each culture.</span></span> <span data-ttu-id="1ad88-118">Nazwa jest kombinacją kod kultury małe dwuliterowych ISO 639 skojarzone z językiem i normy ISO 3166 dwuliterowych przeszczepiania wielkie litery kod kraju lub regionu.</span><span class="sxs-lookup"><span data-stu-id="1ad88-118">The name is a combination of an ISO 639 two-letter lowercase culture code associated with a language and an ISO 3166 two-letter uppercase subculture code associated with a country or region.</span></span> <span data-ttu-id="1ad88-119">Nazwy kultury przykładami "es pl" dla języka hiszpańskiego jak używany w Stanach Zjednoczonych lub "fr-CA" francuski, ponieważ używany w Kanady.</span><span class="sxs-lookup"><span data-stu-id="1ad88-119">Examples of culture names include "es-US" for Spanish as spoken in the US, or "fr-CA" for French as spoken in Canada.</span></span> <span data-ttu-id="1ad88-120">Można określić kultury neutralnej przy użyciu tylko kod języka małe dwucyfrowym.</span><span class="sxs-lookup"><span data-stu-id="1ad88-120">You can specify a neutral culture by using only the two-digit lowercase language code.</span></span> <span data-ttu-id="1ad88-121">Na przykład "fr" Określa kulturę neutralną francuski, a "de" Określa kulturę neutralną na język niemiecki.</span><span class="sxs-lookup"><span data-stu-id="1ad88-121">For example, "fr" specifies the neutral culture for French, and "de" specifies the neutral culture for German.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ad88-122">Pobiera opis głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-122">Gets the description of the voice.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ad88-123">Zwraca opis głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-123">Returns the description of the voice.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.VoiceInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1ad88-124">Określony <see cref="T:System.Speech.Synthesis.VoiceInfo" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-124">The specified <see cref="T:System.Speech.Synthesis.VoiceInfo" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ad88-125">Porównanie pola głosu z określonym <see cref="T:System.Speech.Synthesis.VoiceInfo" /> obiektem, aby określić, czy zawierają one takie same wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-125">Compares the fields of the voice with the specified <see cref="T:System.Speech.Synthesis.VoiceInfo" /> object to determine whether they contain the same values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ad88-126">Zwraca <see langword="True" /> Jeśli pola dwa <see cref="T:System.Speech.Synthesis.VoiceInfo" /> obiekty są równe; w przeciwnym razie zwraca <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-126">Returns <see langword="True" /> if the fields of the two <see cref="T:System.Speech.Synthesis.VoiceInfo" /> objects are equal; otherwise returns <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ad88-127"><xref:System.Speech.Synthesis.VoiceInfo.Equals%2A> Ma metodę <xref:System.Object> typu jako jego parametr.</span><span class="sxs-lookup"><span data-stu-id="1ad88-127">The <xref:System.Speech.Synthesis.VoiceInfo.Equals%2A> method takes a <xref:System.Object> type as its parameter.</span></span> <span data-ttu-id="1ad88-128">Jeśli ten obiekt nie jest <xref:System.Speech.Synthesis.VoiceInfo> typ, metoda zwraca `False`.</span><span class="sxs-lookup"><span data-stu-id="1ad88-128">If that object is not of the <xref:System.Speech.Synthesis.VoiceInfo> type, the method returns `False`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Gender">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceGender Gender { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.VoiceGender Gender" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.Gender" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Gender As VoiceGender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceGender Gender { System::Speech::Synthesis::VoiceGender get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceGender</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ad88-129">Pobiera płci głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-129">Gets the gender of the voice.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ad88-130">Zwraca płci głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-130">Returns the gender of the voice.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ad88-131"><xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> Właściwości pobiera członkiem <xref:System.Speech.Synthesis.VoiceGender> wyliczenia wskazująca płci głosu.</span><span class="sxs-lookup"><span data-stu-id="1ad88-131">The <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property gets a member of the <xref:System.Speech.Synthesis.VoiceGender> enumeration that indicates the gender of the voice.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.VoiceInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ad88-132">Udostępnia wartość skrótu dla <c>VoiceInfo</c> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-132">Provides a hash code for a <c>VoiceInfo</c> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ad88-133">Wartość skrótu dla bieżącego <see cref="T:System.Speech.Synthesis.VoiceInfo" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-133">A hash code for the current <see cref="T:System.Speech.Synthesis.VoiceInfo" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ad88-134">Pobiera identyfikator głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-134">Gets the ID of the voice.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ad88-135">Zwraca identyfikator dla głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-135">Returns the identifier for the voice.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ad88-136">Pobiera nazwę głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-136">Gets the name of the voice.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ad88-137">Zwraca nazwę głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-137">Returns the name of the voice.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedAudioFormats">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.AudioFormat.SpeechAudioFormatInfo&gt; SupportedAudioFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.AudioFormat.SpeechAudioFormatInfo&gt; SupportedAudioFormats" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.SupportedAudioFormats" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedAudioFormats As ReadOnlyCollection(Of SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::AudioFormat::SpeechAudioFormatInfo ^&gt; ^ SupportedAudioFormats { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::AudioFormat::SpeechAudioFormatInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.AudioFormat.SpeechAudioFormatInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ad88-138">Pobiera kolekcję formatów audio, które obsługuje głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-138">Gets the collection of audio formats that the voice supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ad88-139">Zwraca kolekcję formatów audio, które obsługuje głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ad88-139">Returns a collection of the audio formats that the voice supports.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Docs>
    </Member>
  </Members>
</Type>