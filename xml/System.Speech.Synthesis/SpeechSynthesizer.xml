<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4329c11770d18ef355913e673d7aab098f71b2dc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30579913" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="a3712-101">Zapewnia dostęp do funkcji aparatu syntezy zainstalowanych mowy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a3712-101">Provides access to the functionality of an installed speech synthesis engine.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-102">Podczas tworzenia nowego <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu, używa głos systemu domyślny.</span><span class="sxs-lookup"><span data-stu-id="a3712-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="a3712-103">Aby skonfigurować <xref:System.Speech.Synthesis.SpeechSynthesizer> użycia jednej z zainstalowanych mowy głosy syntezie (tekst na mowę), użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="a3712-104">Aby uzyskać informacje o tym, które głosy są zainstalowane, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> — metoda i <xref:System.Speech.Synthesis.VoiceInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="a3712-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="a3712-105">Ta klasa udostępnia także kontrolować następujące aspekty syntezy mowy:</span><span class="sxs-lookup"><span data-stu-id="a3712-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="a3712-106">Aby skonfigurować dane wyjściowe dla <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektów, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="a3712-107">Aby wygenerować mowy, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="a3712-108"><xref:System.Speech.Synthesis.SpeechSynthesizer> Może utworzyć mowy z pliku tekstowego, <xref:System.Speech.Synthesis.Prompt> lub <xref:System.Speech.Synthesis.PromptBuilder> obiekt, lub z [mowy syntezy Markup Language (SSML) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="a3712-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="a3712-109">Aby wstrzymać lub wznowić syntezy mowy, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> i <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="a3712-110">Aby dodać lub usunąć leksykonów, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> i <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="a3712-111"><xref:System.Speech.Synthesis.SpeechSynthesizer> Można użyć co najmniej jeden leksykonów prowadzące jego wymowy słowa.</span><span class="sxs-lookup"><span data-stu-id="a3712-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="a3712-112">Aby zmodyfikować dostarczania mowie, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> i <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3712-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="a3712-113"><xref:System.Speech.Synthesis.SpeechSynthesizer> Informuje o zdarzeniach po napotkaniu pewnych funkcji w monity: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span><span class="sxs-lookup"><span data-stu-id="a3712-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="a3712-114">Zgłasza zdarzenia, które należy sporządzić raport na początku (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) i końcowych (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) z mowy operacji i po zmianie delikatnego głosu (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span><span class="sxs-lookup"><span data-stu-id="a3712-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3712-115">Wywoływanie zawsze <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="a3712-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="a3712-116">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-117">Poniższy przykład jest częścią aplikacji konsoli, która inicjuje <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu i mówi ciąg.</span><span class="sxs-lookup"><span data-stu-id="a3712-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3712-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-118">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-119">Podczas inicjowania nowy <xref:System.Speech.Synthesis.SpeechSynthesizer> wystąpienia, używa głos systemu domyślny.</span><span class="sxs-lookup"><span data-stu-id="a3712-119">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="a3712-120">Aby skonfigurować <xref:System.Speech.Synthesis.SpeechSynthesizer> użycia jednej z zainstalowanych mowy głosy syntezie (tekst na mowę), użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-120">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="a3712-121">Aby uzyskać informacje o tym, które głosy są zainstalowane, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> — metoda i <xref:System.Speech.Synthesis.VoiceInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="a3712-121">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="a3712-122">Lokalizacja danych słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-122">The location of the lexicon information.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="a3712-123">Typ nośnika leksykonie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-123">The media type of the lexicon.</span>
          </span>
          <span data-ttu-id="a3712-124">Wartości typu nośnika nie jest uwzględniana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-124">Media type values are not case sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-125">Dodaje słownika do <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-125">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-126">Leksykonie wymowy jest kolekcją słów ani fraz wraz z ich wymowy, które składają się z liter i znaków z obsługiwanych alfabet fonetyczny.</span><span class="sxs-lookup"><span data-stu-id="a3712-126">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="a3712-127">Leksykonie służy do określania niestandardowej wymowy specjalistycznego słownictwa w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a3712-127">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="a3712-128">Określone w pliku zewnętrznego słownika wymowy mają pierwszeństwo przed wymowy leksykonie wewnętrzny lub słownik syntezatorów mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-128">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="a3712-129">Jednak wymowy określony wbudowany w monity utworzone za pomocą dowolnego z <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, lub <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> metody mają pierwszeństwo przed wymowy określone w dowolnym leksykonie.</span><span class="sxs-lookup"><span data-stu-id="a3712-129">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="a3712-130">Wbudowany wymowy mają zastosowanie tylko do pojedynczego wystąpienia wyrazu.</span><span class="sxs-lookup"><span data-stu-id="a3712-130">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="a3712-131">Zobacz [leksykonów i małych liter fonetyczny](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) Aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="a3712-131">See [Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) for more information.</span></span>  
  
 <span data-ttu-id="a3712-132">Można dodać wiele leksykonów do <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu. Dwie wartości są obecnie obsługiwane dla `mediaType` parametru:</span><span class="sxs-lookup"><span data-stu-id="a3712-132">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="a3712-133">Wartość `application/pls+xml` wskazuje, że odpowiada leksykonie [wymowy leksykonie specyfikacji (PLS) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span><span class="sxs-lookup"><span data-stu-id="a3712-133">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="a3712-134">Jest to preferowany formatu do użycia.</span><span class="sxs-lookup"><span data-stu-id="a3712-134">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="a3712-135">Wartość `application/vdn.ms-sapi-lex` oznacza, że format leksykonie nieskompresowanych słownika, czyli formatu Microsoft zastrzeżonych.</span><span class="sxs-lookup"><span data-stu-id="a3712-135">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="a3712-136">Jest to starszy format i zalecane jest użycie formatu PLS opisane powyżej.</span><span class="sxs-lookup"><span data-stu-id="a3712-136">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-137">Poniższy przykład ilustruje efekt Dodawanie i usuwanie słownika, zawierający niestandardowe wymowy dla słowa "blue".</span><span class="sxs-lookup"><span data-stu-id="a3712-137">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="a3712-138">Leksykonie definiuje Wymowa "blue", aby brzmiał jak "bleep".</span><span class="sxs-lookup"><span data-stu-id="a3712-138">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="a3712-139">Podczas leksykonie syntezatorów mowy używa wymowy zdefiniowane w leksykonie.</span><span class="sxs-lookup"><span data-stu-id="a3712-139">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="a3712-140">Zawartość pliku leksykonie Blue.pls są następujące:</span><span class="sxs-lookup"><span data-stu-id="a3712-140">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-141">Wywoływane, gdy <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> napotka zakładki w wierszu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-141">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-142"><xref:System.Speech.Synthesis.SpeechSynthesizer> Zgłasza tego zdarzenia podczas przetwarzania wszystkich <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-142">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="a3712-143">Aby uzyskać informacje o dane skojarzone ze zdarzeniem, zobacz <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a3712-143">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="a3712-144">Można dodać zakładki przy użyciu <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-144">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-145">Poniższy przykład tworzy wiersz zawiera dwa zakładek i wysyła dane wyjściowe do pliku WAV przy odtwarzaniu.</span><span class="sxs-lookup"><span data-stu-id="a3712-145">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="a3712-146">Program obsługi dla <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> zdarzeń zapisuje nazwę zakładki i położenia w strumieniem audio po zdarzeniu został zgłoszony do konsoli.</span><span class="sxs-lookup"><span data-stu-id="a3712-146">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3712-147">Usuwa <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu i zwalnia zasoby używane w podczas sesji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-147">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3712-148">Działa ze względów bezpieczeństwa, aby wyczyścić zasoby w przypadku gdy <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> nie jest wywoływana metoda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-148">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3712-149">Pobiera monit, który <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> jest czytanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-149">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3712-150">Zwraca obiekt monit, który jest aktualnie używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-150">Returns the prompt object that is currently being spoken.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-151">Zwraca kolekcję mowy (tekst na mowę) głosy syntezie, które są aktualnie zainstalowane w systemie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-151">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-152">Gdy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy z głosy (aparaty tekstu na mowę) znalezione w spełnia rejestru pewne minimalne kryteria.</span><span class="sxs-lookup"><span data-stu-id="a3712-152">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="a3712-153">Wszelkie głosu Niepowodzenie weryfikacji <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-153">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="a3712-154">Aplikacji nie można wybrać głosu których <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> jest właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-154">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="a3712-155">Zwykle, aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3712-155">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3712-156">Zwraca wszystkie zainstalowane mowy głosy syntezie (tekst na mowę).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-156">Returns all of the installed speech synthesis (text-to-speech) voices.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3712-157">Zwraca kolekcję tylko do odczytu głosy aktualnie zainstalowane w systemie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-157">Returns a read-only collection of the voices currently installed on the system.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-158">Głos jest aparatem syntezy mowy (tekst na mowę lub TTS), który jest zainstalowany w systemie.</span><span class="sxs-lookup"><span data-stu-id="a3712-158">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-159">Poniższy przykład jest częścią aplikacji konsoli, która inicjuje <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu i dane wyjściowe konsoli listę zainstalowanych głosów (silników syntezy mowy) i przedstawiono informacje, które są dostępne dla każdego głosu.</span><span class="sxs-lookup"><span data-stu-id="a3712-159">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="a3712-160">Ustawienia regionalne muszą obsługiwać głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-160">The locale that the voice must support.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-161">Zwraca wszystkie zainstalowane mowy głosy syntezie (tekst na mowę), które obsługuje określonych ustawień regionalnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-161">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3712-162">Zwraca kolekcję tylko do odczytu głosy aktualnie zainstalowane w systemie, które obsługują określone ustawienia regionalne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-162">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-163">Jeśli żaden z zainstalowanych głosów obsługi określonych ustawień regionalnych, ta metoda zwraca pustą kolekcję.</span><span class="sxs-lookup"><span data-stu-id="a3712-163">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="a3712-164">Microsoft Windows i interfejsu API System.Speech zaakceptować wszystkie prawidłowe kody języka kraju.</span><span class="sxs-lookup"><span data-stu-id="a3712-164">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="a3712-165">Aby wykonać przy użyciu języka określonego we właściwości kultury tekst na mowę, aparat syntezy mowy, który obsługuje kod kraju języka musi być zainstalowany.</span><span class="sxs-lookup"><span data-stu-id="a3712-165">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="a3712-166">Aparaty syntezy dostarczonych z programem Microsoft Windows 7 pracować z następujących kodów kraju języka:</span><span class="sxs-lookup"><span data-stu-id="a3712-166">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="a3712-167">en-US.</span><span class="sxs-lookup"><span data-stu-id="a3712-167">en-US.</span></span> <span data-ttu-id="a3712-168">Angielski (Stany Zjednoczone)</span><span class="sxs-lookup"><span data-stu-id="a3712-168">English (United States)</span></span>  
  
-   <span data-ttu-id="a3712-169">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="a3712-169">zh-CN.</span></span> <span data-ttu-id="a3712-170">Chiński (Chiny)</span><span class="sxs-lookup"><span data-stu-id="a3712-170">Chinese (China)</span></span>  
  
-   <span data-ttu-id="a3712-171">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="a3712-171">zh-TW.</span></span> <span data-ttu-id="a3712-172">Chiński (Tajwan)</span><span class="sxs-lookup"><span data-stu-id="a3712-172">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="a3712-173">Dozwolone są również kodów dwuliterowych języka na przykład "en".</span><span class="sxs-lookup"><span data-stu-id="a3712-173">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-174">Poniższy przykład jest częścią aplikacji konsoli, która inicjuje <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu i dane wyjściowe konsoli listę zainstalowanych głosów, które obsługują ustawień regionalnych pl pl.</span><span class="sxs-lookup"><span data-stu-id="a3712-174">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locacale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3712-175">Wstrzymuje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-175">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-176">Wywoływane, gdy zostanie osiągnięty phoneme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-176">Raised when a phoneme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-177">Phoneme jest podstawowym składnikiem napisane języka, zwykle litery alfabetu (lub kombinacja dwie litery), która reprezentuje jeden lub więcej dźwięków distinct.</span><span class="sxs-lookup"><span data-stu-id="a3712-177">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="a3712-178">Na przykład litera "c" jest phoneme, który może dźwięk, takich jak "s" w "cinder" lub "k" w "catch".</span><span class="sxs-lookup"><span data-stu-id="a3712-178">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="a3712-179">Word zapisany jest łączenia się podzasobów fonemów.</span><span class="sxs-lookup"><span data-stu-id="a3712-179">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="a3712-180">Zmiany słów phoneme zmieni jego pisowni.</span><span class="sxs-lookup"><span data-stu-id="a3712-180">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="a3712-181">A <xref:System.Speech.Synthesis.SpeechSynthesizer> generuje wystąpienia <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> zdarzenia dla każdej części programu word, który stanowi phoneme.</span><span class="sxs-lookup"><span data-stu-id="a3712-181">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="a3712-182">Na przykład dla słowa "motywu" powoduje wygenerowanie trzy <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> zdarzenia; dla dźwięk "th", jeden dźwięku "e", a drugi dźwięku "m" (me).</span><span class="sxs-lookup"><span data-stu-id="a3712-182">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="a3712-183">Na przykład i informacje o danych skojarzone ze zdarzeniem, zobacz <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a3712-183">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-184">Pobiera lub ustawia współczynnik wymowy <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-184">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3712-185">Zwraca stopę wymowy <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu, od -10 do 10.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-185">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3712-186">Poniższy przykład mówi ciąg ze wskaźnikiem wymowy ustawioną -2.</span><span class="sxs-lookup"><span data-stu-id="a3712-186">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="a3712-187">Lokalizacja dokumentu leksykonie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-187">The location of the lexicon document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-188">Usuwa słownika z <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-188">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-189">Zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> przykład.</span><span class="sxs-lookup"><span data-stu-id="a3712-189">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3712-190">Wznawia <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu po jego wstrzymaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-190">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a3712-191">Nazwa głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-191">The name of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-192">Wybiera określonego głosu według nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-192">Selects a specific voice by name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-193">Użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> — metoda i <xref:System.Speech.Synthesis.VoiceInfo> klasy można uzyskać nazwy zainstalowany głosy tekst na mowę (TTS), które można wybrać.</span><span class="sxs-lookup"><span data-stu-id="a3712-193">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="a3712-194">Aby wybrać głosu, Przekaż całą zawartość <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> właściwość jako argument dla <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-194">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="a3712-195"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiektu wybiera pierwszy zainstalowany głos zawierający `name` przy użyciu głosu <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3712-195">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a3712-196"><xref:System.Speech.Synthesis.SpeechSynthesizer> Wykonuje z uwzględnieniem wielkości liter, porównanie podciąg do określenia, czy głos zgodne `name`.</span><span class="sxs-lookup"><span data-stu-id="a3712-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="a3712-197">Gdy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosy znajdzie się w rejestrze spełnia określone kryteria minimalne.</span><span class="sxs-lookup"><span data-stu-id="a3712-197">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="a3712-198">Wszelkie głosu Niepowodzenie weryfikacji <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-198">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="a3712-199">Aplikacji nie można wybrać głosu których <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> jest właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-199">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="a3712-200">Zwykle, aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3712-200">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="a3712-201">Aby wybrać głosu według płci, wieku lub ustawień regionalnych, użyj jednej z <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-201">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-202">Wybiera głosu o określonej charakterystyce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-202">Selects a voice with specific characteristics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-203">Użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> — metoda i <xref:System.Speech.Synthesis.VoiceInfo> klasy można uzyskać nazwy zainstalowany głosy tekst na mowę (TTS), które można wybrać.</span><span class="sxs-lookup"><span data-stu-id="a3712-203">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="a3712-204"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiektu wybiera pierwszy zainstalowany głos odpowiadający określonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3712-204">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="a3712-205">Gdy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosy znajdzie się w rejestrze spełnia określone kryteria minimalne.</span><span class="sxs-lookup"><span data-stu-id="a3712-205">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="a3712-206">Wszelkie głosu Niepowodzenie weryfikacji <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-206">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="a3712-207">Aplikacji nie można wybrać głosu których <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> jest właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-207">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="a3712-208">Zwykle, aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3712-208">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="a3712-209">Aby wybrać głosu według nazwy, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> — metoda</span><span class="sxs-lookup"><span data-stu-id="a3712-209">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="a3712-210">Płeć głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-210">The gender of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-211">Wybiera głosu z określonych płci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-211">Selects a voice with a specific gender.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-212">Użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> — metoda i <xref:System.Speech.Synthesis.VoiceInfo> klasy można uzyskać nazwy zainstalowany głosy tekst na mowę (TTS), które można wybrać.</span><span class="sxs-lookup"><span data-stu-id="a3712-212">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="a3712-213"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiektu wybiera pierwszy zainstalowany głosu których <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> dopasowania właściwości `gender` parametru.</span><span class="sxs-lookup"><span data-stu-id="a3712-213">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="a3712-214">Gdy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosy znajdzie się w rejestrze spełnia określone kryteria minimalne.</span><span class="sxs-lookup"><span data-stu-id="a3712-214">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="a3712-215">Wszelkie głosu Niepowodzenie weryfikacji <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-215">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="a3712-216">Aplikacji nie można wybrać głosu których <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> jest właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-216">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="a3712-217">Zwykle, aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3712-217">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="a3712-218">Aby wybrać na podstawie innych charakterystyk głosu, zobacz drugi <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-218">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="a3712-219">Aby wybrać głosu według nazwy, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-219">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="a3712-220">Płeć głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-220">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="a3712-221">Wiek głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-221">The age of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-222">Wybiera głosu z określonych płci i wiek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-222">Selects a voice with a specific gender and age.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-223">Użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> — metoda i <xref:System.Speech.Synthesis.VoiceInfo> klasy można uzyskać nazwy zainstalowany głosy tekst na mowę (TTS), które można wybrać.</span><span class="sxs-lookup"><span data-stu-id="a3712-223">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="a3712-224"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiektu wybiera pierwszy zainstalowany głosu których <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> i <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> dopasowania właściwości `gender` i `age` parametrów.</span><span class="sxs-lookup"><span data-stu-id="a3712-224">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="a3712-225">Gdy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosy znajdzie się w rejestrze spełnia określone kryteria minimalne.</span><span class="sxs-lookup"><span data-stu-id="a3712-225">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="a3712-226">Wszelkie głosu Niepowodzenie weryfikacji <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-226">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="a3712-227">Aplikacji nie można wybrać głosu których <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> jest właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-227">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="a3712-228">Zwykle, aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3712-228">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="a3712-229">Aby wybrać na podstawie innych charakterystyk głosu, zobacz drugi <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-229">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="a3712-230">Aby wybrać głosu według nazwy, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-230">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="a3712-231">Płeć głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-231">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="a3712-232">Wiek głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-232">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="a3712-233">Pozycja głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-233">The position of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-234">Wybiera głosu z określonych płci i wiek, na podstawie położenia, w którym głosy są uporządkowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-234">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-235">Użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> — metoda i <xref:System.Speech.Synthesis.VoiceInfo> klasy można uzyskać nazwy zainstalowany głosy tekst na mowę (TTS), które można wybrać.</span><span class="sxs-lookup"><span data-stu-id="a3712-235">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="a3712-236"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiekt voices wyszukuje zainstalowane, którego <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> i <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> dopasowania właściwości `gender` i `age` parametrów.</span><span class="sxs-lookup"><span data-stu-id="a3712-236">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="a3712-237"><xref:System.Speech.Synthesis.SpeechSynthesizer> Liczby dopasowań wyszukuje i zwraca głosu, gdy liczba jest równa `voiceAlternate` parametru.</span><span class="sxs-lookup"><span data-stu-id="a3712-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="a3712-238">Gdy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosy znajdzie się w rejestrze spełnia określone kryteria minimalne.</span><span class="sxs-lookup"><span data-stu-id="a3712-238">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="a3712-239">Wszelkie głosu Niepowodzenie weryfikacji <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-239">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="a3712-240">Aplikacji nie można wybrać głosu których <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> jest właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-240">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="a3712-241">Zwykle, aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3712-241">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="a3712-242">Aby wybrać na podstawie innych charakterystyk głosu, zobacz drugi <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="a3712-242">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="a3712-243">Aby wybrać głosu według nazwy, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-243">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="a3712-244">Płeć głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-244">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="a3712-245">Wiek głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-245">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="a3712-246">Pozycja głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-246">The position of the voice to select.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="a3712-247">Ustawienia regionalne głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-247">The locale of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-248">Wybiera głosu określonych płci, wieku i ustawień regionalnych, na podstawie położenia, w którym głosy są uporządkowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-248">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-249"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiektu znajduje voices, którego <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, i <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> dopasowania właściwości `gender`, `age`, i `culture` parametrów.</span><span class="sxs-lookup"><span data-stu-id="a3712-249">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="a3712-250"><xref:System.Speech.Synthesis.SpeechSynthesizer> Liczby dopasowań wyszukuje i zwraca głosu, gdy liczba jest równa `voiceAlternate` parametru.</span><span class="sxs-lookup"><span data-stu-id="a3712-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="a3712-251">Microsoft Windows i interfejsu API System.Speech zaakceptować wszystkie prawidłowe kody języka kraju.</span><span class="sxs-lookup"><span data-stu-id="a3712-251">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="a3712-252">Aby wykonać tekst na mowę, przy użyciu języka określonego w `culture` parametr, aparat syntezy mowy, który obsługuje kod kraju język musi być zainstalowany.</span><span class="sxs-lookup"><span data-stu-id="a3712-252">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="a3712-253">Aparaty syntezy dostarczonych z programem Microsoft Windows 7 pracować z następujących kodów kraju języka:</span><span class="sxs-lookup"><span data-stu-id="a3712-253">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="a3712-254">en-US.</span><span class="sxs-lookup"><span data-stu-id="a3712-254">en-US.</span></span> <span data-ttu-id="a3712-255">Angielski (Stany Zjednoczone)</span><span class="sxs-lookup"><span data-stu-id="a3712-255">English (United States)</span></span>  
  
-   <span data-ttu-id="a3712-256">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="a3712-256">zh-CN.</span></span> <span data-ttu-id="a3712-257">Chiński (Chiny)</span><span class="sxs-lookup"><span data-stu-id="a3712-257">Chinese (China)</span></span>  
  
-   <span data-ttu-id="a3712-258">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="a3712-258">zh-TW.</span></span> <span data-ttu-id="a3712-259">Chiński (Tajwan)</span><span class="sxs-lookup"><span data-stu-id="a3712-259">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="a3712-260">Dozwolone są również kodów dwuliterowych języka na przykład "en".</span><span class="sxs-lookup"><span data-stu-id="a3712-260">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="a3712-261">Gdy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosy znajdzie się w rejestrze spełnia określone kryteria minimalne.</span><span class="sxs-lookup"><span data-stu-id="a3712-261">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="a3712-262">Wszelkie głosu Niepowodzenie weryfikacji <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-262">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="a3712-263">Aplikacji nie można wybrać głosu których <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> jest właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="a3712-263">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="a3712-264">Zwykle, aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3712-264">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="a3712-265">Aby wybrać na podstawie innych charakterystyk głosu, zobacz drugi <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="a3712-265">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="a3712-266">Aby wybrać głosu według nazwy, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-266">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="a3712-267">Strumień, do którego jest dołączany syntezy danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-267">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="a3712-268">Format danych wyjściowych syntezy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-268">The format to use for the synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-269">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt można dołączyć dane wyjściowe do strumienia audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-269">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-270">Wywołanie <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> zwolnienia <xref:System.Speech.Synthesis.SpeechSynthesizer>przez odwołanie do strumienia.</span><span class="sxs-lookup"><span data-stu-id="a3712-270">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the stream.</span></span>  
  
 <span data-ttu-id="a3712-271">Dla opcji konfiguracji, zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-271">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3712-272">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt do wysyłania danych wyjściowych do domyślnego urządzenia audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-272">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-273">Można użyć **dźwięk** okna w systemie Windows **Panelu sterowania** do konfigurowania domyślnego urządzenia audio dla komputera.</span><span class="sxs-lookup"><span data-stu-id="a3712-273">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="a3712-274">Dla opcji konfiguracji, zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-274">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-275">W poniższym przykładzie użyto Syntezator porozmawiać frazę do domyślnego wyjścia audio.</span><span class="sxs-lookup"><span data-stu-id="a3712-275">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3712-276">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt, aby nie wysyłał danych wyjściowych z operacji syntezy do urządzenia, pliku lub strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-276">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-277">Ta metoda służy do wersji <xref:System.Speech.Synthesis.SpeechSynthesizer> przez odwołanie do pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="a3712-277">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer> ‘s reference to a file or stream.</span></span> <span data-ttu-id="a3712-278">Zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> przykład.</span><span class="sxs-lookup"><span data-stu-id="a3712-278">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="a3712-279">Dla opcji konfiguracji, zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-279">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-280">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt, aby dołączyć dane wyjściowe do pliku fali audio format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-280">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-281">Aby zwolnić <xref:System.Speech.Synthesis.SpeechSynthesizer>przez odwołanie do pliku, należy ponownie skonfigurować <xref:System.Speech.Synthesis.SpeechSynthesizer>danych wyjściowych, na przykład wywołując <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3712-281">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="a3712-282">Dla opcji konfiguracji, zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-282">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a3712-283">Ścieżka do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-283">The path to the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-284">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt, aby dołączyć dane wyjściowe do pliku, który zawiera fali format audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-284">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-285">Aby skonfigurować dane wyjściowe oraz określić audio format, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-285">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-286">W poniższym przykładzie użyto wystąpienia <xref:System.Media.SoundPlayer> do wiersza, który został dane wyjściowe do pliku wav odtwarzania.</span><span class="sxs-lookup"><span data-stu-id="a3712-286">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="a3712-287">Ponieważ <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> wywołanie jest asynchroniczne, <xref:System.Media.SoundPlayer> jest tworzone wystąpienie (i <xref:System.Media.SoundPlayer.Play%2A> metoda wywoływana) dla programu obsługi <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a3712-287">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a3712-288">Ścieżka do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-288">The path to the file.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="a3712-289">Informacje audio format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-289">The audio format information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-290">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt, aby dołączyć dane wyjściowe do pliku fali audio format w określonym formacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-290">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3712-291">Poniższy przykład określa format danych wyjściowych syntezy mowy i wysyła je do pliku WAV.</span><span class="sxs-lookup"><span data-stu-id="a3712-291">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="a3712-292">Strumień, do którego jest dołączany syntezy danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-292">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-293">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt, aby dołączyć dane wyjściowe do strumienia, który zawiera fali format audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-293">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-294">Aby zwolnić <xref:System.Speech.Synthesis.SpeechSynthesizer>przez odwołanie w strumieniu ponownej konfiguracji Syntezator danych wyjściowych, na przykład wywołując <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3712-294">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="a3712-295">Dla opcji konfiguracji, zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-295">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-296">Poniższy przykład danych wyjściowych frazę do strumienia WAV.</span><span class="sxs-lookup"><span data-stu-id="a3712-296">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream stream = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        MemoryStream streamAudio = new MemoryStream();  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-297">Generuje mowie synchronicznie z ciągu, <see cref="T:System.Speech.Synthesis.Prompt" /> obiekt, lub <see cref="T:System.Speech.Synthesis.PromptBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-297">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-298"><xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> Metody generują mowy synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="a3712-298">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="a3712-299">Dopóki zawartość nie mają metod <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> całkowicie wymawiany instancji.</span><span class="sxs-lookup"><span data-stu-id="a3712-299">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="a3712-300">Jest to najprostszy sposób generowania mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-300">This is the simplest way to generate speech.</span></span> <span data-ttu-id="a3712-301">Jednak jeśli aplikacja wymaga do wykonywania zadań podczas trwania mowy, na przykład wyróżnianie tekstu, paint animacji, formanty monitora lub innych zadań, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metody lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> do generowania mowy asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="a3712-301">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="a3712-302">Podczas wywoływania tej metody <xref:System.Speech.Synthesis.SpeechSynthesizer> może wiązać się z następujących zdarzeń:</span><span class="sxs-lookup"><span data-stu-id="a3712-302">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="a3712-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="a3712-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="a3712-304">Uruchamiany po zmianie stanu syntezatora mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-304">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="a3712-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="a3712-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="a3712-306">Wywoływane, gdy rozpoczyna syntezatora mowy generowania.</span><span class="sxs-lookup"><span data-stu-id="a3712-306">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="a3712-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="a3712-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="a3712-308">Wywoływane zawsze, gdy osiągnie Syntezator literą lub kombinacją liter stanowią niejawnego dźwięk mowy w języku.</span><span class="sxs-lookup"><span data-stu-id="a3712-308">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="a3712-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="a3712-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="a3712-310">Podnoszony, zawsze Syntezator kończy się mówiąc wyrazu.</span><span class="sxs-lookup"><span data-stu-id="a3712-310">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="a3712-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="a3712-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="a3712-312">Wywoływane każdorazowo rozmowy dane wyjściowe wymaga zmiany w położeniu ujścia lub mięśni twarzy użyta do wyprodukowania mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-312">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="a3712-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="a3712-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="a3712-314">Wywoływane, gdy praca syntezatora napotka zakładki w wierszu.</span><span class="sxs-lookup"><span data-stu-id="a3712-314">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="a3712-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="a3712-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="a3712-316">Wywoływane, gdy zmienia się delikatnego głosu dla Syntezator.</span><span class="sxs-lookup"><span data-stu-id="a3712-316">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="a3712-317"><xref:System.Speech.Synthesis.SpeechSynthesizer> Nie zgłaszał <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzenia podczas przetwarzania wszystkich <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-317">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="a3712-318">Zawartość do mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-318">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-319">Synchronicznie mówi zawartość <see cref="T:System.Speech.Synthesis.Prompt" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-319">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-320">Asynchronicznie porozmawiać zawartość <xref:System.Speech.Synthesis.Prompt> obiektów, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3712-320">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-321">Poniższy przykład tworzy <xref:System.Speech.Synthesis.Prompt> obiekt z ciągu i przekazuje obiekt jako argument <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-321">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="a3712-322">Zawartość do mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-322">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-323">Synchronicznie mówi zawartość <see cref="T:System.Speech.Synthesis.PromptBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-323">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-324">Asynchronicznie porozmawiać zawartość <xref:System.Speech.Synthesis.PromptBuilder> obiektów, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3712-324">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-325">Poniższy przykład tworzy <xref:System.Speech.Synthesis.PromptBuilder> obiekt z ciągu i przekazuje obiekt jako argument <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-325">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="a3712-326">Tekst, który mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-326">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-327">Synchronicznie mówi zawartość ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-327">Synchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-328">Aby synchronicznie mowy ciąg, który zawiera SSML znaczników, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-328">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="a3712-329">Asynchronicznie porozmawiać zawartość ciągu, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-329">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-330">Jak pokazano w poniższym przykładzie <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metoda zapewnia najprostszy sposób generowania danych wyjściowych synchronicznie mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-330">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-331">Asynchronicznie generuje mowie z ciągu, <see cref="T:System.Speech.Synthesis.Prompt" /> obiekt, lub <see cref="T:System.Speech.Synthesis.PromptBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-331">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-332"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> Metody generują mowy asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="a3712-332">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="a3712-333">Metody zwrócić się natychmiast bez oczekiwania na zawartość <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> obiekt, aby zakończyć, mówiąc.</span><span class="sxs-lookup"><span data-stu-id="a3712-333">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="a3712-334">Użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> Jeśli aplikacja wymaga wykonywać zadania podczas trwania mowy, zaznacz tekst, na przykład, malowanie animacji, formanty monitora lub innych zadań.</span><span class="sxs-lookup"><span data-stu-id="a3712-334">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="a3712-335">Podczas wywoływania tej metody <xref:System.Speech.Synthesis.SpeechSynthesizer> może wiązać się z następujących zdarzeń:</span><span class="sxs-lookup"><span data-stu-id="a3712-335">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="a3712-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="a3712-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="a3712-337">Uruchamiany po zmianie stanu syntezatora mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-337">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="a3712-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="a3712-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="a3712-339">Wywoływane, gdy rozpoczyna syntezatora mowy generowania.</span><span class="sxs-lookup"><span data-stu-id="a3712-339">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="a3712-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="a3712-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="a3712-341">Wywoływane zawsze, gdy osiągnie Syntezator literą lub kombinacją liter stanowią niejawnego dźwięk mowy w języku.</span><span class="sxs-lookup"><span data-stu-id="a3712-341">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="a3712-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="a3712-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="a3712-343">Podnoszony, zawsze Syntezator kończy się mówiąc wyrazu.</span><span class="sxs-lookup"><span data-stu-id="a3712-343">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="a3712-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="a3712-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="a3712-345">Wywoływane każdorazowo rozmowy dane wyjściowe wymaga zmiany w położeniu ujścia lub mięśni twarzy użyta do wyprodukowania mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-345">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="a3712-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="a3712-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="a3712-347">Wywoływane, gdy praca syntezatora napotka zakładki w wierszu.</span><span class="sxs-lookup"><span data-stu-id="a3712-347">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="a3712-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="a3712-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="a3712-349">Wywoływane, gdy zmienia się delikatnego głosu dla Syntezator.</span><span class="sxs-lookup"><span data-stu-id="a3712-349">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="a3712-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="a3712-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="a3712-351">Wywoływane, gdy praca syntezatora zakończy <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operacji.</span><span class="sxs-lookup"><span data-stu-id="a3712-351">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="a3712-352">Jeśli aplikacja nie trzeba wykonywać zadań podczas trwania mowy, możesz użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metody lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> do generowania mowy synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="a3712-352">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="a3712-353">Zawartość do mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-353">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-354">Asynchronicznie mówi zawartość <see cref="T:System.Speech.Synthesis.Prompt" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-354">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-355">Możesz anulować asynchroniczne mówiąc monitu o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-355">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="a3712-356">Synchronicznie porozmawiać zawartość <xref:System.Speech.Synthesis.Prompt> obiektów, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3712-356">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-357">Poniższy przykład tworzy <xref:System.Speech.Synthesis.Prompt> obiekt z ciągu i przekazuje obiekt jako argument <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-357">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="a3712-358">Zawartość do mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-358">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-359">Asynchronicznie mówi zawartość <see cref="T:System.Speech.Synthesis.PromptBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-359">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3712-360">Zwraca obiekt, który zawiera zawartość do mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-360">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-361">Synchronicznie porozmawiać zawartość <xref:System.Speech.Synthesis.PromptBuilder> obiektów, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3712-361">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-362">Poniższy przykład tworzy <xref:System.Speech.Synthesis.PromptBuilder> obiekt z ciągu i przekazuje obiekt jako argument <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-362">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="a3712-363">Tekst, który mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-363">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-364">Asynchronicznie mówi zawartość ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-364">Asynchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3712-365">Zwraca obiekt, który zawiera zawartość do mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-365">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-366">Asynchronicznie porozmawiać ciąg, który zawiera SSML znaczników, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-366">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="a3712-367">Synchronicznie porozmawiać zawartość ciągu, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-367">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="a3712-368">Możesz anulować asynchroniczne mówiąc monitu o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-368">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-369">Jak pokazano w poniższym przykładzie <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metoda zapewnia najprostszy sposób generowania danych wyjściowych asynchronicznie mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-369">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="a3712-370">Zawartość, do których chcesz anulować operację speak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-370">The content for which to cancel a speak operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-371">Anuluje operację asynchroniczną syntezy dla wiersza w kolejce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-371">Cancels the asynchronous synthesis operation for a queued prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-372">Ta metoda również służy do anulowania asynchronicznego mowy operacji dla następujących:</span><span class="sxs-lookup"><span data-stu-id="a3712-372">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="a3712-373">Zawartość <xref:System.String> określonego przez <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-373">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="a3712-374">Zawartość <xref:System.Speech.Synthesis.PromptBuilder> określonego przez <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-374">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="a3712-375">Zawartość <xref:System.String> zawierających określony przez SSML <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-375">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="a3712-376">Podczas wywoływania <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, tworzy System.Speech <xref:System.Speech.Synthesis.Prompt> obiektu i wypełnia zawartość parametru metody i zwraca <xref:System.Speech.Synthesis.Prompt> obiektu.</span><span class="sxs-lookup"><span data-stu-id="a3712-376">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="a3712-377">Aby zachować kopię zwróconego <xref:System.Speech.Synthesis.Prompt>, można przekazać go do <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> anulować wymowy zawartości określonych w <xref:System.String> lub <xref:System.Speech.Synthesis.PromptBuilder> obiektu.</span><span class="sxs-lookup"><span data-stu-id="a3712-377">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3712-378">Umożliwia anulowanie operacji syntezy wszystkich umieszczonych w kolejce, asynchroniczny, mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-378">Cancels all queued, asynchronous, speech synthesis operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3712-379">Poniższy przykład Pokaż korzystanie z <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> anulować asynchroniczne mówiąc wiersza, tak, aby może być wymawiane nowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a3712-379">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="a3712-380">Należy pamiętać, że <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> Zdarzenie uruchamiane w przypadku <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operacja została anulowana.</span><span class="sxs-lookup"><span data-stu-id="a3712-380">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-381">Wywoływane, gdy <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> zakończeniu mówiąc monit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-381">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-382"><xref:System.Speech.Synthesis.SpeechSynthesizer> Zgłasza <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzeń po zakończeniu tych <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-382">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="a3712-383"><xref:System.Speech.Synthesis.SpeakCompletedEventArgs> Klasa nie ma właściwości i zwraca dane z <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a3712-383">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="a3712-384">Umożliwia autorom aplikacji do obsługi zdarzeń dla zapisu jest podana <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a3712-384">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-385">Zgłoszono po <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> mówi każdego pojedynczego wyrazu monit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-385">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-386"><xref:System.Speech.Synthesis.SpeechSynthesizer> Zgłasza to zdarzenie dla każdego nowego wyrazu, który obsługuje monit przy użyciu dowolnego <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-386">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="a3712-387">Na przykład i więcej informacji na temat dane skojarzone ze zdarzeniem, zobacz <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a3712-387">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="a3712-388">Ciąg SSML mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-388">The SSML string to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-389">Synchronicznie mówi <see cref="T:System.String" /> zawierający znaczników SSML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-389">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-390">Zawartość `textToSpeak` musi zawierać parametr `speak` element i musi być zgodna z [mowy syntezy Markup Language (SSML) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="a3712-390">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="a3712-391">Aby uzyskać więcej informacji, zobacz [mowy syntezy Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="a3712-391">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="a3712-392">Asynchronicznie porozmawiać ciąg, który zawiera SSML znaczników, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-392">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="a3712-393">Można użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> zainicjować synchroniczne mówiąc ciągu, który nie zawiera znacznika SSML.</span><span class="sxs-lookup"><span data-stu-id="a3712-393">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="a3712-394">Podczas wywoływania tej metody <xref:System.Speech.Synthesis.SpeechSynthesizer> może wiązać się z następujących zdarzeń:</span><span class="sxs-lookup"><span data-stu-id="a3712-394">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="a3712-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="a3712-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="a3712-396">Uruchamiany po zmianie stanu syntezatora mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-396">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="a3712-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="a3712-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="a3712-398">Wywoływane, gdy rozpoczyna syntezatora mowy generowania.</span><span class="sxs-lookup"><span data-stu-id="a3712-398">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="a3712-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="a3712-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="a3712-400">Wywoływane zawsze, gdy osiągnie Syntezator literą lub kombinacją liter stanowią niejawnego dźwięk mowy w języku.</span><span class="sxs-lookup"><span data-stu-id="a3712-400">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="a3712-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="a3712-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="a3712-402">Podnoszony, zawsze Syntezator kończy się mówiąc wyrazu.</span><span class="sxs-lookup"><span data-stu-id="a3712-402">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="a3712-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="a3712-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="a3712-404">Wywoływane każdorazowo rozmowy dane wyjściowe wymaga zmiany w położeniu ujścia lub mięśni twarzy użyta do wyprodukowania mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-404">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="a3712-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="a3712-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="a3712-406">Wywoływane, gdy praca syntezatora napotka zakładki w wierszu.</span><span class="sxs-lookup"><span data-stu-id="a3712-406">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="a3712-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="a3712-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="a3712-408">Wywoływane, gdy zmienia się delikatnego głosu dla Syntezator.</span><span class="sxs-lookup"><span data-stu-id="a3712-408">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="a3712-409"><xref:System.Speech.Synthesis.SpeechSynthesizer> Nie zgłaszał <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzenia podczas przetwarzania <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-409">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-410">Poniższy przykład powoduje daty 1/29/2009 jako data, miesiąc, dzień, kolejności roku.</span><span class="sxs-lookup"><span data-stu-id="a3712-410">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="a3712-411">Kod znaczników SMML mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-411">The SMML markup to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3712-412">Asynchronicznie mówi <see cref="T:System.String" /> zawierający znaczników SSML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-412">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-413">Zawartość `textToSpeak` musi zawierać parametr `speak` element i musi być zgodna z [mowy syntezy Markup Language (SSML) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="a3712-413">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="a3712-414">Aby uzyskać więcej informacji, zobacz [mowy syntezy Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="a3712-414">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="a3712-415">Aby synchronicznie mowy ciąg, który zawiera SSML znaczników, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-415">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="a3712-416">Można użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> zainicjować asynchronicznego mówiąc ciągu, który nie zawiera znacznika SSML.</span><span class="sxs-lookup"><span data-stu-id="a3712-416">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="a3712-417">Podczas wywoływania tej metody <xref:System.Speech.Synthesis.SpeechSynthesizer> może wiązać się z następujących zdarzeń:</span><span class="sxs-lookup"><span data-stu-id="a3712-417">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="a3712-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="a3712-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="a3712-419">Uruchamiany po zmianie stanu syntezatora mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-419">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="a3712-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="a3712-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="a3712-421">Wywoływane, gdy rozpoczyna syntezatora mowy generowania.</span><span class="sxs-lookup"><span data-stu-id="a3712-421">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="a3712-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="a3712-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="a3712-423">Wywoływane zawsze, gdy osiągnie Syntezator literą lub kombinacją liter stanowią niejawnego dźwięk mowy w języku.</span><span class="sxs-lookup"><span data-stu-id="a3712-423">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="a3712-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="a3712-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="a3712-425">Podnoszony, zawsze Syntezator kończy się mówiąc wyrazu.</span><span class="sxs-lookup"><span data-stu-id="a3712-425">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="a3712-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="a3712-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="a3712-427">Wywoływane każdorazowo rozmowy dane wyjściowe wymaga zmiany w położeniu ujścia lub mięśni twarzy użyta do wyprodukowania mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-427">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="a3712-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="a3712-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="a3712-429">Wywoływane, gdy praca syntezatora napotka zakładki w wierszu.</span><span class="sxs-lookup"><span data-stu-id="a3712-429">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="a3712-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="a3712-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="a3712-431">Wywoływane, gdy zmienia się delikatnego głosu dla Syntezator.</span><span class="sxs-lookup"><span data-stu-id="a3712-431">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="a3712-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="a3712-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="a3712-433">Wywoływane, gdy praca syntezatora zakończy przetwarzanie <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operacji.</span><span class="sxs-lookup"><span data-stu-id="a3712-433">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="a3712-434">Jeśli Twoje dos aplikacji nie trzeba wykonywać zadań podczas trwania mowy, możesz użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> do generowania mowy synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="a3712-434">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-435">Wywoływane, gdy <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> rozpoczyna się mówiąc monit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-435">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-436"><xref:System.Speech.Synthesis.SpeechSynthesizer> Zgłasza tego zdarzenia, kiedy rozpoczyna przetwarzanie monit przy użyciu dowolnego <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-436">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="a3712-437"><xref:System.Speech.Synthesis.SpeakStartedEventArgs> Klasa nie ma właściwości i zwraca dane z <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a3712-437">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="a3712-438">Umożliwia autorom aplikacji do obsługi zdarzeń dla zapisu jest podana <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a3712-438">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-439">Pobiera bieżący stan mówiąc <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-439">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3712-440">Zwraca bieżący stan wymowy <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-440">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-441">Aby uzyskać nowy stan <xref:System.Speech.Synthesis.SpeechSynthesizer> po jego zmian, użyj <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> właściwość <xref:System.Speech.Synthesis.StateChangedEventArgs> klasy.</span><span class="sxs-lookup"><span data-stu-id="a3712-441">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-442">Poniższy przykład przedstawia stan <xref:System.Speech.Synthesis.SpeechSynthesizer> przed, podczas i po mówiąc monit.</span><span class="sxs-lookup"><span data-stu-id="a3712-442">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-443">Wywoływane, gdy stan <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> zmiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-443">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-444"><xref:System.Speech.Synthesis.SpeechSynthesizer> Zgłasza to zdarzenie po jego mówiąc <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> zmiany.</span><span class="sxs-lookup"><span data-stu-id="a3712-444">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="a3712-445">Na przykład i więcej informacji na temat dane skojarzone ze zdarzeniem, zobacz <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a3712-445">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="a3712-446">Aby wstrzymać lub wznowić syntezy mowy, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> i <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-446">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-447">Wywoływane, gdy zostanie osiągnięty viseme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-447">Raised when a viseme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-448">Viseme to podstawowe pozycja ujścia i twarzy przy wymawianiu phoneme.</span><span class="sxs-lookup"><span data-stu-id="a3712-448">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="a3712-449">Visemes to wizualne reprezentacje fonemów.</span><span class="sxs-lookup"><span data-stu-id="a3712-449">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="a3712-450">System.Speech obsługuje 21 visemes US English, z których każdy odpowiada fonemów jeden lub więcej.</span><span class="sxs-lookup"><span data-stu-id="a3712-450">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="a3712-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> zdarzenia są wywoływane, gdy nowy phoneme, osiągnięto ma inną viseme odpowiedniego niż poprzednie phoneme, osiągnięto.</span><span class="sxs-lookup"><span data-stu-id="a3712-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="a3712-452">Ponieważ niektóre visemes stanowią więcej niż jeden phoneme <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> zdarzeń nie jest generowany, jeśli dalej phoneme, osiągnięto odnosi się do tej samej viseme jako phoneme poprzedniej.</span><span class="sxs-lookup"><span data-stu-id="a3712-452">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="a3712-453">Na przykład w przypadku rozmowy wyrazy "tej strefy" <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> zdarzenia "s" w "to" i "z" w "w strefie".</span><span class="sxs-lookup"><span data-stu-id="a3712-453">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="a3712-454">Jednak <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> zdarzenie nie jest wywoływane dla "z" w "strefy", ponieważ odnosi się do tej samej viseme jako "s" w "this".</span><span class="sxs-lookup"><span data-stu-id="a3712-454">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="a3712-455">Poniżej znajduje się lista 21 fonemów SAPI i phoneme grup, które odpowiadają viseme w US English.</span><span class="sxs-lookup"><span data-stu-id="a3712-455">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="a3712-456">Viseme</span><span class="sxs-lookup"><span data-stu-id="a3712-456">Viseme</span></span>|<span data-ttu-id="a3712-457">Phoneme(s)</span><span class="sxs-lookup"><span data-stu-id="a3712-457">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="a3712-458">0</span><span class="sxs-lookup"><span data-stu-id="a3712-458">0</span></span>|<span data-ttu-id="a3712-459">cisza</span><span class="sxs-lookup"><span data-stu-id="a3712-459">silence</span></span>|  
|<span data-ttu-id="a3712-460">1</span><span class="sxs-lookup"><span data-stu-id="a3712-460">1</span></span>|<span data-ttu-id="a3712-461">AE, ax, ah</span><span class="sxs-lookup"><span data-stu-id="a3712-461">ae, ax, ah</span></span>|  
|<span data-ttu-id="a3712-462">2</span><span class="sxs-lookup"><span data-stu-id="a3712-462">2</span></span>|<span data-ttu-id="a3712-463">aa</span><span class="sxs-lookup"><span data-stu-id="a3712-463">aa</span></span>|  
|<span data-ttu-id="a3712-464">3</span><span class="sxs-lookup"><span data-stu-id="a3712-464">3</span></span>|<span data-ttu-id="a3712-465">ao</span><span class="sxs-lookup"><span data-stu-id="a3712-465">ao</span></span>|  
|<span data-ttu-id="a3712-466">4</span><span class="sxs-lookup"><span data-stu-id="a3712-466">4</span></span>|<span data-ttu-id="a3712-467">EY, eh, Niestety</span><span class="sxs-lookup"><span data-stu-id="a3712-467">ey, eh, uh</span></span>|  
|<span data-ttu-id="a3712-468">5</span><span class="sxs-lookup"><span data-stu-id="a3712-468">5</span></span>|<span data-ttu-id="a3712-469">Era</span><span class="sxs-lookup"><span data-stu-id="a3712-469">er</span></span>|  
|<span data-ttu-id="a3712-470">6</span><span class="sxs-lookup"><span data-stu-id="a3712-470">6</span></span>|<span data-ttu-id="a3712-471">y, iy, umożliwiają, popraw</span><span class="sxs-lookup"><span data-stu-id="a3712-471">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="a3712-472">7</span><span class="sxs-lookup"><span data-stu-id="a3712-472">7</span></span>|<span data-ttu-id="a3712-473">w, uw</span><span class="sxs-lookup"><span data-stu-id="a3712-473">w, uw</span></span>|  
|<span data-ttu-id="a3712-474">8</span><span class="sxs-lookup"><span data-stu-id="a3712-474">8</span></span>|<span data-ttu-id="a3712-475">ow</span><span class="sxs-lookup"><span data-stu-id="a3712-475">ow</span></span>|  
|<span data-ttu-id="a3712-476">9</span><span class="sxs-lookup"><span data-stu-id="a3712-476">9</span></span>|<span data-ttu-id="a3712-477">aw</span><span class="sxs-lookup"><span data-stu-id="a3712-477">aw</span></span>|  
|<span data-ttu-id="a3712-478">10</span><span class="sxs-lookup"><span data-stu-id="a3712-478">10</span></span>|<span data-ttu-id="a3712-479">oy</span><span class="sxs-lookup"><span data-stu-id="a3712-479">oy</span></span>|  
|<span data-ttu-id="a3712-480">11</span><span class="sxs-lookup"><span data-stu-id="a3712-480">11</span></span>|<span data-ttu-id="a3712-481">dni</span><span class="sxs-lookup"><span data-stu-id="a3712-481">ay</span></span>|  
|<span data-ttu-id="a3712-482">12</span><span class="sxs-lookup"><span data-stu-id="a3712-482">12</span></span>|<span data-ttu-id="a3712-483">h</span><span class="sxs-lookup"><span data-stu-id="a3712-483">h</span></span>|  
|<span data-ttu-id="a3712-484">13</span><span class="sxs-lookup"><span data-stu-id="a3712-484">13</span></span>|<span data-ttu-id="a3712-485">r</span><span class="sxs-lookup"><span data-stu-id="a3712-485">r</span></span>|  
|<span data-ttu-id="a3712-486">14</span><span class="sxs-lookup"><span data-stu-id="a3712-486">14</span></span>|<span data-ttu-id="a3712-487">l</span><span class="sxs-lookup"><span data-stu-id="a3712-487">l</span></span>|  
|<span data-ttu-id="a3712-488">15</span><span class="sxs-lookup"><span data-stu-id="a3712-488">15</span></span>|<span data-ttu-id="a3712-489">s, z</span><span class="sxs-lookup"><span data-stu-id="a3712-489">s, z</span></span>|  
|<span data-ttu-id="a3712-490">16</span><span class="sxs-lookup"><span data-stu-id="a3712-490">16</span></span>|<span data-ttu-id="a3712-491">sh, ch, jh, zh</span><span class="sxs-lookup"><span data-stu-id="a3712-491">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="a3712-492">17</span><span class="sxs-lookup"><span data-stu-id="a3712-492">17</span></span>|<span data-ttu-id="a3712-493">TH, dh</span><span class="sxs-lookup"><span data-stu-id="a3712-493">th, dh</span></span>|  
|<span data-ttu-id="a3712-494">18</span><span class="sxs-lookup"><span data-stu-id="a3712-494">18</span></span>|<span data-ttu-id="a3712-495">f, v</span><span class="sxs-lookup"><span data-stu-id="a3712-495">f, v</span></span>|  
|<span data-ttu-id="a3712-496">19</span><span class="sxs-lookup"><span data-stu-id="a3712-496">19</span></span>|<span data-ttu-id="a3712-497">d, t, n</span><span class="sxs-lookup"><span data-stu-id="a3712-497">d, t, n</span></span>|  
|<span data-ttu-id="a3712-498">20</span><span class="sxs-lookup"><span data-stu-id="a3712-498">20</span></span>|<span data-ttu-id="a3712-499">k, g, ng</span><span class="sxs-lookup"><span data-stu-id="a3712-499">k, g, ng</span></span>|  
|<span data-ttu-id="a3712-500">21</span><span class="sxs-lookup"><span data-stu-id="a3712-500">21</span></span>|<span data-ttu-id="a3712-501">p, b, m</span><span class="sxs-lookup"><span data-stu-id="a3712-501">p, b, m</span></span>|  
  
 <span data-ttu-id="a3712-502">Informacje o danych skojarzonych z `VisemeReached` zdarzeń, zobacz <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a3712-502">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-503">Pobiera informacje o bieżącym głos <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-503">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3712-504">Zwraca informacje o bieżącym głos <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-504">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-505">Podczas inicjowania nowy <xref:System.Speech.Synthesis.SpeechSynthesizer>, używa głos systemu domyślny.</span><span class="sxs-lookup"><span data-stu-id="a3712-505">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="a3712-506">Aby skonfigurować <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektów, użyj jednej z głosy syntezie mowy zainstalowany, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-506">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="a3712-507">Aby uzyskać informacje o tym, które głosy są zainstalowane, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> — metoda i <xref:System.Speech.Synthesis.VoiceInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="a3712-507">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3712-508">W poniższym przykładzie inicjowane wystąpienia <xref:System.Speech.Synthesis.SpeechSynthesizer> i pobiera informacje o bieżącym głosu.</span><span class="sxs-lookup"><span data-stu-id="a3712-508">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-509">Wywoływane, gdy głos <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> zmiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-509">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3712-510">Na przykład i informacje o danych skojarzone ze zdarzeniem, zobacz <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a3712-510">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="a3712-511">Można zmienić głos który <xref:System.Speech.Synthesis.SpeechSynthesizer> korzysta ze wszystkimi <xref:System.Speech.Synthesis.PromptBuilder>w <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> metody lub <xref:System.Speech.Synthesis.SpeechSynthesizer>w <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a3712-511">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3712-512">Pobiera lub ustawia wielkość danych wyjściowych <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-512">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3712-513">Zwraca ilość <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, od 0 do 100.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3712-513">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3712-514">Poniższy przykład przedstawia ilość <xref:System.Speech.Synthesis.SpeechSynthesizer>audio wyjściowy plików WAV i syntezatora mowy.</span><span class="sxs-lookup"><span data-stu-id="a3712-514">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>