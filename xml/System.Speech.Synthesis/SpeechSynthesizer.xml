<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="be41b561056f62cbc37a2d6014bdef6b0a19623f" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51928478" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SpeechSynthesizer = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="6438c-101">Zapewnia dostęp do funkcji aparatu synteza mowy zainstalowane.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6438c-101">Provides access to the functionality of an installed speech synthesis engine.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-102">Podczas tworzenia nowego <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu, używa ona głos system domyślny.</span><span class="sxs-lookup"><span data-stu-id="6438c-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="6438c-103">Aby skonfigurować <xref:System.Speech.Synthesis.SpeechSynthesizer> Aby użyć jednego z zainstalowanych mowy głosów syntezy (zamiana tekstu na mowę), należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="6438c-104">Aby uzyskać informacje o tym, które są zainstalowane głosów, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metody i <xref:System.Speech.Synthesis.VoiceInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="6438c-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="6438c-105">Ta klasa udostępnia także kontrolować następujące aspekty synteza mowy:</span><span class="sxs-lookup"><span data-stu-id="6438c-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="6438c-106">Aby skonfigurować dane wyjściowe <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="6438c-107">Na potrzeby generowania mowy, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="6438c-108"><xref:System.Speech.Synthesis.SpeechSynthesizer> Może wygenerować mowę na podstawie tekstu, <xref:System.Speech.Synthesis.Prompt> lub <xref:System.Speech.Synthesis.PromptBuilder> obiektu, albo z [mowy syntezy Markup Language (SSML) w wersji 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="6438c-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="6438c-109">Aby wstrzymać lub wznowić synteza mowy, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> i <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="6438c-110">Aby dodać lub usunąć lexicons, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> i <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="6438c-111"><xref:System.Speech.Synthesis.SpeechSynthesizer> Można użyć co najmniej jeden lexicons przeprowadzenie jej Wymowa słów.</span><span class="sxs-lookup"><span data-stu-id="6438c-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="6438c-112">Aby zmodyfikować dostarczanie mowie, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> i <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6438c-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="6438c-113"><xref:System.Speech.Synthesis.SpeechSynthesizer> Wywołuje zdarzenia po napotkaniu pewnych funkcji w monity: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span><span class="sxs-lookup"><span data-stu-id="6438c-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="6438c-114">Wywołuje również zdarzenia, które zgłaszanie przy uruchomieniu (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) i na końcu (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) z mówić operacje i w przypadku zmiany wypowiedzi mowy (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span><span class="sxs-lookup"><span data-stu-id="6438c-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6438c-115">Zawsze wywołuj <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> przed publikacją swoje ostatnie odwołanie do <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="6438c-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="6438c-116">W przeciwnym razie zasobów jest przy użyciu nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-117">Poniższy przykład jest częścią aplikację konsolową, która inicjuje <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu i mówi ciągu.</span><span class="sxs-lookup"><span data-stu-id="6438c-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361644(v%3doffice.14)">
      <span data-ttu-id="6438c-118">Synteza mowy</span>
      <span class="sxs-lookup">
        <span data-stu-id="6438c-118">Speech Synthesis</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6438c-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-119">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-120">Podczas inicjowania nowego <xref:System.Speech.Synthesis.SpeechSynthesizer> wystąpienia, używa ona głos system domyślny.</span><span class="sxs-lookup"><span data-stu-id="6438c-120">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="6438c-121">Aby skonfigurować <xref:System.Speech.Synthesis.SpeechSynthesizer> Aby użyć jednego z zainstalowanych mowy głosów syntezy (zamiana tekstu na mowę), należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-121">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="6438c-122">Aby uzyskać informacje o tym, które są zainstalowane głosów, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metody i <xref:System.Speech.Synthesis.VoiceInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="6438c-122">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="member this.AddLexicon : Uri * string -&gt; unit" Usage="speechSynthesizer.AddLexicon (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="6438c-123">Lokalizacja danych słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-123">The location of the lexicon information.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="6438c-124">Typ nośnika słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-124">The media type of the lexicon.</span>
          </span>
          <span data-ttu-id="6438c-125">Wartości typu nośnika nie jest uwzględniana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-125">Media type values are not case sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-126">Dodaje leksykonu do <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-126">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-127">Leksykonu Wymowa to zbiór słów i fraz, wraz z ich wymowa, które składają się z liter i znaków z obsługiwanych alfabet fonetyczny.</span><span class="sxs-lookup"><span data-stu-id="6438c-127">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="6438c-128">Leksykonu służy do określania niestandardowej wymowy specjalistycznego słownictwa w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="6438c-128">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="6438c-129">Określone w pliku zewnętrznego leksykonu wymowy mają pierwszeństwo przed wymowy leksykonu wewnętrznego lub słownika syntezatora mowy.</span><span class="sxs-lookup"><span data-stu-id="6438c-129">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="6438c-130">Jednak wymowy określonymi wewnątrz WE monity utworzonych za pomocą dowolnego z <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, lub <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> metody mają pierwszeństwo przed wymowy określone w dowolnym słownika.</span><span class="sxs-lookup"><span data-stu-id="6438c-130">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="6438c-131">Wbudowane wymowy dotyczą tylko pojedyncze wystąpienie wyrazu.</span><span class="sxs-lookup"><span data-stu-id="6438c-131">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="6438c-132">Zobacz [Lexicons i alfabetów fonetyczny](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)) Aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="6438c-132">See [Lexicons and Phonetic Alphabets](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)) for more information.</span></span>  
  
 <span data-ttu-id="6438c-133">Można dodać wiele lexicons do <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu. Dwie wartości są obecnie obsługiwane w przypadku `mediaType` parametru:</span><span class="sxs-lookup"><span data-stu-id="6438c-133">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="6438c-134">Wartość `application/pls+xml` wskazuje, że odpowiada leksykonu [Wymowa leksykonu specyfikacji (PLS) w wersji 1.0](https://go.microsoft.com/fwlink/?LinkId=201766).</span><span class="sxs-lookup"><span data-stu-id="6438c-134">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="6438c-135">Jest to preferowany format do użycia.</span><span class="sxs-lookup"><span data-stu-id="6438c-135">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="6438c-136">Wartość `application/vdn.ms-sapi-lex` wskazuje, że format leksykonu leksykonu bez kompresji, który jest w formacie Microsoft zastrzeżonej.</span><span class="sxs-lookup"><span data-stu-id="6438c-136">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="6438c-137">Jest to starszego formatu i zalecane jest użycie formatu PLS opisanych powyżej.</span><span class="sxs-lookup"><span data-stu-id="6438c-137">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-138">Poniższy przykład ilustruje efekt elementu Dodawanie i usuwanie leksykonu, który zawiera niestandardowe Wymowa dla słowa "niebieski".</span><span class="sxs-lookup"><span data-stu-id="6438c-138">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="6438c-139">Leksykonu definiuje Wymowa "niebieski", aby brzmiał jak "bleep".</span><span class="sxs-lookup"><span data-stu-id="6438c-139">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="6438c-140">Leksykonu jest ładowany, Wymowa zdefiniowane w leksykonu zużywa syntezatora mowy.</span><span class="sxs-lookup"><span data-stu-id="6438c-140">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="6438c-141">Poniżej przedstawiono zawartość pliku leksykonu Blue.pls:</span><span class="sxs-lookup"><span data-stu-id="6438c-141">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberSignature Language="F#" Value="member this.BookmarkReached : EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " Usage="member this.BookmarkReached : System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-142">Wywołane, gdy <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> napotka zakładki w wierszu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-142">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-143"><xref:System.Speech.Synthesis.SpeechSynthesizer> Zgłasza tego zdarzenia podczas przetwarzania wszystkich <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-143">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="6438c-144">Aby uzyskać informacji na temat dane skojarzone ze zdarzeniem, zobacz <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6438c-144">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="6438c-145">Możesz dodać zakładki przy użyciu <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-145">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-146">Poniższy przykład tworzy wiersza, która zawiera dwa zakładek i wysyła dane wyjściowe do pliku do odtwarzania WAV.</span><span class="sxs-lookup"><span data-stu-id="6438c-146">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="6438c-147">Obsługa <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> zdarzeń zapisuje nazwy zakładki i położenia w strumienia audio, gdy zdarzenia zostało podniesione do konsoli.</span><span class="sxs-lookup"><span data-stu-id="6438c-147">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="speechSynthesizer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6438c-148">Usuwa <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu i zwalnia zasoby używane podczas sesji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-148">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="speechSynthesizer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6438c-149">Działa jako zabezpieczenie przed oczyszczeniem zasobów w przypadku gdy <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> nie jest wywoływana metoda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-149">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentlySpokenPrompt : unit -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.GetCurrentlySpokenPrompt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6438c-150">Pobiera wiersz, który <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> mówiącego Prezydenta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-150">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6438c-151">Zwraca obiekt prompt, który jest aktualnie używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-151">Returns the prompt object that is currently being spoken.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-152">Zwraca kolekcję mowy syntezy głosów (zamiany tekstu na mowę), które są aktualnie zainstalowane w systemie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-152">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-153">Kiedy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosów (silniki zamiany tekstu na mowę) znalezione w spełnia rejestru niektóre minimalne kryteria.</span><span class="sxs-lookup"><span data-stu-id="6438c-153">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="6438c-154">Niepowodzenia weryfikacji, na dowolnym głos <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-154">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="6438c-155">Aplikacja nie będzie można wybrać głosu którego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-155">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="6438c-156">Zazwyczaj aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6438c-156">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6438c-157">Zwraca wszystkie zainstalowane mowy głosów syntezy (zamiana tekstu na mowę).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-157">Returns all of the installed speech synthesis (text-to-speech) voices.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6438c-158">Zwraca kolekcję tylko do odczytu, głosy aktualnie zainstalowane w systemie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-158">Returns a read-only collection of the voices currently installed on the system.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-159">Głos jest aparatem synteza mowy (zamiana tekstu na mowę lub TTS), który jest zainstalowany w systemie.</span><span class="sxs-lookup"><span data-stu-id="6438c-159">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-160">Poniższy przykład jest częścią aplikację konsolową, która inicjuje <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu i dane wyjściowe konsoli listę zainstalowanych głosów (silników synteza mowy) oraz przedstawiono informacje, które są dostępne dla każdego głosu.</span><span class="sxs-lookup"><span data-stu-id="6438c-160">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : System.Globalization.CultureInfo -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="6438c-161">Ustawienia regionalne musi obsługiwać głosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-161">The locale that the voice must support.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-162">Zwraca wszystkie zainstalowane mowy głosów syntezy (zamiana tekstu na mowę), obsługujących o specyficznych ustawieniach regionalnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-162">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6438c-163">Zwraca kolekcję tylko do odczytu, głosy aktualnie zainstalowane w systemie, które obsługują określonych ustawień regionalnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-163">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-164">Jeśli żaden z zainstalowanych głosów obsługi określonych ustawień regionalnych, ta metoda zwraca pustą kolekcję.</span><span class="sxs-lookup"><span data-stu-id="6438c-164">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="6438c-165">Program Microsoft Windows i interfejsu API System.Speech Zaakceptuj wszystkie prawidłowe kody krajów języka.</span><span class="sxs-lookup"><span data-stu-id="6438c-165">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="6438c-166">Aby wykonać zamiany tekstu na mowę przy użyciu języka określona we właściwości kultury, aparat synteza mowy, który obsługuje kod kraju języka musi być zainstalowany.</span><span class="sxs-lookup"><span data-stu-id="6438c-166">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="6438c-167">Aparaty synteza mowy, które są dostarczane z programem Microsoft Windows 7 pracować z poniższych kodów kraju języka:</span><span class="sxs-lookup"><span data-stu-id="6438c-167">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="6438c-168">en-US.</span><span class="sxs-lookup"><span data-stu-id="6438c-168">en-US.</span></span> <span data-ttu-id="6438c-169">Angielski (Stany Zjednoczone)</span><span class="sxs-lookup"><span data-stu-id="6438c-169">English (United States)</span></span>  
  
-   <span data-ttu-id="6438c-170">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="6438c-170">zh-CN.</span></span> <span data-ttu-id="6438c-171">Chiński (Chiny)</span><span class="sxs-lookup"><span data-stu-id="6438c-171">Chinese (China)</span></span>  
  
-   <span data-ttu-id="6438c-172">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="6438c-172">zh-TW.</span></span> <span data-ttu-id="6438c-173">Chiński (Tajwan)</span><span class="sxs-lookup"><span data-stu-id="6438c-173">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="6438c-174">Kody dwuliterowych języków, takich jak "en", również są dozwolone.</span><span class="sxs-lookup"><span data-stu-id="6438c-174">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-175">Poniższy przykład jest częścią aplikację konsolową, która inicjuje <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu i dane wyjściowe konsoli listę zainstalowanych głosów, które obsługują ustawień regionalnych en US.</span><span class="sxs-lookup"><span data-stu-id="6438c-175">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locacale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="speechSynthesizer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6438c-176">Wstrzymuje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-176">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberSignature Language="F#" Value="member this.PhonemeReached : EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " Usage="member this.PhonemeReached : System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-177">Wywoływane, gdy zostanie osiągnięty phoneme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-177">Raised when a phoneme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-178">Phoneme jest podstawowym składnikiem napisane języka, zazwyczaj litery alfabetu (lub kombinacja dwóch liter), która reprezentuje przynajmniej jednego dźwięku distinct.</span><span class="sxs-lookup"><span data-stu-id="6438c-178">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="6438c-179">Na przykład litera "c" jest phoneme, który stwierdzenie może wydawać się takie jak "s" w "cinder" lub "k" w "catch".</span><span class="sxs-lookup"><span data-stu-id="6438c-179">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="6438c-180">Napisane słowo to łączenia się podzasobów fonemów.</span><span class="sxs-lookup"><span data-stu-id="6438c-180">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="6438c-181">Zmiana w programie phoneme zmieni jego pisownię.</span><span class="sxs-lookup"><span data-stu-id="6438c-181">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="6438c-182">A <xref:System.Speech.Synthesis.SpeechSynthesizer> generuje wystąpienie <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> zdarzenia dla każdej części programu word, który stanowi phoneme.</span><span class="sxs-lookup"><span data-stu-id="6438c-182">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="6438c-183">Na przykład dla słowa "kompozycji" spowoduje wygenerowanie trzy <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> zdarzenia; jeden dla dźwięk "th", jeden dźwięku "e", a drugi dźwięku "m" (me).</span><span class="sxs-lookup"><span data-stu-id="6438c-183">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="6438c-184">Na przykład i informacje o danych, skojarzone ze zdarzeniem, zobacz <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6438c-184">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Rate : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-185">Pobiera lub ustawia współczynnik wypowiedzi <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-185">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6438c-186">Zwraca współczynnik wypowiedzi <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu z -10 do 10.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-186">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6438c-187">Poniższy przykład mówi ciąg ze wskaźnikiem wypowiedzi równa -2.</span><span class="sxs-lookup"><span data-stu-id="6438c-187">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.RemoveLexicon : Uri -&gt; unit" Usage="speechSynthesizer.RemoveLexicon uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="6438c-188">Lokalizacja dokumentu słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-188">The location of the lexicon document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-189">Usuwa leksykonu z <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-189">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-190">Zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> przykład.</span><span class="sxs-lookup"><span data-stu-id="6438c-190">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="speechSynthesizer.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6438c-191">Wznawia <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu po zostało wstrzymane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-191">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SelectVoice : string -&gt; unit" Usage="speechSynthesizer.SelectVoice name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6438c-192">Nazwa głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-192">The name of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-193">Wybiera określonego głosu według nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-193">Selects a specific voice by name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-194">Użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metody i <xref:System.Speech.Synthesis.VoiceInfo> klasy w celu uzyskania nazwy zainstalowane głosów zamiany tekstu na mowę (TTS), które można wybrać.</span><span class="sxs-lookup"><span data-stu-id="6438c-194">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="6438c-195">Aby wybrać głosu, należy przekazać całą zawartość <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> właściwość jako argument dla <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-195">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="6438c-196"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiektu wybiera pierwszy zainstalowany głosowej, zawierający `name` przy użyciu głosu <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6438c-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="6438c-197"><xref:System.Speech.Synthesis.SpeechSynthesizer> Wykonuje porównanie podciąg rozróżniana jest wielkość liter, aby ustalić, czy głosu odpowiada `name`.</span><span class="sxs-lookup"><span data-stu-id="6438c-197">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="6438c-198">Kiedy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosów znajdzie się w rejestrze spełnia niektóre minimalne kryteria.</span><span class="sxs-lookup"><span data-stu-id="6438c-198">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="6438c-199">Niepowodzenia weryfikacji, na dowolnym głos <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-199">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="6438c-200">Aplikacja nie będzie można wybrać głosu którego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-200">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="6438c-201">Zazwyczaj aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6438c-201">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="6438c-202">Aby wybrać głosu według płci, wieku lub ustawień regionalnych, użyj jednej z <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-202">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-203">Wybiera głosu o określonej charakterystyce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-203">Selects a voice with specific characteristics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-204">Użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metody i <xref:System.Speech.Synthesis.VoiceInfo> klasy w celu uzyskania nazwy zainstalowane głosów zamiany tekstu na mowę (TTS), które można wybrać.</span><span class="sxs-lookup"><span data-stu-id="6438c-204">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="6438c-205"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiektu wybiera pierwszy głos zainstalowanych zgodny określone właściwości.</span><span class="sxs-lookup"><span data-stu-id="6438c-205">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="6438c-206">Kiedy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosów znajdzie się w rejestrze spełnia niektóre minimalne kryteria.</span><span class="sxs-lookup"><span data-stu-id="6438c-206">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="6438c-207">Niepowodzenia weryfikacji, na dowolnym głos <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-207">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="6438c-208">Aplikacja nie będzie można wybrać głosu którego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-208">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="6438c-209">Zazwyczaj aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6438c-209">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="6438c-210">Aby wybrać głosu według nazwy, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> — metoda</span><span class="sxs-lookup"><span data-stu-id="6438c-210">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints gender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="6438c-211">Płeć głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-211">The gender of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-212">Wybiera głosu przy użyciu określonych płci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-212">Selects a voice with a specific gender.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-213">Użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metody i <xref:System.Speech.Synthesis.VoiceInfo> klasy w celu uzyskania nazwy zainstalowane głosów zamiany tekstu na mowę (TTS), które można wybrać.</span><span class="sxs-lookup"><span data-stu-id="6438c-213">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="6438c-214"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiektu wybiera pierwszy zainstalowany głosu którego <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> dopasowania właściwości `gender` parametru.</span><span class="sxs-lookup"><span data-stu-id="6438c-214">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="6438c-215">Kiedy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosów znajdzie się w rejestrze spełnia niektóre minimalne kryteria.</span><span class="sxs-lookup"><span data-stu-id="6438c-215">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="6438c-216">Niepowodzenia weryfikacji, na dowolnym głos <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-216">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="6438c-217">Aplikacja nie będzie można wybrać głosu którego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-217">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="6438c-218">Zazwyczaj aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6438c-218">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="6438c-219">Aby wybrać głosu oparte na podstawie innych cech, zobacz drugi <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-219">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="6438c-220">Aby wybrać głosu według nazwy, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-220">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="6438c-221">Płeć głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-221">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="6438c-222">Wiek głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-222">The age of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-223">Wybiera głosu przy użyciu określonych płeć i wieku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-223">Selects a voice with a specific gender and age.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-224">Użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metody i <xref:System.Speech.Synthesis.VoiceInfo> klasy w celu uzyskania nazwy zainstalowane głosów zamiany tekstu na mowę (TTS), które można wybrać.</span><span class="sxs-lookup"><span data-stu-id="6438c-224">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="6438c-225"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiektu wybiera pierwszy zainstalowany głosu którego <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> i <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> dopasowania właściwości `gender` i `age` parametrów.</span><span class="sxs-lookup"><span data-stu-id="6438c-225">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="6438c-226">Kiedy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosów znajdzie się w rejestrze spełnia niektóre minimalne kryteria.</span><span class="sxs-lookup"><span data-stu-id="6438c-226">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="6438c-227">Niepowodzenia weryfikacji, na dowolnym głos <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-227">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="6438c-228">Aplikacja nie będzie można wybrać głosu którego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-228">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="6438c-229">Zazwyczaj aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6438c-229">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="6438c-230">Aby wybrać głosu oparte na podstawie innych cech, zobacz drugi <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-230">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="6438c-231">Aby wybrać głosu według nazwy, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-231">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="6438c-232">Płeć głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-232">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="6438c-233">Wiek głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-233">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="6438c-234">Pozycja głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-234">The position of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-235">Wybiera głosu przy użyciu określonych płeć i wiek, na podstawie położenia, w którym głosy są uporządkowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-235">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-236">Użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metody i <xref:System.Speech.Synthesis.VoiceInfo> klasy w celu uzyskania nazwy zainstalowane głosów zamiany tekstu na mowę (TTS), które można wybrać.</span><span class="sxs-lookup"><span data-stu-id="6438c-236">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="6438c-237"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiektu voices znajduje zainstalowane, którego <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> i <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> dopasowania właściwości `gender` i `age` parametrów.</span><span class="sxs-lookup"><span data-stu-id="6438c-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="6438c-238"><xref:System.Speech.Synthesis.SpeechSynthesizer> Liczby dopasowań odnajduje i zwraca głosu w przypadku, gdy liczba jest równa `voiceAlternate` parametru.</span><span class="sxs-lookup"><span data-stu-id="6438c-238">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="6438c-239">Kiedy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosów znajdzie się w rejestrze spełnia niektóre minimalne kryteria.</span><span class="sxs-lookup"><span data-stu-id="6438c-239">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="6438c-240">Niepowodzenia weryfikacji, na dowolnym głos <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-240">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="6438c-241">Aplikacja nie będzie można wybrać głosu którego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-241">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="6438c-242">Zazwyczaj aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6438c-242">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="6438c-243">Aby wybrać głosu oparte na podstawie innych cech, zobacz drugi <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="6438c-243">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="6438c-244">Aby wybrać głosu według nazwy, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-244">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int * System.Globalization.CultureInfo -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="6438c-245">Płeć głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-245">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="6438c-246">Wiek głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-246">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="6438c-247">Pozycja głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-247">The position of the voice to select.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="6438c-248">Ustawienia regionalne głosu, aby wybrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-248">The locale of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-249">Wybiera głosu przy użyciu określonych płeć, wiek i ustawień regionalnych, na podstawie położenia, w którym głosy są uporządkowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-249">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-250"><xref:System.Speech.Synthesis.SpeechSynthesizer> Obiektu znajduje voices, którego <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, i <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> dopasowania właściwości `gender`, `age`, i `culture` parametrów.</span><span class="sxs-lookup"><span data-stu-id="6438c-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="6438c-251"><xref:System.Speech.Synthesis.SpeechSynthesizer> Liczby dopasowań odnajduje i zwraca głosu w przypadku, gdy liczba jest równa `voiceAlternate` parametru.</span><span class="sxs-lookup"><span data-stu-id="6438c-251">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="6438c-252">Program Microsoft Windows i interfejsu API System.Speech Zaakceptuj wszystkie prawidłowe kody krajów języka.</span><span class="sxs-lookup"><span data-stu-id="6438c-252">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="6438c-253">Aby wykonać zamiany tekstu na mowę przy użyciu języka określonego w `culture` parametr, aparat synteza mowy, który obsługuje kod kraju języka musi być zainstalowany.</span><span class="sxs-lookup"><span data-stu-id="6438c-253">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="6438c-254">Aparaty synteza mowy, które są dostarczane z programem Microsoft Windows 7 pracować z poniższych kodów kraju języka:</span><span class="sxs-lookup"><span data-stu-id="6438c-254">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="6438c-255">en-US.</span><span class="sxs-lookup"><span data-stu-id="6438c-255">en-US.</span></span> <span data-ttu-id="6438c-256">Angielski (Stany Zjednoczone)</span><span class="sxs-lookup"><span data-stu-id="6438c-256">English (United States)</span></span>  
  
-   <span data-ttu-id="6438c-257">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="6438c-257">zh-CN.</span></span> <span data-ttu-id="6438c-258">Chiński (Chiny)</span><span class="sxs-lookup"><span data-stu-id="6438c-258">Chinese (China)</span></span>  
  
-   <span data-ttu-id="6438c-259">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="6438c-259">zh-TW.</span></span> <span data-ttu-id="6438c-260">Chiński (Tajwan)</span><span class="sxs-lookup"><span data-stu-id="6438c-260">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="6438c-261">Kody dwuliterowych języków, takich jak "en", również są dozwolone.</span><span class="sxs-lookup"><span data-stu-id="6438c-261">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="6438c-262">Kiedy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, ta metoda sprawdza, czy każdy głosów znajdzie się w rejestrze spełnia niektóre minimalne kryteria.</span><span class="sxs-lookup"><span data-stu-id="6438c-262">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="6438c-263">Niepowodzenia weryfikacji, na dowolnym głos <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> ustawia jego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-263">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="6438c-264">Aplikacja nie będzie można wybrać głosu którego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwość `False`.</span><span class="sxs-lookup"><span data-stu-id="6438c-264">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="6438c-265">Zazwyczaj aplikacje nie ustawi głosu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6438c-265">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="6438c-266">Aby wybrać głosu oparte na podstawie innych cech, zobacz drugi <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="6438c-266">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="6438c-267">Aby wybrać głosu według nazwy, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-267">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToAudioStream : System.IO.Stream * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToAudioStream (audioDestination, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="6438c-268">Strumień, do którego należy dołączyć syntezy dane wyjściowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-268">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="6438c-269">Format danych wyjściowych syntezy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-269">The format to use for the synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-270">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt, aby dołączyć dane wyjściowe do strumienia audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-270">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-271">Wywołaj <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> zwolnić <xref:System.Speech.Synthesis.SpeechSynthesizer>przez odwołanie do strumienia.</span><span class="sxs-lookup"><span data-stu-id="6438c-271">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the stream.</span></span>  
  
 <span data-ttu-id="6438c-272">Inne opcje konfiguracji danych wyjściowych, zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-272">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToDefaultAudioDevice : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToDefaultAudioDevice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6438c-273">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt do wysyłania danych wyjściowych do domyślnego urządzenia audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-273">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-274">Możesz użyć **dźwięk** okna w Windows **Panelu sterowania** skonfigurować domyślne urządzenie audio dla komputera.</span><span class="sxs-lookup"><span data-stu-id="6438c-274">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="6438c-275">Inne opcje konfiguracji danych wyjściowych, zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-275">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-276">W poniższym przykładzie użyto Syntezator mówić frazę w celu domyślne dane wyjściowe audio.</span><span class="sxs-lookup"><span data-stu-id="6438c-276">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToNull : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6438c-277">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu nie wysyłać danych wyjściowych z operacji syntezy urządzenia, pliku lub strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-277">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-278">Ta metoda służy do wersji <xref:System.Speech.Synthesis.SpeechSynthesizer> przez odwołanie do pliku lub strumienia.</span><span class="sxs-lookup"><span data-stu-id="6438c-278">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer> ‘s reference to a file or stream.</span></span> <span data-ttu-id="6438c-279">Zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> przykład.</span><span class="sxs-lookup"><span data-stu-id="6438c-279">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="6438c-280">Inne opcje konfiguracji danych wyjściowych, zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-280">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-281">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt, aby dołączyć dane wyjściowe do pliku formatu audio fali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-281">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-282">Aby zwolnić <xref:System.Speech.Synthesis.SpeechSynthesizer>przez odwołanie do pliku, należy ponownie skonfigurować <xref:System.Speech.Synthesis.SpeechSynthesizer>danych wyjściowych, na przykład przez wywołanie metody <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="6438c-282">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="6438c-283">Inne opcje konfiguracji danych wyjściowych, zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-283">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="6438c-284">Ścieżka do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-284">The path to the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-285">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt, aby dołączyć dane wyjściowe do pliku, która zawiera dźwięk formacie wave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-285">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-286">Aby skonfigurować dane wyjściowe i określić format dźwięku, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-286">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-287">W poniższym przykładzie użyto wystąpienia <xref:System.Media.SoundPlayer> grać wiersza, który znajduje się dane wyjściowe do pliku WAV.</span><span class="sxs-lookup"><span data-stu-id="6438c-287">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="6438c-288">Ponieważ <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> wywołanie jest asynchroniczne, <xref:System.Media.SoundPlayer> tworzone jest wystąpienie (i <xref:System.Media.SoundPlayer.Play%2A> metoda wywoływana) dla programu obsługi <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="6438c-288">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile (path, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="6438c-289">Ścieżka do pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-289">The path to the file.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="6438c-290">Informacje o formacie audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-290">The audio format information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-291">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt, aby dołączyć dane wyjściowe do pliku fali audio format w określonym formacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-291">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6438c-292">Poniższy przykład określa format danych wyjściowych synteza mowy i wysyła je do pliku WAV.</span><span class="sxs-lookup"><span data-stu-id="6438c-292">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveStream : System.IO.Stream -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveStream audioDestination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="6438c-293">Strumień, do którego należy dołączyć syntezy dane wyjściowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-293">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-294">Konfiguruje <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiekt, aby dołączyć dane wyjściowe do strumienia, która zawiera dźwięk formacie wave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-294">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-295">Aby zwolnić <xref:System.Speech.Synthesis.SpeechSynthesizer>przez odwołanie do strumienia, ponownie Syntezator danych wyjściowych, na przykład przez wywołanie metody <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="6438c-295">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="6438c-296">Inne opcje konfiguracji danych wyjściowych, zobacz <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, i <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-296">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-297">Poniższy przykład generuje frazę do strumienia WAV.</span><span class="sxs-lookup"><span data-stu-id="6438c-297">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream stream = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        MemoryStream streamAudio = new MemoryStream();  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-298">Generuje mowie synchronicznie z ciągu, <see cref="T:System.Speech.Synthesis.Prompt" /> obiektu lub <see cref="T:System.Speech.Synthesis.PromptBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-298">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-299"><xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> Metody generowania mowy synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="6438c-299">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="6438c-300">Te metody nie zwracają aż do zawartości <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> całkowicie wymawiane wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6438c-300">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="6438c-301">Jest to najprostszy sposób na potrzeby generowania mowy.</span><span class="sxs-lookup"><span data-stu-id="6438c-301">This is the simplest way to generate speech.</span></span> <span data-ttu-id="6438c-302">Jeśli jednak aplikacja wymaga do wykonywania zadań ust, na przykład zaznacz tekst, paint animacji, formantów monitora lub innych zadań, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metody lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody na potrzeby generowania mowy asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="6438c-302">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="6438c-303">Podczas wywołania tej metody <xref:System.Speech.Synthesis.SpeechSynthesizer> może zgłosić następujące zdarzenia:</span><span class="sxs-lookup"><span data-stu-id="6438c-303">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="6438c-304"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="6438c-304"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="6438c-305">Wywoływane, gdy zmieni się stan wypowiedzi Syntezator.</span><span class="sxs-lookup"><span data-stu-id="6438c-305">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="6438c-306"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="6438c-306"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="6438c-307">Wywoływane, gdy Syntezator rozpoczyna się generowanie mowy.</span><span class="sxs-lookup"><span data-stu-id="6438c-307">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="6438c-308"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="6438c-308"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="6438c-309">Wywoływane, każdym razem, gdy Syntezator osiągnie literę lub kombinację liter, które stanowią niejawnego dźwięk mowy w języku.</span><span class="sxs-lookup"><span data-stu-id="6438c-309">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="6438c-310"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="6438c-310"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="6438c-311">Zgłoszone w każdym przypadku poszczególnych syntezatorów kończy się czytanie słowem.</span><span class="sxs-lookup"><span data-stu-id="6438c-311">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="6438c-312"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="6438c-312"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="6438c-313">Wywoływane, mówione wymaga zmian w zakresie pozycję ustnej lub mięśnie twarzy, użyta do wyprodukowania mowy.</span><span class="sxs-lookup"><span data-stu-id="6438c-313">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="6438c-314"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="6438c-314"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="6438c-315">Wywoływane, gdy Syntezator napotka zakładki w wierszu.</span><span class="sxs-lookup"><span data-stu-id="6438c-315">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="6438c-316"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="6438c-316"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="6438c-317">Wywoływane, gdy zmieni się wypowiedzi głos dla Syntezator.</span><span class="sxs-lookup"><span data-stu-id="6438c-317">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="6438c-318"><xref:System.Speech.Synthesis.SpeechSynthesizer> Zgłaszaj <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzenia podczas przetwarzania wszystkich <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-318">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.Speak prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="6438c-319">Zawartość mówić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-319">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-320">Synchronicznie mówi zawartość <see cref="T:System.Speech.Synthesis.Prompt" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-320">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-321">Asynchronicznie mówić zawartość <xref:System.Speech.Synthesis.Prompt> obiektu, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="6438c-321">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-322">Poniższy przykład tworzy <xref:System.Speech.Synthesis.Prompt> obiekt z ciągu i przekazuje obiekt jako argumentu do <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-322">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.PromptBuilder -&gt; unit" Usage="speechSynthesizer.Speak promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="6438c-323">Zawartość mówić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-323">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-324">Synchronicznie mówi zawartość <see cref="T:System.Speech.Synthesis.PromptBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-324">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-325">Asynchronicznie mówić zawartość <xref:System.Speech.Synthesis.PromptBuilder> obiektu, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="6438c-325">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-326">Poniższy przykład tworzy <xref:System.Speech.Synthesis.PromptBuilder> obiekt z ciągu i przekazuje obiekt jako argumentu do <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-326">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.Speak : string -&gt; unit" Usage="speechSynthesizer.Speak textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="6438c-327">Tekst, który mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-327">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-328">Synchronicznie mówi zawartość ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-328">Synchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-329">Synchronicznie mówić ciąg, który zawiera SSML znaczników, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-329">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="6438c-330">Asynchronicznie mówić zawartość ciągu, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-330">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-331">Jak pokazano w poniższym przykładzie <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metoda udostępnia najprostszy sposób na potrzeby generowania mowy danych wyjściowych synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="6438c-331">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-332">Asynchronicznie generuje mowie z ciągu, <see cref="T:System.Speech.Synthesis.Prompt" /> obiektu lub <see cref="T:System.Speech.Synthesis.PromptBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-332">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-333"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> Metody generowania mowy asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="6438c-333">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="6438c-334">Metody zwracają się natychmiast bez oczekiwania na zawartość <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> obiektu, aby zakończyć wypowiedzi.</span><span class="sxs-lookup"><span data-stu-id="6438c-334">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="6438c-335">Użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> Jeśli Twoja aplikacja potrzebuje do wykonywania zadań ust, zaznacz tekst, na przykład, malowanie animacji, formantów monitora lub innych zadań.</span><span class="sxs-lookup"><span data-stu-id="6438c-335">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="6438c-336">Podczas wywołania tej metody <xref:System.Speech.Synthesis.SpeechSynthesizer> może zgłosić następujące zdarzenia:</span><span class="sxs-lookup"><span data-stu-id="6438c-336">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="6438c-337"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="6438c-337"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="6438c-338">Wywoływane, gdy zmieni się stan wypowiedzi Syntezator.</span><span class="sxs-lookup"><span data-stu-id="6438c-338">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="6438c-339"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="6438c-339"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="6438c-340">Wywoływane, gdy Syntezator rozpoczyna się generowanie mowy.</span><span class="sxs-lookup"><span data-stu-id="6438c-340">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="6438c-341"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="6438c-341"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="6438c-342">Wywoływane, każdym razem, gdy Syntezator osiągnie literę lub kombinację liter, które stanowią niejawnego dźwięk mowy w języku.</span><span class="sxs-lookup"><span data-stu-id="6438c-342">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="6438c-343"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="6438c-343"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="6438c-344">Zgłoszone w każdym przypadku poszczególnych syntezatorów kończy się czytanie słowem.</span><span class="sxs-lookup"><span data-stu-id="6438c-344">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="6438c-345"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="6438c-345"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="6438c-346">Wywoływane, mówione wymaga zmian w zakresie pozycję ustnej lub mięśnie twarzy, użyta do wyprodukowania mowy.</span><span class="sxs-lookup"><span data-stu-id="6438c-346">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="6438c-347"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="6438c-347"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="6438c-348">Wywoływane, gdy Syntezator napotka zakładki w wierszu.</span><span class="sxs-lookup"><span data-stu-id="6438c-348">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="6438c-349"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="6438c-349"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="6438c-350">Wywoływane, gdy zmieni się wypowiedzi głos dla Syntezator.</span><span class="sxs-lookup"><span data-stu-id="6438c-350">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="6438c-351"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="6438c-351"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="6438c-352">Wywoływane, gdy zakończy się Syntezator <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operacji.</span><span class="sxs-lookup"><span data-stu-id="6438c-352">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="6438c-353">Jeśli aplikacja nie musi wykonywać zadania ust, możesz użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metody lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> metody na potrzeby generowania mowy synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="6438c-353">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsync prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="6438c-354">Zawartość mówić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-354">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-355">Asynchronicznie mówi zawartość <see cref="T:System.Speech.Synthesis.Prompt" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-355">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-356">Możesz anulować asynchronicznego wypowiedzi wiersz z wykorzystaniem <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-356">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="6438c-357">Synchronicznie mówić zawartość <xref:System.Speech.Synthesis.Prompt> obiektu, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="6438c-357">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-358">Poniższy przykład tworzy <xref:System.Speech.Synthesis.Prompt> obiekt z ciągu i przekazuje obiekt jako argumentu do <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-358">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.PromptBuilder -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="6438c-359">Zawartość mówić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-359">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-360">Asynchronicznie mówi zawartość <see cref="T:System.Speech.Synthesis.PromptBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-360">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6438c-361">Zwraca obiekt, który zawiera zawartość mówić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-361">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-362">Synchronicznie mówić zawartość <xref:System.Speech.Synthesis.PromptBuilder> obiektu, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="6438c-362">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-363">Poniższy przykład tworzy <xref:System.Speech.Synthesis.PromptBuilder> obiekt z ciągu i przekazuje obiekt jako argumentu do <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-363">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="6438c-364">Tekst, który mowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-364">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-365">Asynchronicznie mówi zawartość ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-365">Asynchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6438c-366">Zwraca obiekt, który zawiera zawartość mówić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-366">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-367">Asynchronicznie mówić ciąg, który zawiera SSML znaczników, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-367">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="6438c-368">Synchronicznie mówić zawartość ciągu, użyj <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-368">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="6438c-369">Możesz anulować asynchronicznego wypowiedzi wiersz z wykorzystaniem <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-369">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-370">Jak pokazano w poniższym przykładzie <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metoda zapewnia najprostszą oznacza, że na potrzeby generowania mowy, dane wyjściowe asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="6438c-370">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancel : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancel prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="6438c-371">Zawartość, do których chcesz anulować operację Mów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-371">The content for which to cancel a speak operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-372">Anuluje operację asynchroniczną syntezy umieszczonych w kolejce pojawił się monit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-372">Cancels the asynchronous synthesis operation for a queued prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-373">Ta metoda również służy do anulowania asynchronicznych mówić operacji dla następujących:</span><span class="sxs-lookup"><span data-stu-id="6438c-373">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="6438c-374">Zawartość <xref:System.String> określony przez <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-374">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="6438c-375">Zawartość <xref:System.Speech.Synthesis.PromptBuilder> określony przez <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-375">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="6438c-376">Zawartość <xref:System.String> zawierający określone przez SSML <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-376">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="6438c-377">Gdy wywołujesz <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, tworzy System.Speech <xref:System.Speech.Synthesis.Prompt> obiektu i wypełnia zawartość parametru metody i zwraca <xref:System.Speech.Synthesis.Prompt> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6438c-377">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="6438c-378">Aby zachować kopię zwracanego <xref:System.Speech.Synthesis.Prompt>, możesz przekazać go do <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> anulować wymowy zawartości określona w <xref:System.String> lub <xref:System.Speech.Synthesis.PromptBuilder> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6438c-378">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancelAll : unit -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancelAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6438c-379">Anulowanie operacji synteza mowy wszystkich umieszczonych w kolejce, asynchroniczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-379">Cancels all queued, asynchronous, speech synthesis operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6438c-380">Poniższy przykład pokazują korzystanie z <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> można anulować, asynchronicznego wypowiedzi wyświetlania monitu, dzięki czemu może być wymawiane nowy wiersz.</span><span class="sxs-lookup"><span data-stu-id="6438c-380">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="6438c-381">Należy pamiętać, że <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzenia generowane, gdy <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operacja została anulowana.</span><span class="sxs-lookup"><span data-stu-id="6438c-381">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberSignature Language="F#" Value="member this.SpeakCompleted : EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " Usage="member this.SpeakCompleted : System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-382">Wywołane, gdy <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> kończy wypowiedzi w wierszu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-382">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-383"><xref:System.Speech.Synthesis.SpeechSynthesizer> Zgłasza <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzeń na zakończenie wszystkich <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-383">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="6438c-384"><xref:System.Speech.Synthesis.SpeakCompletedEventArgs> Klasa nie ma właściwości, a nie zwróci dane z <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="6438c-384">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="6438c-385">Jest dostarczana, aby umożliwić autorzy aplikacji do pisania programów obsługi zdarzeń dla <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="6438c-385">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberSignature Language="F#" Value="member this.SpeakProgress : EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " Usage="member this.SpeakProgress : System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-386">Podniesione po <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> mówi każdego pojedynczego wyrazu monit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-386">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-387"><xref:System.Speech.Synthesis.SpeechSynthesizer> Zgłasza to zdarzenie, dla każdego nowego wyrazu, który komunikuje się on w wierszu polecenia przy użyciu dowolnej z <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-387">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="6438c-388">Na przykład i dowiedzieć się więcej o dane skojarzone ze zdarzeniem, zobacz <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6438c-388">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsml : string -&gt; unit" Usage="speechSynthesizer.SpeakSsml textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="6438c-389">Ciąg SSML mówić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-389">The SSML string to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-390">Wybór synchronicznie <see cref="T:System.String" /> zawierający SSML znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-390">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-391">Zawartość `textToSpeak` parametr musi zawierać `speak` elementu i musi być zgodna z [mowy syntezy Markup Language (SSML) w wersji 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="6438c-391">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="6438c-392">Aby uzyskać więcej informacji, zobacz [Skorowidz języka znaczników synteza mowy](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="6438c-392">For more information, see [Speech Synthesis Markup Language Reference](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="6438c-393">Asynchronicznie mówić ciąg, który zawiera SSML znaczników, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-393">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="6438c-394">Możesz użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> do zainicjowania synchroniczną wypowiedzi ciąg, który nie zawiera znaczników SSML.</span><span class="sxs-lookup"><span data-stu-id="6438c-394">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="6438c-395">Podczas wywołania tej metody <xref:System.Speech.Synthesis.SpeechSynthesizer> może zgłosić następujące zdarzenia:</span><span class="sxs-lookup"><span data-stu-id="6438c-395">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="6438c-396"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="6438c-396"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="6438c-397">Wywoływane, gdy zmieni się stan wypowiedzi Syntezator.</span><span class="sxs-lookup"><span data-stu-id="6438c-397">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="6438c-398"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="6438c-398"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="6438c-399">Wywoływane, gdy Syntezator rozpoczyna się generowanie mowy.</span><span class="sxs-lookup"><span data-stu-id="6438c-399">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="6438c-400"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="6438c-400"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="6438c-401">Wywoływane, każdym razem, gdy Syntezator osiągnie literę lub kombinację liter, które stanowią niejawnego dźwięk mowy w języku.</span><span class="sxs-lookup"><span data-stu-id="6438c-401">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="6438c-402"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="6438c-402"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="6438c-403">Zgłoszone w każdym przypadku poszczególnych syntezatorów kończy się czytanie słowem.</span><span class="sxs-lookup"><span data-stu-id="6438c-403">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="6438c-404"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="6438c-404"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="6438c-405">Wywoływane, mówione wymaga zmian w zakresie pozycję ustnej lub mięśnie twarzy, użyta do wyprodukowania mowy.</span><span class="sxs-lookup"><span data-stu-id="6438c-405">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="6438c-406"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="6438c-406"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="6438c-407">Wywoływane, gdy Syntezator napotka zakładki w wierszu.</span><span class="sxs-lookup"><span data-stu-id="6438c-407">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="6438c-408"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="6438c-408"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="6438c-409">Wywoływane, gdy zmieni się wypowiedzi głos dla Syntezator.</span><span class="sxs-lookup"><span data-stu-id="6438c-409">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="6438c-410"><xref:System.Speech.Synthesis.SpeechSynthesizer> Zgłaszaj <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> zdarzenia podczas przetwarzania <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-410">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-411">Poniższy przykład powoduje wyświetlenie daty 1/29/2009 jako data, miesiąc, dzień i rok.</span><span class="sxs-lookup"><span data-stu-id="6438c-411">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt synchronously.
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsmlAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakSsmlAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="6438c-412">Znaczników SMML mówić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-412">The SMML markup to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6438c-413">Asynchronicznie mówi <see cref="T:System.String" /> zawierający SSML znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-413">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-414">Zawartość `textToSpeak` parametr musi zawierać `speak` elementu i musi być zgodna z [mowy syntezy Markup Language (SSML) w wersji 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="6438c-414">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="6438c-415">Aby uzyskać więcej informacji, zobacz [Skorowidz języka znaczników synteza mowy](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="6438c-415">For more information, see [Speech Synthesis Markup Language Reference](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="6438c-416">Synchronicznie mówić ciąg, który zawiera SSML znaczników, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-416">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="6438c-417">Możesz użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> do zainicjowania asynchronicznego wypowiedzi ciąg, który nie zawiera znaczników SSML.</span><span class="sxs-lookup"><span data-stu-id="6438c-417">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="6438c-418">Podczas wywołania tej metody <xref:System.Speech.Synthesis.SpeechSynthesizer> może zgłosić następujące zdarzenia:</span><span class="sxs-lookup"><span data-stu-id="6438c-418">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="6438c-419"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="6438c-419"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="6438c-420">Wywoływane, gdy zmieni się stan wypowiedzi Syntezator.</span><span class="sxs-lookup"><span data-stu-id="6438c-420">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="6438c-421"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="6438c-421"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="6438c-422">Wywoływane, gdy Syntezator rozpoczyna się generowanie mowy.</span><span class="sxs-lookup"><span data-stu-id="6438c-422">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="6438c-423"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="6438c-423"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="6438c-424">Wywoływane, każdym razem, gdy Syntezator osiągnie literę lub kombinację liter, które stanowią niejawnego dźwięk mowy w języku.</span><span class="sxs-lookup"><span data-stu-id="6438c-424">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="6438c-425"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="6438c-425"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="6438c-426">Zgłoszone w każdym przypadku poszczególnych syntezatorów kończy się czytanie słowem.</span><span class="sxs-lookup"><span data-stu-id="6438c-426">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="6438c-427"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="6438c-427"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="6438c-428">Wywoływane, mówione wymaga zmian w zakresie pozycję ustnej lub mięśnie twarzy, użyta do wyprodukowania mowy.</span><span class="sxs-lookup"><span data-stu-id="6438c-428">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="6438c-429"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="6438c-429"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="6438c-430">Wywoływane, gdy Syntezator napotka zakładki w wierszu.</span><span class="sxs-lookup"><span data-stu-id="6438c-430">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="6438c-431"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="6438c-431"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="6438c-432">Wywoływane, gdy zmieni się wypowiedzi głos dla Syntezator.</span><span class="sxs-lookup"><span data-stu-id="6438c-432">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="6438c-433"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="6438c-433"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="6438c-434">Wywoływane, gdy Syntezator zakończy przetwarzanie <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operacji.</span><span class="sxs-lookup"><span data-stu-id="6438c-434">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="6438c-435">Jeśli Twoje dos aplikacji nie trzeba wykonywać zadania ust, możesz użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> metody na potrzeby generowania mowy synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="6438c-435">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberSignature Language="F#" Value="member this.SpeakStarted : EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " Usage="member this.SpeakStarted : System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-436">Wywołane, gdy <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> rozpoczyna się wypowiedzi w wierszu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-436">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-437"><xref:System.Speech.Synthesis.SpeechSynthesizer> Zgłasza tego zdarzenia, kiedy rozpoczyna przetwarzanie monit przy użyciu dowolnej z <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-437">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="6438c-438"><xref:System.Speech.Synthesis.SpeakStartedEventArgs> Klasa nie ma właściwości, a nie zwróci dane z <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="6438c-438">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="6438c-439">Jest dostarczana, aby umożliwić autorzy aplikacji do pisania programów obsługi zdarzeń dla <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="6438c-439">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Speech.Synthesis.SynthesizerState" Usage="System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-440">Pobiera bieżący stan wypowiedzi <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-440">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6438c-441">Zwraca bieżący stan wypowiedzi <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-441">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-442">Aby uzyskać nowy stan <xref:System.Speech.Synthesis.SpeechSynthesizer> po zmienia, użyj <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> właściwość <xref:System.Speech.Synthesis.StateChangedEventArgs> klasy.</span><span class="sxs-lookup"><span data-stu-id="6438c-442">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-443">W poniższym przykładzie pokazano stan <xref:System.Speech.Synthesis.SpeechSynthesizer> przed, podczas i po wypowiedzi w wierszu.</span><span class="sxs-lookup"><span data-stu-id="6438c-443">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " Usage="member this.StateChanged : System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-444">Wywołane, gdy stan <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> zmiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-444">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-445"><xref:System.Speech.Synthesis.SpeechSynthesizer> Zgłasza to zdarzenie po jego wypowiedzi <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> zmiany.</span><span class="sxs-lookup"><span data-stu-id="6438c-445">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="6438c-446">Na przykład i dowiedzieć się więcej o dane skojarzone ze zdarzeniem, zobacz <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6438c-446">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="6438c-447">Aby wstrzymać lub wznowić synteza mowy, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> i <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-447">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberSignature Language="F#" Value="member this.VisemeReached : EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " Usage="member this.VisemeReached : System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-448">Wywoływane, gdy zostanie osiągnięty viseme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-448">Raised when a viseme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-449">Viseme to podstawowe pozycja ujścia i rozpoznawania twarzy, gdy ustalające phoneme.</span><span class="sxs-lookup"><span data-stu-id="6438c-449">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="6438c-450">Visemes to wizualne reprezentacje fonemów.</span><span class="sxs-lookup"><span data-stu-id="6438c-450">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="6438c-451">System.Speech obsługuje 21 visemes US English, z których każdy odnosi się do co najmniej jeden fonemów.</span><span class="sxs-lookup"><span data-stu-id="6438c-451">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="6438c-452"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> zdarzenia są wywoływane, gdy nowy phoneme, osiągnięto ma różne viseme odpowiednie, niż poprzednie phoneme, osiągnięto.</span><span class="sxs-lookup"><span data-stu-id="6438c-452"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="6438c-453">Ponieważ niektóre visemes stanowią więcej niż jeden phoneme <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> zdarzeń nie jest generowany, jeśli dalej phoneme, osiągnięto odnosi się do tego samego viseme jako phoneme poprzedniego.</span><span class="sxs-lookup"><span data-stu-id="6438c-453">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="6438c-454">Na przykład wypowiadanych słów "tej strefy" <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> zdarzenie jest zgłaszane w "s" w "this" i "z" w "w strefie".</span><span class="sxs-lookup"><span data-stu-id="6438c-454">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="6438c-455">Jednak <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> zdarzeń nie jest inicjowane dla "z" w "w strefie", ponieważ odnosi się do tego samego viseme jako "s" w "this".</span><span class="sxs-lookup"><span data-stu-id="6438c-455">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="6438c-456">Oto lista 21 fonemów nieokreślone i phoneme grup, które odpowiadają viseme w US English.</span><span class="sxs-lookup"><span data-stu-id="6438c-456">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="6438c-457">Viseme</span><span class="sxs-lookup"><span data-stu-id="6438c-457">Viseme</span></span>|<span data-ttu-id="6438c-458">Phoneme(s)</span><span class="sxs-lookup"><span data-stu-id="6438c-458">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="6438c-459">0</span><span class="sxs-lookup"><span data-stu-id="6438c-459">0</span></span>|<span data-ttu-id="6438c-460">wyciszenia</span><span class="sxs-lookup"><span data-stu-id="6438c-460">silence</span></span>|  
|<span data-ttu-id="6438c-461">1</span><span class="sxs-lookup"><span data-stu-id="6438c-461">1</span></span>|<span data-ttu-id="6438c-462">AE, ax, ah</span><span class="sxs-lookup"><span data-stu-id="6438c-462">ae, ax, ah</span></span>|  
|<span data-ttu-id="6438c-463">2</span><span class="sxs-lookup"><span data-stu-id="6438c-463">2</span></span>|<span data-ttu-id="6438c-464">aa</span><span class="sxs-lookup"><span data-stu-id="6438c-464">aa</span></span>|  
|<span data-ttu-id="6438c-465">3</span><span class="sxs-lookup"><span data-stu-id="6438c-465">3</span></span>|<span data-ttu-id="6438c-466">ao</span><span class="sxs-lookup"><span data-stu-id="6438c-466">ao</span></span>|  
|<span data-ttu-id="6438c-467">4</span><span class="sxs-lookup"><span data-stu-id="6438c-467">4</span></span>|<span data-ttu-id="6438c-468">klucza, eh, Niestety</span><span class="sxs-lookup"><span data-stu-id="6438c-468">ey, eh, uh</span></span>|  
|<span data-ttu-id="6438c-469">5</span><span class="sxs-lookup"><span data-stu-id="6438c-469">5</span></span>|<span data-ttu-id="6438c-470">ER</span><span class="sxs-lookup"><span data-stu-id="6438c-470">er</span></span>|  
|<span data-ttu-id="6438c-471">6</span><span class="sxs-lookup"><span data-stu-id="6438c-471">6</span></span>|<span data-ttu-id="6438c-472">y, iy, będzie, ix</span><span class="sxs-lookup"><span data-stu-id="6438c-472">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="6438c-473">7</span><span class="sxs-lookup"><span data-stu-id="6438c-473">7</span></span>|<span data-ttu-id="6438c-474">w, uw</span><span class="sxs-lookup"><span data-stu-id="6438c-474">w, uw</span></span>|  
|<span data-ttu-id="6438c-475">8</span><span class="sxs-lookup"><span data-stu-id="6438c-475">8</span></span>|<span data-ttu-id="6438c-476">ow</span><span class="sxs-lookup"><span data-stu-id="6438c-476">ow</span></span>|  
|<span data-ttu-id="6438c-477">9</span><span class="sxs-lookup"><span data-stu-id="6438c-477">9</span></span>|<span data-ttu-id="6438c-478">aw</span><span class="sxs-lookup"><span data-stu-id="6438c-478">aw</span></span>|  
|<span data-ttu-id="6438c-479">10</span><span class="sxs-lookup"><span data-stu-id="6438c-479">10</span></span>|<span data-ttu-id="6438c-480">Oy</span><span class="sxs-lookup"><span data-stu-id="6438c-480">oy</span></span>|  
|<span data-ttu-id="6438c-481">11</span><span class="sxs-lookup"><span data-stu-id="6438c-481">11</span></span>|<span data-ttu-id="6438c-482">dni</span><span class="sxs-lookup"><span data-stu-id="6438c-482">ay</span></span>|  
|<span data-ttu-id="6438c-483">12</span><span class="sxs-lookup"><span data-stu-id="6438c-483">12</span></span>|<span data-ttu-id="6438c-484">h</span><span class="sxs-lookup"><span data-stu-id="6438c-484">h</span></span>|  
|<span data-ttu-id="6438c-485">13</span><span class="sxs-lookup"><span data-stu-id="6438c-485">13</span></span>|<span data-ttu-id="6438c-486">r</span><span class="sxs-lookup"><span data-stu-id="6438c-486">r</span></span>|  
|<span data-ttu-id="6438c-487">14</span><span class="sxs-lookup"><span data-stu-id="6438c-487">14</span></span>|<span data-ttu-id="6438c-488">l</span><span class="sxs-lookup"><span data-stu-id="6438c-488">l</span></span>|  
|<span data-ttu-id="6438c-489">15</span><span class="sxs-lookup"><span data-stu-id="6438c-489">15</span></span>|<span data-ttu-id="6438c-490">s, z</span><span class="sxs-lookup"><span data-stu-id="6438c-490">s, z</span></span>|  
|<span data-ttu-id="6438c-491">16</span><span class="sxs-lookup"><span data-stu-id="6438c-491">16</span></span>|<span data-ttu-id="6438c-492">sh, ch, jh, zh</span><span class="sxs-lookup"><span data-stu-id="6438c-492">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="6438c-493">17</span><span class="sxs-lookup"><span data-stu-id="6438c-493">17</span></span>|<span data-ttu-id="6438c-494">TH, dh</span><span class="sxs-lookup"><span data-stu-id="6438c-494">th, dh</span></span>|  
|<span data-ttu-id="6438c-495">18</span><span class="sxs-lookup"><span data-stu-id="6438c-495">18</span></span>|<span data-ttu-id="6438c-496">f, v</span><span class="sxs-lookup"><span data-stu-id="6438c-496">f, v</span></span>|  
|<span data-ttu-id="6438c-497">19</span><span class="sxs-lookup"><span data-stu-id="6438c-497">19</span></span>|<span data-ttu-id="6438c-498">d, t, n</span><span class="sxs-lookup"><span data-stu-id="6438c-498">d, t, n</span></span>|  
|<span data-ttu-id="6438c-499">20</span><span class="sxs-lookup"><span data-stu-id="6438c-499">20</span></span>|<span data-ttu-id="6438c-500">k, g, ng</span><span class="sxs-lookup"><span data-stu-id="6438c-500">k, g, ng</span></span>|  
|<span data-ttu-id="6438c-501">21</span><span class="sxs-lookup"><span data-stu-id="6438c-501">21</span></span>|<span data-ttu-id="6438c-502">p, b, m</span><span class="sxs-lookup"><span data-stu-id="6438c-502">p, b, m</span></span>|  
  
 <span data-ttu-id="6438c-503">Aby uzyskać informacje dotyczące danych skojarzonych z `VisemeReached` zdarzeń, zobacz <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6438c-503">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Voice : System.Speech.Synthesis.VoiceInfo" Usage="System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-504">Pobiera informacje o bieżącym głos <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-504">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6438c-505">Zwraca informacje o bieżącym głos <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-505">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-506">Podczas inicjowania nowego <xref:System.Speech.Synthesis.SpeechSynthesizer>, używa ona głos system domyślny.</span><span class="sxs-lookup"><span data-stu-id="6438c-506">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="6438c-507">Aby skonfigurować <xref:System.Speech.Synthesis.SpeechSynthesizer> obiektu do jednej głosów synteza mowy zainstalowane, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-507">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="6438c-508">Aby uzyskać informacje o tym, które są zainstalowane głosów, należy użyć <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metody i <xref:System.Speech.Synthesis.VoiceInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="6438c-508">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6438c-509">Poniższy przykład inicjuje wystąpienie <xref:System.Speech.Synthesis.SpeechSynthesizer> i pobiera informacje o bieżącym głosu.</span><span class="sxs-lookup"><span data-stu-id="6438c-509">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberSignature Language="F#" Value="member this.VoiceChange : EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " Usage="member this.VoiceChange : System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-510">Wywołane, gdy głos <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> zmiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-510">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6438c-511">Na przykład i informacje o danych, skojarzone ze zdarzeniem, zobacz <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6438c-511">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="6438c-512">Głos można zmienić, <xref:System.Speech.Synthesis.SpeechSynthesizer> korzysta z dowolnym <xref:System.Speech.Synthesis.PromptBuilder>firmy <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> metody lub <xref:System.Speech.Synthesis.SpeechSynthesizer>firmy <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> lub <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6438c-512">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Volume : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6438c-513">Pobiera lub ustawia ilość danych wyjściowych <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-513">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6438c-514">Zwraca ilość <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, od 0 do 100.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6438c-514">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6438c-515">W poniższym przykładzie ustawiono ilości <xref:System.Speech.Synthesis.SpeechSynthesizer>audio danych wyjściowych plików WAV i syntezatora mowy.</span><span class="sxs-lookup"><span data-stu-id="6438c-515">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>