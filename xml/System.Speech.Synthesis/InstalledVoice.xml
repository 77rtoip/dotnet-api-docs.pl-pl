<Type Name="InstalledVoice" FullName="System.Speech.Synthesis.InstalledVoice">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4b1113b52add5a80fb4e18a81de9b4d78537510b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69100604" /></Metadata><TypeSignature Language="C#" Value="public class InstalledVoice" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstalledVoice extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.InstalledVoice" />
  <TypeSignature Language="VB.NET" Value="Public Class InstalledVoice" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstalledVoice" />
  <TypeSignature Language="F#" Value="type InstalledVoice = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{VoiceInfo.Name} [{Enabled ? "Enabled" : "Disabled"}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera informacje o głosowaniu syntezy mowy zainstalowaną w systemie Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej klasy, aby uzyskać informacje na temat zainstalowanego głosu, w tym jego kulturę, nazwę, płeć, wiek i czy jest włączona.  
  
 Aby dokonać zamiany tekstu na mowę przy użyciu języka określonego we <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> właściwości, należy zainstalować aparat syntezy mowy obsługujący ten kod w języku kraju. Aparaty syntezy mowy dostarczane z systemem Microsoft Windows 7 współpracują z następującymi kodami języka:  
  
-   en-US. Angielski (Stany Zjednoczone)  
  
-   zh-CN. Chiński (Chiny)  
  
-   zh-TW. Chiński (Tajwan)  
  
 Dozwolone są również dwuliterowe kody języka, takie jak "en".  
  
   
  
## Examples  
 Poniższy przykład jest częścią aplikacji konsolowej, która inicjuje <xref:System.Speech.Synthesis.SpeechSynthesizer> obiekt i wyjście do konsoli listą zainstalowanych głosów (aparatów dla syntezy mowy) i pokazuje informacje dostępne dla każdego głosu.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.InstalledVoice.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Speech.Synthesis.InstalledVoice.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, czy za pomocą głosu można generować mowę.</summary>
        <value><see langword="bool" /> Zwraca wartość reprezentującą włączony stan głosu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości jest `true` domyślnie. Gdy aplikacja wywołuje <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>metodę, sprawdza, czy każdy głosy znaleziony w rejestrze spełnia pewne minimalne kryteria. Dla dowolnego głosu, którego weryfikacja nie <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> powiodła <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> się, `false`ustawia jego właściwość na. Aplikacja nie może wybrać głosu, którego <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Właściwość to `false`. Zazwyczaj aplikacje nie będą ustawiać <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> właściwości głosu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.InstalledVoice.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="installedVoice.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt, który może być rzutowany do wystąpienia <see cref="T:System.Speech.Synthesis.InstalledVoice" />.</param>
        <summary>Określa, czy dany obiekt jest wystąpieniem <see cref="T:System.Speech.Synthesis.InstalledVoice" /> i jest równy bieżącemu <see cref="T:System.Speech.Synthesis.InstalledVoice" />wystąpieniu.</summary>
        <returns>Zwraca <see langword="true" /> czy bieżące wystąpienie elementu <see cref="T:System.Speech.Synthesis.InstalledVoice" /> <paramref name="obj" /> i uzyskane z argumentu jest równe, w przeciwnym razie zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca wartość false, jeśli <xref:System.Object> nie można rzutować wartości dostarczonej `obj` przez <xref:System.Speech.Synthesis.InstalledVoice>argument.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.InstalledVoice.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="installedVoice.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zawiera kod skrótu dla obiektu <c>InstalledVoice</c> .</summary>
        <returns>Kod skrótu dla bieżącego <see cref="T:System.Speech.Synthesis.InstalledVoice" /> obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VoiceInfo">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo VoiceInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo VoiceInfo" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.InstalledVoice.VoiceInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VoiceInfo As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ VoiceInfo { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VoiceInfo : System.Speech.Synthesis.VoiceInfo" Usage="System.Speech.Synthesis.InstalledVoice.VoiceInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje o głosowaniu, takie jak kultura, nazwisko, płeć i wiek.</summary>
        <value>Informacje o zainstalowanym głosowaniu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
