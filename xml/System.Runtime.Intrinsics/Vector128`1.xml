<Type Name="Vector128&lt;T&gt;" FullName="System.Runtime.Intrinsics.Vector128&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8ef060aff48bba4458a05aec4527e119be7a8ba" /><Meta Name="ms.sourcegitcommit" Value="634678f7ccd2928c6b2cf792a301b079b63639af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/26/2019" /><Meta Name="ms.locfileid" Value="68543390" /></Metadata><TypeSignature Language="C#" Value="public struct Vector128&lt;T&gt; : IEquatable&lt;System.Runtime.Intrinsics.Vector128&lt;T&gt;&gt; where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Vector128`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Runtime.Intrinsics.Vector128`1&lt;!T&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Intrinsics.Vector128`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Vector128(Of T)&#xA;Implements IEquatable(Of Vector128(Of T))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Vector128 : IEquatable&lt;System::Runtime::Intrinsics::Vector128&lt;T&gt;&gt;" />
  <TypeSignature Language="F#" Value="type Vector128&lt;'T (requires 'T : struct)&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Intrinsics.Experimental</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Runtime.Intrinsics.Vector128&lt;T&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Intrinsics.Vector128`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Runtime.Intrinsics.Vector128&lt;'T (requires 'T : struct)&gt;.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d424b-101">Pobiera liczbę <typeparamref name="T" /> , która znajduje się <see cref="T:System.Runtime.Intrinsics.Vector128`1" />w.</span><span class="sxs-lookup"><span data-stu-id="d424b-101">Gets the number of <typeparamref name="T" /> that are in a <see cref="T:System.Runtime.Intrinsics.Vector128`1" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d424b-102">Typ bieżącego wystąpienia (<typeparamref name="T" />) nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d424b-102">The type of the current instance (<typeparamref name="T" />) is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector128`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="vector128.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d424b-103">Obiekt do porównania z bieżącym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="d424b-103">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="d424b-104">Określa, czy określony obiekt jest równy bieżącemu wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="d424b-104">Determines whether the specified object is equal to the current instance.</span></span></summary>
        <returns><span data-ttu-id="d424b-105"><c>prawda</c> , <paramref name="obj" /> jeśli jest <see cref="T:System.Runtime.Intrinsics.Vector128`1" /> i jest równa bieżącemu wystąpieniu; w przeciwnym razie, <c>Fałsz</c>.</span><span class="sxs-lookup"><span data-stu-id="d424b-105"><c>true</c> if <paramref name="obj" /> is a <see cref="T:System.Runtime.Intrinsics.Vector128`1" /> and is equal to the current instance; otherwise, <c>false</c>.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d424b-106">Typ bieżącego wystąpienia (<typeparamref name="T" />) nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d424b-106">The type of the current instance (<typeparamref name="T" />) is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Runtime.Intrinsics.Vector128&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Runtime.Intrinsics.Vector128`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector128`1.Equals(System.Runtime.Intrinsics.Vector128{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Vector128(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Runtime::Intrinsics::Vector128&lt;T&gt; other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Runtime.Intrinsics.Vector128&lt;'T (requires 'T : struct)&gt; -&gt; bool" Usage="vector128.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Runtime.Intrinsics.Vector128&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d424b-107"><see cref="T:System.Runtime.Intrinsics.Vector128`1" /> Do porównania z bieżącym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="d424b-107">The <see cref="T:System.Runtime.Intrinsics.Vector128`1" /> to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="d424b-108">Określa, czy określony <see cref="T:System.Runtime.Intrinsics.Vector128`1" /> element jest równy bieżącemu wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="d424b-108">Determines whether the specified <see cref="T:System.Runtime.Intrinsics.Vector128`1" /> is equal to the current instance.</span></span></summary>
        <returns><span data-ttu-id="d424b-109"><c>prawda</c> , <paramref name="other" /> jeśli jest równe bieżącemu wystąpieniu; w przeciwnym razie, <c>Fałsz</c>.</span><span class="sxs-lookup"><span data-stu-id="d424b-109"><c>true</c> if <paramref name="other" /> is equal to the current instance; otherwise, <c>false</c>.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d424b-110">Typ bieżącego wystąpienia (<typeparamref name="T" />) nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d424b-110">The type of the current instance (<typeparamref name="T" />) is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector128`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="vector128.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d424b-111">Pobiera kod skrótu dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d424b-111">Gets the hash code for the instance.</span></span></summary>
        <returns><span data-ttu-id="d424b-112">Kod skrótu wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d424b-112">The hash code for the instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d424b-113">Typ bieżącego wystąpienia (<typeparamref name="T" />) nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d424b-113">The type of the current instance (<typeparamref name="T" />) is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Vector128`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="vector128.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d424b-114">Konwertuje bieżące wystąpienie na równoważną reprezentację ciągu.</span><span class="sxs-lookup"><span data-stu-id="d424b-114">Converts the current instance to an equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d424b-115">Odpowiednik reprezentacji bieżącego wystąpienia w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="d424b-115">An equivalent string representation of the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d424b-116">Typ bieżącego wystąpienia (<typeparamref name="T" />) nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d424b-116">The type of the current instance (<typeparamref name="T" />) is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Runtime.Intrinsics.Vector128&lt;T&gt; Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.Intrinsics.Vector128`1&lt;!T&gt; Zero" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Intrinsics.Vector128`1.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As Vector128(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Intrinsics::Vector128&lt;T&gt; Zero { System::Runtime::Intrinsics::Vector128&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Zero : System.Runtime.Intrinsics.Vector128&lt;'T (requires 'T : struct)&gt;" Usage="System.Runtime.Intrinsics.Vector128&lt;'T (requires 'T : struct)&gt;.Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Intrinsics.Vector128&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d424b-117">Pobiera nowy <see cref="T:System.Runtime.Intrinsics.Vector128`1" /> element z wszystkimi elementami zainicjowanymi do zera.</span><span class="sxs-lookup"><span data-stu-id="d424b-117">Gets a new <see cref="T:System.Runtime.Intrinsics.Vector128`1" /> with all elements initialized to zero.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d424b-118">Typ bieżącego wystąpienia (<typeparamref name="T" />) nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d424b-118">The type of the current instance (<typeparamref name="T" />) is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>