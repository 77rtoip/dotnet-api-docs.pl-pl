<Type Name="ManagementKeyAttribute" FullName="System.Management.Instrumentation.ManagementKeyAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fb4b88e95837b7083e3fb3bbba68e224dbaf4b57" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69277194" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManagementKeyAttribute : System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementKeyAttribute extends System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementKeyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementKeyAttribute&#xA;Inherits ManagementMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementKeyAttribute sealed : System::Management::Instrumentation::ManagementMemberAttribute" />
  <TypeSignature Language="F#" Value="type ManagementKeyAttribute = class&#xA;    inherit ManagementMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Atrybut ManagementKey identyfikuje właściwości klucza klasy usługi WMI.  
  
Uwaga: biblioteki WMI .NET są teraz uwzględniane w stanie końcowym i nie będą dostępne żadne dalsze programowanie, ulepszenia ani aktualizacje dla problemów związanych z niebezpieczeństwem, które mają wpływ na te biblioteki. [Interfejsy API mi](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) powinny być używane dla wszystkich nowych rozwiązań programistycznych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli klasa WMI nie jest klasą pojedynczą, może mieć wiele odpowiadających jej wystąpień. Klienci klasy muszą być w stanie jednoznacznie identyfikować konkretne wystąpienie, które są zainteresowane. Tak więc, jako moduł zapisujący dostawcy, należy wybrać właściwość lub zestaw właściwości, które jednoznacznie identyfikują wystąpienie każdej klasy WMI. Ten <xref:System.Management.Instrumentation.ManagementKeyAttribute> atrybut służy do identyfikowania tych właściwości klucza. Właściwości zidentyfikowane jako klucze mają takie samo zachowanie w czasie wykonywania jak właściwości tylko do odczytu wskazywane przez <xref:System.Management.Instrumentation.ManagementProbeAttribute> atrybut.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Management.Instrumentation.ManagementKeyAttribute> jak używać do oznaczania pola jako właściwości klucza klasy WMI.  
  
```csharp  
[ManagementKey]  
public int id;  
```  
  
 W następnym przykładzie pokazano, jak używać atrybutu <xref:System.Management.Instrumentation.ManagementKeyAttribute> , aby oznaczyć właściwość klucza klasy WMI.  
  
```csharp  
// Use the ManagementKey attribute to specify that this property   
// is used as the key identifier of this class and for the WMI  
// instances of this class.  This property must be unique for each  
// class instance.  
[ManagementKey]  
public int Id  
{  
    get { return System.Diagnostics.Process.GetCurrentProcess().Id; }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Management.Instrumentation.ManagementProbeAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementTaskAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/d7eb170a-f1ba-454c-a8f0-b9acd2008464">Atrybuty rozszerzeń dostawcy WMI.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementKeyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementKeyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.Instrumentation.ManagementKeyAttribute" /> klasy. To jest Konstruktor bez parametrów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
