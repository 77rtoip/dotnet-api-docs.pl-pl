<Type Name="InstrumentationClassAttribute" FullName="System.Management.Instrumentation.InstrumentationClassAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cb5169cd68427155d981f6f126fc370ababe8080" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30457347" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InstrumentationClassAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstrumentationClassAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.InstrumentationClassAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class InstrumentationClassAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstrumentationClassAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, czy klasa zawiera zdarzeń lub wystąpienie instrumentacji.  
  
 Uwaga: do bibliotek WMI .NET są teraz wziąć pod uwagę stanu końcowego, a nie dalszy rozwój, ulepszenia lub aktualizacje będą dostępne dla problemy związane z zabezpieczeniami wpływu na te biblioteki. [API MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) powinna być używana do wszystkich nowych wdrożeń.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstrumentationClassAttribute (System.Management.Instrumentation.InstrumentationType instrumentationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Management.Instrumentation.InstrumentationType instrumentationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstrumentationClassAttribute(System::Management::Instrumentation::InstrumentationType instrumentationType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instrumentationType" Type="System.Management.Instrumentation.InstrumentationType" />
      </Parameters>
      <Docs>
        <param name="instrumentationType">Typ Instrumentacji udostępniane przez tę klasę.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> klasy, która jest używana, gdy ten typ pochodzi z innego typu, który ma <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> atrybutu, lub jeśli to jest klasa Instrumentacji najwyższego poziomu (na przykład wystąpienie lub abstrakcyjny klasy bez clas podstawowej s lub zdarzenia pochodzące z **__ExtrinsicEvent**).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Zabezpieczenia.NET Framework  
 Pełne zaufanie do bezpośredniego wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstrumentationClassAttribute (System.Management.Instrumentation.InstrumentationType instrumentationType, string managedBaseClassName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Management.Instrumentation.InstrumentationType instrumentationType, string managedBaseClassName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstrumentationClassAttribute(System::Management::Instrumentation::InstrumentationType instrumentationType, System::String ^ managedBaseClassName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instrumentationType" Type="System.Management.Instrumentation.InstrumentationType" />
        <Parameter Name="managedBaseClassName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instrumentationType">Typ Instrumentacji udostępniane przez tę klasę.</param>
        <param name="managedBaseClassName">Nazwa klasy podstawowej.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> klasy, która ma schematu dla istniejącej klasy podstawowej. Klasa musi zawierać definicji prawidłowego elementu członkowskiego dla właściwości istniejącej klasy podstawowej usługi WMI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Zabezpieczenia.NET Framework  
 Pełne zaufanie do bezpośredniego wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstrumentationType">
      <MemberSignature Language="C#" Value="public System.Management.Instrumentation.InstrumentationType InstrumentationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Instrumentation.InstrumentationType InstrumentationType" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstrumentationType As InstrumentationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::Instrumentation::InstrumentationType InstrumentationType { System::Management::Instrumentation::InstrumentationType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.InstrumentationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ Instrumentacji udostępniane przez tę klasę.</summary>
        <value>Zwraca <see cref="T:System.Management.Instrumentation.InstrumentationType" /> wartość wyliczenia z typem Instrumentacji udostępniane przez tę klasę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>Wartość właściwości  
 Zawiera <xref:System.Management.Instrumentation.InstrumentationType> wartość, która wskazuje, czy jest to zdarzenie instrumentowanych, wystąpień lub klasy abstrakcyjnej.  
  
## <a name="net-framework-security"></a>Zabezpieczenia.NET Framework  
 Pełne zaufanie do bezpośredniego wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedBaseClassName">
      <MemberSignature Language="C#" Value="public string ManagedBaseClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ManagedBaseClassName" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManagedBaseClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ManagedBaseClassName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę klasy podstawowej tej klasy instrumentacji.</summary>
        <value>Zwraca <see cref="T:System.String" /> zawierający nazwę klasy podstawowej tej klasy instrumentacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>Wartość właściwości  
 Jeśli nie `null`, to ciąg wskazuje klasy podstawowej usługi WMI, która dziedziczy po tej klasie w schemacie CIM.  
  
## <a name="net-framework-security"></a>Zabezpieczenia.NET Framework  
 Pełne zaufanie do bezpośredniego wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>