<Type Name="WmiConfigurationAttribute" FullName="System.Management.Instrumentation.WmiConfigurationAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad0eb267273b36551523957ad07b77fe881aee9f" />
    <Meta Name="ms.sourcegitcommit" Value="ff790cada015edfb865078fd6bc24fd61fa40b48" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/30/2018" />
    <Meta Name="ms.locfileid" Value="37139712" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WmiConfigurationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WmiConfigurationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WmiConfigurationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiConfigurationAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WmiConfigurationAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ten atrybut WmiConfiguration wskazuje, że zestaw zawiera kod, który implementuje dostawcę WMI za pomocą modelu WMI.NET dostawcy rozszerzeń. Atrybut akceptuje parametrów, które ustanowienia wysokiego poziomu konfiguracji zaimplementowanym dostawcy WMI.  Uwaga: do bibliotek WMI .NET są teraz wziąć pod uwagę stanu końcowego, a nie dalszy rozwój, ulepszenia lub aktualizacje będą dostępne dla problemy związane z zabezpieczeniami wpływu na te biblioteki. [API MI] (https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) powinna być używana do wszystkich nowych wdrożeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli wymieniono parametry akceptowane przez ten atrybut oraz jakie aspektów konfiguracji dostawcy go umożliwia kontrolowanie.  
  
|Parametr|Konfiguruje|  
|---------------|----------------|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.Scope>|Przestrzeń nazw, w którym dostawca udostępnia klasy.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity>|Zabezpieczenia (DACL) przestrzeni nazw używany.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel>|-Hostingu model, który będzie używany przez dostawcę.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel>|-Tryb personifikacji dostawcy.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup>|Grupa hostingu należącą do dostawcy. Ten parametr ma zastosowanie tylko do dostawców procesu.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction>|Zabezpieczenia (DACL) dla dostawcy usługi WMI.|  
  
   
  
## Examples  
  
```  
// Specify that this assembly contains code that implements a WMI  
// Provider. Use the assembly:WmiConfiguration attribute to define  
// the WMI namespace, the hosting model, and the impersonation mode  
// of the WMI provider.  
// The attribute below specifies that the class this provider  
// exposes to WMI will be in the root/MortgageCalc namespace, will  
// use the decoupled hosting model and will not allow the provider  
// to impersonate its callers.  
  
[assembly: WmiConfiguration("root/MortgageCalc",HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false)]  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiConfigurationAttribute (string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiConfigurationAttribute(System::String ^ scope);" />
      <MemberSignature Language="F#" Value="new System.Management.Instrumentation.WmiConfigurationAttribute : string -&gt; System.Management.Instrumentation.WmiConfigurationAttribute" Usage="new System.Management.Instrumentation.WmiConfigurationAttribute scope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">Przestrzeń nazw usługi WMI, w którym dostawca uwidoczni klasy. Na przykład "root\MyProviderNamespace".</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.Instrumentation.WmiConfigurationAttribute" /> klasy, która określa obszar nazw usługi WMI, w którym dostawca WMI uwidoczni klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostawca WMI musi ujawniać jej klas w przestrzeni nazw. To jest konstruktor wymaga zakresu jako parametr.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingGroup">
      <MemberSignature Language="C#" Value="public string HostingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HostingGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingGroup : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia hostingu grupy dla dostawcy usługi WMI.</summary>
        <value>A <see cref="T:System.String" /> wartość, która wskazuje hostingu grupy dla dostawcy usługi WMI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dotyczy tylko grup hostujących dostawców, które są hostowane w procesie. Wartość jest ignorowana w przypadku rozdzielonymi dostawców.  
  
 Grupa hostingu jest zestaw dostawców w procesie, które są wszystkie przydzielone tej samej nazwy grupy hostingu. Hostingu Nazwa grupy jest ciąg, który należy zdefiniować do logicznego grupowania dostawców. Wszystkich dostawców w trakcie w tej samej grupie hostingu uruchomiony w ramach tego samego kontekstu zabezpieczeń znajdują się w obrębie jednego wystąpienia procesu Wmiprvse.exe. Tak dostawców, które współużytkują tego samego hostingu grupy i zabezpieczeń kontekstu współużytkować ten sam proces hosta usługi.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Management.Instrumentation.WmiConfigurationAttribute> służy do wskazania, że znajduje się w zestawie implementuje dostawcę w procesie, który jest uruchamiany w kontekście zabezpieczeń usługi sieciowej i znajduje się w wystąpieniu procesu Wmiprvse.exe, który również obsługuje dowolne inne w trakcie dostawców w tej samej grupie hostingu, które również działają w kontekście zabezpieczeń usługi sieciowej.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService), HostingGroup = "MyProviders"]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingModel">
      <MemberSignature Language="C#" Value="public System.Management.Instrumentation.ManagementHostingModel HostingModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Instrumentation.ManagementHostingModel HostingModel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingModel As ManagementHostingModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::Instrumentation::ManagementHostingModel HostingModel { System::Management::Instrumentation::ManagementHostingModel get(); void set(System::Management::Instrumentation::ManagementHostingModel value); };" />
      <MemberSignature Language="F#" Value="member this.HostingModel : System.Management.Instrumentation.ManagementHostingModel with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.ManagementHostingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia model hostingu dla dostawcy usługi WMI.</summary>
        <value>A <see cref="T:System.Management.Instrumentation.ManagementHostingModel" /> wartość, która wskazuje hostingu modelu dostawcy WMI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostawcy WMI może być obsługiwany przez aplikację lub usługę WMI. Obsługiwane przez aplikację dostawcy WMI są nazywane rozdzielonymi dostawców. Te są obsługiwane przez usługę WMI są nazywane dostawców w procesie. Hostingu wartość modelu określa zarówno hostingu modelu, a w przypadku dostawców w procesie, konto (kontekstu zabezpieczeń), na którym działa dostawcy. Aby uzyskać więcej szczegółów na temat możliwych wartości HostingModel zobacz <xref:System.Management.Instrumentation.ManagementHostingModel>.  
  
 Aby dowiedzieć się więcej o hostingu modeli, zobacz [zabezpieczeń i dostawcy hostingu](http://go.microsoft.com/fwlink/?LinkId=100075) tematu w zestawie SDK usługi WMI w witrynie MSDN.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Management.Instrumentation.WmiConfigurationAttribute> służy do wskazania, że jest on zawarty w zestawie implementuje dostawcy, który jest dostępny za pośrednictwem przestrzeni nazw root\NVPair. Ponieważ nie jest modelem hostingu <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled>, jest w trakcie dostawcy. Wartość <xref:System.Management.Instrumentation.ManagementHostingModel.NetworkService> wskazuje, że dostawca programu w trakcie działa w kontekście zabezpieczeń usługi sieciowej.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService)]  
```  
  
 W następnym przykładzie <xref:System.Management.Instrumentation.WmiConfigurationAttribute> służy do wskazania, że jest on zawarty w zestawie implementuje dostawcy, który jest dostępny za pośrednictwem przestrzeni nazw root\NVPair. Wartość <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled> oznacza, że jest odłączonego dostawcy.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.Decoupled)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyLevel">
      <MemberSignature Language="C#" Value="public bool IdentifyLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IdentifyLevel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IdentifyLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IdentifyLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IdentifyLevel : bool with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy dostawca WMI mogą personifikować elementy wywołujące pod. Jeśli wartość to false, nie można spersonifikować dostawcy, a jeśli ma wartość true, mogą personifikować dostawcy.</summary>
        <value>Wartość logiczna wskazująca, czy dostawca może lub nie można spersonifikować jego obiekty wywołujące. Jeśli wartość to false, nie można spersonifikować dostawcy, a jeśli ma wartość true, mogą personifikować dostawcy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz temat "Dostawcy hostingu i zabezpieczenia" w bibliotece MSDN pod [ http://www.msdn.com ](http://www.msdn.com/).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia parametru IdentifyLevel aby wskazać, że dostawca mogą personifikować elementy wywołujące pod.  
  
```  
[assembly: WmiConfiguration("root/MyProv", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = true]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceSecurity">
      <MemberSignature Language="C#" Value="public string NamespaceSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceSecurity" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceSecurity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NamespaceSecurity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceSecurity : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg definicji języka SDDL (Security Descriptor), który określa deskryptora zabezpieczeń w przestrzeni nazw, w którym dostawca udostępnia obiektów zarządzania.</summary>
        <value>Ciąg SDDL reprezentujący deskryptora zabezpieczeń w przestrzeni nazw, w którym dostawca udostępnia obiektów zarządzania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat do reprezentowania deskryptorów zabezpieczeń w formacie SDDL, zobacz [Format ciągu deskryptora zabezpieczeń](http://go.microsoft.com/fwlink/?LinkId=100763) tematu w bibliotece MSDN online.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia parametru NamespaceSecurity można ustawić deskryptora zabezpieczeń dla głównego/SDTest przestrzeni nazw, w którym dostawca zaimplementowana w tym zestawie udostępnia klasy usługi WMI.  
  
```  
[assembly: WmiConfiguration("root/SDTest", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false, NamespaceSecurity = "O:BAG:BAD:(A;CI;0x60003;;;WD)")]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scope As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scope { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scope : string" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obszar nazw usługi WMI, w którym dostawca WMI udostępnia klasy.</summary>
        <value>A <see cref="T:System.String" /> wartość, która wskazuje przestrzeń nazw, w którym dostawca WMI udostępnia klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obszar nazw usługi WMI jest kategorią w repozytorium WMI. Przestrzeń nazw głównego/cimv2 najczęściej używanych przechowuje klas opisujących modelu wspólnych informacji, w wersji 2, zdefiniowane przez konsorcjum pulpitu Management Task Force (DMTF). Twoje dostawców w tej przestrzeni nazw powinny ujawniać tylko, jeśli użytkownik rozszerzanie przy standand modelu CIM. W przeciwnym razie należy utworzyć odpowiedni obszar nazw udostępnia wyraźne użytkownikom typ klasy usługi WMI, które mogą spodziewać można znaleźć w przestrzeni nazw.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityRestriction">
      <MemberSignature Language="C#" Value="public string SecurityRestriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityRestriction" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityRestriction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityRestriction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRestriction : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia deskryptor zabezpieczeń dla dostawcy usługi WMI. Aby uzyskać więcej informacji, zobacz informacje o właściwości SecurityDescriptor w temacie "__Win32Provider" w bibliotece MSDN online w [http://www.msdn.com] (http://www.msdn.com/).</summary>
        <value>A <see cref="T:System.String" /> wartości, która zawiera deskryptora zabezpieczeń dla dostawcy usługi WMI.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>