<Type Name="ManagementEntityAttribute" FullName="System.Management.Instrumentation.ManagementEntityAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62c3aa4612ee994018788707e00ccb46e42d57b6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36478307" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManagementEntityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementEntityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementEntityAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementEntityAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEntityAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ManagementEntityAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1b86f-101">Ten atrybut ManagementEntity wskazuje, że klasa dostarcza informacji zarządzania udostępniany przez dostawcę WMI.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b86f-101">The ManagementEntity attribute indicates that a class provides management information exposed through a WMI provider.</span>
      </span>
      <span data-ttu-id="1b86f-102">Uwaga: do bibliotek WMI .NET są teraz wziąć pod uwagę stanu końcowego, a nie dalszy rozwój, ulepszenia lub aktualizacje będą dostępne dla problemy związane z zabezpieczeniami wpływu na te biblioteki.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b86f-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span>
      </span>
      <span data-ttu-id="1b86f-103">[API MI] (https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) powinna być używana do wszystkich nowych wdrożeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b86f-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b86f-104">Klasy oznaczona przez atrybut musi być publiczna.</span><span class="sxs-lookup"><span data-stu-id="1b86f-104">The class marked by this attribute must be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b86f-105">Poniższy przykład przedstawia użycie atrybutu ManagementEntity, aby oznaczyć klasę.</span><span class="sxs-lookup"><span data-stu-id="1b86f-105">The following example shows how to use the ManagementEntity attribute to mark a class.</span></span>  
  
```  
// Use the ManagementEntity attribute on the class to specify that this // class contains management information that is available from  
// provider.  
  
    [ManagementEntity(Name = "MortgageCalc")]  
    public class MortgageCalcWMIProvider  
    {  
    }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEntityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEntityAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b86f-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.ManagementEntityAttribute" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b86f-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEntityAttribute" /> class.</span>
          </span>
          <span data-ttu-id="1b86f-107">Jest to domyślny konstruktor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b86f-107">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b86f-108">Ten konstruktor nie przyjmuje parametr name.</span><span class="sxs-lookup"><span data-stu-id="1b86f-108">This constructor does not take a name parameter.</span></span> <span data-ttu-id="1b86f-109">Jeśli nie określisz nazwy przy użyciu <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parametru nazwę klasy WMI skojarzone domyślnie zostanie ustawiona nazwa klasy oparte na atrybutach.</span><span class="sxs-lookup"><span data-stu-id="1b86f-109">If you do not specify a name by using the <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parameter, the name of the associated WMI class will default to the name of the attributed class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="External">
      <MemberSignature Language="C#" Value="public bool External { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool External" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.External" />
      <MemberSignature Language="VB.NET" Value="Public Property External As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool External { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.External : bool with get, set" Usage="System.Management.Instrumentation.ManagementEntityAttribute.External" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1b86f-110">Pobiera lub ustawia wartość określającą, czy klasa reprezentuje klasę WMI dostawcy zaimplementowana zewnętrznych do bieżącego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b86f-110">Gets or sets a value that specifies whether the class represents a WMI class in a provider implemented external to the current assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1b86f-111">Wartość logiczna, która ma wartość true, jeśli klasa reprezentuje zewnętrzne klasy usługi WMI i wartość false w przeciwnym razie wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b86f-111">A boolean value that is true if the class represents an external WMI class and false otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b86f-112">To jest używany podczas implementowania dostawcy zawierający implementację klasy, które rozszerzyć istniejących klas abstrakcyjnych usługi WMI.</span><span class="sxs-lookup"><span data-stu-id="1b86f-112">This is used when implementing providers that implement classes that extend existing abstract WMI classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Management.Instrumentation.ManagementEntityAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1b86f-113">Pobiera lub ustawia nazwę klasy usługi WMI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b86f-113">Gets or sets the name of the WMI class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1b86f-114">Ciąg zawierający nazwę klasy usługi WMI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b86f-114">A string that contains the name of the WMI class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b86f-115">Jeśli nie określisz nazwy klasy usługi WMI przez ustawienie dla tej właściwości, klasy usługi WMI domyślnie zostanie ustawiona nazwa klasy oparte na atrybutach.</span><span class="sxs-lookup"><span data-stu-id="1b86f-115">If you do not specify the name of the WMI class by setting this property, the WMI class will default to the name of the attributed class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b86f-116">W poniższym przykładzie parametr Name jest używana można ustawić nazwy reprezentowany przez klasę MortgageCalcWMIProvider klasy usługi WMI.</span><span class="sxs-lookup"><span data-stu-id="1b86f-116">In the following example, the Name parameter is used to set the name of the WMI class represented by the MortgageCalcWMIProvider class.</span></span> <span data-ttu-id="1b86f-117">Ustawia nazwę MortgageCalculator.</span><span class="sxs-lookup"><span data-stu-id="1b86f-117">It sets the name to MortgageCalculator.</span></span> <span data-ttu-id="1b86f-118">Jeśli nazwa parametru nie jest używana, odpowiednich C# nazwy klasy, MortgageCalcWMIProvider w tym przypadku jest używana jako nazwa klasy usługi WMI.</span><span class="sxs-lookup"><span data-stu-id="1b86f-118">If the Name parameter is not used, the corresponding C# class name, MortgageCalcWMIProvider in this case, is used as the WMI class name.</span></span>  
  
```  
[ManagementEntity(Name = "MortgageCalculator")]  
public class MortgageCalcWMIProvider  
{  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton">
      <MemberSignature Language="C#" Value="public bool Singleton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Singleton" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      <MemberSignature Language="VB.NET" Value="Public Property Singleton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Singleton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Singleton : bool with get, set" Usage="System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1b86f-119">Określa, czy skojarzona klasa reprezentuje pojedynczą klasę WMI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b86f-119">Specifies whether the associated class represents a singleton WMI class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1b86f-120">Wartość logiczna, która ma wartość true, jeśli klasa reprezentuje pojedyncze klasy usługi WMI i wartość false w przeciwnym razie wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b86f-120">A boolean value that is true if the class represents a singleton WMI class and false otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b86f-121">Pojedyncza klasa usługi WMI jest jednym którego tylko kiedykolwiek można pojedynczego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="1b86f-121">A singleton WMI class is one for which there can only ever be a single instance.</span></span> <span data-ttu-id="1b86f-122">Mimo że można kodem logiki, aby upewnić się, że kiedykolwiek tworzony jest tylko jedno wystąpienie klasy WMI, ten atrybut parametru zapewnia ustawić zadanie prosty i spójny.</span><span class="sxs-lookup"><span data-stu-id="1b86f-122">Although you could code the logic to ensure that only a single instance of a WMI class is ever created, this parameter attribute is provided to make the task easy and consistent.</span></span>  
  
 <span data-ttu-id="1b86f-123">Podczas pracy z pojedynczego wystąpienia klasy usługi WMI, aplikacje klienckie należy użyć składni specjalnych.</span><span class="sxs-lookup"><span data-stu-id="1b86f-123">When working with singleton WMI classes, client applications must use special syntax.</span></span> <span data-ttu-id="1b86f-124">Aby uzyskać więcej informacji, zobacz Describing wystąpienia obiektu ścieżka tematu w bibliotece MSDN online na [ http://www.msdn.com ](http://www.msdn.com/).</span><span class="sxs-lookup"><span data-stu-id="1b86f-124">For more information, see the Describing an Instance Object Path topic in the MSDN online library at [http://www.msdn.com](http://www.msdn.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b86f-125">Poniższy fragment kodu przedstawia sposób Użyj parametru Singleton, aby wskazać, że klasa C# odpowiada pojedynczą klasę WMI.</span><span class="sxs-lookup"><span data-stu-id="1b86f-125">The following code snippet demonstrates how to use the Singleton parameter to indicate that a C# class corresponds to a singleton WMI class.</span></span>  
  
```  
[ManagementEntity(Singleton=true)]  
public class SingletonSample  
```  
  
 <span data-ttu-id="1b86f-126">Na przykład pełna, praca dostawcy, który implementuje klasy pojedynczej, zobacz [porady: Tworzenie podstawowego dostawcy całkowicie niezależna](http://msdn.microsoft.com/library/1dabd442-c1ff-40a1-bb0e-d7b3566c2300).</span><span class="sxs-lookup"><span data-stu-id="1b86f-126">For a complete, working example of a provider that implements a singleton class, see [How to: Create a Basic Decoupled Provider](http://msdn.microsoft.com/library/1dabd442-c1ff-40a1-bb0e-d7b3566c2300).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>