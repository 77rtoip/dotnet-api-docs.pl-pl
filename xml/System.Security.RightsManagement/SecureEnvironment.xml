<Type Name="SecureEnvironment" FullName="System.Security.RightsManagement.SecureEnvironment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1067195c635fa6803b2807efd360454d4c5d9d97" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55423683" /></Metadata><TypeSignature Language="C#" Value="public class SecureEnvironment : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecureEnvironment extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.SecureEnvironment" />
  <TypeSignature Language="VB.NET" Value="Public Class SecureEnvironment&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureEnvironment : IDisposable" />
  <TypeSignature Language="F#" Value="type SecureEnvironment = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje sesję klienta bezpiecznej Aktywacja użytkownika, powiązań licencji i innych operacji zarządzania prawami.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podobnie jak w przypadku innych <xref:System.Security.RightsManagement> typów <xref:System.Security.RightsManagement.SecureEnvironment> jest tylko w pełni zaufane aplikacje.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Security.RightsManagement.SecureEnvironment> klasy  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationManifest">
      <MemberSignature Language="C#" Value="public string ApplicationManifest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationManifest" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationManifest As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationManifest { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationManifest : string" Usage="System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" /> określony podczas <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> został utworzony.</summary>
        <value>Manifest aplikacji, aby określić <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" /> metody podczas <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> zostanie utworzony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest%2A> metody.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy sesję klienta bezpieczne dla operacji zarządzania prawami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak używać tej metody do tworzenia bezpiecznego środowiska.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.ContentUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.RightsManagement.SecureEnvironment Create(string applicationManifest, class System.Security.RightsManagement.ContentUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (applicationManifest As String, user As ContentUser) As SecureEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::RightsManagement::SecureEnvironment ^ Create(System::String ^ applicationManifest, System::Security::RightsManagement::ContentUser ^ user);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Security.RightsManagement.ContentUser -&gt; System.Security.RightsManagement.SecureEnvironment" Usage="System.Security.RightsManagement.SecureEnvironment.Create (applicationManifest, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.SecureEnvironment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationManifest" Type="System.String" />
        <Parameter Name="user" Type="System.Security.RightsManagement.ContentUser" />
      </Parameters>
      <Docs>
        <param name="applicationManifest">Manifest aplikacji prawa.</param>
        <param name="user">Użytkownika lub grupę użytkowników przyznawania dostępu do zawartości zarządzanej prawami.</param>
        <summary>Tworzy klienta bezpiecznej sesji dla określonego użytkownika z manifestem danego praw.</summary>
        <returns>Sesji klienta bezpiecznej aktywacji, powiązanie licencji i innych operacji zarządzania prawami.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> metoda jest przeznaczona do użytku z użytkowników, którzy są już aktywowana, takie jak realizowane na liście zwróciło <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.  Użyj alternatywna <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> metody dla użytkowników, którzy nie są jeszcze aktywowane.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać tej metody do tworzenia bezpiecznego środowiska.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.RightsManagement.UserActivationMode" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.AuthenticationType authentication, System.Security.RightsManagement.UserActivationMode userActivationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.RightsManagement.SecureEnvironment Create(string applicationManifest, valuetype System.Security.RightsManagement.AuthenticationType authentication, valuetype System.Security.RightsManagement.UserActivationMode userActivationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::RightsManagement::SecureEnvironment ^ Create(System::String ^ applicationManifest, System::Security::RightsManagement::AuthenticationType authentication, System::Security::RightsManagement::UserActivationMode userActivationMode);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Security.RightsManagement.AuthenticationType * System.Security.RightsManagement.UserActivationMode -&gt; System.Security.RightsManagement.SecureEnvironment" Usage="System.Security.RightsManagement.SecureEnvironment.Create (applicationManifest, authentication, userActivationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.SecureEnvironment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationManifest" Type="System.String" />
        <Parameter Name="authentication" Type="System.Security.RightsManagement.AuthenticationType" />
        <Parameter Name="userActivationMode" Type="System.Security.RightsManagement.UserActivationMode" />
      </Parameters>
      <Docs>
        <param name="applicationManifest">Manifest aplikacji prawa.</param>
        <param name="authentication">Metoda uwierzytelniania.</param>
        <param name="userActivationMode">Typ certyfikatu konta praw użytkownika.</param>
        <summary>Tworzy sesję klienta bezpiecznej podany manifest aplikacji prawa <see cref="T:System.Security.RightsManagement.AuthenticationType" />, i <see cref="T:System.Security.RightsManagement.UserActivationMode" />.</summary>
        <returns>Sesji klienta bezpiecznej aktywacji, powiązanie licencji i innych operacji zarządzania prawami.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> metoda jest przeznaczona dla nowych użytkowników, które nie są jeszcze aktywowane.  
  
 Aktywowanie nowego użytkownika zawiera transakcji w obie strony serwera można uzyskać certyfikat użytkownika i klienta certyfikatu licencji.  
  
 Alternatywna <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> metoda może być używana, jeśli użytkownik został już aktywowany, takie jak realizowane na liście zwróciło <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać tej metody do tworzenia bezpiecznego środowiska.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="secureEnvironment.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja powinna wywołać <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> po zakończeniu pracy nad <xref:System.Security.RightsManagement.SecureEnvironment>.  Po <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> nosi zasobów przydzielonych do <xref:System.Security.RightsManagement.SecureEnvironment> są odzyskiwane przez moduł odśmiecania pamięci.  Aby uzyskać więcej informacji, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Zawsze wywołuj <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> przed ostatnie odwołanie do <xref:System.Security.RightsManagement.SecureEnvironment> wydaniu.  Jeśli <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> nie jest wywoływana, zasoby przydzielone do <xref:System.Security.RightsManagement.SecureEnvironment> nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje wystąpienia <xref:System.Object.Finalize%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="secureEnvironment.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez publiczną <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> metody i <xref:System.Object.Finalize%2A> metody. <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> wywołuje chronioną metodę <xref:System.Security.RightsManagement.SecureEnvironment.Dispose%28System.Boolean%29> metody z `disposing` parametr `true`. <xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` równa `false`.  
  
 Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane że <xref:System.Security.RightsManagement.SecureEnvironment> odwołania. Ta metoda wywołuje `Dispose()` metoda każdego obiektu, do którego istnieje odwołanie.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> może być wywoływana wiele razy przez inne obiekty. Podczas zastępowania <see langword="Dispose(Boolean)" />, nie należy odwoływać się do obiektów, które zostały wcześniej zlikwidowane wcześniejszym wywołaniem do <see langword="Dispose" />. Aby uzyskać więcej informacji o sposobie wdrażania <see langword="Dispose(Boolean)" />, zobacz [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetActivatedUsers">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentUser&gt; GetActivatedUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentUser&gt; GetActivatedUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActivatedUsers () As ReadOnlyCollection(Of ContentUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentUser ^&gt; ^ GetActivatedUsers();" />
      <MemberSignature Language="F#" Value="static member GetActivatedUsers : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentUser&gt;" Usage="System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca listę aktywnych użytkowników.</summary>
        <returns>Lista aktualnie aktywnych użytkowników.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserActivated">
      <MemberSignature Language="C#" Value="public static bool IsUserActivated (System.Security.RightsManagement.ContentUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUserActivated(class System.Security.RightsManagement.ContentUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUserActivated (user As ContentUser) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUserActivated(System::Security::RightsManagement::ContentUser ^ user);" />
      <MemberSignature Language="F#" Value="static member IsUserActivated : System.Security.RightsManagement.ContentUser -&gt; bool" Usage="System.Security.RightsManagement.SecureEnvironment.IsUserActivated user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Security.RightsManagement.ContentUser" />
      </Parameters>
      <Docs>
        <param name="user">Użytkownika lub grupę użytkowników przyznawania dostępu do zawartości zarządzanej prawami.</param>
        <summary>Wskazuje, czy dany użytkownik został aktywowany do uzyskiwania dostępu do zawartości zarządzanej prawami.</summary>
        <returns><see langword="true" /> Jeśli dany <paramref name="user" /> został aktywowany do uzyskiwania dostępu do uprawnień zarządzanego zawartości; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Security.RightsManagement.SecureEnvironment.IsUserActivated%2A> metodę, aby określić, czy podany użytkownik ma uprawnienia do dostępu do zawartości zarządzanej prawami.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActivatedUser">
      <MemberSignature Language="C#" Value="public static void RemoveActivatedUser (System.Security.RightsManagement.ContentUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveActivatedUser(class System.Security.RightsManagement.ContentUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveActivatedUser (user As ContentUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveActivatedUser(System::Security::RightsManagement::ContentUser ^ user);" />
      <MemberSignature Language="F#" Value="static member RemoveActivatedUser : System.Security.RightsManagement.ContentUser -&gt; unit" Usage="System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Security.RightsManagement.ContentUser" />
      </Parameters>
      <Docs>
        <param name="user">Użytkownik, Usuń aktywacji licencji dla.</param>
        <summary>Usuwa aktywacji licencji dla określonego użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uwierzytelnianie użytkownika odbywa się przy użyciu uwierzytelniania Windows lub usługi Passport.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="user" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Dany <paramref name="user" /> nie został uwierzytelniony przy użyciu uwierzytelniania Windows lub uwierzytelniania usługi Passport.</exception>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.ContentUser User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.RightsManagement.ContentUser User" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.SecureEnvironment.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As ContentUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::RightsManagement::ContentUser ^ User { System::Security::RightsManagement::ContentUser ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.RightsManagement.ContentUser" Usage="System.Security.RightsManagement.SecureEnvironment.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.ContentUser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera użytkownika lub grupy użytkowników, gdy określono <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> został utworzony.</summary>
        <value>Użytkownik lub grupa użytkowników, aby określić <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" /> metody podczas <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> został utworzony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Security.RightsManagement.SecureEnvironment.User%2A> właściwości  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewsecenv)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewsecenv)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)" />
        <altmember cref="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)" />
        <altmember cref="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers" />
      </Docs>
    </Member>
  </Members>
</Type>