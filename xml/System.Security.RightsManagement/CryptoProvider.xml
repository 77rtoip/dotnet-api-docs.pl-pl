<Type Name="CryptoProvider" FullName="System.Security.RightsManagement.CryptoProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c234e8f11adfc4fdfdba6bda560ab5779cbdbf76" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36622923" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CryptoProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CryptoProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.CryptoProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoProvider : IDisposable" />
  <TypeSignature Language="F#" Value="type CryptoProvider = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="39777-101">Udostępnia usługi zarządzania do szyfrowania i odszyfrowywania zawartości chronionej prawami cyfrowymi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="39777-101">Provides digital rights management services for encrypting and decrypting protected content.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39777-102"><xref:System.Security.RightsManagement.CryptoProvider> jest tworzona w <xref:System.Security.RightsManagement.UseLicense.Bind%2A> metodą podczas wiązania z uprawnieniami zarządzane <xref:System.Security.RightsManagement.UseLicense> do <xref:System.Security.RightsManagement.SecureEnvironment>.</span><span class="sxs-lookup"><span data-stu-id="39777-102"><xref:System.Security.RightsManagement.CryptoProvider> is created as a result of the <xref:System.Security.RightsManagement.UseLicense.Bind%2A> method when binding a rights managed <xref:System.Security.RightsManagement.UseLicense> to a <xref:System.Security.RightsManagement.SecureEnvironment>.</span></span>  
  
 <span data-ttu-id="39777-103">W przypadku innych <xref:System.Security.RightsManagement> typów, <xref:System.Security.RightsManagement.CryptoProvider> jest tylko w pełni zaufane aplikacje.</span><span class="sxs-lookup"><span data-stu-id="39777-103">As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.CryptoProvider> is only usable in full trust applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39777-104">Poniższy przykład przedstawia użycie <xref:System.Security.RightsManagement.CryptoProvider> klasy w celu utworzenia <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="39777-104">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider> class to create an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.RightsManagement.UseLicense" />
    <altmember cref="T:System.Security.RightsManagement.SecureEnvironment" />
  </Docs>
  <Members>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int" Usage="System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39777-105">Pobiera rozmiar bloku szyfrowania, w bajtach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-105">Gets the cipher block size, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39777-106">Cipher block rozmiar w bajtach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-106">The cipher block size, in bytes.</span>
          </span>
          <span data-ttu-id="39777-107">Domyślny rozmiar bloku dla Standard AES (Advanced Encryption) to 8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-107">The default block size for Advanced Encryption Standard (AES) is 8.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39777-108">`clearText` i `cipherText` buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> i <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> musi być n \*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bajtów długości, gdzie "n" jest liczba całkowita większa lub równa 1.</span><span class="sxs-lookup"><span data-stu-id="39777-108">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="39777-109">Jeśli <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> jest `false`, buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> musi mieć taką samą długość jak Bufor przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span><span class="sxs-lookup"><span data-stu-id="39777-109">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="39777-110">Jeśli <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> jest `true`, buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> mogą być różne długości z buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (różnej wielkości buforu nadal zawsze musi być wielokrotnością <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bajtów długości).</span><span class="sxs-lookup"><span data-stu-id="39777-110">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 <span data-ttu-id="39777-111">A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 1 oznacza, że określony szyfr szyfrowania strumienia; <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> wskazuje szyfry blokowe, 2 lub większą.</span><span class="sxs-lookup"><span data-stu-id="39777-111">A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 1 indicates that the cipher is a stream cipher; a <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 2 or greater indicates a block cipher.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39777-112">Poniższy przykład przedstawia użycie <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> właściwości podczas konwertowania danych zwykłego tekstu na tekst zaszyfrowany.</span><span class="sxs-lookup"><span data-stu-id="39777-112">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property in converting clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundGrants">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt; BoundGrants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentGrant&gt; BoundGrants" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundGrants As ReadOnlyCollection(Of ContentGrant)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ BoundGrants { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundGrants : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;" Usage="System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39777-113">Pobiera kolekcję listę praw, których Weryfikacja się powodzeniem i które są przypisywane do użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-113">Gets a collection listing the rights that passed verification and that are granted to the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39777-114">Kolekcja wyliczania prawa, które pomyślnie weryfikacji oraz że są przyznawane użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-114">A collection enumerating the rights that passed verification and that are granted to the user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="39777-115">Poniższy przykład przedstawia użycie <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> właściwości, aby uzyskać listę praw przyznanych przez <xref:System.Security.RightsManagement.UseLicense>.</span><span class="sxs-lookup"><span data-stu-id="39777-115">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> property to obtain a list rights granted through a <xref:System.Security.RightsManagement.UseLicense>.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecrypt">
      <MemberSignature Language="C#" Value="public bool CanDecrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDecrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDecrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDecrypt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDecrypt : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39777-116">Pobiera wartość wskazującą, czy użytkownik ma uprawnienia do odszyfrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-116">Gets a value that indicates whether the user has rights to decrypt.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39777-117">Jeśli **TRUE** <see cref="T:System.Security.RightsManagement.UseLicense" /> przyznaje prawa użytkownika do odszyfrowania; w przeciwnym razie ** false **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-117">**true** if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to decrypt; otherwise, **false**.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39777-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Zwraca **true** Jeśli <xref:System.Security.RightsManagement.UseLicense> powiązany z tym <xref:System.Security.RightsManagement.CryptoProvider> przyznaje użytkownikowi praw dostępu do odczytu, takich jak widok, edytowania, drukowania lub właściciela.</span><span class="sxs-lookup"><span data-stu-id="39777-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user read access rights such as View, Edit, Print, or Owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39777-119">Poniższy przykład przedstawia użycie <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> właściwości w celu określenia, czy jest dozwolone odszyfrowywania.</span><span class="sxs-lookup"><span data-stu-id="39777-119">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> property to determine if decryption is allowed.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public bool CanEncrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEncrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEncrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanEncrypt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEncrypt : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39777-120">Pobiera wartość wskazującą, czy użytkownik ma uprawnienia do szyfrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-120">Gets a value that indicates whether the user has rights to encrypt.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39777-121">Jeśli **TRUE** <see cref="T:System.Security.RightsManagement.UseLicense" /> przyznaje prawa użytkownika do szyfrowania; w przeciwnym razie ** false **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-121">**true** if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to encrypt; otherwise, **false**.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39777-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Zwraca **true** Jeśli <xref:System.Security.RightsManagement.UseLicense> powiązany z tym <xref:System.Security.RightsManagement.CryptoProvider> przyznaje użytkownikowi praw dostępu do zapisu, takich jak edytowanie lub właściciela.</span><span class="sxs-lookup"><span data-stu-id="39777-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user write access rights such as Edit or Owner.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanMergeBlocks">
      <MemberSignature Language="C#" Value="public bool CanMergeBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMergeBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMergeBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMergeBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMergeBlocks : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39777-123">Pobiera wartość wskazującą, czy <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> i <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> może akceptować buforów, które są inne zablokować rozmiary długości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-123">Gets a value that indicates whether <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> can accept buffers that are different block sizes in length.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39777-124">** true ** Jeśli rozmiar buforu przekazanego do <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> mogą być różne długości z buforu przekazany do <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; w przeciwnym razie ** false ** Jeśli bufor przekazany do <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> i <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> musi mieć dokładnie samą długość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-124">**true** if the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> can be a different length from the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; otherwise, **false** if the buffers passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> must be the exact same length.</span>
          </span>
          <span data-ttu-id="39777-125">AES wartością domyślną jest ** true **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-125">For AES the default is **true**.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39777-126">`clearText` i `cipherText` buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> i <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> musi być n \*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bajtów długości, gdzie "n" jest liczba całkowita większa lub równa 1.</span><span class="sxs-lookup"><span data-stu-id="39777-126">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="39777-127">Jeśli <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> jest **false**, buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> musi mieć taką samą długość jak Bufor przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span><span class="sxs-lookup"><span data-stu-id="39777-127">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **false**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="39777-128">Jeśli <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> jest **true**, buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> mogą być różne długości z buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (różnej wielkości buforu nadal zawsze musi być wielokrotnością <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bajtów długości).</span><span class="sxs-lookup"><span data-stu-id="39777-128">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **true**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] cryptoText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] cryptoText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (cryptoText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ cryptoText);" />
      <MemberSignature Language="F#" Value="member this.Decrypt : byte[] -&gt; byte[]" Usage="cryptoProvider.Decrypt cryptoText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cryptoText">
          <span data-ttu-id="39777-129">Tekst szyfrowania do odszyfrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-129">The cipher text to decrypt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39777-130">Odszyfrowywane szyfrowania tekst zwykły tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-130">Decrypts cipher text to clear text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39777-131">Odszyfrowany wyczyść tekst <paramref name="cryptoText" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-131">The decrypted clear text of <paramref name="cryptoText" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="39777-132">Poniższy przykład przedstawia użycie <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> do przekonwertowania do nieszyfrowanych danych zaszyfrowanych danych.</span><span class="sxs-lookup"><span data-stu-id="39777-132">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> method to convert encrypted data to unencrypted data.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewdecrypt)]
 [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="39777-133">
            <paramref name="cipherText" /> ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-133">
              <paramref name="cipherText" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">
          <span data-ttu-id="39777-134">Prawo nie udzielono odszyfrowywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-134">Decryption right not granted.</span>
          </span>
        </exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="39777-135">Zwalnia zasoby używane przez <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-135">Releases the resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cryptoProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="39777-136">Zwalnia wszelkie zasoby używane przez <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-136">Releases all resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39777-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> wykonuje <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**true**).</span><span class="sxs-lookup"><span data-stu-id="39777-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**true**).</span></span>  
  
 <span data-ttu-id="39777-138">Wywołanie <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> po zakończeniu przy użyciu <xref:System.Security.RightsManagement.CryptoProvider>.</span><span class="sxs-lookup"><span data-stu-id="39777-138">Call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> when you are finished using the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="39777-139"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> Pozostawia metody <xref:System.Security.RightsManagement.CryptoProvider> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="39777-139">The <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> method leaves the <xref:System.Security.RightsManagement.CryptoProvider> in an unusable state.</span></span> <span data-ttu-id="39777-140">Po wywołaniu <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Security.RightsManagement.CryptoProvider> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Security.RightsManagement.CryptoProvider> klasy.</span><span class="sxs-lookup"><span data-stu-id="39777-140">After calling <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, you must release all references to the <xref:System.Security.RightsManagement.CryptoProvider> so the garbage collector can reclaim the memory that the <xref:System.Security.RightsManagement.CryptoProvider> was occupying.</span></span> <span data-ttu-id="39777-141">Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="39777-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="39777-142">Wywoływanie zawsze <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Security.RightsManagement.CryptoProvider>.</span><span class="sxs-lookup"><span data-stu-id="39777-142">Always call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> before you release your last reference to the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="39777-143">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Security.RightsManagement.CryptoProvider> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="39777-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.RightsManagement.CryptoProvider> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cryptoProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="39777-144">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-144">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39777-145">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Security.RightsManagement.CryptoProvider" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-145">Releases the unmanaged resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39777-146">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="39777-146">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="39777-147">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="39777-147">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="39777-148"><xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="39777-148"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="39777-149">Gdy `disposing` parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Security.RightsManagement.CryptoProvider> odwołania.</span><span class="sxs-lookup"><span data-stu-id="39777-149">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.CryptoProvider> references.</span></span> <span data-ttu-id="39777-150">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="39777-150">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="39777-151">
            <para>
              <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty. W przypadku przesłaniania <see langword="Dispose(Boolean)" /> należy uważać, aby nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />. Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenia Resources](~/docs/standard/garbage-collection/unmanaged.md) niezarządzane i [zastąpienie metody Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-151">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] clearText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] clearText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (clearText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ clearText);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : byte[] -&gt; byte[]" Usage="cryptoProvider.Encrypt clearText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="clearText">
          <span data-ttu-id="39777-152">Zawartość zwykłego tekstu do szyfrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-152">The clear text content to encrypt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39777-153">Szyfruje zwykłego tekstu do szyfrowania tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-153">Encrypts clear text to cipher text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39777-154">Zaszyfrowany tekst zaszyfrowany z danym <paramref name="clearText" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-154">Encrypted cipher text of the given <paramref name="clearText" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39777-155">Długość bajtów `clearText` buforu powinna być wielokrotnością szyfr <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="39777-155">The byte length of the `clearText` buffer should be a multiple of the cipher <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property.</span></span>  
  
 <span data-ttu-id="39777-156">System zarządzania prawami cyfrowymi używa szyfrowania bloku AES.</span><span class="sxs-lookup"><span data-stu-id="39777-156">The digital rights management system uses AES block cipher.</span></span>  <span data-ttu-id="39777-157">Z użyciem standardu AES bloki są zaszyfrowane niezależnie tak, aby dwa bloki identyczne zwykłego tekstu dostarczyło wyników tekst identyczne szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="39777-157">With AES, blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results.</span></span>  <span data-ttu-id="39777-158">Aby zminimalizować potencjalne zagrożenia odszyfrowywania z bloku niezależnie od szyfrowania, aplikacje powinny zostać metod do modyfikowania zawartości, takich jak kompresja, aby uniknąć szyfrowania bloki identyczne zwykłego tekstu.</span><span class="sxs-lookup"><span data-stu-id="39777-158">To minimize potential decryption threats from independent block encryption, applications should employ methods to modify content, such as compression, to avoid encrypting identical clear text blocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39777-159">Poniższy przykład przedstawia użycie <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> metodę, aby przekonwertować danych w postaci zwykłego tekstu na tekst zaszyfrowany.</span><span class="sxs-lookup"><span data-stu-id="39777-159">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> method to convert clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="39777-160">
            <paramref name="clearText" /> ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-160">
              <paramref name="clearText" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">
          <span data-ttu-id="39777-161">Szyfrowanie nie jest dozwolone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-161">Encryption is not permitted.</span>
          </span>
        </exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoProvider ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cryptoProvider.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="39777-162">Zwalnia zasoby i wykonuje wewnętrzny oczyszczania przed wystąpienie jest odzyskana przez wyrzucanie elementów bezużytecznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39777-162">Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39777-163"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> wykonuje <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**false**).</span><span class="sxs-lookup"><span data-stu-id="39777-163"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**false**).</span></span>  
  
 <span data-ttu-id="39777-164">Ta metoda zastępuje <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="39777-164">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="39777-165">Kod aplikacji nie powinny wywoływać tej metody; obiekt `Finalize` metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacji przez moduł garbage collector została wyłączona przez wywołanie do <xref:System.GC.SuppressFinalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="39777-165">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="39777-166">Aby uzyskać więcej informacji, zobacz [metody Finalize i destruktory](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md), i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="39777-166">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>