<Type Name="CryptoProvider" FullName="System.Security.RightsManagement.CryptoProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc0cdaf3c7e863e24d9544ba9e917e3485b4ad4d" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33660101" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CryptoProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CryptoProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.CryptoProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoProvider : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia usługi zarządzania do szyfrowania i odszyfrowywania zawartości chronionej prawami cyfrowymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider> jest tworzona w <xref:System.Security.RightsManagement.UseLicense.Bind%2A> metodą podczas wiązania z uprawnieniami zarządzane <xref:System.Security.RightsManagement.UseLicense> do <xref:System.Security.RightsManagement.SecureEnvironment>.  
  
 W przypadku innych <xref:System.Security.RightsManagement> typów, <xref:System.Security.RightsManagement.CryptoProvider> jest tylko w pełni zaufane aplikacje.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Security.RightsManagement.CryptoProvider> klasy w celu utworzenia <xref:System.IO.Packaging.EncryptedPackageEnvelope>.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.RightsManagement.UseLicense" />
    <altmember cref="T:System.Security.RightsManagement.SecureEnvironment" />
  </Docs>
  <Members>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar bloku szyfrowania, w bajtach.</summary>
        <value>Cipher block rozmiar w bajtach.  Domyślny rozmiar bloku dla Standard AES (Advanced Encryption) to 8.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `clearText` i `cipherText` buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> i <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> musi być n *<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bajtów długości, gdzie "n" jest liczba całkowita większa lub równa 1.  
  
 Jeśli <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> jest `false`, buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> musi mieć taką samą długość jak Bufor przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.  
  
 Jeśli <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> jest `true`, buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> mogą być różne długości z buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (różnej wielkości buforu nadal zawsze musi być wielokrotnością <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bajtów długości).  
  
 A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 1 oznacza, że określony szyfr szyfrowania strumienia; <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> wskazuje szyfry blokowe, 2 lub większą.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> właściwości podczas konwertowania danych zwykłego tekstu na tekst zaszyfrowany.  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundGrants">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt; BoundGrants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentGrant&gt; BoundGrants" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundGrants As ReadOnlyCollection(Of ContentGrant)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ BoundGrants { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję listę praw, których Weryfikacja się powodzeniem i które są przypisywane do użytkownika.</summary>
        <value>Kolekcja wyliczania prawa, które pomyślnie weryfikacji oraz że są przyznawane użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> właściwości, aby uzyskać listę praw przyznanych przez <xref:System.Security.RightsManagement.UseLicense>.  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecrypt">
      <MemberSignature Language="C#" Value="public bool CanDecrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDecrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDecrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDecrypt { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy użytkownik ma uprawnienia do odszyfrowania.</summary>
        <value>**wartość true,** Jeśli <see cref="T:System.Security.RightsManagement.UseLicense" /> przyznaje prawa użytkownika do odszyfrowania; w przeciwnym razie **false**.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Zwraca **true** Jeśli <xref:System.Security.RightsManagement.UseLicense> powiązany z tym <xref:System.Security.RightsManagement.CryptoProvider> przyznaje użytkownikowi praw dostępu do odczytu, takich jak widok, edytowania, drukowania lub właściciela.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> właściwości w celu określenia, czy jest dozwolone odszyfrowywania.  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public bool CanEncrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEncrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEncrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanEncrypt { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy użytkownik ma uprawnienia do szyfrowania.</summary>
        <value>**wartość true,** Jeśli <see cref="T:System.Security.RightsManagement.UseLicense" /> przyznaje prawa użytkownika do szyfrowania; w przeciwnym razie **false**.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Zwraca **true** Jeśli <xref:System.Security.RightsManagement.UseLicense> powiązany z tym <xref:System.Security.RightsManagement.CryptoProvider> przyznaje użytkownikowi praw dostępu do zapisu, takich jak edytowanie lub właściciela.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanMergeBlocks">
      <MemberSignature Language="C#" Value="public bool CanMergeBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMergeBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMergeBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMergeBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> i <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> może akceptować buforów, które są inne zablokować rozmiary długości.</summary>
        <value>**wartość true,** Jeśli rozmiar buforu przekazanego do <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> mogą być różne długości z buforu przekazany do <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; w przeciwnym razie **false** Jeśli bufor przekazany do <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> i <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> muszą być dokładnie samą długość.  AES wartością domyślną jest **true**.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `clearText` i `cipherText` buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> i <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> musi być n *<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bajtów długości, gdzie "n" jest liczba całkowita większa lub równa 1.  
  
 Jeśli <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> jest **false**, buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> musi mieć taką samą długość jak Bufor przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.  
  
 Jeśli <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> jest **true**, buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> mogą być różne długości z buforów przekazany do <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (różnej wielkości buforu nadal zawsze musi być wielokrotnością <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bajtów długości).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] cryptoText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] cryptoText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (cryptoText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ cryptoText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cryptoText">Tekst szyfrowania do odszyfrowania.</param>
        <summary>Odszyfrowywane szyfrowania tekst zwykły tekst.</summary>
        <returns>Odszyfrowany wyczyść tekst <paramref name="cryptoText" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> do przekonwertowania do nieszyfrowanych danych zaszyfrowanych danych.  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewdecrypt)]
 [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cipherText" /> ma wartość null.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Prawo nie udzielono odszyfrowywania.</exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> wykonuje <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**true**).  
  
 Wywołanie <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> po zakończeniu przy użyciu <xref:System.Security.RightsManagement.CryptoProvider>. <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> Pozostawia metody <xref:System.Security.RightsManagement.CryptoProvider> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Security.RightsManagement.CryptoProvider> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Security.RightsManagement.CryptoProvider> klasy. Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Wywoływanie zawsze <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Security.RightsManagement.CryptoProvider>. W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Security.RightsManagement.CryptoProvider> obiektu `Finalize` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Security.RightsManagement.CryptoProvider" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A> metody. `Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`. <xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.  
  
 Gdy `disposing` parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Security.RightsManagement.CryptoProvider> odwołania. Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty. W przypadku przesłaniania <see langword="Dispose(Boolean)" /> należy uważać, aby nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />. Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] clearText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] clearText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (clearText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ clearText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="clearText">Zawartość zwykłego tekstu do szyfrowania.</param>
        <summary>Szyfruje zwykłego tekstu do szyfrowania tekstu.</summary>
        <returns>Zaszyfrowany tekst zaszyfrowany z danym <paramref name="clearText" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Długość bajtów `clearText` buforu powinna być wielokrotnością szyfr <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> właściwości.  
  
 System zarządzania prawami cyfrowymi używa szyfrowania bloku AES.  Z użyciem standardu AES bloki są zaszyfrowane niezależnie tak, aby dwa bloki identyczne zwykłego tekstu dostarczyło wyników tekst identyczne szyfrowania.  Aby zminimalizować potencjalne zagrożenia odszyfrowywania z bloku niezależnie od szyfrowania, aplikacje powinny zostać metod do modyfikowania zawartości, takich jak kompresja, aby uniknąć szyfrowania bloki identyczne zwykłego tekstu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> metodę, aby przekonwertować danych w postaci zwykłego tekstu na tekst zaszyfrowany.  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clearText" /> ma wartość null.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Szyfrowanie nie jest dozwolone.</exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoProvider ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia zasoby i wykonuje wewnętrzny oczyszczania przed wystąpienie jest odzyskana przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> wykonuje <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**false**).  
  
 Ta metoda zastępuje <xref:System.Object.Finalize%2A>. Kod aplikacji nie powinny wywoływać tej metody; obiekt `Finalize` metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacji przez moduł garbage collector została wyłączona przez wywołanie do <xref:System.GC.SuppressFinalize%2A> metody.  
  
 Aby uzyskać więcej informacji, zobacz [metody Finalize i destruktory](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md), i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>