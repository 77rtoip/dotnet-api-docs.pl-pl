<Type Name="PublishLicense" FullName="System.Security.RightsManagement.PublishLicense">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="779022d1bde1bffa399d21406ce97c597fd8716c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39782129" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PublishLicense" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PublishLicense extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.PublishLicense" />
  <TypeSignature Language="VB.NET" Value="Public Class PublishLicense" />
  <TypeSignature Language="C++ CLI" Value="public ref class PublishLicense" />
  <TypeSignature Language="F#" Value="type PublishLicense = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje zarządzane podpisem praw opublikować licencji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.PublishLicense> definiuje dane zabezpieczeń dotyczące praw, użytkowników i inne informacje związane z zabezpieczeniami.  Licencji definiuje, jak używać zawartości zarządzanej określonego praw określonego użytkownika na określonym komputerze.  
  
 Proces publikowania, który rozpoczyna się od autora dokumentu, który definiuje informacje praw w <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Następnie tworzy podpisanego przez autora <xref:System.Security.RightsManagement.PublishLicense> przez wywołanie metody <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> metody <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Serializowany formularz podpisanej <xref:System.Security.RightsManagement.PublishLicense> następnie można przekazać do użytkowników końcowych, którzy mogą używać do nabywania <xref:System.Security.RightsManagement.UseLicense> przez wywołanie metody <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> metody <xref:System.Security.RightsManagement.PublishLicense>.  Zwrócony <xref:System.Security.RightsManagement.UseLicense> następnie umożliwia aplikacji klienta do korzystania z praw udzielonych użytkownikowi.  
  
 Podobnie jak w przypadku innych <xref:System.Security.RightsManagement> typów <xref:System.Security.RightsManagement.PublishLicense> jest tylko w pełni zaufane aplikacje.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak zainicjować <xref:System.Security.RightsManagement.PublishLicense> przy użyciu <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> metody.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PublishLicense (string signedPublishLicense);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string signedPublishLicense) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signedPublishLicense As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PublishLicense(System::String ^ signedPublishLicense);" />
      <MemberSignature Language="F#" Value="new System.Security.RightsManagement.PublishLicense : string -&gt; System.Security.RightsManagement.PublishLicense" Usage="new System.Security.RightsManagement.PublishLicense signedPublishLicense" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signedPublishLicense" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signedPublishLicense">A podpisany, a następnie serializowany publikowania licencji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.RightsManagement.PublishLicense" /> klasy z określonym serializowane i podpisana <see cref="T:System.Security.RightsManagement.PublishLicense" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signedPublishLicense" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Licencja jest nieprawidłowa.</exception>
        <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUseLicense">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UseLicense AcquireUseLicense (System.Security.RightsManagement.SecureEnvironment secureEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UseLicense AcquireUseLicense(class System.Security.RightsManagement.SecureEnvironment secureEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UseLicense ^ AcquireUseLicense(System::Security::RightsManagement::SecureEnvironment ^ secureEnvironment);" />
      <MemberSignature Language="F#" Value="member this.AcquireUseLicense : System.Security.RightsManagement.SecureEnvironment -&gt; System.Security.RightsManagement.UseLicense" Usage="publishLicense.AcquireUseLicense secureEnvironment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UseLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureEnvironment" Type="System.Security.RightsManagement.SecureEnvironment" />
      </Parameters>
      <Docs>
        <param name="secureEnvironment">Bezpieczne środowisko dla aktywacji licencji i powiązania.</param>
        <summary>Próbuje pobrać <see cref="T:System.Security.RightsManagement.UseLicense" /> dla użytkownika lub grupy użytkowników w określonym <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
        <returns>
          <see cref="T:System.Security.RightsManagement.UseLicense" /> Dla użytkownika lub grupę użytkowników w określonym <paramref name="secureEnvironment" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secureEnvironment" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Uwierzytelnianie nie powiodło się.</exception>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUseLicenseNoUI">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI (System.Security.RightsManagement.SecureEnvironment secureEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI(class System.Security.RightsManagement.SecureEnvironment secureEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UseLicense ^ AcquireUseLicenseNoUI(System::Security::RightsManagement::SecureEnvironment ^ secureEnvironment);" />
      <MemberSignature Language="F#" Value="member this.AcquireUseLicenseNoUI : System.Security.RightsManagement.SecureEnvironment -&gt; System.Security.RightsManagement.UseLicense" Usage="publishLicense.AcquireUseLicenseNoUI secureEnvironment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UseLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureEnvironment" Type="System.Security.RightsManagement.SecureEnvironment" />
      </Parameters>
      <Docs>
        <param name="secureEnvironment">Bezpieczne środowisko dla aktywacji licencji i powiązania.</param>
        <summary>Próbuje pobrać <see cref="T:System.Security.RightsManagement.UseLicense" /> dla użytkownika lub grupy użytkowników w określonym <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
        <returns>
          <see cref="T:System.Security.RightsManagement.UseLicense" /> Dla użytkownika lub grupę użytkowników w określonym <paramref name="secureEnvironment" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> Metody powoduje pominięcie okna dialogowego uwierzytelniania sieci Windows. Jeśli żądanie licencji zostało odrzucone, ponieważ użytkownik nie ma uprawnień, <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> uniemożliwia wyświetlanie okna dialogowego uwierzytelniania sieciowego. Umożliwia dyskretnej nabycia podczas próby uzyskania licencji w zadanie w tle lub interfejs niezwiązanych z użytkownikiem, który może być wyświetlany mylące okien dialogowych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secureEnvironment" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Uwierzytelnianie nie powiodło się.</exception>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      </Docs>
    </Member>
    <Member MemberName="ContentId">
      <MemberSignature Language="C#" Value="public Guid ContentId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContentId" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ContentId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContentId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentId : Guid" Usage="System.Security.RightsManagement.PublishLicense.ContentId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator zawartości tworzone przez wydawcę.</summary>
        <value>Utworzone przez wydawcę identyfikator zawartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzenie wydawcy <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> do identyfikowania chronionej zawartości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptUnsignedPublishLicense">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense (System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense(class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UnsignedPublishLicense ^ DecryptUnsignedPublishLicense(System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="member this.DecryptUnsignedPublishLicense : System.Security.RightsManagement.CryptoProvider -&gt; System.Security.RightsManagement.UnsignedPublishLicense" Usage="publishLicense.DecryptUnsignedPublishLicense cryptoProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UnsignedPublishLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="cryptoProvider">Usługa zarządzania prawami do użycia w celu odszyfrowania licencji.</param>
        <summary>Zwraca odszyfrowany <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> to podpisaną wersję <see cref="T:System.Security.RightsManagement.PublishLicense" />.</summary>
        <returns>Wersja odszyfrowane, nieoznaczona tej licencji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense%2A> Metoda umożliwia właściciela licencji i użytkowników, którym zostały przyznane <xref:System.Security.RightsManagement.ContentRight.ViewRightsData> można wyodrębnić oryginalne informacje, które były szyfrowane, gdy <xref:System.Security.RightsManagement.PublishLicense> został utworzony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cryptoProvider" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
      </Docs>
    </Member>
    <Member MemberName="ReferralInfoName">
      <MemberSignature Language="C#" Value="public string ReferralInfoName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReferralInfoName" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferralInfoName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReferralInfoName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferralInfoName : string" Usage="System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę kontaktu dla autora lub wydawcy zawartości.</summary>
        <value>Nazwa kontaktu dla autora lub wydawcy zawartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg zwracany przez <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoName%2A> właściwości nie są szyfrowane i jest dostępny nawet wtedy, gdy użytkownik nie ma jeszcze <xref:System.Security.RightsManagement.UseLicense>.  Zwracany ciąg pozwala użytkownikom skontaktuj się z wydawcą, aby zażądać <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      </Docs>
    </Member>
    <Member MemberName="ReferralInfoUri">
      <MemberSignature Language="C#" Value="public Uri ReferralInfoUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ReferralInfoUri" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferralInfoUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ReferralInfoUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferralInfoUri : Uri" Usage="System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kontaktu [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] dla autora lub wydawcy zawartości.</summary>
        <value>Skontaktuj się z pomocą [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] dla autora lub wydawcy zawartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg zwracany przez <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoUri%2A> właściwości nie są szyfrowane i jest dostępny nawet wtedy, gdy użytkownik nie ma jeszcze <xref:System.Security.RightsManagement.UseLicense>.  Zwracany ciąg pozwala użytkownikom skontaktuj się z wydawcą, aby zażądać <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="publishLicense.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca Zserializowany [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] ciąg, który został użyty do utworzenia tej licencji.</summary>
        <returns>Zserializowany [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] ciąg, który został użyty do utworzenia tej licencji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLicenseAcquisitionUrl">
      <MemberSignature Language="C#" Value="public Uri UseLicenseAcquisitionUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UseLicenseAcquisitionUrl" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseLicenseAcquisitionUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UseLicenseAcquisitionUrl { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UseLicenseAcquisitionUrl : Uri" Usage="System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] na potrzeby uzyskiwania <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Na potrzeby uzyskiwania <see cref="T:System.Security.RightsManagement.UseLicense" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl%2A> Właściwość jest używana przez <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> metody, gdy użytkownik nabędzie <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
  </Members>
</Type>