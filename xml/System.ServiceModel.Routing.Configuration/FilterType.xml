<Type Name="FilterType" FullName="System.ServiceModel.Routing.Configuration.FilterType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a5559f1c296712162d0f9c12c29c1ce2e74f968b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69235486" /></Metadata><TypeSignature Language="C#" Value="public enum FilterType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FilterType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.Configuration.FilterType" />
  <TypeSignature Language="VB.NET" Value="Public Enum FilterType" />
  <TypeSignature Language="C++ CLI" Value="public enum class FilterType" />
  <TypeSignature Language="F#" Value="type FilterType = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="88009-101">Określa typ filtru, który ma być używany podczas routingu komunikatów.</span><span class="sxs-lookup"><span data-stu-id="88009-101">Specifies the type of filter to use when routing messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88009-102">Aby uzyskać więcej informacji o <xref:System.ServiceModel.Routing.Configuration.FilterType>używaniu <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>programu, zobacz.</span><span class="sxs-lookup"><span data-stu-id="88009-102">For more information about using <xref:System.ServiceModel.Routing.Configuration.FilterType>, see <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="Action" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType Action = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.Action" />
      <MemberSignature Language="VB.NET" Value="Action" />
      <MemberSignature Language="C++ CLI" Value="Action" />
      <MemberSignature Language="F#" Value="Action = 0" Usage="System.ServiceModel.Routing.Configuration.FilterType.Action" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="88009-103">Użyj <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> , aby odfiltrować akcję.</span><span class="sxs-lookup"><span data-stu-id="88009-103">Use <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> to filter on an action.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="And" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType And = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.And" />
      <MemberSignature Language="VB.NET" Value="And" />
      <MemberSignature Language="C++ CLI" Value="And" />
      <MemberSignature Language="F#" Value="And = 3" Usage="System.ServiceModel.Routing.Configuration.FilterType.And" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="88009-104">Służy <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" /> do filtrowania dwóch filtrów komunikatów, ANDed razem.</span><span class="sxs-lookup"><span data-stu-id="88009-104">Use <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" /> to filter on two message filters, ANDed together.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType Custom = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 4" Usage="System.ServiceModel.Routing.Configuration.FilterType.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="88009-105">Użyj filtru zdefiniowanego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="88009-105">Use a user-defined filter.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="EndpointAddress">
      <MemberSignature Language="C#" Value="EndpointAddress" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType EndpointAddress = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress" />
      <MemberSignature Language="VB.NET" Value="EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="EndpointAddress" />
      <MemberSignature Language="F#" Value="EndpointAddress = 1" Usage="System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="88009-106">Użyj <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> z <see cref="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" /> opcją with<see langword="false" /> , aby przefiltrować adres.</span><span class="sxs-lookup"><span data-stu-id="88009-106">Use <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> with <see cref="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" /> set to <see langword="false" /> to filter on the address.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="EndpointName">
      <MemberSignature Language="C#" Value="EndpointName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType EndpointName = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointName" />
      <MemberSignature Language="VB.NET" Value="EndpointName" />
      <MemberSignature Language="C++ CLI" Value="EndpointName" />
      <MemberSignature Language="F#" Value="EndpointName = 5" Usage="System.ServiceModel.Routing.Configuration.FilterType.EndpointName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="88009-107">Użyj, <see cref="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" /> aby odfiltrować nazwę punktu końcowego usługi.</span><span class="sxs-lookup"><span data-stu-id="88009-107">Use the <see cref="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" /> to filter on the name of the service endpoint.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MatchAll">
      <MemberSignature Language="C#" Value="MatchAll" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType MatchAll = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.MatchAll" />
      <MemberSignature Language="VB.NET" Value="MatchAll" />
      <MemberSignature Language="C++ CLI" Value="MatchAll" />
      <MemberSignature Language="F#" Value="MatchAll = 6" Usage="System.ServiceModel.Routing.Configuration.FilterType.MatchAll" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="88009-108">Użyj, <see cref="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" /> aby dopasować wszystkie komunikaty.</span><span class="sxs-lookup"><span data-stu-id="88009-108">Use the <see cref="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" /> to match all messages.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PrefixEndpointAddress">
      <MemberSignature Language="C#" Value="PrefixEndpointAddress" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType PrefixEndpointAddress = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress" />
      <MemberSignature Language="VB.NET" Value="PrefixEndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="PrefixEndpointAddress" />
      <MemberSignature Language="F#" Value="PrefixEndpointAddress = 2" Usage="System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="88009-109">Użyj <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> opcji <see cref="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" /> with Set <see langword="false" /> to, aby filtrować adres przy użyciu najdłuższych pasujących prefiksów.</span><span class="sxs-lookup"><span data-stu-id="88009-109">Use <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> with <see cref="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" /> set to <see langword="false" /> to filter on the address using longest prefix matching.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="XPath" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType XPath = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.XPath" />
      <MemberSignature Language="VB.NET" Value="XPath" />
      <MemberSignature Language="C++ CLI" Value="XPath" />
      <MemberSignature Language="F#" Value="XPath = 7" Usage="System.ServiceModel.Routing.Configuration.FilterType.XPath" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="88009-110">Użyj, <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> aby odfiltrować wyrażenie XPath.</span><span class="sxs-lookup"><span data-stu-id="88009-110">Use the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> to filter on an XPath expression.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
