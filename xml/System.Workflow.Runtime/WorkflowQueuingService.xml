<Type Name="WorkflowQueuingService" FullName="System.Workflow.Runtime.WorkflowQueuingService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a04bc850ba767baad262bd2f89e1311f2d1632d9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69427868" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowQueuingService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowQueuingService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowQueuingService" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowQueuingService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowQueuingService" />
  <TypeSignature Language="F#" Value="type WorkflowQueuingService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia usługi do zarządzania <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> obiektami.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.Runtime.WorkflowQueuingService>dostarcza metody, których można użyć do zarządzania kolejkami przepływu pracy skojarzonymi z wystąpieniem przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje metodę o nazwie `CreateQueue`, która <xref:System.Workflow.Runtime.WorkflowQueuingService> inicjuje obiekt przez wywołanie <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> metody. Następnie kod używa metody, <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> aby określić, <xref:System.Workflow.Runtime.WorkflowQueue> czy istnieje o podanej nazwie. Jeśli nie istnieje, kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> metodę; jeśli kod <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> wywołuje metodę.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK działania obserwatora plików z pliku FileSystemEvent.cs. Aby uzyskać więcej informacji, zobacz [aktywność obserwatora systemu plików](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)">Działanie obserwatora systemu plików</related>
  </Docs>
  <Members>
    <Member MemberName="CreateWorkflowQueue">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue (IComparable queueName, bool transactional);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue(class System.IComparable queueName, bool transactional) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue(System.IComparable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflowQueue (queueName As IComparable, transactional As Boolean) As WorkflowQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowQueue ^ CreateWorkflowQueue(IComparable ^ queueName, bool transactional);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflowQueue : IComparable * bool -&gt; System.Workflow.Runtime.WorkflowQueue" Usage="workflowQueuingService.CreateWorkflowQueue (queueName, transactional)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="transactional" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="queueName">Nazwa kolejki.</param>
        <param name="transactional">Wartość określająca, czy <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> element jest widoczny poza zakresem bieżącej transakcji.</param>
        <summary><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> Tworzy przy użyciu określonej nazwy i zakresu transakcyjnego.</summary>
        <returns>Element <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest tworzony z określonym `queueName`. <xref:System.Workflow.Runtime.WorkflowQueue> Jeśli transakcyjny jest `true` <xref:System.Workflow.Runtime.WorkflowQueue> , jest widoczny tylko w bieżącej transakcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje metodę o nazwie `CreateQueue`, która <xref:System.Workflow.Runtime.WorkflowQueuingService> inicjuje obiekt przez wywołanie <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> metody. Następnie kod używa metody, <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> aby określić, <xref:System.Workflow.Runtime.WorkflowQueue> czy istnieje o podanej nazwie. Jeśli nie istnieje, kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> metodę; jeśli kod <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> wywołuje metodę.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK działania obserwatora plików z pliku FileSystemEvent.cs. Aby uzyskać więcej informacji, zobacz [aktywność obserwatora systemu plików](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="queueName" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">O nazwie określonej przez <paramref name="queueName" /> już istnieje. <see cref="T:System.Workflow.Runtime.WorkflowQueue" /></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)">Działanie obserwatora systemu plików</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkflowQueue">
      <MemberSignature Language="C#" Value="public void DeleteWorkflowQueue (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWorkflowQueue(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteWorkflowQueue (queueName As IComparable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWorkflowQueue(IComparable ^ queueName);" />
      <MemberSignature Language="F#" Value="member this.DeleteWorkflowQueue : IComparable -&gt; unit" Usage="workflowQueuingService.DeleteWorkflowQueue queueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Nazwa <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> do usunięcia.</param>
        <summary>Usuwa określony <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje metodę, która zapisuje ciąg w konsoli, tworzy wystąpienie <xref:System.Workflow.Runtime.WorkflowQueuingService> przez <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> wywołanie metody. Na koniec kod wywołuje metodę, <xref:System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue%2A> aby usunąć kolejkę skojarzoną `QueueName` z właściwością w bieżącym przepływie pracy.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK działania obserwatora plików z pliku FileSystemEvent.cs. Aby uzyskać więcej informacji, zobacz [aktywność obserwatora systemu plików](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).  
  
 [!code-csharp[WF_Samples#224](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#224)]
 [!code-vb[WF_Samples#224](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#224)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="queueName" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic).</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)">Działanie obserwatora systemu plików</related>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.Exists(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (queueName As IComparable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(IComparable ^ queueName);" />
      <MemberSignature Language="F#" Value="member this.Exists : IComparable -&gt; bool" Usage="workflowQueuingService.Exists queueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Nazwa <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</param>
        <summary>Testy dotyczące istnienia określonego <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</summary>
        <returns><see langword="true" />Jeśli istnieje; w przeciwnym razie <see langword="false" />,. <see cref="T:System.Workflow.Runtime.WorkflowQueue" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje metodę o nazwie `CreateQueue`, która <xref:System.Workflow.Runtime.WorkflowQueuingService> inicjuje obiekt przez wywołanie <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> metody. Następnie kod używa metody, <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> aby określić, <xref:System.Workflow.Runtime.WorkflowQueue> czy istnieje o podanej nazwie. Jeśli nie istnieje, kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> metodę; jeśli kod <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> wywołuje metodę.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK działania obserwatora plików z pliku FileSystemEvent.cs. Aby uzyskać więcej informacji, zobacz [aktywność obserwatora systemu plików](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="queueName" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic).</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)">Działanie obserwatora systemu plików</related>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueue">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueue (queueName As IComparable) As WorkflowQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowQueue ^ GetWorkflowQueue(IComparable ^ queueName);" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowQueue : IComparable -&gt; System.Workflow.Runtime.WorkflowQueue" Usage="workflowQueuingService.GetWorkflowQueue queueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Nazwa <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> do pobrania.</param>
        <summary>Pobiera określony <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</summary>
        <returns>Element <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje metodę o nazwie `CreateQueue`, która <xref:System.Workflow.Runtime.WorkflowQueuingService> inicjuje obiekt przez wywołanie <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> metody. Następnie kod używa metody, <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> aby określić, <xref:System.Workflow.Runtime.WorkflowQueue> czy istnieje o podanej nazwie. Jeśli nie istnieje, kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> metodę; jeśli kod <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> wywołuje metodę.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK działania obserwatora plików z pliku FileSystemEvent.cs. Aby uzyskać więcej informacji, zobacz [aktywność obserwatora systemu plików](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="queueName" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Nie znaleziono <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> określonego.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)">Działanie obserwatora systemu plików</related>
      </Docs>
    </Member>
    <Member MemberName="PendingMessagesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PendingMessagesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ PendingMessagesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PendingMessagesProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera niewykorzystane elementy w kolejkach przepływu pracy skojarzonych z tym <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" />elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wystąpienie przepływu pracy kończy lub kończy wszystkie nieużywane elementy w swoich kolejkach przepływu pracy, które są skojarzone z tym <xref:System.Workflow.Runtime.WorkflowQueuingService> elementem, są przenoszone <xref:System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty>do.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
