<Type Name="WorkflowQueuingService" FullName="System.Workflow.Runtime.WorkflowQueuingService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf97ac74c2c97120fc5e510068a6cb6a1a000982" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741389" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowQueuingService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowQueuingService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowQueuingService" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowQueuingService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowQueuingService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dostarcza usług zarządzania <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.Runtime.WorkflowQueuingService> udostępnia metody, których można używać do zarządzania kolejek przepływu pracy skojarzonego z wystąpieniem przepływu pracy.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano metodę o nazwie `CreateQueue`, która inicjuje <xref:System.Workflow.Runtime.WorkflowQueuingService> obiektu przez wywołanie metody <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> metody. Następnie używa kod <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> metodę, aby określić, czy <xref:System.Workflow.Runtime.WorkflowQueue> o określonej nazwie istnieje. Jeśli nie istnieje, kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> metody; Jeśli nie kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> metody.  
  
 Ten przykładowy kod jest częścią przykładowy plik obserwatora działania zestawu SDK z pliku FileSystemEvent.cs. Aby uzyskać więcej informacji, zobacz [aktywności obserwatora systemu plików](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateWorkflowQueue">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue (IComparable queueName, bool transactional);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue(class System.IComparable queueName, bool transactional) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue(System.IComparable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflowQueue (queueName As IComparable, transactional As Boolean) As WorkflowQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowQueue ^ CreateWorkflowQueue(IComparable ^ queueName, bool transactional);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="transactional" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="queueName">Nazwa kolejki.</param>
        <param name="transactional">Wartość, która określa, czy <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> jest widoczna poza zakresem bieżącej transakcji.</param>
        <summary>Tworzy <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> przy użyciu określonej nazwy i zakres transakcyjnych.</summary>
        <returns>A <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Workflow.Runtime.WorkflowQueue> jest tworzony z określonym `queueName`. Jeśli jest transakcyjna `true`, <xref:System.Workflow.Runtime.WorkflowQueue> tylko jest widoczny w bieżącej transakcji.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano metodę o nazwie `CreateQueue`, która inicjuje <xref:System.Workflow.Runtime.WorkflowQueuingService> obiektu przez wywołanie metody <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> metody. Następnie używa kod <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> metodę, aby określić, czy <xref:System.Workflow.Runtime.WorkflowQueue> o określonej nazwie istnieje. Jeśli nie istnieje, kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> metody; Jeśli nie kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> metody.  
  
 Ten przykładowy kod jest częścią przykładowy plik obserwatora działania zestawu SDK z pliku FileSystemEvent.cs. Aby uzyskać więcej informacji, zobacz [aktywności obserwatora systemu plików](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> z nazwą określoną przez <paramref name="queueName" /> już istnieje.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkflowQueue">
      <MemberSignature Language="C#" Value="public void DeleteWorkflowQueue (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWorkflowQueue(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteWorkflowQueue (queueName As IComparable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWorkflowQueue(IComparable ^ queueName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Nazwa <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> do usunięcia.</param>
        <summary>Usuwa określony <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie kodu pokazano metodę, która zapisuje ciąg w konsoli, tworzy wystąpienie <xref:System.Workflow.Runtime.WorkflowQueuingService> przez wywołanie metody <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> metody. Na koniec kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue%2A> metodę, aby usunąć kolejkę skojarzone z `QueueName` właściwości bieżącego przepływu pracy.  
  
 Ten przykładowy kod jest częścią przykładowy plik obserwatora działania zestawu SDK z pliku FileSystemEvent.cs. Aby uzyskać więcej informacji, zobacz [aktywności obserwatora systemu plików](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#224](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#224)]
 [!code-vb[WF_Samples#224](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#224)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.Exists(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (queueName As IComparable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(IComparable ^ queueName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Nazwa <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</param>
        <summary>Testy istnienie określonego <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> istnieje; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie kodu pokazano metodę o nazwie `CreateQueue`, która inicjuje <xref:System.Workflow.Runtime.WorkflowQueuingService> obiektu przez wywołanie metody <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> metody. Następnie używa kod <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> metodę, aby określić, czy <xref:System.Workflow.Runtime.WorkflowQueue> o określonej nazwie istnieje. Jeśli nie istnieje, kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> metody; Jeśli nie kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> metody.  
  
 Ten przykładowy kod jest częścią przykładowy plik obserwatora działania zestawu SDK z pliku FileSystemEvent.cs. Aby uzyskać więcej informacji, zobacz [aktywności obserwatora systemu plików](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueue">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueue (queueName As IComparable) As WorkflowQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowQueue ^ GetWorkflowQueue(IComparable ^ queueName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Nazwa <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> do pobrania.</param>
        <summary>Pobiera określony <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</summary>
        <returns>A <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie kodu pokazano metodę o nazwie `CreateQueue`, która inicjuje <xref:System.Workflow.Runtime.WorkflowQueuingService> obiektu przez wywołanie metody <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> metody. Następnie używa kod <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> metodę, aby określić, czy <xref:System.Workflow.Runtime.WorkflowQueue> o określonej nazwie istnieje. Jeśli nie istnieje, kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> metody; Jeśli nie kod wywołuje <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> metody.  
  
 Ten przykładowy kod jest częścią przykładowy plik obserwatora działania zestawu SDK z pliku FileSystemEvent.cs. Aby uzyskać więcej informacji, zobacz [aktywności obserwatora systemu plików](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Określony <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> nie został znaleziony.</exception>
      </Docs>
    </Member>
    <Member MemberName="PendingMessagesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PendingMessagesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ PendingMessagesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera elementy niewykorzystana w kolejkach przepływu pracy skojarzonego z tym <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wystąpienia przepływu pracy wykonuje lub kończy wszystkich elementów niewykorzystana w kolejkach jego przepływu pracy, które są skojarzone z tym <xref:System.Workflow.Runtime.WorkflowQueuingService> zostaną przeniesione do <xref:System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>