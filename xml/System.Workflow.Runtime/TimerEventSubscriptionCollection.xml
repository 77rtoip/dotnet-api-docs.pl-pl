<Type Name="TimerEventSubscriptionCollection" FullName="System.Workflow.Runtime.TimerEventSubscriptionCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4177dc4afabca710c6eab76138b51b039282af4f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55408642" /></Metadata><TypeSignature Language="C#" Value="public class TimerEventSubscriptionCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TimerEventSubscriptionCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TimerEventSubscriptionCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimerEventSubscriptionCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type TimerEventSubscriptionCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8608e-101">Reprezentuje uporządkowaną listą <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="8608e-101">Represents an ordered list of <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="8608e-102">A <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> reprezentuje kolejkę z <xref:System.Workflow.Runtime.TimerEventSubscription> obiekty skojarzone z przepływem pracy wystąpienia i zapewnia metody do zarządzania tej kolejki.</span><span class="sxs-lookup"><span data-stu-id="8608e-102">A <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> represents the queue of <xref:System.Workflow.Runtime.TimerEventSubscription> objects associated with a workflow instance and provides methods to manage this queue.</span></span> <span data-ttu-id="8608e-103">Subskrypcje są uporządkowane w kolejce, w oparciu o ich <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> wartości; te z mniejszych <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> wartości są umieszczone przed elementami o większych <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> wartości.</span><span class="sxs-lookup"><span data-stu-id="8608e-103">Subscriptions are ordered in the queue based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values; those with smaller <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values are positioned before those with larger <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values.</span></span> <span data-ttu-id="8608e-104">Można użyć metod dostarczonych przez tę klasę kolekcji subskrypcji zdarzeń aktywnego czasomierza udostępnianych przez zarządzanie <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> dla każdego wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="8608e-104">You can use the methods provided by this class to manage the collection of active timer event subscriptions exposed by <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> for each workflow instance.</span></span> <span data-ttu-id="8608e-105">Możesz użyć <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> lub <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> można dodawać i usuwać subskrypcje kolejki czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-105">You can use <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> or <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> to add or remove subscriptions from the timer queue.</span></span> <span data-ttu-id="8608e-106">Zawsze, gdy zmieni się pierwszy element w kolejce czasomierza <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> jest wywoływana, aby anulować zdarzenie czasomierza, który był wcześniej na początku kolejki i zaplanować nowe zdarzenie czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-106">Whenever the first element in the timer queue changes, the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is called to cancel the timer event that was previously at the beginning of the queue and schedule the new timer event.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Workflow.Runtime.TimerEventSubscription item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Workflow.Runtime.TimerEventSubscription item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As TimerEventSubscription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Workflow::Runtime::TimerEventSubscription ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Workflow.Runtime.TimerEventSubscription -&gt; unit" Usage="timerEventSubscriptionCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.Runtime.TimerEventSubscription" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="8608e-107"><see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> Do dodania do kolejki czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-107">The <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> to add to the timer queue.</span></span></param>
        <summary><span data-ttu-id="8608e-108">Dodaje <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> do kolejki czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-108">Adds a <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> to the timer queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8608e-109">Dodaje <xref:System.Workflow.Runtime.TimerEventSubscription> do kolejki czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-109">Adds the <xref:System.Workflow.Runtime.TimerEventSubscription> to the timer queue.</span></span> <span data-ttu-id="8608e-110">Subskrypcje w kolejce opierają się na ich <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> wartości o mniejszej wartości są umieszczone przed o większej wartości.</span><span class="sxs-lookup"><span data-stu-id="8608e-110">Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> values; those with smaller values are positioned in front of those with larger values.</span></span> <span data-ttu-id="8608e-111">Jeśli Nowa subskrypcja zostanie dodany na początku kolejki <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> jest wywoływana, aby anulować zdarzenie czasomierza, który był wcześniej na początku kolejki i <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> jest wywoływana, aby zaplanować nowe zdarzenie czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-111">If the new subscription is added at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> is called to cancel the timer event that was previously at the beginning of the queue and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> is called to schedule the new timer event.</span></span> <span data-ttu-id="8608e-112"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> blokady <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> przed dodanie nowej subskrypcji i dlatego jest bezpieczny dla wątków.</span><span class="sxs-lookup"><span data-stu-id="8608e-112"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> locks the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> before adding the new subscription and is, therefore, thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8608e-113"><paramref name="item" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8608e-113"><paramref name="item" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="timerEventSubscriptionCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="8608e-114">Jednowymiarowy <see cref="T:System.Array" /> czyli miejscem docelowym elementów kopiowanych z <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8608e-114">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span> <span data-ttu-id="8608e-115"><see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span><span class="sxs-lookup"><span data-stu-id="8608e-115">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="8608e-116">Liczony od zera indeks w <paramref name="array" /> od rozpoczyna się kopiowanie które.</span><span class="sxs-lookup"><span data-stu-id="8608e-116">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="8608e-117">Kopiuje <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> elementy do istniejącej jednowymiarowej <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy.</span><span class="sxs-lookup"><span data-stu-id="8608e-117">Copies the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8608e-118"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A> jest bezpieczny dla wątków.</span><span class="sxs-lookup"><span data-stu-id="8608e-118"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A> is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8608e-119">Pobiera liczbę <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> obiektów w kolejki czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-119">Gets the number of <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> objects in the timer queue.</span></span></summary>
        <value><span data-ttu-id="8608e-120">Liczba <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> obiektów w kolejce.</span><span class="sxs-lookup"><span data-stu-id="8608e-120">The number of <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> objects in the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="timerEventSubscriptionCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8608e-121">Zwraca moduł wyliczający, który iteruje po <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8608e-121">Returns an enumerator that iterates through the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span></summary>
        <returns><span data-ttu-id="8608e-122"><see cref="T:System.Collections.IEnumerator" /> Dla <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8608e-122">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8608e-123">Dostęp do <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> jest zsynchronizowana; jednak wyliczanie w kolekcji nie jest wewnętrznie bezpieczne procedury wątku.</span><span class="sxs-lookup"><span data-stu-id="8608e-123">Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="8608e-124">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="8608e-124">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8608e-125">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="8608e-125">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span> <span data-ttu-id="8608e-126">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji w związku z tym wyliczanie w kolekcji nie jest wewnętrznie bezpieczne procedury wątku.</span><span class="sxs-lookup"><span data-stu-id="8608e-126">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="8608e-127">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> podczas całego procesu wyliczania, przy użyciu <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>.</span><span class="sxs-lookup"><span data-stu-id="8608e-127">To guarantee thread safety during enumeration, you can lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8608e-128">Pobiera wartość wskazującą, czy dostęp do <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> jest synchronizowane (wątkowo).</span><span class="sxs-lookup"><span data-stu-id="8608e-128">Gets a value that indicates whether the access to the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="8608e-129">Zawsze zwraca <see langword="true" /> wskazującego, że dostęp do <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> jest synchronizowane (wątkowo).</span><span class="sxs-lookup"><span data-stu-id="8608e-129">Always returns <see langword="true" /> indicating that access to the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> is synchronized (thread safe).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8608e-130">Dostęp do <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> jest zsynchronizowana; jednak wyliczanie w kolekcji nie jest wewnętrznie bezpieczne procedury wątku.</span><span class="sxs-lookup"><span data-stu-id="8608e-130">Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="8608e-131">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="8608e-131">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8608e-132">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="8608e-132">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span> <span data-ttu-id="8608e-133"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> Zwraca obiekt, który może służyć do synchronizowania dostępu do <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.</span><span class="sxs-lookup"><span data-stu-id="8608e-133"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.TimerEventSubscription Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.TimerEventSubscription Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As TimerEventSubscription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::TimerEventSubscription ^ Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; System.Workflow.Runtime.TimerEventSubscription" Usage="timerEventSubscriptionCollection.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.TimerEventSubscription</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8608e-134">Zwraca <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> na początku kolejki czasomierza bez usuwania go.</span><span class="sxs-lookup"><span data-stu-id="8608e-134">Returns the <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> at the beginning of the timer queue without removing it.</span></span></summary>
        <returns><span data-ttu-id="8608e-135"><see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> Na początku kolejki czasomierza lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) jeżeli kolejki czasomierza jest pusta.</span><span class="sxs-lookup"><span data-stu-id="8608e-135">The <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> at the beginning of the timer queue or a null reference (<see langword="Nothing" /> in Visual Basic) if the timer queue is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8608e-136"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A> jest bezpieczny dla wątków.</span><span class="sxs-lookup"><span data-stu-id="8608e-136"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A> is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8608e-137">Usuwa określony <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> z kolejki czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-137">Removes the specified <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> from the timer queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Guid timerSubscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(valuetype System.Guid timerSubscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (timerSubscriptionId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Guid timerSubscriptionId);" />
      <MemberSignature Language="F#" Value="member this.Remove : Guid -&gt; unit" Usage="timerEventSubscriptionCollection.Remove timerSubscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerSubscriptionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerSubscriptionId"><span data-ttu-id="8608e-138"><see cref="T:System.Guid" /> z <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="8608e-138">The <see cref="T:System.Guid" /> of the <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> to remove.</span></span></param>
        <summary><span data-ttu-id="8608e-139">Usuwa <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> zawierającej określony identyfikator subskrypcji z kolejki czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-139">Removes the <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> that has the specified subscription id from the timer queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8608e-140">Usuwa <xref:System.Workflow.Runtime.TimerEventSubscription> z określonym identyfikatorem subskrypcji z kolejki czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-140">Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> with the specified subscription id from the timer queue.</span></span> <span data-ttu-id="8608e-141">Subskrypcje w kolejce opierają się na ich <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> wartości o mniejszej wartości są umieszczone przed o większej wartości.</span><span class="sxs-lookup"><span data-stu-id="8608e-141">Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> values; those with smaller values are positioned in front of those with larger values.</span></span> <span data-ttu-id="8608e-142">Jeśli subskrypcja usunięte subskrypcji na początku kolejki, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> jest wywoływana, aby anulować zdarzenie czasomierza skojarzone z tą subskrypcją i <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> jest wywoływana, aby zaplanować na zdarzenie czasomierza dla subskrypcji, która jest teraz w zasięgu na początek kolejki.</span><span class="sxs-lookup"><span data-stu-id="8608e-142">If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> is called to schedule a timer event for the subscription that is now at the beginning of the queue.</span></span> <span data-ttu-id="8608e-143"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> jest bezpieczny dla wątków.</span><span class="sxs-lookup"><span data-stu-id="8608e-143"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Workflow.Runtime.TimerEventSubscription item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Workflow.Runtime.TimerEventSubscription item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As TimerEventSubscription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Workflow::Runtime::TimerEventSubscription ^ item);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Workflow.Runtime.TimerEventSubscription -&gt; unit" Usage="timerEventSubscriptionCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.Runtime.TimerEventSubscription" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="8608e-144"><see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> Do usunięcia z kolejki czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-144">The <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> to remove from the timer queue.</span></span></param>
        <summary><span data-ttu-id="8608e-145">Usuwa <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> z kolejki czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-145">Removes the <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> from the timer queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8608e-146">Usuwa <xref:System.Workflow.Runtime.TimerEventSubscription> z kolejki czasomierza.</span><span class="sxs-lookup"><span data-stu-id="8608e-146">Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> from the timer queue.</span></span> <span data-ttu-id="8608e-147">Subskrypcje w kolejce opierają się na ich <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> wartości o mniejszej wartości są umieszczone przed o większej wartości.</span><span class="sxs-lookup"><span data-stu-id="8608e-147">Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> values; those with smaller values are positioned in front of those with larger values.</span></span> <span data-ttu-id="8608e-148">Jeśli subskrypcja usunięte subskrypcji na początku kolejki, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> jest wywoływana, aby anulować zdarzenie czasomierza skojarzone z tą subskrypcją i <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> jest wywoływana, aby zaplanować na zdarzenie czasomierza dla subskrypcji, która jest teraz w zasięgu na początek kolejki.</span><span class="sxs-lookup"><span data-stu-id="8608e-148">If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> is called to schedule a timer event for the subscription that is now at the beginning of the queue.</span></span> <span data-ttu-id="8608e-149"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> jest bezpieczny dla wątków.</span><span class="sxs-lookup"><span data-stu-id="8608e-149"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8608e-150"><paramref name="item" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8608e-150"><paramref name="item" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8608e-151">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8608e-151">Gets an object that can be used to synchronize access to the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span></summary>
        <value><span data-ttu-id="8608e-152">Obiekt używany do synchronizowania dostępu do <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8608e-152">An object used to synchronize access to the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8608e-153"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> Zwraca obiekt, który może służyć do synchronizowania dostępu do <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.</span><span class="sxs-lookup"><span data-stu-id="8608e-153"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.</span></span>  
  
 <span data-ttu-id="8608e-154">Dostęp do <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> jest zsynchronizowana; jednak wyliczanie w kolekcji nie jest wewnętrznie bezpieczne procedury wątku.</span><span class="sxs-lookup"><span data-stu-id="8608e-154">Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="8608e-155">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="8608e-155">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8608e-156">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można albo blokady <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> podczas całego procesu wyliczania, przy użyciu <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> lub rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątki.</span><span class="sxs-lookup"><span data-stu-id="8608e-156">To guarantee thread safety during enumeration, you can either lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimerCollectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TimerCollectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ TimerCollectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TimerCollectionProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8608e-157">Kolejki czasomierza skojarzonego z wystąpieniem przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="8608e-157">Timer queue associated with a workflow instance.</span></span> <span data-ttu-id="8608e-158">Ta kolejka zawiera czas uporządkowane <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> obiektów dla przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="8608e-158">This queue contains time ordered <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> objects for a workflow.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>