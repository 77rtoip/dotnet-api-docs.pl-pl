<Type Name="TimerEventSubscriptionCollection" FullName="System.Workflow.Runtime.TimerEventSubscriptionCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="026f2ed125efb5816a9e20f3125b121c2080231f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741515" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TimerEventSubscriptionCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TimerEventSubscriptionCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TimerEventSubscriptionCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimerEventSubscriptionCollection : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje uporządkowaną listę <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 A <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> reprezentuje kolejkę z <xref:System.Workflow.Runtime.TimerEventSubscription> obiekty skojarzone z przepływem pracy wystąpienia i dostarcza metod do zarządzania tą kolejką. Subskrypcje są uporządkowane w kolejce na podstawie ich <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> wartości; z mniejszym <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> wartości będą umieszczane przed elementami z większą <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> wartości. Metody dostarczone przez tę klasę umożliwiają zarządzanie kolekcji subskrypcji zdarzeń aktywnego czasomierza udostępnianych przez <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> dla każdego wystąpienia przepływu pracy. Można użyć <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> lub <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> do dodawania lub usuwania subskrypcji z kolejki czasomierza. Przy każdej zmianie pierwszy element w kolejce czasomierza <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> jest wywoływana, aby anulować zdarzenie czasomierza, które wcześniej były na początek kolejki i Zaplanuj nowe zdarzenie czasomierza.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Workflow.Runtime.TimerEventSubscription item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Workflow.Runtime.TimerEventSubscription item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As TimerEventSubscription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Workflow::Runtime::TimerEventSubscription ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.Runtime.TimerEventSubscription" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> Dodać do kolejki czasomierza.</param>
        <summary>Dodaje <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> do kolejki czasomierza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodaje <xref:System.Workflow.Runtime.TimerEventSubscription> do kolejki czasomierza. Subskrypcje w kolejce znajdują się na podstawie ich <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> wartości; tych o mniejszej wartości są umieszczone przed elementami z większymi wartościami. Jeśli Nowa subskrypcja zostanie dodany na początek kolejki, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> jest wywoływana, aby anulować zdarzenie czasomierza, które wcześniej były na początek kolejki i <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> jest wywoływana, aby zaplanować nowe zdarzenie czasomierza. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> blokady <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> przed dodaniem nowej subskrypcji i w związku z tym jest bezpieczne dla wątków.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="item" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Jednowymiarowa <see cref="T:System.Array" /> który jest miejscem docelowym elementów kopiowanych z <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />. <see cref="T:System.Array" /> Musi mieć indeksowania liczony od zera.</param>
        <param name="index">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</param>
        <summary>Kopie <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> elementy do istniejącej jednowymiarowej tablicy <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A> Wątek jest bezpieczne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> obiektów w kolejce czasomierza.</summary>
        <value>Liczba <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> obiektów w kolejce.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który iteruje po <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> Dla <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostęp do <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> jest zsynchronizowany; wyliczanie w kolekcji nie jest jednak bardzo procedury awaryjny wątku. Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona. Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane. Moduł wyliczający nie ma wyłączny dostęp do kolekcji; w związku z tym wyliczania kolekcji leżą nie jest bezpieczne procedury wątku. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, można zablokować <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> podczas całej wyliczenia za pomocą <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dostęp do <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> jest synchronizowane (wielowątkowość).</summary>
        <value>Zawsze zwraca <see langword="true" /> wskazującego, że dostęp do <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> jest synchronizowane (wielowątkowość).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostęp do <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> jest zsynchronizowany; wyliczanie w kolekcji nie jest jednak bardzo procedury awaryjny wątku. Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający. Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> Zwraca obiekt, który może służyć do synchronizujący dostęp do <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.TimerEventSubscription Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.TimerEventSubscription Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As TimerEventSubscription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::TimerEventSubscription ^ Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.TimerEventSubscription</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> na początku kolejki czasomierza bez usuwania go.</summary>
        <returns>
          <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> Na początku kolejki czasomierza lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), jeśli kolejka czasomierza jest pusta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A> Wątek jest bezpieczne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa określoną <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> z kolejki czasomierza.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Guid timerSubscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(valuetype System.Guid timerSubscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (timerSubscriptionId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Guid timerSubscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerSubscriptionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerSubscriptionId">
          <see cref="T:System.Guid" /> z <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> do usunięcia.</param>
        <summary>Usuwa <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> mający określonym identyfikatorem subskrypcji z kolejki czasomierza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa <xref:System.Workflow.Runtime.TimerEventSubscription> z określonym identyfikatorem subskrypcji z kolejki czasomierza. Subskrypcje w kolejce znajdują się na podstawie ich <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> wartości; tych o mniejszej wartości są umieszczone przed elementami z większymi wartościami. Jeśli subskrypcja usunięte subskrypcji na początku kolejki, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> jest wywoływana, aby anulować zdarzenie czasomierza skojarzone z tą subskrypcją i <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> jest wywoływana, aby zaplanować subskrypcji, która jest teraz na zdarzenie czasomierza początek kolejki. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> Wątek jest bezpieczne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Workflow.Runtime.TimerEventSubscription item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Workflow.Runtime.TimerEventSubscription item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As TimerEventSubscription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Workflow::Runtime::TimerEventSubscription ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.Runtime.TimerEventSubscription" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> Można usunąć z kolejki czasomierza.</param>
        <summary>Usuwa <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> z kolejki czasomierza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa <xref:System.Workflow.Runtime.TimerEventSubscription> z kolejki czasomierza. Subskrypcje w kolejce znajdują się na podstawie ich <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> wartości; tych o mniejszej wartości są umieszczone przed elementami z większymi wartościami. Jeśli subskrypcja usunięte subskrypcji na początku kolejki, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> jest wywoływana, aby anulować zdarzenie czasomierza skojarzone z tą subskrypcją i <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> jest wywoływana, aby zaplanować subskrypcji, która jest teraz na zdarzenie czasomierza początek kolejki. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> Wątek jest bezpieczne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="item" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</summary>
        <value>Obiekt używany do synchronizujący dostęp do <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> Zwraca obiekt, który może służyć do synchronizujący dostęp do <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.  
  
 Dostęp do <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> jest zsynchronizowany; wyliczanie w kolekcji nie jest jednak bardzo procedury awaryjny wątku. Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz albo blokady <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> podczas całej wyliczenia za pomocą <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimerCollectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TimerCollectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ TimerCollectionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Kolejka czasomierz skojarzony z wystąpieniem przepływu pracy. Kolejka ta zawiera czas uporządkowane <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> obiekty przepływu pracy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>