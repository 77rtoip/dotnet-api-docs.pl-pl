<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TimerEventSubscriptionCollection.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5026f2ed125efb5816a9e20f3125b121c2080231f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">026f2ed125efb5816a9e20f3125b121c2080231f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.TimerEventSubscriptionCollection">
          <source>Represents an ordered list of <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> objects.</source>
          <target state="translated">Reprezentuje uporządkowaną listę <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.TimerEventSubscriptionCollection">
          <source>A <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> represents the queue of <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscription&gt;</ph> objects associated with a workflow instance and provides methods to manage this queue.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> reprezentuje kolejkę z <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscription&gt;</ph> obiekty skojarzone z przepływem pracy wystąpienia i dostarcza metod do zarządzania tą kolejką.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.TimerEventSubscriptionCollection">
          <source>Subscriptions are ordered in the queue based on their <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A&gt;</ph> values; those with smaller <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A&gt;</ph> values are positioned before those with larger <ph id="ph3">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A&gt;</ph> values.</source>
          <target state="translated">Subskrypcje są uporządkowane w kolejce na podstawie ich <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A&gt;</ph> wartości; z mniejszym <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A&gt;</ph> wartości będą umieszczane przed elementami z większą <ph id="ph3">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.TimerEventSubscriptionCollection">
          <source>You can use the methods provided by this class to manage the collection of active timer event subscriptions exposed by <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty&gt;</ph> for each workflow instance.</source>
          <target state="translated">Metody dostarczone przez tę klasę umożliwiają zarządzanie kolekcji subskrypcji zdarzeń aktywnego czasomierza udostępnianych przez <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty&gt;</ph> dla każdego wystąpienia przepływu pracy.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.TimerEventSubscriptionCollection">
          <source>You can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A&gt;</ph> to add or remove subscriptions from the timer queue.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A&gt;</ph> lub <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A&gt;</ph> do dodawania lub usuwania subskrypcji z kolejki czasomierza.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.TimerEventSubscriptionCollection">
          <source>Whenever the first element in the timer queue changes, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> is called to cancel the timer event that was previously at the beginning of the queue and schedule the new timer event.</source>
          <target state="translated">Przy każdej zmianie pierwszy element w kolejce czasomierza <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> jest wywoływana, aby anulować zdarzenie czasomierza, które wcześniej były na początek kolejki i Zaplanuj nowe zdarzenie czasomierza.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> to add to the timer queue.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> Dodać do kolejki czasomierza.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> to the timer queue.</source>
          <target state="translated">Dodaje <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> do kolejki czasomierza.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)">
          <source>Adds the <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription&gt;</ph> to the timer queue.</source>
          <target state="translated">Dodaje <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription&gt;</ph> do kolejki czasomierza.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)">
          <source>Subscriptions in the queue are positioned based on their <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType&gt;</ph> values; those with smaller values are positioned in front of those with larger values.</source>
          <target state="translated">Subskrypcje w kolejce znajdują się na podstawie ich <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType&gt;</ph> wartości; tych o mniejszej wartości są umieszczone przed elementami z większymi wartościami.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)">
          <source>If the new subscription is added at the beginning of the queue, <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType&gt;</ph> is called to cancel the timer event that was previously at the beginning of the queue and <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType&gt;</ph> is called to schedule the new timer event.</source>
          <target state="translated">Jeśli Nowa subskrypcja zostanie dodany na początek kolejki, <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType&gt;</ph> jest wywoływana, aby anulować zdarzenie czasomierza, które wcześniej były na początek kolejki i <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType&gt;</ph> jest wywoływana, aby zaplanować nowe zdarzenie czasomierza.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A&gt;</ph> locks the <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> before adding the new subscription and is, therefore, thread safe.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A&gt;</ph> blokady <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> przed dodaniem nowej subskrypcji i w związku z tym jest bezpieczne dla wątków.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)">
          <source><ph id="ph1">&lt;paramref name="item" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="item" /&gt;</ph> to odwołanie o wartości null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from the <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph>.</source>
          <target state="translated">Jednowymiarowa <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> który jest miejscem docelowym elementów kopiowanych z <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> Musi mieć indeksowania liczony od zera.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Liczony od zera indeks w <bpt id="p1">&lt;c&gt;</bpt>tablicy<ept id="p1">&lt;/c&gt;</ept> od rozpoczyna się kopiowanie które.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph> elements to an existing one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified array index.</source>
          <target state="translated">Kopie <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph> elementy do istniejącej jednowymiarowej tablicy <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, rozpoczynając od określonego indeksu tablicy.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A&gt;</ph> is thread safe.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A&gt;</ph> Wątek jest bezpieczne.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.Count">
          <source>Gets the number of <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> objects in the timer queue.</source>
          <target state="translated">Pobiera liczbę <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> obiektów w kolejce czasomierza.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.Count">
          <source>The number of <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> objects in the queue.</source>
          <target state="translated">Liczba <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> obiektów w kolejce.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph>.</source>
          <target state="translated">Zwraca moduł wyliczający, który iteruje po <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> Dla <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator">
          <source>Access to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">Dostęp do <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> jest zsynchronizowany; wyliczanie w kolekcji nie jest jednak bardzo procedury awaryjny wątku.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">Moduł wyliczający nie ma wyłączny dostęp do kolekcji; w związku z tym wyliczania kolekcji leżą nie jest bezpieczne procedury wątku.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> during the entire enumeration by using <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A&gt;</ph>.</source>
          <target state="translated">W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, można zablokować <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> podczas całej wyliczenia za pomocą <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized">
          <source>Gets a value that indicates whether the access to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Pobiera wartość wskazującą, czy dostęp do <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph> jest synchronizowane (wielowątkowość).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> indicating that access to the <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Zawsze zwraca <ph id="ph1">&lt;see langword="true" /&gt;</ph> wskazującego, że dostęp do <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph> jest synchronizowane (wielowątkowość).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized">
          <source>Access to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">Dostęp do <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> jest zsynchronizowany; wyliczanie w kolekcji nie jest jednak bardzo procedury awaryjny wątku.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A&gt;</ph> Zwraca obiekt, który może służyć do synchronizujący dostęp do <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> at the beginning of the timer queue without removing it.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> na początku kolejki czasomierza bez usuwania go.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> at the beginning of the timer queue or a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if the timer queue is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> Na początku kolejki czasomierza lub odwołanie o wartości null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> w języku Visual Basic), jeśli kolejka czasomierza jest pusta.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A&gt;</ph> is thread safe.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A&gt;</ph> Wątek jest bezpieczne.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.TimerEventSubscriptionCollection">
          <source>Removes the specified <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> from the timer queue.</source>
          <target state="translated">Usuwa określoną <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> z kolejki czasomierza.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> to remove.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> z <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> do usunięcia.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> that has the specified subscription id from the timer queue.</source>
          <target state="translated">Usuwa <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> mający określonym identyfikatorem subskrypcji z kolejki czasomierza.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)">
          <source>Removes the <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription&gt;</ph> with the specified subscription id from the timer queue.</source>
          <target state="translated">Usuwa <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription&gt;</ph> z określonym identyfikatorem subskrypcji z kolejki czasomierza.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)">
          <source>Subscriptions in the queue are positioned based on their <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType&gt;</ph> values; those with smaller values are positioned in front of those with larger values.</source>
          <target state="translated">Subskrypcje w kolejce znajdują się na podstawie ich <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType&gt;</ph> wartości; tych o mniejszej wartości są umieszczone przed elementami z większymi wartościami.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)">
          <source>If the subscription removed was the subscription at the beginning of the queue, <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType&gt;</ph> is called to cancel the timer event associated with this subscription and <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType&gt;</ph> is called to schedule a timer event for the subscription that is now at the beginning of the queue.</source>
          <target state="translated">Jeśli subskrypcja usunięte subskrypcji na początku kolejki, <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType&gt;</ph> jest wywoływana, aby anulować zdarzenie czasomierza skojarzone z tą subskrypcją i <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType&gt;</ph> jest wywoływana, aby zaplanować subskrypcji, która jest teraz na zdarzenie czasomierza początek kolejki.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29&gt;</ph> is thread safe.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29&gt;</ph> Wątek jest bezpieczne.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> to remove from the timer queue.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> Można usunąć z kolejki czasomierza.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> from the timer queue.</source>
          <target state="translated">Usuwa <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> z kolejki czasomierza.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)">
          <source>Removes the <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription&gt;</ph> from the timer queue.</source>
          <target state="translated">Usuwa <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription&gt;</ph> z kolejki czasomierza.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)">
          <source>Subscriptions in the queue are positioned based on their <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType&gt;</ph> values; those with smaller values are positioned in front of those with larger values.</source>
          <target state="translated">Subskrypcje w kolejce znajdują się na podstawie ich <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType&gt;</ph> wartości; tych o mniejszej wartości są umieszczone przed elementami z większymi wartościami.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)">
          <source>If the subscription removed was the subscription at the beginning of the queue, <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType&gt;</ph> is called to cancel the timer event associated with this subscription and <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType&gt;</ph> is called to schedule a timer event for the subscription that is now at the beginning of the queue.</source>
          <target state="translated">Jeśli subskrypcja usunięte subskrypcji na początku kolejki, <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType&gt;</ph> jest wywoływana, aby anulować zdarzenie czasomierza skojarzone z tą subskrypcją i <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType&gt;</ph> jest wywoływana, aby zaplanować subskrypcji, która jest teraz na zdarzenie czasomierza początek kolejki.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29&gt;</ph> is thread safe.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29&gt;</ph> Wątek jest bezpieczne.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)">
          <source><ph id="ph1">&lt;paramref name="item" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="item" /&gt;</ph> to odwołanie o wartości null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph>.</source>
          <target state="translated">Pobiera obiekt, który może służyć do synchronizujący dostęp do <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot">
          <source>An object used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph>.</source>
          <target state="translated">Obiekt używany do synchronizujący dostęp do <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A&gt;</ph> Zwraca obiekt, który może służyć do synchronizujący dostęp do <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot">
          <source>Access to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">Dostęp do <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> jest zsynchronizowany; wyliczanie w kolekcji nie jest jednak bardzo procedury awaryjny wątku.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> during the entire enumeration by using <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A&gt;</ph> or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz albo blokady <ph id="ph1">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> podczas całej wyliczenia za pomocą <ph id="ph2">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A&gt;</ph> lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="F:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty">
          <source>Timer queue associated with a workflow instance.</source>
          <target state="translated">Kolejka czasomierz skojarzony z wystąpieniem przepływu pracy.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty">
          <source>This queue contains time ordered <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> objects for a workflow.</source>
          <target state="translated">Kolejka ta zawiera czas uporządkowane <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.TimerEventSubscription" /&gt;</ph> obiekty przepływu pracy.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>