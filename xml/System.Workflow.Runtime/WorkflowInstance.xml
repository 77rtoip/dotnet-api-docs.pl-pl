<Type Name="WorkflowInstance" FullName="System.Workflow.Runtime.WorkflowInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0478d4988a0187a6cb381578e5b343625385d9d0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36445716" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowInstance" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInstance sealed" />
  <TypeSignature Language="F#" Value="type WorkflowInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7cf6b-101">Reprezentuje wystąpienie przepływu pracy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7cf6b-101">Represents a workflow instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="7cf6b-102"><xref:System.Workflow.Runtime.WorkflowInstance> Klasa udostępnia metody i właściwości, których można użyć do kontrolowania wykonywania wystąpienia przepływu pracy; jest zasadniczo serwera proxy do wystąpienia przepływu pracy w rzeczywistych używane przez aparat środowiska uruchomieniowego przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-102">The <xref:System.Workflow.Runtime.WorkflowInstance> class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</span></span> <span data-ttu-id="7cf6b-103">Na hoście lub usługi można nakazać aparatu wykonawczego workflow do wykonania akcji w wystąpieniu przepływu pracy, wywołując odpowiednie metody, które są zawarte w <xref:System.Workflow.Runtime.WorkflowInstance> klasy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-103">A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the <xref:System.Workflow.Runtime.WorkflowInstance> class.</span></span>  <span data-ttu-id="7cf6b-104">Jeśli żądana akcja nie jest prawidłowy, na przykład jeśli host wymaga <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> w wystąpieniu przepływu pracy, które zostało już zakończone, aparatu wykonawczego workflow zgłosi wyjątek odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-104">If the requested action is not valid, for example, if the host calls <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7cf6b-105">Jeśli wystąpienie przepływu pracy przestanie odpowiadać, ponieważ wywołanie aplikacji hosta nie może zwracać, jedynym sposobem odzyskania wystąpienie jest ponowne uruchomienie środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-105">If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</span></span> <span data-ttu-id="7cf6b-106">Jednak jeśli wystąpienie zostało wymuszone zwolniony, przerwana lub wstrzymana, jego może być kontynuowane przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-106">However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-107">W poniższym przykładzie kodu pokazano, jak utworzyć i uruchomić <xref:System.Workflow.Runtime.WorkflowInstance> hosta przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-107">The following code example demonstrates how you can create and start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="7cf6b-108">Kod tworzy wystąpienie <xref:System.Workflow.Runtime.WorkflowRuntime>, dodaje do środowiska wykonawczego usług i następnie przedstawiono zalecany sposób tworzenia <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-108">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="7cf6b-109">Inicjuje kod <xref:System.Workflow.Runtime.WorkflowInstance> przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> — metoda i przekazywanie wcześniej utworzony typ do niego.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-109">The code initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="7cf6b-110"><xref:System.Workflow.Runtime.WorkflowInstance> Zostanie uruchomiony przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-110">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="7cf6b-111">Ten przykładowy kod jest częścią Cancelling przepływu pracy SDK przykładowe z pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-111">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="7cf6b-112">Aby uzyskać więcej informacji, zobacz [anulowanie przepływu pracy](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="7cf6b-112">For more information, see [Canceling a Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="7cf6b-113">Ten typ jest bezpieczny wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7cf6b-113">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="workflowInstance.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-114">Przerywa wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-114">Aborts the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-115">Wystąpienie przepływu pracy zostało przerwane w sposób synchroniczne; oznacza to metoda zwraca po wystąpienia przepływu pracy zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-115">The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</span></span> <span data-ttu-id="7cf6b-116">Aparatu wykonawczego workflow unieważnia wystąpienia przepływu pracy w pamięci i czyszczenia <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-116">The workflow runtime engine invalidates the workflow instance in memory and clears the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="7cf6b-117">Jeśli usługi utrwalania był używany przez wystąpienie przepływu pracy, wszystkich działań wykonanych od czasu ostatniego punktu trwałości jest odrzucone.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-117">If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</span></span> <span data-ttu-id="7cf6b-118">Po jego przerwanie wystąpienia przepływu pracy, aparatu środowiska uruchomieniowego przepływu pracy zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-118">After it aborts the workflow instance, the workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> event.</span></span> <span data-ttu-id="7cf6b-119">Możesz wywołać <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> Aby ponownie załadować wystąpienia przepływu pracy i rozpocząć od ostatniego punktu trwałości.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-119">You can call <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> to reload the workflow instance and start from its last persistence point.</span></span>  
  
 <span data-ttu-id="7cf6b-120">`Abort` różni się od <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> tego czasu `Abort` po prostu usuwa wystąpienie przepływu pracy w pamięci i może zostać uruchomiony ponownie z ostatniego punktu trwałości przerwania czyści wystąpienia przepływu pracy w pamięci i informuje o trwałości usługa wystąpienie zostało wyczyszczone z pamięci.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-120">`Abort` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> in that while `Abort` simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="7cf6b-121">Aby uzyskać <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, oznacza to, że wszystkie informacje o stanie dla tego wystąpienia przepływu pracy została usunięta z bazy danych po zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-121">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="7cf6b-122">Nie można ponownie załadować wystąpienia przepływu pracy z punktu zapisanych wcześniej trwałości.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-122">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-123">W poniższym przykładzie pokazano wywołanie przerwania w wystąpieniu przepływu pracy typu Workflow1.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-123">The following example demonstrates calling Abort on a workflow instance of type Workflow1.</span></span>  
  
 [!code-csharp[WF_Samples#13](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#13)]
 [!code-vb[WF_Samples#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-124">Aparat środowiska uruchomieniowego przepływu pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-124">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyWorkflowChanges">
      <MemberSignature Language="C#" Value="public void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyWorkflowChanges(class System.Workflow.ComponentModel.WorkflowChanges workflowChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyWorkflowChanges(System::Workflow::ComponentModel::WorkflowChanges ^ workflowChanges);" />
      <MemberSignature Language="F#" Value="member this.ApplyWorkflowChanges : System.Workflow.ComponentModel.WorkflowChanges -&gt; unit" Usage="workflowInstance.ApplyWorkflowChanges workflowChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowChanges" Type="System.Workflow.ComponentModel.WorkflowChanges" />
      </Parameters>
      <Docs>
        <param name="workflowChanges">
          <span data-ttu-id="7cf6b-125">A <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> określenie aktualizacji dynamicznych dla wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-125">A <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> specifying dynamic updates for the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7cf6b-126">Stosuje zmiany do wystąpienia przepływu pracy, określony przez <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-126">Applies changes to the workflow instance specified by the <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-127">Wystąpienie przepływu pracy nie jest już wstrzymany, aparatu wykonawczego workflow tymczasowo wstrzymuje wystąpienia przed zastosowaniem zmian.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-127">If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-128">W poniższym przykładzie pokazano wywoływania ApplyWorkflowChanges do <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-128">The following example demonstrates calling ApplyWorkflowChanges to a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  <span data-ttu-id="7cf6b-129">W tym przykładzie pochodzi z porządkowanie stanu maszyna przykład zestawu SDK, z pliku Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-129">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="7cf6b-130">Aby uzyskać więcej informacji, zobacz [porządkowanie próbki maszyny stanu](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="7cf6b-130">For more information, see the [Ordering State Machine Sample](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#89](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#89)]
 [!code-vb[WF_Samples#89](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-131">Aparat środowiska uruchomieniowego przepływu pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-131">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItem">
      <MemberSignature Language="C#" Value="public void EnqueueItem (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItem(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItem (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItem(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItem : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItem (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName">
          <span data-ttu-id="7cf6b-132">Nazwa <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-132">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="7cf6b-133">Obiekt, który można umieścić w kolejce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-133">The object to enqueue.</span>
          </span>
        </param>
        <param name="pendingWork">
          <span data-ttu-id="7cf6b-134">
            <see cref="T:System.Workflow.Runtime.IPendingWork" /> , Która umożliwia nadawcy zgłaszane po <c>elementu</c> jest dostarczany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-134">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <c>item</c> is delivered.</span>
          </span>
        </param>
        <param name="workItem">
          <span data-ttu-id="7cf6b-135">Obiekt do przekazania do <see cref="T:System.Workflow.Runtime.IPendingWork" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-135">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7cf6b-136">Zapisuje synchronicznie wiadomości do kolejki określonego przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-136">Posts a message to the specified workflow queue synchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-137">Wysyła `item` do określonego <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-137">Sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="7cf6b-138">Jeśli chcesz otrzymać powiadomienie, gdy wiadomość zostanie dostarczona, można zaimplementować <xref:System.Workflow.Runtime.IPendingWork> usługi i przebiegu `workItem` i <xref:System.Workflow.Runtime.IPendingWork> do obiektu <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-138">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="7cf6b-139">Jeśli nie chcesz, aby takie powiadomienie, można przekazać odwołanie o wartości null (`Nothing` w języku Visual Basic) dla `pendingWork` i `workItem`.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-139">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="7cf6b-140">Przy użyciu tej metody z przepływ pracy automatu stanów, może zostać wyświetlony komunikat o wyjątku "kolejki"{0}"nie jest włączona."</span><span class="sxs-lookup"><span data-stu-id="7cf6b-140">When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="7cf6b-141">Dzieje się tak, gdy bieżący stan komputera stanu nie może określić sposób obsługi określonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-141">This happens when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="7cf6b-142">Na przykład, jeśli niektóre stanie innym niż bieżący stan zawiera <xref:System.Workflow.Activities.EventDrivenActivity> zawierający <xref:System.Workflow.Activities.HandleExternalEventActivity> reprezentowaną przez kolejkę "{0}".</span><span class="sxs-lookup"><span data-stu-id="7cf6b-142">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7cf6b-143">Komunikaty nie dotrą do odebrania przez wystąpienie przepływu pracy w kolejności, w której zostały wysłane.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-143">Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</span></span> <span data-ttu-id="7cf6b-144">Na przykład jeśli odbieranie wiadomości w istniejącym kolejka przepływu pracy można utworzyć innej kolejki kolejki B, który następnie nasłuchuje kolejną wiadomość wysłana po pierwszej wiadomości przyczyny (kolejki A), jest możliwe, że to drugi komunikat pojawią się najpierw i nie będą odbierane z powodu swojej kolejki nie jest jeszcze utworzony.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-144">For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</span></span> <span data-ttu-id="7cf6b-145">Aby uniknąć tego problemu, to drugi komunikat nie powinna być wysyłana dopóki nie zostanie zweryfikowana obecności drugi kolejki (przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span><span class="sxs-lookup"><span data-stu-id="7cf6b-145">To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-146">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-146">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="7cf6b-147">Gdy <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> wystąpi zdarzenie, `OnWorkflowIdled` zdefiniowane w tym przykładzie metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-147">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="7cf6b-148">Określa, który przepływ pracy jest idled przy użyciu <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> właściwości, a następnie pobiera kolekcję elementów w kolejce dla przepływu pracy wystąpienia przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-148">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="7cf6b-149">Kod iteracji w kolekcji, aby określić działanie (activity) oczekuje na zdarzenie, które idled przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-149">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="7cf6b-150">Następnie wysyła wyjątek do kolejki przepływu pracy przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> metody wraz z nazwą elementu kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-150">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="7cf6b-151">Ten przykładowy kod jest częścią Cancelling przepływu pracy SDK przykładowe z pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-151">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="7cf6b-152">Aby uzyskać więcej informacji, zobacz [anulowanie przepływu pracy](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="7cf6b-152">For more information, see [Canceling a Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7cf6b-153">
            <paramref name="queueName" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-153">
              <paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-154">Aparat środowiska uruchomieniowego przepływu pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-154">The workflow runtime engine is not running.</span>
          </span>
          <span data-ttu-id="7cf6b-155">- lub - <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> określonego przez <paramref name="queueName" /> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-155">-or-  The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span>
          </span>
          <span data-ttu-id="7cf6b-156">- lub - <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> określonego przez <paramref name="queueName" /> nie jest włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-156">-or-  The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItemOnIdle">
      <MemberSignature Language="C#" Value="public void EnqueueItemOnIdle (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItemOnIdle(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItemOnIdle (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItemOnIdle(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItemOnIdle : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItemOnIdle (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName">
          <span data-ttu-id="7cf6b-157">Nazwa <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-157">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="7cf6b-158">Obiekt, który można umieścić w kolejce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-158">The object to enqueue.</span>
          </span>
        </param>
        <param name="pendingWork">
          <span data-ttu-id="7cf6b-159">
            <see cref="T:System.Workflow.Runtime.IPendingWork" /> , Która umożliwia nadawcy zgłaszane po <c>elementu</c> jest dostarczany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-159">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <c>item</c> is delivered.</span>
          </span>
        </param>
        <param name="workItem">
          <span data-ttu-id="7cf6b-160">Obiekt do przekazania do <see cref="T:System.Workflow.Runtime.IPendingWork" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-160">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7cf6b-161">Zapisuje komunikat do kolejki określonego przepływu pracy, gdy przepływ pracy jest w stanie bezczynności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-161">Posts a message to the specified workflow queue when the workflow is idle.</span>
          </span>
          <span data-ttu-id="7cf6b-162">
            <see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> czeka, aż przepływ pracy osiągnie punkt bezczynności i enqueues po sprawdzeniu, czy harmonogram przepływu pracy jest w stanie bezczynności (to znaczy nie aktywnych operacji nie jest wykonywane).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-162">
              <see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-163">Czeka na wystąpienie przepływu pracy w stan bezczynności, a następnie wysyła `item` do określonego <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-163">Waits for the workflow instance to become idle and then sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="7cf6b-164">Jeśli należy wywołać <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> podczas wystąpienia przepływu pracy jest wstrzymana, aparatu wykonawczego workflow zgłosi <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-164">If you call <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> while the workflow instance is suspended, the workflow runtime engine will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="7cf6b-165">Jeśli chcesz otrzymać powiadomienie, gdy wiadomość zostanie dostarczona, można zaimplementować <xref:System.Workflow.Runtime.IPendingWork> usługi i przebiegu `workItem` i <xref:System.Workflow.Runtime.IPendingWork> do obiektu <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-165">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="7cf6b-166">Jeśli nie chcesz, aby takie powiadomienie, można przekazać odwołanie o wartości null (`Nothing` w języku Visual Basic) dla `pendingWork` i `workItem`.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-166">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="7cf6b-167">Gdy przepływ pracy automatu stanów za pomocą tej metody, można uzyskać wyjątek, który zawiera komunikat "kolejki"{0}"nie jest włączona."</span><span class="sxs-lookup"><span data-stu-id="7cf6b-167">When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="7cf6b-168">Dzieje się tak, gdy bieżący stan komputera stanu nie może określić sposób obsługi określonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-168">This occurs when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="7cf6b-169">Na przykład, jeśli niektóre stanie innym niż bieżący stan zawiera <xref:System.Workflow.Activities.EventDrivenActivity> zawierający <xref:System.Workflow.Activities.HandleExternalEventActivity> reprezentowaną przez kolejkę "{0}".</span><span class="sxs-lookup"><span data-stu-id="7cf6b-169">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-170">W poniższym przykładzie pokazano wysyłania informacji do wystąpienia przepływu pracy przy użyciu `EnqueueItemOnIdle` metody.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-170">The following example demonstrates sending information to a workflow instance using the `EnqueueItemOnIdle` method.</span></span> <span data-ttu-id="7cf6b-171">Po pierwsze utworzeniu i uruchomieniu; obiekt WorkflowInstance następnie, obiekt, który implementuje <xref:System.Workflow.Runtime.IPendingWork> interfejs został utworzony.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-171">First, a WorkflowInstance object is created and started; next, an object that implements the <xref:System.Workflow.Runtime.IPendingWork> interface is created.</span></span> <span data-ttu-id="7cf6b-172">`EnqueueItemOnIdle` następnie jest wywoływana, przekazując wartości ciągu dla nazwy kolejki, elementu umieszczonych w kolejce, a element roboczy do przekazania do metody pendingWork obiektu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-172">`EnqueueItemOnIdle` is then called, passing in string values for the queue name, the enqueued item, and the work item to be passed to the methods of the pendingWork object.</span></span>  
  
 [!code-csharp[WF_Samples#12](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#12)]
 [!code-vb[WF_Samples#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7cf6b-173">
            <paramref name="queueName" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-173">
              <paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-174">Aparat środowiska uruchomieniowego przepływu pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-174">The workflow runtime engine is not running.</span>
          </span>
          <span data-ttu-id="7cf6b-175">- lub - wystąpienia przepływu pracy jest wstrzymana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-175">-or-  The workflow instance is suspended.</span>
          </span>
          <span data-ttu-id="7cf6b-176">- lub - <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> określonego przez <paramref name="queueName" /> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-176">-or-  The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span>
          </span>
          <span data-ttu-id="7cf6b-177">- lub - <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> określonego przez <paramref name="queueName" /> nie jest włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-177">-or-  The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="workflowInstance.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7cf6b-178">Obiekt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-178">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7cf6b-179">Zwraca wartość wskazującą, czy określony obiekt jest taki sam <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-179">Returns a value that indicates whether the specified object is equal to the <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7cf6b-180">
            <see langword="true" /> Jeśli określony obiekt jest taki sam <see cref="T:System.Workflow.Runtime.WorkflowInstance" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-180">
              <see langword="true" /> if the specified object is equal to this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-181">Obiekt musi być wystąpieniem elementu <xref:System.Workflow.Runtime.WorkflowInstance> klasy i tej samej <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> jako to <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-181">The object must be an instance of the <xref:System.Workflow.Runtime.WorkflowInstance> class and have the same <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> as this <xref:System.Workflow.Runtime.WorkflowInstance>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="workflowInstance.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-182">Zwraca wartość skrótu dla tego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-182">Returns the hash code for this workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7cf6b-183">Wartość skrótu dla tego <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-183">The hash code for this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-184"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> Zwraca wartość skrótu na podstawie wartości z <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-184"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> returns a hash code based on the value of <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowDefinition">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity GetWorkflowDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity GetWorkflowDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowDefinition () As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ GetWorkflowDefinition();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowDefinition : unit -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowInstance.GetWorkflowDefinition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-185">Pobiera działania głównego dla tego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-185">Retrieves the root activity for this workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7cf6b-186">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> Obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-186">An <see cref="T:System.Workflow.ComponentModel.Activity" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-187">Działanie główne umożliwia przechodzenie hierarchii działania przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-187">You can use the root activity to navigate the activity hierarchy of the workflow.</span></span>  
  
 <span data-ttu-id="7cf6b-188">Ta metoda nie jest wielowątkowość, więc hosta powinien synchronizować się jego wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-188">This method is not thread safe, so the host should synchronize its calls to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-189">W poniższym przykładzie pokazano, pobieranie definicji przepływu pracy z wystąpieniem przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-189">The following example demonstrates retrieving the workflow definition from a workflow instance.</span></span>  <span data-ttu-id="7cf6b-190">W tym przykładzie pochodzi z porządkowanie stanu maszyna przykład zestawu SDK, z pliku Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-190">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="7cf6b-191">Aby uzyskać więcej informacji, zobacz [porządkowanie próbki maszyny stanu](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="7cf6b-191">For more information, see the [Ordering State Machine Sample](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#86](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#86)]
 [!code-vb[WF_Samples#86](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#86)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowNextTimerExpiration">
      <MemberSignature Language="C#" Value="public DateTime GetWorkflowNextTimerExpiration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetWorkflowNextTimerExpiration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowNextTimerExpiration () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetWorkflowNextTimerExpiration();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowNextTimerExpiration : unit -&gt; DateTime" Usage="workflowInstance.GetWorkflowNextTimerExpiration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-192">Zwraca następnego punktu w czasie tego <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> jest zaplanowane do dostarczenia komunikatu czasomierza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-192">Returns the next point in time that this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> is scheduled to be delivered a timer message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7cf6b-193">Wartość daty/godziny, która reprezentuje następnej <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /> czasu to <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> można dostarczyć komunikatu czasomierza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-193">A DateTime value that represents the next <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /> time this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> will be delivered a timer message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7cf6b-194">W poniższym przykładzie pokazano, przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> metodę, aby sprawdzić, czy komunikaty czasomierza przepływu pracy są dodawane do kolejki.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-194">The following example demonstrates using the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> method to determine if more workflow timer messages are enqueued.</span></span> <span data-ttu-id="7cf6b-195">W tym przykładzie jest z próbki WorkflowThreading zestawu SDK, z pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-195">This example is from the WorkflowThreading SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="7cf6b-196">Aby uzyskać więcej informacji, zobacz [próbki wątkowość przepływu pracy](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span><span class="sxs-lookup"><span data-stu-id="7cf6b-196">For more information, see [Workflow Threading Sample](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span></span>  
  
 [!code-csharp[WF_Samples#284](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#284)]
 [!code-vb[WF_Samples#284](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#284)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Workflow.Runtime.TimerEventSubscription" />
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueueData">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueueData () As ReadOnlyCollection(Of WorkflowQueueInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::Runtime::WorkflowQueueInfo ^&gt; ^ GetWorkflowQueueData();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowQueueData : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;" Usage="workflowInstance.GetWorkflowQueueData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-197">Pobiera kolekcję <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> obiekty, które zawiera elementy oczekujące i subskrybowane działań dla kolejek przepływu pracy skojarzonego z tym wystąpieniem przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-197">Gets a collection of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7cf6b-198">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> z <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-198">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-199"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> Zwraca kolekcję <xref:System.Workflow.Runtime.WorkflowQueueInfo> obiektów, z których każdy zawiera informacje o stanie kolejki przepływu pracy skojarzonego z tym wystąpieniem przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-199"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> returns a collection of <xref:System.Workflow.Runtime.WorkflowQueueInfo> objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</span></span> <span data-ttu-id="7cf6b-200"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> zawiera elementy oczekujące dla <xref:System.Workflow.Runtime.WorkflowQueue> i <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> zawiera listę działań, które są zasubskrybowano w celu dostarczania elementu <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-200"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> contains the pending items for a <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> contains a list of the activities that are subscribed for item delivery on a <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-201">W poniższym przykładzie kodu pokazano, jak używasz <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> metodę, aby uzyskać informacje o stanie wszystkich kolejek przepływu pracy skojarzonego z <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-201">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method to obtain information about the state of all workflow queues associated with a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="7cf6b-202">Gdy <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> wystąpi zdarzenie, `OnWorkflowIdled` zdefiniowane w tym przykładzie metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-202">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="7cf6b-203">Określa, który przepływ pracy jest idled przy użyciu <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> właściwości, a następnie pobiera kolekcję elementów w kolejce dla przepływu pracy wystąpienia przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-203">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="7cf6b-204">Kod iteracji w kolekcji, aby określić działanie (activity) oczekuje na zdarzenie, które idled przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-204">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="7cf6b-205">Następnie wysyła wyjątek do kolejki przepływu pracy przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> metody wraz z nazwą elementu kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-205">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="7cf6b-206">Ten przykładowy kod jest częścią Cancelling przepływu pracy SDK przykładowe z pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-206">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="7cf6b-207">Aby uzyskać więcej informacji, zobacz [anulowanie przepływu pracy](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="7cf6b-207">For more information, see [Canceling a Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-208">Aparat środowiska uruchomieniowego przepływu pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-208">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public Guid InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid InstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : Guid" Usage="System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-209">Pobiera unikatowy identyfikator dla wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-209">Gets the unique identifier for the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7cf6b-210">
            <see cref="T:System.Guid" /> Wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-210">The <see cref="T:System.Guid" /> of the workflow instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-211">Można użyć <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> do odwołania do wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-211">You can use <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> to reference the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-212">W poniższym przykładzie kodu pokazano, jak używasz <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> właściwość, aby uzyskać informacje na temat <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-212">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property to obtain information about a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="7cf6b-213">Tworzy pierwszego fragmentu kodu <xref:System.Workflow.Runtime.WorkflowInstance> zmiennej o nazwie `instanceId`.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-213">The first code snippet creates a <xref:System.Workflow.Runtime.WorkflowInstance> variable named `instanceId`.</span></span>  
  
 [!code-csharp[WF_Samples#210](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#210)]
 [!code-vb[WF_Samples#210](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#210)]  
  
 <span data-ttu-id="7cf6b-214">Drugi fragment używa <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> właściwość jako pierwszy obiekt w `OrderEventArgs` wywołać konstruktora, kiedy `CallBackForApproval` metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-214">The second snippet uses the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property as the first object in an `OrderEventArgs` constructor call when the `CallBackForApproval` method is called.</span></span>  
  
 <span data-ttu-id="7cf6b-215">Ten przykładowy kod jest częścią przykład zestawu SDK nasłuchiwanie z pliku OrderServiceImple.cs.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-215">This code example is part of the Listen SDK Sample from the OrderServiceImple.cs file.</span></span> <span data-ttu-id="7cf6b-216">Aby uzyskać więcej informacji, zobacz [nasłuchiwania próbki](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="7cf6b-216">For more information, see [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[WF_Samples#211](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#211)]
 [!code-vb[WF_Samples#211](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#211)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="workflowInstance.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-217">Ładuje wystąpienia przepływu pracy wcześniej usunięty z pamięci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-217">Loads a previously unloaded workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-218"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> synchroniczna; Jeśli wystąpienie przepływu pracy mogą być ładowane, <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> zwróci po wystąpienia przepływu pracy zostało załadowane do pamięci i zaplanowane przez aparat środowiska uruchomieniowego przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-218"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is synchronous; if the workflow instance can be loaded, <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</span></span> <span data-ttu-id="7cf6b-219">Środowisko uruchomieniowe zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> zdarzeń po usługi utrwalania przywróciła wystąpienia przepływu pracy w pamięci, ale przed przepływu pracy aparatu wykonawczego planuje wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-219">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-220">W poniższym przykładzie pokazano, jak załadować wcześniej zwolniony <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-220">The following example demonstrates how to load a previously unloaded <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#10](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#10)]
 [!code-vb[WF_Samples#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-221">Aparat środowiska uruchomieniowego przepływu pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-221">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReloadTrackingProfiles">
      <MemberSignature Language="C#" Value="public void ReloadTrackingProfiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReloadTrackingProfiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadTrackingProfiles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadTrackingProfiles();" />
      <MemberSignature Language="F#" Value="member this.ReloadTrackingProfiles : unit -&gt; unit" Usage="workflowInstance.ReloadTrackingProfiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-222">Załaduj ponownie profile śledzenia dla tego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-222">Reload the tracking profiles for this workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-223">Infrastrukturze środowiska uruchomieniowego śledzenia spowoduje ponowne załadowanie każdego <xref:System.Workflow.Runtime.Tracking.TrackingProfile> dla tego wystąpienia przepływu pracy skojarzonego z jego kanały śledzenia.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-223">The runtime tracking infrastructure will reload each <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for this workflow instance associated with its tracking channels.</span></span> <span data-ttu-id="7cf6b-224">Jeśli nie jest w stanie wstrzymanym, przepływ pracy jest tymczasowo wstrzymane przez środowisko uruchomieniowe śledzenia infrastruktury, gdy są ładowane profile śledzenia.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-224">If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-225">Aparat środowiska uruchomieniowego przepływu pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-225">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="workflowInstance.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-226">Wznawia wykonywanie wystąpienia przepływu pracy wstrzymanej wcześniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-226">Resumes execution of a previously suspended workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-227">Hosta można wywołać <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> można wznowić wykonywania wystąpienia przepływu pracy, który został wcześniej zawieszony.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-227">The host can call <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> to resume execution of a workflow instance that has been previously suspended.</span></span> <span data-ttu-id="7cf6b-228">Jeśli wystąpienie przepływu pracy nie jest w stanie wstrzymanym, nie podjęto żadnej akcji.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-228">If the workflow instance is not in the suspended state, no action is taken.</span></span> <span data-ttu-id="7cf6b-229">Środowisko uruchomieniowe zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> zdarzeń tuż przed wznowieniem wykonywania wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-229">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event just before execution of the workflow instance is resumed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-230">W poniższym przykładzie pokazano wywoływania wznowienia w wystąpieniu wcześniej Wstrzymany przepływ pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-230">The following example demonstrates calling Resume on a previously suspended workflow instance.</span></span>  <span data-ttu-id="7cf6b-231">W tym przykładzie jest z próbki wstrzymywanie i zakończyć zestawu SDK.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-231">This example is from the Suspend and Terminate SDK sample.</span></span>  <span data-ttu-id="7cf6b-232">Aby uzyskać więcej informacji, zobacz [zawieszenia i zakończyć przykładowa](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span><span class="sxs-lookup"><span data-stu-id="7cf6b-232">For more information, see [Suspend and Terminate Sample](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span></span>  
  
 [!code-csharp[WF_Samples#172](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#172)]
 [!code-vb[WF_Samples#172](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#172)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-233">Aparat środowiska uruchomieniowego przepływu pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-233">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="workflowInstance.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-234">Rozpoczyna wykonywanie wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-234">Starts the execution of the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-235"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> wywołania <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> w działaniu głównym tego wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-235"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> calls <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> on the root activity of this workflow instance.</span></span> <span data-ttu-id="7cf6b-236">Jeśli <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> napotkał wyjątek, zostaje zakończone wystąpienia przepływu pracy, wywołując <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> z <xref:System.Exception.Message%2A> właściwość wyjątku przekazany jako przyczyna dla zakończenia połączenia.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-236">If <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> encounters an exception, it terminates the workflow instance by calling <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> with the <xref:System.Exception.Message%2A> property of the exception passed as the reason for the termination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-237">W poniższym przykładzie kodu pokazano, jak używasz <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> metodę, aby uruchomić <xref:System.Workflow.Runtime.WorkflowInstance> hosta przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-237">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method to start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="7cf6b-238">Kod tworzy wystąpienie <xref:System.Workflow.Runtime.WorkflowRuntime>, dodaje do środowiska wykonawczego usług i następnie przedstawiono zalecany sposób tworzenia <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-238">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="7cf6b-239">Tworzy <xref:System.Type> obiektu i rzutuje na jednym z obiektów przepływu pracy, z którymi skojarzono hosta.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-239">It creates a <xref:System.Type> object and casts it to one of the workflow objects with which the host is associated.</span></span> <span data-ttu-id="7cf6b-240">Kod obok inicjuje <xref:System.Workflow.Runtime.WorkflowInstance> przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> — metoda i przekazywanie wcześniej utworzony typ do niego.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-240">The code next initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="7cf6b-241"><xref:System.Workflow.Runtime.WorkflowInstance> Zostanie uruchomiony przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-241">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="7cf6b-242">Ten przykładowy kod jest częścią Cancelling przepływu pracy SDK przykładowe z pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-242">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="7cf6b-243">Aby uzyskać więcej informacji, zobacz [anulowanie przepływu pracy](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="7cf6b-243">For more information, see [Canceling a Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-244">Aparat środowiska uruchomieniowego przepływu pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-244">The workflow runtime engine is not running.</span>
          </span>
          <span data-ttu-id="7cf6b-245">- lub - wystąpienie przepływu pracy zostało już uruchomione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-245">-or-  The workflow instance has already been started.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Suspend (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Suspend(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Suspend : string -&gt; unit" Usage="workflowInstance.Suspend error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error">
          <span data-ttu-id="7cf6b-246">Opis powodu wstrzymanie tego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-246">A description of the reason for suspending the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7cf6b-247">Wstrzymuje wykonywanie wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-247">Suspends the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-248">Wystąpienie przepływu pracy został wstrzymany w sposób synchronicznego.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-248">The workflow instance is suspended in a synchronous manner.</span></span> <span data-ttu-id="7cf6b-249">Jeśli wystąpienie przepływu pracy jest już wstrzymana, nie podjęto żadnej akcji; w przeciwnym razie aparatu wykonawczego workflow wstrzymuje wystąpienia przepływu pracy, generuje <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> zdarzenia i przekazuje `reason` w <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-249">If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> event and passes `reason` in a <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7cf6b-250"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> nie spowoduje usunięcia wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-250"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> does not unload the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-251">Poniższy przykład kodu pokazuje wywoływania zawieszenia na <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-251">The following code example demonstrates calling Suspend on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#9](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#9)]
 [!code-vb[WF_Samples#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-252">Aparat środowiska uruchomieniowego przepływu pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-252">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string -&gt; unit" Usage="workflowInstance.Terminate error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error">
          <span data-ttu-id="7cf6b-253">Opis Przyczyna przerywanie wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-253">A description of the reason for terminating the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7cf6b-254">Kończy wystąpienia przepływu pracy w sposób synchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-254">Terminates the workflow instance in a synchronous manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-255">Wystąpienie przepływu pracy zostało przerwane w sposób synchronicznego.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-255">The workflow instance is terminated in a synchronous manner.</span></span> <span data-ttu-id="7cf6b-256">Wywołania hosta <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> zakończenie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-256">The host calls <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> to terminate the workflow instance.</span></span> <span data-ttu-id="7cf6b-257">Aparatu wykonawczego workflow czyści wystąpienia przepływu pracy w pamięci i informuje usługi utrwalania, że wystąpienie zostało wyczyszczone z pamięci.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-257">The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="7cf6b-258">Aby uzyskać <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, oznacza to, że wszystkie informacje o stanie dla tego wystąpienia przepływu pracy została usunięta z bazy danych po zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-258">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="7cf6b-259">Nie można ponownie załadować wystąpienia przepływu pracy z punktu zapisanych wcześniej trwałości.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-259">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
 <span data-ttu-id="7cf6b-260">Po wystąpienia przepływu pracy w pamięci jest wyczyszczone i usługi utrwalania zostanie poinformowany o rozwiązaniu, `Terminate` metoda zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> zdarzenia i przekazuje `reason` w <xref:System.Exception.Message%2A> właściwość <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> zawarte w <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-260">After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the `Terminate` method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event and passes `reason` in the <xref:System.Exception.Message%2A> property of a <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> contained in the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span></span>  
  
 <span data-ttu-id="7cf6b-261">`Terminate` różni się od <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> w tym podczas przerwania czyści wystąpienia przepływu pracy w pamięci i informuje o trwałości usługa przerwanie, `Abort` po prostu usuwa wystąpienia przepływu pracy w pamięci, która może zostać uruchomiony ponownie w ciągu ostatnich punkt trwałości.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-261">`Terminate` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, `Abort` simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-262">Poniższy przykład kodu pokazuje wywołanie przerwania na <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-262">The following code example demonstrates calling Terminate on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#8](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#8)]
 [!code-vb[WF_Samples#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-263">Aparat środowiska uruchomieniowego przepływu pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-263">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryUnload">
      <MemberSignature Language="C#" Value="public bool TryUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.TryUnload" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUnload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryUnload();" />
      <MemberSignature Language="F#" Value="member this.TryUnload : unit -&gt; bool" Usage="workflowInstance.TryUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-264">Zwalnia wystąpienie przepływu pracy z pamięci w magazynie trwałości, gdy wystąpienie jest wstrzymane lub bezczynności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-264">Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7cf6b-265">
            <see langword="true" /> Jeśli wystąpienie przepływu pracy został zwolniony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-265">
              <see langword="true" /> if the workflow instance was unloaded; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-266">Jeśli wystąpienia przepływu pracy jest w stanie bezczynności lub wstrzymania, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> usunąć wystąpienia przepływu pracy z pamięci i utrwala go do magazynu danych przy użyciu usługi trwałości.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-266">If the workflow instance is idle or suspended, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> uses the persistence service to remove the workflow instance from memory and persist it to a data store.</span></span> <span data-ttu-id="7cf6b-267">Jeśli jest zarejestrowana żadna usługa trwałości z <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-267">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="7cf6b-268">Jeśli wystąpienie przepływu pracy jest poprawnie utrwalona, środowisko uruchomieniowe zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> zdarzeń i zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-268">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event, and returns `true`.</span></span> <span data-ttu-id="7cf6b-269"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> Zwraca `false` wystąpienia przepływu pracy został już zwolniony, zostało zakończone, została przerwana czy zostało już zakończone.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-269"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> returns `false` if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</span></span>  
  
 <span data-ttu-id="7cf6b-270">Można używać hosta <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> odzyskiwaniu zasoby systemowe z bezczynności przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-270">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-271">W poniższym przykładzie pokazano, przy użyciu metody TryUnload do zwolnienia przepływu pracy podczas <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> generowane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-271">The following example demonstrates using the TryUnload method to unload a workflow when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event fires.</span></span> <span data-ttu-id="7cf6b-272">W tym przykładzie jest z próbki przy użyciu trwałości usługi SDK, z pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-272">This example is from the Using Persistence Services SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="7cf6b-273">Aby uzyskać więcej informacji, zobacz [przy użyciu przykładowych usług trwałości](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span><span class="sxs-lookup"><span data-stu-id="7cf6b-273">For more information, see [Using Persistence Services Sample](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span></span>  
  
 [!code-csharp[WF_Samples#280](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#280)]
 [!code-vb[WF_Samples#280](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#280)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-274">Nie ma usługi utrwalania zarejestrowana w usłudze aparatu wykonawczego workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-274">There is no persistence service registered with the workflow runtime engine.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="workflowInstance.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-275">Zwalnia wystąpienie przepływu pracy z pamięci w magazynie trwałości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-275">Unloads the workflow instance from memory to the persistence store.</span>
          </span>
          <span data-ttu-id="7cf6b-276">To wywołanie blokuje dopiero po zakończeniu obecnie zaplanowanych zadań, lub na końcu zakresu transakcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-276">This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cf6b-277"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> synchroniczna; oznacza to zwraca po zakończeniu wykonywania akcji.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-277"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> is synchronous; that is, it returns after completing any action that it performs.</span></span> <span data-ttu-id="7cf6b-278">Jeśli wystąpienie przepływu pracy nie jest bezczynny, środowisko uruchomieniowe oczekuje, aż wystąpienie może zostać przerwane.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-278">If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</span></span> <span data-ttu-id="7cf6b-279">Tylko można przerwać wystąpienia, po zakończeniu elementu obecnie zaplanowanych zadań; jest to zazwyczaj gdy aktualnie uruchomione działanie zwróci z jego <xref:System.Workflow.ComponentModel.Activity.Execute%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-279">An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its <xref:System.Workflow.ComponentModel.Activity.Execute%2A> method.</span></span> <span data-ttu-id="7cf6b-280">Jednak jeśli wystąpienie jest wykonywany <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, zakresu transakcji należy ukończyć wykonywania wystąpienia może zostać przerwane.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-280">However, if the instance is executing a <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, the transaction scope must complete execution before the instance can be interrupted.</span></span> <span data-ttu-id="7cf6b-281">Zwolnienie następnie używa usługi trwałości można usunąć wystąpienia przepływu pracy z pamięci i będzie się utrzymywał w magazynie danych.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-281">Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</span></span> <span data-ttu-id="7cf6b-282">Jeśli jest zarejestrowana żadna usługa trwałości z <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-282">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="7cf6b-283">Jeśli wystąpienie przepływu pracy jest poprawnie utrwalona, środowisko uruchomieniowe zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-283">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="7cf6b-284">Można używać hosta <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> odzyskiwaniu zasoby systemowe z bezczynności przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-284">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7cf6b-285">W poniższym przykładzie pokazano wywoływania <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> na <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-285">The following example demonstrates calling <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#11](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#11)]
 [!code-vb[WF_Samples#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7cf6b-286">Nie ma usługi utrwalania zarejestrowana w usłudze aparatu wykonawczego workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-286">There is no persistence service registered with the workflow runtime engine.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowRuntime">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowRuntime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ WorkflowRuntime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowRuntime : System.Workflow.Runtime.WorkflowRuntime" Usage="System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7cf6b-287">Pobiera <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> dla tego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-287">Gets the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> for this workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7cf6b-288">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> reprezentujący środowiska wykonawczego, w której to wystąpienie przepływu pracy jest uruchomiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7cf6b-288">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that represents the execution environment in which this workflow instance is running.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7cf6b-289">W poniższym przykładzie pokazano, uzyskiwanie dostępu do wykonywania <xref:System.Workflow.Runtime.WorkflowRuntime> z <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7cf6b-289">The following example demonstrates accessing the executing <xref:System.Workflow.Runtime.WorkflowRuntime> of a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#7](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#7)]
 [!code-vb[WF_Samples#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>