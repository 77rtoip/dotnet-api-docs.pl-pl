<Type Name="WorkflowInstance" FullName="System.Workflow.Runtime.WorkflowInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f6722f462218341de377b996c28536f8dae9901" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52222298" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowInstance" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInstance sealed" />
  <TypeSignature Language="F#" Value="type WorkflowInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2e2ff-101">Reprezentuje wystąpienie przepływu pracy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2e2ff-101">Represents a workflow instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="2e2ff-102"><xref:System.Workflow.Runtime.WorkflowInstance> Klasa udostępnia metody i właściwości, które mogą służyć do kontrolowania wykonywania wystąpienia przepływu pracy; jest zasadniczo serwera proxy do wystąpienia faktyczny przepływ pracy, używany przez aparatu wykonawczego przepływów pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-102">The <xref:System.Workflow.Runtime.WorkflowInstance> class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</span></span> <span data-ttu-id="2e2ff-103">Hosta lub usługi można nakazać aparatu wykonawczego przepływów pracy do wykonywania akcji względem wystąpienia przepływu pracy przez wywołanie odpowiedniej metody, które są zawarte w <xref:System.Workflow.Runtime.WorkflowInstance> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-103">A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the <xref:System.Workflow.Runtime.WorkflowInstance> class.</span></span>  <span data-ttu-id="2e2ff-104">Jeśli żądana akcja nie jest prawidłowy, na przykład, jeśli host nie wywoła <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> w wystąpieniu przepływu pracy, który został już ukończony, aparatu wykonawczego przepływów pracy zgłosi wyjątek odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-104">If the requested action is not valid, for example, if the host calls <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2e2ff-105">Jeśli wystąpienie przepływu pracy przestanie odpowiadać, ponieważ nie zwraca wywołanie aplikacji hosta, jedynym sposobem odzyskania wystąpienie jest ponowne uruchomienie w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-105">If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</span></span> <span data-ttu-id="2e2ff-106">Jednak jeśli wystąpienie zostało wymuszone zwolniony, zostało przerwane lub wstrzymana, jego może być kontynuowane, wywołując <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-106">However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-107">Poniższy przykład kodu demonstruje, jak utworzyć i uruchomić <xref:System.Workflow.Runtime.WorkflowInstance> hosta przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-107">The following code example demonstrates how you can create and start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="2e2ff-108">Ten kod tworzy wystąpienie <xref:System.Workflow.Runtime.WorkflowRuntime>, dodanie usługi do środowiska uruchomieniowego, a następnie pokazuje zalecany sposób tworzenia <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-108">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="2e2ff-109">Inicjuje kod <xref:System.Workflow.Runtime.WorkflowInstance> przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> metody i przekazanie wcześniej utworzony typ do niego.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-109">The code initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="2e2ff-110"><xref:System.Workflow.Runtime.WorkflowInstance> Zostanie uruchomiony przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-110">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="2e2ff-111">Ten przykład kodu jest częścią anulowanie przepływu pracy zestawu SDK przykładowe z pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-111">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="2e2ff-112">Aby uzyskać więcej informacji, zobacz [anulowanie przepływu pracy](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="2e2ff-112">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2e2ff-113">Ten typ jest bezpieczny wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2e2ff-113">This type is thread safe.</span>
      </span>
    </threadsafe>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)">
      <span data-ttu-id="2e2ff-114">Trwa anulowanie przepływu pracy</span>
      <span class="sxs-lookup">
        <span data-stu-id="2e2ff-114">Canceling a Workflow</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="workflowInstance.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-115">Przerywa wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-115">Aborts the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-116">Wystąpienie przepływu pracy zostało przerwane w sposób synchroniczne. oznacza to metoda zwraca po wystąpienia przepływu pracy zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-116">The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</span></span> <span data-ttu-id="2e2ff-117">Aparatu wykonawczego przepływów pracy unieważnia wystąpienia przepływu pracy w pamięci i czyszczenia <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-117">The workflow runtime engine invalidates the workflow instance in memory and clears the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="2e2ff-118">Jeśli usługa stanu trwałego użył wystąpienia przepływu pracy, wszystkich działań wykonanych od czasu ostatniego punktu trwałości jest wyrzucać.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-118">If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</span></span> <span data-ttu-id="2e2ff-119">Po jego przerywa wystąpienia przepływu pracy, aparatu wykonawczego przepływów pracy zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-119">After it aborts the workflow instance, the workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> event.</span></span> <span data-ttu-id="2e2ff-120">Możesz wywołać <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> Aby ponownie załadować wystąpienia przepływu pracy i Rozpocznij od ostatniego punktu stanu trwałego.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-120">You can call <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> to reload the workflow instance and start from its last persistence point.</span></span>  
  
 <span data-ttu-id="2e2ff-121">`Abort` różni się od <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> tego czasu `Abort` po prostu usuwa wystąpienie przepływu pracy w pamięci i może zostać uruchomiony ponownie z ostatniego punktu trwałości przerwania usuwa wystąpienie przepływu pracy w pamięci i informuje o trwałości usługę wystąpienie zostało wyczyszczone z pamięci.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-121">`Abort` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> in that while `Abort` simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="2e2ff-122">Aby uzyskać <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, oznacza to, że wszystkie informacje o stanie dla tego wystąpienia przepływu pracy zostanie usunięta z bazy danych po zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-122">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="2e2ff-123">Nie można ponownie załadować wystąpienia przepływu pracy od punktu poprzednio zapisanego stanu trwałego.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-123">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-124">W poniższym przykładzie pokazano przerwania wywoływania na wystąpienie przepływu pracy typu Workflow1.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-124">The following example demonstrates calling Abort on a workflow instance of type Workflow1.</span></span>  
  
 [!code-csharp[WF_Samples#13](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#13)]
 [!code-vb[WF_Samples#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-125">Aparatu wykonawczego przepływów pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-125">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyWorkflowChanges">
      <MemberSignature Language="C#" Value="public void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyWorkflowChanges(class System.Workflow.ComponentModel.WorkflowChanges workflowChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyWorkflowChanges(System::Workflow::ComponentModel::WorkflowChanges ^ workflowChanges);" />
      <MemberSignature Language="F#" Value="member this.ApplyWorkflowChanges : System.Workflow.ComponentModel.WorkflowChanges -&gt; unit" Usage="workflowInstance.ApplyWorkflowChanges workflowChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowChanges" Type="System.Workflow.ComponentModel.WorkflowChanges" />
      </Parameters>
      <Docs>
        <param name="workflowChanges">
          <span data-ttu-id="2e2ff-126">A <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> określenie aktualizacji dynamicznych dla wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-126">A <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> specifying dynamic updates for the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e2ff-127">Zastosowanie zmian dla wystąpienia przepływu pracy, określony przez <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-127">Applies changes to the workflow instance specified by the <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-128">Wystąpienie przepływu pracy nie jest już wstrzymany, aparatu wykonawczego przepływów pracy tymczasowo wstrzymuje wystąpienie przed zastosowaniem zmian.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-128">If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-129">W poniższym przykładzie pokazano wywoływania ApplyWorkflowChanges do <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-129">The following example demonstrates calling ApplyWorkflowChanges to a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  <span data-ttu-id="2e2ff-130">W tym przykładzie pochodzi z przykładu porządkowanie SDK maszyny stanu z pliku Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-130">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="2e2ff-131">Aby uzyskać więcej informacji, zobacz [porządkowanie przykładowe maszyny stanu](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="2e2ff-131">For more information, see the [Ordering State Machine Sample](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#89](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#89)]
 [!code-vb[WF_Samples#89](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-132">Aparatu wykonawczego przepływów pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-132">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItem">
      <MemberSignature Language="C#" Value="public void EnqueueItem (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItem(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItem (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItem(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItem : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItem (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName">
          <span data-ttu-id="2e2ff-133">Nazwa <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-133">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2e2ff-134">Obiekt, który można umieścić w kolejce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-134">The object to enqueue.</span>
          </span>
        </param>
        <param name="pendingWork">
          <span data-ttu-id="2e2ff-135">
            <see cref="T:System.Workflow.Runtime.IPendingWork" /> Umożliwiającą nadawcy Aby otrzymywać powiadomienia, gdy <paramref name="item" /> są dostarczane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-135">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <paramref name="item" /> is delivered.</span>
          </span>
        </param>
        <param name="workItem">
          <span data-ttu-id="2e2ff-136">Obiekt, który zostanie przekazany do <see cref="T:System.Workflow.Runtime.IPendingWork" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-136">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e2ff-137">Synchronicznie wysyła komunikat do kolejki określonego przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-137">Posts a message to the specified workflow queue synchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-138">Wysyła `item` określonej <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-138">Sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="2e2ff-139">Jeśli chcesz otrzymywać powiadomienia, gdy komunikat jest dostarczany, można zaimplementować <xref:System.Workflow.Runtime.IPendingWork> w usłudze i w przebiegu `workItem` i <xref:System.Workflow.Runtime.IPendingWork> obiekt <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-139">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="2e2ff-140">Jeśli nie chcesz takiego powiadomienia, można przekazać odwołanie o wartości null (`Nothing` w języku Visual Basic) dla `pendingWork` i `workItem`.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-140">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="2e2ff-141">Przy użyciu tej metody za pomocą przepływ pracy automatu stanów, możesz otrzymać wyjątek z komunikatem "kolejki"{0}"nie jest włączona."</span><span class="sxs-lookup"><span data-stu-id="2e2ff-141">When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="2e2ff-142">Dzieje się tak, gdy bieżący stan automatu stanów nie potrafi obsłużyć określonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-142">This happens when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="2e2ff-143">Na przykład, jeśli pewnego stanu, innym niż bieżący stan zawiera <xref:System.Workflow.Activities.EventDrivenActivity> zawierający <xref:System.Workflow.Activities.HandleExternalEventActivity> reprezentowaną przez kolejkę "{0}".</span><span class="sxs-lookup"><span data-stu-id="2e2ff-143">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2e2ff-144">Komunikaty nie gwarantuje odbierane przez wystąpienie przepływu pracy, w kolejności, w której zostały wysłane.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-144">Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</span></span> <span data-ttu-id="2e2ff-145">Na przykład jeśli odebranie komunikatu w istniejącym kolejki przepływu pracy można utworzyć kolejki innej kolejki B, który następnie będzie nasłuchiwać pod kątem kolejną wiadomość wysłana po pierwszy komunikat powoduje, że (kolejki A), jest możliwe, że drugi komunikat zostanie wyświetlony pierwszy i nie będą odbierane ze względu na jej kolejki nie są jeszcze utworzona.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-145">For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</span></span> <span data-ttu-id="2e2ff-146">Aby uniknąć tego problemu, drugi komunikat nie należy jej wysyłać dopóki nie zostanie zweryfikowana obecności drugi kolejki (przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span><span class="sxs-lookup"><span data-stu-id="2e2ff-146">To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-147">Poniższy przykład kodu demonstruje sposób używania <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-147">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="2e2ff-148">Gdy <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> wystąpi zdarzenie, `OnWorkflowIdled` metody zdefiniowanej w tym przykładzie jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-148">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="2e2ff-149">Określa, który przepływ pracy jest bezczynny, za pomocą <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> właściwości, a następnie pobiera kolekcję elementów umieszczonych w kolejce dla przepływu pracy wystąpienie przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-149">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="2e2ff-150">Kod iteruje po kolekcji, aby określić, które działania oczekuje na zdarzenie, które bezczynny przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-150">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="2e2ff-151">Następnie wysyła wyjątek do kolejki przepływu pracy przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> metoda wraz z nazwą elementu do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-151">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="2e2ff-152">Ten przykład kodu jest częścią anulowanie przepływu pracy zestawu SDK przykładowe z pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-152">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="2e2ff-153">Aby uzyskać więcej informacji, zobacz [anulowanie przepływu pracy](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="2e2ff-153">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e2ff-154">
            <paramref name="queueName" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-154">
              <paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-155">Aparatu wykonawczego przepływów pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-155">The workflow runtime engine is not running.</span>
          </span>
          <span data-ttu-id="2e2ff-156">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-156">-or-</span>
          </span>
          <span data-ttu-id="2e2ff-157">
            <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> Określony przez <paramref name="queueName" /> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-157">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span>
          </span>
          <span data-ttu-id="2e2ff-158">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-158">-or-</span>
          </span>
          <span data-ttu-id="2e2ff-159">
            <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> Określony przez <paramref name="queueName" /> nie jest włączona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-159">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span>
          </span>
        </exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)">
          <span data-ttu-id="2e2ff-160">Trwa anulowanie przepływu pracy</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-160">Canceling a Workflow</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItemOnIdle">
      <MemberSignature Language="C#" Value="public void EnqueueItemOnIdle (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItemOnIdle(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItemOnIdle (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItemOnIdle(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItemOnIdle : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItemOnIdle (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName">
          <span data-ttu-id="2e2ff-161">Nazwa <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-161">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2e2ff-162">Obiekt, który można umieścić w kolejce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-162">The object to enqueue.</span>
          </span>
        </param>
        <param name="pendingWork">
          <span data-ttu-id="2e2ff-163">
            <see cref="T:System.Workflow.Runtime.IPendingWork" /> Umożliwiającą nadawcy Aby otrzymywać powiadomienia, gdy <paramref name="item" /> są dostarczane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-163">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <paramref name="item" /> is delivered.</span>
          </span>
        </param>
        <param name="workItem">
          <span data-ttu-id="2e2ff-164">Obiekt, który zostanie przekazany do <see cref="T:System.Workflow.Runtime.IPendingWork" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-164">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e2ff-165">Wysyła komunikat do kolejki określonego przepływu pracy, gdy przepływ pracy jest w stanie bezczynności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-165">Posts a message to the specified workflow queue when the workflow is idle.</span>
          </span>
          <span data-ttu-id="2e2ff-166">
            <see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> czeka, aż przepływ pracy osiąga punkt bezczynności i umieszczeniu po zweryfikowaniu, że harmonogram przepływu pracy jest w stanie bezczynności (oznacza to, że żadna aktywna operacja jest wykonywana).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-166">
              <see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-167">Czeka, aż wystąpienie przepływu pracy przejdzie w stan bezczynności, a następnie wysyła `item` określonej <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-167">Waits for the workflow instance to become idle and then sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="2e2ff-168">Jeśli wywołasz <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> gdy wystąpienie przepływu pracy jest wstrzymane, aparatu wykonawczego przepływów pracy zgłosi <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-168">If you call <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> while the workflow instance is suspended, the workflow runtime engine will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="2e2ff-169">Jeśli chcesz otrzymywać powiadomienia, gdy komunikat jest dostarczany, można zaimplementować <xref:System.Workflow.Runtime.IPendingWork> w usłudze i w przebiegu `workItem` i <xref:System.Workflow.Runtime.IPendingWork> obiekt <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-169">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="2e2ff-170">Jeśli nie chcesz takiego powiadomienia, można przekazać odwołanie o wartości null (`Nothing` w języku Visual Basic) dla `pendingWork` i `workItem`.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-170">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="2e2ff-171">Używając tej metody za pomocą przepływ pracy automatu stanów, możesz otrzymać wyjątek, który zawiera komunikat "kolejki"{0}"nie jest włączona."</span><span class="sxs-lookup"><span data-stu-id="2e2ff-171">When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="2e2ff-172">Dzieje się tak, gdy bieżący stan automatu stanów nie potrafi obsłużyć określonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-172">This occurs when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="2e2ff-173">Na przykład, jeśli pewnego stanu, innym niż bieżący stan zawiera <xref:System.Workflow.Activities.EventDrivenActivity> zawierający <xref:System.Workflow.Activities.HandleExternalEventActivity> reprezentowaną przez kolejkę "{0}".</span><span class="sxs-lookup"><span data-stu-id="2e2ff-173">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-174">W poniższym przykładzie pokazano proces wysyłania informacji do wystąpienia przepływu pracy przy użyciu `EnqueueItemOnIdle` metody.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-174">The following example demonstrates sending information to a workflow instance using the `EnqueueItemOnIdle` method.</span></span> <span data-ttu-id="2e2ff-175">Po pierwsze utworzeniu i uruchomieniu; obiektu wystąpienia przepływu pracy następnie, obiekt, który implementuje <xref:System.Workflow.Runtime.IPendingWork> jest tworzony interfejs.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-175">First, a WorkflowInstance object is created and started; next, an object that implements the <xref:System.Workflow.Runtime.IPendingWork> interface is created.</span></span> <span data-ttu-id="2e2ff-176">`EnqueueItemOnIdle` następnie jest wywoływana, przekazując ciąg wartości dla nazwy kolejki elementów umieszczonych w kolejce i element roboczy, który zostanie przekazany do metody obiektu pendingWork.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-176">`EnqueueItemOnIdle` is then called, passing in string values for the queue name, the enqueued item, and the work item to be passed to the methods of the pendingWork object.</span></span>  
  
 [!code-csharp[WF_Samples#12](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#12)]
 [!code-vb[WF_Samples#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e2ff-177">
            <paramref name="queueName" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-177">
              <paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-178">Aparatu wykonawczego przepływów pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-178">The workflow runtime engine is not running.</span>
          </span>
          <span data-ttu-id="2e2ff-179">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-179">-or-</span>
          </span>
          <span data-ttu-id="2e2ff-180">Wystąpienie przepływu pracy jest zawieszone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-180">The workflow instance is suspended.</span>
          </span>
          <span data-ttu-id="2e2ff-181">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-181">-or-</span>
          </span>
          <span data-ttu-id="2e2ff-182">
            <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> Określony przez <paramref name="queueName" /> nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-182">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span>
          </span>
          <span data-ttu-id="2e2ff-183">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-183">-or-</span>
          </span>
          <span data-ttu-id="2e2ff-184">
            <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> Określony przez <paramref name="queueName" /> nie jest włączona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-184">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="workflowInstance.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2e2ff-185">Obiekt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-185">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e2ff-186">Zwraca wartość wskazującą, czy określony obiekt jest równy <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-186">Returns a value that indicates whether the specified object is equal to the <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e2ff-187">
            <see langword="true" /> Jeśli określony obiekt jest taki sam, tym <see cref="T:System.Workflow.Runtime.WorkflowInstance" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-187">
              <see langword="true" /> if the specified object is equal to this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-188">Obiekt musi być wystąpieniem elementu <xref:System.Workflow.Runtime.WorkflowInstance> klasy i mają taką samą <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> ponieważ <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-188">The object must be an instance of the <xref:System.Workflow.Runtime.WorkflowInstance> class and have the same <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> as this <xref:System.Workflow.Runtime.WorkflowInstance>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="workflowInstance.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-189">Zwraca wartość skrótu dla tego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-189">Returns the hash code for this workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e2ff-190">Wartość skrótu dla tego <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-190">The hash code for this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-191"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> Zwraca wartość skrótu na podstawie wartości <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-191"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> returns a hash code based on the value of <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowDefinition">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity GetWorkflowDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity GetWorkflowDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowDefinition () As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ GetWorkflowDefinition();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowDefinition : unit -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowInstance.GetWorkflowDefinition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-192">Pobiera działania głównego dla tego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-192">Retrieves the root activity for this workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e2ff-193">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> Obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-193">An <see cref="T:System.Workflow.ComponentModel.Activity" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-194">Działania głównego umożliwia nawigować po hierarchii działania przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-194">You can use the root activity to navigate the activity hierarchy of the workflow.</span></span>  
  
 <span data-ttu-id="2e2ff-195">Ta metoda nie jest bezpieczny wątkowo, więc hosta powinien synchronizować się jej wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-195">This method is not thread safe, so the host should synchronize its calls to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-196">W poniższym przykładzie pokazano pobierania definicji przepływu pracy z wystąpieniem przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-196">The following example demonstrates retrieving the workflow definition from a workflow instance.</span></span>  <span data-ttu-id="2e2ff-197">W tym przykładzie pochodzi z przykładu porządkowanie SDK maszyny stanu z pliku Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-197">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="2e2ff-198">Aby uzyskać więcej informacji, zobacz [porządkowanie przykładowe maszyny stanu](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="2e2ff-198">For more information, see the [Ordering State Machine Sample](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#86](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#86)]
 [!code-vb[WF_Samples#86](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#86)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowNextTimerExpiration">
      <MemberSignature Language="C#" Value="public DateTime GetWorkflowNextTimerExpiration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetWorkflowNextTimerExpiration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowNextTimerExpiration () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetWorkflowNextTimerExpiration();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowNextTimerExpiration : unit -&gt; DateTime" Usage="workflowInstance.GetWorkflowNextTimerExpiration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-199">Zwraca następnego punktu w czasie, że <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> jest zaplanowane do dostarczenia komunikatu czasomierza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-199">Returns the next point in time that this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> is scheduled to be delivered a timer message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e2ff-200">Wartość daty/godziny, która reprezentuje następnego <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /> czasu to <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> , otrzymają komunikat czasomierza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-200">A DateTime value that represents the next <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /> time this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> will be delivered a timer message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2e2ff-201">Poniższy przykład demonstruje użycie <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> metodę, aby sprawdzić, czy więcej wiadomości czasomierza przepływu pracy są dodawane do kolejki.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-201">The following example demonstrates using the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> method to determine if more workflow timer messages are enqueued.</span></span> <span data-ttu-id="2e2ff-202">W tym przykładzie pochodzi z przykładu WorkflowThreading zestawu SDK z pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-202">This example is from the WorkflowThreading SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="2e2ff-203">Aby uzyskać więcej informacji, zobacz [wątkowości przepływu pracy — przykład](https://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span><span class="sxs-lookup"><span data-stu-id="2e2ff-203">For more information, see [Workflow Threading Sample](https://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span></span>  
  
 [!code-csharp[WF_Samples#284](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#284)]
 [!code-vb[WF_Samples#284](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#284)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Workflow.Runtime.TimerEventSubscription" />
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueueData">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueueData () As ReadOnlyCollection(Of WorkflowQueueInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::Runtime::WorkflowQueueInfo ^&gt; ^ GetWorkflowQueueData();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowQueueData : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;" Usage="workflowInstance.GetWorkflowQueueData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-204">Pobiera kolekcję <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> obiektów, które zawiera elementy oczekujące i subskrybowanego działania dla kolejek przepływu pracy skojarzonego z tym wystąpieniem przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-204">Gets a collection of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e2ff-205">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> z <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-205">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-206"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> Zwraca kolekcję <xref:System.Workflow.Runtime.WorkflowQueueInfo> obiektów, z których każdy zawiera informacje o stanie kolejki przepływu pracy skojarzonego z tym wystąpieniem przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-206"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> returns a collection of <xref:System.Workflow.Runtime.WorkflowQueueInfo> objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</span></span> <span data-ttu-id="2e2ff-207"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> zawiera elementy oczekujące na <xref:System.Workflow.Runtime.WorkflowQueue> i <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> zawiera listę działań, które są zasubskrybowano dostarczania elementu <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-207"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> contains the pending items for a <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> contains a list of the activities that are subscribed for item delivery on a <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-208">Poniższy przykład kodu demonstruje, jak można użyć <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> metodę, aby uzyskać informacje o stanie wszystkich kolejek przepływu pracy skojarzonego z <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-208">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method to obtain information about the state of all workflow queues associated with a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="2e2ff-209">Gdy <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> wystąpi zdarzenie, `OnWorkflowIdled` metody zdefiniowanej w tym przykładzie jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-209">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="2e2ff-210">Określa, który przepływ pracy jest bezczynny, za pomocą <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> właściwości, a następnie pobiera kolekcję elementów umieszczonych w kolejce dla przepływu pracy wystąpienie przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-210">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="2e2ff-211">Kod iteruje po kolekcji, aby określić, które działania oczekuje na zdarzenie, które bezczynny przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-211">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="2e2ff-212">Następnie wysyła wyjątek do kolejki przepływu pracy przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> metoda wraz z nazwą elementu do kolejki zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-212">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="2e2ff-213">Ten przykład kodu jest częścią anulowanie przepływu pracy zestawu SDK przykładowe z pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-213">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="2e2ff-214">Aby uzyskać więcej informacji, zobacz [anulowanie przepływu pracy](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="2e2ff-214">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-215">Aparatu wykonawczego przepływów pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-215">The workflow runtime engine is not running.</span>
          </span>
        </exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)">
          <span data-ttu-id="2e2ff-216">Trwa anulowanie przepływu pracy</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-216">Canceling a Workflow</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public Guid InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid InstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : Guid" Usage="System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-217">Pobiera unikatowy identyfikator dla wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-217">Gets the unique identifier for the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2e2ff-218">
            <see cref="T:System.Guid" /> Wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-218">The <see cref="T:System.Guid" /> of the workflow instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-219">Możesz użyć <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> można odwoływać się do wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-219">You can use <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> to reference the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-220">Poniższy przykład kodu demonstruje, jak można użyć <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> właściwość, aby uzyskać informacje na temat <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-220">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property to obtain information about a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="2e2ff-221">Pierwszy fragment kodu tworzy <xref:System.Workflow.Runtime.WorkflowInstance> zmiennej o nazwie `instanceId`.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-221">The first code snippet creates a <xref:System.Workflow.Runtime.WorkflowInstance> variable named `instanceId`.</span></span>  
  
 [!code-csharp[WF_Samples#210](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#210)]
 [!code-vb[WF_Samples#210](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#210)]  
  
 <span data-ttu-id="2e2ff-222">Drugi fragment kodu używa <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> właściwość jako pierwszy obiekt `OrderEventArgs` wywołanie konstruktora, kiedy `CallBackForApproval` metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-222">The second snippet uses the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property as the first object in an `OrderEventArgs` constructor call when the `CallBackForApproval` method is called.</span></span>  
  
 <span data-ttu-id="2e2ff-223">Ten przykład kodu jest częścią Przykładowy zestaw SDK nasłuchiwania z pliku OrderServiceImple.cs.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-223">This code example is part of the Listen SDK Sample from the OrderServiceImple.cs file.</span></span> <span data-ttu-id="2e2ff-224">Aby uzyskać więcej informacji, zobacz [nasłuchiwania przykładowe](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="2e2ff-224">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#211](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#211)]
 [!code-vb[WF_Samples#211](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#211)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)">
          <span data-ttu-id="2e2ff-225">Nasłuchiwania — przykład</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-225">Listen Sample</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="workflowInstance.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-226">Ładuje wystąpienie przepływu pracy wcześniej usunięty z pamięci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-226">Loads a previously unloaded workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-227"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> jest synchroniczne; Jeśli wystąpienie przepływu pracy mogą być ładowane, <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> zostanie zakończone po wystąpienia przepływu pracy zostało załadowane do pamięci i zaplanowane przez aparatu wykonawczego przepływów pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-227"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is synchronous; if the workflow instance can be loaded, <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</span></span> <span data-ttu-id="2e2ff-228">Środowisko wykonawcze zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> zdarzenie po usługi trwałości został przywrócony wystąpienia przepływu pracy w pamięci, ale przed przepływu pracy aparatu wykonawczego planuje wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-228">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-229">W poniższym przykładzie pokazano sposób ładowania wcześniej zwolnione <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-229">The following example demonstrates how to load a previously unloaded <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#10](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#10)]
 [!code-vb[WF_Samples#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-230">Aparatu wykonawczego przepływów pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-230">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReloadTrackingProfiles">
      <MemberSignature Language="C#" Value="public void ReloadTrackingProfiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReloadTrackingProfiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadTrackingProfiles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadTrackingProfiles();" />
      <MemberSignature Language="F#" Value="member this.ReloadTrackingProfiles : unit -&gt; unit" Usage="workflowInstance.ReloadTrackingProfiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-231">Załaduj ponownie profile śledzenia dla tego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-231">Reload the tracking profiles for this workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-232">Infrastruktura śledzenia środowiska uruchomieniowego spowoduje ponowne załadowanie każdego <xref:System.Workflow.Runtime.Tracking.TrackingProfile> dla tego wystąpienia przepływu pracy, skojarzone z jego kanały śledzenia.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-232">The runtime tracking infrastructure will reload each <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for this workflow instance associated with its tracking channels.</span></span> <span data-ttu-id="2e2ff-233">Jeśli nie jest już w stanie wstrzymania, przepływ pracy jest tymczasowo wstrzymane przez środowisko uruchomieniowe śledzenia infrastruktury, podczas gdy profile śledzenia są ponownie załadowany.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-233">If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-234">Aparatu wykonawczego przepływów pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-234">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="workflowInstance.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-235">Wznawia działanie wystąpienia przepływu pracy wstrzymanej wcześniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-235">Resumes execution of a previously suspended workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-236">Host może wywołać <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> można wznowić wykonywania wystąpienia przepływu pracy, który wcześniej zawiesiłeś.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-236">The host can call <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> to resume execution of a workflow instance that has been previously suspended.</span></span> <span data-ttu-id="2e2ff-237">Jeśli wystąpienie przepływu pracy nie jest w stanie wstrzymania, nie podjęto żadnej akcji.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-237">If the workflow instance is not in the suspended state, no action is taken.</span></span> <span data-ttu-id="2e2ff-238">Środowisko wykonawcze zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> zdarzeń przed wznowieniem wykonywania wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-238">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event just before execution of the workflow instance is resumed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-239">W poniższym przykładzie pokazano wznowienia wywołującego w wystąpieniu wcześniej Wstrzymany przepływ pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-239">The following example demonstrates calling Resume on a previously suspended workflow instance.</span></span>  <span data-ttu-id="2e2ff-240">W tym przykładzie pochodzi z przykładu Wstrzymaj i zakończyć zestawu SDK.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-240">This example is from the Suspend and Terminate SDK sample.</span></span>  <span data-ttu-id="2e2ff-241">Aby uzyskać więcej informacji, zobacz [wstrzymywanie i zakończyć przykładowe](https://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span><span class="sxs-lookup"><span data-stu-id="2e2ff-241">For more information, see [Suspend and Terminate Sample](https://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span></span>  
  
 [!code-csharp[WF_Samples#172](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#172)]
 [!code-vb[WF_Samples#172](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#172)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-242">Aparatu wykonawczego przepływów pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-242">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="workflowInstance.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-243">Rozpoczyna się wykonywania wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-243">Starts the execution of the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-244"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> wywołania <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> działania głównego tego wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-244"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> calls <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> on the root activity of this workflow instance.</span></span> <span data-ttu-id="2e2ff-245">Jeśli <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> napotka wyjątek, kończy działanie wystąpienia przepływu pracy przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> z <xref:System.Exception.Message%2A> właściwości wyjątku jest przekazywany jako powód zakończenia.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-245">If <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> encounters an exception, it terminates the workflow instance by calling <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> with the <xref:System.Exception.Message%2A> property of the exception passed as the reason for the termination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-246">Poniższy przykład kodu demonstruje, jak można użyć <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> metodę, aby uruchomić <xref:System.Workflow.Runtime.WorkflowInstance> hosta przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-246">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method to start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="2e2ff-247">Ten kod tworzy wystąpienie <xref:System.Workflow.Runtime.WorkflowRuntime>, dodanie usługi do środowiska uruchomieniowego, a następnie pokazuje zalecany sposób tworzenia <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-247">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="2e2ff-248">Tworzy <xref:System.Type> obiektu i rzutuje je na jednym z obiektów przepływu pracy, z którymi skojarzono hosta.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-248">It creates a <xref:System.Type> object and casts it to one of the workflow objects with which the host is associated.</span></span> <span data-ttu-id="2e2ff-249">Kod następnie inicjuje <xref:System.Workflow.Runtime.WorkflowInstance> przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> metody i przekazanie wcześniej utworzony typ do niego.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-249">The code next initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="2e2ff-250"><xref:System.Workflow.Runtime.WorkflowInstance> Zostanie uruchomiony przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-250">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="2e2ff-251">Ten przykład kodu jest częścią anulowanie przepływu pracy zestawu SDK przykładowe z pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-251">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="2e2ff-252">Aby uzyskać więcej informacji, zobacz [anulowanie przepływu pracy](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="2e2ff-252">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-253">Aparatu wykonawczego przepływów pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-253">The workflow runtime engine is not running.</span>
          </span>
          <span data-ttu-id="2e2ff-254">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-254">-or-</span>
          </span>
          <span data-ttu-id="2e2ff-255">Wystąpienie przepływu pracy została już uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-255">The workflow instance has already been started.</span>
          </span>
        </exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)">
          <span data-ttu-id="2e2ff-256">Trwa anulowanie przepływu pracy</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-256">Canceling a Workflow</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Suspend (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Suspend(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Suspend : string -&gt; unit" Usage="workflowInstance.Suspend error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error">
          <span data-ttu-id="2e2ff-257">Opis powodu zawieszanie wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-257">A description of the reason for suspending the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e2ff-258">Wstrzymuje wystąpienie przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-258">Suspends the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-259">Wystąpienie przepływu pracy jest zawieszone w sposób synchroniczne.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-259">The workflow instance is suspended in a synchronous manner.</span></span> <span data-ttu-id="2e2ff-260">Jeśli wystąpienie przepływu pracy jest już zawieszony, nie podjęto żadnej akcji; w przeciwnym razie aparatu wykonawczego przepływów pracy wstrzymuje wystąpienie przepływu pracy zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> zdarzenia i przekazuje `reason` w <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-260">If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> event and passes `reason` in a <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2e2ff-261"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> nie spowoduje usunięcia wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-261"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> does not unload the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-262">Poniższy przykład kodu demonstruje Wstrzymaj wywoływania na <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-262">The following code example demonstrates calling Suspend on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#9](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#9)]
 [!code-vb[WF_Samples#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-263">Aparatu wykonawczego przepływów pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-263">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string -&gt; unit" Usage="workflowInstance.Terminate error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error">
          <span data-ttu-id="2e2ff-264">Opis Przyczyna zakończenia wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-264">A description of the reason for terminating the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e2ff-265">Kończy działanie wystąpienia przepływu pracy w sposób synchroniczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-265">Terminates the workflow instance in a synchronous manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-266">Wystąpienie przepływu pracy zostało przerwane w sposób synchroniczne.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-266">The workflow instance is terminated in a synchronous manner.</span></span> <span data-ttu-id="2e2ff-267">Wywołania hosta <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> zakończenie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-267">The host calls <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> to terminate the workflow instance.</span></span> <span data-ttu-id="2e2ff-268">Aparatu wykonawczego przepływów pracy czyści wystąpienia przepływu pracy w pamięci i informuje usługi trwałości, że wystąpienie został wyczyszczony z pamięci.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-268">The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="2e2ff-269">Aby uzyskać <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, oznacza to, że wszystkie informacje o stanie dla tego wystąpienia przepływu pracy zostanie usunięta z bazy danych po zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-269">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="2e2ff-270">Nie można ponownie załadować wystąpienia przepływu pracy od punktu poprzednio zapisanego stanu trwałego.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-270">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
 <span data-ttu-id="2e2ff-271">Po wyczyszczeniu wystąpienia przepływu pracy w pamięci i usługi trwałości jest informowany o rozwiązaniu, `Terminate` wywołuje metodę <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> zdarzenia i przekazuje `reason` w <xref:System.Exception.Message%2A> właściwość <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> zawarte w <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-271">After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the `Terminate` method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event and passes `reason` in the <xref:System.Exception.Message%2A> property of a <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> contained in the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span></span>  
  
 <span data-ttu-id="2e2ff-272">`Terminate` różni się od <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> w tym podczas Zakończ usuwa wystąpienie przepływu pracy w pamięci i informuje usługi trwałości przed zakończeniem, `Abort` po prostu usuwa wystąpienie przepływu pracy w pamięci, który następnie może zostać uruchomiony ponownie w ciągu ostatnich punkt stanu trwałego.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-272">`Terminate` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, `Abort` simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-273">Poniższy przykład kodu demonstruje przerwania wywoływania na <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-273">The following code example demonstrates calling Terminate on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#8](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#8)]
 [!code-vb[WF_Samples#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-274">Aparatu wykonawczego przepływów pracy nie jest uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-274">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryUnload">
      <MemberSignature Language="C#" Value="public bool TryUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.TryUnload" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUnload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryUnload();" />
      <MemberSignature Language="F#" Value="member this.TryUnload : unit -&gt; bool" Usage="workflowInstance.TryUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-275">Zwalnia wystąpienie przepływu pracy z pamięci w sklepie trwałości, gdy wystąpienie programu jest zawieszone lub w stanie bezczynności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-275">Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e2ff-276">
            <see langword="true" /> Jeśli wystąpienie przepływu pracy został usunięty z pamięci; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-276">
              <see langword="true" /> if the workflow instance was unloaded; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-277">Jeśli wystąpienie przepływu pracy jest w stanie bezczynności lub wstrzymania, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> korzysta z usługi trwałości, aby usunąć wystąpienie przepływu pracy z pamięci i utrwalić je do magazynu danych.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-277">If the workflow instance is idle or suspended, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> uses the persistence service to remove the workflow instance from memory and persist it to a data store.</span></span> <span data-ttu-id="2e2ff-278">W przypadku żadna usługa trwałości zarejestrowany za pomocą <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-278">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="2e2ff-279">Jeśli wystąpienie przepływu pracy pomyślnie jest trwały, środowisko uruchomieniowe zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> zdarzeń i zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-279">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event, and returns `true`.</span></span> <span data-ttu-id="2e2ff-280"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> Zwraca `false` wystąpienia przepływu pracy został już zwolniony, operacja została przerwana, została przerwana czy zostało już ukończone.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-280"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> returns `false` if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</span></span>  
  
 <span data-ttu-id="2e2ff-281">Hosta można użyć <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> do odzyskania zasobów systemowych z bezczynności przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-281">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-282">W poniższym przykładzie pokazano, przy użyciu metody TryUnload wyładować przepływu pracy podczas <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> generowane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-282">The following example demonstrates using the TryUnload method to unload a workflow when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event fires.</span></span> <span data-ttu-id="2e2ff-283">W tym przykładzie pochodzi z przykładu przy użyciu stanów trwałych usługi SDK z pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-283">This example is from the Using Persistence Services SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="2e2ff-284">Aby uzyskać więcej informacji, zobacz [za pomocą przykładowej usługi trwałości](https://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span><span class="sxs-lookup"><span data-stu-id="2e2ff-284">For more information, see [Using Persistence Services Sample](https://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span></span>  
  
 [!code-csharp[WF_Samples#280](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#280)]
 [!code-vb[WF_Samples#280](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#280)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-285">Nie ma usługi trwałości zarejestrowane przy użyciu aparatu wykonawczego przepływów pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-285">There is no persistence service registered with the workflow runtime engine.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="workflowInstance.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-286">Zwalnia wystąpienie przepływu pracy od ilości pamięci do magazynu stanu trwałego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-286">Unloads the workflow instance from memory to the persistence store.</span>
          </span>
          <span data-ttu-id="2e2ff-287">To wywołanie blokuje aż po zakończeniu obecnie zaplanowanych zadań lub na końcu zakresu transakcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-287">This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e2ff-288"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> jest synchroniczne; oznacza to zwraca po zakończeniu dowolną akcję, która wykonuje.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-288"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> is synchronous; that is, it returns after completing any action that it performs.</span></span> <span data-ttu-id="2e2ff-289">Jeśli wystąpienie przepływu pracy nie jest w stanie bezczynności, środowisko uruchomieniowe czeka, aż wystąpienie może zostać przerwane.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-289">If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</span></span> <span data-ttu-id="2e2ff-290">Tylko zostać przerwane wystąpienia, po zakończeniu element roboczy obecnie zaplanowanych; jest to zazwyczaj gdy aktualnie uruchomione działanie zwraca z jego <xref:System.Workflow.ComponentModel.Activity.Execute%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-290">An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its <xref:System.Workflow.ComponentModel.Activity.Execute%2A> method.</span></span> <span data-ttu-id="2e2ff-291">Jednakże jeśli wystąpienie jest wykonywane <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, zakresu transakcji należy ukończyć wykonywania wystąpienie może zostać przerwane.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-291">However, if the instance is executing a <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, the transaction scope must complete execution before the instance can be interrupted.</span></span> <span data-ttu-id="2e2ff-292">Zwolnij następnie korzysta z usługi trwałości, aby usunąć wystąpienie przepływu pracy z pamięci i zapisuje je w magazynie danych.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-292">Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</span></span> <span data-ttu-id="2e2ff-293">W przypadku żadna usługa trwałości zarejestrowany za pomocą <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-293">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="2e2ff-294">Jeśli wystąpienie przepływu pracy pomyślnie jest trwały, środowisko uruchomieniowe zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-294">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="2e2ff-295">Hosta można użyć <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> do odzyskania zasobów systemowych z bezczynności przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-295">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e2ff-296">W poniższym przykładzie pokazano wywołanie <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> na <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-296">The following example demonstrates calling <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#11](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#11)]
 [!code-vb[WF_Samples#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e2ff-297">Nie ma usługi trwałości zarejestrowane przy użyciu aparatu wykonawczego przepływów pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-297">There is no persistence service registered with the workflow runtime engine.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowRuntime">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowRuntime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ WorkflowRuntime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowRuntime : System.Workflow.Runtime.WorkflowRuntime" Usage="System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2e2ff-298">Pobiera <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> dla tego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-298">Gets the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> for this workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2e2ff-299">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> reprezentujący środowiska wykonawczego, w którym to wystąpienie przepływu pracy jest uruchomiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e2ff-299">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that represents the execution environment in which this workflow instance is running.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2e2ff-300">W poniższym przykładzie pokazano uzyskiwanie dostępu do wykonywania <xref:System.Workflow.Runtime.WorkflowRuntime> z <xref:System.Workflow.Runtime.WorkflowInstance> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2e2ff-300">The following example demonstrates accessing the executing <xref:System.Workflow.Runtime.WorkflowRuntime> of a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#7](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#7)]
 [!code-vb[WF_Samples#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>