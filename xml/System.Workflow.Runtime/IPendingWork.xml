<Type Name="IPendingWork" FullName="System.Workflow.Runtime.IPendingWork">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13313edf9397ba6f96e3b2db9d3170e177e4d7a4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30717308" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPendingWork" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPendingWork" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPendingWork" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPendingWork" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia metody do udziału w wsadu roboczego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.Runtime.IPendingWork> Interfejsu jest podana dla usług, które mają należeć do środowiska uruchomieniowego przepływu pracy aparat mechanizmu przetwarzanie wsadowe. Przetwarzanie wsadowe mechanizm jest szczególnie przydatna w przypadku usług korzystających z magazynu trwałego. Często jest to istotne w takich przypadkach do zapewniania spójności między trwałe Magazyn używany przez usługę i stan wewnętrzny aparatu środowiska uruchomieniowego przepływu pracy.  
  
 Jeśli chcesz uczestniczyć w dostarczonych przez partie transakcji przepływu pracy z usługą <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, musi implementować metody zdefiniowane przez <xref:System.Workflow.Runtime.IPendingWork> interfejsu. Wywoła aparatu wykonawczego workflow <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> metody w usłudze można przekazać partii.  
  
 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> Klasa implementuje <xref:System.Workflow.Runtime.IPendingWork> interfejsu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Transaction transaction, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Transaction ^ transaction, System::Collections::ICollection ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <see cref="T:System.Transactions.Transaction" /> Skojarzone z pracą oczekujące.</param>
        <param name="items">Elementy robocze można zatwierdzić.</param>
        <summary>Zatwierdza lista elementów roboczych przy użyciu określonego <see cref="T:System.Transactions.Transaction" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołania aparat środowiska uruchomieniowego przepływu pracy <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> metody podczas jego semantyki dyktowania, że oczekujące pracy w trybie wsadowym pracy powinny być zatwierdzone. Po osiągnięciu punktu zatwierdzania, wymaga środowiska uruchomieniowego przepływu <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> metody na każdym <xref:System.Workflow.Runtime.IPendingWork> obiektu w jego wsadu roboczego; przekazuje aparatu wykonawczego workflow <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> metody kolekcji elementów, skojarzonego z tym <xref:System.Workflow.Runtime.IPendingWork> obiekt. Wszystkie informacje o pracy w partii zakończy się powodzeniem, albo żadna z jej zakończy się pomyślnie. Powinien zgłosić wyjątek, jeśli dowolne elementy pracy przekazany do <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> w implementacji metody nie można zatwierdzić. W zależności od implementacji, możesz cofnąć w Twojej <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> metodę, jeśli nie można przekazać jej elementów roboczych. Jeśli pomyślnie aparatu wykonawczego workflow zatwierdza wszystkie informacje o pracy w trybie wsadowym pracy, wywołuje metodę <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> z `succeeded` ustawiona `true`; w przeciwnym razie wywołuje <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> z `succeeded` ustawioną `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (bool succeeded, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(bool succeeded, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete (succeeded As Boolean, items As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(bool succeeded, System::Collections::ICollection ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="succeeded" Type="System.Boolean" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="succeeded">
          <see langword="true" /> Jeśli transakcja zakończyła się pomyślnie; w przeciwnym razie <see langword="false" />.</param>
        <param name="items">
          <see cref="T:System.Collections.ICollection" /> Elementów roboczych.</param>
        <summary>Wywoływane, gdy transakcja została ukończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `succeeded` jest `true`, transakcja zakończyła się pomyślnie i można zwolnić zasoby używane przez wsadu roboczego. Jeśli `succeeded` jest `false`, transakcji nie powiodło się. W zależności od implementacji można wykonać żadnych odpowiednich zbiorczego do pracy w trybie wsadowym pracy po transakcji nie powiodło się.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustCommit">
      <MemberSignature Language="C#" Value="public bool MustCommit (System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MustCommit(class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function MustCommit (items As ICollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MustCommit(System::Collections::ICollection ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="items">
          <see cref="T:System.Collections.ICollection" /> Elementów roboczych.</param>
        <summary>Umożliwia elementów wsadu roboczego do potwierdzenia, czy ich musi zatwierdzić natychmiast.</summary>
        <returns>
          <see langword="true" /> Jeśli dowolny element w kolekcji musi być zatwierdzone natychmiast; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Workflow.Runtime.IPendingWork.MustCommit%2A> zwraca `false`, pracy można odroczyć do przyszłych zatwierdzenia punktu. Jeśli dowolny z elementów muszą być zatwierdzone, zwracany jest `true` i wszystkie elementy zostaną przekazane do bieżącego punkt zatwierdzania. Aby uzyskać informacje dotyczące zatwierdzania możliwych punktów, zobacz <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>