<Type Name="WorkflowQueue" FullName="System.Workflow.Runtime.WorkflowQueue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03a6b76c696a73b1a8223453f6868b868e0c9400" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowQueue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowQueue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowQueue" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowQueue" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d9be8-101">Reprezentuje kolejkę przepływu pracy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9be8-101">Represents a workflow queue.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="d9be8-102">Kolejki przepływu pracy są używane do przekazywania wiadomości między hostem lub hosta usługi i działania w przepływie pracy.</span><span class="sxs-lookup"><span data-stu-id="d9be8-102">Workflow queues are used to pass messages between a host or host services and activities in a workflow.</span></span> <span data-ttu-id="d9be8-103">Można utworzyć żadnej aktywności <xref:System.Workflow.Runtime.WorkflowQueue> przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType>, i hosta, usługi lub innego działania można wywołać <xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A> do dodania do tego elementu <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="d9be8-103">Any activity can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType>, and a host, a service, or another activity can call <xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A> to add an item to that <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="d9be8-104">Można subskrybować <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> zdarzenie zgłaszane po odebraniu elementu na <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="d9be8-104">You can subscribe to the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event to be notified when an item arrives on the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="d9be8-105">Można użyć <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> do sprawdzenia elementu na początku <xref:System.Workflow.Runtime.WorkflowQueue> i <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> Aby usunąć element z <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="d9be8-105">You can use <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> to examine an item at the beginning of the <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> to remove an item from the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="d9be8-106">Każdy <xref:System.Workflow.Runtime.WorkflowQueue> jest skojarzony z <xref:System.Workflow.Runtime.WorkflowQueuingService> czy służy do wykonywania innych operacji zarządzania na <xref:System.Workflow.Runtime.WorkflowQueue>, np. usunięcie kolejki.</span><span class="sxs-lookup"><span data-stu-id="d9be8-106">Each <xref:System.Workflow.Runtime.WorkflowQueue> is associated with a <xref:System.Workflow.Runtime.WorkflowQueuingService> that you can use to perform other management operations on the <xref:System.Workflow.Runtime.WorkflowQueue>, such as deleting the queue.</span></span> <span data-ttu-id="d9be8-107"><xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A> przedstawia <xref:System.Workflow.Runtime.WorkflowQueuingService> skojarzony z tym <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="d9be8-107"><xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A> exposes the <xref:System.Workflow.Runtime.WorkflowQueuingService> associated with this <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9be8-108">Poniższy przykład kodu pokazuje sposób tworzenia <xref:System.Workflow.Runtime.WorkflowQueue> przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="d9be8-108">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d9be8-109">Ponadto użyto <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> właściwości w celu określenia, czy istnieją komunikaty w kolejce bieżącej.</span><span class="sxs-lookup"><span data-stu-id="d9be8-109">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="d9be8-110">Ponadto w kodzie użyto <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> metodę, aby usunąć i zwrócić pierwszy obiekt w kolejce.</span><span class="sxs-lookup"><span data-stu-id="d9be8-110">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="d9be8-111">Ten przykładowy kod jest częścią przykładowy plik obserwatora działania zestawu SDK z pliku FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="d9be8-111">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="d9be8-112">Aby uzyskać więcej informacji, zobacz [aktywności obserwatora systemu plików](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="d9be8-112">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9be8-113">Pobiera liczbę elementów zawartych w <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-113">Gets the number of items contained in the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9be8-114">Liczba elementów w kolejce przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-114">The number of items in the workflow queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9be8-115">Poniższy przykład kodu pokazuje sposób tworzenia <xref:System.Workflow.Runtime.WorkflowQueue> przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="d9be8-115">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d9be8-116">Ponadto użyto <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> właściwości w celu określenia, czy istnieją komunikaty w kolejce bieżącej.</span><span class="sxs-lookup"><span data-stu-id="d9be8-116">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="d9be8-117">Ponadto w kodzie użyto <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> metodę, aby usunąć i zwrócić pierwszy obiekt w kolejce.</span><span class="sxs-lookup"><span data-stu-id="d9be8-117">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="d9be8-118">Ten przykładowy kod jest częścią przykładowy plik obserwatora działania zestawu SDK z pliku FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="d9be8-118">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="d9be8-119">Aby uzyskać więcej informacji, zobacz [aktywności obserwatora systemu plików](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="d9be8-119">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public object Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Function Dequeue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dequeue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9be8-120">Usuwa i zwraca obiekt na początku <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-120">Removes and returns the object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9be8-121">Obiekt, który zostanie usunięty z początku <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-121">The object that is removed from the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9be8-122">Możesz sprawdzić <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> ustalenie, czy <xref:System.Workflow.Runtime.WorkflowQueue> jest pusta, przed wywołaniem <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, lub można przechwycić <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="d9be8-122">You can check <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> to determine whether the <xref:System.Workflow.Runtime.WorkflowQueue> is empty before you call <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, or you can catch the <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9be8-123">Poniższy przykład kodu pokazuje sposób tworzenia <xref:System.Workflow.Runtime.WorkflowQueue> przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="d9be8-123">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d9be8-124">Ponadto użyto <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> właściwości w celu określenia, czy istnieją komunikaty w kolejce bieżącej.</span><span class="sxs-lookup"><span data-stu-id="d9be8-124">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="d9be8-125">Ponadto w kodzie użyto <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> metodę, aby usunąć i zwrócić pierwszy obiekt w kolejce.</span><span class="sxs-lookup"><span data-stu-id="d9be8-125">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="d9be8-126">Ten przykładowy kod jest częścią przykładowy plik obserwatora działania zestawu SDK z pliku FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="d9be8-126">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="d9be8-127">Aby uzyskać więcej informacji, zobacz [aktywności obserwatora systemu plików](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="d9be8-127">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9be8-128">
            <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> Jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-128">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9be8-129">Pobiera lub ustawia wartość określającą czy <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> jest włączona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-129">Gets or sets a value that specifies whether the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9be8-130">
            <see langword="true" /> Jeśli <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> jest włączone; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-130">
              <see langword="true" /> if the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is enabled; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public void Enqueue (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enqueue(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Enqueue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enqueue (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enqueue(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="d9be8-131">Obiekt do dodania do <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-131">The object to add to the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9be8-132">Dodaje obiekt na koniec <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-132">Adds an object to the end of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9be8-133">
            <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> Nie jest włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-133">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9be8-134">Zwraca obiekt na początku <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> bez usuwania go.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-134">Returns the object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9be8-135">Obiekt na początku <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-135">The object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9be8-136">Ta metoda jest podobna do <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> metody, ale <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> nie modyfikuje <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="d9be8-136">This method is similar to the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method, but <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> does not modify the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="d9be8-137">Możesz sprawdzić <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> ustalenie, czy <xref:System.Workflow.Runtime.WorkflowQueue> jest pusta, przed wywołaniem <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, lub można przechwycić <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="d9be8-137">You can check <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> to determine whether the <xref:System.Workflow.Runtime.WorkflowQueue> is empty before you call <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, or you can catch the <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d9be8-138">
            <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> Jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-138">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QueueItemArrived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemArrived" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueueItemArrived As EventHandler(Of QueueEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ QueueItemArrived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9be8-139">Występuje, gdy element jest dostarczany na tym <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-139">Occurs when an item is delivered on this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9be8-140">To zdarzenie jest używana tylko do przetwarzania, który musi występować synchronicznie z dostarczania zdarzeń do wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="d9be8-140">This event is only used for processing that must occur synchronously with event delivery to the workflow instance.</span></span> <span data-ttu-id="d9be8-141">Program obsługi zdarzeń mogą wykonywać w wątku-workflow, dostęp do wszystkich udostępnionych obiekt przepływu pracy, na przykład żadnych <xref:System.Workflow.ComponentModel.DependencyObject>, muszą być chronione.</span><span class="sxs-lookup"><span data-stu-id="d9be8-141">The event handler may execute on a non-workflow thread so access to any shared workflow object, for example, any <xref:System.Workflow.ComponentModel.DependencyObject>, must be protected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueItemAvailable">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemAvailable" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueueItemAvailable As EventHandler(Of QueueEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ QueueItemAvailable;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9be8-142">Występuje, gdy element jest dostępny na tym <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-142">Occurs when an item is available on this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9be8-143"><xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> Zdarzenie jest zgłaszane w sposób asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="d9be8-143">The <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event is raised in an asynchronous manner.</span></span> <span data-ttu-id="d9be8-144">Nadawca dla <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> zdarzeń będzie <xref:System.Workflow.ComponentModel.ActivityExecutionContext> z subskrypcji <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="d9be8-144">The sender for the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event will be the <xref:System.Workflow.ComponentModel.ActivityExecutionContext> of the subscribing <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueName">
      <MemberSignature Language="C#" Value="public IComparable QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.QueueName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueName As IComparable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IComparable ^ QueueName { IComparable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9be8-145">Pobiera nazwę kolejki przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-145">Gets the name of the workflow queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9be8-146">Nazwa <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-146">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9be8-147">Nazwa kolejki przepływu pracy jest ustawiana <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d9be8-147">The name of the workflow queue is set by the <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuingService">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueuingService QueuingService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowQueuingService QueuingService" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.QueuingService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueuingService As WorkflowQueuingService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowQueuingService ^ QueuingService { System::Workflow::Runtime::WorkflowQueuingService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueuingService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9be8-148">Pobiera usługę kolejkowania wiadomości skojarzony z tym <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-148">Gets the queuing service associated with this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9be8-149">A <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /> reprezentujący Usługa kolejkowania skojarzony z tym <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-149">A <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /> that represents the queuing service associated with this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterForQueueItemArrived">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemArrived(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemArrived (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemArrived(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="d9be8-150">Subskrybent dla <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> implementującej <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-150">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9be8-151">Rejestruje subskrybentom <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-151">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForQueueItemAvailable">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9be8-152">Rejestruje subskrybentom <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-152">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9be8-153">Można użyć przeciążone <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> metody do rejestrowania dla subskrybenta <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="d9be8-153">You can use the overloaded <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> methods to register a subscriber for the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event.</span></span> <span data-ttu-id="d9be8-154"><xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> Zdarzeń jest używana do powiadamiania subskrybentów, które element została dostarczona (w sposób asynchroniczny) do tego <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="d9be8-154">The <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event is used to notify subscribers that an item has been delivered (in an asynchronous manner) to this <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="d9be8-155">Subskrybent dla <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> implementującej <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-155">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9be8-156">Rejestruje subskrybentom <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-156">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9be8-157">Poniższy przykład kodu pokazuje sposób tworzenia <xref:System.Workflow.Runtime.WorkflowQueue> przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="d9be8-157">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d9be8-158">Ponadto użyto <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> zarejestrować określony odbiornik.</span><span class="sxs-lookup"><span data-stu-id="d9be8-158">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> to register the specified listener.</span></span>  
  
 <span data-ttu-id="d9be8-159">Ten przykładowy kod jest częścią przykładowy plik obserwatora działania zestawu SDK z pliku FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="d9be8-159">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="d9be8-160">Aby uzyskać więcej informacji, zobacz [aktywności obserwatora systemu plików](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="d9be8-160">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#225](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#225)]
 [!code-vb[WF_Samples#225](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#225)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9be8-161">
            <paramref name="eventListener" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-161">
              <paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener, string subscriberQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener, string subscriberQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs), subscriberQualifiedName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener, System::String ^ subscriberQualifiedName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
        <Parameter Name="subscriberQualifiedName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="d9be8-162">Subskrybent dla <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> implementującej <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-162">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <param name="subscriberQualifiedName">
          <span data-ttu-id="d9be8-163">
            <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> Działania, które subskrybuje <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> zdarzenia lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-163">The <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> of the activity that is subscribing to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event or a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9be8-164">Rejestruje subskrybentom <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-164">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9be8-165">Jeśli nazwa kwalifikowana subskrybującego działania są dostarczane przez `subscriberQualifiedName`, jest zwracany w <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> z <xref:System.Workflow.Runtime.WorkflowQueueInfo> skojarzony z tą kolejką podczas <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="d9be8-165">If the qualified name of the subscribing activity is supplied by `subscriberQualifiedName`, it is returned in <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> of <xref:System.Workflow.Runtime.WorkflowQueueInfo> associated with this queue when <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9be8-166">
            <paramref name="eventListener" /> to odwołanie o wartości null (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-166">
              <paramref name="eventListener" /> is a null reference (<see langword="Nothing" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForQueueItemArrived">
      <MemberSignature Language="C#" Value="public void UnregisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForQueueItemArrived(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForQueueItemArrived (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForQueueItemArrived(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="d9be8-167">Subskrybent dla <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> implementującej <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-167">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9be8-168">Wyrejestrowuje subskrybentom <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-168">Unregisters a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9be8-169">Ta metoda jest zarezerwowana tylko do użytku wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="d9be8-169">This method is reserved for internal use only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9be8-170">
            <paramref name="eventListener" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-170">
              <paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void UnregisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="d9be8-171">Subskrybent dla <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> implementującej <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-171">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9be8-172">Wyrejestrowuje subskrybentom <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-172">Unregisters a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9be8-173">Poniższy przykład kodu pokazuje sposób tworzenia <xref:System.Workflow.Runtime.WorkflowQueue> przez wywołanie metody <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="d9be8-173">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d9be8-174">Ponadto użyto <xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A> wyrejestrować określony odbiornik.</span><span class="sxs-lookup"><span data-stu-id="d9be8-174">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A> to unregister the specified listener.</span></span>  
  
 <span data-ttu-id="d9be8-175">Ten przykładowy kod jest częścią przykładowy plik obserwatora działania zestawu SDK z pliku FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="d9be8-175">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="d9be8-176">Aby uzyskać więcej informacji, zobacz [aktywności obserwatora systemu plików](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="d9be8-176">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#226](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#226)]
 [!code-vb[WF_Samples#226](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#226)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9be8-177">
            <paramref name="eventListener" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9be8-177">
              <paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>