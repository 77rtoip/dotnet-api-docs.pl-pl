<Type Name="SimpleTypeResolver" FullName="System.Web.Script.Serialization.SimpleTypeResolver">
  <TypeSignature Language="C#" Value="public class SimpleTypeResolver : System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleTypeResolver extends System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.SimpleTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class SimpleTypeResolver&#xA;Inherits JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class SimpleTypeResolver : System::Web::Script::Serialization::JavaScriptTypeResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Script.Serialization.JavaScriptTypeResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cacd3-101">Zawiera typ programu rozpoznawania nazw w typach zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="cacd3-101">Provides a type resolver for managed types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacd3-102">Ten mechanizm rozpoznawania typu może być używany z <xref:System.Web.Script.Serialization.JavaScriptSerializer> kwalifikowaną dla zestawu nazwę typu zarządzanego, który wymaga typu niestandardowego metadanych ciąg klasy do uwzględnienia w serializowanym JavaScript Object Notation (JSON).</span><span class="sxs-lookup"><span data-stu-id="cacd3-102">This type resolver can be used with the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class to include in the serialized JavaScript Object Notation (JSON) string the assembly-qualified name of any managed type that requires custom type metadata.</span></span>  
  
 <span data-ttu-id="cacd3-103"><xref:System.Web.Script.Serialization.SimpleTypeResolver> Klasa umożliwia do serializacji typy zarządzane w formacie JSON przy zachowaniu definicji typu zarządzanego dla niestandardowych typów.</span><span class="sxs-lookup"><span data-stu-id="cacd3-103">The <xref:System.Web.Script.Serialization.SimpleTypeResolver> class enables you to serialize managed types as JSON while retaining the managed type definition for custom types.</span></span>  
  
 <span data-ttu-id="cacd3-104">Aby utworzyć wystąpienie <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy, która używa typu program rozpoznawania nazw, należy użyć <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%28System.Web.Script.Serialization.JavaScriptTypeResolver%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cacd3-104">To create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class that uses a type resolver, you must use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%28System.Web.Script.Serialization.JavaScriptTypeResolver%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacd3-105">W poniższym przykładzie pokazano sposób użycia <xref:System.Web.Script.Serialization.SimpleTypeResolver> klasy i przedstawia powstałe w ten sposób serializacji ciągów za pomocą innego typu rozpoznawania nazw.</span><span class="sxs-lookup"><span data-stu-id="cacd3-105">The following example demonstrates how to use the <xref:System.Web.Script.Serialization.SimpleTypeResolver> class and shows the resulting serialized strings by using different type resolvers.</span></span>  
  
 [!code-aspx-csharp[System.Web.Script.Serialization.TypeResolver#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.Script.Serialization.TypeResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Type.AssemblyQualifiedName" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.SimpleTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SimpleTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cacd3-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Script.Serialization.SimpleTypeResolver" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="cacd3-106">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.SimpleTypeResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public override Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ ResolveType(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="cacd3-107">Nazwa kwalifikowana zestawu typu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="cacd3-107">The assembly-qualified name of the managed type.</span></span></param>
        <summary><span data-ttu-id="cacd3-108">Zwraca <see cref="T:System.Type" /> o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="cacd3-108">Returns the <see cref="T:System.Type" /> of the specified name.</span></span></summary>
        <returns><span data-ttu-id="cacd3-109">A <see cref="T:System.Type" /> obiekt, który ma określoną nazwę, jeśli je znaleziono; w przeciwnym razie <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cacd3-109">A <see cref="T:System.Type" /> object that has the specified name, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacd3-110"><xref:System.Web.Script.Serialization.SimpleTypeResolver.ResolveType%2A> Wywołania metody <xref:System.Type.GetType%2A?displayProperty=nameWithType> metody można rozpoznać typu.</span><span class="sxs-lookup"><span data-stu-id="cacd3-110">The <xref:System.Web.Script.Serialization.SimpleTypeResolver.ResolveType%2A> method calls the <xref:System.Type.GetType%2A?displayProperty=nameWithType> method to resolve the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public override string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="cacd3-111">Typ zostać rozpoznane.</span><span class="sxs-lookup"><span data-stu-id="cacd3-111">The type to be resolved.</span></span></param>
        <summary><span data-ttu-id="cacd3-112">Zwraca nazwę kwalifikowaną dla zestawu z określonym <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="cacd3-112">Returns the assembly-qualified name of the specified <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="cacd3-113">Ciąg zawierający nazwę kwalifikowaną dla zestawu określonego typu.</span><span class="sxs-lookup"><span data-stu-id="cacd3-113">A string that contains the assembly-qualified name of the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cacd3-114"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cacd3-114"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Type.AssemblyQualifiedName" />
      </Docs>
    </Member>
  </Members>
</Type>