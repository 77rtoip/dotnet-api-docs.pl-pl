<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed139d90ee940c2091d55722bb0a7d9a029e089c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36597430" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>[Json.NET] (http://www.newtonsoft.com/json) powinny być używane serializacji i deserializacji. Zapewnia funkcje serializacji i deserializacji dla aplikacji z włączoną obsługą technologii AJAX.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer> Klasa jest używana wewnętrznie przez warstwę komunikacji asynchronicznej do serializowania i deserializowania danych przesyłanych między przeglądarką a serwerem sieci Web. Nie masz dostępu do tego wystąpienia serializatora. Jednak ta klasa przedstawia publiczny interfejs API. W związku z tym można użyć klasy, gdy chcesz pracować z JavaScript Object Notation (JSON) w kodzie zarządzanym.  
  
 Szeregowania obiektu, należy użyć <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> metody. Do deserializacji ciągu JSON, użyj <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> lub <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> metody. Do serializacji i deserializacji typy, które nie są obsługiwane natywnie przez <xref:System.Web.Script.Serialization.JavaScriptSerializer>, wdrożyć przy użyciu niestandardowych konwertery <xref:System.Web.Script.Serialization.JavaScriptConverter> klasy. Następnie zarejestrowania za pomocą konwertera <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> metody.  
  
## <a name="mapping-between-managed-types-and-json"></a>Mapowanie między typami zarządzanymi i JSON  
 W poniższej tabeli przedstawiono mapowanie między typy zarządzane i JSON dla procesu serializacji. Te typy zarządzane są natywnie obsługiwane przez <xref:System.Web.Script.Serialization.JavaScriptSerializer>. Z ciągu JSON są deserializacji typu zarządzanego, zastosowanie tego samego mapowania. Jednak deserializacji można asymetrycznego; nie wszystkie typy zarządzane serializacji można można przeprowadzić deserializacji JSON.  
  
> [!NOTE]
>  Tablicy wielowymiarowej jest szeregowana jako Jednowymiarowa tablica, a powinien używać go jako płaska tablicy.  
  
|Typ zarządzany|Odpowiednik w formacie JSON|  
|------------------|---------------------|  
|<xref:System.String> (Kodowanie UTF-8 tylko).|String|  
|<xref:System.Char>|String|  
|Pojedynczy znak null (na przykład, \0)|Null|  
|<xref:System.Boolean>|Wartość logiczna. Reprezentowane w formacie JSON jako `true` lub `false`|  
|`null` (`null` odwołania do obiektu i <xref:System.Nullable> typów wartości).|Wartość ciągu o wartości null|  
|<xref:System.DBNull>|Wartość ciągu o wartości null|  
|Typy pierwotne liczbowych (lub zgodnego numeryczne): <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, i <xref:System.Single>. Reprezentacja ciągu niezmiennej kultury jest używany.|Wartość liczbowa|  
|<xref:System.DateTime>|Obiekt Date, reprezentowane w formacie JSON jako "\\/Data (liczbę taktów)\\/". Liczbę znaczników jest liczbą dodatnią lub ujemną wartość typu long wskazującą liczbę znaczników (w milisekundach), które upłynęły od północy 01 stycznia, 1970 UTC.<br /><br /> Maksymalna obsługiwana wartość to data <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM), wartość minimalna Data obsługiwanych jest <xref:System.DateTime.MinValue> (1/1/0001 00:00:00: 00).|  
|Wyliczenia typu Liczba całkowita|Odpowiednik liczby całkowitej wartość wyliczenia|  
|Typy, które implementują <xref:System.Collections.IEnumerable> lub <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> , które nie są również implementacje <xref:System.Collections.IDictionary> lub <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>. Ten przykład zawiera typy <xref:System.Array>, <xref:System.Collections.ArrayList>, i <xref:System.Collections.Generic.List%601>.|Tablica, która używa składni tablicy JSON|  
|Typy, które implementują <xref:System.Collections.IDictionary> lub <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>. Ten przykład zawiera typy <xref:System.Collections.Generic.Dictionary%602> i <xref:System.Collections.Hashtable>.|Obiekt JavaScript, który używa składni JSON słownik|  
|Niestandardowe konkretnych typów (system inny niż ogólny), które mają właściwości publiczne wystąpienia, które mają otrzymać metody dostępu lub publiczne pola wystąpień.<br /><br /> Należy pamiętać, że właściwości publiczne tylko do zapisu, publiczną właściwość lub pole publiczne atrybutów oznaczonych <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, i publicznej właściwości indeksowanych w tego typu są ignorowane.|Obiekt JavaScript, który używa składni słowniku JSON. Aby zapewnić poprawne deserializacji jest właściwości specjalne metadanych o nazwie "__type". Upewnij się, że właściwości publiczne wystąpienia mają get i ustaw metody dostępu, aby zapewnić poprawne deserializacji.|  
|<xref:System.Guid>|Reprezentacja ciągu identyfikatora GUID|  
|<xref:System.Uri>|Reprezentacja ciągu zwracanej wartości <xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 Pierwszym przykładzie zapewnia prosty ilustracja jak serializacji i deserializacji obiektów danych. Wymaga nazwy klas osoby, które są wyświetlane poniżej.  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 W kolejnym przykładzie pokazano bardziej skomplikowane i zakończenie projektu, który używa <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy do zapisywania i przywracania stanu obiektu za pomocą serializacji JSON. Ten kod używa niestandardowych konwerter, który jest dostępne w celu <xref:System.Web.Script.Serialization.JavaScriptConverter> klasy.  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> klasy, która ma rozwiązującego typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wystąpienie <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy bez rozpoznawania typu nie ma typu właściwości metadanych (o nazwie "__type") w ciągu serializacji JSON. Właściwość metadanych typ jest używany przez <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> i <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> metod umożliwiających ustalenie zarządzane odpowiedni typ, do którego będzie można przekonwertować ciągu JSON. Informacje dla mechanizmów rozpoznawania typu, zobacz <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">Obiekt mechanizm rozpoznawania typu niestandardowego.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> klasy, która ma typ niestandardowy program rozpoznawania nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy jest szeregowania obiektu, <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy używa `resolver` parametr, aby określić odpowiednią wartość, aby dołączyć do serializacji ciągu JSON dla właściwości metadanych typu ("__type"). Podobnie, jeśli <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy jest deserializacji ciągu JSON, rozpoznaje wartości właściwości typu metadanych do odpowiedniego typu zarządzanego przy użyciu wystąpienia programu rozpoznawania nazw.  
  
 Można ustawić `resolver` parametr `null`, który jest odpowiednikiem wywołania <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> konstruktora.  
  
 Wystąpienie <xref:System.Web.Script.Serialization.JavaScriptSerializer> używany przez warstwę komunikacji asynchronicznej dla wywołania usługi sieci Web ze skryptu klienta używa specjalny typ program rozpoznawania nazw. Ten mechanizm rozpoznawania typu ogranicza typy, które można wykonać deserializacji zdefiniowane w podpisie metody usługi sieci Web lub te, które <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> zastosowane. Ten mechanizm rozpoznawania typu wbudowanego nie można modyfikować programowo.  
  
> [!IMPORTANT]
>  Za pomocą wystąpienia tego obiektu zainicjowany z niestandardowych rozpoznawania typu można stanowią zagrożenie dla bezpieczeństwa. Ten obiekt jest używany tylko z zaufanych danych. Aby uzyskać więcej informacji, zobacz [sprawdzanie poprawności danych](https://www.owasp.org/index.php/Data_Validation).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do przekonwertowania.</param>
        <param name="targetType">Typ docelowy konwersji obiektu do.</param>
        <summary>Konwertuje określony obiekt określonego typu.</summary>
        <returns>Serializacji ciągu JSON.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.Script.Serialization.JavaScriptSerializer> wystąpienie wykonuje serializację typu, dla którego niestandardowy konwerter jest zarejestrowany, wywołania serializator <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> metodę, aby uzyskać słownik par nazw i wartości, które zostanie przekonwertowany na ciąg w formacie JSON.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> Metody można również zgłaszają wyjątki, jeśli wykres obiektu jest zbyt złożony lub zarejestrowanych wystąpień <xref:System.Web.Script.Serialization.JavaScriptConverter> spowodował konwertera rekursji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wynikowy ciąg w formacie JSON przekracza wartość <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  - lub - <paramref name="obj" /> zawiera odwołanie cykliczne. Odwołanie cykliczne występuje, gdy obiekt podrzędny zawiera odwołanie do obiektu nadrzędnego, a obiekt nadrzędny zawiera odwołanie do obiektu podrzędnego.</exception>
        <exception cref="T:System.ArgumentException">Limit rekursji zdefiniowane przez <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> został przekroczony.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ, do którego <c>obj</c> zostanie przekonwertowany.</typeparam>
        <param name="obj">Obiekt do przekonwertowania.</param>
        <summary>Konwertuje dany obiekt określonego typu.</summary>
        <returns>Obiekt, który został przekonwertowany na typ docelowy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> Metody podejmuje próbę przekonwertowania wystąpienia obiektu reprezentowanego przez `obj` do wystąpienia typu `T`. Podczas konwersji nie jest żadnej gwarancji utrzymania równości odwołań obiektu. W związku z tym należy nie zakłada, że `obj` i `T` odwoływać się do tego samego obiektu.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> jest przeznaczony do użycia w przypadku zastosowania klasy, która jest pochodną <xref:System.Web.Script.Serialization.JavaScriptConverter>. Kod konwertera musi mieć możliwość wartość, która znajduje się w słowniku serializator przekazuje do niego i następnie przekonwertować tę wartość na wystąpienie typu `T`. Zamiast ponownego wykonywania kodu niestandardowego konwersji do wykonania tego zadania, należy wywołać <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> metody z kodu konwertera.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> metodę, aby uzyskać <xref:System.Web.UI.WebControls.ListItem> obiektu z wartości w słowniku, który jest przekazywany do konwerter. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy.  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="obj" /> (lub zagnieżdżone członkiem <paramref name="obj" />) zawiera właściwość "__type", która wskazuje typ niestandardowy, ale typ programu rozpoznawania nazw, który jest skojarzony z Serializator nie można znaleźć odpowiedniego typu zarządzanego.  - lub - <paramref name="obj" /> (lub zagnieżdżone członkiem <paramref name="obj" />) zawiera właściwość "__type", która wskazuje typ niestandardowy, ale wynik deserializacji odpowiedniego ciągu JSON nie można przypisać do typu oczekiwanego docelowego.  - lub - <paramref name="obj" /> (lub zagnieżdżone członkiem <paramref name="obj" />) zawiera właściwość "__type", która wskazuje albo <see cref="T:System.Object" /> lub z systemem innym niż tworzone jako wystąpienia typu (na przykład typ abstrakcyjny lub interfejs).  Nastąpiła próba konwersji - lub - <paramref name="obj" /> do tablicy typu zarządzanego, który nie jest obsługiwany jako element docelowy deserializacji.  - lub - nie jest możliwe do przekonwertowania <paramref name="obj" /> do <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> Typ słownika i napotkano wartość klucza innych niż ciąg.  - lub - <paramref name="obj" /> zawiera definicje elementu członkowskiego, które nie są dostępne w typie <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg JSON do deserializacji.</param>
        <param name="targetType">Typ wynikowy obiekt.</param>
        <summary>Konwertuje ciąg w formacie JSON na obiekt określonego typu.</summary>
        <returns>Obiekt po deserializacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda deserializacji nie będzie próbował rzutowania głównego wykresu obiektu określonego typu sposób który <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> metoda wykonuje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Długość <paramref name="input" /> przekracza wartość <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  - lub - limit rekursji zdefiniowane przez <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> został przekroczony.  - lub - <paramref name="input" /> zawiera nieoczekiwany znak sekwencji.  - lub - <paramref name="input" /> jest typem słownika i napotkano wartość klucza innych niż ciąg.  - lub - <paramref name="input" /> zawiera definicje elementu członkowskiego, które nie są dostępne na typ docelowy.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> zawiera właściwości "__type", która wskazuje, że typ niestandardowy, ale typ programu rozpoznawania nazw, który jest aktualnie powiązany z Serializator nie można znaleźć odpowiedniego typu zarządzanego.  - lub - <paramref name="input" /> zawiera właściwość "__type", która wskazuje typ niestandardowy, ale wynik deserializacji odpowiedniego ciągu JSON nie można przypisać do typu oczekiwanego docelowego.  - lub - <paramref name="input" /> zawiera właściwość "__type", która wskazuje albo <see cref="T:System.Object" /> lub z systemem innym niż tworzone jako wystąpienia typu (na przykład typ abstrakcyjny lub interfejs).  - lub - została podjęta próba konwersji tablicy JSON do tablicy typu zarządzanego, który nie jest obsługiwany jako element docelowy deserializacji JSON.  - lub - nie jest możliwe do przekonwertowania <paramref name="input" /> na typ docelowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ wynikowy obiekt.</typeparam>
        <param name="input">Ciąg JSON do zdeserializowania.</param>
        <summary>Konwertuje określony ciąg JSON do obiektu typu <paramref name="T" />.</summary>
        <returns>Obiekt po deserializacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> Metoda jest odpowiednikiem przy pierwszym użyciu <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> metodę, aby uzyskać wykres obiektu, a następnie spróbuj można rzutować na typ wyniku `T`.  
  
 Podczas deserializacji istnieje odwołanie do rozpoznawania bieżący element serializujący, która określa typ zarządzany do użycia podczas konwertowania elementy, które są zagnieżdżone wewnątrz tablice typów słownika. W związku z tym, proces deserializacja iteruje wszystkie zagnieżdżone elementy `input`. Aby uzyskać więcej informacji na temat mechanizmów rozpoznawania typu, zobacz <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> klasy.  
  
   
  
## Examples  
W poniższym przykładzie przedstawiono prosty ilustracja jak serializacji i deserializacji obiektów danych.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Wymaga to klasa o nazwie `Person`, które przedstawiono w poniższym przykładzie. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="input" /> Długość przekracza wartość <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  - lub - limit rekursji zdefiniowane przez <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> został przekroczony.  - lub - <paramref name="input" /> zawiera nieoczekiwany znak sekwencji.  - lub - <paramref name="input" /> jest typem słownika i napotkano wartość klucza innych niż ciąg.  - lub - <paramref name="input" /> zawiera definicje elementu członkowskiego, które nie są dostępne w typie <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> zawiera właściwości "__type", która wskazuje, że typ niestandardowy, ale skojarzony z serializator mechanizm rozpoznawania typu nie można znaleźć odpowiedniego typu zarządzanego.  - lub - <paramref name="input" /> zawiera właściwość "__type", która wskazuje typ niestandardowy, ale wynik deserializacji odpowiedniego ciągu JSON nie można przypisać do typu oczekiwanego docelowego.  - lub - <paramref name="input" /> zawiera właściwość "__type", która wskazuje albo <see cref="T:System.Object" /> lub z systemem innym niż tworzone jako wystąpienia typu (na przykład typy abstrakcyjne lub interface).  - lub - została podjęta próba konwersji tablicy JSON do tablicy typu zarządzanego, który nie jest obsługiwany jako element docelowy deserializacji JSON.  - lub - nie jest możliwe do przekonwertowania <paramref name="input" /> do <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg JSON do zdeserializowania.</param>
        <summary>Konwertuje określony ciąg JSON do obiektu wykresu.</summary>
        <returns>Obiekt po deserializacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda deserializacji nie będzie próbował rzutowania głównego wykresu obiektu określonego typu, jak <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="input" /> Długość przekracza wartość <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  - lub - limit rekursji zdefiniowane przez <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> został przekroczony.  - lub - <paramref name="input" /> zawiera nieoczekiwany znak sekwencji.  - lub - <paramref name="input" /> jest typem słownika i napotkano wartość klucza innych niż ciąg.  - lub - <paramref name="input" /> zawiera definicje elementu członkowskiego, które nie są dostępne na typ docelowy.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> zawiera właściwości "__type", która wskazuje, że typ niestandardowy, ale typ programu rozpoznawania nazw, który jest aktualnie powiązany z Serializator nie można znaleźć odpowiedniego typu zarządzanego.  - lub - <paramref name="input" /> zawiera właściwość "__type", która wskazuje typ niestandardowy, ale wynik deserializacji odpowiedniego ciągu JSON nie można przypisać do typu oczekiwanego docelowego.  - lub - <paramref name="input" /> zawiera właściwość "__type", która wskazuje albo <see cref="T:System.Object" /> lub z systemem innym niż tworzone jako wystąpienia typu (na przykład typ abstrakcyjny lub interfejs).  - lub - została podjęta próba konwersji tablicy JSON do tablicy typu zarządzanego, który nie jest obsługiwany jako element docelowy deserializacji JSON.  - lub - nie jest możliwe do przekonwertowania <paramref name="input" /> na typ docelowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną długość ciągów JSON, które są akceptowane przez <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> klasy.</summary>
        <value>Maksymalna długość ciągów JSON. Wartość domyślna to 2097152 znaków, który jest odpowiednikiem 4 MB danych ciąg Unicode.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> właściwość jest stosowana tylko jawne utworzenie wystąpienia <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy. Użyj `jsonSerialization` elementu w pliku konfiguracji, aby ustawić maksymalną długość wystąpienie serializator wewnętrznego, które jest używane przez warstwę komunikacji asynchronicznej. Aby uzyskać więcej informacji o elementach konfiguracji do serializacji, zobacz [porady: Konfigurowanie usługi ASP.NET AJAX Microsoft](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiona na wartość, która jest mniejsza niż jedna.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia limit ograniczający liczbę poziomów obiektu do przetworzenia.</summary>
        <value>Liczba poziomów obiektu. Wartość domyślna to 100.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> Właściwość odwołuje się do liczby poziomów w hierarchii obiektów które <xref:System.Web.Script.Serialization.JavaScriptSerializer> przetworzy w następujących przypadkach:  
  
-   Gdy <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy jest deserializacji ciągu JSON.  
  
-   Gdy <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy jest przejście z wykresu obiektu podczas serializacji.  
  
 Wartość <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> ma zastosowanie tylko jawne utworzenie wystąpienia <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy. Użyj `jsonSerialization` elementu w pliku konfiguracji, aby ustawić liczbę poziomów obiektu przetwarzania dla wystąpienia wewnętrzny serializator używany przez warstwy komunikacji asynchronicznej. Aby uzyskać więcej informacji o elementach konfiguracji do serializacji, zobacz [porady: Konfigurowanie usługi ASP.NET AJAX Microsoft](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiona na wartość, która jest mniejsza niż jedna.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">Tablica zawiera niestandardowe konwertery ma zostać zarejestrowany.</param>
        <summary>Rejestruje niestandardowych konwertera z <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz zarejestrować co najmniej jeden niestandardowy konwerterów z <xref:System.Web.Script.Serialization.JavaScriptSerializer> wystąpienia przy użyciu <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> metody. Po zarejestrowaniu niestandardowego konwertery są <xref:System.Web.Script.Serialization.JavaScriptSerializer> używa konwertery do serializacji typy zarządzane i deserializacji JSON ciągów na typy zarządzane.  
  
 Może być zarejestrowany konwertery wiele z takimi samymi <xref:System.Web.Script.Serialization.JavaScriptSerializer> wystąpienia i konwerterów można wskazać obsługę tego samego typu. W związku z tym ostatnim konwerter, który jest zarejestrowany dla określonego typu jest ten, który będzie używany przez <xref:System.Web.Script.Serialization.JavaScriptSerializer> do serializacji typu.  
  
 Aby uzyskać więcej informacji na temat konwerterów niestandardowych, zobacz <xref:System.Web.Script.Serialization.JavaScriptConverter> klasy.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób rejestrowania niestandardowego konwertera z <xref:System.Web.Script.Serialization.JavaScriptSerializer> wystąpienia. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy.  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="converters" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Konwertuje obiekt do ciągu JSON.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do zserializowania.</param>
        <summary>Konwertuje obiekt do ciągu JSON.</summary>
        <returns>Serializacji ciągu JSON.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.Script.Serialization.JavaScriptSerializer> wystąpienie wykonuje serializację typu, dla którego niestandardowy konwerter jest zarejestrowany, wywołania serializator <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> metodę, aby uzyskać słownik par nazw i wartości, które zostanie przekonwertowane do ciągu JSON.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> Metody można również zgłaszają wyjątki, jeśli wykres obiektu jest zbyt złożony lub zarejestrowanych wystąpień <xref:System.Web.Script.Serialization.JavaScriptConverter> spowodował konwertera rekursji.  
  
   
  
## Examples  
W poniższym przykładzie przedstawiono prosty ilustracja jak serializacji i deserializacji obiektów danych.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Wymaga to klasa o nazwie `Person`, które przedstawiono w poniższym przykładzie. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wynikowy ciąg JSON przekracza wartość <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  - lub - <paramref name="obj" /> zawiera odwołanie cykliczne. Odwołanie cykliczne występuje, gdy obiekt podrzędny zawiera odwołanie do obiektu nadrzędnego, a obiekt nadrzędny zawiera odwołanie do obiektu podrzędnego.</exception>
        <exception cref="T:System.ArgumentException">Limit rekursji zdefiniowane przez <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> został przekroczony.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do zserializowania.</param>
        <param name="output">
          <see cref="T:System.Text.StringBuilder" /> Obiekt, który służy do zapisywania ciągu JSON.</param>
        <summary>Serializuje obiekt i zapisuje wynikowy ciąg JSON do określonego <see cref="T:System.Text.StringBuilder" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.Script.Serialization.JavaScriptSerializer> wystąpienie wykonuje serializację typu, dla którego niestandardowy konwerter jest zarejestrowany, wywołania serializator <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> metodę, aby uzyskać słownik par nazw i wartości, które zostanie przekonwertowane do ciągu JSON.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> Metody można również zgłaszają wyjątki, jeśli wykres obiektu jest zbyt złożony lub zarejestrowanych wystąpień <xref:System.Web.Script.Serialization.JavaScriptConverter> spowodował konwertera rekursji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wynikowy ciąg JSON przekracza wartość <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  - lub - <paramref name="obj" /> zawiera odwołanie cykliczne. Odwołanie cykliczne występuje, gdy obiekt podrzędny zawiera odwołanie do obiektu nadrzędnego, a obiekt nadrzędny zawiera odwołanie do obiektu podrzędnego.</exception>
        <exception cref="T:System.ArgumentException">Limit rekursji zdefiniowane przez <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> został przekroczony.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="output" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>