<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8897b73ce8836425e828803bf5d7382d1bbf72f4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69051494" /></Metadata><TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see href="https://www.newtonsoft.com/json">JSON.NET</see> należy używać do serializacji i deserializacji. Oferuje funkcje serializacji i deserializacji dla aplikacji obsługujących technologię AJAX.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer> Klasa jest używana wewnętrznie przez asynchroniczną warstwę komunikacji do serializacji i deserializacji danych przesyłanych między przeglądarką a serwerem sieci Web. Nie można uzyskać dostępu do tego wystąpienia serializatora. Jednak ta klasa uwidacznia publiczny interfejs API. Z tego względu można użyć klasy, gdy chcesz współpracować z JavaScript Object Notation (JSON) w kodzie zarządzanym.  
  
 Aby serializować obiekt, użyj <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> metody. Aby zdeserializować ciągu JSON, użyj <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> metod lub. <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> Aby serializować i deserializować typy, które nie są natywnie <xref:System.Web.Script.Serialization.JavaScriptSerializer>obsługiwane przez, zaimplementuj konwertery <xref:System.Web.Script.Serialization.JavaScriptConverter> niestandardowe przy użyciu klasy. Następnie należy zarejestrować konwertery przy użyciu <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> metody.  
  
## <a name="mapping-between-managed-types-and-json"></a>Mapowanie między typami zarządzanymi i JSON  
 W poniższej tabeli przedstawiono mapowanie między typami zarządzanymi i notacją JSON dla procesu serializacji. Te typy zarządzane są natywnie obsługiwane przez <xref:System.Web.Script.Serialization.JavaScriptSerializer>program. Podczas deserializacji z ciągu JSON do typu zarządzanego, to samo mapowanie ma zastosowanie. Deserializacja może jednak być asymetryczne; nie wszystkie typy zarządzane można serializować z poziomu JSON.  
  
> [!NOTE]
>  Tablica wielowymiarowa jest serializowana jako tablica Jednowymiarowa i powinna być używana jako tablica płaska.  
  
|Typ zarządzany|Odpowiednik JSON|  
|------------------|---------------------|  
|<xref:System.String>(Tylko kodowanie UTF-8).|String|  
|<xref:System.Char>|String|  
|Pojedynczy znak null (na przykład, \ 0)|Null|  
|<xref:System.Boolean>|Typu. Reprezentowane w formacie JSON `true` jako lub`false`|  
|`null`(`null` odwołania do obiektów <xref:System.Nullable> i typy wartości).|Wartość ciągu o wartości null|  
|<xref:System.DBNull>|Wartość ciągu o wartości null|  
|Typy <xref:System.Byte>pierwotne (lub liczbowe): <xref:System.Int64> <xref:System.Int16>, <xref:System.UInt32> <xref:System.UInt64> <xref:System.Single>,,, ,<xref:System.Double>,,,, i. <xref:System.UInt16> <xref:System.SByte> <xref:System.Int32> Używana jest reprezentacja ciągu niezmiennej kultury.|Wartość liczbowa|  
|<xref:System.DateTime>|Obiekt Date przedstawiony w formacie JSON jako "\\/Date (liczba taktów)\\/". Liczba taktów jest dodatnią lub ujemną wartością długą wskazującą liczbę taktów (w milisekundach), które upłynęły od północy 01 stycznia, 1970 czasu UTC.<br /><br /> Maksymalna obsługiwana wartość daty to <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM), a minimalna obsługiwana wartość daty to <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 am).|  
|Wyliczenia typu Integer|Odpowiednik w postaci liczby całkowitej wartości wyliczenia|  
|Typy, które <xref:System.Collections.IEnumerable> implementują lub <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> które nie <xref:System.Collections.IDictionary> są implementacją <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>lub. Obejmuje to takie typy jak <xref:System.Array>, <xref:System.Collections.ArrayList>, i <xref:System.Collections.Generic.List%601>.|Tablica, która używa składni tablicy JSON|  
|Typy implementujące <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>lub <xref:System.Collections.IDictionary> . Dotyczy to również typów takich <xref:System.Collections.Generic.Dictionary%602> jak <xref:System.Collections.Hashtable>i.|Obiekt JavaScript, który używa składni słownika JSON|  
|Niestandardowe typy specyficzne (nieabstrakcyjne), które mają właściwości wystąpienia publicznego, które mają uprawnienia do pobierania lub publiczne wystąpienia.<br /><br /> Zwróć uwagę, że publiczne właściwości tylko do zapisu, właściwość publiczna lub atrybuty pola <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>publicznego oznaczone przy użyciu, a publiczne właściwości indeksowane w tych typach są ignorowane.|Obiekt JavaScript, który używa składni słownika JSON. Specjalna Właściwość metadanych o nazwie "__type" jest zawarta w celu zapewnienia prawidłowej deserializacji. Upewnij się, że właściwości wystąpienia publicznego mają metody dostępu get i Set, aby zapewnić poprawną deserializacji.|  
|<xref:System.Guid>|Ciąg reprezentujący identyfikator GUID|  
|<xref:System.Uri>|Reprezentacja ciągu wartości zwracanej przez<xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 Pierwszy przykład przedstawia prostą ilustrację sposobu serializacji i deserializacji obiektów danych. Wymaga klasy o nazwie Person, która jest pokazana poniżej.  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 W następnym przykładzie pokazano bardziej skomplikowany i kompletny projekt, który używa <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy do zapisywania i przywracania stanu obiektu przy użyciu serializacji JSON. Ten kod używa niestandardowego konwertera dostarczonego dla <xref:System.Web.Script.Serialization.JavaScriptConverter> klasy.  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">Korzystanie z usług sieci Web w ASP.NET AJAX</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0">Wywoływanie usług internetowych ze skryptu klienta w ASP.NET AJAX</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> klasy, która nie ma mechanizmu rozwiązywania konfliktów typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wystąpienie <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy bez programu rozpoznawania typów nie zawiera właściwości metadanych typu (o nazwie "__type") w ciągu serializowanego JSON. Właściwość metadanych typu jest używana przez <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> metody i <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> do określenia odpowiedniego typu zarządzanego, do którego zostanie przekonwertowany ciąg JSON. Aby uzyskać informacje o typach rozpoznawania, zobacz <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> Klasa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">Niestandardowy obiekt programu rozpoznawania typów.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> klasy, która ma program rozpoznawania typów niestandardowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas serializacji obiektu <xref:System.Web.Script.Serialization.JavaScriptSerializer> Klasa `resolver` używa parametru do określenia odpowiedniej wartości do uwzględnienia w serializowanym ciągu JSON dla właściwości metadanych typu ("__type"). Podobnie, gdy <xref:System.Web.Script.Serialization.JavaScriptSerializer> Klasa deserializacji ciągu JSON, rozpoznaje wartość właściwości metadanych typu dla odpowiedniego typu zarządzanego przy użyciu wystąpienia programu rozpoznawania nazw.  
  
 Można ustawić `resolver` parametr na `null`, który <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> jest odpowiednikiem wywołania konstruktora.  
  
 Wystąpienie <xref:System.Web.Script.Serialization.JavaScriptSerializer> , które jest używane przez asynchroniczną warstwę komunikacji do wywoływania usług sieci Web ze skryptu klienta, używa mechanizmu rozpoznawania typów specjalnych. Ten typ mechanizmu rozwiązywania konfliktów ogranicza typy, które mogą być deserializowane do tych zdefiniowanych w podpisie metody usługi sieci Web lub te, które zostały <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> zastosowane. Tego wbudowanego programu rozpoznawania typu nie można modyfikować programowo.  
  
> [!IMPORTANT]
>  Użycie wystąpienia tego obiektu zainicjowanego z niestandardowym typem — program rozpoznawania nazw może stanowić zagrożenie dla bezpieczeństwa. Ten obiekt jest używany tylko z zaufanych danych. Aby uzyskać więcej informacji, zobacz [sprawdzanie poprawności danych](https://www.owasp.org/index.php/Data_Validation).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">Korzystanie z usług sieci Web w ASP.NET AJAX</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do przekonwertowania.</param>
        <param name="targetType">Typ, do którego ma zostać przekonwertowany obiekt.</param>
        <summary>Konwertuje określony obiekt na określony typ.</summary>
        <returns>Serializowany ciąg JSON.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wystąpienie jest Serializowanie typu, dla którego zarejestrowano konwertera niestandardowego, serializator <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> wywołuje metodę w celu uzyskania słownika par nazwa/wartość, które zostaną przekonwertowane na ciąg w formacie JSON. <xref:System.Web.Script.Serialization.JavaScriptSerializer>  
  
 Metoda może również generować wyjątki, jeśli wykres obiektu jest zbyt złożony lub zarejestrowane <xref:System.Web.Script.Serialization.JavaScriptConverter> wystąpienia spowodowały rekursję konwertera. <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Otrzymany ciąg w formacie JSON przekracza wartość <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
—lub— 
 <paramref name="obj" />zawiera odwołanie cykliczne. Odwołanie cykliczne występuje, gdy obiekt podrzędny ma odwołanie do obiektu nadrzędnego, a obiekt nadrzędny ma odwołanie do obiektu podrzędnego.</exception>
        <exception cref="T:System.ArgumentException">Przekroczono limit rekursji <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> zdefiniowany przez.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ, do którego <paramref name="obj" /> zostanie przekonwertowany.</typeparam>
        <param name="obj">Obiekt do przekonwertowania.</param>
        <summary>Konwertuje dany obiekt na określony typ.</summary>
        <returns>Obiekt, który został przekonwertowany na typ docelowy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda próbuje skonwertować wystąpienie obiektu, które jest reprezentowane przez `obj` wystąpienie typu `T`. <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> Podczas tej konwersji nie ma gwarancji, że równość odwołania do obiektu jest utrzymywana. W związku z tym nie można `obj` założyć `T` , że i zapoznaj się z tym samym obiektem.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>jest przeznaczony do użycia w przypadku zaimplementowania klasy, która pochodzi <xref:System.Web.Script.Serialization.JavaScriptConverter>od. Kod konwertera musi być w stanie przyjąć wartość, która znajduje się w słowniku, do którego jest przekazywany przez serializator, a następnie przekonwertować tę wartość na wystąpienie `T`typu. Zamiast ponownej implementacji niestandardowego kodu konwersji do wykonania tego zadania, można wywołać <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> metodę z kodu konwertera.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> jak używać metody, aby <xref:System.Web.UI.WebControls.ListItem> uzyskać obiekt z wartości w słowniku, który jest przesyłany do konwertera. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy.  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="obj" />(lub zagnieżdżony element członkowski <paramref name="obj" />) zawiera właściwość "__type", która wskazuje typ niestandardowy, ale mechanizm rozwiązywania konfliktów, który jest skojarzony z serializatorem nie może znaleźć odpowiedniego typu zarządzanego.  
  
—lub— 
 <paramref name="obj" />(lub zagnieżdżony element członkowski <paramref name="obj" />) zawiera właściwość "__type", która wskazuje typ niestandardowy, ale nie można przypisać wyniku deserializacji odpowiadającego mu ciągu JSON do oczekiwanego typu docelowego.  
  
—lub— 
 <paramref name="obj" />(lub zagnieżdżony element członkowski <paramref name="obj" />) zawiera właściwość "__type", która <see cref="T:System.Object" /> wskazuje albo lub typ inny niż instantiable (na przykład typ abstrakcyjny lub interfejs).  
  
—lub— 
Podjęto próbę przekonwertowania <paramref name="obj" /> na typ zarządzany typu "Array", który nie jest obsługiwany do użycia jako element docelowy deserializacji.  
  
—lub— 
Nie można przekonwertować <paramref name="obj" /> na <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="obj" />jest typem słownika i napotkano wartość klucza niebędącą ciągiem.  
  
—lub— 
 <paramref name="obj" />zawiera definicje elementów członkowskich, które nie są dostępne <paramref name="T" />w typie.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg JSON do deserializacji.</param>
        <param name="targetType">Typ obiektu będącego wynikiem.</param>
        <summary>Konwertuje ciąg w formacie JSON na obiekt określonego typu.</summary>
        <returns>Obiekt po deserializacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda deserializacji nie próbuje rzutować katalogu głównego grafu obiektów na określony typ, tak jak <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> Metoda.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Długość <paramref name="input" /> przekracza<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />wartość.  
  
—lub— 
Przekroczono limit rekursji <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> zdefiniowany przez.  
  
—lub— 
 <paramref name="input" />zawiera nieoczekiwaną sekwencję znaków.  
  
—lub— 
 <paramref name="input" />jest typem słownika i napotkano wartość klucza niebędącą ciągiem.  
  
—lub— 
 <paramref name="input" />zawiera definicje elementów członkowskich, które nie są dostępne w typie docelowym.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" />zawiera właściwość "__type", która wskazuje typ niestandardowy, ale mechanizm rozwiązywania typów, który jest aktualnie skojarzony z serializatorem nie może znaleźć odpowiedniego typu zarządzanego.  
  
—lub— 
 <paramref name="input" />zawiera właściwość "__type", która wskazuje typ niestandardowy, ale nie można przypisać wyniku deserializacji odpowiadającego ciągu JSON do oczekiwanego typu docelowego.  
  
—lub— 
 <paramref name="input" />zawiera właściwość "__type", która wskazuje <see cref="T:System.Object" /> albo lub typ inny niż instantiable (na przykład typ abstrakcyjny lub interfejs).  
  
—lub— 
Podjęto próbę przekonwertowania tablicy JSON na typ zarządzany typu "Array", który nie jest obsługiwany do użycia jako element docelowy deserializacji JSON.  
  
—lub— 
Nie można przekonwertować <paramref name="input" /> na typ docelowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ obiektu będącego wynikiem.</typeparam>
        <param name="input">Ciąg JSON do deserializacji.</param>
        <summary>Konwertuje określony ciąg JSON na obiekt typu <paramref name="T" />.</summary>
        <returns>Obiekt po deserializacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest równoważna z pierwszym <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> użyciem metody do uzyskania grafu obiektów, a następnie próby rzutowania wyniku na typ `T`. <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>  
  
 Podczas deserializacji następuje odwołanie do bieżącego typu programu szeregującego, który określa typ zarządzany do użycia podczas konwertowania elementów zagnieżdżonych w tablicach i typach słowników. W efekcie proces deserializacji wykonuje iterację przez wszystkie zagnieżdżone elementy `input`. Aby uzyskać więcej informacji na temat typów rozpoznawania, zobacz <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> Klasa.  
  
   
  
## Examples  
Poniższy przykład przedstawia prostą ilustrację sposobu serializacji i deserializacji obiektów danych.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Wymaga klasy o nazwie `Person`, która jest pokazana w poniższym przykładzie. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> Długość przekracza <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />wartość.  
  
—lub— 
Przekroczono limit rekursji <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> zdefiniowany przez.  
  
—lub— 
 <paramref name="input" />zawiera nieoczekiwaną sekwencję znaków.  
  
—lub— 
 <paramref name="input" />jest typem słownika i napotkano wartość klucza niebędącą ciągiem.  
  
—lub— 
 <paramref name="input" />zawiera definicje elementów członkowskich, które nie są dostępne <paramref name="T" />w typie.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" />zawiera właściwość "__type", która wskazuje typ niestandardowy, ale mechanizm rozpoznawania typu skojarzony z serializatorem nie może znaleźć odpowiedniego typu zarządzanego.  
  
—lub— 
 <paramref name="input" />zawiera właściwość "__type", która wskazuje typ niestandardowy, ale nie można przypisać wyniku deserializacji odpowiadającego ciągu JSON do oczekiwanego typu docelowego.  
  
—lub— 
 <paramref name="input" />zawiera właściwość "__type", która wskazuje <see cref="T:System.Object" /> albo lub typ inny niż instantiable (na przykład typy abstrakcyjne lub interfejs).  
  
—lub— 
Podjęto próbę przekonwertowania tablicy JSON na typ zarządzany typu "Array", który nie jest obsługiwany do użycia jako element docelowy deserializacji JSON.  
  
—lub— 
Nie można przekonwertować <paramref name="input" /> na <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg JSON do deserializacji.</param>
        <summary>Konwertuje określony ciąg JSON na Graf obiektu.</summary>
        <returns>Obiekt po deserializacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda deserializacji nie próbuje rzutować katalogu głównego grafu obiektów na określony typ, podobnie jak w przypadku <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> Długość przekracza <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />wartość.  
  
—lub— 
Przekroczono limit rekursji <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> zdefiniowany przez.  
  
—lub— 
 <paramref name="input" />zawiera nieoczekiwaną sekwencję znaków.  
  
—lub— 
 <paramref name="input" />jest typem słownika i napotkano wartość klucza niebędącą ciągiem.  
  
—lub— 
 <paramref name="input" />zawiera definicje elementów członkowskich, które nie są dostępne w typie docelowym.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" />zawiera właściwość "__type", która wskazuje typ niestandardowy, ale mechanizm rozwiązywania typów, który jest aktualnie skojarzony z serializatorem nie może znaleźć odpowiedniego typu zarządzanego.  
  
—lub— 
 <paramref name="input" />zawiera właściwość "__type", która wskazuje typ niestandardowy, ale nie można przypisać wyniku deserializacji odpowiadającego ciągu JSON do oczekiwanego typu docelowego.  
  
—lub— 
 <paramref name="input" />zawiera właściwość "__type", która wskazuje <see cref="T:System.Object" /> albo lub typ inny niż instantiable (na przykład typ abstrakcyjny lub interfejs).  
  
—lub— 
Podjęto próbę przekonwertowania tablicy JSON na typ zarządzany typu "Array", który nie jest obsługiwany do użycia jako element docelowy deserializacji JSON.  
  
—lub— 
Nie można przekonwertować <paramref name="input" /> na typ docelowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną długość ciągów JSON, które są akceptowane przez <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> klasę.</summary>
        <value>Maksymalna długość ciągów JSON. Wartość domyślna to 2097152 znaków, która jest równoważna z 4 MB danych ciągu Unicode.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> właściwości ma zastosowanie tylko wtedy, gdy jawnie utworzysz wystąpienie <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy. `jsonSerialization` Użyj elementu pliku konfiguracji, aby ustawić maksymalną długość wewnętrznego wystąpienia serializatora używanego przez asynchroniczną warstwę komunikacji. Aby uzyskać więcej informacji o elementach konfiguracji do serializacji, [zobacz How to: Skonfiguruj usługi ASP.NET Services w technologii](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)Microsoft Ajax.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiona na wartość, która jest mniejsza niż 1.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia limit ograniczający liczbę poziomów obiektów do przetworzenia.</summary>
        <value>Liczba poziomów obiektów. Wartość domyślna to 100.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość odnosi się do liczby poziomów w hierarchii obiektów, które <xref:System.Web.Script.Serialization.JavaScriptSerializer> będą przetwarzane w następujących przypadkach: <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A>  
  
-   <xref:System.Web.Script.Serialization.JavaScriptSerializer> Gdy Klasa deserializacji ciągu JSON.  
  
-   <xref:System.Web.Script.Serialization.JavaScriptSerializer> Gdy Klasa przebuduje Graf obiektu podczas serializacji.  
  
 Wartość <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> ma zastosowanie tylko wtedy, gdy jawnie utworzysz wystąpienie <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy. `jsonSerialization` Użyj elementu pliku konfiguracji, aby ustawić liczbę poziomów obiektów do przetworzenia dla wewnętrznego wystąpienia serializatora używanego przez asynchroniczną warstwę komunikacji. Aby uzyskać więcej informacji o elementach konfiguracji do serializacji, [zobacz How to: Skonfiguruj usługi ASP.NET Services w technologii](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)Microsoft Ajax.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiona na wartość, która jest mniejsza niż 1.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">Tablica zawierająca niestandardowe konwertery do zarejestrowania.</param>
        <summary>Rejestruje niestandardowy konwerter z <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> wystąpieniem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zarejestrować jeden lub więcej konwerterów niestandardowych z <xref:System.Web.Script.Serialization.JavaScriptSerializer> wystąpieniem przy <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> użyciu metody. W przypadku zarejestrowania niestandardowych konwerterów program <xref:System.Web.Script.Serialization.JavaScriptSerializer> używa konwerterów do serializacji typów zarządzanych i do deserializacji ciągów JSON na typy zarządzane.  
  
 Można zarejestrować wiele konwerterów w tym samym <xref:System.Web.Script.Serialization.JavaScriptSerializer> wystąpieniu, a te konwertery mogą wskazywać obsługę tego samego typu. W związku z tym ostatni konwerter zarejestrowany dla określonego typu jest tym, który będzie używany przez <xref:System.Web.Script.Serialization.JavaScriptSerializer> do serializacji typu.  
  
 Aby uzyskać więcej informacji na temat konwerterów niestandardowych <xref:System.Web.Script.Serialization.JavaScriptConverter> , zobacz Klasa.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak zarejestrować konwerter niestandardowy z <xref:System.Web.Script.Serialization.JavaScriptSerializer> wystąpieniem. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Script.Serialization.JavaScriptSerializer> klasy.  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="converters" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Konwertuje obiekt na ciąg JSON.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do serializacji.</param>
        <summary>Konwertuje obiekt na ciąg JSON.</summary>
        <returns>Serializowany ciąg JSON.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wystąpienie szereguje typ, dla którego zarejestrowano konwertera niestandardowego, serializator <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> wywołuje metodę w celu uzyskania słownika par nazwa/wartość, które zostaną przekonwertowane na ciąg JSON. <xref:System.Web.Script.Serialization.JavaScriptSerializer>  
  
 Metoda może również generować wyjątki, jeśli wykres obiektu jest zbyt złożony lub zarejestrowane <xref:System.Web.Script.Serialization.JavaScriptConverter> wystąpienia spowodowały rekursję konwertera. <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>  
  
   
  
## Examples  
Poniższy przykład przedstawia prostą ilustrację sposobu serializacji i deserializacji obiektów danych.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Wymaga klasy o nazwie `Person`, która jest pokazana w poniższym przykładzie. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Otrzymany ciąg JSON przekracza wartość <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
—lub— 
 <paramref name="obj" />zawiera odwołanie cykliczne. Odwołanie cykliczne występuje, gdy obiekt podrzędny ma odwołanie do obiektu nadrzędnego, a obiekt nadrzędny ma odwołanie do obiektu podrzędnego.</exception>
        <exception cref="T:System.ArgumentException">Przekroczono limit rekursji <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> zdefiniowany przez.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do serializacji.</param>
        <param name="output"><see cref="T:System.Text.StringBuilder" /> Obiekt, który jest używany do zapisania ciągu JSON.</param>
        <summary>Serializować obiekt i zapisuje otrzymany ciąg JSON do określonego <see cref="T:System.Text.StringBuilder" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wystąpienie szereguje typ, dla którego zarejestrowano konwertera niestandardowego, serializator <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> wywołuje metodę w celu uzyskania słownika par nazwa/wartość, które zostaną przekonwertowane na ciąg JSON. <xref:System.Web.Script.Serialization.JavaScriptSerializer>  
  
 Metoda może również generować wyjątki, jeśli wykres obiektu jest zbyt złożony lub zarejestrowane <xref:System.Web.Script.Serialization.JavaScriptConverter> wystąpienia spowodowały rekursję konwertera. <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Otrzymany ciąg JSON przekracza wartość <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
—lub— 
 <paramref name="obj" />zawiera odwołanie cykliczne. Odwołanie cykliczne występuje, gdy obiekt podrzędny ma odwołanie do obiektu nadrzędnego, a obiekt nadrzędny ma odwołanie do obiektu podrzędnego.</exception>
        <exception cref="T:System.ArgumentException">Przekroczono limit rekursji <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> zdefiniowany przez.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="output" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
