<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41b31359cd58474cbb0fb68328281b337553cc8f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37544824" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptTypeResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia abstrakcyjna klasa bazowa dla implementacji rozpoznawania typu niestandardowego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> Klasa udostępnia usługi dla:  
  
-   Konwertowanie zarządzanych wpisz informacje do wartości ciągu za pomocą <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> metody.  
  
-   Rozpoznawanie wartość ciągu do odpowiedniego zarządzanego typu przy użyciu <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> metody.  
  
 Gdy <xref:System.Web.Script.Serialization.JavaScriptSerializer> obiektu serializuje typów niestandardowych, może opcjonalnie obejmować w serializacji ciąg JavaScript Object Notation (JSON) wartość, która zawiera informacje o typie. Podczas deserializacji <xref:System.Web.Script.Serialization.JavaScriptSerializer> może, a następnie odwołania zarządzane to wartość ciągu, aby określić odpowiedni typ do którego będzie można przekonwertować ciągu JSON.  
  
 Jeśli podasz rozpoznawania typu <xref:System.Web.Script.Serialization.JavaScriptSerializer> wypadku użyje serializator <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> i <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> metody do mapowania miedzy zarządzany typ i wartość ciągu w procesie serializacji i deserializacji, odpowiednio.  
  
 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> Klasa jest klasą bazową dla <xref:System.Web.Script.Serialization.SimpleTypeResolver> klasy, która dostarcza implementację mechanizm rozpoznawania typu, który używa nazwy kwalifikowanej zestawu typu zarządzanego.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia niestandardowego typu program rozpoznawania nazw.  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Kiedy należy zaimplementować mechanizm rozpoznawania typu ciąg, który jest zwracany przez <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> metody musi być mapowane do tego samego typu zarządzanego, gdy wartość ciągu jest przekazywany do <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> metody.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResolveType : string -&gt; Type" Usage="javaScriptTypeResolver.ResolveType id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Nazwa typu zarządzanego.</param>
        <summary>Po przesłonięciu w klasie pochodnej zwraca <see cref="T:System.Type" /> obiekt, który jest skojarzony z nazwą określonego typu.</summary>
        <returns>
          <see cref="T:System.Type" /> Obiekt, który jest skojarzony z nazwą określonego typu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy program rozpoznawania nazw typu jest skojarzony z <xref:System.Web.Script.Serialization.JavaScriptSerializer> wystąpienie, używa serializatora <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> metody, gdy iteruje ciągu JSON można określić konkretne zarządzany typ, do którego powinny być konwertowane na typ JSON.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podana wartość ciągu, mechanizm rozpoznawania typu musi zwracać <see cref="T:System.Type" /> obiekt, który reprezentuje odpowiedni typ zarządzanego.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ResolveTypeId : Type -&gt; string" Usage="javaScriptTypeResolver.ResolveTypeId type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Typ zarządzany zostać rozpoznane.</param>
        <summary>Po przesłonięciu w klasie pochodnej zwraca nazwę typu dla określonego <see cref="T:System.Type" /> obiektu.</summary>
        <returns>Nazwa określonego typu zarządzanego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> metoda zwraca albo `null` lub <xref:System.String.Empty>, a następnie mechanizm rozpoznawania typu nie obsługuje tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>