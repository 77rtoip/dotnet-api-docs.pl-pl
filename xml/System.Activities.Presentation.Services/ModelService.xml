<Type Name="ModelService" FullName="System.Activities.Presentation.Services.ModelService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a217721acad6a4ae16e47a4976961e40b2aa0c8b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36720894" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ModelService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Services.ModelService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelService abstract" />
  <TypeSignature Language="F#" Value="type ModelService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e5174-101">Ta klasa jest główny punkt wejścia używaną do interakcji z modelem projektanta.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5174-101">This class is the main entry point that the designer uses to interact with the model.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5174-102">Usługa ma podziału między publiczne i chronione metody, które należy zaimplementować podczas tworzenia klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="e5174-102">The service has a split between public and protected methods that you must implement when you create a derived class.</span></span> <span data-ttu-id="e5174-103">Metody publiczne są można wywołać dla wszystkich użytkowników.</span><span class="sxs-lookup"><span data-stu-id="e5174-103">The public methods are callable by anyone.</span></span> <span data-ttu-id="e5174-104">Metody chronione są wywoływane przez model.</span><span class="sxs-lookup"><span data-stu-id="e5174-104">The protected methods are invoked by the model.</span></span>  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5174-105">Tworzy nowy <see cref="T:System.Activities.Presentation.Services.ModelService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-105">Creates a new <see cref="T:System.Activities.Presentation.Services.ModelService" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateItem">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5174-106">Tworzy <see cref="T:System.Activities.Presentation.Model.ModelItem" /> dla danego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-106">Creates a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> for a given type.</span>
          </span>
          <span data-ttu-id="e5174-107">Ta metoda jest wywoływana przez <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> gdy użytkownik chce utworzyć nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-107">This method is called by <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> when the user wants to create a new item.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateItem (item As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : obj -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.CreateItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e5174-108">Element klonowania i zawijany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-108">The item to clone and wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5174-109">Pobiera istniejącego wystąpienia i tworzy element modelu, który jest głębokie klon wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-109">Takes an existing instance and creates a model item that is a deep clone of the instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5174-110">Zwraca nowo utworzony <see cref="T:System.Activities.Presentation.Model.ModelItem" /> czyli Sklonowanie istniejącego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-110">Returns a newly created <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is a clone of the existing item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (Type itemType, System.Activities.Presentation.Model.CreateOptions options, params object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateItem(class System.Type itemType, valuetype System.Activities.Presentation.Model.CreateOptions options, object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateItem (itemType As Type, options As CreateOptions, ParamArray arguments As Object()) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateItem(Type ^ itemType, System::Activities::Presentation::Model::CreateOptions options, ... cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : Type * System.Activities.Presentation.Model.CreateOptions * obj[] -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.CreateItem (itemType, options, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
        <Parameter Name="options" Type="System.Activities.Presentation.Model.CreateOptions" />
        <Parameter Name="arguments" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="e5174-111">Typ elementu do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-111">The type of item to create.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="e5174-112">Opcje tworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-112">Creation options.</span>
          </span>
          <span data-ttu-id="e5174-113">Można określić, czy chcesz zainicjować wartości domyślne dla elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-113">You can specify whether you would like to initialize default values for an item.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="e5174-114">Tablica argumentów konstruktora elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-114">An array of arguments to the constructor of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5174-115">Tworzy <see cref="T:System.Activities.Presentation.Model.ModelItem" /> dla danego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-115">Creates a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> for a given type.</span>
          </span>
          <span data-ttu-id="e5174-116">Ta metoda jest wywoływana przez <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> gdy użytkownik chce utworzyć nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-116">This method is called by <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> when the user wants to create a new item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5174-117">Zwraca nowo utworzony <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-117">Returns the newly created <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStaticMemberItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem (Type type, string memberName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem(class System.Type type, string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateStaticMemberItem(Type ^ type, System::String ^ memberName);" />
      <MemberSignature Language="F#" Value="abstract member CreateStaticMemberItem : Type * string -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.CreateStaticMemberItem (type, memberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="e5174-118">Typ, który zawiera statyczny element członkowski, którego dotyczy odwołanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-118">The type that contains the static member being referenced.</span>
          </span>
        </param>
        <param name="memberName">
          <span data-ttu-id="e5174-119">Nazwa statyczny element członkowski, którego dotyczy odwołanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-119">The name of the static member being referenced.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5174-120">Tworzy nowy element modelu, który reprezentuje wartość statyczny element członkowski z danej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-120">Creates a new model item that represents the value of a static member of the given class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5174-121">Zwraca <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-121">Returns <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5174-122">Na przykład można dodać odwołania do `Brushes.Red` do modelu, wywołania tej metody za pomocą `typeof(Brushes)` i ciągu "Red" jako parametry.</span><span class="sxs-lookup"><span data-stu-id="e5174-122">For example, to add a reference to `Brushes.Red` to the model, call this method with `typeof(Brushes)` and the string "Red" as the parameters.</span></span> <span data-ttu-id="e5174-123">To spowoduje zserializowana XAML jako `{x:Static Brushes.Red}`.</span><span class="sxs-lookup"><span data-stu-id="e5174-123">This will be serialized into XAML as `{x:Static Brushes.Red}`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5174-124">Znajduje pasujące elementy modelu podany punkt wyjścia z do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-124">Finds matching model items given a starting point from which to look.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5174-125">Wszystkie przeszukiwań są cyklicznego.</span><span class="sxs-lookup"><span data-stu-id="e5174-125">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Find (System.Activities.Presentation.Model.ModelItem startingItem, Predicate&lt;Type&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Find(class System.Activities.Presentation.Model.ModelItem startingItem, class System.Predicate`1&lt;class System.Type&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Find (startingItem As ModelItem, match As Predicate(Of Type)) As IEnumerable(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Find(System::Activities::Presentation::Model::ModelItem ^ startingItem, Predicate&lt;Type ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.Activities.Presentation.Model.ModelItem * Predicate&lt;Type&gt; -&gt; seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="modelService.Find (startingItem, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="match" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="startingItem">
          <span data-ttu-id="e5174-126">
            <see cref="T:System.Activities.Presentation.Model.ModelItem" /> z której ma się rozpocząć wyszukiwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-126">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> from which to start the search.</span>
          </span>
          <span data-ttu-id="e5174-127">Elementy powyżej tego elementu zostanie zignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-127">Items above this item will be ignored.</span>
          </span>
          <span data-ttu-id="e5174-128">Ten element i elementy poniżej w hierarchii, będą uwzględniane podczas wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-128">This item, and any item below it in the hierarchy, will be included in the search.</span>
          </span>
          <span data-ttu-id="e5174-129">Jeśli ta wartość jest <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> zamiast niego jest używana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-129">If this value is <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> is used instead.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="e5174-130">Predykat umożliwia bardziej złożonej typu pasujących do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-130">A predicate that allows more complex type matching to be used.</span>
          </span>
          <span data-ttu-id="e5174-131">Ta metoda powoduje wyliczenie wszystkich elementów w zakresie danego nadrzędnego, które odpowiadają predykatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-131">This method will enumerate all items within the given parent scope that match the predicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5174-132">Znajduje pasujące elementy modelu podany punkt wyjścia z do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-132">Finds matching model items given a starting point from which to look.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5174-133">Zwraca <see cref="T:System.Collections.Generic.IEnumerable`1" /> zawiera wszystkie elementy modelu zgodne zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-133">Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains all model items that match the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5174-134">Wszystkie przeszukiwań są cyklicznego.</span><span class="sxs-lookup"><span data-stu-id="e5174-134">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5174-135">
            <paramref name="match" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-135">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Find (System.Activities.Presentation.Model.ModelItem startingItem, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Find(class System.Activities.Presentation.Model.ModelItem startingItem, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Find(System::Activities::Presentation::Model::ModelItem ^ startingItem, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.Activities.Presentation.Model.ModelItem * Type -&gt; seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="modelService.Find (startingItem, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="startingItem">
          <span data-ttu-id="e5174-136">
            <see cref="T:System.Activities.Presentation.Model.ModelItem" /> z której ma się rozpocząć wyszukiwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-136">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> from which to start the search.</span>
          </span>
          <span data-ttu-id="e5174-137">Elementy powyżej tego elementu zostanie zignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-137">Items above this item will be ignored.</span>
          </span>
          <span data-ttu-id="e5174-138">Ten element i elementy poniżej w hierarchii, będą uwzględniane podczas wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-138">This item, and any item below it in the hierarchy, will be included in the search.</span>
          </span>
          <span data-ttu-id="e5174-139">Jeśli ta wartość jest <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> zamiast niego jest używana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-139">If this value is <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> is used instead.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="e5174-140">
            <see cref="T:System.Type" /> Obiektu można znaleźć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-140">The <see cref="T:System.Type" /> of the object to find.</span>
          </span>
          <span data-ttu-id="e5174-141">Ta metoda powoduje wyliczenie wszystkich elementów należących do zakresu nadrzędnego danego żądanego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-141">This method will enumerate all items within the given parent scope that are of the requested type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5174-142">Znajduje pasujące elementy modelu podany punkt wyjścia z do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-142">Finds matching model items given a starting point from which to look.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5174-143">Zwraca <see cref="T:System.Collections.Generic.IEnumerable`1" /> zawiera wszystkie elementy modelu zgodne zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-143">Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains all model items that match the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5174-144">Wszystkie przeszukiwań są cyklicznego.</span><span class="sxs-lookup"><span data-stu-id="e5174-144">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5174-145">
            <paramref name="type" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-145">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromName">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5174-146">Lokalizuje <see cref="T:System.Activities.Presentation.Model.ModelItem" /> w danym zakresie o podanej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-146">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5174-147">Zwraca `null` Jeśli nie można odnaleźć elementu modelu.</span><span class="sxs-lookup"><span data-stu-id="e5174-147">Returns `null` if the model item could not be located.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromName (scope As ModelItem, name As String) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Presentation::Model::ModelItem ^ FromName(System::Activities::Presentation::Model::ModelItem ^ scope, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.FromName : System.Activities.Presentation.Model.ModelItem * string -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.FromName (scope, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="e5174-148">Opcjonalne zakres zapewnienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-148">An optional scope to provide.</span>
          </span>
          <span data-ttu-id="e5174-149">Jeśli zakres nie zostanie podany, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> będzie używana jako zakres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-149">If the scope is not provided, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> will be used as a scope.</span>
          </span>
          <span data-ttu-id="e5174-150">W przypadku zakresu najbliższej <see cref="T:System.Windows.Markup.INameScope" /> w hierarchii, będzie używana do lokalizowania elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-150">If the scope is provided, the nearest <see cref="T:System.Windows.Markup.INameScope" /> in the hierarchy will be used to locate the item.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="e5174-151">Nazwa do zlokalizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-151">The name to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5174-152">Lokalizuje <see cref="T:System.Activities.Presentation.Model.ModelItem" /> w danym zakresie o podanej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-152">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5174-153">Zwraca <see cref="T:System.Activities.Presentation.Model.ModelItem" /> którego nazwa odpowiada <paramref name="name" />, lub <see langword="null" /> Jeżeli nie znaleziono dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-153">Returns a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> whose name matches <paramref name="name" />, or <see langword="null" /> if no match was found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5174-154">
            <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-154">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name, StringComparison comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name, valuetype System.StringComparison comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FromName (scope As ModelItem, name As String, comparison As StringComparison) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ FromName(System::Activities::Presentation::Model::ModelItem ^ scope, System::String ^ name, StringComparison comparison);" />
      <MemberSignature Language="F#" Value="abstract member FromName : System.Activities.Presentation.Model.ModelItem * string * StringComparison -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.FromName (scope, name, comparison)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="comparison" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="e5174-155">Opcjonalne zakres zapewnienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-155">An optional scope to provide.</span>
          </span>
          <span data-ttu-id="e5174-156">Jeśli zakres nie zostanie podany, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> będzie używana jako zakres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-156">If the scope is not provided, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> will be used as a scope.</span>
          </span>
          <span data-ttu-id="e5174-157">W przypadku zakresu najbliższej <see cref="T:System.Windows.Markup.INameScope" /> w hierarchii, będzie używana do lokalizowania elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-157">If the scope is provided, the nearest <see cref="T:System.Windows.Markup.INameScope" /> in the hierarchy will be used to locate the item.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="e5174-158">Nazwa do zlokalizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-158">The name to locate.</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="e5174-159">Określa, jak nazwa powinna być porównywana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-159">Determines how the name should be compared.</span>
          </span>
          <span data-ttu-id="e5174-160">Wartość domyślna to aby porównać numer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-160">The default is to compare against ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5174-161">Lokalizuje <see cref="T:System.Activities.Presentation.Model.ModelItem" /> w danym zakresie o podanej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-161">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5174-162">Zwraca <see cref="T:System.Activities.Presentation.Model.ModelItem" /> którego nazwa odpowiada <paramref name="name" />, lub <see langword="null" /> Jeżeli nie znaleziono dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-162">Returns a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> whose name matches <paramref name="name" />, or <see langword="null" /> if no match was found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5174-163">
            <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-163">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ModelChanged">
      <MemberSignature Language="C#" Value="public abstract event EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; ModelChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.Services.ModelChangedEventArgs&gt; ModelChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Services.ModelService.ModelChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ModelChanged As EventHandler(Of ModelChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event EventHandler&lt;System::Activities::Presentation::Services::ModelChangedEventArgs ^&gt; ^ ModelChanged;" />
      <MemberSignature Language="F#" Value="member this.ModelChanged : EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; " Usage="member this.ModelChanged : System.EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5174-164">To zdarzenie jest wywoływane, gdy coś w modelu została zmieniona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-164">This event is raised when something in the model has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5174-165">Argumenty zdarzeń można znaleźć, co się zmieniło.</span><span class="sxs-lookup"><span data-stu-id="e5174-165">The event arguments in the event can be used to find what has changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Services.ModelService.Root" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Root As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Root { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Services.ModelService.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5174-166">Element główny hierarchii obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-166">The root of the object hierarchy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5174-167">Zwraca pierwiastek hierarchii jako <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5174-167">Returns the root of the model hierarchy as a <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5174-168">Dla magazynów liniowej główny jest pierwszy obiekt w magazynie.</span><span class="sxs-lookup"><span data-stu-id="e5174-168">For linear stores, the root is the first object in the store.</span></span> <span data-ttu-id="e5174-169">Dla magazynów, które reprezentują drzewa obiektów to zwraca znajdujące się najwyżej węzła drzewa.</span><span class="sxs-lookup"><span data-stu-id="e5174-169">For stores that represent a tree of objects, this returns the topmost node of the tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>