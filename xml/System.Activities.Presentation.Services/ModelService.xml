<Type Name="ModelService" FullName="System.Activities.Presentation.Services.ModelService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8fc7ca25f653c91b9b06dd48c70a713ee9660274" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53750299" /></Metadata><TypeSignature Language="C#" Value="public abstract class ModelService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Services.ModelService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelService abstract" />
  <TypeSignature Language="F#" Value="type ModelService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="afbff-101">Ta klasa jest główny punkt wejścia używany przez projektanta do interakcji z modelem.</span><span class="sxs-lookup"><span data-stu-id="afbff-101">This class is the main entry point that the designer uses to interact with the model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbff-102">Usługa ma podziału między publiczne i chronione metody, które należy zaimplementować podczas tworzenia klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="afbff-102">The service has a split between public and protected methods that you must implement when you create a derived class.</span></span> <span data-ttu-id="afbff-103">Metody publiczne są wywoływane przez dowolną osobę.</span><span class="sxs-lookup"><span data-stu-id="afbff-103">The public methods are callable by anyone.</span></span> <span data-ttu-id="afbff-104">Metody chronione są wywoływane przez model.</span><span class="sxs-lookup"><span data-stu-id="afbff-104">The protected methods are invoked by the model.</span></span>  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="afbff-105">Tworzy nową <see cref="T:System.Activities.Presentation.Services.ModelService" />.</span><span class="sxs-lookup"><span data-stu-id="afbff-105">Creates a new <see cref="T:System.Activities.Presentation.Services.ModelService" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateItem">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="afbff-106">Tworzy <see cref="T:System.Activities.Presentation.Model.ModelItem" /> dla danego typu.</span><span class="sxs-lookup"><span data-stu-id="afbff-106">Creates a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> for a given type.</span></span> <span data-ttu-id="afbff-107">Ta metoda jest wywoływana <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> po użytkownik chce, aby utworzyć nowy element.</span><span class="sxs-lookup"><span data-stu-id="afbff-107">This method is called by <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> when the user wants to create a new item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateItem (item As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : obj -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.CreateItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="afbff-108">Element do klonowania i zastępowania.</span><span class="sxs-lookup"><span data-stu-id="afbff-108">The item to clone and wrap.</span></span></param>
        <summary><span data-ttu-id="afbff-109">Pobiera istniejącego wystąpienia i tworzy element modelu, który jest klonem głębokiego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="afbff-109">Takes an existing instance and creates a model item that is a deep clone of the instance.</span></span></summary>
        <returns><span data-ttu-id="afbff-110">Nowo utworzony <see cref="T:System.Activities.Presentation.Model.ModelItem" /> oznacza to Sklonowanie istniejącego elementu.</span><span class="sxs-lookup"><span data-stu-id="afbff-110">The newly created <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is a clone of the existing item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (Type itemType, System.Activities.Presentation.Model.CreateOptions options, params object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateItem(class System.Type itemType, valuetype System.Activities.Presentation.Model.CreateOptions options, object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateItem (itemType As Type, options As CreateOptions, ParamArray arguments As Object()) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateItem(Type ^ itemType, System::Activities::Presentation::Model::CreateOptions options, ... cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : Type * System.Activities.Presentation.Model.CreateOptions * obj[] -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.CreateItem (itemType, options, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
        <Parameter Name="options" Type="System.Activities.Presentation.Model.CreateOptions" />
        <Parameter Name="arguments" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="afbff-111">Typ elementu do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="afbff-111">The type of item to create.</span></span></param>
        <param name="options"><span data-ttu-id="afbff-112">Opcje tworzenia.</span><span class="sxs-lookup"><span data-stu-id="afbff-112">Creation options.</span></span> <span data-ttu-id="afbff-113">Można określić, czy chcesz zainicjować wartości domyślne dla elementu.</span><span class="sxs-lookup"><span data-stu-id="afbff-113">You can specify whether you would like to initialize default values for an item.</span></span></param>
        <param name="arguments"><span data-ttu-id="afbff-114">Tablica argumentów do konstruktora elementu.</span><span class="sxs-lookup"><span data-stu-id="afbff-114">An array of arguments to the constructor of the item.</span></span></param>
        <summary><span data-ttu-id="afbff-115">Tworzy <see cref="T:System.Activities.Presentation.Model.ModelItem" /> dla danego typu.</span><span class="sxs-lookup"><span data-stu-id="afbff-115">Creates a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> for a given type.</span></span> <span data-ttu-id="afbff-116">Ta metoda jest wywoływana <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> po użytkownik chce, aby utworzyć nowy element.</span><span class="sxs-lookup"><span data-stu-id="afbff-116">This method is called by <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> when the user wants to create a new item.</span></span></summary>
        <returns><span data-ttu-id="afbff-117">Nowo utworzony <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="afbff-117">The newly created <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStaticMemberItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem (Type type, string memberName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem(class System.Type type, string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateStaticMemberItem(Type ^ type, System::String ^ memberName);" />
      <MemberSignature Language="F#" Value="abstract member CreateStaticMemberItem : Type * string -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.CreateStaticMemberItem (type, memberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="afbff-118">Typ, który zawiera statyczny element członkowski, do którego nastąpiło odwołanie.</span><span class="sxs-lookup"><span data-stu-id="afbff-118">The type that contains the static member being referenced.</span></span></param>
        <param name="memberName"><span data-ttu-id="afbff-119">Nazwa członka statycznego, do którego nastąpiło odwołanie.</span><span class="sxs-lookup"><span data-stu-id="afbff-119">The name of the static member being referenced.</span></span></param>
        <summary><span data-ttu-id="afbff-120">Tworzy nowy element modelu, który reprezentuje wartość członka statycznego danej klasy.</span><span class="sxs-lookup"><span data-stu-id="afbff-120">Creates a new model item that represents the value of a static member of the given class.</span></span></summary>
        <returns><span data-ttu-id="afbff-121">Zwraca <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="afbff-121">Returns <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbff-122">Na przykład można dodać odwołania do `Brushes.Red` modelu, należy wywołać tej metody za pomocą `typeof(Brushes)` i ciąg "Red" jako parametry.</span><span class="sxs-lookup"><span data-stu-id="afbff-122">For example, to add a reference to `Brushes.Red` to the model, call this method with `typeof(Brushes)` and the string "Red" as the parameters.</span></span> <span data-ttu-id="afbff-123">To spowoduje zserializowana XAML jako `{x:Static Brushes.Red}`.</span><span class="sxs-lookup"><span data-stu-id="afbff-123">This will be serialized into XAML as `{x:Static Brushes.Red}`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="afbff-124">Punkt początkowy z którego będą wyglądać znajduje pasujące elementy modelu, biorąc pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="afbff-124">Finds matching model items given a starting point from which to look.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbff-125">Wszystkie przeszukiwania są cykliczne.</span><span class="sxs-lookup"><span data-stu-id="afbff-125">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Find (System.Activities.Presentation.Model.ModelItem startingItem, Predicate&lt;Type&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Find(class System.Activities.Presentation.Model.ModelItem startingItem, class System.Predicate`1&lt;class System.Type&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Find (startingItem As ModelItem, match As Predicate(Of Type)) As IEnumerable(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Find(System::Activities::Presentation::Model::ModelItem ^ startingItem, Predicate&lt;Type ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.Activities.Presentation.Model.ModelItem * Predicate&lt;Type&gt; -&gt; seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="modelService.Find (startingItem, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="match" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="startingItem"><span data-ttu-id="afbff-126"><see cref="T:System.Activities.Presentation.Model.ModelItem" /> z którego ma zostać rozpoczęte wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="afbff-126">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> from which to start the search.</span></span> <span data-ttu-id="afbff-127">Elementy powyżej tego elementu zostanie zignorowany.</span><span class="sxs-lookup"><span data-stu-id="afbff-127">Items above this item will be ignored.</span></span> <span data-ttu-id="afbff-128">Ten element i elementy poniżej w hierarchii, zostaną uwzględnione w wyszukiwaniu.</span><span class="sxs-lookup"><span data-stu-id="afbff-128">This item, and any item below it in the hierarchy, will be included in the search.</span></span> <span data-ttu-id="afbff-129">Jeśli ta wartość jest <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> zamian jest używana.</span><span class="sxs-lookup"><span data-stu-id="afbff-129">If this value is <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> is used instead.</span></span></param>
        <param name="match"><span data-ttu-id="afbff-130">Predykat, który umożliwia bardziej złożonych dopasowanie typu ma być używany.</span><span class="sxs-lookup"><span data-stu-id="afbff-130">A predicate that allows more complex type matching to be used.</span></span> <span data-ttu-id="afbff-131">Ta metoda powoduje wyliczenie wszystkich elementów w zakresie danej spełniające predykat.</span><span class="sxs-lookup"><span data-stu-id="afbff-131">This method will enumerate all items within the given parent scope that match the predicate.</span></span></param>
        <summary><span data-ttu-id="afbff-132">Punkt początkowy z którego będą wyglądać znajduje pasujące elementy modelu, biorąc pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="afbff-132">Finds matching model items given a starting point from which to look.</span></span></summary>
        <returns><span data-ttu-id="afbff-133"><see cref="T:System.Collections.Generic.IEnumerable`1" /> Zawierający wszystkie elementy modelu, które pasujących do zapytania.</span><span class="sxs-lookup"><span data-stu-id="afbff-133">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains all model items that match the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbff-134">Wszystkie przeszukiwania są cykliczne.</span><span class="sxs-lookup"><span data-stu-id="afbff-134">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="afbff-135"><paramref name="match" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="afbff-135"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Find (System.Activities.Presentation.Model.ModelItem startingItem, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Find(class System.Activities.Presentation.Model.ModelItem startingItem, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Find(System::Activities::Presentation::Model::ModelItem ^ startingItem, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.Activities.Presentation.Model.ModelItem * Type -&gt; seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="modelService.Find (startingItem, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="startingItem"><span data-ttu-id="afbff-136"><see cref="T:System.Activities.Presentation.Model.ModelItem" /> z którego ma zostać rozpoczęte wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="afbff-136">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> from which to start the search.</span></span> <span data-ttu-id="afbff-137">Elementy powyżej tego elementu zostanie zignorowany.</span><span class="sxs-lookup"><span data-stu-id="afbff-137">Items above this item will be ignored.</span></span> <span data-ttu-id="afbff-138">Ten element i elementy poniżej w hierarchii, zostaną uwzględnione w wyszukiwaniu.</span><span class="sxs-lookup"><span data-stu-id="afbff-138">This item, and any item below it in the hierarchy, will be included in the search.</span></span> <span data-ttu-id="afbff-139">Jeśli ta wartość jest <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> zamian jest używana.</span><span class="sxs-lookup"><span data-stu-id="afbff-139">If this value is <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> is used instead.</span></span></param>
        <param name="type"><span data-ttu-id="afbff-140"><see cref="T:System.Type" /> Obiektu do znalezienia.</span><span class="sxs-lookup"><span data-stu-id="afbff-140">The <see cref="T:System.Type" /> of the object to find.</span></span> <span data-ttu-id="afbff-141">Ta metoda powoduje wyliczenie wszystkich elementów w zakresie danej żądanego typu.</span><span class="sxs-lookup"><span data-stu-id="afbff-141">This method will enumerate all items within the given parent scope that are of the requested type.</span></span></param>
        <summary><span data-ttu-id="afbff-142">Punkt początkowy z którego będą wyglądać znajduje pasujące elementy modelu, biorąc pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="afbff-142">Finds matching model items given a starting point from which to look.</span></span></summary>
        <returns><span data-ttu-id="afbff-143"><see cref="T:System.Collections.Generic.IEnumerable`1" /> Zawierający wszystkie elementy modelu, które pasujących do zapytania.</span><span class="sxs-lookup"><span data-stu-id="afbff-143">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains all model items that match the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbff-144">Wszystkie przeszukiwania są cykliczne.</span><span class="sxs-lookup"><span data-stu-id="afbff-144">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="afbff-145"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="afbff-145"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromName">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="afbff-146">Lokalizuje <see cref="T:System.Activities.Presentation.Model.ModelItem" /> w danym zakresie o podanej nazwie.</span><span class="sxs-lookup"><span data-stu-id="afbff-146">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbff-147">Zwraca `null` Jeśli nie można odnaleźć elementu modelu.</span><span class="sxs-lookup"><span data-stu-id="afbff-147">Returns `null` if the model item could not be located.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromName (scope As ModelItem, name As String) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Presentation::Model::ModelItem ^ FromName(System::Activities::Presentation::Model::ModelItem ^ scope, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.FromName : System.Activities.Presentation.Model.ModelItem * string -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.FromName (scope, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="afbff-148">Opcjonalne zakres zapewnienie.</span><span class="sxs-lookup"><span data-stu-id="afbff-148">An optional scope to provide.</span></span> <span data-ttu-id="afbff-149">Jeśli zakres nie zostanie podany, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> będzie służyć jako zakres.</span><span class="sxs-lookup"><span data-stu-id="afbff-149">If the scope is not provided, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> will be used as a scope.</span></span> <span data-ttu-id="afbff-150">Jeśli zakres jest podany, najbliższej <see cref="T:System.Windows.Markup.INameScope" /> w hierarchii, będzie używana do lokalizowania elementu.</span><span class="sxs-lookup"><span data-stu-id="afbff-150">If the scope is provided, the nearest <see cref="T:System.Windows.Markup.INameScope" /> in the hierarchy will be used to locate the item.</span></span></param>
        <param name="name"><span data-ttu-id="afbff-151">Nazwa do zlokalizowania.</span><span class="sxs-lookup"><span data-stu-id="afbff-151">The name to locate.</span></span></param>
        <summary><span data-ttu-id="afbff-152">Lokalizuje <see cref="T:System.Activities.Presentation.Model.ModelItem" /> w danym zakresie o podanej nazwie.</span><span class="sxs-lookup"><span data-stu-id="afbff-152">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span></span></summary>
        <returns><span data-ttu-id="afbff-153">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> którego nazwa odpowiada <paramref name="name" />, lub <see langword="null" /> Jeżeli nie znaleziono dopasowania.</span><span class="sxs-lookup"><span data-stu-id="afbff-153">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> whose name matches <paramref name="name" />, or <see langword="null" /> if no match was found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="afbff-154"><paramref name="name" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="afbff-154"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name, StringComparison comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name, valuetype System.StringComparison comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FromName (scope As ModelItem, name As String, comparison As StringComparison) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ FromName(System::Activities::Presentation::Model::ModelItem ^ scope, System::String ^ name, StringComparison comparison);" />
      <MemberSignature Language="F#" Value="abstract member FromName : System.Activities.Presentation.Model.ModelItem * string * StringComparison -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.FromName (scope, name, comparison)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="comparison" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="afbff-155">Opcjonalne zakres zapewnienie.</span><span class="sxs-lookup"><span data-stu-id="afbff-155">An optional scope to provide.</span></span> <span data-ttu-id="afbff-156">Jeśli zakres nie zostanie podany, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> będzie służyć jako zakres.</span><span class="sxs-lookup"><span data-stu-id="afbff-156">If the scope is not provided, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> will be used as a scope.</span></span> <span data-ttu-id="afbff-157">Jeśli zakres jest podany, najbliższej <see cref="T:System.Windows.Markup.INameScope" /> w hierarchii, będzie używana do lokalizowania elementu.</span><span class="sxs-lookup"><span data-stu-id="afbff-157">If the scope is provided, the nearest <see cref="T:System.Windows.Markup.INameScope" /> in the hierarchy will be used to locate the item.</span></span></param>
        <param name="name"><span data-ttu-id="afbff-158">Nazwa do zlokalizowania.</span><span class="sxs-lookup"><span data-stu-id="afbff-158">The name to locate.</span></span></param>
        <param name="comparison"><span data-ttu-id="afbff-159">Określa, jak powinny być porównywane nazwę.</span><span class="sxs-lookup"><span data-stu-id="afbff-159">Determines how the name should be compared.</span></span> <span data-ttu-id="afbff-160">Wartość domyślna to, aby porównać numer.</span><span class="sxs-lookup"><span data-stu-id="afbff-160">The default is to compare against ordinal.</span></span></param>
        <summary><span data-ttu-id="afbff-161">Lokalizuje <see cref="T:System.Activities.Presentation.Model.ModelItem" /> w danym zakresie o podanej nazwie.</span><span class="sxs-lookup"><span data-stu-id="afbff-161">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span></span></summary>
        <returns><span data-ttu-id="afbff-162">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> którego nazwa odpowiada <paramref name="name" />, lub <see langword="null" /> Jeżeli nie znaleziono dopasowania.</span><span class="sxs-lookup"><span data-stu-id="afbff-162">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> whose name matches <paramref name="name" />, or <see langword="null" /> if no match was found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="afbff-163"><paramref name="name" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="afbff-163"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ModelChanged">
      <MemberSignature Language="C#" Value="public abstract event EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; ModelChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.Services.ModelChangedEventArgs&gt; ModelChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Services.ModelService.ModelChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ModelChanged As EventHandler(Of ModelChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event EventHandler&lt;System::Activities::Presentation::Services::ModelChangedEventArgs ^&gt; ^ ModelChanged;" />
      <MemberSignature Language="F#" Value="member this.ModelChanged : EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; " Usage="member this.ModelChanged : System.EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="afbff-164">To zdarzenie jest wywoływane, gdy coś w modelu została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="afbff-164">This event is raised when something in the model has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbff-165">Argumenty zdarzeń w zdarzeniu można znaleźć, co zmieniło się.</span><span class="sxs-lookup"><span data-stu-id="afbff-165">The event arguments in the event can be used to find what has changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Services.ModelService.Root" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Root As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Root { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Services.ModelService.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="afbff-166">Katalog główny hierarchii obiektów.</span><span class="sxs-lookup"><span data-stu-id="afbff-166">The root of the object hierarchy.</span></span></summary>
        <value><span data-ttu-id="afbff-167">Katalog główny hierarchii modelu jako <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="afbff-167">The root of the model hierarchy as a <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbff-168">Dla sklepów liniowego katalog główny jest pierwszy obiekt w magazynie.</span><span class="sxs-lookup"><span data-stu-id="afbff-168">For linear stores, the root is the first object in the store.</span></span> <span data-ttu-id="afbff-169">Dla magazynów, które reprezentują drzewa obiektów spowoduje to zwrócenie najwyższego poziomu węzła drzewa.</span><span class="sxs-lookup"><span data-stu-id="afbff-169">For stores that represent a tree of objects, this returns the topmost node of the tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>