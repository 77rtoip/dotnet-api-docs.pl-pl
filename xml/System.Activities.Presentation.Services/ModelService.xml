<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ModelService.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac503ab8a7343d58fd156490ca4d5d2269a0530ffd4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03ab8a7343d58fd156490ca4d5d2269a0530ffd4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Activities.Presentation.Services.ModelService">
          <source>This class is the main entry point that the designer uses to interact with the model.</source>
          <target state="translated">Ta klasa jest główny punkt wejścia używaną do interakcji z modelem projektanta.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Presentation.Services.ModelService">
          <source>The service has a split between public and protected methods that you must implement when you create a derived class.</source>
          <target state="translated">Usługa ma podziału między publiczne i chronione metody, które należy zaimplementować podczas tworzenia klasy pochodnej.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Presentation.Services.ModelService">
          <source>The public methods are callable by anyone.</source>
          <target state="translated">Metody publiczne są można wywołać dla wszystkich użytkowników.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Presentation.Services.ModelService">
          <source>The protected methods are invoked by the model.</source>
          <target state="translated">Metody chronione są wywoływane przez model.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.#ctor">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Services.ModelService" /&gt;</ph>.</source>
          <target state="translated">Tworzy nowy <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Services.ModelService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Activities.Presentation.Services.ModelService">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> for a given type.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> dla danego typu.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Activities.Presentation.Services.ModelService">
          <source>This method is called by <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelFactory" /&gt;</ph> when the user wants to create a new item.</source>
          <target state="translated">Ta metoda jest wywoływana przez <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelFactory" /&gt;</ph> gdy użytkownik chce utworzyć nowy element.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)">
          <source>The item to clone and wrap.</source>
          <target state="translated">Element klonowania i zawijany.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)">
          <source>Takes an existing instance and creates a model item that is a deep clone of the instance.</source>
          <target state="translated">Pobiera istniejącego wystąpienia i tworzy element modelu, który jest głębokie klon wystąpienia.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)">
          <source>Returns a newly created <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> that is a clone of the existing item.</source>
          <target state="translated">Zwraca nowo utworzony <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> czyli Sklonowanie istniejącego elementu.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])">
          <source>The type of item to create.</source>
          <target state="translated">Typ elementu do utworzenia.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])">
          <source>Creation options.</source>
          <target state="translated">Opcje tworzenia.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])">
          <source>You can specify whether you would like to initialize default values for an item.</source>
          <target state="translated">Można określić, czy chcesz zainicjować wartości domyślne dla elementu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])">
          <source>An array of arguments to the constructor of the item.</source>
          <target state="translated">Tablica argumentów konstruktora elementu.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> for a given type.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> dla danego typu.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])">
          <source>This method is called by <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelFactory" /&gt;</ph> when the user wants to create a new item.</source>
          <target state="translated">Ta metoda jest wywoływana przez <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelFactory" /&gt;</ph> gdy użytkownik chce utworzyć nowy element.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])">
          <source>Returns the newly created <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph>.</source>
          <target state="translated">Zwraca nowo utworzony <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)">
          <source>The type that contains the static member being referenced.</source>
          <target state="translated">Typ, który zawiera statyczny element członkowski, którego dotyczy odwołanie.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)">
          <source>The name of the static member being referenced.</source>
          <target state="translated">Nazwa statyczny element członkowski, którego dotyczy odwołanie.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)">
          <source>Creates a new model item that represents the value of a static member of the given class.</source>
          <target state="translated">Tworzy nowy element modelu, który reprezentuje wartość statyczny element członkowski z danej klasy.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph>.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)">
          <source>For example, to add a reference to <ph id="ph1">`Brushes.Red`</ph> to the model, call this method with <ph id="ph2">`typeof(Brushes)`</ph> and the string "Red" as the parameters.</source>
          <target state="translated">Na przykład można dodać odwołania do <ph id="ph1">`Brushes.Red`</ph> do modelu, wywołania tej metody za pomocą <ph id="ph2">`typeof(Brushes)`</ph> i ciągu "Red" jako parametry.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)">
          <source>This will be serialized into XAML as <ph id="ph1">`{x:Static Brushes.Red}`</ph>.</source>
          <target state="translated">To spowoduje zserializowana XAML jako <ph id="ph1">`{x:Static Brushes.Red}`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.Activities.Presentation.Services.ModelService">
          <source>Finds matching model items given a starting point from which to look.</source>
          <target state="translated">Znajduje pasujące elementy modelu podany punkt wyjścia z do wyszukania.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Presentation.Services.ModelService">
          <source>All walks are recursive.</source>
          <target state="translated">Wszystkie przeszukiwań są cyklicznego.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> from which to start the search.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> z której ma się rozpocząć wyszukiwanie.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})">
          <source>Items above this item will be ignored.</source>
          <target state="translated">Elementy powyżej tego elementu zostanie zignorowany.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})">
          <source>This item, and any item below it in the hierarchy, will be included in the search.</source>
          <target state="translated">Ten element i elementy poniżej w hierarchii, będą uwzględniane podczas wyszukiwania.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})">
          <source>If this value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Activities.Presentation.Services.ModelService.Root" /&gt;</ph> is used instead.</source>
          <target state="translated">Jeśli ta wartość jest <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Activities.Presentation.Services.ModelService.Root" /&gt;</ph> zamiast niego jest używana.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})">
          <source>A predicate that allows more complex type matching to be used.</source>
          <target state="translated">Predykat umożliwia bardziej złożonej typu pasujących do użycia.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})">
          <source>This method will enumerate all items within the given parent scope that match the predicate.</source>
          <target state="translated">Ta metoda powoduje wyliczenie wszystkich elementów w zakresie danego nadrzędnego, które odpowiadają predykatu.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})">
          <source>Finds matching model items given a starting point from which to look.</source>
          <target state="translated">Znajduje pasujące elementy modelu podany punkt wyjścia z do wyszukania.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that contains all model items that match the query.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> zawiera wszystkie elementy modelu zgodne zapytania.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})">
          <source>All walks are recursive.</source>
          <target state="translated">Wszystkie przeszukiwań są cyklicznego.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> from which to start the search.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> z której ma się rozpocząć wyszukiwanie.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)">
          <source>Items above this item will be ignored.</source>
          <target state="translated">Elementy powyżej tego elementu zostanie zignorowany.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)">
          <source>This item, and any item below it in the hierarchy, will be included in the search.</source>
          <target state="translated">Ten element i elementy poniżej w hierarchii, będą uwzględniane podczas wyszukiwania.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)">
          <source>If this value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Activities.Presentation.Services.ModelService.Root" /&gt;</ph> is used instead.</source>
          <target state="translated">Jeśli ta wartość jest <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Activities.Presentation.Services.ModelService.Root" /&gt;</ph> zamiast niego jest używana.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object to find.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Obiektu można znaleźć.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)">
          <source>This method will enumerate all items within the given parent scope that are of the requested type.</source>
          <target state="translated">Ta metoda powoduje wyliczenie wszystkich elementów należących do zakresu nadrzędnego danego żądanego typu.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)">
          <source>Finds matching model items given a starting point from which to look.</source>
          <target state="translated">Znajduje pasujące elementy modelu podany punkt wyjścia z do wyszukania.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that contains all model items that match the query.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> zawiera wszystkie elementy modelu zgodne zapytania.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)">
          <source>All walks are recursive.</source>
          <target state="translated">Wszystkie przeszukiwań są cyklicznego.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Activities.Presentation.Services.ModelService">
          <source>Locates the <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> in the given scope with the given name.</source>
          <target state="translated">Lokalizuje <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> w danym zakresie o podanej nazwie.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Presentation.Services.ModelService">
          <source>Returns <ph id="ph1">`null`</ph> if the model item could not be located.</source>
          <target state="translated">Zwraca <ph id="ph1">`null`</ph> Jeśli nie można odnaleźć elementu modelu.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)">
          <source>An optional scope to provide.</source>
          <target state="translated">Opcjonalne zakres zapewnienie.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)">
          <source>If the scope is not provided, <ph id="ph1">&lt;see cref="P:System.Activities.Presentation.Services.ModelService.Root" /&gt;</ph> will be used as a scope.</source>
          <target state="translated">Jeśli zakres nie zostanie podany, <ph id="ph1">&lt;see cref="P:System.Activities.Presentation.Services.ModelService.Root" /&gt;</ph> będzie używana jako zakres.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)">
          <source>If the scope is provided, the nearest <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> in the hierarchy will be used to locate the item.</source>
          <target state="translated">W przypadku zakresu najbliższej <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> w hierarchii, będzie używana do lokalizowania elementu.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)">
          <source>The name to locate.</source>
          <target state="translated">Nazwa do zlokalizowania.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)">
          <source>Locates the <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> in the given scope with the given name.</source>
          <target state="translated">Lokalizuje <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> w danym zakresie o podanej nazwie.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> whose name matches <ph id="ph2">&lt;paramref name="name" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if no match was found.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> którego nazwa odpowiada <ph id="ph2">&lt;paramref name="name" /&gt;</ph>, lub <ph id="ph3">&lt;see langword="null" /&gt;</ph> Jeżeli nie znaleziono dopasowania.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)">
          <source>An optional scope to provide.</source>
          <target state="translated">Opcjonalne zakres zapewnienie.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)">
          <source>If the scope is not provided, <ph id="ph1">&lt;see cref="P:System.Activities.Presentation.Services.ModelService.Root" /&gt;</ph> will be used as a scope.</source>
          <target state="translated">Jeśli zakres nie zostanie podany, <ph id="ph1">&lt;see cref="P:System.Activities.Presentation.Services.ModelService.Root" /&gt;</ph> będzie używana jako zakres.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)">
          <source>If the scope is provided, the nearest <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> in the hierarchy will be used to locate the item.</source>
          <target state="translated">W przypadku zakresu najbliższej <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> w hierarchii, będzie używana do lokalizowania elementu.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)">
          <source>The name to locate.</source>
          <target state="translated">Nazwa do zlokalizowania.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)">
          <source>Determines how the name should be compared.</source>
          <target state="translated">Określa, jak nazwa powinna być porównywana.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)">
          <source>The default is to compare against ordinal.</source>
          <target state="translated">Wartość domyślna to aby porównać numer.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)">
          <source>Locates the <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> in the given scope with the given name.</source>
          <target state="translated">Lokalizuje <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> w danym zakresie o podanej nazwie.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> whose name matches <ph id="ph2">&lt;paramref name="name" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if no match was found.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph> którego nazwa odpowiada <ph id="ph2">&lt;paramref name="name" /&gt;</ph>, lub <ph id="ph3">&lt;see langword="null" /&gt;</ph> Jeżeli nie znaleziono dopasowania.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="E:System.Activities.Presentation.Services.ModelService.ModelChanged">
          <source>This event is raised when something in the model has changed.</source>
          <target state="translated">To zdarzenie jest wywoływane, gdy coś w modelu została zmieniona.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Activities.Presentation.Services.ModelService.ModelChanged">
          <source>The event arguments in the event can be used to find what has changed.</source>
          <target state="translated">Argumenty zdarzeń można znaleźć, co się zmieniło.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Activities.Presentation.Services.ModelService.Root">
          <source>The root of the object hierarchy.</source>
          <target state="translated">Element główny hierarchii obiektów.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Presentation.Services.ModelService.Root">
          <source>Returns the root of the model hierarchy as a <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph>.</source>
          <target state="translated">Zwraca pierwiastek hierarchii jako <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.Model.ModelItem" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Presentation.Services.ModelService.Root">
          <source>For linear stores, the root is the first object in the store.</source>
          <target state="translated">Dla magazynów liniowej główny jest pierwszy obiekt w magazynie.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Presentation.Services.ModelService.Root">
          <source>For stores that represent a tree of objects, this returns the topmost node of the tree.</source>
          <target state="translated">Dla magazynów, które reprezentują drzewa obiektów to zwraca znajdujące się najwyżej węzła drzewa.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>