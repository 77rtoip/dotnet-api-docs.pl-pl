<Type Name="Group" FullName="System.Text.RegularExpressions.Group">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3520f4aa92a2c3ef4c0c1c550a3b37b67433801c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69145003" /></Metadata><TypeSignature Language="C#" Value="public class Group : System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Group extends System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Group" />
  <TypeSignature Language="VB.NET" Value="Public Class Group&#xA;Inherits Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Group : System::Text::RegularExpressions::Capture" />
  <TypeSignature Language="F#" Value="type Group = class&#xA;    inherit Capture" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Capture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Przedstawia wyniki z pojedynczej grupy przechwytywania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupa przechwytywania może przechwycić zero, jeden lub więcej ciągów w jednym dopasowaniu ze względu na Kwantyfikatory. (Aby uzyskać więcej informacji, [](~/docs/standard/base-types/quantifiers-in-regular-expressions.md)zobacz Kwantyfikatory). Wszystkie podciągi dopasowane przez pojedynczą grupę przechwytywania są dostępne <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> we właściwości. Informacje na temat ostatniego przechwyconego podciągu można uzyskać bezpośrednio `Value` z `Index` właściwości i. (Oznacza to, <xref:System.Text.RegularExpressions.Group> że wystąpienie jest równoważne ostatnim elementowi kolekcji zwróconej <xref:System.Text.RegularExpressions.Group.Captures%2A> przez właściwość, co odzwierciedla ostatni przechwycenie wykonane przez grupę przechwytywania).  
  
 Przykład ułatwia wyjaśnienie tej relacji między <xref:System.Text.RegularExpressions.Group> obiektem <xref:System.Text.RegularExpressions.CaptureCollection?displayProperty=nameWithType> a <xref:System.Text.RegularExpressions.Group.Captures%2A> , który jest zwracany przez właściwość. Wzorzec `(\b(\w+?)[,:;]?\s?)+[?.!]` wyrażenia regularnego jest zgodny z całymi zdaniami. Wyrażenie regularne jest zdefiniowane, jak pokazano w poniższej tabeli.  
  
|Wzorzec|Opis|  
|-------------|-----------------|  
|`\b`|Rozpoczyna dopasowanie na granicy wyrazu.|  
|`(\w+?)`|Dopasowuje co najmniej jeden znak słowa, ale jak najmniejsza liczba znaków. Jest to druga (wewnętrzna) grupa przechwytywania. (Pierwsza grupa przechwytywania zawiera `\b` element Language).|  
|`[,:;]?`|Dopasowanie do zera lub jednego wystąpienia przecinka, dwukropka lub średnika.|  
|`\s?`|Dopasowanie do zera lub jednego wystąpienia znaku odstępu.|  
|`(\b(\w+?)[,:;]?\s?)+`|Dopasowuje wzorzec składający się z granicy słowa, jednego lub więcej znaków wyrazu, symbolu interpunkcji i znaku odstępu jeden lub więcej razy. Jest to pierwsza grupa przechwytywania.|  
|`[?.!]`|Dopasowuje dowolne wystąpienie kropki, znaku zapytania lub wykrzyknika.|  
  
 W tym wzorcu wyrażenia regularnego wzorzec `(\w+?)` jest przeznaczony do dopasowywania wielu wyrazów w zdaniu. Jednak wartość <xref:System.Text.RegularExpressions.Group> obiektu reprezentuje tylko ostatnie dopasowanie, które `(\w+?)` przechwytuje, natomiast <xref:System.Text.RegularExpressions.Group.Captures%2A> Właściwość zwraca element <xref:System.Text.RegularExpressions.CaptureCollection> reprezentujący cały przechwycony tekst. W miarę wyświetlania danych wyjściowych <xref:System.Text.RegularExpressions.CaptureCollection> dla drugiej grupy przechwytywania znajdują się cztery obiekty. Ostatni z nich odpowiada <xref:System.Text.RegularExpressions.Group> obiektowi.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/cs/groupandcaptures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/vb/groupandcaptures1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Captures">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.CaptureCollection Captures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.CaptureCollection Captures" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Captures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captures As CaptureCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::CaptureCollection ^ Captures { System::Text::RegularExpressions::CaptureCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captures : System.Text.RegularExpressions.CaptureCollection" Usage="System.Text.RegularExpressions.Group.Captures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.CaptureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich przechwyconych dopasowanych przez grupę przechwytywania, w kolejności od najniższego skrajnego lewej (lub pierwszej kolejności z prawej strony, jeśli wyrażenie regularne jest modyfikowane przy <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> użyciu opcji). Kolekcja może zawierać zero lub więcej elementów.</summary>
        <value>Kolekcja podciągów dopasowanych przez grupę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli kwantyfikator nie zostanie zastosowany do grupy przechwytywania, Kolekcja zwracana przez <xref:System.Text.RegularExpressions.Group.Captures%2A> Właściwość zawiera pojedynczy <xref:System.Text.RegularExpressions.Capture> obiekt, który zawiera informacje na temat tego <xref:System.Text.RegularExpressions.Group> samego podciągu co obiekt. Jest to zilustrowane w poniższym przykładzie. Definiuje wyrażenie `\b(\w+)\b`regularne, które wyodrębnia pojedynczy wyraz z zdania. Obiekt przechwytuje słowo "This", a pojedynczy obiekt <xref:System.Text.RegularExpressions.CaptureCollection> w programie zawiera informacje na temat tego samego przechwycenia. <xref:System.Text.RegularExpressions.Group>  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures1.vb#1)]  
  
 Rzeczywiste narzędzie <xref:System.Text.RegularExpressions.Group.Captures%2A> właściwości występuje, gdy kwantyfikator jest stosowany do grupy przechwytywania, dzięki czemu grupa przechwytuje wiele podciągów w pojedynczym wyrażeniu regularnym. W takim przypadku <xref:System.Text.RegularExpressions.Group> obiekt zawiera informacje na temat ostatniego przechwyconego podciągu, <xref:System.Text.RegularExpressions.Group.Captures%2A> podczas gdy właściwość zawiera informacje o wszystkich podciągach przechwytywanych przez grupę. W poniższym przykładzie wyrażenie `\b(\w+\s*)+\.` regularne pasuje do całego zdania kończącego się kropką. Grupa `(\w+\s*)+` przechwytuje poszczególne wyrazy w kolekcji. <xref:System.Text.RegularExpressions.Group> Ponieważ kolekcja zawiera informacje dotyczące ostatniego przechwyconego podciągu, przechwytuje ostatniego wyrazu w zdaniu "zdanie". Jednak każdy wyraz przechwytywany przez grupę jest dostępny w kolekcji zwróconej przez <xref:System.Text.RegularExpressions.Group.Captures%2A> właściwość.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures2.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0fc18634-f590-4062-8d5c-f0b71abe405b">Konstrukty grupujące</related>
        <related type="Article" href="https://msdn.microsoft.com/library/36b81212-6511-49ed-a8f1-ff080415312f">Kwantyfikatory</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Text.RegularExpressions.Group.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca nazwę grupy przechwytywania reprezentowanej przez bieżące wystąpienie.</summary>
        <value>Nazwa grupy przechwytywania reprezentowanej przez bieżące wystąpienie.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="public bool Success { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Success" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Success" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Success As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Success { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Success : bool" Usage="System.Text.RegularExpressions.Group.Success" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dopasowanie zakończyło się pomyślnie.</summary>
        <value><see langword="true" />Jeśli dopasowanie zakończyło się pomyślnie; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość `Success` ma wartość true, jeśli w tej grupie przechwycono co najmniej jeden podciąg. Jest odpowiednikiem wyrażenia logicznego (Group. reprzechwytywania. Count > 0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Group Synchronized (System.Text.RegularExpressions.Group inner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Group Synchronized(class System.Text.RegularExpressions.Group inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (inner As Group) As Group" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Group ^ Synchronized(System::Text::RegularExpressions::Group ^ inner);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Text.RegularExpressions.Group -&gt; System.Text.RegularExpressions.Group" Usage="System.Text.RegularExpressions.Group.Synchronized inner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Group" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="inner">Obiekt wejściowy <see cref="T:System.Text.RegularExpressions.Group" /> .</param>
        <summary><see langword="Group" /> Zwraca obiekt równoważny dostarczonemu z nim, który jest bezpieczny do współdzielenia między wiele wątków.</summary>
        <returns>Obiekt wyrażenia <see langword="Group" /> regularnego.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="inner" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
