<Type Name="Group" FullName="System.Text.RegularExpressions.Group">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d20cf1f95643ad86282bc01bfd718f38a4c187a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37754988" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Group : System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Group extends System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Group" />
  <TypeSignature Language="VB.NET" Value="Public Class Group&#xA;Inherits Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Group : System::Text::RegularExpressions::Capture" />
  <TypeSignature Language="F#" Value="type Group = class&#xA;    inherit Capture" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Capture</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje wyniki z pojedynczą grupę przechwytywania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupa przechwytywania można przechwycić zero, jeden lub więcej ciągów w pojedyncze dopasowanie, ponieważ Kwantyfikatory. (Aby uzyskać więcej informacji, zobacz [Kwantyfikatory](~/docs/standard/base-types/quantifiers-in-regular-expressions.md).) Wszystkie podciągi, które są dopasowane przez pojedynczą grupę przechwytywania są dostępne z <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> właściwości. Informacje o ostatni podciąg przechwycony są dostępne bezpośrednio z `Value` i `Index` właściwości. (To, <xref:System.Text.RegularExpressions.Group> wystąpienie jest równoważne z ostatniego elementu w kolekcji zwróconej przez <xref:System.Text.RegularExpressions.Group.Captures%2A> właściwość, która odzwierciedla ostatniego przechwytywania przez grupę przechwytywania.)  
  
 Przykład pomaga wyjaśnienie tę relację między <xref:System.Text.RegularExpressions.Group> obiektu i <xref:System.Text.RegularExpressions.CaptureCollection?displayProperty=nameWithType> zwracanym przez <xref:System.Text.RegularExpressions.Group.Captures%2A> właściwości. Definicję wzorca wyrażenia regularnego `(\b(\w+?)[,:;]?\s?)+[?.!]` dopasowuje cały zdań. Wyrażenie regularne jest zdefiniowane, jak pokazano w poniższej tabeli.  
  
|Wzorzec|Opis|  
|-------------|-----------------|  
|`\b`|Rozpoczyna dopasowanie na granicy wyrazu.|  
|`(\w+?)`|Dopasowuje co najmniej jeden znak słowa, ale liczbę znaków, jak to możliwe. Jest to druga grupa przechwytywania (wewnętrzny). (Obejmuje pierwszą grupę przechwytywania `\b` element języka.)|  
|`[,:;]?`|Wystąpienie Dopasuj zero lub jeden przecinek, dwukropek lub średnikami.|  
|`\s?`|Wystąpienie Dopasuj zero lub jeden znak odstępu.|  
|`(\b(\w+?)[,:;]?\s?)+`|Dopasowuje wzorzec składający się z granicę wyrazu, co najmniej jeden znak słowa, symbolem interpunkcji i znak odstępu jeden lub więcej razy. Jest to pierwsza grupa przechwytywania.|  
|`[?.!]`|Dopasowuje dowolne wystąpienie, kropki, znaku zapytania lub wykrzyknika.|  
  
 W tym wzorcu wyrażenia regularnego podciąg wzorca `(\w+?)` zaprojektowano w celu dopasowania wielu słów w zdaniu. Jednak wartość <xref:System.Text.RegularExpressions.Group> obiekt reprezentuje tylko pasuje do ostatniej `(\w+?)` przechwytuje, natomiast <xref:System.Text.RegularExpressions.Group.Captures%2A> właściwość zwraca <xref:System.Text.RegularExpressions.CaptureCollection> reprezentujący wszystkie przechwycone tekstu. Dane wyjściowe pokazują, <xref:System.Text.RegularExpressions.CaptureCollection> druga grupa przechwytywania zawiera cztery obiekty. Odpowiada za ostatni <xref:System.Text.RegularExpressions.Group> obiektu.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/cs/groupandcaptures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/vb/groupandcaptures1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Captures">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.CaptureCollection Captures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.CaptureCollection Captures" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Captures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captures As CaptureCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::CaptureCollection ^ Captures { System::Text::RegularExpressions::CaptureCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captures : System.Text.RegularExpressions.CaptureCollection" Usage="System.Text.RegularExpressions.Group.Captures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.CaptureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkie elementy, które są dopasowane przez grupę przechwytywania, w kolejności najbardziej wewnętrzną funkcją skrajnie po lewej stronie — pierwszy (lub najbardziej wewnętrzną funkcją po prawej stronie — pierwszy na zamówienie, jeśli wyrażenie regularne jest modyfikowana za pomocą <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> opcji). Kolekcja może mieć zero lub więcej elementów.</summary>
        <value>Kolekcja podciągów dopasowany przez grupę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie jest stosowany kwantyfikator do przechwytywania konto należy do grupy kolekcji zwróconej przez <xref:System.Text.RegularExpressions.Group.Captures%2A> właściwość zawiera pojedynczy <xref:System.Text.RegularExpressions.Capture> obiektu, który zawiera informacje o tym samym podciąg jako <xref:System.Text.RegularExpressions.Group> obiektu. Jest to zilustrowane w poniższym przykładzie. Definiuje wyrażenie regularne `\b(\w+)\b`, wyodrębnia jeden wyraz w zdaniu. <xref:System.Text.RegularExpressions.Group> Obiektu przechwytuje słowo "This", a pojedynczy obiekt w <xref:System.Text.RegularExpressions.CaptureCollection> zawiera informacje o tej samej przechwytywania.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures1.vb#1)]  
  
 Rzeczywiste użyteczność <xref:System.Text.RegularExpressions.Group.Captures%2A> właściwość występuje, gdy jest stosowany kwantyfikator do grupy przechwytywania, dzięki czemu grupy przechwytuje wiele podciągów w jednym wyrażeniu regularnym. W tym przypadku <xref:System.Text.RegularExpressions.Group> obiekt zawiera informacje o ostatni podciąg przechwycony, natomiast <xref:System.Text.RegularExpressions.Group.Captures%2A> właściwość zawiera informacje o wszystkich podciągi, które są przechwytywane przez grupę. W poniższym przykładzie, wyrażenie regularne `\b(\w+\s*)+\.` dopasowuje cały zdania, która kończy się kropką. Grupa `(\w+\s*)+` przechwytuje poszczególne wyrazy w kolekcji. Ponieważ <xref:System.Text.RegularExpressions.Group> kolekcji zawiera informacje dotyczące tylko ostatni podciąg przechwycony, przechwytuje ostatniego wyrazu w zdaniu "jak w zdaniu". Jednak każdy wyraz przechwycone przez grupę jest dostępny w kolekcji zwróconej przez <xref:System.Text.RegularExpressions.Group.Captures%2A> właściwości.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Text.RegularExpressions.Group.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca nazwę grupy przechwytywania reprezentujący przez bieżące wystąpienie.</summary>
        <value>Nazwa grupy przechwytywania, reprezentowane przez bieżące wystąpienie.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="public bool Success { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Success" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Success" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Success As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Success { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Success : bool" Usage="System.Text.RegularExpressions.Group.Success" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dopasowanie zakończyło się powodzeniem.</summary>
        <value>
          <see langword="true" /> Jeśli dopasowanie się powiedzie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Success` Właściwość ma wartość true, jeśli co najmniej jeden podciąg został przechwycony przez tę grupę. Jest to równoważne wyrażenie logiczne (Group.Captures.Count > 0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Group Synchronized (System.Text.RegularExpressions.Group inner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Group Synchronized(class System.Text.RegularExpressions.Group inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (inner As Group) As Group" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Group ^ Synchronized(System::Text::RegularExpressions::Group ^ inner);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Text.RegularExpressions.Group -&gt; System.Text.RegularExpressions.Group" Usage="System.Text.RegularExpressions.Group.Synchronized inner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Group" />
      </Parameters>
      <Docs>
        <param name="inner">Dane wejściowe <see cref="T:System.Text.RegularExpressions.Group" /> obiektu.</param>
        <summary>Zwraca <see langword="Group" /> odpowiednikiem dostarczonego obiektu, który jest bezpiecznie udostępniać między wieloma wątkami.</summary>
        <returns>Wyrażenie regularne <see langword="Group" /> obiektu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="inner" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>