<Type Name="Capture" FullName="System.Text.RegularExpressions.Capture">
  <Metadata><Meta Name="ms.openlocfilehash" Value="913debbf33c072f348f77e7d349a334dc4e6de5a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69144995" /></Metadata><TypeSignature Language="C#" Value="public class Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Capture extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="VB.NET" Value="Public Class Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Capture" />
  <TypeSignature Language="F#" Value="type Capture = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Przedstawia wyniki z pojedynczego pomyślnego przechwycenia podwyrażenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.RegularExpressions.Capture> Obiekt jest niezmienny i nie ma konstruktora publicznego. Wystąpienia są zwracane przez <xref:System.Text.RegularExpressions.CaptureCollection> obiekt, który jest zwracany `Match.Captures` przez właściwości i <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> . Jednak właściwość zawiera informacje na temat tego samego dopasowania <xref:System.Text.RegularExpressions.Match> co obiekt. `Match.Captures`  
  
 Jeśli nie zastosujesz <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> kwantyfikatora do grupy przechwytywania, właściwość <xref:System.Text.RegularExpressions.CaptureCollection> zwraca z pojedynczym <xref:System.Text.RegularExpressions.Capture> obiektem, który <xref:System.Text.RegularExpressions.Group> zawiera informacje na temat tego samego przechwycenia co obiekt. `Group.Index`Jeśli zastosujesz kwantyfikator do grupy przechwytywania, właściwości, `Group.Length`i `Group.Value` zawierają informacje <xref:System.Text.RegularExpressions.Capture> dotyczące ostatniej <xref:System.Text.RegularExpressions.CaptureCollection> przechwyconej grupy, podczas gdy obiekty w podaniach zawierają informacje o wszystkich Przechwytywanie podwyrażeń. Przykład stanowi ilustrację.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano wyrażenie regularne pasujące do zdań, które nie zawierają znaków interpunkcyjnych, z wyjątkiem kropki (".").  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 Wzorzec `((\w+)[\s.])+` wyrażenia regularnego jest zdefiniowany, jak pokazano w poniższej tabeli. Należy zauważyć, że w tym wyrażeniu regularnym do całego wyrażenia regularnego jest stosowane kwantyfikator (+).  
  
|Wzorzec|Opis|  
|-------------|-----------------|  
|`(\w+)`|Dopasowuje co najmniej jeden znak słowa. Jest to druga grupa przechwytywania.|  
|`[\s.])`|Dopasowuje znak odstępu lub kropkę (".").|  
|`((\w+)[\s.])`|Dopasowuje jeden lub więcej znaków wyrazu, po którym następuje biały znak lub kropkę ("."). Jest to pierwsza grupa przechwytywania.|  
|`((\w+)[\s.])+`|Dopasowuje jedno lub więcej wystąpień znaku lub znaków słowa, po którym następuje biały znak lub kropkę (".").|  
  
 W tym przykładzie ciąg wejściowy składa się z dwóch zdań. Jak widać na danych wyjściowych, pierwsze zdanie składa się tylko z jednego wyrazu, więc <xref:System.Text.RegularExpressions.CaptureCollection> obiekt ma jeden <xref:System.Text.RegularExpressions.Capture> obiekt, który reprezentuje ten sam <xref:System.Text.RegularExpressions.Group> przechwycenie co obiekt. Drugie zdanie składa się z wielu wyrazów, <xref:System.Text.RegularExpressions.Group> więc obiekty zawierają tylko informacje dotyczące ostatniego dopasowanego podwyrażenia. Grupa 1, która reprezentuje pierwsze przechwytywanie, zawiera ostatni wyraz w zdaniu, który ma okres zamykający. Grupa 2, która reprezentuje drugie przechwytywanie, zawiera ostatni wyraz w zdaniu. Jednak obiekty w <xref:System.Text.RegularExpressions.CaptureCollection> obiekcie grupy przechwytują każde dopasowanie podwyrażenia. <xref:System.Text.RegularExpressions.Capture> <xref:System.Text.RegularExpressions.Capture> Obiekty w kolekcji przechwytywania pierwszej grupy przechwytywania zawierają informacje o każdym z przechwyconych wyrazów i znakach odstępu lub kropki. <xref:System.Text.RegularExpressions.Capture> Obiekty w drugiej kolekcji przechwytywania grupy przechwytujące zawierają informacje o każdym z przechwyconych wyrazów.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.CaptureCollection" />
  </Docs>
  <Members>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Text.RegularExpressions.Capture.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pozycja w oryginalnym ciągu, w którym znajduje się pierwszy znak przechwyconego podciągu.</summary>
        <value>Pozycja początkowa zależna od zera w oryginalnym ciągu, w którym znaleziono przechwycony podciąg.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Text.RegularExpressions.Capture.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera długość przechwyconego podciągu.</summary>
        <value>Długość przechwyconego podciągu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Capture.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="capture.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera przechwycony podciąg z ciągu wejściowego, wywołując <see cref="P:System.Text.RegularExpressions.Capture.Value" /> właściwość.</summary>
        <returns>Podciąg, który został przechwycony przez dopasowanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ToString`jest w <xref:System.Text.RegularExpressions.Capture.Value%2A> rzeczywistości wywołaniem wewnętrznym właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Text.RegularExpressions.Capture.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera przechwycony podciąg z ciągu wejściowego.</summary>
        <value>Podciąg, który jest przechwytywany przez dopasowanie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywołanie <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> metody lub <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> nie powiedzie się, wartość zwracanej `Match.Value` właściwości to <xref:System.String.Empty?displayProperty=nameWithType>. Jeśli aparat wyrażeń regularnych nie jest w stanie dopasować grupy przechwytywania. wartość zwracanej `Group.Value` właściwości to <xref:System.String.Empty?displayProperty=nameWithType>. Zobacz drugi przykład ilustracji.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano wyrażenie regularne pasujące do zdań, które nie zawierają znaków interpunkcyjnych, z wyjątkiem kropki ("."). `Match.Value` Właściwość wyświetla ciąg wynikowy, który składa się z dopasowanego zdania dla każdego dopasowania. `Group.Value` Właściwość wyświetla ciąg wynikowy dla każdej grupy przechwytywania. składa się z ostatniego ciągu przechwyconego przez tę grupę przechwytywania. <xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType> Właściwość wyświetla ciąg wynikowy dla każdego przechwycenia.  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 Wzorzec `((\w+)[\s.])+` wyrażenia regularnego jest zdefiniowany, jak pokazano w poniższej tabeli. Należy zauważyć, że w tym wyrażeniu regularnym do całego wyrażenia regularnego jest stosowane kwantyfikator (+).  
  
|Wzorzec|Opis|  
|-------------|-----------------|  
|`(\w+)`|Dopasowuje co najmniej jeden znak słowa. Jest to druga grupa przechwytywania.|  
|`[\s.])`|Dopasowuje znak odstępu lub kropkę (".").|  
|`((\w+)[\s.])`|Dopasowuje jeden lub więcej znaków wyrazu, po którym następuje biały znak lub kropkę ("."). Jest to pierwsza grupa przechwytywania.|  
|`((\w+)[\s.])+`|Dopasowuje jedno lub więcej wystąpień znaku lub znaków słowa, po którym następuje biały znak lub kropkę (".").|  
  
 W tym przykładzie ciąg wejściowy składa się z dwóch zdań. Jak widać na danych wyjściowych, pierwsze zdanie składa się tylko z jednego wyrazu, więc <xref:System.Text.RegularExpressions.CaptureCollection> obiekt ma jeden <xref:System.Text.RegularExpressions.Capture> obiekt, który reprezentuje ten sam <xref:System.Text.RegularExpressions.Group> przechwycenie co obiekt. Drugie zdanie składa się z wielu wyrazów, <xref:System.Text.RegularExpressions.Group> więc obiekty zawierają tylko informacje dotyczące ostatniego dopasowanego podwyrażenia. Grupa 1, która reprezentuje pierwsze przechwytywanie, zawiera ostatni wyraz w zdaniu, który ma okres zamykający. Grupa 2, która reprezentuje drugie przechwytywanie, zawiera ostatni wyraz w zdaniu. Jednak obiekty w <xref:System.Text.RegularExpressions.CaptureCollection> obiekcie grupy przechwytują każde dopasowanie podwyrażenia. <xref:System.Text.RegularExpressions.Capture> <xref:System.Text.RegularExpressions.Capture> Obiekty w kolekcji przechwytywania pierwszej grupy przechwytywania zawierają informacje o każdym z przechwyconych wyrazów i znakach odstępu lub kropki. <xref:System.Text.RegularExpressions.Capture> Obiekty w drugiej kolekcji przechwytywania grupy przechwytujące zawierają informacje o każdym z przechwyconych wyrazów.  
  
 Poniższy przykład używa wzorca `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`wyrażenia regularnego, w celu dopasowania do numeru produktu, który składa się z dwóch części oddzielonych kropką. Obie części składają się z znaków alfabetycznych, po których następuje numery opcjonalne. Ponieważ pierwszy ciąg wejściowy nie pasuje do wzorca, wartość zwracanej <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> `Value` właściwości obiektu to <xref:System.String.Empty?displayProperty=nameWithType>. Podobnie, Jeśli wzorzec wyrażenia regularnego nie jest w stanie dopasować grupy przechwytywania, wartość <xref:System.Text.RegularExpressions.Group> `Value` właściwości odpowiadającego obiektu to <xref:System.String.Empty?displayProperty=nameWithType>.  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/cs/value1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/vb/value1.vb#1)]  
  
 Wzorzec wyrażenia regularnego jest zdefiniowany, jak pokazano w poniższej tabeli:  
  
|Wzorzec|Opis|  
|-------------|-----------------|  
|`^`|Rozpocznij dopasowanie na początku ciągu.|  
|`([a-z]+)`|Dopasowuje jedno lub więcej wystąpień dowolnego znaku od a do z. Ponieważ aparat wyrażeń regularnych jest przekazaniem <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> opcji, to porównanie nie uwzględnia wielkości liter. Jest to pierwsza grupa przechwytywania.|  
|`(\d+)?`|Dopasowanie do zera lub jednego wystąpienia co najmniej jednej cyfry dziesiętnej. Jest to druga grupa przechwytywania.|  
|`\.`|Dopasowuje znak kropki literału.|  
|`([a-z]+`|Dopasowuje jedno lub więcej wystąpień dowolnego znaku od a do z. W porównaniu z rozróżnianiem wielkości liter.|  
|`(\d)*`|Dopasowanie do zera lub większej liczby cyfr dziesiętnych. Jedną dopasowaną cyfrą jest czwarta grupa przechwytywania.|  
|`([a-z]+(\d)*)`|Dopasowuje jeden lub więcej znaków alfabetycznych od a do z, po których następuje zero, jeden lub więcej cyfr dziesiętnych. Jest to czwarta grupa przechwytywania.|  
|`$`|Zakończ dopasowanie na końcu ciągu.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
