<Type Name="Match" FullName="System.Text.RegularExpressions.Match">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c886bcea5d17b2ba683b40687e65b1b31de9ad20" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36408140" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Match : System.Text.RegularExpressions.Group" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Match extends System.Text.RegularExpressions.Group" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Match" />
  <TypeSignature Language="VB.NET" Value="Public Class Match&#xA;Inherits Group" />
  <TypeSignature Language="C++ CLI" Value="public ref class Match : System::Text::RegularExpressions::Group" />
  <TypeSignature Language="F#" Value="type Match = class&#xA;    inherit Group" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Group</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d2a81-101">Reprezentuje wyniki z pojedynczego wyrażenia regularnego dopasowanie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d2a81-101">Represents the results from a single regular expression match.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2a81-102"><xref:System.Text.RegularExpressions.Match> Obiektu jest niemodyfikowalna i nie ma publicznego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d2a81-102">The <xref:System.Text.RegularExpressions.Match> object is immutable and has no public constructor.</span></span> <span data-ttu-id="d2a81-103">Wystąpienie <xref:System.Text.RegularExpressions.Match> klasy jest zwracany przez <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> — metoda i reprezentuje pierwszy wzorzec zgodne w ciągu.</span><span class="sxs-lookup"><span data-stu-id="d2a81-103">An instance of the <xref:System.Text.RegularExpressions.Match> class is returned by the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> method and represents the first pattern match in a string.</span></span> <span data-ttu-id="d2a81-104">Kolejnych dopasowań są reprezentowane przez <xref:System.Text.RegularExpressions.Match> obiekty zwrócone przez <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="d2a81-104">Subsequent matches are represented by <xref:System.Text.RegularExpressions.Match> objects returned by the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d2a81-105">Ponadto <xref:System.Text.RegularExpressions.MatchCollection> obiekt, który składa się z zero, co najmniej jeden <xref:System.Text.RegularExpressions.Match> obiektów jest zwracany przez <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="d2a81-105">In addition, a <xref:System.Text.RegularExpressions.MatchCollection> object that consists of zero, one, or more <xref:System.Text.RegularExpressions.Match> objects is returned by the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d2a81-106">Jeśli <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> — metoda nie jest zgodny z wzorcem wyrażenia regularnego, w ciągu wejściowym, zwracana jest pusta <xref:System.Text.RegularExpressions.MatchCollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="d2a81-106">If the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> method fails to match a regular expression pattern in an input string, it returns an empty <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="d2a81-107">Następnie można użyć `foreach` utworzyć w języku C# lub `For Each` utworzyć w języku Visual Basic w celu wykonania iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d2a81-107">You can then use a `foreach` construct in C# or a `For Each` construct in Visual Basic to iterate the collection.</span></span>  
  
 <span data-ttu-id="d2a81-108">Jeśli <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> — metoda nie jest zgodny z wzorcem wyrażenia regularnego, zwraca <xref:System.Text.RegularExpressions.Match> obiekt, który jest równy <xref:System.Text.RegularExpressions.Match.Empty%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d2a81-108">If the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> method fails to match the regular expression pattern, it returns a <xref:System.Text.RegularExpressions.Match> object that is equal to <xref:System.Text.RegularExpressions.Match.Empty%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d2a81-109">Można użyć <xref:System.Text.RegularExpressions.Group.Success%2A> właściwości w celu określenia, czy dopasowanie zakończyła się powodzeniem.</span><span class="sxs-lookup"><span data-stu-id="d2a81-109">You can use the <xref:System.Text.RegularExpressions.Group.Success%2A> property to determine whether the match was successful.</span></span> <span data-ttu-id="d2a81-110">Poniższy przykład stanowi ilustrację.</span><span class="sxs-lookup"><span data-stu-id="d2a81-110">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Match.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match1.vb#1)]  
  
 <span data-ttu-id="d2a81-111">Jeśli wzorzec zakończy się pomyślnie, <xref:System.Text.RegularExpressions.Capture.Value%2A> właściwość zawiera podciąg, <xref:System.Text.RegularExpressions.Capture.Index%2A> właściwość wskazuje liczony od zera pozycja początkowa podciąg w ciągu wejściowym i <xref:System.Text.RegularExpressions.Capture.Length%2A> wskazuje właściwość Długość podciąg w ciągu wejściowym.</span><span class="sxs-lookup"><span data-stu-id="d2a81-111">If a pattern match is successful, the <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the matched substring, the <xref:System.Text.RegularExpressions.Capture.Index%2A> property indicates the zero-based starting position of the matched substring in the input string, and the <xref:System.Text.RegularExpressions.Capture.Length%2A> property indicates the length of matched substring in the input string.</span></span>  
  
 <span data-ttu-id="d2a81-112">Ponieważ jedną pasującą może obejmować wiele grup przechwytywania, <xref:System.Text.RegularExpressions.Match> ma <xref:System.Text.RegularExpressions.Match.Groups%2A> właściwości, która zwraca <xref:System.Text.RegularExpressions.GroupCollection>.</span><span class="sxs-lookup"><span data-stu-id="d2a81-112">Because a single match can involve multiple capturing groups, <xref:System.Text.RegularExpressions.Match> has a <xref:System.Text.RegularExpressions.Match.Groups%2A> property that returns the <xref:System.Text.RegularExpressions.GroupCollection>.</span></span> <span data-ttu-id="d2a81-113"><xref:System.Text.RegularExpressions.Match> Wystąpienie jest odpowiednikiem pierwszy obiekt w kolekcji, w `Match.Groups[0]` (`Match.Groups(0)` w języku Visual Basic), który reprezentuje cały dopasowania.</span><span class="sxs-lookup"><span data-stu-id="d2a81-113">The <xref:System.Text.RegularExpressions.Match> instance itself is equivalent to the first object in the collection, at `Match.Groups[0]` (`Match.Groups(0)` in Visual Basic), which represents the entire match.</span></span> <span data-ttu-id="d2a81-114">Aby dostęp do przechwyconych grup w dopasowania w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d2a81-114">You can access the captured groups in a match in the following ways:</span></span>  
  
-   <span data-ttu-id="d2a81-115">Można wykonać iterację członków <xref:System.Text.RegularExpressions.GroupCollection> obiektu za pomocą `foreach` (C#) lub `For Each` konstrukcja (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d2a81-115">You can iterate the members of the <xref:System.Text.RegularExpressions.GroupCollection> object  by using a `foreach` (C#) or `For Each` (Visual Basic) construct.</span></span>  
  
-   <span data-ttu-id="d2a81-116">Można użyć <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29?displayProperty=nameWithType> właściwości do pobrania grup z numerem grupy przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="d2a81-116">You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29?displayProperty=nameWithType> property to retrieve groups by the number of the capturing group.</span></span> <span data-ttu-id="d2a81-117">Należy pamiętać, że można określić numeru grupy, które znajdują się w wyrażeniu regularnym przez wywołanie metody wystąpienia <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="d2a81-117">Note that you can determine which numbered groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="d2a81-118">Można użyć <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29?displayProperty=nameWithType> właściwości do pobrania grup według nazwy grupy przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="d2a81-118">You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29?displayProperty=nameWithType> property to retrieve groups by the name of the capturing group.</span></span> <span data-ttu-id="d2a81-119">Należy pamiętać, że można określić grupy o nazwie, które znajdują się w wyrażeniu regularnym przez wywołanie metody wystąpienia <xref:System.Text.RegularExpressions.Regex.GetGroupNames?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="d2a81-119">Note that you can determine which named groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNames?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2a81-120">W poniższych przykładach użyto wyrażenia regularnego `Console\.Write(Line)?`.</span><span class="sxs-lookup"><span data-stu-id="d2a81-120">The following examples use the regular expression `Console\.Write(Line)?`.</span></span> <span data-ttu-id="d2a81-121">Wyrażenie regularne jest interpretowana w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d2a81-121">The regular expression is interpreted as follows:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d2a81-122">Konsola\\. Zapisu</span><span class="sxs-lookup"><span data-stu-id="d2a81-122">Console\\.Write</span></span>|<span data-ttu-id="d2a81-123">Zgodny z ciągiem "Console.Write".</span><span class="sxs-lookup"><span data-stu-id="d2a81-123">Match the string "Console.Write".</span></span> <span data-ttu-id="d2a81-124">Należy pamiętać, że "." znak została zmieniona, tak aby był interpretowany jako literału okres, a nie jako symbolu wieloznacznego, który dopasowuje dowolny znak.</span><span class="sxs-lookup"><span data-stu-id="d2a81-124">Note that the "." character is escaped so that it is interpreted as a literal period rather than as a wildcard that matches any character.</span></span>|  
|<span data-ttu-id="d2a81-125">(Linia)?</span><span class="sxs-lookup"><span data-stu-id="d2a81-125">(Line)?</span></span>|<span data-ttu-id="d2a81-126">Zgodne zero lub jeden wystąpienie ciągu "Wiersz".</span><span class="sxs-lookup"><span data-stu-id="d2a81-126">Match zero or one occurrence of the string "Line".</span></span>|  
  
 <span data-ttu-id="d2a81-127">**Przykład 1**</span><span class="sxs-lookup"><span data-stu-id="d2a81-127">**Example 1**</span></span>  
  
 <span data-ttu-id="d2a81-128">Następujące przykładowe wywołania <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> metodę, aby pobrać wszystkie dopasowania wzorca w parametrach wejściowych.</span><span class="sxs-lookup"><span data-stu-id="d2a81-128">The following example calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> method to retrieve all pattern matches in an input string.</span></span> <span data-ttu-id="d2a81-129">Następnie iteruje <xref:System.Text.RegularExpressions.Match> obiektów w zwróconym <xref:System.Text.RegularExpressions.MatchCollection> obiektu do wyświetlenia informacji o każdym dopasowaniu.</span><span class="sxs-lookup"><span data-stu-id="d2a81-129">It then iterates the <xref:System.Text.RegularExpressions.Match> objects in the returned <xref:System.Text.RegularExpressions.MatchCollection> object to display information about each match.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Match.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match2.vb#2)]  
  
 <span data-ttu-id="d2a81-130">**Przykład 2**</span><span class="sxs-lookup"><span data-stu-id="d2a81-130">**Example 2**</span></span>  
  
 <span data-ttu-id="d2a81-131">Następujące przykładowe wywołania <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> i <xref:System.Text.RegularExpressions.Match.NextMatch%2A> metody do pobierania jedno dopasowanie.</span><span class="sxs-lookup"><span data-stu-id="d2a81-131">The following example calls the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> and <xref:System.Text.RegularExpressions.Match.NextMatch%2A> methods to retrieve one match at a time.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Match.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.MatchCollection" />
    <altmember cref="T:System.Text.RegularExpressions.Regex" />
  </Docs>
  <Members>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.RegularExpressions.Match Empty" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Match.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::RegularExpressions::Match ^ Empty { System::Text::RegularExpressions::Match ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Match.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2a81-132">Pobiera pustej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-132">Gets the empty group.</span>
          </span>
          <span data-ttu-id="d2a81-133">Wszystkie dopasowania nie powiodło się zwrócić tego dopasowania puste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-133">All failed matches return this empty match.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2a81-134">Pusty dopasowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-134">An empty match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2a81-135">Ta właściwość nie powinien służyć do ustalenia, czy dopasowanie jest pomyślne.</span><span class="sxs-lookup"><span data-stu-id="d2a81-135">This property should not be used to determine if a match is successful.</span></span> <span data-ttu-id="d2a81-136">Zamiast tego należy użyć `Match.Success` właściwości (dziedziczoną z <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="d2a81-136">Instead, use the `Match.Success` property (which is inherited from <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public virtual System.Text.RegularExpressions.GroupCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.GroupCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Match.Groups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Groups As GroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::RegularExpressions::GroupCollection ^ Groups { System::Text::RegularExpressions::GroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Text.RegularExpressions.GroupCollection" Usage="System.Text.RegularExpressions.Match.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.GroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2a81-137">Pobiera kolekcję grup, które są dopasowane wg wyrażenia regularnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-137">Gets a collection of groups matched by the regular expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2a81-138">Grup znaków są dopasowane wg ze wzorcem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-138">The character groups matched by the pattern.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2a81-139">Wzorzec wyrażenia regularnego może obejmować użyto, zdefiniowanych przez zamknięciem część wzorzec wyrażenia regularnego w nawiasach.</span><span class="sxs-lookup"><span data-stu-id="d2a81-139">A regular expression pattern can include subexpressions, which are defined by enclosing a portion of the regular expression pattern in parentheses.</span></span> <span data-ttu-id="d2a81-140">Każdy taki Podwyrażenie tworzy grupę.</span><span class="sxs-lookup"><span data-stu-id="d2a81-140">Every such subexpression forms a group.</span></span> <span data-ttu-id="d2a81-141"><xref:System.Text.RegularExpressions.Match.Groups%2A> Właściwości zapewnia dostęp do informacji o tych Podwyrażenie dopasowań.</span><span class="sxs-lookup"><span data-stu-id="d2a81-141">The <xref:System.Text.RegularExpressions.Match.Groups%2A> property provides access to information about those subexpression matches.</span></span> <span data-ttu-id="d2a81-142">Na przykład wzorzec wyrażenia regularnego `(\d{3})-(\d{3}-\d{4})`, zgodnej z numerów telefonów w Ameryce Północnej, ma dwa zakresie.</span><span class="sxs-lookup"><span data-stu-id="d2a81-142">For example, the regular expression pattern `(\d{3})-(\d{3}-\d{4})`, which matches North American telephone numbers, has two subexpressions.</span></span> <span data-ttu-id="d2a81-143">Pierwszy składa się z kodu obszaru Redaguj pierwsze trzy cyfry numeru telefonu.</span><span class="sxs-lookup"><span data-stu-id="d2a81-143">The first consists of the area code, which composes the first three digits of the telephone number.</span></span> <span data-ttu-id="d2a81-144">Ta grupa jest przechwytywany przez pierwszą część wyrażenia regularnego `(\d{3})`. Druga składa się z numerem telefonu poszczególnych, który Redaguj ostatnie cyfry numeru telefonu.</span><span class="sxs-lookup"><span data-stu-id="d2a81-144">This group is captured by the first portion of the regular expression, `(\d{3})`.The second consists of the individual telephone number, which composes the last seven digits of the telephone number.</span></span> <span data-ttu-id="d2a81-145">Ta grupa jest przechwytywany przez drugiej części wyrażenia regularnego `(\d{3}-\d{4})`.</span><span class="sxs-lookup"><span data-stu-id="d2a81-145">This group is captured by the second portion of the regular expression, `(\d{3}-\d{4})`.</span></span> <span data-ttu-id="d2a81-146">Następnie można pobrać tych dwóch grup z <xref:System.Text.RegularExpressions.GroupCollection> obiektu, który jest zwracany przez <xref:System.Text.RegularExpressions.Match.Groups%2A> właściwości, jak przedstawiono na poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="d2a81-146">These two groups can then be retrieved from the <xref:System.Text.RegularExpressions.GroupCollection> object that is returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property, as the following example shows.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Groups#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/cs/groups1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Match.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/vb/groups1.vb#1)]  
  
 <span data-ttu-id="d2a81-147"><xref:System.Text.RegularExpressions.GroupCollection> Obiektu zwróconego przez <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> właściwość jest obiekt kolekcji liczony od zera, która zawsze ma co najmniej jednego członka.</span><span class="sxs-lookup"><span data-stu-id="d2a81-147">The <xref:System.Text.RegularExpressions.GroupCollection> object returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> property is a zero-based collection object that always has at least one member.</span></span> <span data-ttu-id="d2a81-148">Jeśli aparat wyrażeń regularnych nie można odnaleźć dopasowań w określonym ciągu wejściowego <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> właściwości pojedynczego <xref:System.Text.RegularExpressions.Group> obiektu w kolekcji (obiekt pod indeksem 0) ma ustawioną wartość `false` i <xref:System.Text.RegularExpressions.Group> obiektu <xref:System.Text.RegularExpressions.Capture.Value%2A>właściwość jest ustawiona na <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d2a81-148">If the regular expression engine cannot find any matches in a particular input string, the <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> property of the single <xref:System.Text.RegularExpressions.Group> object in the collection (the object at index 0) is set to `false` and the <xref:System.Text.RegularExpressions.Group> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property is set to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d2a81-149">Jeśli aparat wyrażeń regularnych można znaleźć dopasowania, pierwszy element <xref:System.Text.RegularExpressions.GroupCollection> zwrócona przez obiekt (element pod indeksem 0) <xref:System.Text.RegularExpressions.Match.Groups%2A> właściwości zawiera ciąg, który odpowiada wzorcowi całego wyrażenia regularnego.</span><span class="sxs-lookup"><span data-stu-id="d2a81-149">If the regular expression engine can find a match, the first element of the <xref:System.Text.RegularExpressions.GroupCollection> object (the element at index 0) returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property contains a string that matches the entire regular expression pattern.</span></span> <span data-ttu-id="d2a81-150">Z indeksu, jeden każdego kolejnego elementu w górę, reprezentuje przechwyconej grupy, jeśli wyrażenie regularne obejmuje przechwytywanie grup.</span><span class="sxs-lookup"><span data-stu-id="d2a81-150">Each subsequent element, from index one upward, represents a captured group, if the regular expression includes capturing groups.</span></span> <span data-ttu-id="d2a81-151">Aby uzyskać więcej informacji, zobacz sekcję "Grupowania tworzy i regularnego obiektów wyrażeń" [konstrukcji grupowania](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) artykułu.</span><span class="sxs-lookup"><span data-stu-id="d2a81-151">For more information, see the "Grouping Constructs and Regular Expression Objects" section of the [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) article.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2a81-152">Poniższy przykład próbuje zgodne ze wzorcem wyrażenia regularnego względem przykładowy ciąg.</span><span class="sxs-lookup"><span data-stu-id="d2a81-152">The following example attempts to match a regular expression pattern against a sample string.</span></span> <span data-ttu-id="d2a81-153">W przykładzie użyto <xref:System.Text.RegularExpressions.Match.Groups%2A> właściwości do przechowywania informacji, które są pobierane przez dopasowanie do wyświetlenia w konsoli.</span><span class="sxs-lookup"><span data-stu-id="d2a81-153">The example uses the <xref:System.Text.RegularExpressions.Match.Groups%2A> property to store information that is retrieved by the match for display to the console.</span></span>  
  
 [!code-cpp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/cpp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cpp/snippet8.cpp#8)]
 [!code-csharp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/csharp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cs/snippet8.cs#8)]
 [!code-vb[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/regex match, nextmatch, groups, captures/vb/snippet8.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextMatch">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Match NextMatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.Match NextMatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Match.NextMatch" />
      <MemberSignature Language="VB.NET" Value="Public Function NextMatch () As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::Match ^ NextMatch();" />
      <MemberSignature Language="F#" Value="member this.NextMatch : unit -&gt; System.Text.RegularExpressions.Match" Usage="match.NextMatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d2a81-154">Zwraca nowy <see cref="T:System.Text.RegularExpressions.Match" /> obiekt z wynikami dla następnego dopasowania, zaczynając od pozycji, jaką ostatniego dopasowania Zakończono (o znaków po ostatniego dopasowane znaków).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-154">Returns a new <see cref="T:System.Text.RegularExpressions.Match" /> object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2a81-155">Następny dopasowanie wyrażenia regularnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-155">The next regular expression match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2a81-156">Ta metoda jest podobna do wywoływania <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> ponownie i przekazywanie (`Index+Length`) jako nowa pozycja początkowa.</span><span class="sxs-lookup"><span data-stu-id="d2a81-156">This method is similar to calling <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> again and passing (`Index+Length`) as the new starting position.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2a81-157">Ta metoda nie modyfikuje bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d2a81-157">This method does not modify the current instance.</span></span> <span data-ttu-id="d2a81-158">Zamiast tego zwraca nową <xref:System.Text.RegularExpressions.Match> obiektu, który zawiera informacje o następnego dopasowania.</span><span class="sxs-lookup"><span data-stu-id="d2a81-158">Instead, it returns a new <xref:System.Text.RegularExpressions.Match> object that contains information about the next match.</span></span>  
  
 <span data-ttu-id="d2a81-159">Podjęto próbę pobrania następnego dopasowania może zgłaszać <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> Jeśli wartość limitu czasu dla operacji dopasowywania jest włączona, a próba znalezienia następnego dopasowania przekracza ten limit czasu.</span><span class="sxs-lookup"><span data-stu-id="d2a81-159">Attempting to retrieve the next match may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> if a time-out value for matching operations is in effect and the attempt to find the next match exceeds that time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2a81-160">W poniższym przykładzie użyto <xref:System.Text.RegularExpressions.Match.NextMatch%2A> Metoda przechwytywania wyrażenia regularnego odpowiada poza pierwsze dopasowanie.</span><span class="sxs-lookup"><span data-stu-id="d2a81-160">The following example uses the <xref:System.Text.RegularExpressions.Match.NextMatch%2A> method to capture regular expression matches beyond the first match.</span></span>  
  
 [!code-cpp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/cpp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cpp/snippet8.cpp#8)]
 [!code-csharp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/csharp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cs/snippet8.cs#8)]
 [!code-vb[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/regex match, nextmatch, groups, captures/vb/snippet8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="d2a81-161">Upłynął limit czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-161">A time-out occurred.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="d2a81-162">
            <para>Podczas próby dopasowania jest powtarzany, wywołując <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> metoda, aparat wyrażeń regularnych daje pusty dopasowań szczególnego traktowania. Zazwyczaj <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> rozpocznie się wyszukiwanie następnego dopasowania dokładnie, gdzie poprzedniego dopasowania przerwał pracę. Jednak po pusty dopasowania <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> metody przechodzi przez jeden znak przed podjęciem próby następnego dopasowania. Takie zachowanie gwarantuje, że aparat wyrażeń regularnych będzie trakcie poruszania się przez ciąg. W przeciwnym razie ponieważ dopasowanie pusta nie powoduje żadnych ruch do przodu, następnego dopasowania zaczyna się w tym samym miejscu, jako poprzedniego dopasowania, a to dopasuje wielokrotnie ten sam ciąg pusty.  Poniższy przykład stanowi ilustrację. Wzorzec wyrażenia regularnego <c>\*</c> wyszukuje zero lub więcej wystąpień litery "" w ciągu "abaabb". Jak pokazano na dane wyjściowe z przykładu, wyszukiwania znajduje sześciu dopasowań. Pierwsza próba dopasowania znajduje pierwszy "". Drugi uruchamia dopasowania, gdzie pierwszy pasować kończy się przed pierwszym b; znajduje zero wystąpienia "a", a zwraca pusty ciąg. Trzeci dopasowania nie zaczyna się dokładnie gdzie drugi dopasowania została zakończona, ponieważ drugi dopasowania zwrócony pusty ciąg. Zamiast tego rozpoczyna jeden znak później, po pierwszym "b". Trzeci dopasowania znajduje dwa wystąpienia "a" i zwraca "aa". Czwarty próbę dopasowania rozpoczyna się, gdy trzeci dopasowania zostało zakończone przed drugi "b" i zwraca pusty ciąg. Piąty próbę dopasowania ponownie przechodzi jeden znak, który rozpoczyna się przed trzeci "b" i zwraca pusty ciąg. Dopasowanie szóstego rozpoczyna się po ostatnim "b" i ponownie zwraca pusty ciąg.  [! code-csharp[System.Text.RegularExpressions.Match.NextMatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.nextmatch/cs/nextmatch1.cs#1)] [! code-vb[System.Text.RegularExpressions.Match.NextMatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.nextmatch/vb/nextmatch1.vb#1)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-162">
              <para>When a match attempt is repeated by calling the <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> method, the regular expression engine gives empty matches special treatment. Usually, <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> begins the search for the next match exactly where the previous match left off. However, after an empty match, the <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> method advances by one character before trying the next match. This behavior guarantees that the regular expression engine will progress through the string. Otherwise, because an empty match does not result in any forward movement, the next match would start in exactly the same place as the previous match, and it would match the same empty string repeatedly.  The following example provides an illustration. The regular expression pattern <c>a\*</c> searches for zero or more occurrences of the letter "a" in the string "abaabb". As the output from the example shows, the search finds six matches. The first match attempt finds the first "a". The second match starts exactly where the first match ends, before the first b; it finds zero occurrences of "a" and returns an empty string. The third match does not begin exactly where the second match ended, because the second match returned an empty string. Instead, it begins one character later, after the first "b". The third match finds two occurrences of "a" and returns "aa". The fourth match attempt begins where the third match ended, before the second "b", and returns an empty string. The fifth match attempt again advances one character so that it begins before the third "b" and returns an empty string. The sixth match begins after the last "b" and returns an empty string again.  [!code-csharp[System.Text.RegularExpressions.Match.NextMatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.nextmatch/cs/nextmatch1.cs#1)] [!code-vb[System.Text.RegularExpressions.Match.NextMatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.nextmatch/vb/nextmatch1.vb#1)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual string Result (string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Result(string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Match.Result(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Result (replacement As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Result(System::String ^ replacement);" />
      <MemberSignature Language="F#" Value="abstract member Result : string -&gt; string&#xA;override this.Result : string -&gt; string" Usage="match.Result replacement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="replacement">
          <span data-ttu-id="d2a81-163">Zastąpienie składnię.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-163">The replacement pattern to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2a81-164">Zwraca rozszerzenia wzorca określonego zastąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-164">Returns the expansion of the specified replacement pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2a81-165">Rozszerzona wersja <paramref name="replacement" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-165">The expanded version of the <paramref name="replacement" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2a81-166">Podczas gdy <xref:System.Text.RegularExpressions.Regex.Replace%2A?displayProperty=nameWithType> metoda zastępuje wszystkie dopasowania w ciągu wejściowym wzorzec określonego zastąpienia <xref:System.Text.RegularExpressions.Match.Result%2A> metoda zastępuje pojedynczego dopasowania wzorca określonego zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="d2a81-166">Whereas the <xref:System.Text.RegularExpressions.Regex.Replace%2A?displayProperty=nameWithType> method replaces all matches in an input string with a specified replacement pattern, the <xref:System.Text.RegularExpressions.Match.Result%2A> method replaces a single match with a specified replacement pattern.</span></span> <span data-ttu-id="d2a81-167">Ponieważ działa ona w poszczególnych dopasowania, jest również można wykonać przetwarzania dopasowany ciąg przed wywołaniem <xref:System.Text.RegularExpressions.Match.Result%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d2a81-167">Because it operates on an individual match, it is also possible to perform processing on the matched string before you call the <xref:System.Text.RegularExpressions.Match.Result%2A> method.</span></span>  
  
 <span data-ttu-id="d2a81-168">`replacement` Parametr jest wzorzec zastąpienia standardowego wyrażenia regularnego.</span><span class="sxs-lookup"><span data-stu-id="d2a81-168">The `replacement` parameter is a standard regular expression replacement pattern.</span></span> <span data-ttu-id="d2a81-169">Może się składać literały i podstawień wyrażenia regularnego.</span><span class="sxs-lookup"><span data-stu-id="d2a81-169">It can consist of literal characters and regular expression substitutions.</span></span> <span data-ttu-id="d2a81-170">Aby uzyskać więcej informacji, zobacz [podstawienia](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span><span class="sxs-lookup"><span data-stu-id="d2a81-170">For more information, see [Substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2a81-171">Poniższy przykład zastępuje łączniki, które rozpoczynać i kończyć w nawiasach wyrażenia w nawiasach.</span><span class="sxs-lookup"><span data-stu-id="d2a81-171">The following example replaces the hyphens that begin and end a parenthetical expression with parentheses.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Result#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.result/cs/result1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Match.Result#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.result/vb/result1.vb#1)]  
  
 <span data-ttu-id="d2a81-172">Wzorzec wyrażenia regularnego `--(.+?)--` jest interpretowany, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="d2a81-172">The regular expression pattern `--(.+?)--` is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="d2a81-173">Wzorzec</span><span class="sxs-lookup"><span data-stu-id="d2a81-173">Pattern</span></span>|<span data-ttu-id="d2a81-174">Opis</span><span class="sxs-lookup"><span data-stu-id="d2a81-174">Description</span></span>|  
|-------------|-----------------|  
|`--`|<span data-ttu-id="d2a81-175">Zgodne dwa łączniki.</span><span class="sxs-lookup"><span data-stu-id="d2a81-175">Match two hyphens.</span></span>|  
|`(.+?)`|<span data-ttu-id="d2a81-176">Dopasowuje dowolny znak jeden lub więcej razy, ale jako kilka razy, jak to możliwe.</span><span class="sxs-lookup"><span data-stu-id="d2a81-176">Match any character one or more times, but as few times as possible.</span></span> <span data-ttu-id="d2a81-177">Jest to pierwsza grupa przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="d2a81-177">This is the first capturing group.</span></span>|  
|`--`|<span data-ttu-id="d2a81-178">Zgodne dwa łączniki.</span><span class="sxs-lookup"><span data-stu-id="d2a81-178">Match two hyphens.</span></span>|  
  
 <span data-ttu-id="d2a81-179">Należy pamiętać, że wzorzec wyrażenia regularnego `--(.+?)--` korzysta z opóźnieniem kwantyfikatora `+?`.</span><span class="sxs-lookup"><span data-stu-id="d2a81-179">Note that the regular expression pattern `--(.+?)--` uses the lazy quantifier `+?`.</span></span> <span data-ttu-id="d2a81-180">Jeśli intensywnie kwantyfikatora `+` użyto zamiast tego aparat wyrażeń regularnych znajdował jedną pasującą w ciągu wejściowym.</span><span class="sxs-lookup"><span data-stu-id="d2a81-180">If the greedy quantifier `+` were used instead, the regular expression engine would find only a single match in the input string.</span></span>  
  
 <span data-ttu-id="d2a81-181">Ciąg zastępczy `($1)` zamienia pierwszą grupą przechwyconych jest ujęta w nawiasy dopasowania.</span><span class="sxs-lookup"><span data-stu-id="d2a81-181">The replacement string `($1)` replaces the match with the first captured group, which is enclosed in parentheses.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2a81-182">
            <paramref name="replacement" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-182">
              <paramref name="replacement" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d2a81-183">Rozszerzenie nie jest dozwolone dla tego wzorca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-183">Expansion is not allowed for this pattern.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Synchronized (System.Text.RegularExpressions.Match inner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Match Synchronized(class System.Text.RegularExpressions.Match inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (inner As Match) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Match ^ Synchronized(System::Text::RegularExpressions::Match ^ inner);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Text.RegularExpressions.Match -&gt; System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Match.Synchronized inner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Match" />
      </Parameters>
      <Docs>
        <param name="inner">
          <span data-ttu-id="d2a81-184">Wyrażenie regularne zgodne wersją oczekiwaną równoważne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-184">A regular expression match equivalent to the one expected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2a81-185">Zwraca <see cref="T:System.Text.RegularExpressions.Match" /> odpowiednikiem podany wystąpienia, które jest odpowiednie do udostępniania między wiele wątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-185">Returns a <see cref="T:System.Text.RegularExpressions.Match" /> instance equivalent to the one supplied that is suitable to share between multiple threads.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2a81-186">Dopasowanie wyrażenia regularnego, które jest odpowiednie do udostępniania między wiele wątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-186">A regular expression match that is suitable to share between multiple threads.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2a81-187">
            <paramref name="inner" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2a81-187">
              <paramref name="inner" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>