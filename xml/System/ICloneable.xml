<Type Name="ICloneable" FullName="System.ICloneable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81d441bf69059013e9540987ceb4c0a3f14b6cd5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430890" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ICloneable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICloneable" />
  <TypeSignature Language="F#" Value="type ICloneable = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2b5e0-101">Obsługuje klonowania, który tworzy nowe wystąpienie klasy z taką samą wartość jak istniejącego wystąpienia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b5e0-101">Supports cloning, which creates a new instance of a class with the same value as an existing instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b5e0-102"><xref:System.ICloneable> Interfejs umożliwia podanie dostosowane implementację, która tworzy kopię istniejącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="2b5e0-102">The <xref:System.ICloneable> interface enables you to provide a customized implementation that creates a copy of an existing object.</span></span> <span data-ttu-id="2b5e0-103"><xref:System.ICloneable> Interfejs zawiera jeden element członkowski, <xref:System.ICloneable.Clone%2A> metodę, która jest przeznaczona do obsługi klonowania poza dostarczona przez <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2b5e0-103">The <xref:System.ICloneable> interface contains one member, the <xref:System.ICloneable.Clone%2A> method, which is intended to provide cloning support beyond that supplied by <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="2b5e0-104">Aby uzyskać więcej informacji na temat klonowania, głębokość lub skrócona kopii i przykłady, zobacz <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2b5e0-104">For more information about cloning, deep versus shallow copies, and examples, see the <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="2b5e0-105">
        <para>
          <see cref="T:System.ICloneable" /> Interfejsu po prostu wymaga, aby implementacji <see cref="M:System.ICloneable.Clone" /> zwracany przez metodę kopię bieżącego wystąpienia obiektu. Nie określa, czy Operacja klonowania wykonuje głęboką kopię, kopia pobieżna lub coś między. Ani nie wymaga wszystkich wartości właściwości z oryginalnego wystąpienia ma zostać skopiowany do nowego wystąpienia. Na przykład <see cref="M:System.Globalization.NumberFormatInfo.Clone" /> metoda wykonuje kopię pobieżną wszystkich właściwości oprócz <see cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" /> właściwości; zawsze ustawia wartości tej właściwości <see langword="false" /> w Sklonowany obiekt. Ponieważ wywołaniach <see cref="M:System.ICloneable.Clone" /> nie może zależeć od metody wykonywania przewidywalne Operacja klonowania, zaleca się <see cref="T:System.ICloneable" /> nie jest zaimplementowana w publicznych interfejsach API.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="2b5e0-105">
          <para>The <see cref="T:System.ICloneable" /> interface simply requires that your implementation of the <see cref="M:System.ICloneable.Clone" /> method return a copy of the current object instance. It does not specify whether the cloning operation performs a deep copy, a shallow copy, or something in between. Nor does it require all property values of the original instance to be copied to the new instance. For example, the <see cref="M:System.Globalization.NumberFormatInfo.Clone" /> method performs a shallow copy of all properties except the <see cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" /> property; it always sets this property value to <see langword="false" /> in the cloned object. Because callers of <see cref="M:System.ICloneable.Clone" /> cannot depend on the method performing a predictable cloning operation, we recommend that <see cref="T:System.ICloneable" /> not be implemented in public APIs.</para>
        </span>
      </span>
    </block>
    <altmember cref="M:System.Object.MemberwiseClone" />
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ICloneable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj" Usage="iCloneable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b5e0-106">Tworzy nowy obiekt, który jest kopią bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b5e0-106">Creates a new object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b5e0-107">Nowy obiekt będący kopią tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b5e0-107">A new object that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b5e0-108">Wynikowa klonu musi być tego samego typu, lub zgodny z oryginalnego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2b5e0-108">The resulting clone must be of the same type as, or compatible with, the original instance.</span></span>  
  
 <span data-ttu-id="2b5e0-109">Implementacja interfejsu <xref:System.ICloneable.Clone%2A> można wykonać kopiowania głębokie lub kopia pobieżna.</span><span class="sxs-lookup"><span data-stu-id="2b5e0-109">An implementation of <xref:System.ICloneable.Clone%2A> can perform either a deep copy or a shallow copy.</span></span> <span data-ttu-id="2b5e0-110">W głębokiej kopii wszystkie obiekty są duplikowane; w kopia pobieżna zduplikowanych tylko obiekty najwyższego poziomu i niższych poziomach zawierają odwołania.</span><span class="sxs-lookup"><span data-stu-id="2b5e0-110">In a deep copy, all objects are duplicated; in a shallow copy, only the top-level objects are duplicated and the lower levels contain references.</span></span> <span data-ttu-id="2b5e0-111">Ponieważ wywołaniach <xref:System.ICloneable.Clone%2A> nie może zależeć od metody wykonywania przewidywalne Operacja klonowania, zaleca się <xref:System.ICloneable> nie jest zaimplementowana w publicznych interfejsach API.</span><span class="sxs-lookup"><span data-stu-id="2b5e0-111">Because callers of <xref:System.ICloneable.Clone%2A> cannot depend on the method performing a predictable cloning operation, we recommend that <xref:System.ICloneable> not be implemented in public APIs.</span></span>  
  
 <span data-ttu-id="2b5e0-112">Zobacz <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> Aby uzyskać więcej informacji w klonowania, głębokość lub skrócona kopii i przykłady.</span><span class="sxs-lookup"><span data-stu-id="2b5e0-112">See <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> for more information on cloning, deep versus shallow copies, and examples.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
  </Members>
</Type>