<Type Name="AppDomainManager" FullName="System.AppDomainManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b90343272a54ba54fa065fea811d2b8e818f542" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37729066" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppDomainManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AppDomainManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type AppDomainManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Oferuje zarządzane równowartość niezarządzany host.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Nie używaj <xref:System.AppDomainManager> skonfigurować domenę aplikacji w programie ASP.NET. W programie ASP.NET: konfiguracji muszą być obsługiwane przez hosta.  
  
 Implementowanie <xref:System.AppDomainManager> klasa umożliwia aplikacji macierzystej do wzięcia udziału w przypadku tworzenia nowych domen aplikacji. Aby zastąpić domyślną <xref:System.AppDomainManager>, identyfikowanie zestawu i typu zastąpienia <xref:System.AppDomainManager> w zmiennych środowiskowych APPDOMAIN_MANAGER_ASM i APPDOMAIN_MANAGER_TYPE lub użyj [ \<appdomainmanagerassembly — >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) i [ \<appdomainmanagertype — >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) elementy w pliku konfiguracji. Zestaw musi być całkowicie zaufanym i znajdować się w globalnej pamięci podręcznej lub katalog początkowy aplikacji. Typ i zestaw nazw musi być w pełni kwalifikowana w zmiennych środowiskowych. Na przykład:  
  
 `set APPDOMAIN_MANAGER_TYPE=MyNamespace.TestAppDomainManager`  
  
 `set APPDOMAIN_MANAGER_ASM=customappDomainmanager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f1368f7b12a08d72`  
  
> [!IMPORTANT]
>  Jeśli zestaw zawierający swoje podklasą <xref:System.AppDomainManager> zależy od zestawów, które są oznaczone za pomocą zasad dostępu <xref:System.Security.AllowPartiallyTrustedCallersAttribute> atrybutu (APTCA), musi zawierać te zestawy na liście, który jest przekazywany do <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> właściwość <xref:System.AppDomainSetup>służy do tworzenia domen aplikacji. W przeciwnym razie, zestawy, które są oznaczone atrybutem APTCA warunkowego zostaną wyłączone.  
  
 <xref:System.AppDomainManager> Zarządzanych odpowiada niezarządzany host. <xref:System.AppDomainManager> Obiekt uczestniczy w przypadku tworzenia nowych domen aplikacji w ramach procesu i dostosować nowy <xref:System.AppDomain> przed uruchomieniem innego kodu zarządzanego. <xref:System.AppDomainManager> Może też podawać menedżerów hosta, które uczestniczą w innych aspektów common language runtime wykonanie. Na przykład <xref:System.AppDomainManager> można zidentyfikować <xref:System.Security.HostSecurityManager> obiektu, który uczestniczy w decyzji dotyczących zabezpieczeń domeny aplikacji.  
  
> [!NOTE]
>  Tylko zestawy przyznane `FullTrust`, takich jak zestawy w globalnej pamięci podręcznej lub wskazany jako `fullTrustAssemblies` w <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> metoda może zostać załadowana w <xref:System.AppDomainManager.%23ctor%2A> Konstruktor i <xref:System.AppDomainManager.InitializeNewDomain%2A> metody.  
  
> [!NOTE]
>  Ta klasa zawiera żądanie łącza i dziedziczenia na poziomie klasy. Element <xref:System.Security.SecurityException> jest zgłaszany, gdy bezpośredniego obiektu wywołującego lub Klasa pochodna nie ma uprawnień infrastruktury. Aby uzyskać szczegółowe informacje na temat wymaganych zabezpieczeń, zobacz [zapotrzebowania na łącza](~/docs/framework/misc/link-demands.md) i [Inheritancedemand](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono bardzo prosta implementacja <xref:System.AppDomainManager>.  
  
 [!code-csharp[System.AppDomainManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#1)]
 [!code-vb[System.AppDomainManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednich uprawnień. Zobacz sekcję wymagania.</exception>
    <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">zapoznać się z pochodnymi klasy, aby podłączyć kod wykonywalny do środowiska uruchomieniowego języka wspólnego infrastruktury hostingu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.AppDomainManager" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Tylko zestawy przyznane `FullTrust`, takich jak zestawy w globalnej pamięci podręcznej lub wskazany jako `fullTrustAssemblies` w <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> metoda może zostać załadowana w <xref:System.AppDomainManager.%23ctor%2A> Konstruktor i <xref:System.AppDomainManager.InitializeNewDomain%2A> metody.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationActivator">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Hosting.ApplicationActivator ApplicationActivator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ApplicationActivator ApplicationActivator" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.ApplicationActivator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationActivator As ApplicationActivator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Hosting::ApplicationActivator ^ ApplicationActivator { System::Runtime::Hosting::ApplicationActivator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationActivator : System.Runtime.Hosting.ApplicationActivator" Usage="System.AppDomainManager.ApplicationActivator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ApplicationActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera aktywator aplikacji obsługującej aktywacji dodatki i aplikacje oparte na manifeście dla domeny.</summary>
        <value>Aktywator aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieje jedno wystąpienie wyznaczonym <xref:System.Runtime.Hosting.ApplicationActivator> klasy w każdym <xref:System.AppDomain> do której wszystkie dodatek i oparte na manifeście aplikacji są kierowane wywołania aktywacji. <xref:System.AppDomainManager> Dla bieżącego <xref:System.AppDomain> podać swój własny niestandardowy <xref:System.Runtime.Hosting.ApplicationActivator>, lub wystąpienie domyślne <xref:System.Runtime.Hosting.ApplicationActivator> zostanie utworzony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual bool CheckSecuritySettings (System.Security.SecurityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSecuritySettings(class System.Security.SecurityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSecuritySettings (state As SecurityState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckSecuritySettings(System::Security::SecurityState ^ state);" />
      <MemberSignature Language="F#" Value="abstract member CheckSecuritySettings : System.Security.SecurityState -&gt; bool&#xA;override this.CheckSecuritySettings : System.Security.SecurityState -&gt; bool" Usage="appDomainManager.CheckSecuritySettings state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.SecurityState" />
      </Parameters>
      <Docs>
        <param name="state">Podklasa klasy <see cref="T:System.Security.SecurityState" /> określający, którego stan zabezpieczeń jest żądanej operacji.</param>
        <summary>Wskazuje, czy określona operacja jest dozwolona w domenie aplikacji.</summary>
        <returns>
          <see langword="true" /> Jeśli host zezwala na operację określoną przez <paramref name="state" /> być wykonywane w domenie aplikacji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja tej metody zwraca `false`.  
  
 Ta metoda jest wywoływana, gdy <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType> Aby zwiększyć limit przydziału wydzielona pamięć masowa została wywołana metoda. Można zastąpić aplikacji, która hostuje środowisko uruchomieniowe języka wspólnego (CLR) <xref:System.AppDomainManager.CheckSecuritySettings%2A> metodę w celu decyzji dotyczących zasad na podstawie <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> obiektu (który dziedziczy <xref:System.Security.SecurityState>), a następnie można umożliwić lub uniemożliwić wzrost. Na przykład host może monitować użytkownika końcowego, aby zatwierdzić lub odrzucić żądanie, aby zwiększyć limit przydziału. Implementacja hosta <xref:System.AppDomainManager.CheckSecuritySettings%2A> należy wziąć pod uwagę możliwości ataków typu "odmowa usługi". Na przykład jego powinien zostać wyświetlony monit użytkownika tylko wtedy, gdy metoda jest wywoływana ze zdarzenia zainicjowane przez użytkownika, takie jak kliknięcie przycisku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public virtual AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDomain (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain&#xA;override this.CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="appDomainManager.CreateDomain (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">Przyjazna nazwa domeny.</param>
        <param name="securityInfo">Ustaw obiekt, który zawiera dowód mapowany za pomocą zasad zabezpieczeń można ustanowić uprawnień najwyższego elementu stosu.</param>
        <param name="appDomainInfo">Obiekt, który zawiera informacje o inicjalizacji domeny aplikacji.</param>
        <summary>Zwraca domeny nowej lub istniejącej aplikacji.</summary>
        <returns>Domena nowej lub istniejącej aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjazna nazwa, określony przez `friendlyName` parametru może być wyświetlany w interfejsie użytkownika do identyfikowania domeny. Aby uzyskać więcej informacji, zobacz <xref:System.AppDomain.FriendlyName%2A> właściwości.  
  
 Wartość domyślna <xref:System.AppDomainManager.CreateDomain%2A> metoda wywołuje chronionej <xref:System.AppDomainManager.CreateDomainHelper%2A> metodę w celu utworzenia <xref:System.AppDomain>. Przesłonięcia tej metody nie trzeba wywoływać <xref:System.AppDomainManager.CreateDomainHelper%2A> metody, ale może zwrócić istniejącej domeny.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.AppDomainManager" /> klasy, a także Przesłoń <see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> metody, można wykonywać aplikacji niestandardowej domeny inicjowania działania przed wywołaniem <see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> metody lub wywołania metody pomocniczej w ogóle.  Na przykład, można zmodyfikować dowód przekazany jako <paramref name="securityInfo" />, zaktualizuj pola skojarzonego <see cref="T:System.AppDomainSetup" />, ani nie używaj ponownie istniejącej domeny.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateDomainHelper">
      <MemberSignature Language="C#" Value="protected static AppDomain CreateDomainHelper (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.AppDomain CreateDomainHelper(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateDomainHelper (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static AppDomain ^ CreateDomainHelper(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="static member CreateDomainHelper : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="System.AppDomainManager.CreateDomainHelper (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">Przyjazna nazwa domeny.</param>
        <param name="securityInfo">Ustaw obiekt, który zawiera dowód mapowany za pomocą zasad zabezpieczeń można ustanowić uprawnień najwyższego elementu stosu.</param>
        <param name="appDomainInfo">Obiekt, który zawiera informacje o inicjalizacji domeny aplikacji.</param>
        <summary>Udostępnia metodę pomocnika, aby utworzyć domenę aplikacji.</summary>
        <returns>Nowo utworzona domena aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pomocnika chronionych obsługuje tworzenie nowej domeny aplikacji.  
  
 Ta przyjazna nazwa, określony przez `friendlyName` parametru może być wyświetlany w interfejsie użytkownika do identyfikowania domeny. Aby uzyskać więcej informacji, zobacz <xref:System.AppDomain.FriendlyName%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="friendlyName" /> jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do kontrolowania dowodów. Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EntryAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly EntryAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly EntryAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.EntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ EntryAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryAssembly : System.Reflection.Assembly" Usage="System.AppDomainManager.EntryAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zestaw wejścia dla aplikacji.</summary>
        <value>Zestaw wejścia dla aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli aplikacja jest aktywowana w manifeście aplikacji, zestaw wpis jest określana na podstawie manifestu aplikacji. Aplikacja nie jest manifestem aktywowany, zestawu zapisu czy pliku wykonywalnego procesu w domyślnej domeny aplikacji. W innych domenach aplikacji zestaw wpis jest pierwszy plik wykonywalny, który został wykonany przez <xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostExecutionContextManager">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContextManager HostExecutionContextManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.HostExecutionContextManager HostExecutionContextManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostExecutionContextManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostExecutionContextManager As HostExecutionContextManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::HostExecutionContextManager ^ HostExecutionContextManager { System::Threading::HostExecutionContextManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostExecutionContextManager : System.Threading.HostExecutionContextManager" Usage="System.AppDomainManager.HostExecutionContextManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContextManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera hosta Menedżera kontekstu wykonywania, który zarządza przepływem kontekstu wykonywania.</summary>
        <value>Host Menedżera kontekstu wykonywania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia hosta w celu zapewnienia <xref:System.Threading.HostExecutionContextManager> , mogą brać udział w przepływu kontekstu wykonania przez wywołania asynchronicznego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostSecurityManager">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManager HostSecurityManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.HostSecurityManager HostSecurityManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostSecurityManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostSecurityManager As HostSecurityManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManager ^ HostSecurityManager { System::Security::HostSecurityManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostSecurityManager : System.Security.HostSecurityManager" Usage="System.AppDomainManager.HostSecurityManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera Menedżera zabezpieczeń hosta, który uczestniczy w usłudze security decyzji dla domeny aplikacji.</summary>
        <value>Menedżer zabezpieczeń hosta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia hosta w celu zapewnienia <xref:System.Security.HostSecurityManager> do wzięcia udziału w decyzji dotyczących zabezpieczeń dla domeny aplikacji.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano nadpisanie <xref:System.AppDomainManager.HostSecurityManager%2A> właściwość Menedżer domeny aplikacji niestandardowych. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.AppDomainManager> klasy.  
  
 [!code-csharp[System.AppDomainManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#3)]
 [!code-vb[System.AppDomainManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationFlags">
      <MemberSignature Language="C#" Value="public AppDomainManagerInitializationOptions InitializationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AppDomainManagerInitializationOptions InitializationFlags" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.InitializationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property InitializationFlags As AppDomainManagerInitializationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainManagerInitializationOptions InitializationFlags { AppDomainManagerInitializationOptions get(); void set(AppDomainManagerInitializationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.InitializationFlags : AppDomainManagerInitializationOptions with get, set" Usage="System.AppDomainManager.InitializationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainManagerInitializationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera flagi inicjowania dla menedżerów domeny niestandardowej aplikacji.</summary>
        <value>Bitowa kombinacja wartości wyliczenia, które opisują inicjowania akcję do wykonania. Wartość domyślna to <see cref="F:System.AppDomainManagerInitializationOptions.None" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewDomain">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewDomain (AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewDomain(class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewDomain (appDomainInfo As AppDomainSetup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewDomain(AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewDomain : AppDomainSetup -&gt; unit&#xA;override this.InitializeNewDomain : AppDomainSetup -&gt; unit" Usage="appDomainManager.InitializeNewDomain appDomainInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="appDomainInfo">Obiekt, który zawiera informacje o inicjalizacji domeny aplikacji.</param>
        <summary>Inicjuje nową domenę aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Nie należy używać tej metody można zainicjować domenę aplikacji w programie ASP.NET. W programie ASP.NET: konfiguracji muszą być obsługiwane przez hosta. Jeśli używasz tej metody można zainicjować domenę aplikacji hosta zgłasza <xref:System.InvalidOperationException> podczas próby zainicjowania domeny aplikacji. Komunikat o wyjątku wskazuje, że już wystąpiła że inicjowanie.  
  
 Ta metoda jest wywoływana bezpośrednio po konstruktora. Wartość domyślna <xref:System.AppDomainManager.InitializeNewDomain%2A> implementacji nic nie robi.  Implementacja niestandardowa można zdefiniować klasy wewnętrzne i delegatów, skonfiguruj interfejs za pomocą interfejsu niezarządzany host lub ustawianie programów obsługi zdarzeń dla nowego <xref:System.AppDomain>.  
  
 Ponadto dla dodatku aktywacji implementację niestandardową można zidentyfikować bieżącą <xref:System.AppDomain> jako domeny aplikacji docelowej.  
  
 Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], można użyć tej metody do izolowanego domyślnej domeny aplikacji, podczas uruchamiania aplikacji lub dla zmodyfikowania piaskownicy nowej domeny aplikacji. Aby to zrobić, należy dostosować <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> i <xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A> właściwości <xref:System.Security.Policy.ApplicationTrust> obiekt, który jest przypisany do <xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType> właściwość `appDomainInfo`, przed zainicjowaniem domeny aplikacji.  
  
> [!NOTE]
>  Tylko zestawy przyznane `FullTrust`, takich jak zestawy w globalnej pamięci podręcznej lub wskazany jako `fullTrustAssemblies` w <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> metoda może zostać załadowana w <xref:System.AppDomainManager.%23ctor%2A> Konstruktor i <xref:System.AppDomainManager.InitializeNewDomain%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano nadpisanie <xref:System.AppDomainManager.InitializeNewDomain%2A> metodę dla menedżera domen niestandardowych aplikacji. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.AppDomainManager> klasy.  
  
 [!code-csharp[System.AppDomainManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#2)]
 [!code-vb[System.AppDomainManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>