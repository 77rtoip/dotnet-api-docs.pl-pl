<Type Name="AppDomainManager" FullName="System.AppDomainManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3660a95f090568736272c604496a87dbf44df3dd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69439263" /></Metadata><TypeSignature Language="C#" Value="public class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppDomainManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AppDomainManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type AppDomainManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia zarządzany odpowiednik niezarządzanego hosta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Nie należy używać <xref:System.AppDomainManager> do konfigurowania domeny aplikacji w ASP.NET. W programie ASP.NET konfiguracja musi być obsługiwana przez hosta.  
  
 <xref:System.AppDomainManager> Implementacja klasy umożliwia aplikacji hostingowej uczestnictwo w tworzeniu nowych domen aplikacji. Aby zastąpić wartość domyślną <xref:System.AppDomainManager>, zidentyfikuj zestaw i typ zastąpienia <xref:System.AppDomainManager> w [ \<](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) zmiennych środowiskowych APPDOMAIN_MANAGER_ASM i APPDOMAIN_MANAGER_TYPE lub użyj appDomainManagerAssembly > i appDomainManagerType > elementów w pliku konfiguracji. [ \<](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) Zestaw musi być w pełni zaufany i znajdować się w globalnej pamięci podręcznej zestawów lub w katalogu aplikacji startowej. Nazwy typów i zestawów muszą być w pełni kwalifikowane w zmiennych środowiskowych. Na przykład:  
  
 `set APPDOMAIN_MANAGER_TYPE=MyNamespace.TestAppDomainManager`  
  
 `set APPDOMAIN_MANAGER_ASM=customappDomainmanager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f1368f7b12a08d72`  
  
> [!IMPORTANT]
>  Jeśli zestaw, który zawiera podklasę <xref:System.AppDomainManager> , zależy od zestawów, które są oznaczone atrybutem <xref:System.Security.AllowPartiallyTrustedCallersAttribute> Conditional (APTCA), należy dołączyć te zestawy do listy, <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> które są przekazywane do właściwości <xref:System.AppDomainSetup>służy do tworzenia domen aplikacji. W przeciwnym razie zestawy, które są oznaczone za pomocą warunkowego atrybutu APTCA, zostaną wyłączone.  
  
 <xref:System.AppDomainManager> Jest to zarządzany odpowiednik niezarządzanego hosta. Obiekt uczestniczy w tworzeniu nowych domen aplikacji w procesie i może dostosować nowe <xref:System.AppDomain> przed uruchomieniem innego kodu zarządzanego. <xref:System.AppDomainManager> <xref:System.AppDomainManager> Może również dostarczyć menedżerów hosta, którzy uczestniczą w innych aspektach wykonywania środowiska uruchomieniowego języka wspólnego. Na przykład <xref:System.AppDomainManager> może <xref:System.Security.HostSecurityManager> identyfikować obiekt, który uczestniczy w podejmowaniu decyzji dotyczących zabezpieczeń domeny aplikacji.  
  
> [!NOTE]
>  Tylko `FullTrust`przyznanych zestawów, takich jak zestawy w globalnej pamięci podręcznej `fullTrustAssemblies` zestawów lub <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> zidentyfikowane jako w metodzie, <xref:System.AppDomainManager.%23ctor%2A> <xref:System.AppDomainManager.InitializeNewDomain%2A> można załadować w konstruktorze i metodzie.  
  
> [!NOTE]
>  Ta klasa zawiera żądanie linku i żądanie dziedziczenia na poziomie klasy. Występuje <xref:System.Security.SecurityException> , gdy bezpośredni obiekt wywołujący lub Klasa pochodna nie ma uprawnienia do infrastruktury. Aby uzyskać szczegółowe informacje o wymaganiach dotyczących zabezpieczeń, zobacz Wymagania dotyczące [powiązań](~/docs/framework/misc/link-demands.md) i [wymagania](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))dotyczące dziedziczenia.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono bardzo prostą implementację <xref:System.AppDomainManager>programu.  
  
 [!code-csharp[System.AppDomainManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#1)]
 [!code-vb[System.AppDomainManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednich uprawnień. Zapoznaj się z sekcją wymagania.</exception>
    <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">w przypadku klas pochodnych aby podłączyć kod wykonywalny do infrastruktury hostingu środowiska uruchomieniowego języka wspólnego. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.AppDomainManager" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Tylko `FullTrust`przyznanych zestawów, takich jak zestawy w globalnej pamięci podręcznej `fullTrustAssemblies` zestawów lub <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> zidentyfikowane jako w metodzie, <xref:System.AppDomainManager.%23ctor%2A> <xref:System.AppDomainManager.InitializeNewDomain%2A> można załadować w konstruktorze i metodzie.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationActivator">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Hosting.ApplicationActivator ApplicationActivator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ApplicationActivator ApplicationActivator" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.ApplicationActivator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationActivator As ApplicationActivator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Hosting::ApplicationActivator ^ ApplicationActivator { System::Runtime::Hosting::ApplicationActivator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationActivator : System.Runtime.Hosting.ApplicationActivator" Usage="System.AppDomainManager.ApplicationActivator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ApplicationActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera aktywator aplikacji, który obsługuje aktywację dodatków i aplikacji opartych na manifeście dla domeny.</summary>
        <value>Aktywator aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieje pojedyncze wyznaczone wystąpienie <xref:System.Runtime.Hosting.ApplicationActivator> klasy w każdym <xref:System.AppDomain> z nich, do którego są kierowane wszystkie wywołania aktywacji aplikacji opartej na manifeście. Dla bieżącego <xref:System.AppDomain> elementu można podać własne niestandardowe <xref:System.Runtime.Hosting.ApplicationActivator>lub tworzone jest wystąpienie wartości domyślnej <xref:System.Runtime.Hosting.ApplicationActivator>. <xref:System.AppDomainManager>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual bool CheckSecuritySettings (System.Security.SecurityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSecuritySettings(class System.Security.SecurityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSecuritySettings (state As SecurityState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckSecuritySettings(System::Security::SecurityState ^ state);" />
      <MemberSignature Language="F#" Value="abstract member CheckSecuritySettings : System.Security.SecurityState -&gt; bool&#xA;override this.CheckSecuritySettings : System.Security.SecurityState -&gt; bool" Usage="appDomainManager.CheckSecuritySettings state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.SecurityState" />
      </Parameters>
      <Docs>
        <param name="state">Podklasa <see cref="T:System.Security.SecurityState" /> , która identyfikuje operację, której stan zabezpieczeń jest żądany.</param>
        <summary>Wskazuje, czy określona operacja jest dozwolona w domenie aplikacji.</summary>
        <returns><see langword="true" />Jeśli host zezwala na wykonanie operacji określonej przez <paramref name="state" /> program w domenie aplikacji; w przeciwnym razie,. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja tej metody zwraca `false`.  
  
 Ta metoda jest wywoływana w przypadku <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType> wywołania metody w celu zwiększenia limitu przydziału magazynu izolowanego. Aplikacja, która hostuje środowisko uruchomieniowe języka wspólnego (CLR), <xref:System.AppDomainManager.CheckSecuritySettings%2A> może przesłonić metodę, aby wykonać <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> decyzje dotyczące zasad na <xref:System.Security.SecurityState>podstawie obiektu (który dziedziczy), a następnie zezwolić na zwiększenie lub go zapobiec. Na przykład host może monitować użytkownika końcowego o zatwierdzenie lub odrzucenie żądania zwiększenia limitu przydziału. Implementacja <xref:System.AppDomainManager.CheckSecuritySettings%2A> hosta powinna wziąć pod uwagę możliwość ataków typu "odmowa usługi". Na przykład powinien monitować użytkownika tylko wtedy, gdy metoda jest wywoływana z zdarzenia zainicjowanego przez użytkownika, takiego jak kliknięcie przycisku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public virtual AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDomain (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain&#xA;override this.CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="appDomainManager.CreateDomain (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">Przyjazna nazwa domeny.</param>
        <param name="securityInfo">Obiekt, który zawiera dowody zamapowane za pomocą zasad zabezpieczeń w celu ustanowienia zestawu uprawnień dla górnego stosu.</param>
        <param name="appDomainInfo">Obiekt, który zawiera informacje o inicjalizacji domeny aplikacji.</param>
        <summary>Zwraca nową lub istniejącą domenę aplikacji.</summary>
        <returns>Nowa lub Istniejąca domena aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjazna nazwa określona przez `friendlyName` parametr może być wyświetlana w interfejsie użytkownika w celu identyfikowania domeny. Aby uzyskać więcej informacji, zobacz <xref:System.AppDomain.FriendlyName%2A> właściwość.  
  
 Metoda Domyślna <xref:System.AppDomainManager.CreateDomain%2A> wywołuje metodę chronioną <xref:System.AppDomainManager.CreateDomainHelper%2A> w celu utworzenia <xref:System.AppDomain>. Zastąpienia tej metody nie muszą wywoływać metody, <xref:System.AppDomainManager.CreateDomainHelper%2A> ale mogą zwracać istniejącą domenę.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Gdy dziedziczysz z <see cref="T:System.AppDomainManager" /> klasy i <see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> zastąpisz metodę, możesz wykonać niestandardowe działania <see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> inicjowania domeny aplikacji przed wywołaniem metody lub w ogóle nie wywoływać metody pomocnika.  Na przykład można zmodyfikować dowody przesłane w ramach <paramref name="securityInfo" />programu, zaktualizować pola skojarzone <see cref="T:System.AppDomainSetup" />lub ponownie użyć domeny wyjściowej.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDomainHelper">
      <MemberSignature Language="C#" Value="protected static AppDomain CreateDomainHelper (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.AppDomain CreateDomainHelper(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateDomainHelper (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static AppDomain ^ CreateDomainHelper(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="static member CreateDomainHelper : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="System.AppDomainManager.CreateDomainHelper (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">Przyjazna nazwa domeny.</param>
        <param name="securityInfo">Obiekt, który zawiera dowody zamapowane za pomocą zasad zabezpieczeń w celu ustanowienia zestawu uprawnień dla górnego stosu.</param>
        <param name="appDomainInfo">Obiekt, który zawiera informacje o inicjalizacji domeny aplikacji.</param>
        <summary>Udostępnia metodę pomocnika do tworzenia domeny aplikacji.</summary>
        <returns>Nowo utworzona domena aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta zabezpieczona Metoda pomagająca obsługuje tworzenie nowej domeny aplikacji.  
  
 Ta przyjazna nazwa określona przez `friendlyName` parametr może być wyświetlana w interfejsie użytkownika w celu identyfikowania domeny. Aby uzyskać więcej informacji, zobacz <xref:System.AppDomain.FriendlyName%2A> właściwość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="friendlyName" />jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do kontrolowania dowodów. Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EntryAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly EntryAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly EntryAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.EntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ EntryAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryAssembly : System.Reflection.Assembly" Usage="System.AppDomainManager.EntryAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zestaw wpisów dla aplikacji.</summary>
        <value>Zestaw wpisu dla aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli aplikacja jest aplikacją aktywowaną w manifeście, zestaw wpisu jest określany na podstawie manifestu aplikacji. Jeśli aplikacja nie jest aktywowana w manifeście, zestaw wpisu jest plikiem wykonywalnym procesu w domyślnej domenie aplikacji. W innych domenach aplikacji zestaw wejściowy jest pierwszym plikiem wykonywalnym, który został wykonany <xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType> przez metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostExecutionContextManager">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContextManager HostExecutionContextManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.HostExecutionContextManager HostExecutionContextManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostExecutionContextManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostExecutionContextManager As HostExecutionContextManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::HostExecutionContextManager ^ HostExecutionContextManager { System::Threading::HostExecutionContextManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostExecutionContextManager : System.Threading.HostExecutionContextManager" Usage="System.AppDomainManager.HostExecutionContextManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContextManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera Menedżera kontekstu wykonywania hosta, który zarządza przepływem kontekstu wykonania.</summary>
        <value>Menedżer kontekstu wykonywania hosta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia hostowi określenie <xref:System.Threading.HostExecutionContextManager> , które może uczestniczyć w przepływie kontekstu wykonywania w wywołaniach asynchronicznych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostSecurityManager">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManager HostSecurityManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.HostSecurityManager HostSecurityManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostSecurityManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostSecurityManager As HostSecurityManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManager ^ HostSecurityManager { System::Security::HostSecurityManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostSecurityManager : System.Security.HostSecurityManager" Usage="System.AppDomainManager.HostSecurityManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera Menedżera zabezpieczeń hosta, który uczestniczy w decyzjach o zabezpieczeniach dla domeny aplikacji.</summary>
        <value>Menedżer zabezpieczeń hosta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia hostowi zapewnienie <xref:System.Security.HostSecurityManager> udziału w decyzjach o zabezpieczeniach dla domeny aplikacji.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano przesłonięcie <xref:System.AppDomainManager.HostSecurityManager%2A> właściwości dla niestandardowego Menedżera domeny aplikacji. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.AppDomainManager> klasy.  
  
 [!code-csharp[System.AppDomainManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#3)]
 [!code-vb[System.AppDomainManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationFlags">
      <MemberSignature Language="C#" Value="public AppDomainManagerInitializationOptions InitializationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AppDomainManagerInitializationOptions InitializationFlags" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.InitializationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property InitializationFlags As AppDomainManagerInitializationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainManagerInitializationOptions InitializationFlags { AppDomainManagerInitializationOptions get(); void set(AppDomainManagerInitializationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.InitializationFlags : AppDomainManagerInitializationOptions with get, set" Usage="System.AppDomainManager.InitializationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainManagerInitializationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera flagi inicjalizacji dla niestandardowych menedżerów domeny aplikacji.</summary>
        <value>Bitowa kombinacja wartości wyliczenia opisujących akcję inicjalizacji do wykonania. Wartość domyślna to <see cref="F:System.AppDomainManagerInitializationOptions.None" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewDomain">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewDomain (AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewDomain(class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewDomain (appDomainInfo As AppDomainSetup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewDomain(AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewDomain : AppDomainSetup -&gt; unit&#xA;override this.InitializeNewDomain : AppDomainSetup -&gt; unit" Usage="appDomainManager.InitializeNewDomain appDomainInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="appDomainInfo">Obiekt, który zawiera informacje o inicjalizacji domeny aplikacji.</param>
        <summary>Inicjuje nową domenę aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Nie należy używać tej metody do inicjowania domeny aplikacji w ASP.NET. W programie ASP.NET konfiguracja musi być obsługiwana przez hosta. Jeśli ta metoda zostanie użyta do zainicjowania domeny aplikacji, Host zgłasza <xref:System.InvalidOperationException> , gdy zostanie podjęta próba zainicjowania domeny aplikacji. Komunikat o wyjątku wskazuje, że inicjalizacja już się nie poszło.  
  
 Ta metoda jest wywoływana natychmiast po konstruktorze. Domyślna <xref:System.AppDomainManager.InitializeNewDomain%2A> implementacja nie robi nic.  Implementacja niestandardowa może skonfigurować wewnętrzne klasy i Delegaty, skonfigurować interfejs z niezarządzanym interfejsem hosta lub skonfigurować programy obsługi zdarzeń dla nowego <xref:System.AppDomain>.  
  
 Ponadto, w przypadku aktywacji dodatków, implementacja niestandardowa może identyfikować bieżącą <xref:System.AppDomain> jako domenę aplikacji docelowej.  
  
 Począwszy od programu [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], można użyć tej metody do piaskownicy domyślnej domeny aplikacji podczas uruchamiania aplikacji lub do modyfikacji piaskownicy nowej domeny aplikacji. W <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> tym celu należy dostosować właściwości i <xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A> w <xref:System.Security.Policy.ApplicationTrust> <xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType> obiekcie, który jest przypisany do właściwości ,przedzainicjowaniemdomenyaplikacji.`appDomainInfo`  
  
> [!NOTE]
>  Tylko `FullTrust`przyznanych zestawów, takich jak zestawy w globalnej pamięci podręcznej `fullTrustAssemblies` zestawów lub <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> zidentyfikowane jako w metodzie, <xref:System.AppDomainManager.%23ctor%2A> <xref:System.AppDomainManager.InitializeNewDomain%2A> można załadować w konstruktorze i metodzie.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano przesłonięcie <xref:System.AppDomainManager.InitializeNewDomain%2A> metody dla niestandardowego Menedżera domeny aplikacji. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.AppDomainManager> klasy.  
  
 [!code-csharp[System.AppDomainManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#2)]
 [!code-vb[System.AppDomainManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
