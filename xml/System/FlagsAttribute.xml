<Type Name="FlagsAttribute" FullName="System.FlagsAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="96fd7d37809a311f589d8aebd6325fa8e619f81a" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52240748" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FlagsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FlagsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.FlagsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class FlagsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FlagsAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type FlagsAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Enum, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cdd4d-101">Wskazuje, że wyliczenie może być traktowana jako pole bitowe; oznacza to, że zestaw flag.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cdd4d-101">Indicates that an enumeration can be treated as a bit field; that is, a set of flags.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd4d-102">Pola bitowe są zwykle używane dla list elementów, które mogą wystąpić w połączeniu, natomiast stałych wyliczenia są zwykle używane dla list elementów wzajemnie się wykluczają.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-102">Bit fields are generally used for lists of elements that might occur in combination, whereas enumeration constants are generally used for lists of mutually exclusive elements.</span></span> <span data-ttu-id="cdd4d-103">W związku z tym pola bitowe są przeznaczone do można łączyć za pomocą bitowej operacji lub do generowania nienazwanych wartości stałych wyliczeniowych nie są.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-103">Therefore, bit fields are designed to be combined with a bitwise OR operation to generate unnamed values, whereas enumerated constants are not.</span></span> <span data-ttu-id="cdd4d-104">Języki różnią się w ich użyciem pól bitowych w porównaniu do stałych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-104">Languages vary in their use of bit fields compared to enumeration constants.</span></span>  
  
## <a name="attributes-of-the-flagsattribute"></a><span data-ttu-id="cdd4d-105">Atrybuty FlagsAttribute</span><span class="sxs-lookup"><span data-stu-id="cdd4d-105">Attributes of the FlagsAttribute</span></span>  
 <span data-ttu-id="cdd4d-106"><xref:System.AttributeUsageAttribute> jest stosowany do tej klasy, a jego <xref:System.AttributeUsageAttribute.Inherited%2A> właściwość określa `false`.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-106"><xref:System.AttributeUsageAttribute> is applied to this class, and its <xref:System.AttributeUsageAttribute.Inherited%2A> property specifies `false`.</span></span> <span data-ttu-id="cdd4d-107">Ten atrybut można stosować tylko do wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-107">This attribute can only be applied to enumerations.</span></span>  
  
## <a name="guidelines-for-flagsattribute-and-enum"></a><span data-ttu-id="cdd4d-108">Wytyczne dotyczące FlagsAttribute i wyliczenia</span><span class="sxs-lookup"><span data-stu-id="cdd4d-108">Guidelines for FlagsAttribute and Enum</span></span>  
  
-   <span data-ttu-id="cdd4d-109">Użyj <xref:System.FlagsAttribute> atrybutu niestandardowego wyliczania tylko wtedy, gdy operacja bitowa (AND, OR wyłączne lub) do wykonania na podstawie wartości liczbowej.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-109">Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.</span></span>  
  
-   <span data-ttu-id="cdd4d-110">Definiowanie stałych wyliczenia w potęgi liczby dwa, oznacza to, 1, 2, 4, 8 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-110">Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on.</span></span> <span data-ttu-id="cdd4d-111">Oznacza to, że poszczególne flagi w stałych wyliczenia połączone nie pokrywają się.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-111">This means the individual flags in combined enumeration constants do not overlap.</span></span>  
  
-   <span data-ttu-id="cdd4d-112">Należy rozważyć utworzenie Stała wyliczeniowa dla często używanych flagi kombinacji.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-112">Consider creating an enumerated constant for commonly used flag combinations.</span></span> <span data-ttu-id="cdd4d-113">Na przykład, jeśli masz wyliczenia używane dla operacji We/Wy pliku zawierający stałych wyliczeniowych `Read = 1` i `Write = 2`, należy rozważyć utworzenie Stała wyliczeniowa `ReadWrite = Read OR Write`, która łączy w sobie `Read` i `Write` flagi.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-113">For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags.</span></span> <span data-ttu-id="cdd4d-114">Ponadto operacja bitowa lub używane do łączenia flagi może zostać uznane za zaawansowanych koncepcji, w niektórych sytuacjach, które nie powinny być wymagane dla prostych zadań.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-114">In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.</span></span>  
  
-   <span data-ttu-id="cdd4d-115">Należy zachować ostrożność, jeśli zdefiniować liczbę ujemną jako stała wyliczenia flag, ponieważ wielu pozycji flagi może być ustawiony na 1, które mogą sprawić, że kod jest mylące i Zachęć błędy kodowania.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-115">Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.</span></span>  
  
-   <span data-ttu-id="cdd4d-116">Wygodny sposób, aby sprawdzić, czy ustawiono flagę w wartość liczbową, jest do wykonywania operacji bitowej i między wartością numeryczną i Stała wyliczeniowa flagę, która ustawia wszystkie bity w wartości liczbowych na zero, które nie odpowiadają flagę , następnie sprawdź, czy wynikiem tej operacji jest równa Stała wyliczeniowa flagi.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-116">A convenient way to test whether a flag is set in a numeric value is to perform a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, then test whether the result of that operation is equal to the flag enumerated constant.</span></span>  
  
-   <span data-ttu-id="cdd4d-117">Użyj `None` uprzednie Nazwa flagi stałą, której wartość jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-117">Use `None` as the name of the flag enumerated constant whose value is zero.</span></span> <span data-ttu-id="cdd4d-118">Nie można użyć `None` Stała wyliczeniowa w operacji bitowej i do testowania dla flagi, ponieważ zawsze wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-118">You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero.</span></span> <span data-ttu-id="cdd4d-119">Jednak można wykonać logiczny nie bitowe, porównanie wartości liczbowej i `None` Stała wyliczeniowa w celu ustalenia, czy wszystkie bity w wartości liczbowej są ustawiane.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-119">However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set.</span></span>  
  
     <span data-ttu-id="cdd4d-120">Jeśli tworzysz do wyliczenia wartości, zamiast wyliczenia flag, warto nadal tworzyć `None` Stała wyliczeniowa.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-120">If you create a value enumeration instead of a flags enumeration, it is still worthwhile to create a `None` enumerated constant.</span></span> <span data-ttu-id="cdd4d-121">Przyczyną jest to, że domyślnie pamięć używana na potrzeby wyliczenia jest inicjowane od zera przez środowisko uruchomieniowe języka wspólnego.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-121">The reason is that by default the memory used for the enumeration is initialized to zero by the common language runtime.</span></span> <span data-ttu-id="cdd4d-122">W związku z tym jeżeli nie zdefiniujesz stałą, której wartość wynosi zero, wyliczenia zawiera niedozwoloną wartość, podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-122">Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.</span></span>  
  
     <span data-ttu-id="cdd4d-123">W przypadku przypadek domyślny oczywiste, których Twoja aplikacja potrzebuje do reprezentowania, należy wziąć pod uwagę przy użyciu Stała wyliczeniowa, którego wartość jest równa zero do reprezentowania domyślnie.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-123">If there is an obvious default case your application needs to represent, consider using an enumerated constant whose value is zero to represent the default.</span></span> <span data-ttu-id="cdd4d-124">Jeśli żaden przypadek domyślny, należy rozważyć użycie Stała wyliczeniowa, którego wartością jest zero oznacza przypadek, który nie jest reprezentowany przez żadnego innymi stałych wyliczeniowych.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-124">If there is no default case, consider using an enumerated constant whose value is zero that means the case that is not represented by any of the other enumerated constants.</span></span>  
  
-   <span data-ttu-id="cdd4d-125">Definiuje wartości wyliczenia wyłącznie w celu utworzenia duplikatów stan samego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-125">Do not define an enumeration value solely to mirror the state of the enumeration itself.</span></span> <span data-ttu-id="cdd4d-126">Na przykład nie definiują Stała wyliczeniowa, jedynie oznaczający koniec wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-126">For example, do not define an enumerated constant that merely marks the end of the enumeration.</span></span> <span data-ttu-id="cdd4d-127">Jeśli zachodzi potrzeba określenia ostatnie wartości wyliczenia, sprawdź, czy wartości jawnie.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-127">If you need to determine the last value of the enumeration, check for that value explicitly.</span></span> <span data-ttu-id="cdd4d-128">Ponadto można wykonać sprawdzania zakresu Stała wyliczeniowa imię i nazwisko, jeśli wszystkie wartości z zakresu są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-128">In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.</span></span>  
  
-   <span data-ttu-id="cdd4d-129">Nie określaj stałych wyliczeniowych, które są zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-129">Do not specify enumerated constants that are reserved for future use.</span></span>  
  
-   <span data-ttu-id="cdd4d-130">Podczas definiowania metody lub właściwości, która przyjmuje Stała wyliczeniowa jako wartość, należy wziąć pod uwagę sprawdzania poprawności wartości.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-130">When you define a method or property that takes an enumerated constant as a value, consider validating the value.</span></span> <span data-ttu-id="cdd4d-131">Przyczyną jest to, czy można rzutować wartość liczbową na typ wyliczeniowy nawet, jeśli nie zdefiniowano wartości numerycznych w wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-131">The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdd4d-132">Poniższy przykład ilustruje użycie `FlagsAttribute` atrybutu i zawiera efekt <xref:System.Enum.ToString%2A> metodę stosowania `FlagsAttribute` na <xref:System.Enum> deklaracji.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-132">The following example illustrates the use of the `FlagsAttribute` attribute and shows the effect on the <xref:System.Enum.ToString%2A> method of using `FlagsAttribute` on an <xref:System.Enum> declaration.</span></span>  
  
 [!code-cpp[System.FlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.FlagsAttribute/CPP/flags.cpp#1)]
 [!code-csharp[System.FlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.FlagsAttribute/CS/flags.cs#1)]
 [!code-vb[System.FlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.FlagsAttribute/VB/flags.vb#1)]  
  
 <span data-ttu-id="cdd4d-133">W poniższym przykładzie zdefiniowano dwa wyliczenia dotyczące kolorów `SingleHue` i `MultiHue`.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-133">The following example defines two color-related enumerations, `SingleHue` and `MultiHue`.</span></span> <span data-ttu-id="cdd4d-134">Ten ostatni ma `FlagsAttribute` atrybutu; pierwsza nie.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-134">The latter has the `FlagsAttribute` attribute; the former does not.</span></span> <span data-ttu-id="cdd4d-135">W przykładzie pokazano różnice w zachowaniu, gdy zakres liczb całkowitych, łącznie z liczb całkowitych nie reprezentujących wartości podstawowym typem wyliczenia są rzutowane na typ wyliczeniowy i ich ciągów reprezentujących wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-135">The example shows the difference in behavior when a range of integers, including integers that do not represent underlying values of the enumeration type, are cast to the enumeration type and their string representations displayed.</span></span>   <span data-ttu-id="cdd4d-136">Na przykład, należy pamiętać, że 3 nie może być reprezentowany jako `SingleHue` wartości, ponieważ 3 nie jest podstawową wartość dowolnego `SingleHue` elementu członkowskiego, natomiast `FlagsAttribute` atrybutu sprawia, że możliwe do reprezentowania 3 jako `MultiHue` wartość `Black, Red`.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-136">For example, note that 3 cannot be represented as a `SingleHue` value because 3 is not the underlying value of any `SingleHue` member, whereas the `FlagsAttribute` attribute makes it possible to represent 3 as a `MultiHue` value of `Black, Red`.</span></span>  
  
 [!code-cpp[System.FlagsAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.FlagsAttribute/CPP/flags1.cpp#2)]
 [!code-csharp[System.FlagsAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.FlagsAttribute/CS/flags1.cs#2)]
 [!code-vb[System.FlagsAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.FlagsAttribute/VB/flags1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlagsAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FlagsAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlagsAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cdd4d-137">Inicjuje nowe wystąpienie klasy <see cref="T:System.FlagsAttribute" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cdd4d-137">Initializes a new instance of the <see cref="T:System.FlagsAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cdd4d-138">W poniższym przykładzie zdefiniowano `PhoneService` wyliczenie, które reprezentuje formy komunikacji, dostarczone przez firmę telefonu.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-138">The following example defines a `PhoneService` enumeration that represents forms of communication provided by a telephone company.</span></span> <span data-ttu-id="cdd4d-139">Inicjuje trzy zmienne reprezentujący usług do trzech różnych gospodarstw domowych i wskazuje, które gospodarstw domowych mają żadna usługa domowych, które mają tylko usługi telefonu komórkowego i które gospodarstw domowych telefonu komórkowego i ziemi usługi wiersza.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-139">It initializes three variables representing the service provided to three different households, and then indicates which households have no service, which households have only cell phone service, and which households have both cell phone and land line service.</span></span> <span data-ttu-id="cdd4d-140">Na koniec niejawnie wywołuje <xref:System.Enum.ToString%28System.String%29?displayProperty=nameWithType> metodę, aby wyświetlić typy usługę świadczoną na każdym gospodarstwo domowe.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-140">Finally, it implicitly calls the <xref:System.Enum.ToString%28System.String%29?displayProperty=nameWithType> method to display the types of service provided to each household.</span></span>  
  
 [!code-cpp[System.FlagsAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.FlagsAttribute/CPP/flags1.cpp#2)]
 [!code-csharp[System.FlagsAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.FlagsAttribute/CS/flags1.cs#2)]
 [!code-vb[System.FlagsAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.FlagsAttribute/VB/flags1.vb#2)]  
  
 <span data-ttu-id="cdd4d-141">Poniższy przykład ilustruje użycie `FlagsAttribute` atrybutu i zawiera efekt <xref:System.Enum.ToString%2A> metodę stosowania `FlagsAttribute` na <xref:System.Enum> deklaracji.</span><span class="sxs-lookup"><span data-stu-id="cdd4d-141">The following example illustrates the use of the `FlagsAttribute` attribute and shows the effect on the <xref:System.Enum.ToString%2A> method of using `FlagsAttribute` on an <xref:System.Enum> declaration.</span></span>  
  
 [!code-cpp[System.FlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.FlagsAttribute/CPP/flags.cpp#1)]
 [!code-csharp[System.FlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.FlagsAttribute/CS/flags.cs#1)]
 [!code-vb[System.FlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.FlagsAttribute/VB/flags.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>