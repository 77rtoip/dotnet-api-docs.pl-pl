<Type Name="ParamArrayAttribute" FullName="System.ParamArrayAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4591cdeca85a42a2d66c2ab3c918c0010c3eac5f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69405407" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParamArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParamArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ParamArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParamArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParamArrayAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ParamArrayAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wskazuje, że metoda będzie zezwalać na zmienną liczbę argumentów w wywołaniu. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ParamArrayAttribute> Wskazuje, że parametr metody jest tablicą parametrów. Tablica parametrów umożliwia określenie nieznanej liczby argumentów. Tablica parametrów musi być ostatnim parametrem na liście parametrów formalnych i musi być tablicą z jednym wymiarem. Gdy metoda jest wywoływana, tablica parametrów zezwala na określenie argumentów metody na jeden z dwóch sposobów:  
  
-   Jako pojedyncze wyrażenie typu, który jest niejawnie konwertowany do typu tablicy parametrów. Tablica parametrów działa jako parametr wartości.  
  
-   Jako zero lub więcej argumentów, gdzie każdy argument jest wyrażeniem typu, który jest niejawnie konwertowany na typ elementu tablicy parametrów.  
  
 W przykładzie w następnej sekcji przedstawiono obie konwencje wywoływania.  
  
> [!NOTE]
>  Zazwyczaj nie jest używana bezpośrednio w kodzie. <xref:System.ParamArrayAttribute> Zamiast tego poszczególne słowa kluczowe języka, takie `ParamArray` jak w Visual Basic `params` i C#w, <xref:System.ParamArrayAttribute> są używane jako otoki dla klasy. W niektórych językach, takich C#jak, może być również wymagane użycie słowa kluczowego language i Zabroń używania <xref:System.ParamArrayAttribute>programu.  
  
 Podczas rozpoznawania przeciążenia, gdy kompilatory obsługujące tablice parametrów napotykają Przeciążenie metody, które nie istnieje, ale ma jeden mniej parametrów niż Przeciążenie zawierające tablicę parametrów, zastąpią metodę przeciążeniem, który zawiera Tablica parametrów. Na przykład wywołanie `String.Split()` metody wystąpienia (która nie istnieje <xref:System.String> w klasie) jest rozpoznawane <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> jako wywołanie metody. Kompilator przekaże także pustą tablicę wymaganego typu do metody. Oznacza to, że metoda musi zawsze być przygotowana do obsługi tablicy, której długość wynosi zero, gdy przetwarza elementy w tablicy parametrów. Przykład stanowi ilustrację.  
  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano `Temperature` klasę, która `Display` zawiera metodę, która jest przeznaczona do wyświetlania jednej lub więcej sformatowanych wartości temperatury. Metoda ma jeden parametr, `formats`który jest zdefiniowany jako tablica parametrów.  
  
 [!code-csharp[System.ParamArrayAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#1)]
 [!code-vb[System.ParamArrayAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#1)]  
  
 Poniższy przykład ilustruje trzy różne wywołania `Temperature.Display` metody. W pierwszej metodzie jest przenoszona tablica ciągów formatu. W drugim Metoda jest przenoszona cztery poszczególne ciągi formatowania jako argumenty. W trzecim Metoda jest wywoływana bez argumentów. Jak ilustruje dane wyjściowe z przykładu, Visual Basic i C# kompilatory tłumaczą ten element na wywołanie `Display` metody z pustą tablicą ciągów.  
  
 [!code-csharp[System.ParamArrayAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#2)]
 [!code-vb[System.ParamArrayAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <related type="Article" href="~/docs/standard/attributes/index.md">Rozszerzanie metadanych za pomocą atrybutów</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParamArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ParamArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParamArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.ParamArrayAttribute" /> klasy z właściwościami domyślnymi.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
