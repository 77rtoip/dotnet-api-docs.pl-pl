<Type Name="ParamArrayAttribute" FullName="System.ParamArrayAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c1f68dc463121534a6f7c172d51f0af45a937e2" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37729268" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ParamArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParamArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ParamArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParamArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParamArrayAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ParamArrayAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wskazuje, że metoda umożliwi zmienną liczbę argumentów swojego wywołania. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ParamArrayAttribute> Wskazuje, że parametr metody jest tablicą parametrów. Tablica parametrów zezwala na określanie nieznany liczbę argumentów. Tablica parametrów musi być ostatnim parametrem formalnej listy parametrów i musi być tablicy jednowymiarowej. Gdy metoda jest wywoływana, tablicy parametrów zezwala na argumenty do metody, należy określić na dwa sposoby:  
  
-   Jako pojedyncze wyrażenie typu, który jest niejawnie konwertowany na typ tablicy parametrów. Funkcje tablicy parametrów jako parametru wartości.  
  
-   Jako zera lub więcej argumentów, gdzie każdy argument jest wyrażenie typu, który jest niejawnie przekonwertować na typ elementu tablicy parametrów.  
  
 W przykładzie w następnej sekcji pokazano oba konwencji wywoływania.  
  
> [!NOTE]
>  Zazwyczaj <xref:System.ParamArrayAttribute> nieużywane bezpośrednio w kodzie. Zamiast tego konkretnego języka słów kluczowych, takich jak `ParamArray` w języku Visual Basic i `params` w języku C# są używane jako otoki <xref:System.ParamArrayAttribute> klasy. Niektóre języki, takich jak C# może nawet wymagają użycia słowa kluczowego języka i zabraniają używania <xref:System.ParamArrayAttribute>.  
  
 Rozpoznanie przeciążenia, gdy kompilatory, które obsługują parameter — tablice wystąpi przeciążenie metody, która nie istnieje, ale ma jeden parametr mniej niż przeciążenie obejmujące tablicą parametrów one spowoduje zastąpienie metody przeciążenia, które zawiera Tablica parametrów. Na przykład, wywołanie `String.Split()` metodę wystąpienia (który nie istnieje w <xref:System.String> klasy) został rozwiązany jako wywołanie <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> metody. Kompilator będzie również przekazywać pusta tablica typu wymagane do metody. Oznacza to, że metoda zawsze musi być przygotowana do obsługi tablicę, której długość wynosi zero, podczas przetwarzania elementów w tablicy parametrów. Przykład stanowi ilustrację.  
  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano `Temperature` klasy, która obejmuje `Display` metody, która jest przeznaczona do wyświetlania jeden lub więcej wartości temperatury sformatowany. Metoda ma jeden parametr `formats`, która została zdefiniowana jako tablicy parametrów.  
  
 [!code-csharp[System.ParamArrayAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#1)]
 [!code-vb[System.ParamArrayAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#1)]  
  
 W poniższym przykładzie pokazano trzech różnych wywołań `Temperature.Display` metody. W pierwszym metoda jest przekazywana tablicę ciągów formatu. W drugim metoda jest przekazywana cztery ciągi formatu poszczególnych jako argumenty. W trzecim metoda jest wywoływana bez argumentów. Tak jak pokazano w danych wyjściowych z przykładu, kompilatory języków Visual Basic i C# przekłada się to na wywołanie `Display` metody z pustą tablicę ciągów.  
  
 [!code-csharp[System.ParamArrayAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#2)]
 [!code-vb[System.ParamArrayAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParamArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ParamArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParamArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ParamArrayAttribute" /> klasy przy użyciu domyślnej właściwości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>