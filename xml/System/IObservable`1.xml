<Type Name="IObservable&lt;T&gt;" FullName="System.IObservable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="273ff4990891b6ccd268f3e0d66f89a6f1fa9839" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36430263" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IObservable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObservable`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObservable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObservable(Of Out T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObservable" />
  <TypeSignature Language="F#" Value="type IObservable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Obiekt, który zawiera informacje powiadomienia.</typeparam>
    <summary>Definiuje dostawcę dla powiadomień wypychanych na podstawie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IObserver%601> i <xref:System.IObservable%601> interfejsów mechanizm uogólnionego oparta powiadomienia, znany także jako wzorzec projektowy obserwatora. <xref:System.IObservable%601> Interfejs reprezentuje klasę, która wysyła powiadomienia (dostawca); <xref:System.IObserver%601> interfejs reprezentuje klasę, która otrzymuje je (obserwatora). `T` reprezentuje klasę, która zawiera informacje powiadomienia. W niektórych powiadomienia z wypychania <xref:System.IObserver%601> implementacji i `T` może reprezentować tego samego typu.  
  
 Dostawca musi implementować jedną metodę <xref:System.IObservable%601.Subscribe%2A>, oznacza to, że obserwator chce otrzymywać powiadomień wypychanych na podstawie. Obiekty wywołujące do metody Przekaż wystąpienie obserwatora. Metoda ta zwraca <xref:System.IDisposable> implementację, która umożliwia obserwatorów anulować powiadomienia w dowolnym momencie przed dostawcę została zatrzymana, wysyłając.  
  
 W dowolnym momencie danego dostawcy może mieć zero, jeden lub wiele obserwatorów. Dostawca jest odpowiedzialny za do przechowywania odwołań do obserwatorów i zapewnienie, że są prawidłowe przed wysłaniem powiadomienia. <xref:System.IObservable%601> Interfejsu nie należy czynić żadnych założeń o liczbie obserwatora lub kolejność, w której powiadomienia są wysyłane.  
  
 Dostawca wysyła następujące trzy rodzaje powiadomienia obserwatora, wywołując <xref:System.IObserver%601> metody:  
  
-   Bieżące dane. Dostawca może wywołać <xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType> metodę, aby przekazać obserwatora `T` obiekt, który ma bieżące dane, zmienione dane lub nowe dane.  
  
-   Warunek błędu. Dostawca może wywołać <xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType> metodę, aby powiadomić obserwatora, który wystąpił jakiegoś warunku błędu.  
  
-   Żadne dalsze dane. Dostawca może wywołać <xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType> metodę, aby powiadomić obserwatora, że zakończył wysyłanie powiadomień.  
  
   
  
## Examples  
 Poniższy przykład ilustruje wzorzec projektowy obserwatora. Definiuje `Location` klasy, który zawiera informacje o długości i szerokości geograficznej.  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 `LocationTracker` Klasa udostępnia <xref:System.IObservable%601> implementacji. Jego `TrackLocation` metody jest przekazywana dopuszczający wartości null `Location` obiekt zawierający dane szerokości i długości geograficznej. Jeśli `Location` wartość nie jest `null`, `TrackLocation` wywołania metody <xref:System.IObserver%601.OnNext%2A> metoda każdego obserwatora.  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 Jeśli `Location` wartość `null`, `TrackLocation` metoda tworzy wystąpienie `LocationUnknownException` obiektu, który jest pokazany w poniższym przykładzie. Następnie wywołuje każdego obserwatora <xref:System.IObserver%601.OnError%2A> metody i przekazuje je `LocationUnknownException` obiektu. Należy pamiętać, że `LocationUnknownException` pochodzi od klasy <xref:System.Exception>, ale nie dodaje żadnych nowych elementów członkowskich.  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 Obserwatorzy rejestracji w celu otrzymywania powiadomień z `TrackLocation` obiektu przez wywołanie jego <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> metody, która przypisuje odwołanie do obiektu obserwatora jako prywatne ogólnego <xref:System.Collections.Generic.List%601> obiektu. Metoda ta zwraca `Unsubscriber` obiektu, który jest <xref:System.IDisposable> implementację, która umożliwia obserwatorów zrezygnować z otrzymywania powiadomień. `LocationTracker` Zawiera również klasy `EndTransmission` metody. Jeśli żadne dalsze dane lokalizacji są dostępne, metoda wywołuje każdego obserwatora <xref:System.IObserver%601.OnCompleted%2A> metody i następnie czyści wewnętrzną listę obserwatorów.  
  
 W tym przykładzie `LocationReporter` klasa udostępnia <xref:System.IObserver%601> implementacji. Wyświetla informacje o bieżącej lokalizacji do konsoli. Jego Konstruktor obejmuje `name` parametr, który umożliwia `LocationReporter` wystąpienia do identyfikacji w danych wyjściowych ciąg. Obejmuje również `Subscribe` metody, która zawija wywołanie do dostawcy <xref:System.IObservable%601.Subscribe%2A> metody. Dzięki temu metodę, aby przypisać zwracanego <xref:System.IDisposable> odwołanie do zmiennej prywatnej. `LocationReporter` Zawiera również klasy `Unsubscribe` metody, która wywołuje <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> metody obiektu, który jest zwracany przez <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> metody. Poniższy kod definiuje `LocationReporter` klasy.  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 Poniższy kod tworzy następnie dostawcy i obserwatora.  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObserver`1" />
  </Docs>
  <Members>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;out T&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;!T&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subscribe (observer As IObserver(Of Out T)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Subscribe(IObserver&lt;T&gt; ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : IObserver&lt;'T&gt; -&gt; IDisposable" Usage="iObservable.Subscribe observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="observer">Obiekt, który ma otrzymywać powiadomienia.</param>
        <summary>Powiadamia dostawcę obserwatora ma otrzymywać powiadomienia.</summary>
        <returns>Odwołanie do interfejsu, który umożliwia obserwatorów na zatrzymanie otrzymywania powiadomienia przed dostawcy zostało zakończone, wysyłając.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IObservable%601.Subscribe%2A> Można wywołać metody, aby zarejestrować obserwatora dla powiadomień wypychanych na podstawie. Typowa implementacja metody <xref:System.IObservable%601.Subscribe%2A> metoda wykonuje następujące czynności:  
  
-   Przechowuje odwołania do obserwatora w obiekcie kolekcji, takie jak <xref:System.Collections.Generic.List%601> obiektu.  
  
-   Zwraca odwołanie do <xref:System.IDisposable> interfejsu. Dzięki temu obserwatorów anulować subskrypcję (oznacza to, aby zrezygnować z otrzymywania powiadomień) przed Zakończono wysyłanie je i wywołuje subskrybenta dostawcy <xref:System.IObserver%601.OnCompleted%2A> metody.  
  
 W danym momencie, konkretnego wystąpienia <xref:System.IObservable%601> implementacja jest odpowiedzialny za obsługę wszystkich subskrypcji i powiadamianie wszystkich subskrybentów. Chyba że dokumentacji dla określonego <xref:System.IObservable%601> implementacji wskazuje, w przeciwnym razie obserwatorów należy wprowadzić żadnych założeń dotyczących <xref:System.IObservable%601> implementacji, takich jak kolejność powiadomień, które otrzymają wielu obserwatorów.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.IObservable%601.Subscribe%2A> metody dla aplikacji, która raportuje informacje o długości i szerokości geograficznej. Definiuje <xref:System.Collections.Generic.IList%601> obiekt kolekcji, która przechowuje odwołania do wszystkich obserwatorów. Również zwraca prywatne klasę o nazwie `Unsubscriber` implementującej <xref:System.IDisposable> interfejs i pozwala subskrybentom na zatrzymanie otrzymywania powiadomień o zdarzeniach.  W sekcji przykład <xref:System.IObservable%601> tematu, aby uzyskać kompletny przykład.  
  
 [!code-csharp[System.IObserver.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#13)]
 [!code-vb[System.IObserver.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IObserver`1" />
      </Docs>
    </Member>
  </Members>
</Type>