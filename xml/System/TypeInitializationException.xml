<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeInitializationException.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54e010e0c78c65b529ed1ad5c97ca2f1013dd01bc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e010e0c78c65b529ed1ad5c97ca2f1013dd01bc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.TypeInitializationException">
          <source>The exception that is thrown as a wrapper around the exception thrown by the class initializer.</source>
          <target state="translated">Wyjątek zgłaszany jako otokę wyjątku zgłoszonego przez inicjatora klasy.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.TypeInitializationException">
          <source>This class cannot be inherited.</source>
          <target state="translated">Klasa ta nie może być dziedziczona.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>When a class initializer fails to initialize a type, a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> is created and passed a reference to the exception thrown by the type's class initializer.</source>
          <target state="translated">Gdy inicjator klasy nie można zainicjować typu, <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> jest tworzony i przekazany odwołania do wyjątku zgłoszonego przez typ klasy inicjatora.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.TypeInitializationException&gt;</ph> holds the underlying exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> Właściwość <ph id="ph2">&lt;xref:System.TypeInitializationException&gt;</ph> przechowuje wyjątek.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Typically, the <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception reflects a catastrophic condition (the runtime is unable to instantiate a type) that prevents an application from continuing.</source>
          <target state="translated">Zazwyczaj <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> wyjątek odzwierciedla stan krytyczny (środowisko uruchomieniowe nie może utworzyć wystąpienia typu) który uniemożliwia kontynuowanie.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Most commonly, the <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> is thrown in response to some change in the executing environment of the application.</source>
          <target state="translated">Najczęściej <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> jest zwracany w odpowiedzi na niektóre zmiany w środowisku wykonywania aplikacji.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Consequently, other than possibly for troubleshooting debug code, the exception should not be handled in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">W rezultacie inne niż prawdopodobnie dla Rozwiązywanie problemów z kodem debugowania wyjątek nie obsługi w <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> bloku.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Instead, the cause of the exception should be investigated and eliminated.</source>
          <target state="translated">Zamiast tego przyczyną wyjątku należy zbadać i usunięte.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source><ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> uses the HRESULT COR_E_TYPEINITIALIZATION, which has the value 0x80131534.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> używa COR_E_TYPEINITIALIZATION HRESULT, która ma wartość 0x80131534.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.TypeInitializationException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph>, zobacz <ph id="ph2">&lt;xref:System.TypeInitializationException.%23ctor%2A&gt;</ph> konstruktorów.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The following sections describe some of the situations in which a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception is thrown.</source>
          <target state="translated">W poniższych sekcjach opisano niektóre sytuacje, w których <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> wyjątku.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source><bpt id="p1">[</bpt>Static constructors and the TypeInitializationException exception<ept id="p1">](#Static)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Konstruktory statyczne i typeinitializationexception — wyjątek<ept id="p1">](#Static)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source><bpt id="p1">[</bpt>Regular expression match timeout values<ept id="p1">](#Timeout)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Wartości limitu czasu dopasowanie wyrażenia regularnego<ept id="p1">](#Timeout)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source><bpt id="p1">[</bpt>Calendars and cultural data<ept id="p1">](#Calendars)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Kalendarze i kultury danych.<ept id="p1">](#Calendars)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Static constructors and the TypeInitializationException exception</source>
          <target state="translated">Konstruktory statyczne i typeinitializationexception — wyjątek</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>A static constructor, if one exists, is called automatically by the runtime before creating a new instance of a type.</source>
          <target state="translated">Konstruktor statyczny, jeśli istnieje, jest wywoływana automatycznie przez środowisko wykonawcze przed utworzeniem nowego wystąpienia typu.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Static constructors can be explicitly defined by a developer.</source>
          <target state="translated">Konstruktory statyczne mogą być jawnie zdefiniowany przez dewelopera.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>If a static  constructor is not explicitly defined, compilers automatically create one to initialize any <ph id="ph1">`static`</ph> (in C#) or <ph id="ph2">`Shared`</ph> (in Visual Basic) members of the type.</source>
          <target state="translated">Jeśli w konstruktorze statycznym nie jest jawnie zdefiniowany, kompilatorów automatycznie utworzyć zainicjować żadnego <ph id="ph1">`static`</ph> (w języku C#) lub <ph id="ph2">`Shared`</ph> (w języku Visual Basic) elementy członkowskie tego typu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>For more information on static constructors, see <bpt id="p1">[</bpt>Static Constructors<ept id="p1">](~/docs/csharp/programming-guide/classes-and-structs/static-constructors.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na konstruktorów statycznych zobacz <bpt id="p1">[</bpt>konstruktory statyczne<ept id="p1">](~/docs/csharp/programming-guide/classes-and-structs/static-constructors.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Most commonly, a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception is thrown when a static constructor is unable to instantiate a type.</source>
          <target state="translated">Najczęściej <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> wyjątek jest zgłaszany, gdy Konstruktor statyczny nie może utworzyć wystąpienia typu.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property indicates why the static constructor was unable to instantiate the type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> Właściwość wskazuje na to, dlaczego Konstruktor statyczny nie może utworzyć wystąpienia typu.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Some of the more common causes of a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception are:</source>
          <target state="translated">Niektóre z najczęściej przyczyn <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> wyjątku:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>An unhandled exception in a static constructor</source>
          <target state="translated">Wystąpił nieobsługiwany wyjątek w konstruktorze statycznym</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>If an exception is thrown in a static constructor, that exception is wrapped in a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception, and the type cannot be instantiated.</source>
          <target state="translated">Jeśli w konstruktorze statycznym jest zgłaszany wyjątek, ten wyjątek jest ujęte w <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> wyjątku i typu nie można utworzyć wystąpienia.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>What often makes this exception difficult to troubleshoot is that static constructors are not always explicitly defined in source code.</source>
          <target state="translated">Co często sprawia, że ten wyjątek trudne do rozwiązania to, że konstruktory statyczne nie są zawsze jawnie zdefiniowane w kodzie źródłowym.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>A static constructor exists in a type if:</source>
          <target state="translated">Konstruktor statyczny istnieje w typie, jeśli:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>It has been explicitly defined as a member of a type.</source>
          <target state="translated">Została ona jawnie zdefiniowana jako członka typu.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The type has  <ph id="ph1">`static`</ph> (in C#) or <ph id="ph2">`Shared`</ph> (in Visual Basic) variables that are declared and initialized in a single statement.</source>
          <target state="translated">Typ ma <ph id="ph1">`static`</ph> (w języku C#) lub <ph id="ph2">`Shared`</ph> (w języku Visual Basic) zmiennych, które są zadeklarowane i zainicjować w jednej instrukcji.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>In this case, the language compiler generates a static constructor for the type.</source>
          <target state="translated">W takim przypadku kompilatora języka generuje Konstruktor statyczny dla danego typu.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>You can inspect it by using a utility such as <bpt id="p1">[</bpt>IL Disassembler<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>.</source>
          <target state="translated">Można sprawdzić za pomocą narzędzia, takie jak <bpt id="p1">[</bpt>dezasembler IL<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>For instance, when the C# and VB compilers compile the following example, they generate the IL for a static constructor that is similar to this:</source>
          <target state="translated">Na przykład gdy C# i VB kompilatory skompilować poniższy przykład, generują one IL dla statycznego konstruktora, który jest podobny do poniższego:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception thrown by a compiler-generated static constructor.</source>
          <target state="translated">W poniższym przykładzie przedstawiono <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> wyjątek w konstruktorze statycznym generowane przez kompilator.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The <ph id="ph1">`Example`</ph> class includes a <ph id="ph2">`static`</ph> (in C#) or <ph id="ph3">`Shared`</ph> (in Visual Basic) field of type <ph id="ph4">`TestClass`</ph> that is instantiated by passing a value of 3 to its class constructor.</source>
          <target state="translated"><ph id="ph1">`Example`</ph> Klasa zawiera <ph id="ph2">`static`</ph> (w języku C#) lub <ph id="ph3">`Shared`</ph> (w języku Visual Basic) pole typu <ph id="ph4">`TestClass`</ph> który zostanie uruchomiony przez przekazanie wartości 3 dla jego konstruktora klasy.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>That value, however, is illegal; only values of 0 or 1 are permitted.</source>
          <target state="translated">Jednak ta wartość jest niedozwolone; dozwolone są tylko wartości 0 lub 1.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>As a result, the <ph id="ph1">`TestClass`</ph> class constructor throws an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">W związku z tym <ph id="ph1">`TestClass`</ph> zgłasza konstruktora klasy <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Since this exception is not handled, it is wrapped in a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception.</source>
          <target state="translated">Ponieważ tego wyjątku nie jest obsługiwana, jest ujęte w <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> wyjątku.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Note that the exception message displays information about the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Należy pamiętać, że komunikat o wyjątku przedstawia informacje na temat <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>A missing assembly or data file</source>
          <target state="translated">Brak pliku zestawu lub danych</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>A common cause of a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception is that an assembly or data file that was present in an application's development and test environments is missing from its runtime environment.</source>
          <target state="translated">Częstą przyczyną <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> wyjątku jest plikiem zestawu lub danych, który był obecny w środowisk projektowania i testowania aplikacji i Brak z jego środowiska uruchomieniowego.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>For example, you can compile the following example to an assembly named Missing1a.dll by using the this command-line syntax:</source>
          <target state="translated">Na przykład można skompilować poniższy przykład do zestawu o nazwie Missing1a.dll przy użyciu tej składni wiersza polecenia:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>You can then compile the following example to an executable named Missing1.exe by including a reference to Missing1a.dll:</source>
          <target state="translated">Następnie można skompilować poniższy przykład do pliku wykonywalnego o nazwie Missing1.exe, umieszczając odwołanie do Missing1a.dll:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>However, if you rename, move, or delete Missing1a.dll and run the example, it throws a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception and displays the output shown in the example.</source>
          <target state="translated">Jednak jeśli zmiana nazwy, przenieść, lub usuń Missing1a.dll i uruchomić przykład, zgłasza <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> wyjątek i wyświetla dane wyjściowe pokazano w przykładzie.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Note that the exception message includes information about the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Należy pamiętać, że komunikat o wyjątku zawiera informacje o <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>In this case,  the inner exception is a <ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph> that is thrown because the runtime cannot find the dependent assembly.</source>
          <target state="translated">W tym przypadku jest wewnętrzny wyjątek <ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph> zgłoszono ponieważ środowisko uruchomieniowe nie można znaleźć zestawu zależnego.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>In this example, a <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> exception was thrown because an assembly could not be loaded.</source>
          <target state="translated">W tym przykładzie <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> został zgłoszony wyjątek, ponieważ nie można załadować zestawu.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The exception can also be thrown if a static constructor attempts to open a data file, such as a configuration file, an XML file, or a file containing serialized data, that it cannot find.</source>
          <target state="translated">Również zostać wygenerowany wyjątek, jeśli w konstruktorze statycznym próbuje otworzyć pliku danych, takich jak plik konfiguracji, plik XML lub plik zawierający serializowane dane, które nie można odnaleźć.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Regular expression match timeout values</source>
          <target state="translated">Wartości limitu czasu dopasowanie wyrażenia regularnego</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>You can set the default timeout value for a regular expression pattern matching operation on a per-application domain basis.</source>
          <target state="translated">Można ustawić domyślna wartość limitu czasu dopasowywania domeny dla każdej aplikacji na działanie wzorcem wyrażenia regularnego.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The timeout is defined by a specifying a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property to the  <ph id="ph2">&lt;xref:System.AppDomain.SetData%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Limit czasu jest zdefiniowany przez określenie <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> wartości dla właściwości "REGEX_DEFAULT_MATCH_TIMEOUT" do <ph id="ph2">&lt;xref:System.AppDomain.SetData%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The time interval must be a valid <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> object that is greater than zero and less than approximately 24 days.</source>
          <target state="translated">Interwał czasu musi być prawidłowym <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> obiekt, który jest większa niż zero i mniejsza niż około 24 dni.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>If these requirements are not met, the attempt to set the default timeout value throws an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, which in turn is wrapped in a <ph id="ph2">&lt;xref:System.TypeInitializationException&gt;</ph> exception.</source>
          <target state="translated">Jeśli te wymagania nie są spełnione, próba określenia domyślnej wartości limitu czasu zgłasza <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, z kolei jest który opakowany w <ph id="ph2">&lt;xref:System.TypeInitializationException&gt;</ph> wyjątku.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> that is thrown when the value assigned to the "REGEX_DEFAULT_MATCH_TIMEOUT" property is invalid.</source>
          <target state="translated">W poniższym przykładzie przedstawiono <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph> który jest zgłaszany, gdy wartość przypisana do właściwości "REGEX_DEFAULT_MATCH_TIMEOUT" jest nieprawidłowe.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>To eliminate the exception, set the"REGEX_DEFAULT_MATCH_TIMEOUT" property to a  <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value that is greater than zero and less than approximately 24 days.</source>
          <target state="translated">Aby wyeliminować wyjątek, ustaw właściwość "REGEX_DEFAULT_MATCH_TIMEOUT" <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> wartość, która jest większa niż zero i mniejsza niż około 24 dni.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Calendars and cultural data</source>
          <target state="translated">Kalendarze i kultury danych.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>If you attempt to instantiate a calendar but the runtime is unable to instantiate  the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to that calendar, it throws a <ph id="ph2">&lt;xref:System.TypeInitializationException&gt;</ph> exception.</source>
          <target state="translated">W przypadku próby utworzenia wystąpienia kalendarza, ale środowisko uruchomieniowe nie może utworzyć wystąpienia <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> obiekt, który odpowiada tego kalendarza, zgłasza <ph id="ph2">&lt;xref:System.TypeInitializationException&gt;</ph> wyjątku.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>This exception can be thrown by the following calendar class constructors:</source>
          <target state="translated">Ten wyjątek może zostać wygenerowany przez następujących konstruktorów klasy kalendarza:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The default constructor of the <ph id="ph1">&lt;xref:System.Globalization.JapaneseCalendar&gt;</ph> class.</source>
          <target state="translated">Domyślny konstruktor obiektu <ph id="ph1">&lt;xref:System.Globalization.JapaneseCalendar&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The default constructor of the <ph id="ph1">&lt;xref:System.Globalization.KoreanCalendar&gt;</ph> class.</source>
          <target state="translated">Domyślny konstruktor obiektu <ph id="ph1">&lt;xref:System.Globalization.KoreanCalendar&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>The default constructor of the <ph id="ph1">&lt;xref:System.Globalization.TaiwanCalendar&gt;</ph> class.</source>
          <target state="translated">Domyślny konstruktor obiektu <ph id="ph1">&lt;xref:System.Globalization.TaiwanCalendar&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeInitializationException">
          <source>Since cultural data for these cultures should be available on all systems, you should rarely, if ever, encounter this exception.</source>
          <target state="translated">Ponieważ kultury danych dla tych kultur powinny być dostępne we wszystkich systemach, powinna rzadko, jeśli w ogóle, wystąpią tego wyjątku.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The fully qualified name of the type that fails to initialize.</source>
          <target state="translated">Pełna nazwa typu, który nie uda się zainicjowanie.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Wyjątek, który jest przyczyną bieżącego wyjątku.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Jeśli <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parametr nie jest odwołanie o wartości null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> w języku Visual Basic), bieżący wyjątek jest zgłaszany w <ph id="ph2">&lt;see langword="catch" /&gt;</ph> bloku, który obsługuje wyjątek wewnętrzny.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.TypeInitializationException" /&gt;</ph> class with the default error message, the specified type name, and a reference to the inner exception that is the root cause of this exception.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.TypeInitializationException" /&gt;</ph> z domyślnego komunikatu o błędzie, określonej nazwy typu i odwołanie do wewnętrzny wyjątek, który jest główną przyczynę tego wyjątku.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Wyjątek zgłaszany bezpośrednio w wyniku poprzedniego wyjątku może zawierać odwołania do poprzedniego wyjątku we <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> Właściwość zwraca tę samą wartość, która została przekazana do konstruktora lub odwołanie o wartości null (<ph id="ph2">`Nothing`</ph> w języku Visual Basic) Jeśli <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> właściwości nie dostarcza do konstruktora wartości wyjątku wewnętrznego.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph>.</source>
          <target state="translated">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <ph id="ph1">&lt;xref:System.TypeInitializationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Właściwość</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Wartość</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">Odwołanie do wewnętrznego wyjątku.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The localized error message string.</source>
          <target state="translated">Zlokalizowany ciąg komunikatu o błędzie.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
          <source>The name of the type.</source>
          <target state="translated">Nazwa typu.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> Zawierający dane zserializowanego obiektu dotyczące zgłaszanego wyjątku.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> Zawierający informacje kontekstowe dotyczące źródła lub miejsca docelowego.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.TypeInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the type name and additional exception information.</source>
          <target state="translated">Ustawia <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> obiektu o nazwie typu i dodatkowe informacje o wyjątku.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.TypeInitializationException.TypeName">
          <source>Gets the fully qualified name of the type that fails to initialize.</source>
          <target state="translated">Pobiera w pełni kwalifikowana nazwa typu, który nie uda się zainicjowanie.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.TypeInitializationException.TypeName">
          <source>The fully qualified name of the type that fails to initialize.</source>
          <target state="translated">Pełna nazwa typu, który nie uda się zainicjowanie.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>