<Type Name="IObserver&lt;T&gt;" FullName="System.IObserver&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="037ec43b158ed4f376dcec66500c3afe0577823e" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36430991" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IObserver&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObserver`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObserver`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObserver(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObserver" />
  <TypeSignature Language="F#" Value="type IObserver&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Obiekt, który zawiera informacje powiadomienia.</typeparam>
    <summary>Udostępnia mechanizm do odbierania powiadomień wypychanych na podstawie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IObserver%601> i <xref:System.IObservable%601> interfejsów mechanizm uogólnionego oparta powiadomienia, znany także jako wzorzec projektowy obserwatora. <xref:System.IObservable%601> Interfejs reprezentuje klasę, która wysyła powiadomienia (dostawca); <xref:System.IObserver%601> interfejs reprezentuje klasę, która otrzymuje je (obserwatora). `T` reprezentuje klasę, która zawiera informacje powiadomienia.  
  
 <xref:System.IObserver%601> Rozmieszcza implementacji otrzymywać powiadomienia od dostawcy ( <xref:System.IObservable%601> implementacji), przekazując instancję samego siebie dostawcy <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> metody. Ta metoda zwraca <xref:System.IDisposable> obiektu, który może służyć do anulowania subskrypcji obserwatora przed dostawcę zakończeniem wysyłania powiadomień.  
  
 <xref:System.IObserver%601> Interfejs definiuje następujące trzy metody, które należy zaimplementować obserwatora:  
  
-   <xref:System.IObserver%601.OnNext%2A> Metody, która zwykle jest wywoływana przez dostawcę aby podać obserwator o nowe informacje dotyczące danych lub stanu.  
  
-   <xref:System.IObserver%601.OnError%2A> Metody, która zazwyczaj nosi nazwę przez dostawcę, aby wskazać, że dane są niedostępne, niedostępny lub uszkodzony, lub że dostawcy napotkał jakiegoś warunku błędu.  
  
-   <xref:System.IObserver%601.OnCompleted%2A> Metody, która zazwyczaj nosi nazwę przez dostawcę, aby wskazać, że zakończył wysyłanie powiadomień do obserwatorów.  
  
   
  
## Examples  
 Poniższy przykład ilustruje wzorzec projektowy obserwatora. Definiuje `Location` klasy, który zawiera informacje o długości i szerokości geograficznej.  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 `LocationReporter` Klasa udostępnia <xref:System.IObserver%601> implementacji. Wyświetla informacje o bieżącej lokalizacji do konsoli. Jego Konstruktor obejmuje `name` parametr, który umożliwia `LocationReporter` wystąpienia do identyfikacji w danych wyjściowych ciąg. Obejmuje również `Subscribe` metody, która zawija wywołanie do dostawcy <xref:System.IObservable%601.Subscribe%2A> metody. Dzięki temu metodę, aby przypisać zwracanego <xref:System.IDisposable> odwołanie do zmiennej prywatnej. `LocationReporter` Zawiera również klasy `Unsubscribe` metody, która wywołuje <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> metoda obiektu zwróconego przez <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> metody. Poniższy kod definiuje `LocationReporter` klasy.  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 `LocationTracker` Klasa udostępnia <xref:System.IObservable%601> implementacji. Jego `TrackLocation` metody jest przekazywana dopuszczający wartości null `Location` obiekt zawierający dane szerokości i długości geograficznej. Jeśli `Location` wartość nie jest `null`, `TrackLocation` wywołania metody <xref:System.IObserver%601.OnNext%2A> metoda każdego obserwatora.  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 Jeśli `Location` wartość `null`, `TrackLocation` metoda tworzy wystąpienie `LocationNotFoundException` obiektu, który jest pokazany w poniższym przykładzie. Następnie wywołuje każdego obserwatora <xref:System.IObserver%601.OnError%2A> metody i przekazuje je `LocationNotFoundException` obiektu. Należy pamiętać, że `LocationNotFoundException` pochodzi od klasy <xref:System.Exception> , ale nie dodaje żadnych nowych elementów członkowskich.  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 Obserwatorzy rejestracji w celu otrzymywania powiadomień z `TrackLocation` obiektu przez wywołanie jego <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> metody, która przypisuje odwołanie do obiektu obserwatora jako prywatne ogólnego <xref:System.Collections.Generic.List%601> obiektu. Metoda ta zwraca `Unsubscriber` obiektu, który jest <xref:System.IDisposable> implementację, która umożliwia obserwatorów zrezygnować z otrzymywania powiadomień. `LocationTracker` Zawiera również klasy `EndTransmission` metody. Jeśli żadne dalsze dane lokalizacji są dostępne, metoda wywołuje każdego obserwatora <xref:System.IObserver%601.OnCompleted%2A> metody i następnie czyści wewnętrzną listę obserwatorów.  
  
 Poniższy kod tworzy następnie dostawcy i obserwatora.  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObservable`1" />
  </Docs>
  <Members>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="public void OnCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnCompleted();" />
      <MemberSignature Language="F#" Value="abstract member OnCompleted : unit -&gt; unit" Usage="iObserver.OnCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powiadamia obserwatora dostawcy zostało zakończone, wysyłanie powiadomień wypychanych na podstawie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy obserwatora <xref:System.IObserver%601.OnCompleted%2A> implementacja jest wywoływana, <xref:System.IObserver%601.OnCompleted%2A> opcjonalnie wywołując metodę <xref:System.IDisposable.Dispose%2A> metody <xref:System.IDisposable> obiekt, który został zwrócony, obserwator po jej wywołaniu <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono implementację <xref:System.IObserver%601.OnCompleted%2A> metody w szerokości/długości geograficznej śledzenia aplikacji. Metoda po prostu zgłasza, że żadne dalsze dane jest dostępny i wywołuje dostawcy <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> implementacji. W sekcji przykład <xref:System.IObserver%601> tematu, aby uzyskać kompletny przykład.  
  
 [!code-csharp[System.IObserver.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#11)]
 [!code-vb[System.IObserver.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public void OnError (Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(class System.Exception error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnError (error As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnError(Exception ^ error);" />
      <MemberSignature Language="F#" Value="abstract member OnError : Exception -&gt; unit" Usage="iObserver.OnError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="error">Obiekt, który zawiera dodatkowe informacje o tym błędzie.</param>
        <summary>Powiadamia obserwatora, że dostawca napotkała błąd.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że `error` jest obiektem, który jest tworzony na podstawie <xref:System.Exception?displayProperty=nameWithType>, go nie musi to oznaczać wyjątek, który jest generowany przez dostawcę. Może również reprezentować rutynowej lub oczekiwany błąd, takich jak dane, których brakuje lub jest niedostępna. <xref:System.IObserver%601.OnError%2A> Metody należy rozpatrywać informacyjny i dostawca nie powinni oczekiwać od obserwatora w celu zapewnienia obsługi błędów.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono implementację <xref:System.IObserver%601.OnError%2A> metody w szerokości/długości geograficznej śledzenia aplikacji. Metoda po prostu zgłasza, że dane są obecnie niedostępne; nie powoduje wykorzystanie <xref:System.Exception> obiekt przekazany jako parametr. W sekcji przykład <xref:System.IObserver%601> tematu, aby uzyskać kompletny przykład.  
  
 [!code-csharp[System.IObserver.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#10)]
 [!code-vb[System.IObserver.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNext">
      <MemberSignature Language="C#" Value="public void OnNext (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNext(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnNext(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnNext (value As T)" />
      <MemberSignature Language="F#" Value="abstract member OnNext : 'T -&gt; unit" Usage="iObserver.OnNext value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Bieżące informacje o powiadomienie.</param>
        <summary>Zawiera obserwatora za pomocą nowych danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po obserwatora wywołał dostawcy <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> metody wywołuje dostawcę obserwatora <xref:System.IObserver%601.OnNext%2A> metodę w celu udostępnienia powiadomienia.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono implementację <xref:System.IObserver%601.OnNext%2A> metody w szerokości/długości geograficznej śledzenia aplikacji. W sekcji przykład <xref:System.IObserver%601> tematu, aby uzyskać kompletny przykład.  
  
 [!code-csharp[System.IObserver.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#12)]
 [!code-vb[System.IObserver.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>