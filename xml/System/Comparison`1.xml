<Type Name="Comparison&lt;T&gt;" FullName="System.Comparison&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1e5143be3534a4856cd6bcb96f9f79eb8322c54d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37485567" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate int Comparison&lt;in T&gt;(T x, T y);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Comparison`1&lt;- T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Comparison`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Comparison(Of In T)(x As T, y As T) As Integer " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate int Comparison(T x, T y);" />
  <TypeSignature Language="F#" Value="type Comparison&lt;'T&gt; = delegate of 'T * 'T -&gt; int" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="x" Type="T" />
    <Parameter Name="y" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Int32</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">Typ obiektów do porównania.</typeparam>
    <param name="x">Pierwszy obiekt, który ma zostać porównany.</param>
    <param name="y">Drugi obiekt, który będzie porównywany.</param>
    <summary>Reprezentuje metodę, która porównuje dwa obiekty tego samego typu.</summary>
    <returns>Liczba całkowita wskazująca wartości względne <paramref name="x" /> i <paramref name="y" />, jak pokazano w poniższej tabeli.  
  
 <list type="table"><listheader><term> Wartość </term><description> znaczenie </description></listheader><item><term> mniejszy niż 0 </term><description><paramref name="x" /> jest mniejsza niż <paramref name="y" />.  </description></item><item><term> 0 </term><description><paramref name="x" /> jest równa <paramref name="y" />.  </description></item><item><term> Większa niż 0 </term><description><paramref name="x" /> jest większa niż <paramref name="y" />.  </description></item></list></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten delegat jest używany przez <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29> przeciążenia metody <xref:System.Array> klasy i <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> przeciążenia metody <xref:System.Collections.Generic.List%601> klasy, aby sortować elementy tablicy lub listy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Comparison%601> delegowanie przy użyciu <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> przeciążenie metody.  
  
 Przykładowy kod definiuje metodę alternatywnych porównania ciągów o nazwie `CompareDinosByLength`. Ta metoda działa w następujący sposób: po pierwsze, są sprawdzane pod kątem leksykalną `null`, odwołanie o wartości null jest traktowany jako mniejsza niż inna niż null. Po drugie długości ciągów są porównywane i dłuższego ciągu jest uznawany za większy. Po trzecie Jeśli długości są równe, porównywania ciągów znaków zwykłych jest używany.  
  
 A <xref:System.Collections.Generic.List%601> ciągów, zostanie utworzony i wypełniony czterech ciągów, w losowej kolejności. Lista zawiera również ciąg pusty i odwołanie o wartości null. Zostanie wyświetlona lista sortowane przy użyciu <xref:System.Comparison%601> Delegat ogólny reprezentujący `CompareDinosByLength` metody i ponownie wyświetlone.  
  
 [!code-cpp[List\`1_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortComparison/cs/source.cs#1)]
 [!code-vb[List\`1_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortComparison/vb/source.vb#1)]  
  
 W poniższym przykładzie użyto <xref:System.Comparison%601> delegata, aby posortować elementy kolekcji `CityInfo` obiektów. `CityInfo` jest klasą zdefiniowanych przez aplikację, który zawiera informacje dotyczące miejscowości i jego populację. W przykładzie zdefiniowano trzy metody `CompareByName`, `CompareByPopulation`, i `CompareByNames`, które oferują trzy różne sposoby, w kolejności `CityInfo` obiektów. Każda metoda jest przypisany do `comparison` argument <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29?displayProperty=nameWithType> metody.  
  
 [!code-csharp[System.Comparison\`1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.comparison`1/cs/comparisont1.cs#1)]
 [!code-vb[System.Comparison\`1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.comparison`1/vb/comparisont1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Array.Sort``1(``0[],System.Comparison{``0})" />
    <altmember cref="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
  </Docs>
</Type>