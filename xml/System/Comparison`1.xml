<Type Name="Comparison&lt;T&gt;" FullName="System.Comparison&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0543f62ed668c3c2dc471558394ef9899c1ce307" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69421373" /></Metadata><TypeSignature Language="C#" Value="public delegate int Comparison&lt;in T&gt;(T x, T y);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Comparison`1&lt;- T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Comparison`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Comparison(Of In T)(x As T, y As T) As Integer " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate int Comparison(T x, T y);" />
  <TypeSignature Language="F#" Value="type Comparison&lt;'T&gt; = delegate of 'T * 'T -&gt; int" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="x" Type="T" />
    <Parameter Name="y" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Int32</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">Typ obiektów do porównania.</typeparam>
    <param name="x">Pierwszy obiekt, który ma zostać porównany.</param>
    <param name="y">Drugi obiekt, który będzie porównywany.</param>
    <summary>Reprezentuje metodę, która porównuje dwa obiekty tego samego typu.</summary>
    <returns>Liczba całkowita ze znakiem, która wskazuje wartości <paramref name="x" /> względne i <paramref name="y" />, jak pokazano w poniższej tabeli.  
  
 <list type="table"><listheader><term> Wartość 
 </term><description> Znaczenie 
 </description></listheader><item><term> Mniejsze niż 0 
 </term><description><paramref name="x" />jest mniejsze niż <paramref name="y" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="x" />równa <paramref name="y" />się.  
  
 </description></item><item><term> Większe niż 0 
 </term><description><paramref name="x" />jest większa niż <paramref name="y" />.  
  
 </description></item></list></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten delegat jest używany <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29> przez Przeciążenie <xref:System.Array> metody klasy i <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> Przeciążenie <xref:System.Collections.Generic.List%601> metody klasy w celu sortowania elementów tablicy lub listy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Comparison%601> delegata <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> z przeciążeniem metody.  
  
 Przykład kodu definiuje alternatywną metodę porównania dla ciągów o nazwie `CompareDinosByLength`. Ta metoda działa w następujący sposób: Najpierw comparands są testowane dla `null`, a odwołanie o wartości null jest traktowane jako mniejsze niż wartość null. W drugim, długości ciągu są porównywane, a dłuższy ciąg jest uznawany za większy. Trzecia, jeśli długości są równe, używane jest zwykłe Porównywanie ciągów.  
  
 <xref:System.Collections.Generic.List%601> Ciąg jest tworzony i wypełniany czterema ciągami, w określonej kolejności. Lista zawiera również pusty ciąg i odwołanie o wartości null. Zostanie wyświetlona lista, posortowana przy użyciu <xref:System.Comparison%601> ogólnego delegata `CompareDinosByLength` reprezentującego metodę i ponownie wyświetlana.  
  
 [!code-cpp[List\`1_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortComparison/cs/source.cs#1)]
 [!code-vb[List\`1_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortComparison/vb/source.vb#1)]  
  
 Poniższy przykład używa <xref:System.Comparison%601> delegata do sortowania elementów `CityInfo` kolekcji obiektów. `CityInfo`jest klasą zdefiniowaną przez aplikację, która zawiera informacje o miejscowości i jej populacji. W przykładzie zdefiniowano trzy metody `CompareByName`, `CompareByPopulation`,, `CompareByNames`i, `CityInfo` które oferują trzy różne sposoby porządkowania obiektów. Każda metoda jest przypisana do `comparison` argumentu <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29?displayProperty=nameWithType> metody.  
  
 [!code-csharp[System.Comparison\`1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.comparison`1/cs/comparisont1.cs#1)]
 [!code-vb[System.Comparison\`1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.comparison`1/vb/comparisont1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Array.Sort``1(``0[],System.Comparison{``0})" />
    <altmember cref="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
  </Docs>
</Type>
