<Type Name="Math" FullName="System.Math">
  <Metadata><Meta Name="ms.openlocfilehash" Value="05729eb847cc8b519fb10b63a85d15fffbb3e669" /><Meta Name="ms.sourcegitcommit" Value="9cee676b7864fa9dcb91319dcf5c339f3a724fbf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/07/2019" /><Meta Name="ms.locfileid" Value="55829396" /></Metadata><TypeSignature Language="C#" Value="public static class Math" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Math extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Math" />
  <TypeSignature Language="VB.NET" Value="Public Class Math" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math abstract sealed" />
  <TypeSignature Language="F#" Value="type Math = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cd7a5-101">Zapewnia stałe i metody statyczne trygonometrycznych logarytmicznej i innych typowych funkcji matematycznych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-102">W poniższym przykładzie użyto kilka funkcji matematyczne i trygonometryczne z <xref:System.Math> klasy do obliczania wewnętrzny kąty trapezu.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-102">The following example uses several mathematical and trigonometric functions from the <xref:System.Math> class to calculate the inner angles of a trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abs">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd7a5-103">Zwraca wartość bezwzględną określonej liczby.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-103">Returns the absolute value of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static decimal Abs (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Abs(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Abs(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Abs : decimal -&gt; decimal" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-104">Liczba, która jest większa lub równa <see cref="F:System.Decimal.MinValue" />, ale jest mniejsza lub równa <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-104">A number that is greater than or equal to <see cref="F:System.Decimal.MinValue" />, but less than or equal to <see cref="F:System.Decimal.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="cd7a5-105">Zwraca wartość bezwzględną liczby <see cref="T:System.Decimal" /> numer.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-105">Returns the absolute value of a <see cref="T:System.Decimal" /> number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-106">Liczba dziesiętna, x, że x ≤ 0 ≤<see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-106">A decimal number, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-107">Wartość bezwzględna <xref:System.Decimal> jest wartość liczbowa, bez znaku.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-107">The absolute value of a <xref:System.Decimal> is its numeric value without its sign.</span></span> <span data-ttu-id="cd7a5-108">Na przykład wartość bezwzględną liczby 1.2 i -1,2 w kierunku jest 1.2.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-108">For example, the absolute value of both 1.2 and -1.2 is 1.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-109">W poniższym przykładzie użyto <xref:System.Math.Abs%28System.Decimal%29> metodę, aby uzyskać wartość bezwzględną liczby <xref:System.Decimal> wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-109">The following example uses the <xref:System.Math.Abs%28System.Decimal%29> method to get the absolute value of a number of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Math.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static double Abs (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Abs(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Abs(double value);" />
      <MemberSignature Language="F#" Value="static member Abs : double -&gt; double" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-110">Liczba, która jest większa lub równa <see cref="F:System.Double.MinValue" />, ale jest mniejsza lub równa <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-110">A number that is greater than or equal to <see cref="F:System.Double.MinValue" />, but less than or equal to <see cref="F:System.Double.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="cd7a5-111">Zwraca wartość bezwzględną liczby zmiennoprzecinkowe podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-111">Returns the absolute value of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-112">Liczba zmiennoprzecinkowa podwójnej precyzji, x, że x ≤ 0 ≤<see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-112">A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-113">Wartość bezwzględna <xref:System.Double> jest wartość liczbowa, bez znaku.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-113">The absolute value of a <xref:System.Double> is its numeric value without its sign.</span></span> <span data-ttu-id="cd7a5-114">Na przykład wartość bezwzględną liczby 1.2e03 i - 1.2e03 jest 1.2e03.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-114">For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="cd7a5-115">Jeśli `value` jest równa <xref:System.Double.NegativeInfinity> lub <xref:System.Double.PositiveInfinity>, zwracana jest wartość <xref:System.Double.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-115">If `value` is equal to <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>, the return value is <xref:System.Double.PositiveInfinity>.</span></span> <span data-ttu-id="cd7a5-116">Jeśli `value` jest równa <xref:System.Double.NaN>, zwracana jest wartość <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-116">If `value` is equal to <xref:System.Double.NaN>, the return value is <xref:System.Double.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-117">W poniższym przykładzie użyto <xref:System.Math.Abs%28System.Double%29> metodę, aby uzyskać wartość bezwzględną liczby <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-117">The following example uses the <xref:System.Math.Abs%28System.Double%29> method to get the absolute value of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs2.cs#2)]
 [!code-vb[System.Math.Abs#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static short Abs (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Abs(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Abs(short value);" />
      <MemberSignature Language="F#" Value="static member Abs : int16 -&gt; int16" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-118">Liczba, która jest większa niż <see cref="F:System.Int16.MinValue" />, ale jest mniejsza lub równa <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-118">A number that is greater than <see cref="F:System.Int16.MinValue" />, but less than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="cd7a5-119">Zwraca wartość bezwzględną liczby całkowitej podpisem 16-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-119">Returns the absolute value of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-120">16-bitowych całkowita, x, że x ≤ 0 ≤<see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-120">A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-121">Wartość bezwzględna <xref:System.Int16> jest wartość liczbowa, bez znaku.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-121">The absolute value of an <xref:System.Int16> is its numeric value without its sign.</span></span> <span data-ttu-id="cd7a5-122">Na przykład wartość bezwzględną liczby 123 i-123 jest 123.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-122">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-123">W poniższym przykładzie użyto <xref:System.Math.Abs%28System.Int16%29> metodę, aby uzyskać wartość bezwzględną liczby <xref:System.Int16> wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-123">The following example uses the <xref:System.Math.Abs%28System.Int16%29> method to get the absolute value of a number of <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs3.cs#3)]
 [!code-vb[System.Math.Abs#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cd7a5-124"><paramref name="value" /> równa się <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-124"><paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static int Abs (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Abs(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Abs(int value);" />
      <MemberSignature Language="F#" Value="static member Abs : int -&gt; int" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-125">Liczba, która jest większa niż <see cref="F:System.Int32.MinValue" />, ale jest mniejsza lub równa <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-125">A number that is greater than <see cref="F:System.Int32.MinValue" />, but less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="cd7a5-126">Zwraca wartość bezwzględną liczby całkowita 32-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-126">Returns the absolute value of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-127">32-bitowych całkowita, x, że x ≤ 0 ≤<see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-127">A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-128">Wartość bezwzględna <xref:System.Int32> jest wartość liczbowa, bez znaku.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-128">The absolute value of an <xref:System.Int32> is its numeric value without its sign.</span></span> <span data-ttu-id="cd7a5-129">Na przykład wartość bezwzględną liczby 123 i-123 jest 123.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-129">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-130">W poniższym przykładzie użyto <xref:System.Math.Abs%28System.Int32%29> metodę, aby uzyskać wartość bezwzględną liczby <xref:System.Int32> wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-130">The following example uses the <xref:System.Math.Abs%28System.Int32%29> method to get the absolute value of a number of <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs4.cs#4)]
 [!code-vb[System.Math.Abs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cd7a5-131"><paramref name="value" /> równa się <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-131"><paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static long Abs (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Abs(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Abs(long value);" />
      <MemberSignature Language="F#" Value="static member Abs : int64 -&gt; int64" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-132">Liczba, która jest większa niż <see cref="F:System.Int64.MinValue" />, ale jest mniejsza lub równa <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-132">A number that is greater than <see cref="F:System.Int64.MinValue" />, but less than or equal to <see cref="F:System.Int64.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="cd7a5-133">Zwraca wartość bezwzględną liczby całkowita 64-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-133">Returns the absolute value of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-134">64-bitowych całkowita, x, że x ≤ 0 ≤<see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-134">A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-135">Wartość bezwzględna <xref:System.Int64> jest wartość liczbowa, bez znaku.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-135">The absolute value of an <xref:System.Int64> is its numeric value without its sign.</span></span> <span data-ttu-id="cd7a5-136">Na przykład wartość bezwzględną liczby 123 i-123 jest 123.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-136">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-137">W poniższym przykładzie użyto <xref:System.Math.Abs%28System.Int64%29> metodę, aby uzyskać wartość bezwzględną liczby <xref:System.Int64> wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-137">The following example uses the <xref:System.Math.Abs%28System.Int64%29> method to get the absolute value of a number of <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs5.cs#5)]
 [!code-vb[System.Math.Abs#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cd7a5-138"><paramref name="value" /> równa się <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-138"><paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static sbyte Abs (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Abs(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Abs(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Abs : sbyte -&gt; sbyte" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-139">Liczba, która jest większa niż <see cref="F:System.SByte.MinValue" />, ale jest mniejsza lub równa <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-139">A number that is greater than <see cref="F:System.SByte.MinValue" />, but less than or equal to <see cref="F:System.SByte.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="cd7a5-140">Zwraca wartość bezwzględną liczby całkowitej podpisem 8-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-140">Returns the absolute value of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-141">8-bitową całkowita, x, że x ≤ 0 ≤<see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-141">An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-142">Wartość bezwzględna bajtowych ze znakiem jest jego wartości numerycznej bez znaku.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-142">The absolute value of a signed byte is its numeric value without its sign.</span></span> <span data-ttu-id="cd7a5-143">Na przykład wartość bezwzględną liczby 12 i -12 jest 12.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-143">For example, the absolute value of both 12 and -12 is 12.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-144">W poniższym przykładzie użyto <xref:System.Math.Abs%28System.SByte%29> metodę, aby uzyskać wartość bezwzględną liczby <xref:System.SByte> wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-144">The following example uses the <xref:System.Math.Abs%28System.SByte%29> method to get the absolute value of a number of <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs6.cs#6)]
 [!code-vb[System.Math.Abs#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cd7a5-145"><paramref name="value" /> równa się <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-145"><paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float value);" />
      <MemberSignature Language="F#" Value="static member Abs : single -&gt; single" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-146">Liczba, która jest większa lub równa <see cref="F:System.Single.MinValue" />, ale jest mniejsza lub równa <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-146">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="cd7a5-147">Zwraca wartość bezwzględną liczby zmiennoprzecinkowej pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-147">Returns the absolute value of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-148">Liczba zmiennoprzecinkowa pojedynczej precyzji, x, że x ≤ 0 ≤<see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-148">A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-149">Wartość bezwzględna <xref:System.Single> jest wartość liczbowa, bez znaku.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-149">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="cd7a5-150">Na przykład, wartość bezwzględna zarówno 1.2E-03 i - 1.2e03 jest 1.2e03.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-150">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="cd7a5-151">Jeśli `value` jest równa <xref:System.Single.NegativeInfinity> lub <xref:System.Single.PositiveInfinity>, zwracana jest wartość <xref:System.Single.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-151">If `value` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="cd7a5-152">Jeśli `value` jest równa <xref:System.Single.NaN>, zwracana jest wartość <xref:System.Single.NaN>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-152">If `value` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-153">W poniższym przykładzie użyto <xref:System.Math.Abs%28System.Single%29> metodę, aby uzyskać wartość bezwzględną liczby <xref:System.Single> wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-153">The following example uses the <xref:System.Math.Abs%28System.Single%29> method to get the absolute value of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs7.cs#7)]
 [!code-vb[System.Math.Abs#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs7.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static double Acos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acos(double d);" />
      <MemberSignature Language="F#" Value="static member Acos : double -&gt; double" Usage="System.Math.Acos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-154">Liczba reprezentująca cosinus, gdzie <paramref name="d" /> musi być większa niż lub równy-1, ale jest mniejszy niż 1.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-154">A number representing a cosine, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="cd7a5-155">Zwraca kąt, którego cosinus jest równy podanej liczbie.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-155">Returns the angle whose cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-156">Kąt, θ, wyrażony w radianach, tak że 0 ≤θ≤π</span><span class="sxs-lookup"><span data-stu-id="cd7a5-156">An angle, θ, measured in radians, such that 0 ≤θ≤π</span></span> 
<span data-ttu-id="cd7a5-157">—lub—</span><span class="sxs-lookup"><span data-stu-id="cd7a5-157">-or-</span></span> 
 <span data-ttu-id="cd7a5-158"><see cref="F:System.Double.NaN" /> Jeśli <paramref name="d" /> &lt; -1 lub <paramref name="d" /> &gt; 1 lub <paramref name="d" /> jest równa <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-158"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-159">Należy pomnożyć wartość zwracaną przez 180 /<xref:System.Math.PI?displayProperty=nameWithType> do przekonwertowania z radianów na stopnie.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-159">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-160">W poniższym przykładzie użyto <xref:System.Math.Acos%2A> metodę, aby pomóc w obliczeń wewnętrzny kąty Trapez danego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-160">The following example uses the <xref:System.Math.Acos%2A> method to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public static double Acosh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acosh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acosh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acosh(double d);" />
      <MemberSignature Language="F#" Value="static member Acosh : double -&gt; double" Usage="System.Math.Acosh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static double Asin (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asin(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asin(double d);" />
      <MemberSignature Language="F#" Value="static member Asin : double -&gt; double" Usage="System.Math.Asin d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-161">Liczba reprezentująca sinusa, gdzie <paramref name="d" /> musi być większa niż lub równy-1, ale jest mniejszy niż 1.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-161">A number representing a sine, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="cd7a5-162">Zwraca kąt, którego sinus jest równy podanej liczbie.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-162">Returns the angle whose sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-163">Kąt, θ, wyrażony w radianach, tak że ≤θ≤π - π/2/2</span><span class="sxs-lookup"><span data-stu-id="cd7a5-163">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</span></span> 
<span data-ttu-id="cd7a5-164">—lub—</span><span class="sxs-lookup"><span data-stu-id="cd7a5-164">-or-</span></span> 
 <span data-ttu-id="cd7a5-165"><see cref="F:System.Double.NaN" /> Jeśli <paramref name="d" /> &lt; -1 lub <paramref name="d" /> &gt; 1 lub <paramref name="d" /> jest równa <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-165"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-166">Dodatnia wartość zwracana reprezentuje kątowi z osi x; ujemna wartość zwracana oznacza kąt obrotu w prawo.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-166">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="cd7a5-167">Należy pomnożyć wartość zwracaną przez 180 /<xref:System.Math.PI?displayProperty=nameWithType> do przekonwertowania z radianów na stopnie.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-167">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-168">W poniższym przykładzie użyto <xref:System.Math.Asin%2A> ułatwiających obliczeń wewnętrzny kąty Trapez danego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-168">The following example uses <xref:System.Math.Asin%2A> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public static double Asinh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asinh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asinh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asinh(double d);" />
      <MemberSignature Language="F#" Value="static member Asinh : double -&gt; double" Usage="System.Math.Asinh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static double Atan (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan(double d);" />
      <MemberSignature Language="F#" Value="static member Atan : double -&gt; double" Usage="System.Math.Atan d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-169">Liczba reprezentująca stycznej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-169">A number representing a tangent.</span></span></param>
        <summary><span data-ttu-id="cd7a5-170">Zwraca kąt, którego tangens jest równy podanej liczbie.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-170">Returns the angle whose tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-171">Kąt, θ, wyrażony w radianach, tak że ≤θ≤π - π/2/2.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-171">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</span></span>  
  
<span data-ttu-id="cd7a5-172">—lub—</span><span class="sxs-lookup"><span data-stu-id="cd7a5-172">-or-</span></span> 
 <span data-ttu-id="cd7a5-173"><see cref="F:System.Double.NaN" /> Jeśli <paramref name="d" /> jest równa <see cref="F:System.Double.NaN" />, - π/2 jest zaokrąglana do podwójnej precyzji (-1.5707963267949) Jeśli <paramref name="d" /> jest równa <see cref="F:System.Double.NegativeInfinity" />, lub π/2 jest zaokrąglana do podwójnej precyzji (1.5707963267949) Jeśli <paramref name="d" /> jest równa <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-173"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-174">Dodatnia wartość zwracana reprezentuje kątowi z osi x; ujemna wartość zwracana oznacza kąt obrotu w prawo.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-174">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="cd7a5-175">Należy pomnożyć wartość zwracaną przez 180 /<xref:System.Math.PI?displayProperty=nameWithType> do przekonwertowania z radianów na stopnie.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-175">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-176">Poniższy przykład pokazuje, jak Oblicz tangens wartości i wyświetlania ich w konsoli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-176">The following example demonstrates how to calculate the arctangent of a value and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static double Atan2 (double y, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan2(float64 y, float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Double, x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan2(double y, double x);" />
      <MemberSignature Language="F#" Value="static member Atan2 : double * double -&gt; double" Usage="System.Math.Atan2 (y, x)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y"><span data-ttu-id="cd7a5-177">Współrzędna y punktu.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-177">The y coordinate of a point.</span></span></param>
        <param name="x"><span data-ttu-id="cd7a5-178">Współrzędna x punktu.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-178">The x coordinate of a point.</span></span></param>
        <summary><span data-ttu-id="cd7a5-179">Zwraca kąt, którego tangens jest równy ilorazowi dwóch podanych liczb.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-179">Returns the angle whose tangent is the quotient of two specified numbers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-180">Kąt, θ, wyrażony w radianach, tak, aby - π≤θ≤π i tan(θ) = <paramref name="y" />  /  <paramref name="x" />, gdzie (<paramref name="x" />, <paramref name="y" />) jest punktem na płaszczyźnie formułuje.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-180">An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span></span> <span data-ttu-id="cd7a5-181">Sprawdź następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-181">Observe the following:</span></span> 
<span data-ttu-id="cd7a5-182">-Aby (<paramref name="x" />, <paramref name="y" />) w quadrant 1, 0 &lt; θ &lt; π/2.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-182">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span></span>  
  
<span data-ttu-id="cd7a5-183">-Aby (<paramref name="x" />, <paramref name="y" />) w quadrant 2, π/2 &lt; θ≤π.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-183">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.</span></span>  
  
<span data-ttu-id="cd7a5-184">-Aby (<paramref name="x" />, <paramref name="y" />) w quadrant 3, - π &lt; θ &lt; - π/2.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-184">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span></span>  
  
<span data-ttu-id="cd7a5-185">-Aby (<paramref name="x" />, <paramref name="y" />) w quadrant 4, - π/2 &lt; θ &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-185">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span></span>  
  
<span data-ttu-id="cd7a5-186">Dla punktów w granicach ćwiartkach wartość zwracana jest następująca:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-186">For points on the boundaries of the quadrants, the return value is the following:</span></span> 
<span data-ttu-id="cd7a5-187">-Y wynosi 0 i x czy nie jest to ujemna θ = 0.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-187">-   If y is 0 and x is not negative, θ = 0.</span></span>  
  
<span data-ttu-id="cd7a5-188">— Jeśli y wynosi 0 i x ma wartość ujemną, θ = π.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-188">-   If y is 0 and x is negative, θ = π.</span></span>  
  
<span data-ttu-id="cd7a5-189">-Jeśli y jest dodatnia, a x jest równa 0, θ = π/2.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-189">-   If y is positive and x is 0, θ = π/2.</span></span>  
  
<span data-ttu-id="cd7a5-190">— Jeśli y jest ujemna, a x jest równa 0, θ = - π/2.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-190">-   If y is negative and x is 0, θ = -π/2.</span></span>  
  
<span data-ttu-id="cd7a5-191">— Jeśli y wynosi 0, a x jest równa 0, θ = 0.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-191">-   If y is 0 and x is 0, θ = 0.</span></span>  
  
<span data-ttu-id="cd7a5-192">Jeśli <paramref name="x" /> lub <paramref name="y" /> jest <see cref="F:System.Double.NaN" />, lub jeśli <paramref name="x" /> i <paramref name="y" /> są <see cref="F:System.Double.PositiveInfinity" /> lub <see cref="F:System.Double.NegativeInfinity" />, metoda zwraca <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-192">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-193">Wartość zwracana jest wartość kąta w płaszczyzną formułuje utworzoną przez osi x i wektorowej, począwszy od źródła (0,0) i przerywa w punkcie, (x, y).</span><span class="sxs-lookup"><span data-stu-id="cd7a5-193">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-194">Poniższy przykład pokazuje, jak można obliczyć arcus tangens kąta i wektora.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-194">The following example demonstrates how to calculate the arctangent of an angle and a vector.</span></span> <span data-ttu-id="cd7a5-195">Wartość wynikowa jest wyświetlany w konsoli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-195">The resulting value is displayed in the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public static double Atanh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atanh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atanh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atanh(double d);" />
      <MemberSignature Language="F#" Value="static member Atanh : double -&gt; double" Usage="System.Math.Atanh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BigMul">
      <MemberSignature Language="C#" Value="public static long BigMul (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 BigMul(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BigMul(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigMul (a As Integer, b As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long BigMul(int a, int b);" />
      <MemberSignature Language="F#" Value="static member BigMul : int * int -&gt; int64" Usage="System.Math.BigMul (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="cd7a5-196">Pierwszy numer do pomnożenia.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-196">The first number to multiply.</span></span></param>
        <param name="b"><span data-ttu-id="cd7a5-197">Druga liczba do pomnożenia.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-197">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="cd7a5-198">Zwraca pełny iloczyn dwóch liczb 32-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-198">Produces the full product of two 32-bit numbers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-199">Liczba, zawierający produktu podanych liczb.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-199">The number containing the product of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-200">W poniższym przykładzie pokazano użycie <xref:System.Math.BigMul%2A> metodę obliczania iloczyn dwóch wartości całkowitych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-200">The following example demonstrates the use of the <xref:System.Math.BigMul%2A> method to calculate the product of two integer values.</span></span>  
  
 [!code-cpp[math.bigmul#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.bigmul/CPP/bigmul.cpp#1)]
 [!code-csharp[math.bigmul#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.bigmul/CS/bigmul.cs#1)]
 [!code-vb[math.bigmul#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.bigmul/VB/bigmul.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cbrt">
      <MemberSignature Language="C#" Value="public static double Cbrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cbrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cbrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cbrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cbrt(double d);" />
      <MemberSignature Language="F#" Value="static member Cbrt : double -&gt; double" Usage="System.Math.Cbrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ceiling">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd7a5-201">Zwraca najmniejszą wartość całkowitą, większy lub równy podanej liczbie.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-201">Returns the smallest integral value greater than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-202">Zachowanie tej metody jest zgodne ze standardem IEEE 754, sekcja 4.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-202">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="cd7a5-203">Tego rodzaju zaokrąglenie jest czasami nazywane zaokrąglaniem kierunku plus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-203">This kind of rounding is sometimes called rounding toward positive infinity.</span></span>  

## Examples

[!INCLUDE[midpoint-rounding](~/includes/csharp-interactive-note.md)]

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Ceiling : decimal -&gt; decimal" Usage="System.Math.Ceiling d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-204">Liczba dziesiętna.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-204">A decimal number.</span></span></param>
        <summary><span data-ttu-id="cd7a5-205">Zwraca najmniejszą wartość całkowita, która jest większa niż lub równą podanej liczbie dziesiętnej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-205">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-206">Najmniejsza wartość całkowita, która jest większa lub równa <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-206">The smallest integral value that is greater than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="cd7a5-207">Należy zauważyć, że ta metoda zwraca <see cref="T:System.Decimal" /> zamiast typu całkowitego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-207">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-208">Zachowanie tej metody jest zgodne ze standardem IEEE 754, sekcja 4.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-208">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="cd7a5-209">Tego rodzaju zaokrąglenie jest czasami nazywane zaokrąglaniem kierunku plus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-209">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="cd7a5-210">Innymi słowy Jeśli `d` jest dodatnia, obecność dowolnej przyczyny części ułamkowych `d` ma zostać zaokrąglona do liczby całkowitej najwyższy.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-210">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="cd7a5-211">Jeśli `d` jest ujemna, operację zaokrąglenia powoduje, że dowolny składnik ułamkowe `d` do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-211">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="cd7a5-212">Działanie tej metody różni się od <xref:System.Math.Floor%28System.Decimal%29> metody, która obsługuje zaokrąglaniem kierunku minus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-212">The operation of this method differs from the <xref:System.Math.Floor%28System.Decimal%29> method, which supports rounding toward negative infinity.</span></span>  
  
## Examples  
 <span data-ttu-id="cd7a5-213">W poniższym przykładzie pokazano <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> metody i zestawiono ze sobą za pomocą <xref:System.Math.Floor%28System.Decimal%29> metody.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-213">The following example illustrates the <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static double Ceiling (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Ceiling(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Ceiling(double a);" />
      <MemberSignature Language="F#" Value="static member Ceiling : double -&gt; double" Usage="System.Math.Ceiling a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="cd7a5-214">Liczba zmiennoprzecinkowa podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-214">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="cd7a5-215">Zwraca najmniejszą wartość całkowita, która jest większa niż lub równą podanej liczbie zmiennoprzecinkowej podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-215">Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-216">Najmniejsza wartość całkowita, która jest większa lub równa <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-216">The smallest integral value that is greater than or equal to <paramref name="a" />.</span></span> <span data-ttu-id="cd7a5-217">Jeśli <paramref name="a" /> jest równa <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, lub <see cref="F:System.Double.PositiveInfinity" />, jest zwracana wartość.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-217">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="cd7a5-218">Należy zauważyć, że ta metoda zwraca <see cref="T:System.Double" /> zamiast typu całkowitego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-218">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-219">Zachowanie tej metody jest zgodne ze standardem IEEE 754, sekcja 4.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-219">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="cd7a5-220">Tego rodzaju zaokrąglenie jest czasami nazywane zaokrąglaniem kierunku plus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-220">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="cd7a5-221">Innymi słowy Jeśli `a` jest dodatnia, obecność dowolnej przyczyny części ułamkowych `a` ma zostać zaokrąglona do liczby całkowitej najwyższy.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-221">In other words, if `a` is positive, the presence of any fractional component causes `a` to be rounded to the next highest integer.</span></span> <span data-ttu-id="cd7a5-222">Jeśli `a` jest ujemna, operację zaokrąglenia powoduje, że dowolny składnik ułamkowe `a` do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-222">If `a` is negative, the rounding operation causes any fractional component of `a` to be discarded.</span></span> <span data-ttu-id="cd7a5-223">Działanie tej metody różni się od <xref:System.Math.Floor%28System.Double%29> metody, która obsługuje zaokrąglaniem kierunku minus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-223">The operation of this method differs from the <xref:System.Math.Floor%28System.Double%29> method, which supports rounding toward negative infinity.</span></span>  
  
<span data-ttu-id="cd7a5-224">Począwszy od programu Visual Basic 15.8 wydajność podwójnej precyzji na całkowite konwersji jest zoptymalizowane pod kątem w przypadku przekazania wartości zwracanej przez `Ceiling` metody do któregokolwiek elementu [funkcje konwersji typu całkowitego](~/docs/visual-basic/language-reference/functions/conversion-functions.md), lub jeśli podwójna wartość zwrócone przez `Ceiling` jest automatycznie konwertowany na liczbę całkowitą z [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) wartość wyłączone.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-224">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Ceiling` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Ceiling` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="cd7a5-225">Tego rodzaju optymalizacji umożliwia kod wymagany do uruchomienia szybciej — maksymalnie dwa razy, jak szybko uzyskać kod, który obsługuje dużą liczbę konwersji na typy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-225">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="cd7a5-226">Poniższy przykład ilustruje takie konwersje zoptymalizowane:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-226">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1044

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7969
```   

## Examples  
 <span data-ttu-id="cd7a5-227">W poniższym przykładzie pokazano <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> metody i zestawiono ze sobą za pomocą <xref:System.Math.Floor%28System.Double%29> metody.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-227">The following example illustrates the <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Double%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static byte Clamp (byte value, byte min, byte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Clamp(unsigned int8 value, unsigned int8 min, unsigned int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Byte, min As Byte, max As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Clamp(System::Byte value, System::Byte min, System::Byte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : byte * byte * byte -&gt; byte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="min" Type="System.Byte" />
        <Parameter Name="max" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static decimal Clamp (decimal value, decimal min, decimal max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Clamp(valuetype System.Decimal value, valuetype System.Decimal min, valuetype System.Decimal max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Decimal, min As Decimal, max As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Clamp(System::Decimal value, System::Decimal min, System::Decimal max);" />
      <MemberSignature Language="F#" Value="static member Clamp : decimal * decimal * decimal -&gt; decimal" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="min" Type="System.Decimal" />
        <Parameter Name="max" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static double Clamp (double value, double min, double max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Clamp(float64 value, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Double, min As Double, max As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Clamp(double value, double min, double max);" />
      <MemberSignature Language="F#" Value="static member Clamp : double * double * double -&gt; double" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="min" Type="System.Double" />
        <Parameter Name="max" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static short Clamp (short value, short min, short max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Clamp(int16 value, int16 min, int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Short, min As Short, max As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Clamp(short value, short min, short max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int16 * int16 * int16 -&gt; int16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="min" Type="System.Int16" />
        <Parameter Name="max" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static int Clamp (int value, int min, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Clamp(int32 value, int32 min, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Integer, min As Integer, max As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Clamp(int value, int min, int max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int * int * int -&gt; int" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static long Clamp (long value, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Clamp(int64 value, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Long, min As Long, max As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Clamp(long value, long min, long max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int64 * int64 * int64 -&gt; int64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="min" Type="System.Int64" />
        <Parameter Name="max" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static sbyte Clamp (sbyte value, sbyte min, sbyte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Clamp(int8 value, int8 min, int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As SByte, min As SByte, max As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Clamp(System::SByte value, System::SByte min, System::SByte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : sbyte * sbyte * sbyte -&gt; sbyte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="min" Type="System.SByte" />
        <Parameter Name="max" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Single, min As Single, max As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Clamp(float value, float min, float max);" />
      <MemberSignature Language="F#" Value="static member Clamp : single * single * single -&gt; single" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="min" Type="System.Single" />
        <Parameter Name="max" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ushort Clamp (ushort value, ushort min, ushort max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Clamp(unsigned int16 value, unsigned int16 min, unsigned int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UShort, min As UShort, max As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Clamp(System::UInt16 value, System::UInt16 min, System::UInt16 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint16 * uint16 * uint16 -&gt; uint16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="min" Type="System.UInt16" />
        <Parameter Name="max" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static uint Clamp (uint value, uint min, uint max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Clamp(unsigned int32 value, unsigned int32 min, unsigned int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UInteger, min As UInteger, max As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Clamp(System::UInt32 value, System::UInt32 min, System::UInt32 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint32 * uint32 * uint32 -&gt; uint32" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="min" Type="System.UInt32" />
        <Parameter Name="max" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ulong Clamp (ulong value, ulong min, ulong max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Clamp(unsigned int64 value, unsigned int64 min, unsigned int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As ULong, min As ULong, max As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Clamp(System::UInt64 value, System::UInt64 min, System::UInt64 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint64 * uint64 * uint64 -&gt; uint64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="min" Type="System.UInt64" />
        <Parameter Name="max" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cos(double d);" />
      <MemberSignature Language="F#" Value="static member Cos : double -&gt; double" Usage="System.Math.Cos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-228">Kąt wyrażony w radianach.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-228">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="cd7a5-229">Zwraca cosinus określonego kąta.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-229">Returns the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-230">Cosinus <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-230">The cosine of <paramref name="d" />.</span></span> <span data-ttu-id="cd7a5-231">Jeśli <paramref name="d" /> jest równa <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, lub <see cref="F:System.Double.PositiveInfinity" />, Metoda ta zwraca <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-231">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-232">Kąt `d`, musi być podany w radianach.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-232">The angle, `d`, must be in radians.</span></span> <span data-ttu-id="cd7a5-233">Mnożenie przez <xref:System.Math.PI?displayProperty=nameWithType>/180 Konwertuje stopnie na radiany.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-233">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="cd7a5-234">Dopuszczalne wartości `d` z zakresu od około-9223372036854775295 do około 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-234">Acceptable values of `d` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="cd7a5-235">Dla wartości spoza tego zakresu <xref:System.Math.Cos%2A> metoda zwraca `d` bez zmian, zamiast zgłaszać wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-235">For values outside this range, the <xref:System.Math.Cos%2A> method returns `d` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-236">W poniższym przykładzie użyto <xref:System.Math.Cos%2A> można obliczyć wartości niektórych trygonometrycznych tożsamości dla wybranych kąty.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-236">The following example uses <xref:System.Math.Cos%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static double Cosh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cosh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cosh(double value);" />
      <MemberSignature Language="F#" Value="static member Cosh : double -&gt; double" Usage="System.Math.Cosh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-237">Kąt wyrażony w radianach.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-237">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="cd7a5-238">Zwraca cosinus hiperboliczny podanemu kątowi.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-238">Returns the hyperbolic cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-239">Cosinus hiperboliczny liczby <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-239">The hyperbolic cosine of <paramref name="value" />.</span></span> <span data-ttu-id="cd7a5-240">Jeśli <paramref name="value" /> jest równa <see cref="F:System.Double.NegativeInfinity" /> lub <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-240">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.</span></span> <span data-ttu-id="cd7a5-241">Jeśli <paramref name="value" /> jest równa <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-241">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-242">Kąt `value`, musi być podany w radianach.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-242">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="cd7a5-243">Mnożenie przez <xref:System.Math.PI?displayProperty=nameWithType>/180 Konwertuje stopnie na radiany.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-243">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-244">W poniższym przykładzie użyto <xref:System.Math.Cosh%2A> można obliczyć wartości niektórych hiperboliczny tożsamości dla wybranych wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-244">The following example uses <xref:System.Math.Cosh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivRem">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd7a5-245">Oblicza iloraz dwóch liczb, a także zwraca resztę z dzielenia parametr danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-245">Calculates the quotient of two numbers and also returns the remainder in an output parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static int DivRem (int a, int b, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DivRem(int32 a, int32 b, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Integer, b As Integer, ByRef result As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DivRem(int a, int b, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int * int *  -&gt; int" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
        <Parameter Name="result" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="cd7a5-246">Dzielna.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-246">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="cd7a5-247">Dzielnik.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-247">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="cd7a5-248">Resztę.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-248">The remainder.</span></span></param>
        <summary><span data-ttu-id="cd7a5-249">Oblicza iloraz dwóch liczb całkowitych ze znakiem 32-bitowych, a także zwraca resztę z dzielenia parametr danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-249">Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-250">Iloraz podanych liczb.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-250">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-251">Pozostała wartość jest równa wynik [operator reszty](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="cd7a5-251">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
   
## Examples  
 <span data-ttu-id="cd7a5-252">W poniższym przykładzie pokazano <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> metody.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-252">The following example demonstrates the <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem1.cs#1)]
 [!code-vb[System.Math.DivRem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="cd7a5-253"><paramref name="b" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-253"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static long DivRem (long a, long b, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DivRem(int64 a, int64 b, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Long, b As Long, ByRef result As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DivRem(long a, long b, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int64 * int64 *  -&gt; int64" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="cd7a5-254">Dzielna.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-254">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="cd7a5-255">Dzielnik.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-255">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="cd7a5-256">Resztę.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-256">The remainder.</span></span></param>
        <summary><span data-ttu-id="cd7a5-257">Oblicza iloraz dwóch liczb całkowitych ze znakiem 64-bitowych, a także zwraca resztę z dzielenia parametr danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-257">Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-258">Iloraz podanych liczb.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-258">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-259">Pozostała wartość jest równa wynik [operator reszty](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="cd7a5-259">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-260">W poniższym przykładzie pokazano <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> metody.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-260">The following example demonstrates the <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem2.cs#2)]
 [!code-vb[System.Math.DivRem#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="cd7a5-261"><paramref name="b" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-261"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.7182818284590451;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.7182818284590451)" />
      <MemberSignature Language="DocId" Value="F:System.Math.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.7182818284590451" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.7182818284590451;" />
      <MemberSignature Language="F#" Value="val mutable E : double" Usage="System.Math.E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.7182818284590451</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7a5-262">Reprezentuje logarytmu naturalnego, określony przez wartość stałej, <see langword="e" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-262">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-263">Wartość tego pola jest 2.7182818284590451.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-263">The value of this field is 2.7182818284590451.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-264">W poniższym przykładzie porównano <xref:System.Math.E> wartością obliczonym na podstawie serii zasilania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-264">The following example compares <xref:System.Math.E> with the value calculated from a power series.</span></span>  
  
 [!code-cpp[System.Math.E#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.E/CPP/efield.cpp#1)]
 [!code-csharp[System.Math.E#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.E/CS/efield.cs#1)]
 [!code-vb[System.Math.E#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.E/VB/efield.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static double Exp (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exp(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exp(double d);" />
      <MemberSignature Language="F#" Value="static member Exp : double -&gt; double" Usage="System.Math.Exp d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-265">Liczba określająca potęgi.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-265">A number specifying a power.</span></span></param>
        <summary><span data-ttu-id="cd7a5-266">Zwraca <see langword="e" /> podniesione do określonej potęgi.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-266">Returns <see langword="e" /> raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-267">Liczba <see langword="e" /> podniesioną do potęgi <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-267">The number <see langword="e" /> raised to the power <paramref name="d" />.</span></span> <span data-ttu-id="cd7a5-268">Jeśli <paramref name="d" /> jest równa <see cref="F:System.Double.NaN" /> lub <see cref="F:System.Double.PositiveInfinity" />, jest zwracana wartość.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-268">If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="cd7a5-269">Jeśli <paramref name="d" /> jest równa <see cref="F:System.Double.NegativeInfinity" />, zwracany jest 0.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-269">If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-270">`e` jest stałe matematyczne, którego wartością jest około 2.71828.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-270">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="cd7a5-271">Użyj <xref:System.Math.Pow%2A> metodę, aby obliczyć potęgi innych podstaw.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-271">Use the <xref:System.Math.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="cd7a5-272"><xref:System.Math.Exp%2A> jest przeciwieństwem <xref:System.Math.Log%2A>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-272"><xref:System.Math.Exp%2A> is the inverse of <xref:System.Math.Log%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-273">W poniższym przykładzie użyto <xref:System.Math.Exp%2A> można obliczyć wartości niektórych wykładniczego i logarytmicznych tożsamości dla wybranych wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-273">The following example uses <xref:System.Math.Exp%2A> to evaluate certain exponential and logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Exp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Exp/CPP/exp.cpp#1)]
 [!code-csharp[System.Math.Exp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Exp/CS/exp.cs#1)]
 [!code-vb[System.Math.Exp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Exp/VB/exp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Floor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd7a5-274">Zwraca największą wartość całkowitą mniejszą niż określona liczba.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-274">Returns the largest integral value less than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-275">Zachowanie tej metody jest zgodne ze standardem IEEE 754, sekcja 4.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-275">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="cd7a5-276">Tego rodzaju zaokrąglenie jest czasami nazywane zaokrąglaniem kierunku minus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-276">This kind of rounding is sometimes called rounding toward negative infinity.</span></span>  

## Examples

[!INCLUDE[midpoint-rounding](~/includes/csharp-interactive-note.md)]

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Floor : decimal -&gt; decimal" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-277">Liczba dziesiętna.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-277">A decimal number.</span></span></param>
        <summary><span data-ttu-id="cd7a5-278">Zwraca największą wartość całkowitą mniejszą niż określona liczba dziesiętna.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-278">Returns the largest integral value less than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-279">Całkowite największą wartość mniejsze niż lub równe <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-279">The largest integral value less than or equal to <paramref name="d" />.</span></span>  <span data-ttu-id="cd7a5-280">Należy pamiętać, że metoda zwraca wartość całkowitą typu <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-280">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-281">Zachowanie tej metody jest zgodne ze standardem IEEE 754, sekcja 4.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-281">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="cd7a5-282">Tego rodzaju zaokrąglenie jest czasami nazywane zaokrąglaniem kierunku minus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-282">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="cd7a5-283">Innymi słowy Jeśli `d` jest dodatnia, dowolny składnik ułamkowe zostały obcięte.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-283">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="cd7a5-284">Jeśli `d` jest ujemna, obecności części ułamkowych powoduje, że ma zostać zaokrąglona do mniejszej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-284">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="cd7a5-285">Działanie tej metody różni się od <xref:System.Math.Ceiling%2A> metody, która obsługuje zaokrąglaniem kierunku Plus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-285">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  

## Examples  
 <span data-ttu-id="cd7a5-286">W poniższym przykładzie pokazano <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> metody i zestawiono ze sobą za pomocą <xref:System.Math.Ceiling%28System.Decimal%29> metody.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-286">The following example illustrates the <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static double Floor (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Floor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Floor(double d);" />
      <MemberSignature Language="F#" Value="static member Floor : double -&gt; double" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-287">Liczba zmiennoprzecinkowa podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-287">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="cd7a5-288">Zwraca największą wartość całkowitą mniejszą lub równą podanej liczbie zmiennoprzecinkowej podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-288">Returns the largest integral value less than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-289">Całkowite największą wartość mniejsze niż lub równe <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-289">The largest integral value less than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="cd7a5-290">Jeśli <paramref name="d" /> jest równa <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, lub <see cref="F:System.Double.PositiveInfinity" />, jest zwracana wartość.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-290">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-291">Zachowanie tej metody jest zgodne ze standardem IEEE 754, sekcja 4.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-291">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="cd7a5-292">Tego rodzaju zaokrąglenie jest czasami nazywane zaokrąglaniem kierunku minus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-292">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="cd7a5-293">Innymi słowy Jeśli `d` jest dodatnia, dowolny składnik ułamkowe zostały obcięte.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-293">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="cd7a5-294">Jeśli `d` jest ujemna, obecności części ułamkowych powoduje, że ma zostać zaokrąglona do mniejszej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-294">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="cd7a5-295">Działanie tej metody różni się od <xref:System.Math.Ceiling%2A> metody, która obsługuje zaokrąglaniem kierunku Plus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-295">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  

<span data-ttu-id="cd7a5-296">Począwszy od programu Visual Basic 15.8 wydajność podwójnej precyzji na całkowite konwersji jest zoptymalizowane pod kątem w przypadku przekazania wartości zwracanej przez `Floor` metody do któregokolwiek elementu [funkcje konwersji typu całkowitego](~/docs/visual-basic/language-reference/functions/conversion-functions.md), lub jeśli podwójna wartość zwrócone przez `Floor` jest automatycznie konwertowany na liczbę całkowitą z [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) wartość wyłączone.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-296">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Floor` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Floor` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="cd7a5-297">Tego rodzaju optymalizacji umożliwia kod wymagany do uruchomienia szybciej — maksymalnie dwa razy, jak szybko uzyskać kod, który obsługuje dużą liczbę konwersji na typy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-297">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="cd7a5-298">Poniższy przykład ilustruje takie konwersje zoptymalizowane:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-298">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1043

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7968
```

## Examples  
 <span data-ttu-id="cd7a5-299">W poniższym przykładzie pokazano <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> metody i zestawiono ze sobą za pomocą <xref:System.Math.Ceiling%28System.Double%29> metody.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-299">The following example illustrates the <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Double%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static double IEEERemainder (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IEEERemainder(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double IEEERemainder(double x, double y);" />
      <MemberSignature Language="F#" Value="static member IEEERemainder : double * double -&gt; double" Usage="System.Math.IEEERemainder (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="cd7a5-300">Dzielna.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-300">A dividend.</span></span></param>
        <param name="y"><span data-ttu-id="cd7a5-301">Dzielnik.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-301">A divisor.</span></span></param>
        <summary><span data-ttu-id="cd7a5-302">Zwraca resztę z dzielenia liczby określonej przez inny określony numer.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-302">Returns the remainder resulting from the division of a specified number by another specified number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-303">Liczby równej <paramref name="x" /> -(<paramref name="y" /> funkcji pytania i odpowiedzi), w którym funkcji pytania i odpowiedzi jest równy ilorazowi <paramref name="x" />  /  <paramref name="y" /> zaokrąglona do najbliższej liczby całkowitej (Jeśli <paramref name="x" />  /  <paramref name="y" /> przypada w połowie między dwoma liczbami całkowitymi, parzystej liczby całkowitej jest zwracana).</span><span class="sxs-lookup"><span data-stu-id="cd7a5-303">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span></span>  
  
<span data-ttu-id="cd7a5-304">Jeśli <paramref name="x" /> -(<paramref name="y" /> funkcji pytania i odpowiedzi) wynosi zero, wartość + 0 jest zwracany, jeśli <paramref name="x" /> jest dodatni lub - 0, jeśli <paramref name="x" /> jest ujemna.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-304">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span></span>  
  
<span data-ttu-id="cd7a5-305">Jeśli <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-305">If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-306">Ta operacja jest zgodny z zdefiniowane w sekcji 5.1 754-1985 standard ANSI/IEEE; Operacja Reminder Standard IEEE binarne arytmetyki zmiennoprzecinkowej; Instytut elektrycznych i Electronics Engineers, Inc.; 1985 roku.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-306">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="cd7a5-307"><xref:System.Math.IEEERemainder%2A> Metoda nie jest taka sama jak [operator reszty](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="cd7a5-307">The <xref:System.Math.IEEERemainder%2A> method is not the same as the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span> <span data-ttu-id="cd7a5-308">Mimo że oba zwracają resztę po dzielenia, formuł, które używają różnią się.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-308">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="cd7a5-309">Formuła <xref:System.Math.IEEERemainder%2A> metodą jest:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-309">The formula for the <xref:System.Math.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * Math.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="cd7a5-310">Z kolei dla operatora reszta jest:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-310">In contrast, the formula for the remainder operator is:</span></span>  
  
```  
Remainder = (Math.Abs(dividend) - (Math.Abs(divisor) *   
            (Math.Floor(Math.Abs(dividend) / Math.Abs(divisor))))) *   
            Math.Sign(dividend)  
```  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-311">Poniższy przykład różni się znacząco resztę zwrócony przez <xref:System.Math.IEEERemainder%2A> metody za pomocą pozostałej zwrócony przez [operator reszty](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="cd7a5-311">The following example contrasts the remainder returned by the <xref:System.Math.IEEERemainder%2A> method with the remainder returned by the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
 [!code-csharp[System.Math.IEEERemainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.ieeeremainder/cs/ieeeremainder1.cs#1)]
 [!code-vb[System.Math.IEEERemainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.ieeeremainder/vb/ieeeremainder1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd7a5-312">Zwraca wartość logarytmu określonej liczby.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-312">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double d);" />
      <MemberSignature Language="F#" Value="static member Log : double -&gt; double" Usage="System.Math.Log d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-313">Liczba, której logarytm ma zostać znaleziona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-313">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="cd7a5-314">Zwraca fizyczna (podstawowy <see langword="e" />) logarytmu określonej liczby.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-314">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-315">Jedna z wartości w tabeli poniżej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-315">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="cd7a5-316"><paramref name="d" /> Parametr</span><span class="sxs-lookup"><span data-stu-id="cd7a5-316"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="cd7a5-317">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-317">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cd7a5-318">Dodatnie</span><span class="sxs-lookup"><span data-stu-id="cd7a5-318">Positive</span></span> 
 </term><description> <span data-ttu-id="cd7a5-319">Logarytm naturalny <paramref name="d" />; oznacza to, ln <paramref name="d" />, lub dziennika e <paramref name="d" /></span><span class="sxs-lookup"><span data-stu-id="cd7a5-319">The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e <paramref name="d" /></span></span></description></item><item><term> <span data-ttu-id="cd7a5-320">Zero</span><span class="sxs-lookup"><span data-stu-id="cd7a5-320">Zero</span></span> 
 </term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="cd7a5-321">Ujemne</span><span class="sxs-lookup"><span data-stu-id="cd7a5-321">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="cd7a5-322">Równa się <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="cd7a5-322">Equal to <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="cd7a5-323">Równa się <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="cd7a5-323">Equal to <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-324">Parametr `d` jest określony jako podstawowy numer 10.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-324">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-325">W poniższym przykładzie pokazano <xref:System.Math.Log%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-325">The following example illustrates the <xref:System.Math.Log%2A> method.</span></span>  
  
 [!code-csharp[System.Math.Log_Overloads#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/log1.cs#2)]
 [!code-vb[System.Math.Log_Overloads#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/log1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double a, double newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 a, float64 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (a As Double, newBase As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double a, double newBase);" />
      <MemberSignature Language="F#" Value="static member Log : double * double -&gt; double" Usage="System.Math.Log (a, newBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="newBase" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="cd7a5-326">Liczba, której logarytm ma zostać znaleziona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-326">The number whose logarithm is to be found.</span></span></param>
        <param name="newBase"><span data-ttu-id="cd7a5-327">Podstawa logarytmu.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-327">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="cd7a5-328">Zwraca wartość logarytmu określonej liczby, w określonej bazie.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-328">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-329">Jedna z wartości w tabeli poniżej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-329">One of the values in the following table.</span></span> <span data-ttu-id="cd7a5-330">(+ Infinity oznacza <see cref="F:System.Double.PositiveInfinity" />, - nieskończoność oznacza <see cref="F:System.Double.NegativeInfinity" />, i oznacza NaN <see cref="F:System.Double.NaN" />.)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-330">(+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)</span></span> 
 <list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> <span data-ttu-id="cd7a5-331">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-331">Return value</span></span> 
 </description></listheader><item><term><span data-ttu-id="cd7a5-332"><paramref name="a" />&gt; 0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-332"><paramref name="a" />&gt; 0</span></span> 
 </term><description> <span data-ttu-id="cd7a5-333">(0 &lt; <paramref name="newBase" /> &lt; 1) - lub -(<paramref name="newBase" /> &gt; 1)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-333">(0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span></span> 
 </description><description> <span data-ttu-id="cd7a5-334">lognewBase(a)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-334">lognewBase(a)</span></span> 
 </description></item><item><term><span data-ttu-id="cd7a5-335"><paramref name="a" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-335"><paramref name="a" />&lt; 0</span></span> 
 </term><description> <span data-ttu-id="cd7a5-336">(dowolna wartość)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-336">(any value)</span></span> 
 </description><description> <span data-ttu-id="cd7a5-337">NaN</span><span class="sxs-lookup"><span data-stu-id="cd7a5-337">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="cd7a5-338">(dowolna wartość)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-338">(any value)</span></span> 
 </term><description><span data-ttu-id="cd7a5-339"><paramref name="newBase" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-339"><paramref name="newBase" />&lt; 0</span></span> 
 </description><description> <span data-ttu-id="cd7a5-340">NaN</span><span class="sxs-lookup"><span data-stu-id="cd7a5-340">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="cd7a5-341"><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-341"><paramref name="a" /> != 1</span></span> 
 </term><description><span data-ttu-id="cd7a5-342"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-342"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="cd7a5-343">NaN</span><span class="sxs-lookup"><span data-stu-id="cd7a5-343">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="cd7a5-344"><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-344"><paramref name="a" /> != 1</span></span> 
 </term><description><span data-ttu-id="cd7a5-345"><paramref name="newBase" /> = + Infinity</span><span class="sxs-lookup"><span data-stu-id="cd7a5-345"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="cd7a5-346">NaN</span><span class="sxs-lookup"><span data-stu-id="cd7a5-346">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="cd7a5-347"><paramref name="a" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="cd7a5-347"><paramref name="a" /> = NaN</span></span> 
 </term><description> <span data-ttu-id="cd7a5-348">(dowolna wartość)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-348">(any value)</span></span> 
 </description><description> <span data-ttu-id="cd7a5-349">NaN</span><span class="sxs-lookup"><span data-stu-id="cd7a5-349">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="cd7a5-350">(dowolna wartość)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-350">(any value)</span></span> 
 </term><description><span data-ttu-id="cd7a5-351"><paramref name="newBase" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="cd7a5-351"><paramref name="newBase" /> = NaN</span></span> 
 </description><description> <span data-ttu-id="cd7a5-352">NaN</span><span class="sxs-lookup"><span data-stu-id="cd7a5-352">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="cd7a5-353">(dowolna wartość)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-353">(any value)</span></span> 
 </term><description><span data-ttu-id="cd7a5-354"><paramref name="newBase" /> = 1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-354"><paramref name="newBase" /> = 1</span></span> 
 </description><description> <span data-ttu-id="cd7a5-355">NaN</span><span class="sxs-lookup"><span data-stu-id="cd7a5-355">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="cd7a5-356"><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-356"><paramref name="a" /> = 0</span></span> 
 </term><description> <span data-ttu-id="cd7a5-357">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-357">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="cd7a5-358">+ Infinity</span><span class="sxs-lookup"><span data-stu-id="cd7a5-358">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="cd7a5-359"><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-359"><paramref name="a" /> = 0</span></span> 
 </term><description><span data-ttu-id="cd7a5-360"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-360"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="cd7a5-361">-Nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-361">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="cd7a5-362"><paramref name="a" /> = + Infinity</span><span class="sxs-lookup"><span data-stu-id="cd7a5-362"><paramref name="a" /> =  +Infinity</span></span> 
 </term><description> <span data-ttu-id="cd7a5-363">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-363">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="cd7a5-364">-Nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-364">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="cd7a5-365"><paramref name="a" /> = + Infinity</span><span class="sxs-lookup"><span data-stu-id="cd7a5-365"><paramref name="a" /> =  +Infinity</span></span> 
 </term><description><span data-ttu-id="cd7a5-366"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-366"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="cd7a5-367">+ Infinity</span><span class="sxs-lookup"><span data-stu-id="cd7a5-367">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="cd7a5-368"><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-368"><paramref name="a" /> = 1</span></span> 
 </term><description><span data-ttu-id="cd7a5-369"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-369"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="cd7a5-370">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-370">0</span></span> 
 </description></item><item><term><span data-ttu-id="cd7a5-371"><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-371"><paramref name="a" /> = 1</span></span> 
 </term><description><span data-ttu-id="cd7a5-372"><paramref name="newBase" /> = + Infinity</span><span class="sxs-lookup"><span data-stu-id="cd7a5-372"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="cd7a5-373">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-373">0</span></span> 
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-374">W poniższym przykładzie użyto <xref:System.Math.Log%2A> można obliczyć wartości niektórych logarytmicznej tożsamości dla wybranych wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-374">The following example uses <xref:System.Math.Log%2A> to evaluate certain logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Log_Overloads#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CPP/loggen.cpp#1)]
 [!code-csharp[System.Math.Log_Overloads#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/loggen.cs#1)]
 [!code-vb[System.Math.Log_Overloads#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/loggen.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(double d);" />
      <MemberSignature Language="F#" Value="static member Log10 : double -&gt; double" Usage="System.Math.Log10 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-375">Liczba, której logarytm ma zostać znaleziona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-375">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="cd7a5-376">Zwraca logarytm 10 określoną liczbę.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-376">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-377">Jedna z wartości w tabeli poniżej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-377">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="cd7a5-378"><paramref name="d" /> Parametr</span><span class="sxs-lookup"><span data-stu-id="cd7a5-378"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="cd7a5-379">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-379">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cd7a5-380">Dodatnie</span><span class="sxs-lookup"><span data-stu-id="cd7a5-380">Positive</span></span> 
 </term><description> <span data-ttu-id="cd7a5-381">Dziennik podstawowy 10 <paramref name="d" />; to, zaloguj się 10<paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-381">The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-382">Zero</span><span class="sxs-lookup"><span data-stu-id="cd7a5-382">Zero</span></span> 
 </term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="cd7a5-383">Ujemne</span><span class="sxs-lookup"><span data-stu-id="cd7a5-383">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="cd7a5-384">Równa się <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="cd7a5-384">Equal to <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="cd7a5-385">Równa się <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="cd7a5-385">Equal to <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-386">Parametr `d` jest określony jako podstawowy numer 10.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-386">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-387">W poniższym przykładzie użyto <xref:System.Math.Log10%2A> metodę, aby zwrócić logarytm 10 dla wybranych wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-387">The following example uses the <xref:System.Math.Log10%2A> method to return the base 10 logarithm for selected values.</span></span>  
  
 [!code-csharp[System.Math.Log10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log10/CS/log10.cs#1)]
 [!code-vb[System.Math.Log10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log10/VB/log10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd7a5-388">Zwraca większy z dwóch podanych liczb.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-388">Returns the larger of two specified numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static byte Max (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Max(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Max(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Max : byte * byte -&gt; byte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-389">Pierwsze dwa 8-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-389">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-390">Drugi dwóch 8-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-390">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-391">Zwraca większy z dwóch liczb całkowitych bez znaku 8-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-391">Returns the larger of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-392">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-392">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-393">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Max%2A> metodę, aby przywrócić i wyświetlić większą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-393">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Max(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Max : decimal * decimal -&gt; decimal" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-394">Pierwsza z dwóch liczb dziesiętnych, do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-394">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-395">Drugi dwóch liczb dziesiętnych, do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-395">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-396">Zwraca większy z dwóch liczb dziesiętnych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-396">Returns the larger of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-397">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-397">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-398">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Max%2A> metodę, aby przywrócić i wyświetlić większą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-398">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Max : double * double -&gt; double" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-399">Pierwsza z dwóch liczb zmiennoprzecinkowe podwójnej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-399">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-400">Drugi dwie liczby zmiennoprzecinkowe podwójnej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-400">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-401">Zwraca większy z nich dwie liczby zmiennoprzecinkowe podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-401">Returns the larger of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-402">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-402">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="cd7a5-403">Jeśli <paramref name="val1" />, <paramref name="val2" />, i / lub <paramref name="val1" /> i <paramref name="val2" /> są równe <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-403">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-404">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Max%2A> metodę, aby przywrócić i wyświetlić większą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-404">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static short Max (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Max(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Max(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Max : int16 * int16 -&gt; int16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-405">Pierwsza z dwóch 16-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-405">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-406">Drugi dwóch 16-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-406">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-407">Zwraca większy z dwóch liczb całkowitych ze znakiem 16-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-407">Returns the larger of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-408">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-408">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-409">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Max%2A> metodę, aby przywrócić i wyświetlić większą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-409">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Max(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Max : int * int -&gt; int" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-410">Pierwsza z dwóch 32-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-410">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-411">Drugi dwóch 32-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-411">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-412">Zwraca większy z dwóch liczb całkowitych ze znakiem 32-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-412">Returns the larger of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-413">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-413">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-414">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Max%2A> metodę, aby przywrócić i wyświetlić większą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-414">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Max(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Max : int64 * int64 -&gt; int64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-415">Pierwsza z dwóch 64-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-415">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-416">Drugi dwóch 64-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-416">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-417">Zwraca większy z dwóch liczb całkowitych ze znakiem 64-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-417">Returns the larger of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-418">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-418">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-419">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Max%2A> metodę, aby przywrócić i wyświetlić większą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-419">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static sbyte Max (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Max(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Max(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Max : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-420">Pierwsza z dwóch 8-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-420">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-421">Drugi dwóch 8-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-421">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-422">Zwraca większy z dwóch liczb całkowitych ze znakiem 8-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-422">Returns the larger of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-423">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-423">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-424">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Max%2A> metodę, aby przywrócić i wyświetlić większą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-424">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Max : single * single -&gt; single" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-425">Pierwsza z dwóch liczb zmiennoprzecinkowych pojedynczej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-425">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-426">Drugi dwóch liczb zmiennoprzecinkowych pojedynczej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-426">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-427">Zwraca większy z dwóch liczb zmiennoprzecinkowych pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-427">Returns the larger of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-428">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-428">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="cd7a5-429">Jeśli <paramref name="val1" />, lub <paramref name="val2" />, i / lub <paramref name="val1" /> i <paramref name="val2" /> są równe <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-429">If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-430">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Max%2A> metodę, aby przywrócić i wyświetlić większą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-430">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ushort Max (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Max(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Max(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint16 * uint16 -&gt; uint16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-431">Pierwsza z dwóch 16-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-431">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-432">Drugi dwóch 16-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-432">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-433">Zwraca większy z dwóch liczb całkowitych bez znaku 16-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-433">Returns the larger of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-434">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-434">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-435">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Max%2A> metodę, aby przywrócić i wyświetlić większą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-435">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static uint Max (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Max(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Max(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint32 * uint32 -&gt; uint32" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-436">Pierwsze dwa 32-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-436">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-437">Drugi dwóch 32-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-437">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-438">Zwraca większy z dwóch liczb całkowitych bez znaku 32-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-438">Returns the larger of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-439">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-439">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-440">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Max%2A> metodę, aby przywrócić i wyświetlić większą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-440">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ulong Max (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Max(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Max(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint64 * uint64 -&gt; uint64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-441">Pierwsze dwa 64-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-441">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-442">Drugi dwóch 64-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-442">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-443">Zwraca większy z dwóch liczb całkowitych bez znaku 64-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-443">Returns the larger of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-444">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-444">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-445">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Max%2A> metodę, aby przywrócić i wyświetlić większą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-445">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd7a5-446">Zwraca wartość mniejszą z dwóch liczb.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-446">Returns the smaller of two numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static byte Min (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Min(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Min(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Min : byte * byte -&gt; byte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-447">Pierwsze dwa 8-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-447">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-448">Drugi dwóch 8-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-448">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-449">Zwraca wartość mniejszą z dwóch liczb całkowitych bez znaku 8-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-449">Returns the smaller of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-450">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-450">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-451">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Min%2A> metodę, aby przywrócić i wyświetlić mniejszą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-451">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Min(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Min : decimal * decimal -&gt; decimal" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-452">Pierwsza z dwóch liczb dziesiętnych, do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-452">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-453">Drugi dwóch liczb dziesiętnych, do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-453">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-454">Zwraca wartość mniejszą z dwóch liczb dziesiętnych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-454">Returns the smaller of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-455">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-455">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-456">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Min%2A> metodę, aby przywrócić i wyświetlić mniejszą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-456">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Min : double * double -&gt; double" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-457">Pierwsza z dwóch liczb zmiennoprzecinkowe podwójnej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-457">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-458">Drugi dwie liczby zmiennoprzecinkowe podwójnej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-458">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-459">Zwraca wartość mniejszą z dwóch liczb zmiennoprzecinkowe podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-459">Returns the smaller of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-460">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-460">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="cd7a5-461">Jeśli <paramref name="val1" />, <paramref name="val2" />, i / lub <paramref name="val1" /> i <paramref name="val2" /> są równe <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-461">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-462">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Min%2A> metodę, aby przywrócić i wyświetlić mniejszą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-462">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static short Min (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Min(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Min(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Min : int16 * int16 -&gt; int16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-463">Pierwsza z dwóch 16-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-463">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-464">Drugi dwóch 16-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-464">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-465">Zwraca wartość mniejszą z dwóch liczb całkowitych ze znakiem 16-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-465">Returns the smaller of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-466">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-466">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-467">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Min%2A> metodę, aby przywrócić i wyświetlić mniejszą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-467">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Min(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Min : int * int -&gt; int" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-468">Pierwsza z dwóch 32-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-468">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-469">Drugi dwóch 32-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-469">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-470">Zwraca wartość mniejszą z dwóch liczb całkowitych ze znakiem 32-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-470">Returns the smaller of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-471">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-471">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-472">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Min%2A> metodę, aby przywrócić i wyświetlić mniejszą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-472">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Min(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Min : int64 * int64 -&gt; int64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-473">Pierwsza z dwóch 64-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-473">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-474">Drugi dwóch 64-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-474">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-475">Zwraca wartość mniejszą z dwóch liczb całkowitych ze znakiem 64-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-475">Returns the smaller of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-476">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-476">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-477">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Min%2A> metodę, aby przywrócić i wyświetlić mniejszą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-477">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static sbyte Min (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Min(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Min(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Min : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-478">Pierwsza z dwóch 8-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-478">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-479">Drugi dwóch 8-bitowych liczb całkowitych ze znakiem do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-479">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-480">Zwraca wartość mniejszą z dwóch liczb całkowitych ze znakiem 8-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-480">Returns the smaller of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-481">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-481">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-482">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Min%2A> metodę, aby przywrócić i wyświetlić mniejszą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-482">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Min : single * single -&gt; single" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-483">Pierwsza z dwóch liczb zmiennoprzecinkowych pojedynczej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-483">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-484">Drugi dwóch liczb zmiennoprzecinkowych pojedynczej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-484">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-485">Zwraca wartość mniejszą z dwóch liczb zmiennoprzecinkowych pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-485">Returns the smaller of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-486">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-486">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="cd7a5-487">Jeśli <paramref name="val1" />, <paramref name="val2" />, i / lub <paramref name="val1" /> i <paramref name="val2" /> są równe <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-487">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-488">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Min%2A> metodę, aby przywrócić i wyświetlić mniejszą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-488">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ushort Min (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Min(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Min(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint16 * uint16 -&gt; uint16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-489">Pierwsza z dwóch 16-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-489">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-490">Drugi dwóch 16-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-490">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-491">Zwraca wartość mniejszą z dwóch liczb całkowitych bez znaku 16-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-491">Returns the smaller of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-492">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-492">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-493">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Min%2A> metodę, aby przywrócić i wyświetlić mniejszą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-493">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static uint Min (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Min(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Min(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint32 * uint32 -&gt; uint32" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-494">Pierwsze dwa 32-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-494">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-495">Drugi dwóch 32-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-495">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-496">Zwraca wartość mniejszą z dwóch liczb całkowitych bez znaku 32-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-496">Returns the smaller of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-497">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-497">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-498">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Min%2A> metodę, aby przywrócić i wyświetlić mniejszą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-498">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ulong Min (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Min(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Min(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint64 * uint64 -&gt; uint64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="cd7a5-499">Pierwsze dwa 64-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-499">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="cd7a5-500">Drugi dwóch 64-bitowych liczb całkowitych bez znaku do porównania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-500">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="cd7a5-501">Zwraca wartość mniejszą z dwóch liczb całkowitych bez znaku 64-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-501">Returns the smaller of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-502">Parametr <paramref name="val1" /> lub <paramref name="val2" />, która kwota jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-502">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-503">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Min%2A> metodę, aby przywrócić i wyświetlić mniejszą z dwóch zmiennych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-503">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.1415926535897931;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.1415926535897931)" />
      <MemberSignature Language="DocId" Value="F:System.Math.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.1415926535897931" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.1415926535897931;" />
      <MemberSignature Language="F#" Value="val mutable PI : double" Usage="System.Math.PI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.1415926535897931</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7a5-504">Reprezentuje jego średnicy określony przez stałą π stosunek obwód koła.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-504">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-505">Wartość tego pola jest 3.1415926535897931.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-505">The value of this field is 3.1415926535897931.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-506">W poniższym przykładzie użyto <xref:System.Math.PI> ułatwiających obliczeń wewnętrzny kąty Trapez danego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-506">The following example uses <xref:System.Math.PI> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static double Pow (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pow(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Pow(double x, double y);" />
      <MemberSignature Language="F#" Value="static member Pow : double * double -&gt; double" Usage="System.Math.Pow (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="cd7a5-507">Liczba zmiennoprzecinkowa podwójnej precyzji być podniesiona do potęgi.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-507">A double-precision floating-point number to be raised to a power.</span></span></param>
        <param name="y"><span data-ttu-id="cd7a5-508">Liczba zmiennoprzecinkowa podwójnej precyzji, która określa potęgi.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-508">A double-precision floating-point number that specifies a power.</span></span></param>
        <summary><span data-ttu-id="cd7a5-509">Zwraca określoną liczbę podniesioną do wskazanej potęgi.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-509">Returns a specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-510">Liczba <paramref name="x" /> podniesioną do potęgi <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-510">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-511">Poniższa tabela wskazuje wartość zwracana, gdy różne wartości lub wartości, które są określone dla `x` i `y` parametrów.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-511">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="cd7a5-512">Aby uzyskać więcej informacji, zobacz <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, i <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-512">For more information, see <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="cd7a5-513">Parametry</span><span class="sxs-lookup"><span data-stu-id="cd7a5-513">Parameters</span></span>|<span data-ttu-id="cd7a5-514">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-514">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="cd7a5-515">`x` lub `y`  =  `NaN`.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-515">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="cd7a5-516">`x` = Wszystkie wartości z wyjątkiem `NaN`; `y` = 0.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-516">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="cd7a5-517">1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-517">1</span></span>|  
|<span data-ttu-id="cd7a5-518">`x` = `NegativeInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-518">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="cd7a5-519">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-519">0</span></span>|  
|<span data-ttu-id="cd7a5-520">`x` = `NegativeInfinity`; `y` jest dodatnia nieparzystej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-520">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="cd7a5-521">`x` = `NegativeInfinity`; `y` jest dodatni, ale nie nieparzystej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-521">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="cd7a5-522">`x` < 0, ale nie `NegativeInfinity`; `y` nie jest liczbą całkowitą `NegativeInfinity`, lub `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-522">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="cd7a5-523">`x` = -1; `y`  =  `NegativeInfinity` lub `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-523">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="cd7a5-524">-1 < `x` < 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-524">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="cd7a5-525">-1 < `x` < 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-525">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="cd7a5-526">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-526">0</span></span>|  
|<span data-ttu-id="cd7a5-527">`x` < wartość -1 lub `x` > 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-527">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="cd7a5-528">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-528">0</span></span>|  
|<span data-ttu-id="cd7a5-529">`x` < wartość -1 lub `x` > 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-529">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="cd7a5-530">`x` = 0; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-530">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="cd7a5-531">`x` = 0; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-531">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="cd7a5-532">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-532">0</span></span>|  
|<span data-ttu-id="cd7a5-533">`x` = 1; `y` oznacza dowolną wartość z wyjątkiem `NaN`.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-533">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="cd7a5-534">1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-534">1</span></span>|  
|<span data-ttu-id="cd7a5-535">`x` = `PositiveInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-535">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="cd7a5-536">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-536">0</span></span>|  
|<span data-ttu-id="cd7a5-537">`x` = `PositiveInfinity`; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-537">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-538">W poniższym przykładzie użyto <xref:System.Math.Pow%2A> metodę, aby obliczyć wartość, która wynika z procesu zgłaszania 2 do potęgi z zakresu od 0 do 32.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-538">The following example uses the <xref:System.Math.Pow%2A> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</span></span>  
  
 [!code-csharp[System.Math.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.pow/cs/pow1.cs#1)]
 [!code-vb[System.Math.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.pow/vb/pow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd7a5-539">Zaokrągla wartość do najbliższej liczby całkowitej lub określonej liczby cyfr dziesiętnych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-539">Rounds a value to the nearest integer or to the specified number of fractional digits.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
<a name="remarks_round"></a> 
## Remarks 

<span data-ttu-id="cd7a5-540">W tej sekcji:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-540">In this section:</span></span>

- [<span data-ttu-id="cd7a5-541">Która metoda zostanie wywołana?</span><span class="sxs-lookup"><span data-stu-id="cd7a5-541">Which method do I call?</span></span>](#which-method-do-i-call)
- [<span data-ttu-id="cd7a5-542">Wartości punktu środkowego i konwencje zaokrąglania</span><span class="sxs-lookup"><span data-stu-id="cd7a5-542">Midpoint values and rounding conventions</span></span>](#midpoint-values-and-rounding-conventions)   
- [<span data-ttu-id="cd7a5-543">Zaokrąglenia i dokładność</span><span class="sxs-lookup"><span data-stu-id="cd7a5-543">Rounding and precision</span></span>](#rounding-and-precision) 
- [<span data-ttu-id="cd7a5-544">Zaokrąglenia i Pojedyncza precyzja wartości zmiennoprzecinkowych</span><span class="sxs-lookup"><span data-stu-id="cd7a5-544">Rounding and single-precision floating point values</span></span>](#rounding-and-single-precision-floating-point-values)
- [<span data-ttu-id="cd7a5-545">Przykłady poszczególnych przeciążeń</span><span class="sxs-lookup"><span data-stu-id="cd7a5-545">Examples of individual overloads</span></span>](#examples)

### <a name="which-method-do-i-call"></a><span data-ttu-id="cd7a5-546">Jaką metodę wywołać?</span><span class="sxs-lookup"><span data-stu-id="cd7a5-546">Which method do I call?</span></span>

<span data-ttu-id="cd7a5-547">Aby wybrać odpowiednią metodę zaokrąglania, można użyć poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-547">You can use the following table to select an appropriate rounding method.</span></span> <span data-ttu-id="cd7a5-548">Oprócz `Math.Round` metod, obejmuje także <xref:System.Math.Ceiling%2A?displayProperty=nameWithType> i <xref:System.Math.Floor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-548">In addition to the `Math.Round` methods, it also includes <xref:System.Math.Ceiling%2A?displayProperty=nameWithType> and <xref:System.Math.Floor%2A?displayProperty=nameWithType>.</span></span>

|<span data-ttu-id="cd7a5-549">Zadanie</span><span class="sxs-lookup"><span data-stu-id="cd7a5-549">To</span></span>|<span data-ttu-id="cd7a5-550">Wywołania</span><span class="sxs-lookup"><span data-stu-id="cd7a5-550">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="cd7a5-551">Zaokrąglają liczbę do liczby całkowitej, za pomocą zaokrąglania do najbliższej Konwencji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-551">Round a number to an integer by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <span data-ttu-id="cd7a5-552">—lub—</span><span class="sxs-lookup"><span data-stu-id="cd7a5-552">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%29>|  
|<span data-ttu-id="cd7a5-553">Zaokrąglij liczbę całkowitą przy użyciu określonego zaokrąglania Konwencji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-553">Round a number to an integer by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="cd7a5-554">—lub—</span><span class="sxs-lookup"><span data-stu-id="cd7a5-554">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="cd7a5-555">Zaokrąglają liczbę do określonej liczby cyfr ułamkowych, jaka za pomocą zaokrąglania do najbliższej Konwencji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-555">Round a number to a specified number of fractional digits by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <span data-ttu-id="cd7a5-556">—lub—</span><span class="sxs-lookup"><span data-stu-id="cd7a5-556">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|  
|<span data-ttu-id="cd7a5-557">Zaokrąglij liczbę do określonej liczby cyfr ułamkowych, jaka przy użyciu określonego zaokrąglania Konwencji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-557">Round a number to a specified number of fractional digits by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="cd7a5-558">—lub—</span><span class="sxs-lookup"><span data-stu-id="cd7a5-558">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="cd7a5-559">ROUND <xref:System.Single> wartość określonej liczby cyfr ułamkowych, jaka przy użyciu określonego zaokrąglania Konwencji i minimalizuje utratę dokładności.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-559">Round a <xref:System.Single> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</span></span>|<span data-ttu-id="cd7a5-560">Konwertuj <xref:System.Single> do <xref:System.Decimal> i wywołać <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-560">Convert the <xref:System.Single> to a <xref:System.Decimal> and call <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span></span>|  
|<span data-ttu-id="cd7a5-561">Zaokrąglają liczbę do określonej liczby cyfr ułamkowych, jaka przy jednoczesnym zmniejszeniu problemy dokładności zaokrąglania wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-561">Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</span></span>|<span data-ttu-id="cd7a5-562">Wywołaj metodę zaokrąglania, która implementuje porównania "większe niż lub równa około".</span><span class="sxs-lookup"><span data-stu-id="cd7a5-562">Call a rounding method that implements a "greater than or approximately equal to" comparison.</span></span> <span data-ttu-id="cd7a5-563">Zobacz [zaokrąglanie i dokładność](#Precision).</span><span class="sxs-lookup"><span data-stu-id="cd7a5-563">See [Rounding and precision](#Precision).</span></span>|  
|<span data-ttu-id="cd7a5-564">Zaokrąglij ułamkowe wartości na liczbę całkowitą, jest większa niż wartość ułamkowa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-564">Round a fractional value to an integer that is greater than the fractional value.</span></span> <span data-ttu-id="cd7a5-565">Na przykład round 3.1 do 4.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-565">For example, round 3.1 to 4.</span></span>|<xref:System.Math.Ceiling%2A>|  
|<span data-ttu-id="cd7a5-566">Zaokrąglij ułamkowe wartości na liczbę całkowitą jest mniejsza niż wartość ułamkowa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-566">Round a fractional value to an integer that is less than the fractional value.</span></span> <span data-ttu-id="cd7a5-567">Na przykład round 3.9 do 3.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-567">For example, round 3.9 to 3.</span></span>|<xref:System.Math.Floor%2A>|  

### <a name="midpoint-values-and-rounding-conventions"></a><span data-ttu-id="cd7a5-568">Wartości punktu środkowego i konwencje zaokrąglania</span><span class="sxs-lookup"><span data-stu-id="cd7a5-568">Midpoint values and rounding conventions</span></span> 

<span data-ttu-id="cd7a5-569">Zaokrąglanie polega na konwersji wartość liczbową z dokładnością do określonej do najbliższej wartości z mniejszą dokładnością.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-569">Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</span></span> <span data-ttu-id="cd7a5-570">Na przykład, można użyć <xref:System.Math.Round%28System.Double%29> metody zaokrąglanie wartości 3.4 do 3.0 i <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> metody zaokrąglanie wartości 3.579 do 3.58.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-570">For example, you can use the <xref:System.Math.Round%28System.Double%29> method to round a value of 3.4 to 3.0, and the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> method to round a value of 3.579 to 3.58.</span></span>  
  
<span data-ttu-id="cd7a5-571">W wartości punktu środkowego wartość po najmniej znaczące cyfry w wyniku jest dokładnie połowy między dwiema liczbami.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-571">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="cd7a5-572">Na przykład 3.47500 jest wartość środkową, jeśli ma zostać zaokrąglona dwóch miejsc po przecinku, a 7.500 jest wartością środkową, jeśli jest zaokrąglana do liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-572">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="cd7a5-573">W takich przypadkach najbliższej wartości nie można łatwo zidentyfikować bez zaokrąglania Konwencji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-573">In these cases, the nearest value can't be easily identified without a rounding convention.</span></span>  
  
<span data-ttu-id="cd7a5-574"><xref:System.Math.Round%2A> Metoda obsługuje dwa konwencje zaokrąglania wartości punktu środkowego obsługi:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-574">The <xref:System.Math.Round%2A> method supports two rounding conventions for handling midpoint values:</span></span>  
  
- <span data-ttu-id="cd7a5-575">**Zaokrąglanie od zera**</span><span class="sxs-lookup"><span data-stu-id="cd7a5-575">**Rounding away from zero**</span></span>  

   <span data-ttu-id="cd7a5-576">Wartości punktu środkowego są zaokrąglane do najbliższej liczby w kierunku od zera.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-576">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="cd7a5-577">Na przykład 3,75 powoduje zaokrąglenie do 3.8, 3.85 zostanie zaokrąglona do 3.9,-3.75 Zaokrągla do-3.8, i-3.85 powoduje zaokrąglenie do-3.9.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-577">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="cd7a5-578">Tego rodzaju Zaokrąglenie jest reprezentowany przez <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> element członkowski wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-578">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
   <span data-ttu-id="cd7a5-579">Zaokrąglanie od zera jest najczęściej znanych formularza zaokrąglania.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-579">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
- <span data-ttu-id="cd7a5-580">**Zaokrąglenie do najbliższej lub zaokrąglenie kwot**</span><span class="sxs-lookup"><span data-stu-id="cd7a5-580">**Rounding to nearest, or banker's rounding**</span></span>  

   <span data-ttu-id="cd7a5-581">Wartości punktu środkowego są zaokrąglane do najbliższej parzystej liczby.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-581">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="cd7a5-582">Na przykład 3,75 i 3.85 zaokrąglanie do 3.8 i-3.75 i-3.85 zaokrąglanie do-3.8.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-582">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="cd7a5-583">Tego rodzaju Zaokrąglenie jest reprezentowany przez <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> element członkowski wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-583">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
  <span data-ttu-id="cd7a5-584">Zaokrąglenie do najbliższej jest standardowy formularz zaokrąglania w operacjach finansowych i statystycznych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-584">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="cd7a5-585">Odpowiada Standard IEEE 754, sekcja 4.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-585">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="cd7a5-586">Gdy jest używana w wielu operacjach zaokrąglania, zmniejsza błąd zaokrąglania, który jest spowodowany przez zaokrąglania wartości punktu środkowego w jednym kierunku.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-586">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="cd7a5-587">W niektórych przypadkach ten błąd zaokrąglania mogą być znaczące.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-587">In some cases, this rounding error can be significant.</span></span>  
  
  <span data-ttu-id="cd7a5-588">Poniższy przykład ilustruje odchylenie, który może wynikać z zaokrąglania wartości punktu środkowego w jednym kierunku.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-588">The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="cd7a5-589">Przykład oblicza średnią wartość true, tablicę <xref:System.Decimal> wartości, a następnie oblicza średnią, gdy wartości w tablicy są zaokrąglane przy użyciu dwóch Konwencji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-589">The example computes the true mean of an array of <xref:System.Decimal> values, and then computes the mean when the values in the array are rounded by using the two conventions.</span></span> <span data-ttu-id="cd7a5-590">W tym przykładzie wartość true, średnia i oznacza, że gdy zaokrąglania do najbliższej są takie same.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-590">In this example, the true mean and the mean that results when rounding to nearest are the same.</span></span> <span data-ttu-id="cd7a5-591">Jednak oznacza, że gdy zaokrąglanie od zera różni się o.05 (lub % 3.6) ze średnią wartość true.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-591">However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</span></span>  
  
  [!code-csharp-interactive[System.Math.Round.Overload#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mean1.cs#2)]
  [!code-vb[System.Math.Round.Overload#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mean1.vb#2)]  
  
<span data-ttu-id="cd7a5-592">Domyślnie <xref:System.Math.Round%2A> metoda używa zaokrąglenie do najbliższej Konwencji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-592">By default, the <xref:System.Math.Round%2A> method uses the rounding to nearest convention.</span></span> <span data-ttu-id="cd7a5-593">W poniższej tabeli wymieniono przeciążeń <xref:System.Math.Round%2A> metody i konwencją zaokrąglania każda używa.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-593">The following table lists the overloads of the <xref:System.Math.Round%2A> method and the rounding convention that each uses.</span></span>  
  
|<span data-ttu-id="cd7a5-594">przeciążenie</span><span class="sxs-lookup"><span data-stu-id="cd7a5-594">Overload</span></span>|<span data-ttu-id="cd7a5-595">Zaokrąglanie Konwencji</span><span class="sxs-lookup"><span data-stu-id="cd7a5-595">Rounding convention</span></span>|  
|--------------|-------------------------|  
|<xref:System.Math.Round%28System.Decimal%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>|<span data-ttu-id="cd7a5-596">Ustalany na podstawie `mode` parametru.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-596">Determined by `mode` parameter.</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|<span data-ttu-id="cd7a5-597">Ustalany na podstawie `mode` parametru</span><span class="sxs-lookup"><span data-stu-id="cd7a5-597">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="cd7a5-598">Ustalany na podstawie `mode` parametru</span><span class="sxs-lookup"><span data-stu-id="cd7a5-598">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="cd7a5-599">Ustalany na podstawie `mode` parametru</span><span class="sxs-lookup"><span data-stu-id="cd7a5-599">Determined by `mode` parameter</span></span>|  

## <a name="rounding-and-precision"></a><span data-ttu-id="cd7a5-600">Zaokrąglenia i dokładność</span><span class="sxs-lookup"><span data-stu-id="cd7a5-600">Rounding and precision</span></span>  

<span data-ttu-id="cd7a5-601">W celu ustalenia, czy operację zaokrąglenia obejmuje wartości punktu środkowego <xref:System.Math.Round%2A> metoda mnoży oryginalną wartość ma zostać zaokrąglona przez 10<sup>n</sup>, gdzie *n* jest odpowiednią liczbę ułamkowych cyfry w wartości zwracanej, a następnie określa, czy pozostałej części ułamkowych w wartości jest większa niż lub równa.5.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-601">In order to determine whether a rounding operation involves a midpoint value, the <xref:System.Math.Round%2A> method multiplies the original value to be rounded by 10<sup>n</sup>, where *n* is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</span></span> <span data-ttu-id="cd7a5-602">Jest to niewielkie zmiany na test pod kątem równości i jak opisano w sekcji "Testowanie dla równości" <xref:System.Double> temat referencyjny testuje pod kątem równości z wartości zmiennoprzecinkowe mogą powodować problemy ze względu na problemy w formacie zmiennoprzecinkowych z plikiem binarnym Reprezentacja i dokładność.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-602">This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <xref:System.Double> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</span></span> <span data-ttu-id="cd7a5-603">Oznacza to, że wszelkie część ułamkową liczby, która jest nieco mniej niż.5 (ze względu na utratę dokładności) nie są zaokrąglane w górę.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-603">This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</span></span>  

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="cd7a5-604">Poniższy przykład ilustruje ten problem.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-604">The following example illustrates the problem.</span></span> <span data-ttu-id="cd7a5-605">Regularnie dodaje.1 do 11.0 i uzupełnia wynik do najbliższej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-605">It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</span></span> <span data-ttu-id="cd7a5-606">Niezależnie od tego, konwencją zaokrąglania 11,5 powinien zaokrąglanie do 12.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-606">Regardless of the rounding convention, 11.5 should round to 12.</span></span> <span data-ttu-id="cd7a5-607">Jednak jako dane wyjściowe w przykładzie pokazano, nie.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-607">However, as the output from the example shows, it does not.</span></span> <span data-ttu-id="cd7a5-608">W przykładzie użyto "R" [standardowy Ciąg formatujący](~/docs/standard/base-types/standard-numeric-format-strings.md) do wyświetlenia zmiennoprzecinkowy wartości o pełnej dokładności i pokazuje, że wartość zostaje zaokrąglona utracił dokładności podczas powtarzanych dodatki i jej wartość jest faktycznie 11.499999999999998.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-608">The example uses the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</span></span> <span data-ttu-id="cd7a5-609">Ponieważ.499999999999998 jest mniejsza niż.5, wartość nie jest zaokrąglana do następnej największej liczbie całkowitej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-609">Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</span></span> <span data-ttu-id="cd7a5-610">Jak w przykładzie pokazano również, ten problem występuje, jeśli możemy po prostu przypisać stałą wartość 11,5 <xref:System.Double> zmiennej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-610">As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <xref:System.Double> variable.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision1.cs#7)]
[!code-vb[System.Math.Round.Overload#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision1.vb#7)]  
  
<span data-ttu-id="cd7a5-611">Problemy dokładności zaokrąglania wartości punktu środkowego z największym prawdopodobieństwem mogą wystąpić w następujących warunkach:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-611">Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</span></span>  
  
- <span data-ttu-id="cd7a5-612">Gdy wartość ułamkową, nie można wyrazić w dokładnie w formacie binarnym typu zmiennoprzecinkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-612">When a fractional value cannot be expressed precisely in the floating-point type's binary format.</span></span>  
  
- <span data-ttu-id="cd7a5-613">Gdy wartość zostaje zaokrąglona jest obliczana z co najmniej jednej operacji zmiennoprzecinkowej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-613">When the value to be rounded is calculated from one or more floating-point operations.</span></span>  
  
- <span data-ttu-id="cd7a5-614">Jeśli wartość ma zostać zaokrąglona to <xref:System.Single> zamiast <xref:System.Double> lub <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-614">When the value to be rounded is a <xref:System.Single> rather than a <xref:System.Double> or <xref:System.Decimal>.</span></span> <span data-ttu-id="cd7a5-615">Aby uzyskać więcej informacji, zobacz następną sekcję, [zaokrąglanie i wartości zmiennoprzecinkowych pojedynczej precyzji](#Single).</span><span class="sxs-lookup"><span data-stu-id="cd7a5-615">For more information, see the next section, [Rounding and single-precision floating-point values](#Single).</span></span>  
  
 <span data-ttu-id="cd7a5-616">W przypadku braku dokładności zaokrąglając operacje problematyczne możesz wykonać następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-616">In cases where the lack of precision in rounding operations is problematic, you can do the following:</span></span>  
  
- <span data-ttu-id="cd7a5-617">Jeśli operację zaokrąglenia wywołuje przeciążenia, które zaokrągla <xref:System.Double> wartości, można zmienić <xref:System.Double> do <xref:System.Decimal> wartość i wywoływać przeciążenia, które zaokrągla <xref:System.Decimal> jest wartość.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-617">If the rounding operation calls an overload that rounds a <xref:System.Double> value, you can change the <xref:System.Double> to a <xref:System.Decimal> value and call an overload that rounds a <xref:System.Decimal> value instead.</span></span> <span data-ttu-id="cd7a5-618">Mimo że <xref:System.Decimal> — typ danych ma również problemy z reprezentacji i utratę dokładności, te problemy są znacznie mniej typowe.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-618">Although the <xref:System.Decimal> data type also has problems of representation and loss of precision, these issues are far less common.</span></span>  
  
- <span data-ttu-id="cd7a5-619">Definiowanie niestandardowego zaokrąglania algorytmu, który wykonuje test "niemal equal", aby ustalić, czy wartość zostaje zaokrąglona zadowalająco blisko wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-619">Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</span></span> <span data-ttu-id="cd7a5-620">W poniższym przykładzie zdefiniowano `RoundApproximate` metodę, która sprawdza, czy wartość ułamkowa jest wystarczająco blisko podlegał konsekwentnego zaokrąglania wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-620">The following example defines a `RoundApproximate` method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</span></span> <span data-ttu-id="cd7a5-621">Dane wyjściowe z przykładu pokazują, naprawia problem zaokrąglania w poprzednim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-621">As the output from the example shows, it corrects the rounding problem shown in the previous example.</span></span>  
  
     [!code-csharp-interactive[System.Math.Round.Overload#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision2.cs#8)]
     [!code-vb[System.Math.Round.Overload#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision2.vb#8)]  
  
### <a name="rounding-and-single-precision-floating-point-values"></a><span data-ttu-id="cd7a5-622">Zaokrąglenia i pojedyncza precyzja wartości zmiennoprzecinkowych</span><span class="sxs-lookup"><span data-stu-id="cd7a5-622">Rounding and single-precision floating-point values</span></span>  

<span data-ttu-id="cd7a5-623"><xref:System.Math.Round%2A> Metoda zawiera przeciążenia, które przyjmują argumenty typu <xref:System.Decimal> i <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-623">The <xref:System.Math.Round%2A> method includes overloads that accept arguments of type <xref:System.Decimal> and <xref:System.Double>.</span></span> <span data-ttu-id="cd7a5-624">Metodami nie zaokrąglanie wartości typu <xref:System.Single>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-624">There are no methods that round values of type <xref:System.Single>.</span></span> <span data-ttu-id="cd7a5-625">W przypadku przekazania <xref:System.Single> wartość do jednego z przeciążeń <xref:System.Math.Round%2A> metody jest rzutowanie (C#) lub (w języku Visual Basic) na <xref:System.Double>i odpowiedni <xref:System.Math.Round%2A> przeciążenia z <xref:System.Double> nosi nazwę parametru.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-625">If you pass a <xref:System.Single> value to one of the overloads of the <xref:System.Math.Round%2A> method, it is cast (in C#) or converted (in Visual Basic) to a <xref:System.Double>, and the corresponding <xref:System.Math.Round%2A> overload with a <xref:System.Double> parameter is called.</span></span> <span data-ttu-id="cd7a5-626">Chociaż jest konwersją rozszerzającą, często spowodowałoby utratę dokładności, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-626">Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</span></span> <span data-ttu-id="cd7a5-627">Gdy <xref:System.Single> wartość 16.325 jest przekazywana do <xref:System.Math.Round%2A> metody i zaokrąglane do dwóch miejsc po przecinku, za pomocą zaokrąglania do najbliższej Konwencji, wynik jest 16.33 i nie oczekiwany wynik 16.32.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-627">When a <xref:System.Single> value of 16.325 is passed to the <xref:System.Math.Round%2A> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/single1.cs#1)]
[!code-vb[System.Math.Round.Overload#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/single1.vb#1)]  
  
<span data-ttu-id="cd7a5-628">Nieoczekiwany wynik to ze względu na utratę precyzji podczas konwersji <xref:System.Single> wartość <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-628">This unexpected result is due to a loss of precision in the conversion of the <xref:System.Single> value to a <xref:System.Double>.</span></span> <span data-ttu-id="cd7a5-629">Ponieważ wartość wynikowa <xref:System.Double> wartość 16.325000762939453 nie jest wartością środkową i jest większa niż 16.325, jest zawsze zaokrąglana w górę.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-629">Because the resulting <xref:System.Double> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</span></span>  
  
<span data-ttu-id="cd7a5-630">W wielu przypadkach tak jak pokazano w przykładzie, utratę dokładności można można szybko minimalizować lub wyeliminowane poprzez rzutowanie lub konwertowanie <xref:System.Single> wartość <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-630">In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <xref:System.Single> value to a <xref:System.Decimal>.</span></span> <span data-ttu-id="cd7a5-631">Należy pamiętać, że, ponieważ jest konwersją zawężającą, wymaga za pomocą operatora rzutowania lub wywołanie metody konwersji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-631">Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</span></span>  
  
### Examples 

<span data-ttu-id="cd7a5-632">Oprócz przykładów w [uwagi](#remarks-round) sekcji, w tym artykule przedstawiono przykłady ilustrujące następujące przeciążenia `Math.Round` metody:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-632">In addition to the examples in the [Remarks](#remarks-round) section, this article includes examples that illustrate the following overloads of the `Math.Round` method:</span></span>

[<span data-ttu-id="cd7a5-633">Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-633">Math.Round(Decimal)</span></span>](#Round1_Example)  
[<span data-ttu-id="cd7a5-634">Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-634">Math.Round(Double)</span></span>](#Round2_Example)  
[<span data-ttu-id="cd7a5-635">Przykład Math.Round (Decimal, Int32)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-635">Math.Round(Decimal, Int32)</span></span>](#Round3_Example)  
[<span data-ttu-id="cd7a5-636">Przykład Math.Round (Decimal, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-636">Math.Round(Decimal, MidpointRounding)</span></span>](#Round4_Example)  
[<span data-ttu-id="cd7a5-637">Przykład Math.Round (Double, Int32)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-637">Math.Round(Double, Int32)</span></span>](#Round5_Example)  
[<span data-ttu-id="cd7a5-638">Przykład Math.Round (Double, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-638">Math.Round(Double, MidpointRounding)</span></span>](#Round6_Example)  
[<span data-ttu-id="cd7a5-639">Przykład Math.Round (Decimal, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-639">Math.Round(Decimal, Int32, MidpointRounding)</span></span>](#Round7_Example)  
[<span data-ttu-id="cd7a5-640">Przykład Math.Round (Double, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="cd7a5-640">Math.Round(Double, Int32, MidpointRounding)</span></span>](#Round8_Example)  

[!INCLUDE[midpoint-rounding](~/includes/csharp-interactive-note.md)]

       ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
        <altmember cref="M:System.Math.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Round : decimal -&gt; decimal" Usage="System.Math.Round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-641">Liczba dziesiętna ma zostać zaokrąglona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-641">A decimal number to be rounded.</span></span></param>
        <summary><span data-ttu-id="cd7a5-642">Zaokrągla liczbę do najbliższej wartości całkowitej wartości dziesiętnej, a punkt środkowy Zaokrągla do najbliższej parzystej liczby.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-642">Rounds a decimal value to the nearest integral value, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-643">Liczbę całkowitą najbliższej <paramref name="d" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-643">The integer nearest the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="cd7a5-644">Jeśli część ułamkową <paramref name="d" /> jest w połowie między dwóch liczb całkowitych, z których jeden jest parzysta i innych nieparzysta, zwracany jest liczbą parzystą.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-644">If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span> <span data-ttu-id="cd7a5-645">Należy zauważyć, że ta metoda zwraca <see cref="T:System.Decimal" /> zamiast typu całkowitego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-645">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
  
<span data-ttu-id="cd7a5-646">Ta metoda używa domyślnej konwencji zaokrąglania <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-646">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cd7a5-647">Zobacz [wartości punktu środkowego i konwencje zaokrąglania](#midpoint-values-and-rounding-conventions) uzyskać informacji na temat zaokrąglanie liczb z wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-647">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<a name="Round1_Example"></a> 
## <a name="example"></a><span data-ttu-id="cd7a5-648">Przykład</span><span class="sxs-lookup"><span data-stu-id="cd7a5-648">Example</span></span>

<span data-ttu-id="cd7a5-649">W poniższym przykładzie pokazano <xref:System.Math.Round%28System.Decimal%29> metody.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-649">The following example demonstrates the <xref:System.Math.Round%28System.Decimal%29> method.</span></span> <span data-ttu-id="cd7a5-650">Należy pamiętać, że <xref:System.Decimal> wartość 4.5 zaokrągla liczbę do zamiast 5, 4, ponieważ to przeciążenie używa domyślnego <xref:System.MidpointRounding.ToEven> Konwencji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-650">Note that the <xref:System.Decimal> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <xref:System.MidpointRounding.ToEven> convention.</span></span>  
  
[!code-csharp-interactive[System.Math.Round#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/rounddecimal1.cs#6)]
[!code-vb[System.Math.Round#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/rounddecimal1.vb#6)]  

       ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cd7a5-651">Wynik jest poza zakresem <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-651">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double a);" />
      <MemberSignature Language="F#" Value="static member Round : double -&gt; double" Usage="System.Math.Round a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="cd7a5-652">Liczba zmiennoprzecinkowa podwójnej precyzji, która ma zostać zaokrąglona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-652">A double-precision floating-point number to be rounded.</span></span></param>
        <summary><span data-ttu-id="cd7a5-653">Zaokrągla wartość zmiennoprzecinkową podwójnej precyzji do najbliższej wartości całkowitej, a punkt środkowy Zaokrągla do najbliższej parzystej liczby.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-653">Rounds a double-precision floating-point value to the nearest integral value, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-654">Liczbę całkowitą najbliższej <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-654">The integer nearest <paramref name="a" />.</span></span> <span data-ttu-id="cd7a5-655">Jeśli część ułamkową <paramref name="a" /> jest w połowie między dwóch liczb całkowitych, z których jeden jest parzysta, a nieparzysta, zwracana jest liczba parzysta.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-655">If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span></span> <span data-ttu-id="cd7a5-656">Należy zauważyć, że ta metoda zwraca <see cref="T:System.Double" /> zamiast typu całkowitego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-656">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="cd7a5-657">Ta metoda używa domyślnej konwencji zaokrąglania <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-657">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cd7a5-658">Zobacz [wartości punktu środkowego i konwencje zaokrąglania](#midpoint-values-and-rounding-conventions) uzyskać informacji na temat zaokrąglanie liczb z wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-658">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="cd7a5-659">Jeśli wartość `a` argument jest <xref:System.Double.NaN?displayProperty=nameWithType>, metoda zwraca <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-659">If the value of the `a` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cd7a5-660">Jeśli `a` jest <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, metoda zwraca <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-660">If `a` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<span data-ttu-id="cd7a5-661">Począwszy od programu Visual Basic 15.8 wydajność podwójnej precyzji na całkowite konwersji jest zoptymalizowane pod kątem w przypadku przekazania wartości zwracanej przez `Round` metody do któregokolwiek elementu [funkcje konwersji typu całkowitego](~/docs/visual-basic/language-reference/functions/conversion-functions.md), lub jeśli podwójna wartość zwrócone przez `Round` jest automatycznie konwertowany na liczbę całkowitą z [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) wartość wyłączone.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-661">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Round` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Round` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="cd7a5-662">Tego rodzaju optymalizacji umożliwia kod wymagany do uruchomienia szybciej — maksymalnie dwa razy, jak szybko uzyskać kod, który obsługuje dużą liczbę konwersji na typy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-662">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="cd7a5-663">Poniższy przykład ilustruje takie konwersje zoptymalizowane:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-663">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1044

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7968
```

<a name="Round2_Example"></a>   
## <a name="example"></a><span data-ttu-id="cd7a5-664">Przykład</span><span class="sxs-lookup"><span data-stu-id="cd7a5-664">Example</span></span>  

<span data-ttu-id="cd7a5-665">W poniższym przykładzie pokazano zaokrąglania do najbliższej wartości całkowitej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-665">The following example demonstrates rounding to the nearest integer value.</span></span>  
  
[!code-cpp[Classic Math.Round Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round Example/CPP/source.cpp#1)]
[!code-csharp-interactive[Classic Math.Round Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round Example/CS/source.cs#1)]
[!code-vb[Classic Math.Round Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round Example/VB/source.vb#1)]  

       ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="cd7a5-666">Ze względu na utratę dokładności, który może wynikać z reprezentujących wartości dziesiętnej jako liczb zmiennoprzecinkowych lub wykonujące operacje arytmetyczne na wartości zmiennoprzecinkowe, w niektórych przypadkach <see cref="M:System.Math.Round(System.Double)" /> metoda nie może występować zaokrąglić wartości punktu środkowego najbliższej parzystej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-666">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="cd7a5-667">W poniższym przykładzie, ponieważ wartość zmiennoprzecinkowa.1 nie ma skończonego binarne reprezentacji, pierwsze wywołanie do <see cref="M:System.Math.Round(System.Double)" /> metoda z wartością 11,5 zwraca 11 zamiast 12.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-667">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
<span data-ttu-id="cd7a5-668">[!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="cd7a5-668">[!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int -&gt; decimal" Usage="System.Math.Round (d, decimals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-669">Liczba dziesiętna ma zostać zaokrąglona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-669">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="cd7a5-670">Liczba miejsc dziesiętnych w wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-670">The number of decimal places in the return value.</span></span></param>
        <summary><span data-ttu-id="cd7a5-671">Zaokrągla liczbę do określonej liczby cyfr ułamkowych, jaka wartość dziesiętną, a punkt środkowy Zaokrągla do najbliższej parzystej liczby.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-671">Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-672">Liczba najbliżej do <paramref name="d" /> zawierającą liczbę cyfr ułamkowych, jaka jest równa <paramref name="decimals" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-672">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="cd7a5-673">Wartość `decimals` argument do zakresu od 0 do 28.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-673">The value of the `decimals` argument can range from 0 to 28.</span></span>

<span data-ttu-id="cd7a5-674">Ta metoda używa domyślnej konwencji zaokrąglania <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-674">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cd7a5-675">Zobacz [wartości punktu środkowego i konwencje zaokrąglania](#midpoint-values-and-rounding-conventions) uzyskać informacji na temat zaokrąglanie liczb z wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-675">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<a name="Round3_Example"></a>   
## <a name="example"></a><span data-ttu-id="cd7a5-676">Przykład</span><span class="sxs-lookup"><span data-stu-id="cd7a5-676">Example</span></span>  

<span data-ttu-id="cd7a5-677">Poniższy przykład zaokrągla dziesiętną z dwóch cyfr ułamkowych do wartości, które mają pojedynczą cyfrą ułamkową.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-677">The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/source.cs#3)]
[!code-vb[System.Math.Round.Overload#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/source.vb#3)]  
  
      ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cd7a5-678"><paramref name="decimals" /> jest mniejszy niż 0 lub większy niż 28.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-678"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cd7a5-679">Wynik jest poza zakresem <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-679">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-680">Liczba dziesiętna ma zostać zaokrąglona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-680">A decimal number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="cd7a5-681">Specyfikacja sposób zaokrąglania <paramref name="d" /> Jeśli pomiędzy dwoma inne liczby pozycjami.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-681">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="cd7a5-682">Zaokrągla liczbę do najbliższej liczby całkowitej wartości dziesiętnej i używa określonej konwencji zaokrąglania wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-682">Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-683">Liczbę całkowitą najbliższej <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-683">The integer nearest <paramref name="d" />.</span></span> <span data-ttu-id="cd7a5-684">Jeśli <paramref name="d" /> jest w połowie między dwóch liczb, z których jeden jest parzysta, a nieparzysta, następnie <paramref name="mode" /> określa dwóch zwrócony.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-684">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span> <span data-ttu-id="cd7a5-685">Należy zauważyć, że ta metoda zwraca <see cref="T:System.Decimal" /> zamiast typu całkowitego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-685">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="cd7a5-686">Zobacz [wartości punktu środkowego i konwencje zaokrąglania](#midpoint-values-and-rounding-conventions) uzyskać informacji na temat zaokrąglanie liczb z wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-686">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<a name="Round5_Example"></a>   
## <a name="example"></a><span data-ttu-id="cd7a5-687">Przykład</span><span class="sxs-lookup"><span data-stu-id="cd7a5-687">Example</span></span>  

<span data-ttu-id="cd7a5-688">Poniższy przykład wyświetla wartości zwracanych przez <xref:System.Math.Round%28System.Decimal%29> metody <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> metody z `mode` argument <xref:System.MidpointRounding.ToEven>i <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> metody z `mode` argument <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-688">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
[!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cd7a5-689"><paramref name="mode" /> nie jest prawidłową wartością <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-689"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cd7a5-690">Wynik jest poza zakresem <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-690">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits);" />
      <MemberSignature Language="F#" Value="static member Round : double * int -&gt; double" Usage="System.Math.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-691">Liczba zmiennoprzecinkowa podwójnej precyzji, która ma zostać zaokrąglona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-691">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="cd7a5-692">Liczba cyfr ułamkowych w wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-692">The number of fractional digits in the return value.</span></span></param>
        <summary><span data-ttu-id="cd7a5-693">Zaokrągla wartość zmiennoprzecinkową podwójnej precyzji do określonej liczby cyfr ułamkowych, a punkt środkowy Zaokrągla do najbliższej parzystej liczby.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-693">Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-694">Liczba najbliżej do <paramref name="value" /> zawierającą liczbę cyfr ułamkowych, jaka jest równa <paramref name="digits" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-694">The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="cd7a5-695">Wartość `digits` argument do zakresu od 0 do 15.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-695">The value of the `digits` argument can range from 0 to 15.</span></span> <span data-ttu-id="cd7a5-696">Należy pamiętać, że 15 maksymalną liczbę cyfr zaokrągleń obsługiwane przez <xref:System.Double> typu.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-696">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span>

<span data-ttu-id="cd7a5-697">Ta metoda używa domyślnej konwencji zaokrąglania <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-697">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cd7a5-698">Zobacz [wartości punktu środkowego i konwencje zaokrąglania](#midpoint-values-and-rounding-conventions) uzyskać informacji na temat zaokrąglanie liczb z wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-698">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="cd7a5-699">Jeśli wartość `value` argument jest <xref:System.Double.NaN?displayProperty=nameWithType>, metoda zwraca <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-699">If the value of the `value` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cd7a5-700">Jeśli `value` jest <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, metoda zwraca <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-700">If `value` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<a name="Round4_Example"></a>   
## <a name="example"></a><span data-ttu-id="cd7a5-701">Przykład</span><span class="sxs-lookup"><span data-stu-id="cd7a5-701">Example</span></span>  

<span data-ttu-id="cd7a5-702">Poniższy przykład zaokrągla double z dwóch cyfr ułamkowych do wartości podwójnej precyzji, która ma pojedynczą cyfrą ułamkową.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-702">The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</span></span>  
  
[!code-cpp[Classic Math.Round2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CPP/source.cpp#1)]
[!code-csharp-interactive[Classic Math.Round2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CS/source.cs#1)]
[!code-vb[Classic Math.Round2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round2 Example/VB/source.vb#1)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cd7a5-703"><paramref name="digits" /> jest mniejszy niż 0 lub większa niż 15.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-703"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cd7a5-704">Ze względu na utratę dokładności, który może wynikać z reprezentujących wartości dziesiętnej jako liczb zmiennoprzecinkowych lub wykonujące operacje arytmetyczne na wartości zmiennoprzecinkowe, w niektórych przypadkach <see cref="M:System.Math.Round(System.Double,System.Int32)" /> metoda nie może występować zaokrąglić wartości punktu środkowego najbliższą wartości nawet <paramref name="digits" /> separatora dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-704">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32)" /> method may not appear to round midpoint values to the nearest even value in the <paramref name="digits" /> decimal position.</span></span> <span data-ttu-id="cd7a5-705">Jest to zilustrowane w poniższym przykładzie, w którym 2.135 jest zaokrąglana do 2.13 zamiast 2.14.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-705">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="cd7a5-706">Dzieje się tak dlatego wewnętrznie metody mnoży <paramref name="value" /> przez 10<sup>cyfr</sup>, oraz operacji mnożenia w tym przypadku odczuwa utratę dokładności.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-706">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
<span data-ttu-id="cd7a5-707">[!code-csharp-interactive[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="cd7a5-707">[!code-csharp-interactive[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * MidpointRounding -&gt; double" Usage="System.Math.Round (value, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-708">Liczba zmiennoprzecinkowa podwójnej precyzji, która ma zostać zaokrąglona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-708">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="cd7a5-709">Specyfikacja sposób zaokrąglania <paramref name="value" /> Jeśli pomiędzy dwoma inne liczby pozycjami.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-709">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="cd7a5-710">Zaokrągla wartość zmiennoprzecinkową podwójnej precyzji dla najbliższej liczby całkowitej, a następnie używa określonej konwencji zaokrąglania wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-710">Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-711">Liczbę całkowitą najbliższej <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-711">The integer nearest <paramref name="value" />.</span></span> <span data-ttu-id="cd7a5-712">Jeśli <paramref name="value" /> jest w połowie między dwóch liczb całkowitych, z których jeden jest parzysta, a nieparzysta, następnie <paramref name="mode" /> określa dwóch zwrócony.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-712">If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span> <span data-ttu-id="cd7a5-713">Należy zauważyć, że ta metoda zwraca <see cref="T:System.Double" /> zamiast typu całkowitego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-713">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="cd7a5-714">Zobacz [wartości punktu środkowego i konwencje zaokrąglania](#midpoint-values-and-rounding-conventions) uzyskać informacji na temat zaokrąglanie liczb z wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-714">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="cd7a5-715">Jeśli wartość `value` argument jest <xref:System.Double.NaN?displayProperty=nameWithType>, metoda zwraca <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-715">If the value of the `value` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cd7a5-716">Jeśli `value` jest <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, metoda zwraca <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-716">If `value` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<a name="Round6_Example"></a>   
## <a name="example"></a><span data-ttu-id="cd7a5-717">Przykład</span><span class="sxs-lookup"><span data-stu-id="cd7a5-717">Example</span></span>  
<span data-ttu-id="cd7a5-718">Poniższy przykład wyświetla wartości zwracanych przez <xref:System.Math.Round%28System.Double%29> metody <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> metody z `mode` argument <xref:System.MidpointRounding.ToEven>i <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> metody z `mode` argument <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-718">The following example displays values returned by the <xref:System.Math.Round%28System.Double%29> method, the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
[!code-csharp[System.Math.Round.Overload#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint2.cs#6)]
[!code-vb[System.Math.Round.Overload#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint2.vb#6)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cd7a5-719"><paramref name="mode" /> nie jest prawidłową wartością <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-719"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cd7a5-720">Ze względu na utratę dokładności, który może wynikać z reprezentujących wartości dziesiętnej jako liczb zmiennoprzecinkowych lub wykonujące operacje arytmetyczne na wartości zmiennoprzecinkowe, w niektórych przypadkach <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> metoda nie może występować zaokrąglić wartości punktu środkowego najbliższej parzystej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-720">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="cd7a5-721">W poniższym przykładzie, ponieważ wartość zmiennoprzecinkowa.1 nie ma skończonego binarne reprezentacji, pierwsze wywołanie do <see cref="M:System.Math.Round(System.Double)" /> metoda z wartością 11,5 zwraca 11 zamiast 12.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-721">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
<span data-ttu-id="cd7a5-722">[! code-csharp-interactive[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [! kodu vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="cd7a5-722">[!code-csharp-interactive[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [!code-vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, decimals, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-723">Liczba dziesiętna ma zostać zaokrąglona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-723">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="cd7a5-724">Liczba miejsc dziesiętnych w wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-724">The number of decimal places in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="cd7a5-725">Specyfikacja sposób zaokrąglania <paramref name="d" /> Jeśli pomiędzy dwoma inne liczby pozycjami.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-725">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="cd7a5-726">Zaokrągla liczbę do określonej liczby cyfr ułamkowych, jaka wartość dziesiętną, a następnie używa określonej konwencji zaokrąglania wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-726">Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-727">Liczba najbliżej do <paramref name="d" /> zawierającą liczbę cyfr ułamkowych, jaka jest równa <paramref name="decimals" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-727">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span> <span data-ttu-id="cd7a5-728">Jeśli <paramref name="d" /> ma mniej cyfr ułamkowych, jaka niż <paramref name="decimals" />, <paramref name="d" /> jest zwracany bez zmian.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-728">If <paramref name="d" /> has fewer fractional digits than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cd7a5-729">Zobacz [wartości punktu środkowego i konwencje zaokrąglania](#midpoint-values-and-rounding-conventions) uzyskać informacji na temat zaokrąglanie liczb z wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-729">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]  

<span data-ttu-id="cd7a5-730">Wartość `decimals` argument do zakresu od 0 do 28.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-730">The value of the `decimals` argument can range from 0 to 28.</span></span>

<a name="Round7_Example"></a>   
## <a name="example"></a><span data-ttu-id="cd7a5-731">Przykład</span><span class="sxs-lookup"><span data-stu-id="cd7a5-731">Example</span></span>  

<span data-ttu-id="cd7a5-732">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Round%2A> metody z <xref:System.MidpointRounding> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-732">The following example demonstrates how to use the <xref:System.Math.Round%2A> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
[!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
[!code-csharp-interactive[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
[!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cd7a5-733"><paramref name="decimals" /> jest mniejszy niż 0 lub większy niż 28.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-733"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cd7a5-734"><paramref name="mode" /> nie jest prawidłową wartością <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-734"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cd7a5-735">Wynik jest poza zakresem <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-735">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * int * MidpointRounding -&gt; double" Usage="System.Math.Round (value, digits, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-736">Liczba zmiennoprzecinkowa podwójnej precyzji, która ma zostać zaokrąglona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-736">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="cd7a5-737">Liczba cyfr ułamkowych w wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-737">The number of fractional digits in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="cd7a5-738">Specyfikacja sposób zaokrąglania <paramref name="value" /> Jeśli pomiędzy dwoma inne liczby pozycjami.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-738">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="cd7a5-739">Zaokrągla wartość zmiennoprzecinkową podwójnej precyzji do określonej liczby cyfr ułamkowych, a następnie używa określonej konwencji zaokrąglania wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-739">Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-740">Liczba najbliżej do <paramref name="value" /> zawierający liczbę cyfr ułamkowych, jaka jest równa <paramref name="digits" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-740">The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />.</span></span> <span data-ttu-id="cd7a5-741">Jeśli <paramref name="value" /> ma mniej cyfr ułamkowych, jaka niż <paramref name="digits" />, <paramref name="value" /> jest zwracany bez zmian.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-741">If <paramref name="value" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="cd7a5-742">Wartość `digits` argument do zakresu od 0 do 15.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-742">The value of the `digits` argument can range from 0 to 15.</span></span> <span data-ttu-id="cd7a5-743">Należy pamiętać, że 15 maksymalną liczbę cyfr zaokrągleń obsługiwane przez <xref:System.Double> typu.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-743">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span>

<span data-ttu-id="cd7a5-744">Zobacz [wartości punktu środkowego i konwencje zaokrąglania](#midpoint-values-and-rounding-conventions) uzyskać informacji na temat zaokrąglanie liczb z wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-744">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="cd7a5-745">Jeśli wartość `value` argument jest <xref:System.Double.NaN?displayProperty=nameWithType>, metoda zwraca <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-745">If the value of the `value` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cd7a5-746">Jeśli `value` jest <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, metoda zwraca <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-746">If `value` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<a name="Round8_Example"></a>   
## <a name="example"></a><span data-ttu-id="cd7a5-747">Przykład</span><span class="sxs-lookup"><span data-stu-id="cd7a5-747">Example</span></span>  

<span data-ttu-id="cd7a5-748">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> metody z <xref:System.MidpointRounding> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-748">The following example demonstrates how to use the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mpr.cs#4)]
[!code-vb[System.Math.Round.Overload#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mpr.vb#4)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cd7a5-749"><paramref name="digits" /> jest mniejszy niż 0 lub większa niż 15.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-749"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cd7a5-750"><paramref name="mode" /> nie jest prawidłową wartością <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-750"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cd7a5-751">Ze względu na utratę dokładności, który może wynikać z reprezentujących wartości dziesiętnej jako liczb zmiennoprzecinkowych lub wykonujące operacje arytmetyczne na wartości zmiennoprzecinkowe, w niektórych przypadkach <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> metoda nie może występować zaokrąglić wartości punktu środkowego określonych przez <paramref name="mode" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-751">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> method may not appear to round midpoint values as specified by the <paramref name="mode" /> parameter.</span></span> <span data-ttu-id="cd7a5-752">Jest to zilustrowane w poniższym przykładzie, w którym 2.135 jest zaokrąglana do 2.13 zamiast 2.14.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-752">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="cd7a5-753">Dzieje się tak dlatego wewnętrznie metody mnoży <paramref name="value" /> przez 10<sup>cyfr</sup>, oraz operacji mnożenia w tym przypadku odczuwa utratę dokładności.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-753">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
<span data-ttu-id="cd7a5-754">[!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="cd7a5-754">[!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd7a5-755">Zwraca liczbę całkowitą, która wskazuje znak liczby.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-755">Returns an integer that indicates the sign of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Sign : decimal -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-756">Liczba oznaczona dziesiętna.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-756">A signed decimal number.</span></span></param>
        <summary><span data-ttu-id="cd7a5-757">Zwraca liczbę całkowitą, która określa znak liczby dziesiętnej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-757">Returns an integer that indicates the sign of a decimal number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-758">Liczba, która określa znak <paramref name="value" />, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-758">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cd7a5-759">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-759">Return value</span></span> 
 </term><description> <span data-ttu-id="cd7a5-760">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="cd7a5-760">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cd7a5-761">-1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-761">-1</span></span> 
 </term><description><span data-ttu-id="cd7a5-762"><paramref name="value" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-762"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-763">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-763">0</span></span> 
 </term><description><span data-ttu-id="cd7a5-764"><paramref name="value" /> jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-764"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-765">1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-765">1</span></span> 
 </term><description><span data-ttu-id="cd7a5-766"><paramref name="value" /> jest większa niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-766"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-767">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Sign%28System.Decimal%29> metody Ustal znak liczby <xref:System.Decimal> wartość i wyświetl ją do konsoli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-767">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Decimal%29> method to determine the sign of a <xref:System.Decimal> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(double value);" />
      <MemberSignature Language="F#" Value="static member Sign : double -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-768">Liczba oznaczona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-768">A signed number.</span></span></param>
        <summary><span data-ttu-id="cd7a5-769">Zwraca liczbę całkowitą, która określa znak liczba zmiennoprzecinkowa podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-769">Returns an integer that indicates the sign of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-770">Liczba, która określa znak <paramref name="value" />, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-770">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cd7a5-771">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-771">Return value</span></span> 
 </term><description> <span data-ttu-id="cd7a5-772">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="cd7a5-772">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cd7a5-773">-1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-773">-1</span></span> 
 </term><description><span data-ttu-id="cd7a5-774"><paramref name="value" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-774"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-775">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-775">0</span></span> 
 </term><description><span data-ttu-id="cd7a5-776"><paramref name="value" /> jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-776"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-777">1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-777">1</span></span> 
 </term><description><span data-ttu-id="cd7a5-778"><paramref name="value" /> jest większa niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-778"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-779">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Sign%28System.Double%29> metody Ustal znak liczby <xref:System.Double> wartość i wyświetl ją do konsoli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-779">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Double%29> method to determine the sign of a <xref:System.Double> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException"><span data-ttu-id="cd7a5-780"><paramref name="value" /> jest równa <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-780"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(short value);" />
      <MemberSignature Language="F#" Value="static member Sign : int16 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-781">Liczba oznaczona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-781">A signed number.</span></span></param>
        <summary><span data-ttu-id="cd7a5-782">Zwraca liczbę całkowitą, która określa znak całkowita 16-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-782">Returns an integer that indicates the sign of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-783">Liczba, która określa znak <paramref name="value" />, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-783">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cd7a5-784">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-784">Return value</span></span> 
 </term><description> <span data-ttu-id="cd7a5-785">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="cd7a5-785">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cd7a5-786">-1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-786">-1</span></span> 
 </term><description><span data-ttu-id="cd7a5-787"><paramref name="value" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-787"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-788">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-788">0</span></span> 
 </term><description><span data-ttu-id="cd7a5-789"><paramref name="value" /> jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-789"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-790">1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-790">1</span></span> 
 </term><description><span data-ttu-id="cd7a5-791"><paramref name="value" /> jest większa niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-791"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-792">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Sign%28System.Int16%29> metody Ustal znak liczby <xref:System.Int16> wartość i wyświetl ją do konsoli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-792">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int16%29> method to determine the sign of an <xref:System.Int16> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(int value);" />
      <MemberSignature Language="F#" Value="static member Sign : int -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-793">Liczba oznaczona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-793">A signed number.</span></span></param>
        <summary><span data-ttu-id="cd7a5-794">Zwraca liczbę całkowitą, która określa znak całkowita 32-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-794">Returns an integer that indicates the sign of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-795">Liczba, która określa znak <paramref name="value" />, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-795">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cd7a5-796">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-796">Return value</span></span> 
 </term><description> <span data-ttu-id="cd7a5-797">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="cd7a5-797">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cd7a5-798">-1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-798">-1</span></span> 
 </term><description><span data-ttu-id="cd7a5-799"><paramref name="value" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-799"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-800">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-800">0</span></span> 
 </term><description><span data-ttu-id="cd7a5-801"><paramref name="value" /> jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-801"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-802">1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-802">1</span></span> 
 </term><description><span data-ttu-id="cd7a5-803"><paramref name="value" /> jest większa niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-803"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-804">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Sign%28System.Int32%29> metody Ustal znak liczby <xref:System.Int32> wartość i wyświetl ją do konsoli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-804">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int32%29> method to determine the sign of an <xref:System.Int32> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(long value);" />
      <MemberSignature Language="F#" Value="static member Sign : int64 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-805">Liczba oznaczona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-805">A signed number.</span></span></param>
        <summary><span data-ttu-id="cd7a5-806">Zwraca liczbę całkowitą, która określa znak całkowita 64-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-806">Returns an integer that indicates the sign of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-807">Liczba, która określa znak <paramref name="value" />, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-807">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cd7a5-808">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-808">Return value</span></span> 
 </term><description> <span data-ttu-id="cd7a5-809">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="cd7a5-809">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cd7a5-810">-1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-810">-1</span></span> 
 </term><description><span data-ttu-id="cd7a5-811"><paramref name="value" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-811"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-812">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-812">0</span></span> 
 </term><description><span data-ttu-id="cd7a5-813"><paramref name="value" /> jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-813"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-814">1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-814">1</span></span> 
 </term><description><span data-ttu-id="cd7a5-815"><paramref name="value" /> jest większa niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-815"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-816">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Sign%28System.Int64%29> metody Ustal znak liczby <xref:System.Int64> wartość i wyświetl ją do konsoli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-816">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int64%29> method to determine the sign of an <xref:System.Int64> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Sign : sbyte -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-817">Liczba oznaczona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-817">A signed number.</span></span></param>
        <summary><span data-ttu-id="cd7a5-818">Zwraca liczbę całkowitą, która określa znak całkowita 8-bitowych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-818">Returns an integer that indicates the sign of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-819">Liczba, która określa znak <paramref name="value" />, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-819">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cd7a5-820">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-820">Return value</span></span> 
 </term><description> <span data-ttu-id="cd7a5-821">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="cd7a5-821">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cd7a5-822">-1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-822">-1</span></span> 
 </term><description><span data-ttu-id="cd7a5-823"><paramref name="value" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-823"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-824">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-824">0</span></span> 
 </term><description><span data-ttu-id="cd7a5-825"><paramref name="value" /> jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-825"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-826">1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-826">1</span></span> 
 </term><description><span data-ttu-id="cd7a5-827"><paramref name="value" /> jest większa niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-827"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-828">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Sign%28System.SByte%29> metody Ustal znak liczby <xref:System.SByte> wartość i wyświetl ją do konsoli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-828">The following example demonstrates how to use the <xref:System.Math.Sign%28System.SByte%29> method to determine the sign of an <xref:System.SByte> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float value);" />
      <MemberSignature Language="F#" Value="static member Sign : single -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-829">Liczba oznaczona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-829">A signed number.</span></span></param>
        <summary><span data-ttu-id="cd7a5-830">Zwraca liczbę całkowitą, która określa znak liczba zmiennoprzecinkowa pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-830">Returns an integer that indicates the sign of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-831">Liczba, która określa znak <paramref name="value" />, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-831">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cd7a5-832">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-832">Return value</span></span> 
 </term><description> <span data-ttu-id="cd7a5-833">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="cd7a5-833">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cd7a5-834">-1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-834">-1</span></span> 
 </term><description><span data-ttu-id="cd7a5-835"><paramref name="value" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-835"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-836">0</span><span class="sxs-lookup"><span data-stu-id="cd7a5-836">0</span></span> 
 </term><description><span data-ttu-id="cd7a5-837"><paramref name="value" /> jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-837"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-838">1</span><span class="sxs-lookup"><span data-stu-id="cd7a5-838">1</span></span> 
 </term><description><span data-ttu-id="cd7a5-839"><paramref name="value" /> jest większa niż zero.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-839"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-840">Poniższy przykład pokazuje sposób użycia <xref:System.Math.Sign%28System.Single%29> metody Ustal znak liczby <xref:System.Single> wartość i wyświetl ją do konsoli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-840">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Single%29> method to determine the sign of a <xref:System.Single> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException"><span data-ttu-id="cd7a5-841"><paramref name="value" /> jest równa <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-841"><paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sin(double a);" />
      <MemberSignature Language="F#" Value="static member Sin : double -&gt; double" Usage="System.Math.Sin a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="cd7a5-842">Kąt wyrażony w radianach.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-842">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="cd7a5-843">Zwraca sinus określonego kąta.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-843">Returns the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-844">Sinus <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-844">The sine of <paramref name="a" />.</span></span> <span data-ttu-id="cd7a5-845">Jeśli <paramref name="a" /> jest równa <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, lub <see cref="F:System.Double.PositiveInfinity" />, Metoda ta zwraca <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-845">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-846">Kąt `a`, musi być podany w radianach.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-846">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="cd7a5-847">Mnożenie przez <xref:System.Math.PI?displayProperty=nameWithType>/180 Konwertuje stopnie na radiany.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-847">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="cd7a5-848">Dopuszczalne wartości `a` z zakresu od około-9223372036854775295 do około 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-848">Acceptable values of `a` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="cd7a5-849">W przypadku wartości poza tym zakresem <xref:System.Math.Sin%2A> metoda zwraca `a` bez zmian, zamiast zgłaszać wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-849">For values outside of this range, the <xref:System.Math.Sin%2A> method returns `a` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-850">W poniższym przykładzie użyto <xref:System.Math.Sin%2A> można obliczyć wartości niektórych trygonometrycznych tożsamości dla wybranych kąty.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-850">The following example uses <xref:System.Math.Sin%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static double Sinh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sinh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sinh(double value);" />
      <MemberSignature Language="F#" Value="static member Sinh : double -&gt; double" Usage="System.Math.Sinh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-851">Kąt wyrażony w radianach.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-851">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="cd7a5-852">Zwraca sinus hiperboliczny liczby podanemu kątowi.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-852">Returns the hyperbolic sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-853">Sinus hiperboliczny liczby <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-853">The hyperbolic sine of <paramref name="value" />.</span></span> <span data-ttu-id="cd7a5-854">Jeśli <paramref name="value" /> jest równa <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, lub <see cref="F:System.Double.NaN" />, Metoda ta zwraca <see cref="T:System.Double" /> równa <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-854">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-855">Kąt `value`, musi być podany w radianach.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-855">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="cd7a5-856">Mnożenie przez <xref:System.Math.PI?displayProperty=nameWithType>/180 Konwertuje stopnie na radiany.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-856">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-857">W poniższym przykładzie użyto <xref:System.Math.Sinh%2A> można obliczyć wartości niektórych hiperboliczny tożsamości dla wybranych wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-857">The following example uses <xref:System.Math.Sinh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static double Sqrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sqrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sqrt(double d);" />
      <MemberSignature Language="F#" Value="static member Sqrt : double -&gt; double" Usage="System.Math.Sqrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-858">Liczba, której pierwiastek kwadratowy ma zostać znaleziona.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-858">The number whose square root is to be found.</span></span></param>
        <summary><span data-ttu-id="cd7a5-859">Zwraca pierwiastek kwadratowy z podanej liczby.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-859">Returns the square root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-860">Jedna z wartości w tabeli poniżej.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-860">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="cd7a5-861"><paramref name="d" /> Parametr</span><span class="sxs-lookup"><span data-stu-id="cd7a5-861"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="cd7a5-862">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-862">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cd7a5-863">Zero lub wynik dodatni</span><span class="sxs-lookup"><span data-stu-id="cd7a5-863">Zero or positive</span></span> 
 </term><description> <span data-ttu-id="cd7a5-864">Dodatnia pierwiastek kwadratowy liczby <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-864">The positive square root of <paramref name="d" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cd7a5-865">Ujemne</span><span class="sxs-lookup"><span data-stu-id="cd7a5-865">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="cd7a5-866">równa się <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="cd7a5-866">Equals <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="cd7a5-867">równa się <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="cd7a5-867">Equals <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd7a5-868">Pierwiastek kwadratowy obszaru kwadrat reprezentuje długość boków kwadratu.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-868">The square root of the area of a square represents the length of any side of the square.</span></span> <span data-ttu-id="cd7a5-869">Poniższy przykład wyświetla obszaru niektóre miasta w Stanach Zjednoczonych i daje wyobrażenie o rozmiarze każdego miasta, jeśli były reprezentowane przez kwadratowe.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-869">The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</span></span>  
  
 [!code-csharp[System.Math.Sqrt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.sqrt/cs/sqrt1.cs#1)]
 [!code-vb[System.Math.Sqrt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.sqrt/vb/sqrt1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static double Tan (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tan(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tan(double a);" />
      <MemberSignature Language="F#" Value="static member Tan : double -&gt; double" Usage="System.Math.Tan a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="cd7a5-870">Kąt wyrażony w radianach.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-870">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="cd7a5-871">Zwraca tangens określonego kąta.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-871">Returns the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-872">Tangens <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-872">The tangent of <paramref name="a" />.</span></span> <span data-ttu-id="cd7a5-873">Jeśli <paramref name="a" /> jest równa <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, lub <see cref="F:System.Double.PositiveInfinity" />, Metoda ta zwraca <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-873">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-874">Kąt `a`, musi być podany w radianach.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-874">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="cd7a5-875">Mnożenie przez <xref:System.Math.PI?displayProperty=nameWithType>/180 Konwertuje stopnie na radiany.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-875">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-876">Poniższy przykład pokazuje, jak Oblicz tangens kąta i wyświetlania ich w konsoli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-876">The following example demonstrates how to calculate the tangent of an angle and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static double Tanh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tanh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tanh(double value);" />
      <MemberSignature Language="F#" Value="static member Tanh : double -&gt; double" Usage="System.Math.Tanh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cd7a5-877">Kąt wyrażony w radianach.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-877">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="cd7a5-878">Zwraca tangens hiperboliczny podanemu kątowi.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-878">Returns the hyperbolic tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-879">Tangens hiperboliczny liczby <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-879">The hyperbolic tangent of <paramref name="value" />.</span></span> <span data-ttu-id="cd7a5-880">Jeśli <paramref name="value" /> jest równa <see cref="F:System.Double.NegativeInfinity" />, ta metoda zwraca wartość -1.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-880">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.</span></span> <span data-ttu-id="cd7a5-881">Jeśli wartość jest równa <see cref="F:System.Double.PositiveInfinity" />, ta metoda zwraca wartość 1.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-881">If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.</span></span> <span data-ttu-id="cd7a5-882">Jeśli <paramref name="value" /> jest równa <see cref="F:System.Double.NaN" />, Metoda ta zwraca <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-882">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-883">Kąt `value`, musi być podany w radianach.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-883">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="cd7a5-884">Mnożenie przez <xref:System.Math.PI?displayProperty=nameWithType>/180 Konwertuje stopnie na radiany.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-884">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-885">W poniższym przykładzie użyto <xref:System.Math.Tanh%2A> można obliczyć wartości niektórych tangens hiperboliczny tożsamości wybranych wartości.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-885">The following example uses <xref:System.Math.Tanh%2A> to evaluate certain hyperbolic tangent identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Tanh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Tanh/CPP/tanh.cpp#1)]
 [!code-csharp[System.Math.Tanh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Tanh/CS/tanh.cs#1)]
 [!code-vb[System.Math.Tanh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Tanh/VB/tanh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Truncate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd7a5-886">Oblicza integralną część liczby.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-886">Calculates the integral part of a number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-887">Liczba jest zaokrąglana do najbliższej liczby całkowitej w kierunku zera.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-887">The number is rounded to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Truncate : decimal -&gt; decimal" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-888">Liczba do obcięcia.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-888">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="cd7a5-889">Oblicza integralną częścią określoną liczbę dziesiętną.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-889">Calculates the integral part of a specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-890">Integralną częścią <paramref name="d" />; oznacza to, liczba który pozostaje po wszystkie cyfry ułamkowe zostały odrzucone.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-890">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7a5-891"><xref:System.Math.Truncate%2A> Zaokrągla `d` do najbliższej liczby całkowitej w kierunku zera.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-891"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd7a5-892">Poniższy przykład wywołuje <xref:System.Math.Truncate%28System.Decimal%29> metodę, aby obciąć dodatnich i ujemnych <xref:System.Decimal> wartość.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-892">The following example calls the <xref:System.Math.Truncate%28System.Decimal%29> method to truncate both a positive and a negative <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#2)]
 [!code-vb[System.Math.Truncate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static double Truncate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Truncate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Truncate(double d);" />
      <MemberSignature Language="F#" Value="static member Truncate : double -&gt; double" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cd7a5-893">Liczba do obcięcia.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-893">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="cd7a5-894">Oblicza integralną część podanej liczbie zmiennoprzecinkowej podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-894">Calculates the integral part of a specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="cd7a5-895">Integralną częścią <paramref name="d" />; oznacza to, liczba który pozostaje po wszystkie cyfry ułamkowe zostały odrzucone lub jedna z wartości wymienionych w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-895">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span></span>  
  
 <list type="table"><listheader><term><paramref name="d" /></term><description> <span data-ttu-id="cd7a5-896">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="cd7a5-896">Return value</span></span> 
 </description></listheader><item><term><see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term><see cref="F:System.Double.NegativeInfinity" /></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term><see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="cd7a5-897"><xref:System.Math.Truncate%2A> Zaokrągla `d` do najbliższej liczby całkowitej w kierunku zera.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-897"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
<span data-ttu-id="cd7a5-898">Począwszy od programu Visual Basic 15.8 wydajność podwójnej precyzji na całkowite konwersji jest zoptymalizowane pod kątem w przypadku przekazania wartości zwracanej przez `Truncate` metody do któregokolwiek elementu [funkcje konwersji typu całkowitego](~/docs/visual-basic/language-reference/functions/conversion-functions.md), lub jeśli podwójna wartość zwrócone przez `Truncate` jest automatycznie konwertowany na liczbę całkowitą z [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) wartość wyłączone.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-898">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Truncate` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Truncate` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="cd7a5-899">Tego rodzaju optymalizacji umożliwia kod wymagany do uruchomienia szybciej — maksymalnie dwa razy, jak szybko uzyskać kod, który obsługuje dużą liczbę konwersji na typy liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-899">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="cd7a5-900">Poniższy przykład ilustruje zoptymalizowane konwersji:</span><span class="sxs-lookup"><span data-stu-id="cd7a5-900">The following example illustrates such an optimized conversion:</span></span>
   
```vb
Dim d As Double = 164.7194
Dim i As Integer = CInt(Math.Truncate(d))     ' Result: 164
```

## Examples  
 <span data-ttu-id="cd7a5-901">Poniższy przykład wywołuje <xref:System.Math.Truncate%28System.Double%29> metodę, aby obciąć dodatnich i ujemnych <xref:System.Double> wartość.</span><span class="sxs-lookup"><span data-stu-id="cd7a5-901">The following example calls the <xref:System.Math.Truncate%28System.Double%29> method to truncate both a positive and a negative <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#1)]
 [!code-vb[System.Math.Truncate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>