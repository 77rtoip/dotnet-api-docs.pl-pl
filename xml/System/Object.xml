<Type Name="Object" FullName="System.Object">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="541af8485b08c84b2be0fd08e48a22d8881ee936" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit object" />
  <TypeSignature Language="DocId" Value="T:System.Object" />
  <TypeSignature Language="VB.NET" Value="Public Class Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class Object" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eff19-101">Obsługuje wszystkie klasy w hierarchii klas .NET Framework i udostępnia usługi niskiego poziomu dla klasy pochodnej.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eff19-101">Supports all classes in the .NET Framework class hierarchy and provides low-level services to derived classes.</span>
      </span>
      <span data-ttu-id="eff19-102">Jest to klasa podstawowa ultimate wszystkie klasy w programie .NET Framework; jest elementem głównym hierarchii typów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eff19-102">This is the ultimate base class of all classes in the .NET Framework; it is the root of the type hierarchy.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff19-103">Języki zazwyczaj nie wymagają zadeklarować dziedziczenia z klasy <xref:System.Object> ponieważ dziedziczenia jest niejawnie.</span><span class="sxs-lookup"><span data-stu-id="eff19-103">Languages typically do not require a class to declare inheritance from <xref:System.Object> because the inheritance is implicit.</span></span>  
  
 <span data-ttu-id="eff19-104">Ponieważ wszystkie klasy w programie .NET Framework są uzyskiwane z <xref:System.Object>, każdej metody zdefiniowane w <xref:System.Object> klasa jest dostępna we wszystkich obiektach w systemie.</span><span class="sxs-lookup"><span data-stu-id="eff19-104">Because all classes in the .NET Framework are derived from <xref:System.Object>, every method defined in the <xref:System.Object> class is available in all objects in the system.</span></span> <span data-ttu-id="eff19-105">Może klas pochodnych i zastępowania niektórych z tych metod, w tym:</span><span class="sxs-lookup"><span data-stu-id="eff19-105">Derived classes can and do override some of these methods, including:</span></span>  
  
-   <span data-ttu-id="eff19-106"><xref:System.Object.Equals%2A> — Obsługuje porównań między obiektami.</span><span class="sxs-lookup"><span data-stu-id="eff19-106"><xref:System.Object.Equals%2A> - Supports comparisons between objects.</span></span>  
  
-   <span data-ttu-id="eff19-107"><xref:System.Object.Finalize%2A> -Wykonuje operacje oczyszczania, przed obiektu jest automatycznie odzyskać.</span><span class="sxs-lookup"><span data-stu-id="eff19-107"><xref:System.Object.Finalize%2A> - Performs cleanup operations before an object is automatically reclaimed.</span></span>  
  
-   <span data-ttu-id="eff19-108"><xref:System.Object.GetHashCode%2A> -Generuje numer odpowiadający wartość obiektu do obsługi tablicy skrótów.</span><span class="sxs-lookup"><span data-stu-id="eff19-108"><xref:System.Object.GetHashCode%2A> - Generates a number corresponding to the value of the object to support the use of a hash table.</span></span>  
  
-   <span data-ttu-id="eff19-109"><xref:System.Object.ToString%2A> -Wytwarza ciąg tekstowy zrozumiałą dla użytkownika, który opisuje wystąpienie klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-109"><xref:System.Object.ToString%2A> - Manufactures a human-readable text string that describes an instance of the class.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="eff19-110">Zagadnienia dotyczące wydajności</span><span class="sxs-lookup"><span data-stu-id="eff19-110">Performance Considerations</span></span>  
 <span data-ttu-id="eff19-111">W przypadku projektowania klasy, takie jak pamięci, który musi obsługiwać obiekty dowolnego typu, możesz utworzyć elementów członkowskich klasy, które akceptują wystąpienia <xref:System.Object> klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-111">If you are designing a class, such as a collection, that must handle any type of object, you can create class members that accept instances of the <xref:System.Object> class.</span></span> <span data-ttu-id="eff19-112">Jednak proces konwersji boxing i konwersja unboxing typu niesie spadek wydajności.</span><span class="sxs-lookup"><span data-stu-id="eff19-112">However, the process of boxing and unboxing a type carries a performance cost.</span></span> <span data-ttu-id="eff19-113">Jeśli wiesz, że nowej klasie często będzie obsługiwać niektórych typów wartości umożliwia jeden z dwóch taktyk minimalizuje to koszt boxing.</span><span class="sxs-lookup"><span data-stu-id="eff19-113">If you know your new class will frequently handle certain value types you can use one of two tactics to minimize the cost of boxing.</span></span>  
  
-   <span data-ttu-id="eff19-114">Tworzenie ogólnych metody, która akceptuje <xref:System.Object> typ i zestaw przeciążenia metody określonego typu, które akceptują każdego typu wartości oczekiwać klasy do obsługi często.</span><span class="sxs-lookup"><span data-stu-id="eff19-114">Create a general method that accepts an <xref:System.Object> type, and a set of type-specific method overloads that accept each value type you expect your class to frequently handle.</span></span> <span data-ttu-id="eff19-115">Jeśli metoda określonego typu istnieje akceptującego typ parametru wywołania, opakowywanie nie występuje i wywoływana jest metoda określonego typu.</span><span class="sxs-lookup"><span data-stu-id="eff19-115">If a type-specific method exists that accepts the calling parameter type, no boxing occurs and the type-specific method is invoked.</span></span> <span data-ttu-id="eff19-116">Jeśli nie ma żaden argument metody odpowiadający typowi parametru wywoływania, parametr jest opakowany oraz ogólne metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="eff19-116">If there is no method argument that matches the calling parameter type, the parameter is boxed and the general method is invoked.</span></span>  
  
-   <span data-ttu-id="eff19-117">Projektowanie danego typu i jej elementów członkowskich, aby użyć typów ogólnych.</span><span class="sxs-lookup"><span data-stu-id="eff19-117">Design your type and its members to use generics.</span></span> <span data-ttu-id="eff19-118">Środowisko uruchomieniowe języka wspólnego tworzy zamkniętego typu ogólnego, podczas tworzenia wystąpienia klasy i określ argumentu typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="eff19-118">The common language runtime creates a closed generic type when you create an instance of your class and specify a generic type argument.</span></span> <span data-ttu-id="eff19-119">Metoda rodzajowa jest określonego typu i może być wywoływany bez konwersja boxing parametru wywoływania.</span><span class="sxs-lookup"><span data-stu-id="eff19-119">The generic method is type-specific and can be invoked without boxing the calling parameter.</span></span>  
  
 <span data-ttu-id="eff19-120">Mimo że czasami jest niezbędne do tworzenia klas ogólnego przeznaczenia, które zaakceptować i zwracać <xref:System.Object> typów, może poprawić wydajność podając również często używanych typów klasy określonego typu.</span><span class="sxs-lookup"><span data-stu-id="eff19-120">Although it is sometimes necessary to develop general purpose classes that accept and return <xref:System.Object> types, you can improve performance by also providing a type-specific class to handle a frequently used type.</span></span> <span data-ttu-id="eff19-121">Na przykład udostępnia klasę, która jest specyficzna dla ustawiania i pobierania wartości logiczne eliminuje koszty konwersja boxing i rozpakowywanie wartościami logicznymi.</span><span class="sxs-lookup"><span data-stu-id="eff19-121">For example, providing a class that is specific to setting and getting Boolean values eliminates the cost of boxing and unboxing Boolean values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eff19-122">W poniższym przykładzie zdefiniowano typ punktu tworzony na podstawie <xref:System.Object> klasy i zastępuje wiele metod wirtualnych <xref:System.Object> klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-122">The following example defines a Point type derived from the <xref:System.Object> class and overrides many of the virtual methods of the <xref:System.Object> class.</span></span> <span data-ttu-id="eff19-123">Ponadto w przykładzie przedstawiono sposób wywoływania wiele statycznych i wystąpienie metody <xref:System.Object> klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-123">In addition, the example shows how to call many of the static and instance methods of the <xref:System.Object> class.</span></span>  
  
 [!code-cpp[ObjectX#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectX/cpp/ObjectX.cpp#1)]
 [!code-csharp[ObjectX#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectX/CS/ObjectX.cs#1)]
 [!code-vb[ObjectX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectX/vb/objectX.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="eff19-124">Publiczne statyczne (<see langword="Shared" /> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eff19-124">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="eff19-125">Elementów członkowskich wystąpień nie ma gwarancji za bezpieczne wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eff19-125">Instance members are not guaranteed to be thread-safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Object ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Object.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Object();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eff19-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Object" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-126">Initializes a new instance of the <see cref="T:System.Object" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff19-127">Ten konstruktor jest wywoływany przez konstruktorów w klasach pochodnych, ale może również służyć do bezpośrednio utworzyć wystąpienia <xref:System.Object> klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-127">This constructor is called by constructors in derived classes, but it can also be used to directly create an instance of the <xref:System.Object> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eff19-128">Określa, czy dwa wystąpienia obiektu są sobie równe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-128">Determines whether two object instances are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public virtual bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Object.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="eff19-129">Obiekt do porównania z bieżącym obiektem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-129">The object to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eff19-130">Określa, czy określony obiekt jest równy bieżącemu obiektowi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-130">Determines whether the specified object is equal to the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eff19-131">
            <see langword="true" /> Jeśli określony obiekt jest taki sam jak bieżący obiekt; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-131">
              <see langword="true" /> if the specified object  is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff19-132">Typ porównania dla bieżącego wystąpienia i `obj` parametru zależy od tego, czy bieżące wystąpienie jest typem referencyjnym lub typem wartości.</span><span class="sxs-lookup"><span data-stu-id="eff19-132">The type of comparison between the current instance and the `obj` parameter depends on whether the current instance is a reference type or a value type.</span></span>  
  
-   <span data-ttu-id="eff19-133">Jeśli bieżące wystąpienie jest typem referencyjnym <xref:System.Object.Equals%28System.Object%29> testy metoda równości odwołań i wywołanie <xref:System.Object.Equals%28System.Object%29> jest odpowiednikiem wywołania metody <xref:System.Object.ReferenceEquals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-133">If the current instance is a reference type, the <xref:System.Object.Equals%28System.Object%29> method tests for reference equality, and a call to the <xref:System.Object.Equals%28System.Object%29> method is equivalent to a call to the <xref:System.Object.ReferenceEquals%2A> method.</span></span> <span data-ttu-id="eff19-134">Równość odwołania oznacza, że zmienne obiektów, które są porównywane odwołują się do tego samego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-134">Reference equality means that the object variables that are compared refer to the same object.</span></span> <span data-ttu-id="eff19-135">Poniższy przykład przedstawia wynik takie porównanie.</span><span class="sxs-lookup"><span data-stu-id="eff19-135">The following example illustrates the result of such a comparison.</span></span> <span data-ttu-id="eff19-136">Definiuje `Person` klasy, która jest typem referencyjnym, i wywołania `Person` konstruktora klasy można utworzyć dwa nowe `Person` obiektów, `person1a` i `person2`, które mają taką samą wartość.</span><span class="sxs-lookup"><span data-stu-id="eff19-136">It defines a `Person` class, which is a reference type, and calls the `Person` class constructor to instantiate two new `Person` objects, `person1a` and `person2`, which have the same value.</span></span> <span data-ttu-id="eff19-137">Przypisuje także `person1a` innej zmiennej obiektu, `person1b`.</span><span class="sxs-lookup"><span data-stu-id="eff19-137">It also assigns `person1a` to another object variable, `person1b`.</span></span> <span data-ttu-id="eff19-138">Jako dane wyjściowe w przykładzie pokazano `person1a` i `person1b` są takie same, ponieważ odwołujących się do tego samego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-138">As the output from the example shows, `person1a` and `person1b` are equal because they reference the same object.</span></span> <span data-ttu-id="eff19-139">Jednak `person1a` i `person2` nie są takie same, mimo że mają one taką samą wartość.</span><span class="sxs-lookup"><span data-stu-id="eff19-139">However, `person1a` and `person2` are not equal, although they have the same value.</span></span>  
  
     [!code-csharp[System.Object.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.equals/cs/equals_ref.cs#2)]
     [!code-vb[System.Object.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.equals/vb/equals_ref.vb#2)]  
  
-   <span data-ttu-id="eff19-140">Jeśli bieżące wystąpienie jest typem wartości <xref:System.Object.Equals%28System.Object%29> testy metoda równości wartości.</span><span class="sxs-lookup"><span data-stu-id="eff19-140">If the current instance is a value type, the <xref:System.Object.Equals%28System.Object%29> method tests for value equality.</span></span> <span data-ttu-id="eff19-141">Równość wartości oznacza, że następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="eff19-141">Value equality means the following:</span></span>  
  
    -   <span data-ttu-id="eff19-142">Dwa obiekty są tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="eff19-142">The two objects are of the same type.</span></span> <span data-ttu-id="eff19-143">Jak pokazano na poniższym przykładzie, <xref:System.Byte> obiekt, który ma wartość 12 nie jest równa <xref:System.Int32> obiekt, który ma wartość 12, ponieważ te dwa obiekty mają różne typy środowiska wykonawczego.</span><span class="sxs-lookup"><span data-stu-id="eff19-143">As the following example shows, a <xref:System.Byte> object that has a value of 12 does not equal an <xref:System.Int32> object that has a value of 12, because the two objects have different run-time types.</span></span>  
  
         [!code-csharp[System.Object.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.equals/cs/equals_val1.cs#3)]
         [!code-vb[System.Object.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.equals/vb/equals_val1.vb#3)]  
  
    -   <span data-ttu-id="eff19-144">Wartości pola publiczne i prywatne dwa obiekty są równe.</span><span class="sxs-lookup"><span data-stu-id="eff19-144">The values of the public and private fields of the two objects are equal.</span></span> <span data-ttu-id="eff19-145">Poniższy przykład badań równości wartości.</span><span class="sxs-lookup"><span data-stu-id="eff19-145">The following example tests for value equality.</span></span> <span data-ttu-id="eff19-146">Definiuje `Person` struktury, która jest typem wartości, i wywołania `Person` konstruktora klasy można utworzyć dwa nowe `Person` obiektów, `person1` i `person2`, które mają taką samą wartość.</span><span class="sxs-lookup"><span data-stu-id="eff19-146">It defines a `Person` structure, which is a value type, and calls the `Person` class constructor to instantiate two new `Person` objects, `person1` and `person2`, which have the same value.</span></span> <span data-ttu-id="eff19-147">Jak dane wyjściowe w przykładzie pokazano, mimo że zmienne dwóch obiektów odwoływać się do różnych obiektów, `person1` i `person2` są takie same, ponieważ mają one taką samą wartość dla prywatnego `personName` pola.</span><span class="sxs-lookup"><span data-stu-id="eff19-147">As the output from the example shows, although the two object variables refer to different objects, `person1` and `person2` are equal because they have the same value for the private `personName` field.</span></span>  
  
         [!code-csharp[System.Object.Equals#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.equals/cs/equals_val2.cs#4)]
         [!code-vb[System.Object.Equals#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.equals/vb/equals_val2.vb#4)]  
  
 <span data-ttu-id="eff19-148">Ponieważ <xref:System.Object> klasa jest klasą bazową dla wszystkich typów w programie .NET Framework <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> metoda zapewnia domyślne porównania równości dla wszystkich innych typów.</span><span class="sxs-lookup"><span data-stu-id="eff19-148">Because the <xref:System.Object> class is the base class for all types in the .NET Framework, the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method provides the default equality comparison for all other types.</span></span> <span data-ttu-id="eff19-149">Jednak typy często przesłaniać <xref:System.Object.Equals%2A> metody do zaimplementowania równości wartości.</span><span class="sxs-lookup"><span data-stu-id="eff19-149">However, types often override the <xref:System.Object.Equals%2A> method to implement value equality.</span></span> <span data-ttu-id="eff19-150">Aby uzyskać więcej informacji zobacz uwagi dla wywołań i uwagi dotyczące dziedziczenia sekcji.</span><span class="sxs-lookup"><span data-stu-id="eff19-150">For more information, see the Notes for Callers and Notes for Inheritors sections.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="eff19-151">Uwagi dla [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="eff19-151">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="eff19-152">Podczas wywoływania <xref:System.Object.Equals%28System.Object%29> przeciążenie metody w klasie w [!INCLUDE[wrt](~/includes/wrt-md.md)], zapewnia domyślne zachowanie dla klas, które nie zastępują <xref:System.Object.Equals%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="eff19-152">When you call the <xref:System.Object.Equals%28System.Object%29> method overload on a class in the [!INCLUDE[wrt](~/includes/wrt-md.md)], it provides the default behavior for classes that don’t override <xref:System.Object.Equals%28System.Object%29>.</span></span> <span data-ttu-id="eff19-153">To jest częścią programu .NET Framework zapewnia obsługę [!INCLUDE[wrt](~/includes/wrt-md.md)] (zobacz [.NET Framework obsługuje dla aplikacji ze Sklepu Windows i środowiska wykonawczego systemu Windows](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="eff19-153">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> <span data-ttu-id="eff19-154">Klasy w [!INCLUDE[wrt](~/includes/wrt-md.md)] nie dziedziczy <xref:System.Object>, a obecnie nie implementują <xref:System.Object.Equals%28System.Object%29> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-154">Classes in the [!INCLUDE[wrt](~/includes/wrt-md.md)] don’t inherit <xref:System.Object>, and currently don’t implement an <xref:System.Object.Equals%28System.Object%29> method.</span></span> <span data-ttu-id="eff19-155">Jednak pojawią się one mieć <xref:System.Object.ToString%2A>, <xref:System.Object.Equals%28System.Object%29>, i <xref:System.Object.GetHashCode%2A> metody, gdy ich używać w kodzie C# lub Visual Basic i .NET Framework zapewnia domyślne zachowanie dla tych metod.</span><span class="sxs-lookup"><span data-stu-id="eff19-155">However, they appear to have <xref:System.Object.ToString%2A>, <xref:System.Object.Equals%28System.Object%29>, and <xref:System.Object.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[wrt](~/includes/wrt-md.md)]<span data-ttu-id="eff19-156"> klasy, które są napisane w języku C# lub Visual Basic można zastąpić <xref:System.Object.Equals%28System.Object%29> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-156"> classes that are written in C# or Visual Basic can override the <xref:System.Object.Equals%28System.Object%29> method overload.</span></span>  
  
## <a name="notes-for-callers"></a><span data-ttu-id="eff19-157">Uwagi dotyczące wywoływania</span><span class="sxs-lookup"><span data-stu-id="eff19-157">Notes for Callers</span></span>  
 <span data-ttu-id="eff19-158">Klasy pochodne często zastąpienie <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> metody do zaimplementowania równości wartości.</span><span class="sxs-lookup"><span data-stu-id="eff19-158">Derived classes frequently override the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method to implement value equality.</span></span> <span data-ttu-id="eff19-159">Ponadto typy również często udostępniają dodatkowe przeładowania jednoznacznie `Equals` metody zwykle zaimplementowanie <xref:System.IEquatable%601> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="eff19-159">In addition, types also frequently provide an additional strongly typed overload to the `Equals` method, typically by implementing the <xref:System.IEquatable%601> interface.</span></span> <span data-ttu-id="eff19-160">Podczas wywoływania `Equals` metody do testowania pod kątem równości, należy sprawdzić, czy bieżące wystąpienie zastępuje <xref:System.Object.Equals%2A?displayProperty=nameWithType> i zrozumieć, w jaki sposób wywołania określonej `Equals` metody został rozwiązany.</span><span class="sxs-lookup"><span data-stu-id="eff19-160">When you call the `Equals` method to test for equality, you should know whether the current instance overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType> and understand how a particular call to an `Equals` method is resolved.</span></span> <span data-ttu-id="eff19-161">W przeciwnym razie należy pod kątem równości, który różni się od zgodny z zamierzonym wykonywania testu, a metoda może zwracać nieoczekiwaną wartość.</span><span class="sxs-lookup"><span data-stu-id="eff19-161">Otherwise, you may be performing a test for equality that is different from what you intended, and the method may return an unexpected value.</span></span>  
  
 <span data-ttu-id="eff19-162">Poniższy przykład stanowi ilustrację.</span><span class="sxs-lookup"><span data-stu-id="eff19-162">The following example provides an illustration.</span></span> <span data-ttu-id="eff19-163">Tworzy wystąpienie, trzy <xref:System.Text.StringBuilder> obiekty o identycznych ciągów, a następnie tworzy cztery wywołania `Equals` metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-163">It instantiates three <xref:System.Text.StringBuilder> objects with identical strings, and then makes four calls to `Equals` methods.</span></span> <span data-ttu-id="eff19-164">Pierwsza metoda wywołania zwraca `true`i pozostałe trzy zwrot `false`.</span><span class="sxs-lookup"><span data-stu-id="eff19-164">The first method call returns `true`, and the remaining three return `false`.</span></span>  
  
 [!code-csharp[System.Object.Equals#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.equals/cs/equalssb1.cs#5)]
 [!code-vb[System.Object.Equals#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.equals/vb/equalssb1.vb#5)]  
  
 <span data-ttu-id="eff19-165">W pierwszym przypadku silnie typizowaną <xref:System.Text.StringBuilder.Equals%28System.Text.StringBuilder%29?displayProperty=nameWithType> przeciążenie metody, które testy w celu porównania wartości, jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="eff19-165">In the first case, the strongly typed <xref:System.Text.StringBuilder.Equals%28System.Text.StringBuilder%29?displayProperty=nameWithType> method overload, which tests for value equality, is called.</span></span> <span data-ttu-id="eff19-166">Ponieważ ciągi są przypisywane dwa <xref:System.Text.StringBuilder> obiekty są takie same, metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="eff19-166">Because the strings assigned to the two <xref:System.Text.StringBuilder> objects are equal, the method returns `true`.</span></span> <span data-ttu-id="eff19-167">Jednak <xref:System.Text.StringBuilder> nie przesłania <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eff19-167">However, <xref:System.Text.StringBuilder> does not override <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="eff19-168">W związku z tym podczas <xref:System.Text.StringBuilder> obiekt jest rzutowany <xref:System.Object>, gdy <xref:System.Text.StringBuilder> wystąpienia jest przypisany do zmiennej typu <xref:System.Object>i kiedy <xref:System.Object.Equals%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> metody jest przekazywany dwa <xref:System.Text.StringBuilder> obiektów, domyślny <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="eff19-168">Because of this, when the <xref:System.Text.StringBuilder> object is cast to an <xref:System.Object>, when a <xref:System.Text.StringBuilder> instance is assigned to a variable of type <xref:System.Object>, and when the <xref:System.Object.Equals%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method is passed two <xref:System.Text.StringBuilder> objects, the default <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="eff19-169">Ponieważ <xref:System.Text.StringBuilder> jest typem referencyjnym, co jest równoważne przekazywanie dwa <xref:System.Text.StringBuilder> obiekty do <xref:System.Object.ReferenceEquals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-169">Because <xref:System.Text.StringBuilder> is a reference type, this is equivalent to passing the two <xref:System.Text.StringBuilder> objects to the <xref:System.Object.ReferenceEquals%2A> method.</span></span> <span data-ttu-id="eff19-170">Mimo że wszystkie trzy <xref:System.Text.StringBuilder> obiekty zawierają identycznych ciągów, odnoszą się do trzech oddzielnych obiektów.</span><span class="sxs-lookup"><span data-stu-id="eff19-170">Although all three <xref:System.Text.StringBuilder> objects contain identical strings, they refer to three distinct objects.</span></span> <span data-ttu-id="eff19-171">W związku z tym te trzy metoda wywołuje zwracany `false`.</span><span class="sxs-lookup"><span data-stu-id="eff19-171">As a result, these three method calls return `false`.</span></span>  
  
 <span data-ttu-id="eff19-172">Możesz porównać bieżący obiekt do innego obiektu równości odwołań, wywołując <xref:System.Object.ReferenceEquals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-172">You can compare the current object to another object for reference equality by calling the <xref:System.Object.ReferenceEquals%2A> method.</span></span> <span data-ttu-id="eff19-173">W języku Visual Basic, można również użyć `is` — słowo kluczowe (na przykład `If Me Is otherObject Then ...`).</span><span class="sxs-lookup"><span data-stu-id="eff19-173">In Visual Basic, you can also use the `is` keyword (for example, `If Me Is otherObject Then ...`).</span></span>  
  
## <a name="notes-for-inheritors"></a><span data-ttu-id="eff19-174">Uwagi dotyczące obiektów dziedziczących</span><span class="sxs-lookup"><span data-stu-id="eff19-174">Notes for Inheritors</span></span>  
 <span data-ttu-id="eff19-175">Podczas definiowania własnych typu ten typ dziedziczy funkcje zdefiniowane przez `Equals` metoda jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="eff19-175">When you define your own type, that type inherits the functionality defined by the `Equals` method of its base type.</span></span> <span data-ttu-id="eff19-176">W poniższej tabeli wymieniono Domyślna implementacja `Equals` metodę główne kategorie typów w programie .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="eff19-176">The following table lists the default implementation of the `Equals` method for the major categories of types in the .NET Framework.</span></span>  
  
|<span data-ttu-id="eff19-177">Typ kategorii</span><span class="sxs-lookup"><span data-stu-id="eff19-177">Type category</span></span>|<span data-ttu-id="eff19-178">Zdefiniowane przez równości</span><span class="sxs-lookup"><span data-stu-id="eff19-178">Equality defined by</span></span>|<span data-ttu-id="eff19-179">Komentarze</span><span class="sxs-lookup"><span data-stu-id="eff19-179">Comments</span></span>|  
|-------------------|-------------------------|--------------|  
|<span data-ttu-id="eff19-180">Klasa pochodzi bezpośrednio z <xref:System.Object></span><span class="sxs-lookup"><span data-stu-id="eff19-180">Class derived directly from <xref:System.Object></span></span>|<xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>|<span data-ttu-id="eff19-181">Równości odwołań; odpowiednikiem wywołania <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eff19-181">Reference equality; equivalent to calling <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="eff19-182">Struktura</span><span class="sxs-lookup"><span data-stu-id="eff19-182">Structure</span></span>|<xref:System.ValueType.Equals%2A?displayProperty=nameWithType>|<span data-ttu-id="eff19-183">Równość wartości; bezpośrednie porównanie po bicie lub porównanie przez pole przy użyciu odbicia.</span><span class="sxs-lookup"><span data-stu-id="eff19-183">Value equality; either direct byte-by-byte comparison or field-by-field comparison using reflection.</span></span>|  
|<span data-ttu-id="eff19-184">Wyliczenie</span><span class="sxs-lookup"><span data-stu-id="eff19-184">Enumeration</span></span>|<xref:System.Enum.Equals%2A?displayProperty=nameWithType>|<span data-ttu-id="eff19-185">Wartości muszą mieć ten sam typ wyliczeniowy i tej samej wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="eff19-185">Values must have the same enumeration type and the same underlying value.</span></span>|  
|<span data-ttu-id="eff19-186">Delegate</span><span class="sxs-lookup"><span data-stu-id="eff19-186">Delegate</span></span>|<xref:System.MulticastDelegate.Equals%2A?displayProperty=nameWithType>|<span data-ttu-id="eff19-187">Obiekty delegowane musi mieć ten sam typ z listami identyczne wywołania.</span><span class="sxs-lookup"><span data-stu-id="eff19-187">Delegates must have the same type with identical invocation lists.</span></span>|  
|<span data-ttu-id="eff19-188">Interface</span><span class="sxs-lookup"><span data-stu-id="eff19-188">Interface</span></span>|<xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>|<span data-ttu-id="eff19-189">Równość odwołania.</span><span class="sxs-lookup"><span data-stu-id="eff19-189">Reference equality.</span></span>|  
  
 <span data-ttu-id="eff19-190">Dla typu wartości powinny zawsze zastępować <xref:System.Object.Equals%2A>, ponieważ testy pod kątem równości, które działają na podstawie odbicia oferuje pogorszenie wydajności.</span><span class="sxs-lookup"><span data-stu-id="eff19-190">For a value type, you should always override <xref:System.Object.Equals%2A>, because tests for equality that rely on reflection offer poor performance.</span></span> <span data-ttu-id="eff19-191">Można również zmienić domyślną implementację elementu <xref:System.Object.Equals%2A> dla typów odwołań do testowania pod kątem równości wartości zamiast równości odwołań i definiowanie równości wartości znaczenie.</span><span class="sxs-lookup"><span data-stu-id="eff19-191">You can also override the default implementation of <xref:System.Object.Equals%2A> for reference types to test for value equality instead of reference equality and to define the precise meaning of value equality.</span></span> <span data-ttu-id="eff19-192">Takie implementacje <xref:System.Object.Equals%2A> zwracać `true` Jeśli dwa obiekty mają taką samą wartość, nawet jeśli nie są tego samego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="eff19-192">Such implementations of <xref:System.Object.Equals%2A> return `true` if the two objects have the same value, even if they are not the same instance.</span></span> <span data-ttu-id="eff19-193">Typ implementujący decyduje o tym, co stanowi wartość obiektu, ale jest zwykle niektórych lub wszystkich danych przechowywanych w zmiennych wystąpienia obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-193">The type's implementer decides what constitutes an object's value, but it is typically some or all the data stored in the instance variables of the object.</span></span> <span data-ttu-id="eff19-194">Na przykład, wartość <xref:System.String> obiektu jest oparta na znaki ciągu; <xref:System.String.Equals%28System.Object%29?displayProperty=nameWithType> zamienników metod <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> metodę, aby zwrócić `true` dla dowolnego ciągu dwa wystąpienia, które zawierają te same znaki w tej samej kolejności.</span><span class="sxs-lookup"><span data-stu-id="eff19-194">For example, the value of a <xref:System.String> object is based on the characters of the string; the <xref:System.String.Equals%28System.Object%29?displayProperty=nameWithType> method overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method to return `true` for any two string instances that contain the same characters in the same order.</span></span>  
  
 <span data-ttu-id="eff19-195">Poniższy przykład przedstawia sposób przesłonięcia <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> metody do testowania pod kątem równości wartości.</span><span class="sxs-lookup"><span data-stu-id="eff19-195">The following example shows how to override the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method to test for value equality.</span></span> <span data-ttu-id="eff19-196">Zastępuje on <xref:System.Object.Equals%2A> metodę `Person` klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-196">It overrides the <xref:System.Object.Equals%2A> method for the `Person` class.</span></span> <span data-ttu-id="eff19-197">Jeśli `Person` zaakceptowane implementację jej klasy podstawowej równości, dwa `Person` obiekty są takie same, tylko wtedy, gdy ich odwołuje się do pojedynczego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-197">If `Person` accepted its base class implementation of equality, two `Person` objects would be equal only if they referenced a single object.</span></span> <span data-ttu-id="eff19-198">Jednak w takim przypadku dwa `Person` obiekty są takie same, jeśli mają taką samą wartość `Person.Id` właściwości.</span><span class="sxs-lookup"><span data-stu-id="eff19-198">However, in this case, two `Person` objects are equal if they have the same value for the `Person.Id` property.</span></span>  
  
 [!code-csharp[System.Object.Equals#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.equals/cs/equalsoverride.cs#6)]
 [!code-vb[System.Object.Equals#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.equals/vb/equalsoverride.vb#6)]  
  
 <span data-ttu-id="eff19-199">Oprócz zastępowania <xref:System.Object.Equals%2A>, można zaimplementować <xref:System.IEquatable%601> interfejsu zapewnienie jednoznacznie testu równości.</span><span class="sxs-lookup"><span data-stu-id="eff19-199">In addition to overriding <xref:System.Object.Equals%2A>, you can implement the <xref:System.IEquatable%601> interface to provide a strongly typed test for equality.</span></span>  
  
 <span data-ttu-id="eff19-200">Poniższe instrukcje musi mieć wartość true dla wszystkich wdrożeń <xref:System.Object.Equals%28System.Object%29> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-200">The following statements must be true for all implementations of the <xref:System.Object.Equals%28System.Object%29> method.</span></span> <span data-ttu-id="eff19-201">Na liście `x`, `y`, i `z` reprezentowania odwołań do obiektów, które nie są **null**.</span><span class="sxs-lookup"><span data-stu-id="eff19-201">In the list, `x`, `y`, and `z` represent object references that are not **null**.</span></span>  
  
-   <span data-ttu-id="eff19-202">`x.Equals(x)` Zwraca `true`, z wyjątkiem przypadków obejmujących typów zmiennoprzecinkowych.</span><span class="sxs-lookup"><span data-stu-id="eff19-202">`x.Equals(x)` returns `true`, except in cases that involve floating-point types.</span></span> <span data-ttu-id="eff19-203">Zobacz IEEE-ISO/IEC 60559:2011, technologii informatycznych — mikroprocesora systemów — zmiennoprzecinkowe arytmetyczne.</span><span class="sxs-lookup"><span data-stu-id="eff19-203">See ISO/IEC/IEEE 60559:2011, Information technology -- Microprocessor Systems -- Floating-Point arithmetic.</span></span>  
  
-   <span data-ttu-id="eff19-204">`x.Equals(y)` zwraca taką samą wartość jak `y.Equals(x)`.</span><span class="sxs-lookup"><span data-stu-id="eff19-204">`x.Equals(y)` returns the same value as `y.Equals(x)`.</span></span>  
  
-   <span data-ttu-id="eff19-205">`x.Equals(y)` Zwraca `true` Jeśli obie `x` i `y` są `NaN`.</span><span class="sxs-lookup"><span data-stu-id="eff19-205">`x.Equals(y)` returns `true` if both `x` and `y` are `NaN`.</span></span>  
  
-   <span data-ttu-id="eff19-206">Jeśli `(x.Equals(y) && y.Equals(z))` zwraca `true`, następnie `x.Equals(z)` zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="eff19-206">If `(x.Equals(y) && y.Equals(z))` returns `true`, then `x.Equals(z)` returns `true`.</span></span>  
  
-   <span data-ttu-id="eff19-207">Kolejne wywołania `x.Equals(y)` zwraca tę samą wartość jak odwołują się obiekty `x` i `y` nie są modyfikowane.</span><span class="sxs-lookup"><span data-stu-id="eff19-207">Successive calls to `x.Equals(y)` return the same value as long as the objects referenced by `x` and `y` are not modified.</span></span>  
  
-   <span data-ttu-id="eff19-208">`x.Equals(null)` Zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="eff19-208">`x.Equals(null)` returns `false`.</span></span>  
  
 <span data-ttu-id="eff19-209">Implementacje <xref:System.Object.Equals%2A> nie może zostać zwrócone wyjątków; należy zawsze zwracają wartość.</span><span class="sxs-lookup"><span data-stu-id="eff19-209">Implementations of <xref:System.Object.Equals%2A> must not throw exceptions; they should always return a value.</span></span> <span data-ttu-id="eff19-210">Na przykład jeśli `obj` jest `null`, <xref:System.Object.Equals%2A> metoda powinna zwrócić `false` zamiast zgłaszanie <xref:System.ArgumentNullException>.</span><span class="sxs-lookup"><span data-stu-id="eff19-210">For example, if `obj` is `null`, the <xref:System.Object.Equals%2A> method should return `false` instead of throwing an <xref:System.ArgumentNullException>.</span></span>  
  
 <span data-ttu-id="eff19-211">Skorzystaj z następujących wskazówek podczas zastępowania <xref:System.Object.Equals%28System.Object%29>:</span><span class="sxs-lookup"><span data-stu-id="eff19-211">Follow these guidelines when overriding <xref:System.Object.Equals%28System.Object%29>:</span></span>  
  
-   <span data-ttu-id="eff19-212">Typy, które implementują <xref:System.IComparable> przesłonięcie <xref:System.Object.Equals%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="eff19-212">Types that implement <xref:System.IComparable> must override <xref:System.Object.Equals%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="eff19-213">Typy zastąpienie tego <xref:System.Object.Equals%28System.Object%29> musi także zastępować metodę <xref:System.Object.GetHashCode%2A>; w przeciwnym razie wartość skrótu tabele mogą nie działać poprawnie.</span><span class="sxs-lookup"><span data-stu-id="eff19-213">Types that override <xref:System.Object.Equals%28System.Object%29> must also override <xref:System.Object.GetHashCode%2A>; otherwise, hash tables  might not work correctly.</span></span>  
  
-   <span data-ttu-id="eff19-214">Należy rozważyć wdrożenie <xref:System.IEquatable%601> interfejs do obsługi silnie wpisane testy pod kątem równości.</span><span class="sxs-lookup"><span data-stu-id="eff19-214">You should consider implementing the <xref:System.IEquatable%601> interface to support strongly typed tests for equality.</span></span> <span data-ttu-id="eff19-215">Twoje <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> implementacji powinien zwrócić wyników, które są zgodne z <xref:System.Object.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="eff19-215">Your <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> implementation should return results that are consistent with <xref:System.Object.Equals%2A>.</span></span>  
  
-   <span data-ttu-id="eff19-216">Jeśli język programowania obsługuje przeładowania operatora i przeciążenia operatora równości dla danego typu, musi także zastępować <xref:System.Object.Equals%28System.Object%29> metodę, aby zwrócić takiego samego wyniku jako operator równości.</span><span class="sxs-lookup"><span data-stu-id="eff19-216">If your programming language supports operator overloading and you overload the equality operator for a given type, you must also override the <xref:System.Object.Equals%28System.Object%29> method to return the same result as the equality operator.</span></span> <span data-ttu-id="eff19-217">Pomaga to zapewnić, że kod biblioteki klasy, który używa <xref:System.Object.Equals%2A> (takich jak <xref:System.Collections.ArrayList> i <xref:System.Collections.Hashtable>) działa w sposób zgodny z sposób operator równości jest używany przez kod aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eff19-217">This  helps ensure that class library code that uses <xref:System.Object.Equals%2A> (such as <xref:System.Collections.ArrayList> and <xref:System.Collections.Hashtable>) behaves in a manner that is consistent with the way the equality operator is used by application code.</span></span>  
  
### <a name="guidelines-for-reference-types"></a><span data-ttu-id="eff19-218">Wytyczne dla typów odwołania</span><span class="sxs-lookup"><span data-stu-id="eff19-218">Guidelines for Reference Types</span></span>  
 <span data-ttu-id="eff19-219">Poniższe wskazówki dotyczą zastępowanie <xref:System.Object.Equals%28System.Object%29> dla typu odwołania:</span><span class="sxs-lookup"><span data-stu-id="eff19-219">The following guidelines apply to overriding <xref:System.Object.Equals%28System.Object%29> for a reference type:</span></span>  
  
-   <span data-ttu-id="eff19-220">Należy wziąć pod uwagę zastępowanie <xref:System.Object.Equals%2A> przypadku opiera się na fakt, że niektóre wartości reprezentuje typ semantykę typu.</span><span class="sxs-lookup"><span data-stu-id="eff19-220">Consider overriding <xref:System.Object.Equals%2A> if the semantics of the type are based on the fact that the type represents some value(s).</span></span>  
  
-   <span data-ttu-id="eff19-221">Większość typów referencyjnych nie muszą przeciążać operatora równości, nawet jeśli zastępują one <xref:System.Object.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="eff19-221">Most reference types must not overload the equality operator, even if they override <xref:System.Object.Equals%2A>.</span></span> <span data-ttu-id="eff19-222">Jednak w przypadku wdrażania typu odwołania, która powinna mieć semantyki wartości, takie jak typ liczby złożonej, konieczne jest przesłonięcie operatora równości.</span><span class="sxs-lookup"><span data-stu-id="eff19-222">However, if you are implementing a reference type that is intended to have value semantics, such as a complex number type, you must override the equality operator.</span></span>  
  
-   <span data-ttu-id="eff19-223">Nie należy zastąpić <xref:System.Object.Equals%2A> na modyfikowalnego typu referencyjnego.</span><span class="sxs-lookup"><span data-stu-id="eff19-223">You should not override <xref:System.Object.Equals%2A> on a mutable reference type.</span></span> <span data-ttu-id="eff19-224">Jest to spowodowane zastępowanie <xref:System.Object.Equals%2A> wymaga się, że możesz też przesłonić <xref:System.Object.GetHashCode%2A> metody, zgodnie z opisem w poprzedniej sekcji.</span><span class="sxs-lookup"><span data-stu-id="eff19-224">This is because overriding <xref:System.Object.Equals%2A> requires that you also override the <xref:System.Object.GetHashCode%2A> method, as discussed in the previous section.</span></span> <span data-ttu-id="eff19-225">Oznacza to, że wartość skrótu wystąpienia modyfikowalnego typu referencyjnego może zmieniać się przez jego okres istnienia, co może powodować obiektu utracone w tablicy skrótów.</span><span class="sxs-lookup"><span data-stu-id="eff19-225">This means that the hash code of an instance of a mutable reference type can change during its lifetime, which can cause the object to be lost in a hash table.</span></span>  
  
### <a name="guidelines-for-value-types"></a><span data-ttu-id="eff19-226">Wytyczne dla typów wartości</span><span class="sxs-lookup"><span data-stu-id="eff19-226">Guidelines for Value Types</span></span>  
 <span data-ttu-id="eff19-227">Poniższe wskazówki dotyczą zastępowanie <xref:System.Object.Equals%28System.Object%29> dla typu wartości:</span><span class="sxs-lookup"><span data-stu-id="eff19-227">The following guidelines apply to overriding <xref:System.Object.Equals%28System.Object%29> for a value type:</span></span>  
  
-   <span data-ttu-id="eff19-228">Jeśli definiujesz typu wartości, która zawiera co najmniej jedno pole których wartości są typy odwołań, powinny zastępować <xref:System.Object.Equals%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="eff19-228">If you are defining a value type that includes one or more fields whose values are reference types, you should override <xref:System.Object.Equals%28System.Object%29>.</span></span> <span data-ttu-id="eff19-229"><xref:System.Object.Equals%28System.Object%29> Implementacji podał <xref:System.ValueType> przeprowadza porównanie po bicie dla typów wartości, których pola są wszystkie typy wartości, ale używa odbicia do wykonania porównania pola przez typy wartości, których pola obejmują typy referencyjne.</span><span class="sxs-lookup"><span data-stu-id="eff19-229">The <xref:System.Object.Equals%28System.Object%29> implementation provided by <xref:System.ValueType> performs a byte-by-byte comparison for value types whose fields are all value types, but it uses reflection to perform a field-by-field comparison of value types whose fields include reference types.</span></span>  
  
-   <span data-ttu-id="eff19-230">Jeśli można zastąpić <xref:System.Object.Equals%2A> i przeciążania operatorów obsługuje język programowania, muszą przeciążać operatora równości.</span><span class="sxs-lookup"><span data-stu-id="eff19-230">If you override <xref:System.Object.Equals%2A> and your development language supports operator overloading, you must overload the equality operator.</span></span>  
  
-   <span data-ttu-id="eff19-231">Należy zaimplementować <xref:System.IEquatable%601> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="eff19-231">You should implement the <xref:System.IEquatable%601> interface.</span></span> <span data-ttu-id="eff19-232">Wywoływanie silnie typizowaną <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> metoda pozwala uniknąć pakującej `obj` argumentu.</span><span class="sxs-lookup"><span data-stu-id="eff19-232">Calling the strongly typed <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method avoids boxing the `obj` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eff19-233">W poniższym przykładzie przedstawiono `Point` klasy, która zastępuje <xref:System.Object.Equals%2A> metodę w celu zapewnienia równości wartości i `Point3D` klasy, która jest pochodną `Point`.</span><span class="sxs-lookup"><span data-stu-id="eff19-233">The following example shows a `Point` class that overrides the <xref:System.Object.Equals%2A> method to provide value equality, and a `Point3D` class that is derived from `Point`.</span></span> <span data-ttu-id="eff19-234">Ponieważ `Point` zastępuje <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> do testowania równości wartości <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> nie jest wywoływana metoda.</span><span class="sxs-lookup"><span data-stu-id="eff19-234">Because `Point` overrides <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> to test for value equality, the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method is not called.</span></span> <span data-ttu-id="eff19-235">Jednak `Point3D.Equals` wywołania `Point.Equals` ponieważ `Point` implementuje <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> w taki sposób, który udostępnia wartość porównania.</span><span class="sxs-lookup"><span data-stu-id="eff19-235">However, `Point3D.Equals` calls `Point.Equals` because `Point` implements <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> in a manner that provides value equality.</span></span>  
  
 [!code-csharp[ECMA-System.Object.Equals2#1](~/samples/snippets/csharp/VS_Snippets_CLR/ECMA-System.Object.Equals2/CS/equals2.cs#1)]
 [!code-vb[ECMA-System.Object.Equals2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ECMA-System.Object.Equals2/VB/equals2.vb#1)]  
  
 <span data-ttu-id="eff19-236">`Point.Equals` Metoda sprawdza, upewnij się, że `obj` argument nie jest **null** i czy odwołuje się wystąpienia tego samego typu co ten obiekt.</span><span class="sxs-lookup"><span data-stu-id="eff19-236">The `Point.Equals` method checks to make sure that the `obj` argument is not **null** and that it references an instance of the same type as this object.</span></span> <span data-ttu-id="eff19-237">Jeśli zaznacz kończy się niepowodzeniem, metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="eff19-237">If either check fails, the method returns `false`.</span></span>  
  
 <span data-ttu-id="eff19-238">`Point.Equals` Wywołania metody <xref:System.Object.GetType%2A> metodę, aby określić, czy typy środowiska wykonawczego dwa obiekty są identyczne.</span><span class="sxs-lookup"><span data-stu-id="eff19-238">The `Point.Equals` method calls the <xref:System.Object.GetType%2A> method to determine whether the run-time types of the two objects are identical.</span></span> <span data-ttu-id="eff19-239">Jeśli metodę wyboru w postaci `obj is Point` w języku C# lub `TryCast(obj, Point)` w języku Visual Basic zwróci sprawdzania `true` w przypadkach, gdzie `obj` jest wystąpieniem klasy pochodnej z `Point`, mimo że `obj` i obecnie wystąpienie nie są tego samego typu czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="eff19-239">If the method used a check of the form `obj is Point` in C# or `TryCast(obj, Point)` in Visual Basic, the check would return `true` in cases where `obj` is an instance of a derived class of `Point`, even though `obj` and the current instance are not of the same run-time type.</span></span> <span data-ttu-id="eff19-240">Po zweryfikowaniu, że oba obiekty są tego samego typu rzutowania metody `obj` na typ `Point` i zwraca wynik porównania pól wystąpień dwóch obiektów.</span><span class="sxs-lookup"><span data-stu-id="eff19-240">Having verified that both objects are of the same type, the method casts `obj` to type `Point` and returns the result of comparing the instance fields of the two objects.</span></span>  
  
 <span data-ttu-id="eff19-241">W `Point3D.Equals`, dziedziczonego `Point.Equals` metodę, która zastępuje <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>, jest wywoływana przed odbywa się inaczej.</span><span class="sxs-lookup"><span data-stu-id="eff19-241">In `Point3D.Equals`, the inherited `Point.Equals` method, which overrides <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>, is invoked before anything else is done.</span></span> <span data-ttu-id="eff19-242">Ponieważ `Point3D` jest klasy zapieczętowanej (`NotInheritable` w języku Visual Basic), wyboru w formularzu `obj is Point` w języku C# lub `TryCast(obj, Point)` w języku Visual Basic jest odpowiednia do upewnij się, że `obj` jest `Point3D` obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-242">Because `Point3D` is a sealed class (`NotInheritable` in Visual Basic), a check in the form `obj is Point` in C# or `TryCast(obj, Point)` in Visual Basic is adequate to ensure that `obj` is a `Point3D` object.</span></span> <span data-ttu-id="eff19-243">Jeśli jest `Point3D` obiektu, jest rzutowane na `Point` obiektu i przekazane do implementacji klasy podstawowej <xref:System.Object.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="eff19-243">If it is a `Point3D` object, it is cast to a `Point` object and passed to the base class implementation of <xref:System.Object.Equals%2A>.</span></span> <span data-ttu-id="eff19-244">Tylko wtedy, gdy dziedziczonego `Point.Equals` metoda zwraca `true` jest compare — metoda `z` wystąpienia pól wprowadzone w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="eff19-244">Only when the inherited `Point.Equals` method returns `true` does the method compare the `z` instance fields introduced in the derived class.</span></span>  
  
 <span data-ttu-id="eff19-245">W poniższym przykładzie zdefiniowano `Rectangle` klasy, która implementuje wewnętrznie prostokąt jako dwa `Point` obiektów.</span><span class="sxs-lookup"><span data-stu-id="eff19-245">The following example defines a `Rectangle` class that internally implements a rectangle as two `Point` objects.</span></span> <span data-ttu-id="eff19-246">`Rectangle` Klasy również zastąpienia <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> do zapewnienia równości wartości.</span><span class="sxs-lookup"><span data-stu-id="eff19-246">The `Rectangle` class also overrides <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> to provide for value equality.</span></span>  
  
 [!code-csharp[ECMA-System.Object.Equals3#1](~/samples/snippets/csharp/VS_Snippets_CLR/ECMA-System.Object.Equals3/CS/equals3.cs#1)]
 [!code-vb[ECMA-System.Object.Equals3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ECMA-System.Object.Equals3/VB/equals3.vb#1)]  
  
 <span data-ttu-id="eff19-247">Niektóre języki, takich jak C# i Visual Basic obsługują przeładowania operatora.</span><span class="sxs-lookup"><span data-stu-id="eff19-247">Some languages such as C# and Visual Basic support operator overloading.</span></span> <span data-ttu-id="eff19-248">Gdy typem overloads operator równości, musi także zastępować <xref:System.Object.Equals%28System.Object%29> metodę, aby dostarczyć te same funkcje.</span><span class="sxs-lookup"><span data-stu-id="eff19-248">When a type overloads the equality operator, it must also override the <xref:System.Object.Equals%28System.Object%29> method to provide the same functionality.</span></span> <span data-ttu-id="eff19-249">Zazwyczaj jest to realizowane za pomocą <xref:System.Object.Equals%28System.Object%29> metody pod względem operator równości przeciążone, jak w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="eff19-249">This is typically accomplished by writing the <xref:System.Object.Equals%28System.Object%29> method in terms of the overloaded equality operator, as in the following example.</span></span>  
  
 [!code-csharp[ECMA-System.Object.Equals4#1](~/samples/snippets/csharp/VS_Snippets_CLR/ECMA-System.Object.Equals4/CS/equals4.cs#1)]
 [!code-vb[ECMA-System.Object.Equals4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ECMA-System.Object.Equals4/vb/equals4.vb#1)]  
  
 <span data-ttu-id="eff19-250">Ponieważ `Complex` jest to typ wartości nie może pochodzić z.</span><span class="sxs-lookup"><span data-stu-id="eff19-250">Because `Complex` is a value type, it cannot be derived from.</span></span>  <span data-ttu-id="eff19-251">W związku z tym zastąpienie mające na celu <xref:System.Object.Equals%28System.Object%29> — metoda nie należy wywoływać <xref:System.Object.GetType%2A> ustalenie dokładne czasu wykonywania typu każdego obiektu, ale może zamiast tego użyj `is` operatora w języku C# lub `TypeOf` operatora w języku Visual Basic, aby sprawdzić typ `obj` parametru.</span><span class="sxs-lookup"><span data-stu-id="eff19-251">Therefore, the override to <xref:System.Object.Equals%28System.Object%29> method need not call <xref:System.Object.GetType%2A> to determine the precise run-time type of each object, but can instead use the `is` operator in C# or the `TypeOf` operator in Visual Basic to check the type of the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ReferenceEquals(System.Object,System.Object)" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.ValueType" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="T:System.Collections.Hashtable" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object objA, object objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object objA, object objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Object.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (objA As Object, objB As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Object ^ objA, System::Object ^ objB);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objA">
          <span data-ttu-id="eff19-252">Pierwszy obiekt, który ma zostać porównany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-252">The first object to compare.</span>
          </span>
        </param>
        <param name="objB">
          <span data-ttu-id="eff19-253">Drugi obiekt, który będzie porównywany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-253">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eff19-254">Określa, czy wystąpienia określonego obiektu są traktowane jako równe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-254">Determines whether the specified object instances are considered equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eff19-255">
            <see langword="true" /> Jeśli obiekty są traktowane jako równe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-255">
              <see langword="true" /> if the objects are considered equal; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eff19-256">Jeśli oba <paramref name="objA" /> i <paramref name="objB" /> są **null**, metoda zwraca <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-256">If both <paramref name="objA" /> and <paramref name="objB" /> are **null**, the method returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff19-257">Statycznych <xref:System.Object.Equals%28System.Object%2CSystem.Object%29> metoda wskazuje, czy dwa obiekty, `objA` i `objB`, są takie same.</span><span class="sxs-lookup"><span data-stu-id="eff19-257">The static <xref:System.Object.Equals%28System.Object%2CSystem.Object%29> method indicates whether two objects, `objA` and  `objB`, are equal.</span></span> <span data-ttu-id="eff19-258">Można również do testowania obiektów, którego wartość jest **null** pod kątem równości.</span><span class="sxs-lookup"><span data-stu-id="eff19-258">It also enables you to test objects whose value is **null** for equality.</span></span> <span data-ttu-id="eff19-259">Porównuje `objA` i `objB` równości w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="eff19-259">It compares `objA` and `objB` for equality as follows:</span></span>  
  
-   <span data-ttu-id="eff19-260">Określa, czy dwa obiekty reprezentuje odwołanie do tego samego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-260">It determines whether the two objects represent the same object reference.</span></span> <span data-ttu-id="eff19-261">Jeśli nie, metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="eff19-261">If they do, the method returns `true`.</span></span> <span data-ttu-id="eff19-262">Ten test jest odpowiednikiem wywołania <xref:System.Object.ReferenceEquals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-262">This test is equivalent to calling the <xref:System.Object.ReferenceEquals%2A> method.</span></span> <span data-ttu-id="eff19-263">Ponadto, jeśli obie `objA` i `objB` są **null**, metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="eff19-263">In addition, if both `objA` and `objB` are **null**, the method returns `true`.</span></span>  
  
-   <span data-ttu-id="eff19-264">Określa czy albo `objA` lub `objB` jest **null**.</span><span class="sxs-lookup"><span data-stu-id="eff19-264">It determines whether either `objA` or `objB` is **null**.</span></span> <span data-ttu-id="eff19-265">Jeśli tak, zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="eff19-265">If so, it returns `false`.</span></span>  
  
-   <span data-ttu-id="eff19-266">Jeśli dwa obiekty nie reprezentują tego samego odwołania do obiektu i nie będzie **null**, wywołuje `objA`.`Equals` (`objB`) i zwraca wynik.</span><span class="sxs-lookup"><span data-stu-id="eff19-266">If the two objects do not represent the same object reference and neither is **null**, it calls `objA`.`Equals`(`objB`) and returns the result.</span></span> <span data-ttu-id="eff19-267">Oznacza to, że jeśli `objA` zastępuje <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> wywoływana jest metoda, to zastąpienie.</span><span class="sxs-lookup"><span data-stu-id="eff19-267">This means that if `objA` overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, this override is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eff19-268">Poniższy przykład przedstawia <xref:System.Object.Equals%28System.Object%2CSystem.Object%29> — metoda i porównuje ją z <xref:System.Object.ReferenceEquals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-268">The following example illustrates the <xref:System.Object.Equals%28System.Object%2CSystem.Object%29> method and compares it with the <xref:System.Object.ReferenceEquals%2A> method.</span></span>  
  
 [!code-csharp[System.Object.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.equals/cs/equals_static2.cs#1)]
 [!code-vb[System.Object.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.equals/vb/equals_static2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="M:System.Object.ReferenceEquals(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Object ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Object.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Object ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eff19-269">Umożliwia obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, przed jego jest odzyskana przez wyrzucanie elementów bezużytecznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-269">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff19-270"><xref:System.Object.Finalize%2A> Metoda jest używana do wykonywania operacji oczyszczania na niezarządzane zasoby zajmowane przez bieżący obiekt, zanim obiekt zostanie zniszczony.</span><span class="sxs-lookup"><span data-stu-id="eff19-270">The <xref:System.Object.Finalize%2A> method is used to perform cleanup operations on unmanaged resources held by the current object before the object is destroyed.</span></span> <span data-ttu-id="eff19-271">Metoda jest chroniona i w związku z tym jest dostępny tylko za pomocą tej klasy lub z klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="eff19-271">The method is protected and therefore is accessible only through this class or through a derived class.</span></span>  
  
 <span data-ttu-id="eff19-272">W tej sekcji:</span><span class="sxs-lookup"><span data-stu-id="eff19-272">In this section:</span></span>  
  
-   [<span data-ttu-id="eff19-273">Jak działa finalizacji</span><span class="sxs-lookup"><span data-stu-id="eff19-273">How finalization works</span></span>](#How)  
  
-   [<span data-ttu-id="eff19-274">Informacje o implementacji</span><span class="sxs-lookup"><span data-stu-id="eff19-274">Notes for implementers</span></span>](#Notes)  
  
-   [<span data-ttu-id="eff19-275">Element SafeHandle alternatywnej</span><span class="sxs-lookup"><span data-stu-id="eff19-275">The SafeHandle alternative</span></span>](#SafeHandle)  
  
<a name="How"></a>   
## <a name="how-finalization-works"></a><span data-ttu-id="eff19-276">Jak działa finalizacji</span><span class="sxs-lookup"><span data-stu-id="eff19-276">How finalization works</span></span>  
 <span data-ttu-id="eff19-277"><xref:System.Object> Klasa dostarcza implementacji <xref:System.Object.Finalize%2A> — metoda i moduł zbierający elementy bezużyteczne nie znaku typów pochodnych <xref:System.Object> dla finalizacji chyba, że zastępują one <xref:System.Object.Finalize%2A> — metoda.</span><span class="sxs-lookup"><span data-stu-id="eff19-277">The <xref:System.Object> class provides no implementation for the <xref:System.Object.Finalize%2A> method, and the garbage collector does not mark types derived from <xref:System.Object> for finalization unless they override the <xref:System.Object.Finalize%2A> method.</span></span>  
  
 <span data-ttu-id="eff19-278">Jeśli typem zastąpienie <xref:System.Object.Finalize%2A> metoda, moduł zbierający elementy bezużyteczne dodaje wpis dla każdego wystąpienia typu o nazwie Kolejka finalizacji wewnętrznej struktury.</span><span class="sxs-lookup"><span data-stu-id="eff19-278">If a type does override the <xref:System.Object.Finalize%2A> method, the garbage collector adds an entry for each instance of the type to an internal structure called the finalization queue.</span></span> <span data-ttu-id="eff19-279">Kolejka finalizacji zawiera wpisy dla wszystkich obiektów w stercie zarządzanej, którego kod finalizacji należy uruchomić przed modułu zbierającego elementy bezużyteczne mógł odzyskać ich pamięci.</span><span class="sxs-lookup"><span data-stu-id="eff19-279">The finalization queue contains entries for all the objects in the managed heap whose finalization code must run before the garbage collector can reclaim their memory.</span></span> <span data-ttu-id="eff19-280">Wywołuje moduł garbage collector <xref:System.Object.Finalize%2A> metody automatycznie w następujących warunkach:</span><span class="sxs-lookup"><span data-stu-id="eff19-280">The garbage collector then calls the <xref:System.Object.Finalize%2A> method automatically under the following conditions:</span></span>  
  
-   <span data-ttu-id="eff19-281">Po moduł garbage collector wykrył, że obiekt jest niedostępny, chyba że obiekt została zwolniona z finalizacji przez wywołanie do <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-281">After the garbage collector has discovered that an object is inaccessible, unless the object has been exempted from finalization by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="eff19-282">Podczas zamykania domeny aplikacji chyba że obiekt jest wykluczony z finalizacji.</span><span class="sxs-lookup"><span data-stu-id="eff19-282">During shutdown of an application domain, unless the object is exempt from finalization.</span></span> <span data-ttu-id="eff19-283">Podczas zamykania sfinalizowaniu nawet obiektów, które są nadal dostępne.</span><span class="sxs-lookup"><span data-stu-id="eff19-283">During shutdown, even objects that are still accessible are finalized.</span></span>  
  
 <span data-ttu-id="eff19-284"><xref:System.Object.Finalize%2A> jest automatycznie wywołana tylko raz w danym wystąpieniu, chyba że obiekt jest ponownie zarejestrowane przy użyciu mechanizmu, takich jak <xref:System.GC.ReRegisterForFinalize%2A?displayProperty=nameWithType> i <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> nie została następnie wywołana metoda.</span><span class="sxs-lookup"><span data-stu-id="eff19-284"><xref:System.Object.Finalize%2A> is automatically called only once on a given instance, unless the object is re-registered by using a mechanism such as <xref:System.GC.ReRegisterForFinalize%2A?displayProperty=nameWithType> and the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method has not been subsequently called.</span></span>  
  
 <span data-ttu-id="eff19-285"><xref:System.Object.Finalize%2A> operacje mają następujące ograniczenia:</span><span class="sxs-lookup"><span data-stu-id="eff19-285"><xref:System.Object.Finalize%2A> operations have the following limitations:</span></span>  
  
-   <span data-ttu-id="eff19-286">Dokładny czas, kiedy wykonuje finalizatora jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="eff19-286">The exact time when the finalizer executes is undefined.</span></span> <span data-ttu-id="eff19-287">Zapewnienie deterministyczne zwolnienia zasobów dla wystąpień klasy, wdrożenie `Close` metody lub podaj <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> implementacji.</span><span class="sxs-lookup"><span data-stu-id="eff19-287">To ensure deterministic release of resources for instances of your class, implement a `Close` method or provide a <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> implementation.</span></span>  
  
-   <span data-ttu-id="eff19-288">Finalizatory dwóch obiektów nie ma gwarancji do uruchamiania w dowolnej kolejności, nawet jeśli jeden obiekt odwołuje się do innych.</span><span class="sxs-lookup"><span data-stu-id="eff19-288">The finalizers of two objects are not guaranteed to run in any specific order, even if one object refers to the other.</span></span> <span data-ttu-id="eff19-289">Oznacza to mają finalizatory obiektu A zawiera odwołanie do obiektu B, obiekt B może mieć już sfinalizowany podczas uruchamiania finalizatora obiektu, A.</span><span class="sxs-lookup"><span data-stu-id="eff19-289">That is, if Object A has a reference to Object B and both have finalizers, Object B might have already been finalized when the finalizer of Object A starts.</span></span>  
  
-   <span data-ttu-id="eff19-290">Wątek, na którym jest uruchomiony finalizatora jest nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="eff19-290">The thread on which the finalizer runs is unspecified.</span></span>  
  
 <span data-ttu-id="eff19-291"><xref:System.Object.Finalize%2A> Metody mogą nie działać do zakończenia lub może nie działać w ogóle następujących wyjątkowych okolicznościach:</span><span class="sxs-lookup"><span data-stu-id="eff19-291">The <xref:System.Object.Finalize%2A> method might not run to completion or might not run at all under the following exceptional circumstances:</span></span>  
  
-   <span data-ttu-id="eff19-292">Jeśli inny finalizator blokuje nieskończoność (przechodzi w nieskończonej pętli, próbuje uzyskać blokady go może nigdy nie uzyskać i tak dalej).</span><span class="sxs-lookup"><span data-stu-id="eff19-292">If another finalizer blocks indefinitely (goes into an infinite loop, tries to obtain a lock it can never obtain, and so on).</span></span> <span data-ttu-id="eff19-293">Ponieważ środowisko wykonawcze próbuje uruchomić finalizatory w celu ukończenia, innych finalizatory może nie można wywołać Jeśli bloki finalizator przez nieograniczony czas.</span><span class="sxs-lookup"><span data-stu-id="eff19-293">Because the runtime tries to run finalizers to completion, other finalizers might not be called if a finalizer blocks indefinitely.</span></span>  
  
-   <span data-ttu-id="eff19-294">Jeśli proces zakończy się bez nadawania środowiska uruchomieniowego możliwość wyczyścić.</span><span class="sxs-lookup"><span data-stu-id="eff19-294">If the process terminates without giving the runtime a chance to clean up.</span></span> <span data-ttu-id="eff19-295">W takim przypadku środowiska uruchomieniowego pierwszego powiadomienia o wygaśnięciu procesu jest powiadomienie komunikat DLL_PROCESS_DETACH.</span><span class="sxs-lookup"><span data-stu-id="eff19-295">In this case, the runtime's first notification of process termination is a DLL_PROCESS_DETACH notification.</span></span>  
  
 <span data-ttu-id="eff19-296">Środowisko uruchomieniowe w dalszym ciągu finalize obiekty podczas zamykania tylko wtedy, gdy liczba obiektów finalizable nadal zmniejszyć.</span><span class="sxs-lookup"><span data-stu-id="eff19-296">The runtime continues to finalize objects during shutdown only while the number of finalizable objects continues to decrease.</span></span>  
  
 <span data-ttu-id="eff19-297">Jeśli <xref:System.Object.Finalize%2A> lub zastępująca <xref:System.Object.Finalize%2A> zgłasza wyjątek, który występuje i środowiska uruchomieniowego nie jest obsługiwany przez aplikację, która zastępuje domyślną zasadę, środowisko uruchomieniowe kończy proces i nie ma aktywnych `try` / `finally` bloków lub finalizatory są wykonywane.</span><span class="sxs-lookup"><span data-stu-id="eff19-297">If <xref:System.Object.Finalize%2A> or an override of <xref:System.Object.Finalize%2A> throws an exception, and the runtime is not hosted by an application that overrides the default policy, the runtime terminates the process and no active `try`/`finally` blocks or finalizers are executed.</span></span> <span data-ttu-id="eff19-298">Takie zachowanie gwarantuje integralności procesu, jeśli finalizator nie może zwolnić lub zniszczenie zasobów.</span><span class="sxs-lookup"><span data-stu-id="eff19-298">This behavior ensures process integrity if the finalizer cannot free or destroy resources.</span></span>  
  
<a name="Notes"></a>   
## <a name="overriding-the-finalize-method"></a><span data-ttu-id="eff19-299">Zastępowanie metody Finalize</span><span class="sxs-lookup"><span data-stu-id="eff19-299">Overriding the Finalize method</span></span> 
 <span data-ttu-id="eff19-300">Należy zastąpić <xref:System.Object.Finalize%2A> dla klasy, która używa niezarządzane zasoby, takie jak dojścia do plików lub połączenia z bazą danych, które muszą zostać zwolnione, gdy obiekt zarządzany, który używa tych zostaną odrzucone podczas wyrzucania elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="eff19-300">You should override <xref:System.Object.Finalize%2A> for a class that uses unmanaged resources, such as file handles or database connections that must be released when the managed object that uses them is discarded during garbage collection.</span></span> <span data-ttu-id="eff19-301">Nie należy implementować <xref:System.Object.Finalize%2A> metodę zarządzane obiekty, ponieważ moduł garbage collector zwalnia zasoby zarządzane automatycznie.</span><span class="sxs-lookup"><span data-stu-id="eff19-301">You shouldn't implement a <xref:System.Object.Finalize%2A> method for managed objects because the garbage collector releases managed resources automatically.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eff19-302">Jeśli <xref:System.Runtime.InteropServices.SafeHandle> obiekt jest dostępny który opakowuje niezarządzanego zasobu, zalecaną alternatywą jest implementować wzorzec dispose z bezpieczne dojście do przesłania <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eff19-302">If a <xref:System.Runtime.InteropServices.SafeHandle> object is available that wraps your unmanaged resource, the recommended alternative is to implement the dispose pattern with a safe handle and not override <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="eff19-303">Aby uzyskać więcej informacji, zobacz [zamiast SafeHandle](#SafeHandle) sekcji.</span><span class="sxs-lookup"><span data-stu-id="eff19-303">For more information, see [The SafeHandle alternative](#SafeHandle) section.</span></span>  
  
 <span data-ttu-id="eff19-304"><xref:System.Object.Finalize%2A?displayProperty=nameWithType> — Metoda nie działa domyślnie, ale powinny zastępować <xref:System.Object.Finalize%2A> tylko wtedy, gdy konieczne, a jedynie, aby zwolnić zasoby niezarządzane.</span><span class="sxs-lookup"><span data-stu-id="eff19-304">The <xref:System.Object.Finalize%2A?displayProperty=nameWithType> method does nothing by default, but you should override <xref:System.Object.Finalize%2A> only if necessary, and only to release unmanaged resources.</span></span> <span data-ttu-id="eff19-305">Odzyskiwanie pamięci zwykle trwać znacznie dłużej, jeśli operacja finalizacji działa, ponieważ wymaga co najmniej dwóch wyrzucania.</span><span class="sxs-lookup"><span data-stu-id="eff19-305">Reclaiming memory tends to take much longer if a finalization operation runs, because it requires at least two garbage collections.</span></span> <span data-ttu-id="eff19-306">Ponadto należy zastąpić <xref:System.Object.Finalize%2A> metody dla odwołania tylko typy.</span><span class="sxs-lookup"><span data-stu-id="eff19-306">In addition, you should override the <xref:System.Object.Finalize%2A> method for reference types only.</span></span> <span data-ttu-id="eff19-307">Środowisko uruchomieniowe języka wspólnego tylko Kończenie znajdujących się w typach odwołań.</span><span class="sxs-lookup"><span data-stu-id="eff19-307">The common language runtime only finalizes reference types.</span></span> <span data-ttu-id="eff19-308">Ignoruje finalizatory w typach wartości.</span><span class="sxs-lookup"><span data-stu-id="eff19-308">It ignores finalizers on value types.</span></span>  

<span data-ttu-id="eff19-309">Zakres <xref:System.Object.Finalize%2A?displayProperty=nameWithType> jest metoda `protected`.</span><span class="sxs-lookup"><span data-stu-id="eff19-309">The scope of the <xref:System.Object.Finalize%2A?displayProperty=nameWithType> method is `protected`.</span></span> <span data-ttu-id="eff19-310">Należy zachować ten ograniczony zakres podczas zastąpienia metody w klasie.</span><span class="sxs-lookup"><span data-stu-id="eff19-310">You should maintain this limited scope when you override the method in your class.</span></span> <span data-ttu-id="eff19-311">Dzięki przechowywaniu <xref:System.Object.Finalize%2A> metody chronione, należy uniemożliwić użytkownikom aplikacji z wywoływania obiektu <xref:System.Object.Finalize%2A> metody bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="eff19-311">By keeping a <xref:System.Object.Finalize%2A> method protected, you prevent users of your application from calling an object's <xref:System.Object.Finalize%2A> method directly.</span></span>
  
 <span data-ttu-id="eff19-312">Każdy implementacja <xref:System.Object.Finalize%2A> typu pochodnego musi wywołać wykonania jego typ podstawowy <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eff19-312">Every implementation of <xref:System.Object.Finalize%2A> in a derived type must call its base type's implementation of <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="eff19-313">Dotyczy to tylko w aplikacji, które może wywoływać kod <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eff19-313">This is the only case in which application code is allowed to call <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="eff19-314">Obiekt <xref:System.Object.Finalize%2A> — metoda nie należy wywołać metodę na wszelkie obiekty inną niż swojej klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="eff19-314">An object's <xref:System.Object.Finalize%2A> method shouldn't call a method on any objects other than that of its base class.</span></span> <span data-ttu-id="eff19-315">Jest tak, ponieważ inne wywołania obiektów mogą być kolekcjonowane w tym samym czasie, co obiekt wywołujący, tak jak w przypadku zamknięcia środowiska uruchomieniowego języka wspólnego.</span><span class="sxs-lookup"><span data-stu-id="eff19-315">This is because the other objects being called could be collected at the same time as the calling object, such as in the case of a common language runtime shutdown.</span></span> 
  
> [!NOTE]
>  <span data-ttu-id="eff19-316">Kompilator języka C# nie pozwala na zastąpienie <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-316">The C# compiler does not allow you to override the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="eff19-317">Zamiast tego Podaj finalizator zaimplementowanie [destruktora](~/docs/csharp/programming-guide/classes-and-structs/destructors.md) dla klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-317">Instead, you provide a finalizer by implementing a [destructor](~/docs/csharp/programming-guide/classes-and-structs/destructors.md) for your class.</span></span> <span data-ttu-id="eff19-318">C# destruktora automatycznie wywołuje destruktor klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="eff19-318">A C# destructor automatically calls the destructor of its base class.</span></span>  
>   
>  <span data-ttu-id="eff19-319">Visual C++ udostępnia również własną składni wykonywania <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-319">Visual C++ also provides its own syntax for implementing the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="eff19-320">Aby uzyskać więcej informacji, zobacz sekcję "Destruktory i finalizatory" [porady: definiowanie i korzystać z klas i struktur (C + +/ CLI)](http://msdn.microsoft.com/library/1c03cb0d-1459-4b5e-af65-97d6b3094fd7).</span><span class="sxs-lookup"><span data-stu-id="eff19-320">For more information, see the "Destructors and finalizers" section of [How to: Define and Consume Classes and Structs (C++/CLI)](http://msdn.microsoft.com/library/1c03cb0d-1459-4b5e-af65-97d6b3094fd7).</span></span>  
  
 <span data-ttu-id="eff19-321">Wyrzucanie elementów bezużytecznych jest deterministyczna, nie wiadomo, mówiąc, gdy moduł garbage collector wykonuje finalizacji.</span><span class="sxs-lookup"><span data-stu-id="eff19-321">Because garbage collection is non-deterministic, you do not know precisely when the garbage collector performs finalization.</span></span> <span data-ttu-id="eff19-322">Aby zwolnić zasoby natychmiast, również można zaimplementować [wzorzec dispose](~/docs/standard/design-guidelines/dispose-pattern.md) i <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="eff19-322">To release resources immediately, you can also choose to implement the [dispose pattern](~/docs/standard/design-guidelines/dispose-pattern.md) and the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="eff19-323"><xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> Implementacja może być wywoływany przez konsumentów klasy do zwalniania niezarządzanych zasobów i służy <xref:System.Object.Finalize%2A> metody do zwalniania niezarządzanych zasobów w przypadku gdy <xref:System.IDisposable.Dispose%2A> nie jest wywoływana metoda.</span><span class="sxs-lookup"><span data-stu-id="eff19-323">The <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> implementation can be called by consumers of your class to free unmanaged resources, and you can use the <xref:System.Object.Finalize%2A> method to free unmanaged resources in the event that the <xref:System.IDisposable.Dispose%2A> method is not called.</span></span>  
  
 <span data-ttu-id="eff19-324"><xref:System.Object.Finalize%2A> może zająć prawie każdego działania, w tym resurrecting obiektu (tj. udostępnienie obiektu ponownie), po jego został oczyszczony podczas wyrzucania elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="eff19-324"><xref:System.Object.Finalize%2A> can take almost any action, including resurrecting an object (that is, making the object accessible again) after it has been cleaned up during garbage collection.</span></span> <span data-ttu-id="eff19-325">Jednak obiekt można tylko być aktywowanych raz; <xref:System.Object.Finalize%2A> nie można wywołać w obiektach aktywowanych podczas wyrzucania elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="eff19-325">However, the object can only be resurrected once; <xref:System.Object.Finalize%2A> cannot be called on resurrected objects during garbage collection.</span></span> <span data-ttu-id="eff19-326">Brak jednej akcji który implementacji <xref:System.Object.Finalize%2A> nigdy nie powinna przyjmować: go nigdy nie powinien zgłosić wyjątek.</span><span class="sxs-lookup"><span data-stu-id="eff19-326">There is one action that your implementation of <xref:System.Object.Finalize%2A> should never take: it should never throw an exception.</span></span> <span data-ttu-id="eff19-327">Jeśli wszelkie wyjątki zgłaszane przez metody wywoływane z <xref:System.Object.Finalize%2A> metody jest nieobsługiwany przez <xref:System.Object.Finalize%2A> — metoda, środowisko uruchomieniowe przy założeniu, że <xref:System.Object.Finalize%2A> — metoda zwróciła i kontynuuje wywoływanie <xref:System.Object.Finalize%2A> metody innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="eff19-327">If any exceptions thrown by methods called from the <xref:System.Object.Finalize%2A> method are unhandled by the <xref:System.Object.Finalize%2A> method, the runtime assumes that the <xref:System.Object.Finalize%2A> method returned and continues to call the <xref:System.Object.Finalize%2A> methods of other objects.</span></span> 
  
<a name="SafeHandle"></a>   
## <a name="the-safehandle-alternative"></a><span data-ttu-id="eff19-328">Element SafeHandle alternatywnej</span><span class="sxs-lookup"><span data-stu-id="eff19-328">The SafeHandle alternative</span></span>  
 <span data-ttu-id="eff19-329">Często jest trudne, tworzenie niezawodnej finalizatory, ponieważ nie można wprowadzić założenia dotyczące stanu aplikacji i nieobsługiwane wyjątki systemu, takich jak <xref:System.OutOfMemoryException> i <xref:System.StackOverflowException> przerwanie finalizatora.</span><span class="sxs-lookup"><span data-stu-id="eff19-329">Creating reliable finalizers is often difficult, because you cannot make assumptions about the state of your application, and because unhandled system exceptions such as <xref:System.OutOfMemoryException> and <xref:System.StackOverflowException> terminate the finalizer.</span></span> <span data-ttu-id="eff19-330">Zamiast implementacja finalizatora dla klasy, aby zwolnić zasoby niezarządzane, możesz użyć obiektu, który jest pochodną <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=nameWithType> klasy opakowywać niezarządzane zasoby, a następnie implementować wzorzec dispose bez finalizator.</span><span class="sxs-lookup"><span data-stu-id="eff19-330">Instead of implementing a finalizer for your class to release unmanaged resources, you can use an object that is derived from the <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=nameWithType> class to wrap your unmanaged resources, and then implement the dispose pattern without a finalizer.</span></span> <span data-ttu-id="eff19-331">Platforma .NET Framework zapewnia następujące klasy w <xref:Microsoft.Win32?displayProperty=nameWithType> przestrzeni nazw, które są pochodnymi <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="eff19-331">The .NET Framework provides the following classes in the <xref:Microsoft.Win32?displayProperty=nameWithType> namespace that are derived from <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="eff19-332"><xref:Microsoft.Win32.SafeHandles.SafeFileHandle> to klasa otoki dla dojście do pliku.</span><span class="sxs-lookup"><span data-stu-id="eff19-332"><xref:Microsoft.Win32.SafeHandles.SafeFileHandle> is a wrapper class for a file handle.</span></span>  
  
-   <span data-ttu-id="eff19-333"><xref:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle> to klasa otoki dla dojścia do plików mapowanych na pamięć.</span><span class="sxs-lookup"><span data-stu-id="eff19-333"><xref:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle> is a wrapper class for memory-mapped file handles.</span></span>  
  
-   <span data-ttu-id="eff19-334"><xref:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle> to klasa otoki dla wskaźnika do bloku pamięci niezarządzanej.</span><span class="sxs-lookup"><span data-stu-id="eff19-334"><xref:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle> is a wrapper class for a pointer to a block of unmanaged memory.</span></span>  
  
-   <span data-ttu-id="eff19-335"><xref:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle>, <xref:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle>, i <xref:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle> są klasy otoki dojść do usług kryptograficznych.</span><span class="sxs-lookup"><span data-stu-id="eff19-335"><xref:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle>, <xref:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle>, and <xref:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle> are wrapper classes for cryptographic handles.</span></span>  
  
-   <span data-ttu-id="eff19-336"><xref:Microsoft.Win32.SafeHandles.SafePipeHandle> to klasa otoki dla dojścia potoku.</span><span class="sxs-lookup"><span data-stu-id="eff19-336"><xref:Microsoft.Win32.SafeHandles.SafePipeHandle> is a wrapper class for pipe handles.</span></span>  
  
-   <span data-ttu-id="eff19-337"><xref:Microsoft.Win32.SafeHandles.SafeRegistryHandle> to klasa otoki na dojście do klucza rejestru.</span><span class="sxs-lookup"><span data-stu-id="eff19-337"><xref:Microsoft.Win32.SafeHandles.SafeRegistryHandle> is a wrapper class for a handle to a registry key.</span></span>  
  
-   <span data-ttu-id="eff19-338"><xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> to klasa otoki dla dojście oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="eff19-338"><xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> is a wrapper class for a wait handle.</span></span>  
  
 <span data-ttu-id="eff19-339">W poniższym przykładzie użyto [wzorzec dispose](~/docs/standard/design-guidelines/dispose-pattern.md) z uchwytami bezpieczne zamiast przesłaniać metodę <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-339">The following example uses the [dispose pattern](~/docs/standard/design-guidelines/dispose-pattern.md) with safe handles instead of overriding the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="eff19-340">Definiuje `FileAssociation` klasy, która opakowuje rejestru informacji o aplikacji, która obsługuje pliki z rozszerzeniem określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="eff19-340">It defines a `FileAssociation` class that wraps registry information about the application that handles files with a particular file extension.</span></span> <span data-ttu-id="eff19-341">Uchwyty dwóch rejestru zwracane jako `out` parametry przez system Windows [RegOpenKeyEx](http://msdn.microsoft.com/library/windows/desktop/ms724897.aspx) wywołania funkcji są przekazywane do <xref:Microsoft.Win32.SafeHandles.SafeRegistryHandle> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="eff19-341">The two registry handles returned as `out` parameters by Windows [RegOpenKeyEx](http://msdn.microsoft.com/library/windows/desktop/ms724897.aspx) function calls are passed to the <xref:Microsoft.Win32.SafeHandles.SafeRegistryHandle> constructor.</span></span> <span data-ttu-id="eff19-342">Typ obiektu chronione `Dispose` metoda wywołuje `SafeRegistryHandle.Dispose` metody zwolnienia tych dwóch uchwytów.</span><span class="sxs-lookup"><span data-stu-id="eff19-342">The type's protected `Dispose` method then calls the `SafeRegistryHandle.Dispose` method  to free these two handles.</span></span>  
  
 [!code-csharp[System.Object.Finalize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.finalize/cs/finalize_safe.cs#2)]
 [!code-vb[System.Object.Finalize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.finalize/vb/finalize_safe.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="eff19-343">Poniższy przykład sprawdza, czy <xref:System.Object.Finalize%2A> metoda jest wywoływana, gdy obiekt, który zastępuje <xref:System.Object.Finalize%2A> zostanie zniszczony.</span><span class="sxs-lookup"><span data-stu-id="eff19-343">The following example verifies that the <xref:System.Object.Finalize%2A> method is called when an object that overrides <xref:System.Object.Finalize%2A> is destroyed.</span></span> <span data-ttu-id="eff19-344">Należy zauważyć, że w aplikacji produkcyjnej <xref:System.Object.Finalize%2A> metody może zostać zastąpiona w celu Zwolnij niezarządzane zasoby zajmowane przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="eff19-344">Note that, in a production application, the <xref:System.Object.Finalize%2A> method would be overridden to release unmanaged resources held by the object.</span></span> <span data-ttu-id="eff19-345">Należy również zauważyć, że w C# przykładzie przedstawiono destruktora zamiast przesłaniać metodę <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-345">Also note that the C# example provides a destructor instead of overriding the <xref:System.Object.Finalize%2A> method.</span></span>  
  
 [!code-csharp[System.Object.Finalize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.finalize/cs/finalize1.cs#1)]
 [!code-vb[System.Object.Finalize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.finalize/vb/finalize1.vb#1)]  
  
 <span data-ttu-id="eff19-346">Przykład dodatkowe zastępujący <xref:System.Object.Finalize%2A> metody, zobacz <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-346">For an additional example that overrides the <xref:System.Object.Finalize%2A> method, see the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.GC.SuppressFinalize(System.Object)" />
        <altmember cref="M:System.GC.ReRegisterForFinalize(System.Object)" />
        <altmember cref="M:System.GC.WaitForPendingFinalizers" />
        <altmember cref="T:System.WeakReference" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Object.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eff19-347">Służy jako domyślnej funkcji skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-347">Serves as the default hash function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eff19-348">Kod skrótu bieżącego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-348">A hash code for the current object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff19-349">Wartość skrótu jest wartością numeryczną, który służy do wstawiania i zidentyfikować obiektu w kolekcji na podstawie wyznaczania wartości skrótu, takich jak <xref:System.Collections.Generic.Dictionary%602> klasy <xref:System.Collections.Hashtable> klasy lub typ pochodny typu <xref:System.Collections.DictionaryBase> klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-349">A hash code is a numeric value that is used to insert and identify an object in a hash-based collection such as the <xref:System.Collections.Generic.Dictionary%602> class, the <xref:System.Collections.Hashtable> class, or a type derived from the <xref:System.Collections.DictionaryBase> class.</span></span> <span data-ttu-id="eff19-350"><xref:System.Object.GetHashCode%2A> Metoda zapewnia tego skrótu algorytmy, które wymagają szybkiej kontroli równość obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-350">The <xref:System.Object.GetHashCode%2A> method provides this hash code for algorithms that need quick checks of object equality.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eff19-351">Informacje o jak skrótu są używane w tabelach skrótów oraz algorytmów kodu niektóre dodatkowe wyznaczania wartości skrótu, zobacz [funkcji skrótu](http://en.wikipedia.org/wiki/Hash_function) wpis w Wikipedia.</span><span class="sxs-lookup"><span data-stu-id="eff19-351">For information about how hash codes are used in hash tables and for some additional hash code algorithms, see the [Hash Function](http://en.wikipedia.org/wiki/Hash_function) entry in Wikipedia.</span></span>  
  
 <span data-ttu-id="eff19-352">Dwa obiekty, które są kody taki sam zwracany wyznaczania wartości skrótu, które są takie same.</span><span class="sxs-lookup"><span data-stu-id="eff19-352">Two objects that are equal return hash codes that are equal.</span></span> <span data-ttu-id="eff19-353">Jednak odwrotnej nie jest prawdziwe: równy skrótu nie zakłada równość obiektu, ponieważ inne obiekty (nierówne) może mieć identyczne skrótu.</span><span class="sxs-lookup"><span data-stu-id="eff19-353">However, the reverse is not true: equal hash codes do not imply object equality, because different (unequal) objects can have identical hash codes.</span></span> <span data-ttu-id="eff19-354">Ponadto, .NET Framework nie gwarantuje Domyślna implementacja <xref:System.Object.GetHashCode%2A> — metoda i wartość ta metoda zwraca może różnić się od wersji systemu .NET Framework i platformy, na przykład 32-bitowe i 64-bitowych platform.</span><span class="sxs-lookup"><span data-stu-id="eff19-354">Furthermore, the .NET Framework does not guarantee the default implementation of the <xref:System.Object.GetHashCode%2A> method, and the value this method returns may differ between .NET Framework versions and platforms, such as 32-bit and 64-bit platforms.</span></span> <span data-ttu-id="eff19-355">Z tego względu nie należy używać Domyślna implementacja tej metody jako identyfikator obiektu unikatowe potrzeby wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="eff19-355">For these reasons, do not use the default implementation of this method as a unique object identifier for hashing purposes.</span></span> <span data-ttu-id="eff19-356">Dwie konsekwencje i postępuj zgodnie z to:</span><span class="sxs-lookup"><span data-stu-id="eff19-356">Two consequences follow from this:</span></span>  
  
-   <span data-ttu-id="eff19-357">Nie należy zakładać, że takie same skrótu implikują równość obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-357">You should not assume that equal hash codes imply object equality.</span></span>  
  
-   <span data-ttu-id="eff19-358">Nigdy nie należy utrwalić lub użyj skrótu spoza domeny aplikacji, w której został utworzony, ponieważ ten sam obiekt może skrótów w domenach aplikacji, procesów i platform.</span><span class="sxs-lookup"><span data-stu-id="eff19-358">You should never persist or use a hash code outside the application domain in which it was created, because the same object may hash across application domains, processes, and platforms.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="eff19-359">Wartość skrótu jest przeznaczony do wstawienia wydajne i wyszukiwania w kolekcji, które są oparte na tablicy skrótów.</span><span class="sxs-lookup"><span data-stu-id="eff19-359">A hash code is intended for efficient insertion and lookup in collections that are based on a hash table.</span></span> <span data-ttu-id="eff19-360">Wartość skrótu nie jest wartością trwałych.</span><span class="sxs-lookup"><span data-stu-id="eff19-360">A hash code is not a permanent value.</span></span> <span data-ttu-id="eff19-361">Z tego powodu:</span><span class="sxs-lookup"><span data-stu-id="eff19-361">For this reason:</span></span>  
>   
>  -   <span data-ttu-id="eff19-362">Nie serializacji wartości skrótu kodu lub przechowywać je w bazach danych.</span><span class="sxs-lookup"><span data-stu-id="eff19-362">Do not serialize hash code values or store them in databases.</span></span>  
> -   <span data-ttu-id="eff19-363">Nie używaj skrótu klucza można pobrać obiektu z kluczem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eff19-363">Do not use the hash code as the key to retrieve an object from a keyed collection.</span></span>  
> -   <span data-ttu-id="eff19-364">Nie wysyłaj skrótu między domenami aplikacji lub procesów.</span><span class="sxs-lookup"><span data-stu-id="eff19-364">Do not send hash codes across application domains or processes.</span></span> <span data-ttu-id="eff19-365">W niektórych przypadkach skrótu może być obliczonych na podstawie domeny na proces lub określonych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eff19-365">In some cases, hash codes may be computed on a per-process or per-application domain basis.</span></span>  
> -   <span data-ttu-id="eff19-366">Nie należy używać skrótu zamiast wartości zwróconej przez kryptograficznych funkcji skrótu, jeśli potrzebujesz silną kryptograficznie wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="eff19-366">Do not use the hash code instead of a value returned by a cryptographic hashing function if you need a cryptographically strong hash.</span></span> <span data-ttu-id="eff19-367">Skróty kryptograficzne, można użyć klasy pochodzącej od <xref:System.Security.Cryptography.HashAlgorithm?displayProperty=nameWithType> lub <xref:System.Security.Cryptography.KeyedHashAlgorithm?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-367">For cryptographic hashes, use a class derived from the <xref:System.Security.Cryptography.HashAlgorithm?displayProperty=nameWithType> or <xref:System.Security.Cryptography.KeyedHashAlgorithm?displayProperty=nameWithType> class.</span></span>  
> -   <span data-ttu-id="eff19-368">Nie należy przeprowadzać testów równości skrótu, aby określić, czy dwa obiekty są takie same.</span><span class="sxs-lookup"><span data-stu-id="eff19-368">Do not test for equality of hash codes to determine whether two objects are equal.</span></span> <span data-ttu-id="eff19-369">(Nierówne obiekty mogą mieć identycznych skrótu). Aby przetestować pod kątem równości, należy wywołać <xref:System.Object.ReferenceEquals%2A> lub <xref:System.Object.Equals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-369">(Unequal objects can have identical hash codes.) To test for equality, call the <xref:System.Object.ReferenceEquals%2A> or <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="eff19-370"><xref:System.Object.GetHashCode%2A> Metody może zostać przesłonięta przez typu pochodnego.</span><span class="sxs-lookup"><span data-stu-id="eff19-370">The <xref:System.Object.GetHashCode%2A> method can be overridden by a derived type.</span></span> <span data-ttu-id="eff19-371">Jeśli <xref:System.Object.GetHashCode%2A> jest nie została zastąpiona, skrótu dla typów odwołań są obliczane przez wywołanie metody <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> na podstawie metody klasy podstawowej, który oblicza wartość skrótu dla odwołania do obiektu; Aby uzyskać więcej informacji, zobacz <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eff19-371">If <xref:System.Object.GetHashCode%2A> is not overridden, hash codes for reference types are computed by calling the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method of the base class, which computes a hash code based on an object's reference; for more information, see <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="eff19-372">Innymi słowy, dwóch obiektów, dla których <xref:System.Object.ReferenceEquals%2A> metoda zwraca `true` mają identyczne skrótu.</span><span class="sxs-lookup"><span data-stu-id="eff19-372">In other words, two objects for which the <xref:System.Object.ReferenceEquals%2A> method returns `true` have identical hash codes.</span></span> <span data-ttu-id="eff19-373">W przypadku typów wartości nie zastępują <xref:System.Object.GetHashCode%2A>, <xref:System.ValueType.GetHashCode%2A?displayProperty=nameWithType> metody klasy podstawowej używa odbicia można obliczyć skrótu na podstawie wartości pola typu.</span><span class="sxs-lookup"><span data-stu-id="eff19-373">If value types do not override <xref:System.Object.GetHashCode%2A>, the <xref:System.ValueType.GetHashCode%2A?displayProperty=nameWithType> method of the base class uses reflection to compute the hash code based on the values of the type's fields.</span></span> <span data-ttu-id="eff19-374">Innymi słowy typy wartości, których pola mają takie same wartości mają takie same skrótu.</span><span class="sxs-lookup"><span data-stu-id="eff19-374">In other words, value types whose fields have equal values have equal hash codes.</span></span> <span data-ttu-id="eff19-375">Aby uzyskać więcej informacji na temat zastępowania <xref:System.Object.GetHashCode%2A>, zobacz sekcję "Uwagi dotyczące dziedziczenia".</span><span class="sxs-lookup"><span data-stu-id="eff19-375">For more information about overriding <xref:System.Object.GetHashCode%2A>, see the "Notes to Inheritors" section.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="eff19-376">Jeśli można zastąpić <xref:System.Object.GetHashCode%2A> metody, należy również przesłonięcia <xref:System.Object.Equals%2A>i na odwrót.</span><span class="sxs-lookup"><span data-stu-id="eff19-376">If you override the <xref:System.Object.GetHashCode%2A> method, you should also override <xref:System.Object.Equals%2A>, and vice versa.</span></span> <span data-ttu-id="eff19-377">Jeśli Twoje przesłoniętych <xref:System.Object.Equals%2A> metoda zwraca `true` Jeśli dwa obiekty są sprawdzane pod kątem równości, Twoje zastąpiona <xref:System.Object.GetHashCode%2A> metoda musi zwracać taką samą wartość dla dwóch obiektów.</span><span class="sxs-lookup"><span data-stu-id="eff19-377">If your overridden <xref:System.Object.Equals%2A> method returns `true` when two objects are tested for equality, your overridden <xref:System.Object.GetHashCode%2A> method must return the same value for the two objects.</span></span>  
  
 <span data-ttu-id="eff19-378">Jeśli obiekt, który jest używany jako klucz w tablicy skrótów nie zapewnia implementacji przydatne <xref:System.Object.GetHashCode%2A>, można określić dostawcy kodu wyznaczania wartości skrótu, podając <xref:System.Collections.IEqualityComparer> implementacji do jednego z przeciążeń <xref:System.Collections.Hashtable> konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-378">If an object that is used as a key in a hash table does not provide a useful implementation of <xref:System.Object.GetHashCode%2A>, you can specify a hash code provider by supplying an <xref:System.Collections.IEqualityComparer> implementation to one of the overloads of the <xref:System.Collections.Hashtable> class constructor.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="eff19-379">Uwagi dla [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="eff19-379">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="eff19-380">Podczas wywoływania <xref:System.Object.GetHashCode%2A> metody w klasie w [!INCLUDE[wrt](~/includes/wrt-md.md)], zapewnia domyślne zachowanie dla klas, które nie zastępują <xref:System.Object.GetHashCode%2A>.</span><span class="sxs-lookup"><span data-stu-id="eff19-380">When you call the <xref:System.Object.GetHashCode%2A> method on a class in the [!INCLUDE[wrt](~/includes/wrt-md.md)], it provides the default behavior for classes that don’t override <xref:System.Object.GetHashCode%2A>.</span></span> <span data-ttu-id="eff19-381">To jest częścią programu .NET Framework zapewnia obsługę [!INCLUDE[wrt](~/includes/wrt-md.md)] (zobacz [.NET Framework obsługuje dla aplikacji ze Sklepu Windows i środowiska wykonawczego systemu Windows](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="eff19-381">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> <span data-ttu-id="eff19-382">Klasy w [!INCLUDE[wrt](~/includes/wrt-md.md)] nie dziedziczą <xref:System.Object>, a obecnie nie implementują <xref:System.Object.GetHashCode%2A>.</span><span class="sxs-lookup"><span data-stu-id="eff19-382">Classes in the [!INCLUDE[wrt](~/includes/wrt-md.md)] don’t inherit <xref:System.Object>, and currently don’t implement a <xref:System.Object.GetHashCode%2A>.</span></span> <span data-ttu-id="eff19-383">Jednak pojawią się one mieć <xref:System.Object.ToString%2A>, <xref:System.Object.Equals%28System.Object%29>, i <xref:System.Object.GetHashCode%2A> metody, gdy ich używać w kodzie C# lub Visual Basic i .NET Framework zapewnia domyślne zachowanie dla tych metod.</span><span class="sxs-lookup"><span data-stu-id="eff19-383">However, they appear to have <xref:System.Object.ToString%2A>, <xref:System.Object.Equals%28System.Object%29>, and <xref:System.Object.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[wrt](~/includes/wrt-md.md)]<span data-ttu-id="eff19-384"> klasy, które są napisane w języku C# lub Visual Basic można zastąpić <xref:System.Object.GetHashCode%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-384"> classes that are written in C# or Visual Basic can override the <xref:System.Object.GetHashCode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eff19-385">Jedną z najprostszych sposobów obliczyć wartość skrótu dla wartości liczbowej ma taką samą lub mniejszym zakresie niż <xref:System.Int32> typu jest po prostu zwraca tę wartość.</span><span class="sxs-lookup"><span data-stu-id="eff19-385">One of the simplest ways to compute a hash code for a numeric value that has the same or a smaller range than the <xref:System.Int32> type is to simply return that value.</span></span> <span data-ttu-id="eff19-386">Poniższy przykład przedstawia implementację dla `Number` struktury.</span><span class="sxs-lookup"><span data-stu-id="eff19-386">The following example shows such an implementation for a `Number` structure.</span></span>  
  
 [!code-csharp[System.Object.GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.gethashcode/cs/direct1.cs#1)]
 [!code-vb[System.Object.GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.gethashcode/vb/direct1.vb#1)]  
  
 <span data-ttu-id="eff19-387">Często typu ma wiele pól danych, które mogą należeć do generowania skrótu.</span><span class="sxs-lookup"><span data-stu-id="eff19-387">Frequently, a type has multiple data fields that can participate in generating the hash code.</span></span> <span data-ttu-id="eff19-388">Jednym ze sposobów generowania skrótu jest połączenie tych pól przy użyciu `XOR (eXclusive OR)` operacji, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="eff19-388">One way to generate a hash code is to combine these fields using an `XOR (eXclusive OR)` operation, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Object.GetHashCode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.gethashcode/cs/xor1.cs#2)]
 [!code-vb[System.Object.GetHashCode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.gethashcode/vb/xor1.vb#2)]  
  
 <span data-ttu-id="eff19-389">Poprzedni przykład zwraca taki sam skrót dla (n1, n2) i (n2 n1), a więc może generować kolizji więcej niż pożądane.</span><span class="sxs-lookup"><span data-stu-id="eff19-389">The previous example returns the same hash code for (n1, n2) and (n2, n1), and so may generate more collisions than are desirable.</span></span> <span data-ttu-id="eff19-390">Dostępnych jest kilka rozwiązań, umożliwiając skrótu w takich przypadkach nie są identyczne.</span><span class="sxs-lookup"><span data-stu-id="eff19-390">A number of solutions are available so that hash codes in these cases are not identical.</span></span> <span data-ttu-id="eff19-391">Co ma zwrócić skrótu `Tuple` obiektu, które odzwierciedla kolejność każdego pola.</span><span class="sxs-lookup"><span data-stu-id="eff19-391">One is to return the hash code of a `Tuple` object that reflects the order of each field.</span></span> <span data-ttu-id="eff19-392">W poniższym przykładzie przedstawiono możliwe implementację, która używa <xref:System.Tuple%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-392">The following example shows a possible implementation that uses the <xref:System.Tuple%602> class.</span></span> <span data-ttu-id="eff19-393">Należy pamiętać, że obciążenie związane z tworzenia wystąpienia `Tuple` obiekt może mieć znaczący wpływ na ogólną wydajność aplikacji, która przechowuje dużą liczbą obiektów w tabelach skrótów.</span><span class="sxs-lookup"><span data-stu-id="eff19-393">Note, though, that the performance overhead of instantiating a `Tuple` object may significantly impact the overall performance of an application that stores large numbers of objects in hash tables.</span></span>  
  
 [!code-csharp[System.Object.GetHashCode#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.gethashcode/cs/xor2.cs#3)]
 [!code-vb[System.Object.GetHashCode#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.gethashcode/vb/xor2.vb#3)]  
  
 <span data-ttu-id="eff19-394">Drugi rozwiązań alternatywnych obejmuje wagi poszczególnych skrótu przesuwając od lewej-skrótu kolejnych pól za pomocą liczby bitów dwóch lub więcej.</span><span class="sxs-lookup"><span data-stu-id="eff19-394">A second alternative solution involves weighting the individual hash codes by left-shifting the hash codes of successive fields by two or more bits.</span></span> <span data-ttu-id="eff19-395">Optymalnie zamiast zostanie odrzucony, bitów przesunięty poza bit 31 powinna być zawijana wokół zamiast odrzucone.</span><span class="sxs-lookup"><span data-stu-id="eff19-395">Optimally, instead of being discarded, bits shifted beyond bit 31 should wrap around rather than be discarded.</span></span> <span data-ttu-id="eff19-396">Ponieważ usługa bits są odrzucane przez operatory przesunięcia w lewo w języku C# i Visual Basic, to wymaga utworzenia po lewej stronie metody shift-wrap podobne do poniższych:</span><span class="sxs-lookup"><span data-stu-id="eff19-396">Since bits are discarded by the left-shift operators in both C# and Visual Basic, this requires creating a left shift-and-wrap method like the following:</span></span>  
  
 [!code-csharp[System.Object.GetHashCode#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.gethashcode/cs/shift1.cs#4)]
 [!code-vb[System.Object.GetHashCode#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.gethashcode/vb/shift1.vb#4)]  
  
 <span data-ttu-id="eff19-397">W poniższym przykładzie użyto następnie ta metoda shift-wrap można obliczyć skrótu `Point` struktury używane w poprzednich przykładach.</span><span class="sxs-lookup"><span data-stu-id="eff19-397">The following example then uses this shift-and-wrap method to compute the hash code of the `Point` structure used in the previous examples.</span></span>  
  
 [!code-csharp[System.Object.GetHashCode#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.gethashcode/cs/shift1.cs#5)]
 [!code-vb[System.Object.GetHashCode#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.gethashcode/vb/shift1.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="eff19-398">Funkcja wyznaczania wartości skrótu służy do szybkiego generowania liczby (skrótu), która odpowiada wartości obiektu.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eff19-398">A hash function is used to quickly generate a number (hash code) that corresponds to the value of an object.</span>
            </span>
            <span data-ttu-id="eff19-399">Funkcje skrótu są zazwyczaj specyficzne dla poszczególnych typów i unikatowość, należy użyć co najmniej jednego pola wystąpienia jako dane wejściowe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eff19-399">Hash functions are usually specific to each type and, for uniqueness, must use at least one of the instance fields as input.</span>
            </span>
            <span data-ttu-id="eff19-400">Kody skrótów powinien nie można obliczyć przy użyciu wartości pól statycznych.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eff19-400">Hash codes should not be computed by using the values of static fields.</span>
            </span>
            <span data-ttu-id="eff19-401">Dla klas pochodnych <see cref="T:System.Object" />, <see langword="GetHashCode" /> delegować metody do klasy podstawowej <see cref="M:System.Object.GetHashCode" /> implementacji tylko wtedy, gdy klasa pochodna definiuje równości być równości odwołań.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eff19-401">For classes derived from <see cref="T:System.Object" />, the <see langword="GetHashCode" /> method can delegate to the base class <see cref="M:System.Object.GetHashCode" /> implementation only if the derived class defines equality to be reference equality.</span>
            </span>
            <span data-ttu-id="eff19-402">Domyślna implementacja <see cref="M:System.Object.GetHashCode" /> dla odwołania do typów zwraca wartość skrótu odpowiada jednej zwrócony przez <see cref="M:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(System.Object)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eff19-402">The default implementation of <see cref="M:System.Object.GetHashCode" /> for reference types returns a hash code that is equivalent to the one returned by the <see cref="M:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(System.Object)" /> method.</span>
            </span>
            <span data-ttu-id="eff19-403">Można zastąpić <see cref="M:System.Object.GetHashCode" /> dla typów odwołań niezmienialny.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eff19-403">You can override <see cref="M:System.Object.GetHashCode" /> for immutable reference types.</span>
            </span>
            <span data-ttu-id="eff19-404">Ogólnie rzecz biorąc, dla typów referencyjnych powinny zastępować <see cref="M:System.Object.GetHashCode" /> tylko wtedy, gdy:</span>
            <span class="sxs-lookup">
              <span data-stu-id="eff19-404">In general, for mutable reference types, you should override <see cref="M:System.Object.GetHashCode" /> only if:</span>
            </span>  
  
-   <span data-ttu-id="eff19-405">Można obliczyć skrótu z pól, które nie są modyfikowalną; lub</span><span class="sxs-lookup"><span data-stu-id="eff19-405">You can compute the hash code from fields that are not mutable; or</span></span>  
  
-   <span data-ttu-id="eff19-406">Można zapewnić wartość skrótu obiektu modyfikowalnego nie ulega zmianie podczas, gdy obiekt jest zawarty w kolekcji, która zależy od jego skrótu.</span><span class="sxs-lookup"><span data-stu-id="eff19-406">You can ensure that the hash code of a mutable object does not change while the object is contained in a collection that relies on its hash code.</span></span><span data-ttu-id="eff19-407">W przeciwnym razie podejrzenie, że obiektu modyfikowalnego zostaną utracone w tablicy skrótów.</span><span class="sxs-lookup"><span data-stu-id="eff19-407">Otherwise, you might think that the mutable object is lost in the hash table.</span></span><span data-ttu-id="eff19-408">Jeśli chcesz przesłonić <see cref="M:System.Object.GetHashCode" /> dla modyfikowalnego typu referencyjnego, z dokumentacją powinien stał się że użytkownicy tego typu nie należy modyfikować wartości obiektu, gdy obiekt jest przechowywany w tablicy skrótów.</span><span class="sxs-lookup"><span data-stu-id="eff19-408">If you do choose to override <see cref="M:System.Object.GetHashCode" /> for a mutable reference type, your documentation should make it clear that users of your type should not modify object values while the object is stored in a hash table.</span></span><span data-ttu-id="eff19-409">Dla typów wartości <see cref="M:System.ValueType.GetHashCode" /> udostępnia domyślną implementację kodu skrótu używa odbicia.</span><span class="sxs-lookup"><span data-stu-id="eff19-409">For value types, <see cref="M:System.ValueType.GetHashCode" /> provides a default hash code implementation that uses reflection.</span></span><span data-ttu-id="eff19-410">Należy rozważyć przesłanianie go w celu zapewnienia lepszej wydajności.</span><span class="sxs-lookup"><span data-stu-id="eff19-410">You should consider overriding it for better performance.</span></span><block subset="none" type="note"><para><span data-ttu-id="eff19-411">Aby uzyskać dodatkowe informacje i przykłady, które służą do obliczania skrótu na różne sposoby zobacz sekcję przykłady.</span><span class="sxs-lookup"><span data-stu-id="eff19-411">For more information and examples that compute hash codes in a variety of ways, see the Examples section.</span></span></para></block><span data-ttu-id="eff19-412">Funkcja wyznaczania wartości skrótu musi mieć następujące właściwości:</span><span class="sxs-lookup"><span data-stu-id="eff19-412">A hash function must have the following properties:</span></span>  
  
-   <span data-ttu-id="eff19-413">Jeśli dwa obiekty porównania jako równe, <see cref="M:System.Object.GetHashCode" /> metody dla każdego obiektu musi zwracać taką samą wartość.</span><span class="sxs-lookup"><span data-stu-id="eff19-413">If two objects compare as equal, the <see cref="M:System.Object.GetHashCode" /> method for each object must return the same value.</span></span><span data-ttu-id="eff19-414">Jednakże, jeśli dwa obiekty porównuje jako równe, <see cref="M:System.Object.GetHashCode" /> metody dwa obiekty nie należy zwracać różne wartości.</span><span class="sxs-lookup"><span data-stu-id="eff19-414">However, if two objects do not compare as equal, the <see cref="M:System.Object.GetHashCode" /> methods for the two objects do not have to return different values.</span></span>  
  
-   <span data-ttu-id="eff19-415"><see cref="M:System.Object.GetHashCode" /> Metodę dla obiekt spójnie musi zwracać taki sam skrótu tak długo, jak żadnych zmian do stanu obiektu, który określa wartość zwracaną obiektu nie istnieje [element System.Object.Equals](xref:System.Object.Equals*) metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-415">The <see cref="M:System.Object.GetHashCode" /> method for an object must consistently return the same hash code as long as there is no modification to the object state that determines the return value of the object's [System.Object.Equals](xref:System.Object.Equals*) method.</span></span><span data-ttu-id="eff19-416">Należy pamiętać, że jest to wartość true tylko w przypadku wykonywania bieżącej aplikacji i że różnych skrótu może być zwracany, jeśli aplikacja jest uruchamiana ponownie.</span><span class="sxs-lookup"><span data-stu-id="eff19-416">Note that this is true only for the current execution of an application, and that a different hash code can be returned if the application is run again.</span></span>  
  
-   <span data-ttu-id="eff19-417">Aby uzyskać najlepszą wydajność funkcji skrótu powinna generować nawet dystrybucji dla wszystkich danych wejściowych, w tym danych wejściowych silnie jest klastrowany.</span><span class="sxs-lookup"><span data-stu-id="eff19-417">For the best performance, a hash function should generate an even distribution for all input, including input that is heavily clustered.</span></span><span data-ttu-id="eff19-418">Możliwa jest mała zmiany stanu obiektu powinno spowodować duże modyfikacje wynikowy skrótu najlepszą wydajność tabeli skrótów.</span><span class="sxs-lookup"><span data-stu-id="eff19-418">An implication is that small modifications to object state should result in large modifications to the resulting hash code for best hash table performance.</span></span>  
  
-   <span data-ttu-id="eff19-419">Funkcje skrótu powinny być tanie do obliczenia.</span><span class="sxs-lookup"><span data-stu-id="eff19-419">Hash functions should be inexpensive to compute.</span></span>  
  
-   <span data-ttu-id="eff19-420"><see cref="M:System.Object.GetHashCode" /> — Metoda nie powinny zgłaszać wyjątków.</span><span class="sxs-lookup"><span data-stu-id="eff19-420">The <see cref="M:System.Object.GetHashCode" /> method should not throw exceptions.</span></span><span data-ttu-id="eff19-421">Na przykład stosowania <see cref="M:System.String.GetHashCode" /> metody dostarczone przez <see cref="T:System.String" /> Klasa zwraca kodów skrótów identyczne wartości identycznych ciągów.</span><span class="sxs-lookup"><span data-stu-id="eff19-421">For example, the implementation of the <see cref="M:System.String.GetHashCode" /> method provided by the <see cref="T:System.String" /> class returns identical hash codes for identical string values.</span></span><span data-ttu-id="eff19-422">W związku z tym dwóch <see cref="T:System.String" /> obiektów zwracać taki sam skrót, jeśli reprezentują one taką samą wartość ciągu.</span><span class="sxs-lookup"><span data-stu-id="eff19-422">Therefore, two <see cref="T:System.String" /> objects return the same hash code if they represent the same string value.</span></span><span data-ttu-id="eff19-423">Ponadto metoda używa do wszystkich znaków w ciągu Generowanie rozsądnych losowo rozproszonej dane wyjściowe, nawet wtedy, gdy dane wejściowe jest klastrowany w określonych zakresach (na przykład w przypadku wielu użytkowników może być ciągi, które zawierają tylko niższe 128 znaków ASCII, mimo że ciąg może zawierać znaków Unicode 65 535).</span><span class="sxs-lookup"><span data-stu-id="eff19-423">Also, the method uses all the characters in the string to generate reasonably randomly distributed output, even when the input is clustered in certain ranges (for example, many users might have strings that contain only the lower 128 ASCII characters, even though a string can contain any of the 65,535 Unicode characters).</span></span><span data-ttu-id="eff19-424">Zapewnianie funkcji skrótu dobrej klasy mogą znacznie wpłynąć na wydajność dodanie tych obiektów do tablicy skrótów.</span><span class="sxs-lookup"><span data-stu-id="eff19-424">Providing a good hash function on a class can significantly affect the performance of adding those objects to a hash table.</span></span><span data-ttu-id="eff19-425">W tablicy skrótów z kluczami, które zapewniają dobrą stosowania funkcji skrótu Wyszukiwanie elementu czas stałych (na przykład operacji O(1)).</span><span class="sxs-lookup"><span data-stu-id="eff19-425">In a hash table with keys that provide a good implementation of a hash function, searching for an element takes constant time (for example, an O(1) operation).</span></span><span data-ttu-id="eff19-426">W tablicy skrótów niską implementacji funkcji skrótu, wydajność wyszukiwania zależy od liczby elementów w tablicy skrótów (na przykład O (`n`) operację, której `n` jest liczba elementów w tablicy skrótów).</span><span class="sxs-lookup"><span data-stu-id="eff19-426">In a hash table with a poor implementation of a hash function, the performance of a search depends on the number of items in the hash table (for example, an O(`n`) operation, where `n` is the number of items in the hash table).</span></span><span data-ttu-id="eff19-427">Złośliwy użytkownik może wprowadzić dane, które zwiększa liczbę konfliktów, które mogłoby znacznie pogorszyć wydajność aplikacji, które są zależne od tabelach skrótów, w następujących warunkach:</span><span class="sxs-lookup"><span data-stu-id="eff19-427">A malicious user can input data that increases the number of collisions, which can significantly degrade the performance of applications that depend on hash tables, under the following conditions:</span></span>  
  
-   <span data-ttu-id="eff19-428">Gdy funkcje skrótu utworzyć częste kolizji.</span><span class="sxs-lookup"><span data-stu-id="eff19-428">When hash functions produce frequent collisions.</span></span>  
  
-   <span data-ttu-id="eff19-429">Gdy duża część obiektów w tablicy skrótów utworzyć skrótu, które są takie same lub równy około ze sobą.</span><span class="sxs-lookup"><span data-stu-id="eff19-429">When a large proportion of objects in a hash table produce hash codes that are equal or approximately equal to one another.</span></span>  
  
-   <span data-ttu-id="eff19-430">Gdy użytkownicy wprowadzania danych, z którego jest obliczana wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="eff19-430">When users input the data from which the hash code is computed.</span></span><span data-ttu-id="eff19-431">Klasy, które zastępują pochodne <see cref="M:System.Object.GetHashCode" /> musi także zastępować metodę <see cref="M:System.Object.Equals(System.Object)" /> aby zagwarantować, że dwa obiekty traktowane jako równe mają taki sam skrót; w przeciwnym razie <see cref="T:System.Collections.Hashtable" /> typu może nie działać poprawnie.</span><span class="sxs-lookup"><span data-stu-id="eff19-431">Derived classes that override <see cref="M:System.Object.GetHashCode" /> must also override <see cref="M:System.Object.Equals(System.Object)" /> to guarantee that two objects considered equal have the same hash code; otherwise, the <see cref="T:System.Collections.Hashtable" /> type might not work correctly.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Object.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eff19-432">Pobiera <see cref="T:System.Type" /> bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-432">Gets the <see cref="T:System.Type" /> of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eff19-433">Typ środowiska uruchomieniowego dokładne bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-433">The exact runtime type of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff19-434">Ponieważ <xref:System.Object?displayProperty=nameWithType> jest klasą bazową dla wszystkich typów w systemie typów .NET Framework, <xref:System.Object.GetType%2A> metody można użyć do zwrócenia <xref:System.Type> obiektów, które reprezentują wszystkie typy .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="eff19-434">Because <xref:System.Object?displayProperty=nameWithType> is the base class for all types in the .NET Framework type system, the <xref:System.Object.GetType%2A> method can be used to return <xref:System.Type> objects that represent all .NET Framework types.</span></span> <span data-ttu-id="eff19-435">.NET Framework rozpoznaje następujących kategorii pięć typów:</span><span class="sxs-lookup"><span data-stu-id="eff19-435">The .NET Framework recognizes the following five categories of types:</span></span>  
  
-   <span data-ttu-id="eff19-436">Klasy, które są pochodnymi <xref:System.Object?displayProperty=nameWithType>,</span><span class="sxs-lookup"><span data-stu-id="eff19-436">Classes, which are derived from <xref:System.Object?displayProperty=nameWithType>,</span></span>  
  
-   <span data-ttu-id="eff19-437">Typy, które pochodzą z wartości <xref:System.ValueType?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eff19-437">Value types, which are derived from <xref:System.ValueType?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="eff19-438">Interfejsy, które są pochodnymi <xref:System.Object?displayProperty=nameWithType> w programie .NET Framework 2.0.</span><span class="sxs-lookup"><span data-stu-id="eff19-438">Interfaces, which are derived from <xref:System.Object?displayProperty=nameWithType> starting with the .NET Framework 2.0.</span></span>  
  
-   <span data-ttu-id="eff19-439">Wyliczenia, które są pochodnymi <xref:System.Enum?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eff19-439">Enumerations, which are derived from <xref:System.Enum?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="eff19-440">Delegatów, które są pochodnymi <xref:System.MulticastDelegate?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eff19-440">Delegates, which are derived from <xref:System.MulticastDelegate?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eff19-441">Dla dwóch obiektów `x` i `y` zawierających typy identyczne środowisko uruchomieniowe `Object.ReferenceEquals(x.GetType(),y.GetType())` zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="eff19-441">For two objects `x` and `y` that have identical runtime types, `Object.ReferenceEquals(x.GetType(),y.GetType())` returns `true`.</span></span> <span data-ttu-id="eff19-442">W poniższym przykładzie użyto <xref:System.Object.GetType%2A> metody z <xref:System.Object.ReferenceEquals%2A> metodę, aby określić, czy jedną wartość liczbowa jest taki sam typ jak dwóch wartości liczbowych.</span><span class="sxs-lookup"><span data-stu-id="eff19-442">The following example uses the <xref:System.Object.GetType%2A> method with the <xref:System.Object.ReferenceEquals%2A> method to determine whether one numeric value is the same type as two other numeric values.</span></span>  
  
 [!code-csharp[System.Object.GetType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.gettype/cs/gettype1.cs#1)]
 [!code-vb[System.Object.GetType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.gettype/vb/gettype1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="eff19-443">Aby ustalić, czy obiekt jest określonego typu, można użyć słowa kluczowego porównania typu swój język lub utworzenia.</span><span class="sxs-lookup"><span data-stu-id="eff19-443">To determine whether an object is a specific type, you can use your language's type comparison keyword or construct.</span></span> <span data-ttu-id="eff19-444">Na przykład można użyć `TypeOf…Is` utworzyć w języku Visual Basic lub `is` — słowo kluczowe języka C#.</span><span class="sxs-lookup"><span data-stu-id="eff19-444">For example, you can use the `TypeOf…Is` construct in Visual Basic or the `is` keyword in C#.</span></span>  
  
 <span data-ttu-id="eff19-445"><xref:System.Object.GetType%2A> Metody jest dziedziczona przez wszystkie typy, które pochodzą z <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="eff19-445">The <xref:System.Object.GetType%2A> method is inherited by all types that derive from <xref:System.Object>.</span></span> <span data-ttu-id="eff19-446">Oznacza to, że oprócz za pomocą słowa kluczowego porównania własnym języku, możesz użyć <xref:System.Object.GetType%2A> metodę, aby określić typ określonego obiektu, jak przedstawiono na poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="eff19-446">This means that, in addition to using your own language's comparison keyword, you can use the <xref:System.Object.GetType%2A> method to determine the type of a particular object, as the following example shows.</span></span>  
  
 [!code-csharp[System.Object.GetType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.gettype/cs/GetTypeEx2.cs#2)]
 [!code-vb[System.Object.GetType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.gettype/vb/GetTypeEx2.vb#2)]  
  
 <span data-ttu-id="eff19-447"><xref:System.Type> Obiekt udostępnia metadane skojarzone z klasą bieżącego <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="eff19-447">The <xref:System.Type> object exposes the metadata associated with the class of the current <xref:System.Object>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eff19-448">Poniższy przykład kodu pokazuje, że <xref:System.Object.GetType%2A> zwraca typ środowiska uruchomieniowego bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="eff19-448">The following code example demonstrates that <xref:System.Object.GetType%2A> returns the runtime type of the current instance.</span></span>  
  
 [!code-cpp[ECMA-System.Object.GetType#1](~/samples/snippets/cpp/VS_Snippets_CLR/ECMA-System.Object.GetType/CPP/gettype.cpp#1)]
 [!code-csharp[ECMA-System.Object.GetType#1](~/samples/snippets/csharp/VS_Snippets_CLR/ECMA-System.Object.GetType/CS/gettype.cs#1)]
 [!code-vb[ECMA-System.Object.GetType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ECMA-System.Object.GetType/VB/gettype.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="MemberwiseClone">
      <MemberSignature Language="C#" Value="protected object MemberwiseClone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object MemberwiseClone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Object.MemberwiseClone" />
      <MemberSignature Language="VB.NET" Value="Protected Function MemberwiseClone () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ MemberwiseClone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eff19-449">Tworzy kopię pobieżną bieżącego <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-449">Creates a shallow copy of the current <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eff19-450">Skrócona kopię bieżącego <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-450">A shallow copy of the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff19-451"><xref:System.Object.MemberwiseClone%2A> Metoda tworzy kopię pobieżną przez utworzenie nowego obiektu, a następnie skopiować niestatycznego pola z bieżącego obiektu do nowego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-451">The <xref:System.Object.MemberwiseClone%2A> method creates a shallow copy by creating a new object, and then copying the nonstatic fields of the current object to the new object.</span></span> <span data-ttu-id="eff19-452">Jeśli pole jest typu wartości, jest wykonywane kopii bitowej przez bitowej pola.</span><span class="sxs-lookup"><span data-stu-id="eff19-452">If a field is a value type, a bit-by-bit copy of the field is performed.</span></span> <span data-ttu-id="eff19-453">Jeśli pole jest typem referencyjnym, odwołanie jest kopiowana, ale określony obiekt jest; w związku z tym oryginalny obiekt i jego klon odwoływać się do tego samego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-453">If a field is a reference type, the reference is copied but the referred object is not; therefore, the original object and its clone refer to the same object.</span></span>  
  
 <span data-ttu-id="eff19-454">Rozważmy na przykład obiekt o nazwie X, który z kolei odwołuje się obiekty A i B. obiektu B, obiekt odwołania C. Kopia pobieżna wartości X tworzy nowy obiekt X2 również odwołujących się do obiektów, A i B. Z kolei głęboką kopię X tworzy nowy obiekt X2, który odwołuje się do nowych obiektów A2 i B2, które są kopiami A i B. B2, z kolei odwołuje się do nowego obiektu C2, który jest kopią C. Różnica między małym i operacji kopiowania głębokie pokazano w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="eff19-454">For example, consider an object called X that references objects A and B. Object B, in turn, references object C. A shallow copy of X creates new object X2 that also references objects A and B. In contrast, a deep copy of X creates a new object X2 that references the new objects A2 and B2, which are copies of A and B. B2, in turn, references the new object C2, which is a copy of C. The example illustrates the difference between a shallow and a deep copy operation.</span></span>  
  
 <span data-ttu-id="eff19-455">Istnieje wiele sposobów implementuje operacji kopiowania głębokie, jeśli operacja kopiowania skrócona wykonywane przez <xref:System.Object.MemberwiseClone%2A> metody odpowiada Twoim potrzebom.</span><span class="sxs-lookup"><span data-stu-id="eff19-455">There are numerous ways to implement a deep copy operation if the shallow copy operation performed by the <xref:System.Object.MemberwiseClone%2A> method does not meet your needs.</span></span> <span data-ttu-id="eff19-456">Należą do nich między innymi:</span><span class="sxs-lookup"><span data-stu-id="eff19-456">These include the following:</span></span>  
  
-   <span data-ttu-id="eff19-457">Wywołanie konstruktora klasy obiektu, który ma zostać skopiowany na utworzyć drugi obiekt z wartościami właściwości pobierane z pierwszego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-457">Call a class constructor of the object to be copied to create a second object with property values taken from the first object.</span></span> <span data-ttu-id="eff19-458">Przy założeniu, że wartości obiektu są całkowicie zdefiniowane przez jego konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-458">This assumes that the values of an object are entirely defined by its class constructor.</span></span>  
  
-   <span data-ttu-id="eff19-459">Wywołanie <xref:System.Object.MemberwiseClone%2A> metodę, aby utworzyć kopię pobieżną obiektu, a następnie przypisz nowe obiekty, których wartości są takie same jak oryginalne obiektu właściwości lub pól, których wartości są typy referencyjne.</span><span class="sxs-lookup"><span data-stu-id="eff19-459">Call the <xref:System.Object.MemberwiseClone%2A> method to create a shallow copy of an object, and then assign new objects whose values are the same as the original object to any properties or fields whose values are reference types.</span></span> <span data-ttu-id="eff19-460">`DeepCopy` Metody w tym przykładzie przedstawiono tej metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-460">The `DeepCopy` method in the example illustrates this approach.</span></span>  
  
-   <span data-ttu-id="eff19-461">Serializacji obiektu za głębokie skopiowane, a następnie przywróć dane serializowane zmiennej innego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-461">Serialize the object to be deep copied, and then restore the serialized data to a different object variable.</span></span>  
  
-   <span data-ttu-id="eff19-462">Za pomocą odbicia rekursji do wykonania tej operacji kopiowania bezpośrednich.</span><span class="sxs-lookup"><span data-stu-id="eff19-462">Use reflection with recursion to perform the deep copy operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eff19-463">Poniższy przykład przedstawia <xref:System.Object.MemberwiseClone%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-463">The following example illustrates the <xref:System.Object.MemberwiseClone%2A> method.</span></span> <span data-ttu-id="eff19-464">Definiuje `ShallowCopy` — metoda, która wywołuje <xref:System.Object.MemberwiseClone%2A> metody podczas operacji kopiowania skrócona `Person` obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-464">It defines a `ShallowCopy` method that calls the <xref:System.Object.MemberwiseClone%2A> method to perform a shallow copy operation on a `Person` object.</span></span> <span data-ttu-id="eff19-465">Definiuje również `DeepCopy` metodę, która wykonuje operację kopiowania głębokie na `Person` obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-465">It also defines a `DeepCopy` method that performs a deep copy operation on a `Person` object.</span></span>  
  
 [!code-csharp[System.Object.MemberwiseClone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.memberwiseclone/cs/memberwiseclone1.cs#1)]
 [!code-vb[System.Object.MemberwiseClone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.memberwiseclone/vb/memberwiseclone1.vb#1)]  
  
 <span data-ttu-id="eff19-466">W tym przykładzie `Person.IdInfo` zwraca właściwość `IdInfo` obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-466">In this example, the `Person.IdInfo` property returns an `IdInfo` object.</span></span> <span data-ttu-id="eff19-467">Jako dane wyjściowe w przykładzie pokazano gdy `Person` obiekt został sklonowany, wywołując <xref:System.Object.MemberwiseClone%2A> metoda, sklonowany `Person` obiekt jest niezależna kopia oryginalnego obiektu, z wyjątkiem tego, aby miały taki sam `Person.IdInfo` obiektu odwołania.</span><span class="sxs-lookup"><span data-stu-id="eff19-467">As the output from the example shows, when a `Person` object is cloned by calling the <xref:System.Object.MemberwiseClone%2A> method, the cloned `Person` object is an independent copy of the original object, except that they share the same `Person.IdInfo` object reference.</span></span> <span data-ttu-id="eff19-468">W związku z tym modyfikowanie klonu `Person.IdInfo` zmiany właściwości obiektu oryginalnego `Person.IdInfo` właściwości.</span><span class="sxs-lookup"><span data-stu-id="eff19-468">As a result, modifying the clone's `Person.IdInfo` property changes the original object's `Person.IdInfo` property.</span></span> <span data-ttu-id="eff19-469">Z drugiej strony, podczas operacji kopiowania głębokie jest wykonywana, sklonowany `Person` obiektu, łącznie z jej `Person.IdInfo` właściwość, może być modyfikowana bez wpływu na oryginalny obiekt.</span><span class="sxs-lookup"><span data-stu-id="eff19-469">On the other hand, when a deep copy operation is performed, the cloned `Person` object, including its `Person.IdInfo` property, can be modified without affecting the original object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceEquals">
      <MemberSignature Language="C#" Value="public static bool ReferenceEquals (object objA, object objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ReferenceEquals(object objA, object objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Object.ReferenceEquals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceEquals (objA As Object, objB As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ReferenceEquals(System::Object ^ objA, System::Object ^ objB);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objA">
          <span data-ttu-id="eff19-470">Pierwszy obiekt, który ma zostać porównany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-470">The first object to compare.</span>
          </span>
        </param>
        <param name="objB">
          <span data-ttu-id="eff19-471">Drugi obiekt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-471">The second object  to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eff19-472">Określa, czy określony <see cref="T:System.Object" /> wystąpienia są tego samego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-472">Determines whether the specified <see cref="T:System.Object" /> instances are the same instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eff19-473">
            <see langword="true" /> Jeśli <paramref name="objA" /> jest tym samym wystąpieniu jako <paramref name="objB" /> lub obu **null**; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-473">
              <see langword="true" /> if <paramref name="objA" /> is the same instance as <paramref name="objB" /> or if both are **null**; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff19-474">W odróżnieniu od <xref:System.Object.Equals%2A> — metoda i operator równości <xref:System.Object.ReferenceEquals%2A> metoda nie może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="eff19-474">Unlike the <xref:System.Object.Equals%2A> method and the equality operator, the <xref:System.Object.ReferenceEquals%2A> method cannot be overridden.</span></span> <span data-ttu-id="eff19-475">W związku z tym, jeśli chcesz przetestować dwa obiektu odwołania równości i nie wiesz o implementacji `Equals` metody należy wywołać <xref:System.Object.ReferenceEquals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-475">Because of this, if you want to test two object references for equality and you are unsure about the implementation of the `Equals` method, you can call the <xref:System.Object.ReferenceEquals%2A> method.</span></span>  
  
 <span data-ttu-id="eff19-476">Jednak wartość zwracaną <xref:System.Object.ReferenceEquals%2A> metoda może być wyświetlana nietypowych w tych dwóch scenariuszy:</span><span class="sxs-lookup"><span data-stu-id="eff19-476">However, the return value of the <xref:System.Object.ReferenceEquals%2A> method may appear to be anomalous in these two scenarios:</span></span>  
  
-   <span data-ttu-id="eff19-477">Podczas porównywania typów wartości.</span><span class="sxs-lookup"><span data-stu-id="eff19-477">When comparing value types.</span></span> <span data-ttu-id="eff19-478">Jeśli `objA` i `objB` są typy wartości, są one opakowany przed ich do <xref:System.Object.ReferenceEquals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-478">If `objA` and `objB` are value types, they are boxed before they are passed to the <xref:System.Object.ReferenceEquals%2A> method.</span></span> <span data-ttu-id="eff19-479">Oznacza to, że jeśli obie `objA` i `objB` reprezentują tego samego wystąpienia typu wartości <xref:System.Object.ReferenceEquals%2A> metoda niemniej zwraca `false`, jak pokazano na poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="eff19-479">This means that if both `objA` and `objB` represent the same instance of a value type, the <xref:System.Object.ReferenceEquals%2A> method nevertheless returns `false`, as the following example shows.</span></span>  
  
     [!code-csharp[System.Object.ReferenceEquals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.referenceequals/cs/referenceequals4.cs#1)]
     [!code-vb[System.Object.ReferenceEquals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.referenceequals/vb/referenceequals4.vb#1)]  
  
     <span data-ttu-id="eff19-480">Informacje o typach wartości pakującej, zobacz [opakowywanie i rozpakowywanie](~/docs/csharp/programming-guide/types/boxing-and-unboxing.md).</span><span class="sxs-lookup"><span data-stu-id="eff19-480">For information on boxing value types, see [Boxing and Unboxing](~/docs/csharp/programming-guide/types/boxing-and-unboxing.md).</span></span>  
  
-   <span data-ttu-id="eff19-481">Podczas porównywania ciągów.</span><span class="sxs-lookup"><span data-stu-id="eff19-481">When comparing strings.</span></span> <span data-ttu-id="eff19-482">Jeśli `objA` i `objB` są ciągami, <xref:System.Object.ReferenceEquals%2A> metoda zwraca `true` Jeśli ciąg jest interned.</span><span class="sxs-lookup"><span data-stu-id="eff19-482">If `objA` and `objB` are strings, the <xref:System.Object.ReferenceEquals%2A> method returns `true` if the string is interned.</span></span> <span data-ttu-id="eff19-483">Nie wykonuje testu równości wartości.</span><span class="sxs-lookup"><span data-stu-id="eff19-483">It does not perform a test for value equality.</span></span>  <span data-ttu-id="eff19-484">W poniższym przykładzie `s1` i `s2` są takie same, ponieważ są one dwa wystąpienia jednego ciągu interned.</span><span class="sxs-lookup"><span data-stu-id="eff19-484">In the following example, `s1` and `s2` are equal because they are two instances of a single interned string.</span></span> <span data-ttu-id="eff19-485">Jednak `s3` i `s4` nie są takie same, ponieważ mimo że mają identyczne ciągami, ten ciąg jest nie interned.</span><span class="sxs-lookup"><span data-stu-id="eff19-485">However, `s3` and `s4` are not equal, because although they are have identical string values, that string is not interned.</span></span>  
  
     [!code-csharp[System.Object.ReferenceEquals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.referenceequals/cs/referenceequalsa.cs#2)]
     [!code-vb[System.Object.ReferenceEquals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.referenceequals/vb/referenceequalsa.vb#2)]  
  
     <span data-ttu-id="eff19-486">Aby uzyskać więcej informacji o ciągu interning, zobacz <xref:System.String.IsInterned%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eff19-486">For more information about string interning, see <xref:System.String.IsInterned%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eff19-487">W poniższym przykładzie użyto <xref:System.Object.ReferenceEquals%2A> do ustalenia, czy dwa obiekty są tego samego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="eff19-487">The following example uses <xref:System.Object.ReferenceEquals%2A> to determine if two objects are the same instance.</span></span>  
  
 [!code-cpp[ECMA-System.Object.ReferenceEquals#1](~/samples/snippets/cpp/VS_Snippets_CLR/ECMA-System.Object.ReferenceEquals/CPP/referenceequals.cpp#1)]
 [!code-csharp[ECMA-System.Object.ReferenceEquals#1](~/samples/snippets/csharp/VS_Snippets_CLR/ECMA-System.Object.ReferenceEquals/CS/referenceequals.cs#1)]
 [!code-vb[ECMA-System.Object.ReferenceEquals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ECMA-System.Object.ReferenceEquals/vb/referenceequals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public virtual string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Object.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eff19-488">Zwraca ciąg, który reprezentuje bieżący obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-488">Returns a string that represents the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eff19-489">Ciąg, który reprezentuje bieżący obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eff19-489">A string that represents the current object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff19-490"><xref:System.Object.ToString%2A?displayProperty=nameWithType> głównych formatuje metody w programie .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="eff19-490"><xref:System.Object.ToString%2A?displayProperty=nameWithType> is the major formatting method in the .NET Framework.</span></span> <span data-ttu-id="eff19-491">Konwertuje obiekt do reprezentacji ciągu tak, aby odpowiednie do wyświetlenia.</span><span class="sxs-lookup"><span data-stu-id="eff19-491">It converts an object to its string representation so that it is suitable for display.</span></span> <span data-ttu-id="eff19-492">(Informacje na temat formatowania pomocy technicznej w programie .NET Framework, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md).) Domyślne implementacje <xref:System.Object.ToString%2A?displayProperty=nameWithType> metoda zwraca w pełni kwalifikowana nazwa typu obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-492">(For information about formatting support in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).) Default implementations of the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method return the fully qualified name of the object's type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eff19-493">Osiągnięto tej strony, klikając łącze z listy elementów członkowskich innego typu.</span><span class="sxs-lookup"><span data-stu-id="eff19-493">You may have reached this page by following the link from the member list of another type.</span></span> <span data-ttu-id="eff19-494">Wynika to z tego typu nie przesłania <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eff19-494">That is because that type does not override <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="eff19-495">Zamiast tego dziedziczy funkcjonalność <xref:System.Object.ToString%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-495">Instead, it inherits the functionality of the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="eff19-496">Typy często przesłaniać <xref:System.Object.ToString%2A?displayProperty=nameWithType> metodę w celu zapewnienia bardziej odpowiednie reprezentację ciągu określonego typu.</span><span class="sxs-lookup"><span data-stu-id="eff19-496">Types frequently override the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method to provide a more suitable string representation of a particular type.</span></span> <span data-ttu-id="eff19-497">Typy również często przeciążenia <xref:System.Object.ToString%2A?displayProperty=nameWithType> metodę, aby zapewnić obsługę dla ciągi formatów lub formatowania zależne od kultury.</span><span class="sxs-lookup"><span data-stu-id="eff19-497">Types also frequently overload the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method to provide support for format strings or culture-sensitive formatting.</span></span>  
  
 <span data-ttu-id="eff19-498">W tej sekcji:</span><span class="sxs-lookup"><span data-stu-id="eff19-498">In this section:</span></span>  
  
 <span data-ttu-id="eff19-499">[Domyślną metodą Object.ToString()](#Default) </span><span class="sxs-lookup"><span data-stu-id="eff19-499">[The default Object.ToString() method](#Default) </span></span>  
 <span data-ttu-id="eff19-500">[Zastąpienie metody Object.ToString()](#Overriding) </span><span class="sxs-lookup"><span data-stu-id="eff19-500">[Overriding the Object.ToString() method](#Overriding) </span></span>  
 <span data-ttu-id="eff19-501">[Przeładowanie metody ToString](#Overloading) </span><span class="sxs-lookup"><span data-stu-id="eff19-501">[Overloading the ToString method](#Overloading) </span></span>  
 <span data-ttu-id="eff19-502">[Rozszerzanie Object.ToString — metoda](#Extending) </span><span class="sxs-lookup"><span data-stu-id="eff19-502">[Extending the Object.ToString method](#Extending) </span></span>  
 [<span data-ttu-id="eff19-503">Uwagi dla środowiska uruchomieniowego systemu Windows</span><span class="sxs-lookup"><span data-stu-id="eff19-503">Notes for the Windows Runtime</span></span>](#WinRT)  
  
<a name="Default"></a>   
## <a name="the-default-objecttostring-method"></a><span data-ttu-id="eff19-504">Domyślną metodą Object.ToString()</span><span class="sxs-lookup"><span data-stu-id="eff19-504">The default Object.ToString() method</span></span>  
 <span data-ttu-id="eff19-505">Domyślna implementacja <xref:System.Object.ToString%2A> metoda zwraca w pełni kwalifikowana nazwa typu <xref:System.Object>, jak pokazano na poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="eff19-505">The default implementation of the <xref:System.Object.ToString%2A> method returns the fully qualified name of the type of the <xref:System.Object>, as the following example shows.</span></span>  
  
 [!code-cpp[System.Object.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.object.tostring/cpp/tostring1.cpp#1)]
 [!code-csharp[System.Object.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Object.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.tostring/vb/tostring1.vb#1)]  
  
 <span data-ttu-id="eff19-506">Ponieważ <xref:System.Object> jest klasą bazową dla wszystkich typów odwołań w programie .NET Framework to zachowanie jest dziedziczone przez typy odwołań, które nie zastępują <xref:System.Object.ToString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-506">Because <xref:System.Object> is the base class of all reference types in the .NET Framework, this behavior is inherited by reference types that do not override the <xref:System.Object.ToString%2A> method.</span></span> <span data-ttu-id="eff19-507">Ilustruje to poniższy przykład.</span><span class="sxs-lookup"><span data-stu-id="eff19-507">The following example illustrates this.</span></span> <span data-ttu-id="eff19-508">Definiuje klasę o nazwie `Object1` która akceptuje domyślną implementację wszystkich <xref:System.Object> elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="eff19-508">It defines a class named `Object1` that accepts the default implementation of all <xref:System.Object> members.</span></span> <span data-ttu-id="eff19-509">Jego <xref:System.Object.ToString%2A> metoda zwraca obiekt, w pełni kwalifikowaną nazwę typu.</span><span class="sxs-lookup"><span data-stu-id="eff19-509">Its <xref:System.Object.ToString%2A> method returns the object's fully qualified type name.</span></span>  
  
 [!code-cpp[System.Object.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.object.tostring/cpp/tostring2.cpp#2)]
 [!code-csharp[System.Object.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.Object.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.tostring/vb/tostring2.vb#2)]  
  
<a name="Overriding"></a>   
## <a name="overriding-the-objecttostring-method"></a><span data-ttu-id="eff19-510">Zastąpienie metody Object.ToString()</span><span class="sxs-lookup"><span data-stu-id="eff19-510">Overriding the Object.ToString() method</span></span>  
 <span data-ttu-id="eff19-511">Typy często przesłaniać <xref:System.Object.ToString%2A?displayProperty=nameWithType> metoda zwraca ciąg reprezentujący wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-511">Types commonly override the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method to return a string that represents the object instance.</span></span> <span data-ttu-id="eff19-512">Na przykład, takich jak podstawowym typy <xref:System.Char>, <xref:System.Int32>, i <xref:System.String> podaj <xref:System.Object.ToString%2A> implementacji, które zwracają wartość, która reprezentuje obiekt formę ciągu.</span><span class="sxs-lookup"><span data-stu-id="eff19-512">For example, the base types such as <xref:System.Char>, <xref:System.Int32>, and <xref:System.String> provide <xref:System.Object.ToString%2A> implementations that return the string form of the value that the object represents.</span></span> <span data-ttu-id="eff19-513">W poniższym przykładzie zdefiniowano klasę, `Object2`, która zastępuje <xref:System.Object.ToString%2A> metodę, aby zwrócić nazwę typu wraz z jego wartość.</span><span class="sxs-lookup"><span data-stu-id="eff19-513">The following example defines a class, `Object2`, that overrides the <xref:System.Object.ToString%2A> method to return the type name along with its value.</span></span>  
  
 [!code-cpp[System.Object.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.object.tostring/cpp/tostring3.cpp#3)]
 [!code-csharp[System.Object.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.Object.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.tostring/vb/tostring3.vb#3)]  
  
 <span data-ttu-id="eff19-514">W poniższej tabeli wymieniono kategorie typów w programie .NET Framework i wskazuje, czy zastępują one <xref:System.Object.ToString%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-514">The following table lists the type categories in the .NET Framework and indicates whether or not they override the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
|<span data-ttu-id="eff19-515">Typ kategorii</span><span class="sxs-lookup"><span data-stu-id="eff19-515">Type category</span></span>|<span data-ttu-id="eff19-516">Zastępuje Object.ToString()</span><span class="sxs-lookup"><span data-stu-id="eff19-516">Overrides Object.ToString()</span></span>|<span data-ttu-id="eff19-517">Zachowanie</span><span class="sxs-lookup"><span data-stu-id="eff19-517">Behavior</span></span>|  
|-------------------|-----------------------------------|--------------|  
|<span data-ttu-id="eff19-518">Class</span><span class="sxs-lookup"><span data-stu-id="eff19-518">Class</span></span>|<span data-ttu-id="eff19-519">n/d</span><span class="sxs-lookup"><span data-stu-id="eff19-519">n/a</span></span>|<span data-ttu-id="eff19-520">n/d</span><span class="sxs-lookup"><span data-stu-id="eff19-520">n/a</span></span>|  
|<span data-ttu-id="eff19-521">Struktura</span><span class="sxs-lookup"><span data-stu-id="eff19-521">Structure</span></span>|<span data-ttu-id="eff19-522">Tak (<xref:System.ValueType.ToString%2A?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="eff19-522">Yes (<xref:System.ValueType.ToString%2A?displayProperty=nameWithType>)</span></span>|<span data-ttu-id="eff19-523">Identyczny Object.ToString()</span><span class="sxs-lookup"><span data-stu-id="eff19-523">Same as Object.ToString()</span></span>|  
|<span data-ttu-id="eff19-524">Wyliczenie</span><span class="sxs-lookup"><span data-stu-id="eff19-524">Enumeration</span></span>|<span data-ttu-id="eff19-525">Tak (<xref:System.Enum.ToString?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="eff19-525">Yes (<xref:System.Enum.ToString?displayProperty=nameWithType>)</span></span>|<span data-ttu-id="eff19-526">Nazwa elementu członkowskiego</span><span class="sxs-lookup"><span data-stu-id="eff19-526">The member name</span></span>|  
|<span data-ttu-id="eff19-527">Interface</span><span class="sxs-lookup"><span data-stu-id="eff19-527">Interface</span></span>|<span data-ttu-id="eff19-528">Nie</span><span class="sxs-lookup"><span data-stu-id="eff19-528">No</span></span>|<span data-ttu-id="eff19-529">n/d</span><span class="sxs-lookup"><span data-stu-id="eff19-529">n/a</span></span>|  
|<span data-ttu-id="eff19-530">Delegate</span><span class="sxs-lookup"><span data-stu-id="eff19-530">Delegate</span></span>|<span data-ttu-id="eff19-531">Nie</span><span class="sxs-lookup"><span data-stu-id="eff19-531">No</span></span>|<span data-ttu-id="eff19-532">n/d</span><span class="sxs-lookup"><span data-stu-id="eff19-532">n/a</span></span>|  
  
 <span data-ttu-id="eff19-533">Zobacz uwagi dotyczące obiektów dziedziczących sekcji, aby uzyskać dodatkowe informacje na zastępowanie <xref:System.Object.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="eff19-533">See the Notes to Inheritors section for additional information on overriding <xref:System.Object.ToString%2A>.</span></span>  
  
<a name="Overloading"></a>   
## <a name="overloading-the-tostring-method"></a><span data-ttu-id="eff19-534">Przeładowanie metody ToString</span><span class="sxs-lookup"><span data-stu-id="eff19-534">Overloading the ToString method</span></span>  
 <span data-ttu-id="eff19-535">Oprócz zastępowania bez parametrów <xref:System.Object.ToString?displayProperty=nameWithType> przeciążyć wiele typów metody `ToString` metodę w celu zapewnienia wersji metody, które akceptują parametrów.</span><span class="sxs-lookup"><span data-stu-id="eff19-535">In addition to overriding the parameterless <xref:System.Object.ToString?displayProperty=nameWithType> method, many types overload the `ToString` method to provide versions of the method that accept parameters.</span></span> <span data-ttu-id="eff19-536">Najczęściej jest to realizowane zapewnienie wsparcia dla zmiennej formatowania i formatowania zależne od kultury.</span><span class="sxs-lookup"><span data-stu-id="eff19-536">Most commonly, this is done to provide support for variable formatting and culture-sensitive formatting.</span></span>  
  
 <span data-ttu-id="eff19-537">Następujący przykład przeciążeń `ToString` metoda zwraca ciąg wynik, która zawiera wartości różnych pól `Automobile` klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-537">The following example overloads the `ToString` method to return a result string that includes the value of various fields of an `Automobile` class.</span></span> <span data-ttu-id="eff19-538">Definiuje cztery ciągi formatu: G, która zwraca nazwę modelu i roku; D, który zwraca nazwę modelu, rok i liczba drzwi; C, która zwraca nazwę modelu, rok i liczba cylindrów; i A, która zwraca ciąg zawierający wszystkie cztery pola wartości.</span><span class="sxs-lookup"><span data-stu-id="eff19-538">It defines four format strings: G, which returns the model name and year; D, which returns the model name, year, and number of doors; C, which returns the model name, year, and number of cylinders; and A, which returns a string with all four field values.</span></span>  
  
 [!code-csharp[System.Object.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.tostring/cs/tostringoverload1.cs#4)]
 [!code-vb[System.Object.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.tostring/vb/tostringoverload1.vb#4)]  
  
 <span data-ttu-id="eff19-539">Poniższy przykład wywołuje przeciążone <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> metodę, aby wyświetlić zależne od kultury formatowania wartości waluty.</span><span class="sxs-lookup"><span data-stu-id="eff19-539">The following example calls the overloaded <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method to display culture-sensitive formatting of a currency value.</span></span>  
  
 [!code-csharp[System.Object.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.tostring/cs/tostringoverload2.cs#5)]
 [!code-vb[System.Object.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.tostring/vb/tostringoverload2.vb#5)]  
  
 <span data-ttu-id="eff19-540">Aby uzyskać więcej informacji na ciągi formatów i formatowanie zależne od kultury, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="eff19-540">For more information on format strings and culture-sensitive formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span> <span data-ttu-id="eff19-541">Ciągi formatu, obsługiwane przez wartości liczbowe, zobacz [standardowe ciągi formatu liczbowego](~/docs/standard/base-types/standard-numeric-format-strings.md) i [niestandardowe ciągi formatów liczbowych](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="eff19-541">For the format strings supported by numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="eff19-542">Ciągi formatu, obsługiwane przez wartości daty i godziny, zobacz [standardowe ciągi daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md) i [niestandardowe ciągi daty i godziny Format](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="eff19-542">For the format strings supported by date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
<a name="Extending"></a>   
## <a name="extending-the-objecttostring-method"></a><span data-ttu-id="eff19-543">Rozszerzanie Object.ToString — metoda</span><span class="sxs-lookup"><span data-stu-id="eff19-543">Extending the Object.ToString method</span></span>  
 <span data-ttu-id="eff19-544">Ponieważ typ dziedziczy domyślnie <xref:System.Object.ToString%2A?displayProperty=nameWithType> metody, można znaleźć jego zachowanie niepożądanych i chcesz je zmienić.</span><span class="sxs-lookup"><span data-stu-id="eff19-544">Because a type inherits the default <xref:System.Object.ToString%2A?displayProperty=nameWithType> method, you may find its behavior undesirable and want to change it.</span></span> <span data-ttu-id="eff19-545">Jest to szczególnie istotne, tablic i klasy kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eff19-545">This is particularly true of arrays and collection classes.</span></span> <span data-ttu-id="eff19-546">Gdy może oczekiwać `ToString` metody tablicą lub kolekcją klasy do wyświetlenia wartości jego elementów członkowskich, zamiast tego Wyświetla typu w pełni kwalifikowana nazwa typu, jak przedstawiono na poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="eff19-546">While you may expect the `ToString` method of an array or collection class to display the values of its members, it instead displays the type fully qualified type name, as the following example shows.</span></span>  
  
 [!code-csharp[System.Object.ToString#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.tostring/cs/array1.cs#6)]
 [!code-vb[System.Object.ToString#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.tostring/vb/array1.vb#6)]  
  
 <span data-ttu-id="eff19-547">Masz kilka opcji ciąg wynik, który chcesz utworzyć.</span><span class="sxs-lookup"><span data-stu-id="eff19-547">You have several options to produce the result string that you'd like.</span></span>  
  
-   <span data-ttu-id="eff19-548">Jeśli typ jest tablicą, obiekt kolekcji lub obiekt, który implementuje <xref:System.Collections.IEnumerable> lub <xref:System.Collections.Generic.IEnumerable%601> interfejsów, jego elementy można wyliczać za pomocą `foreach` instrukcji w języku C# lub `For Each...Next` utworzyć w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="eff19-548">If the type is an array, a collection object, or an object that implements the <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601> interfaces, you can enumerate its elements by using the `foreach` statement in C# or the `For Each...Next` construct in Visual Basic.</span></span>  
  
-   <span data-ttu-id="eff19-549">Jeśli klasa nie jest `sealed` (w języku C#) lub `NotInheritable` (w języku Visual Basic), można utworzyć klasy otoki, która dziedziczy po klasie podstawowej, którego <xref:System.Object.ToString%2A?displayProperty=nameWithType> metody, które chcesz dostosować.</span><span class="sxs-lookup"><span data-stu-id="eff19-549">If the class is not `sealed` (in C#) or `NotInheritable` (in Visual Basic), you can develop a wrapper class that inherits from the base class whose <xref:System.Object.ToString%2A?displayProperty=nameWithType> method you want to customize.</span></span> <span data-ttu-id="eff19-550">Co najmniej wymaga, należy wykonać następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="eff19-550">At a minimum, this requires that you do the following:</span></span>  
  
    1.  <span data-ttu-id="eff19-551">Implementuje wszelkie niezbędne konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="eff19-551">Implement any necessary constructors.</span></span> <span data-ttu-id="eff19-552">Klasy pochodne nie dziedziczą ich konstruktorów klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="eff19-552">Derived classes do not inherit their base class constructors.</span></span>  
  
    2.  <span data-ttu-id="eff19-553">Zastąpienie <xref:System.Object.ToString%2A?displayProperty=nameWithType> metoda zwraca ciąg wyniku, który ma.</span><span class="sxs-lookup"><span data-stu-id="eff19-553">Override the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method to return the result string that you'd like.</span></span>  
  
     <span data-ttu-id="eff19-554">W poniższym przykładzie zdefiniowano klasę otoki dla <xref:System.Collections.Generic.List%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-554">The following example defines a wrapper class for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="eff19-555">Zastępuje on <xref:System.Object.ToString%2A?displayProperty=nameWithType> metodę, aby wyświetlić wartość każdej metody kolekcji, a nie w pełni kwalifikowaną nazwę typu.</span><span class="sxs-lookup"><span data-stu-id="eff19-555">It overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method to display the value of each method of the collection rather than the fully qualified type name.</span></span>  
  
     [!code-csharp[System.Object.ToString#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.tostring/cs/customize1.cs#7)]
     [!code-vb[System.Object.ToString#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.tostring/vb/customize1.vb#7)]  
  
-   <span data-ttu-id="eff19-556">Tworzenie [— metoda rozszerzenia](~/docs/standard/design-guidelines/extension-methods.md) zwracającą ciąg wyniku, który ma.</span><span class="sxs-lookup"><span data-stu-id="eff19-556">Develop an [extension method](~/docs/standard/design-guidelines/extension-methods.md) that returns the result string that you want.</span></span> <span data-ttu-id="eff19-557">Należy pamiętać, że nie można zastąpić domyślną <xref:System.Object.ToString%2A?displayProperty=nameWithType> metody w ten sposób (oznacza to, z rozszerzenia klasy (w języku C#) lub modułu (w języku Visual Basic) nie może mieć bez parametrów metodę o nazwie `ToString` jest to zamiast oryginalnego typu `ToString` — metoda .</span><span class="sxs-lookup"><span data-stu-id="eff19-557">Note that you can't override the default <xref:System.Object.ToString%2A?displayProperty=nameWithType> method in this way (that is, your extension class (in C#) or module (in Visual Basic) cannot have a parameterless method named `ToString` that is called in place of the original type's `ToString` method.</span></span> <span data-ttu-id="eff19-558">Musisz podać inną nazwę dla użytkownika bez parametrów `ToString` zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="eff19-558">You'll have to provide some other name for your parameterless `ToString` replacement.</span></span>  
  
     <span data-ttu-id="eff19-559">W poniższym przykładzie zdefiniowano dwie metody, które rozszerzają <xref:System.Collections.Generic.List%601> klasy: bez parametrów `ToString2` metody, a `ToString` metody z <xref:System.String> parametr, który reprezentuje ciąg formatu.</span><span class="sxs-lookup"><span data-stu-id="eff19-559">The following example defines two methods that extend the <xref:System.Collections.Generic.List%601> class: a parameterless `ToString2` method, and a `ToString` method with a <xref:System.String> parameter that represents a format string.</span></span>  
  
     [!code-csharp[System.Object.ToString#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.object.tostring/cs/customize2.cs#8)]
     [!code-vb[System.Object.ToString#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.object.tostring/vb/customize2.vb#8)]  
  
<a name="WinRT"></a>   
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="eff19-560">Uwagi dla [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="eff19-560">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="eff19-561">Podczas wywoływania <xref:System.Object.ToString%2A> metody w klasie w [!INCLUDE[wrt](~/includes/wrt-md.md)], zapewnia domyślne zachowanie dla klas, które nie zastępują <xref:System.Object.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="eff19-561">When you call the <xref:System.Object.ToString%2A> method on a class in the [!INCLUDE[wrt](~/includes/wrt-md.md)], it provides the default behavior for classes that don’t override <xref:System.Object.ToString%2A>.</span></span> <span data-ttu-id="eff19-562">To jest częścią programu .NET Framework zapewnia obsługę [!INCLUDE[wrt](~/includes/wrt-md.md)] (zobacz [.NET Framework obsługuje dla aplikacji ze Sklepu Windows i środowiska wykonawczego systemu Windows](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="eff19-562">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> <span data-ttu-id="eff19-563">Klasy w [!INCLUDE[wrt](~/includes/wrt-md.md)] nie dziedziczą <xref:System.Object>i nie zawsze implementują <xref:System.Object.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="eff19-563">Classes in the [!INCLUDE[wrt](~/includes/wrt-md.md)] don’t inherit <xref:System.Object>, and don’t always implement a <xref:System.Object.ToString%2A>.</span></span> <span data-ttu-id="eff19-564">Jednak zawsze były wyświetlane mają <xref:System.Object.ToString%2A>, <xref:System.Object.Equals%28System.Object%29>, i <xref:System.Object.GetHashCode%2A> metody, gdy ich używać w kodzie C# lub Visual Basic i .NET Framework zapewnia domyślne zachowanie dla tych metod.</span><span class="sxs-lookup"><span data-stu-id="eff19-564">However, they always appear to have <xref:System.Object.ToString%2A>, <xref:System.Object.Equals%28System.Object%29>, and <xref:System.Object.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides a default behavior for these methods.</span></span>  
  
 <span data-ttu-id="eff19-565">Począwszy od [!INCLUDE[net_v451](~/includes/net-v451-md.md)], będzie używana przez środowisko uruchomieniowe języka wspólnego [IStringable.ToString](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.tostring.aspx) na [!INCLUDE[wrt](~/includes/wrt-md.md)] obiektu przed powrotem do domyślną implementację elementu <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eff19-565">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)], the common language runtime will use [IStringable.ToString](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.tostring.aspx) on a [!INCLUDE[wrt](~/includes/wrt-md.md)] object before falling back to the default implementation of <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[wrt](~/includes/wrt-md.md)]<span data-ttu-id="eff19-566"> klasy, które są napisane w języku C# lub Visual Basic można zastąpić <xref:System.Object.ToString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eff19-566"> classes that are written in C# or Visual Basic can override the <xref:System.Object.ToString%2A> method.</span></span>  
  
### <a name="the-includewrtincludeswrt-mdmd-and-the-istringable-interface"></a><span data-ttu-id="eff19-567">[!INCLUDE[wrt](~/includes/wrt-md.md)] i interfejsu IStringable</span><span class="sxs-lookup"><span data-stu-id="eff19-567">The [!INCLUDE[wrt](~/includes/wrt-md.md)] and the IStringable Interface</span></span>  
 <span data-ttu-id="eff19-568">Począwszy od [!INCLUDE[win81](~/includes/win81-md.md)], [!INCLUDE[wrt](~/includes/wrt-md.md)] obejmuje [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) interfejs którego pojedynczej metody [IStringable.ToString](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.tostring.aspx), zapewnia podstawową obsługę formatowania porównywalna do dostarczone przez <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eff19-568">Starting with [!INCLUDE[win81](~/includes/win81-md.md)], the [!INCLUDE[wrt](~/includes/wrt-md.md)] includes an [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) interface whose single method, [IStringable.ToString](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.tostring.aspx), provides basic formatting support comparable to that provided by <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="eff19-569">Aby uniknąć niejednoznaczności, nie powinny implementować [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) na typy zarządzane.</span><span class="sxs-lookup"><span data-stu-id="eff19-569">To prevent ambiguity, you should not implement [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) on managed types.</span></span>  
  
 <span data-ttu-id="eff19-570">Kiedy obiekty zarządzane są wywoływane przez kod natywny lub kod napisany w językach takich jak JavaScript lub C + +/ CX, pojawią się one do zaimplementowania [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx).</span><span class="sxs-lookup"><span data-stu-id="eff19-570">When managed objects are called by native code or by code written in languages such as JavaScript or C++/CX, they appear to implement [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx).</span></span> <span data-ttu-id="eff19-571">Środowisko uruchomieniowe języka wspólnego automatycznie będzie przekierowywać wywołania z [IStringable.ToString](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.tostring.aspx) do <xref:System.Object.ToString%2A?displayProperty=nameWithType> zdarzeń [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) nie został zaimplementowany dla obiekt zarządzany.</span><span class="sxs-lookup"><span data-stu-id="eff19-571">The common language runtime will automatically route calls from [IStringable.ToString](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.tostring.aspx) to <xref:System.Object.ToString%2A?displayProperty=nameWithType> in the event [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) is not implemented on the managed object.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="eff19-572">Ponieważ środowisko uruchomieniowe języka wspólnego auto implementuje [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) wszystkie typy w zarządzane [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] aplikacji, firma Microsoft zaleca, że nie podano własne [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) implementacji.</span><span class="sxs-lookup"><span data-stu-id="eff19-572">Because the common language runtime auto-implements [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) for all managed types in [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps, we recommend that you do not provide your own [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) implementation.</span></span> <span data-ttu-id="eff19-573">Implementowanie [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) może spowodować niezamierzone zachowanie podczas wywoływania metody `ToString` z [!INCLUDE[wrt](~/includes/wrt-md.md)], C + +/ CX lub JavaScript.</span><span class="sxs-lookup"><span data-stu-id="eff19-573">Implementing [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) may result in unintended behavior when calling `ToString` from the [!INCLUDE[wrt](~/includes/wrt-md.md)], C++/CX, or JavaScript.</span></span>  
  
 <span data-ttu-id="eff19-574">Jeśli chcesz wdrożyć [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) w publicznych typu zarządzanego wyeksportowany w [!INCLUDE[wrt](~/includes/wrt-md.md)] składnika, obowiązują następujące ograniczenia:</span><span class="sxs-lookup"><span data-stu-id="eff19-574">If you do choose to implement [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) in a public managed type that is exported in a [!INCLUDE[wrt](~/includes/wrt-md.md)] component, the following restrictions apply:</span></span>  
  
-   <span data-ttu-id="eff19-575">Można zdefiniować [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) interfejsu tylko w relacji "implementuje klasy", takie jak</span><span class="sxs-lookup"><span data-stu-id="eff19-575">You can define the [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) interface only in a "class implements" relationship, such as</span></span>  
  
    ```  
    public class NewClass : IStringable  
    ```  
  
     <span data-ttu-id="eff19-576">w języku C# lub</span><span class="sxs-lookup"><span data-stu-id="eff19-576">in C#, or</span></span>  
  
    ```  
    Public Class NewClass : Implements IStringable  
    ```  
  
     <span data-ttu-id="eff19-577">w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="eff19-577">in Visual Basic.</span></span>  
  
-   <span data-ttu-id="eff19-578">Nie można zaimplementować [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) w interfejsie.</span><span class="sxs-lookup"><span data-stu-id="eff19-578">You cannot implement [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) on an interface.</span></span>  
  
-   <span data-ttu-id="eff19-579">Nie można zadeklarować parametr będzie typu [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx).</span><span class="sxs-lookup"><span data-stu-id="eff19-579">You cannot declare a parameter to be of type [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx).</span></span>  
  
-   <span data-ttu-id="eff19-580">[IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) nie może być zwracany typ metody, właściwości lub pola.</span><span class="sxs-lookup"><span data-stu-id="eff19-580">[IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) cannot be the return type of a method, property, or field.</span></span>  
  
-   <span data-ttu-id="eff19-581">Nie można ukryć Twojej [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) implementacja klas podstawowych za pomocą definicji metody, takie jak następujące:</span><span class="sxs-lookup"><span data-stu-id="eff19-581">You cannot hide your [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) implementation from base classes by using a method definition such as the following:</span></span>  
  
    ```  
  
    public class NewClass : IStringable  
    {  
       public new string ToString()  
       {  
          return "New ToString in NewClass";  
       }  
    }  
  
    ```  
  
     <span data-ttu-id="eff19-582">Zamiast tego [IStringable.ToString](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.tostring.aspx) zawsze musi zastąpić implementacji klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="eff19-582">Instead, the [IStringable.ToString](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.tostring.aspx) implementation must always override the base class implementation.</span></span> <span data-ttu-id="eff19-583">Można ukryć `ToString` implementacji tylko przy wywoływaniu wystąpienie silnie typizowanej klasy.</span><span class="sxs-lookup"><span data-stu-id="eff19-583">You can hide a `ToString` implementation only by invoking it on a strongly typed class instance.</span></span>  
  
 <span data-ttu-id="eff19-584">Należy pamiętać, że w różnych warunkach, wywołuje z kodu natywnego do zarządzanego typu, który implementuje [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) lub ukrywa jego [ToString](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.tostring.aspx) implementacja może spowodować nieoczekiwane zachowanie.</span><span class="sxs-lookup"><span data-stu-id="eff19-584">Note that under a variety of conditions, calls from native code to a managed type that implements [IStringable](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.aspx) or hides its [ToString](http://msdn.microsoft.com/library/windows/apps/windows.foundation.istringable.tostring.aspx) implementation can produce unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="eff19-585">Po zaimplementowaniu własnych typów powinny zastępować <see cref="M:System.Object.ToString" /> metody, aby zwrócić wartości, które są przydatne w przypadku tych typów.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eff19-585">When you implement your own types, you should override the <see cref="M:System.Object.ToString" /> method to return values that are meaningful for those types.</span>
            </span>
            <span data-ttu-id="eff19-586">Pochodzi z klasy, które wymagają większą kontrolę nad formatowanie niż <see cref="M:System.Object.ToString" /> zapewnia można zaimplementować <see cref="T:System.IFormattable" /> interfejsu.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eff19-586">Derived classes that require more control over formatting than <see cref="M:System.Object.ToString" /> provides can implement the <see cref="T:System.IFormattable" /> interface.</span>
            </span>
            <span data-ttu-id="eff19-587">Jego <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> — metoda umożliwia definiowanie ciągi formatów, które kontrolują, formatowanie i użyj <see cref="T:System.IFormatProvider" /> obiekt, który może dostarczyć do formatowania specyficzne dla kultury.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eff19-587">Its <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> method enables you to define format strings that control formatting and to use an <see cref="T:System.IFormatProvider" /> object that can provide for culture-specific formatting.</span>
            </span>
            <span data-ttu-id="eff19-588">Zastępuje z <see cref="M:System.Object.ToString" /> metody należy przestrzegać następujących wytycznych:</span>
            <span class="sxs-lookup">
              <span data-stu-id="eff19-588">Overrides of the <see cref="M:System.Object.ToString" /> method should follow these guidelines:</span>
            </span>  
  
-   <span data-ttu-id="eff19-589">Zwracany ciąg powinny być przyjazne i czytelna dla człowieka.</span><span class="sxs-lookup"><span data-stu-id="eff19-589">The returned string should be friendly and readable by humans.</span></span>  
  
-   <span data-ttu-id="eff19-590">Zwracany ciąg musi jednoznacznie wskazywać wartość wystąpienia obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-590">The returned string should uniquely identify the value of the object instance.</span></span>  
  
-   <span data-ttu-id="eff19-591">Zwracany ciąg powinna być możliwie krótki, aby była ona odpowiednią do wyświetlania przez debuger.</span><span class="sxs-lookup"><span data-stu-id="eff19-591">The returned string should be as short as possible so that it is suitable for display by a debugger.</span></span>  
  
-   <span data-ttu-id="eff19-592">Twoje <see cref="M:System.Object.ToString" /> zastąpienie nie może zwracać <see cref="F:System.String.Empty" /> lub pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="eff19-592">Your <see cref="M:System.Object.ToString" /> override should not return <see cref="F:System.String.Empty" /> or a null string.</span></span>  
  
-   <span data-ttu-id="eff19-593">Twoje <see cref="M:System.Object.ToString" /> zastąpienie nie powinien zgłosić wyjątek.</span><span class="sxs-lookup"><span data-stu-id="eff19-593">Your <see cref="M:System.Object.ToString" /> override should not throw an exception.</span></span>  
  
-   <span data-ttu-id="eff19-594">Reprezentacja ciągu wystąpienia jest zależne od kultury lub mogą być sformatowane na różne sposoby, należy wdrożyć <see cref="T:System.IFormattable" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="eff19-594">If the string representation of an instance is culture-sensitive or can be formatted in multiple ways, implement the <see cref="T:System.IFormattable" /> interface.</span></span>  
  
-   <span data-ttu-id="eff19-595">Jeśli zwracany ciąg zawiera poufne informacje, należy najpierw wymaga odpowiednich uprawnień.</span><span class="sxs-lookup"><span data-stu-id="eff19-595">If the returned string includes sensitive information, you should first demand an appropriate permission.</span></span><span data-ttu-id="eff19-596">Jeśli żądanie zakończy się powodzeniem, można powrócić poufne informacje; w przeciwnym razie powinien zwrócić ciąg, który nie obejmuje informacji poufnych.</span><span class="sxs-lookup"><span data-stu-id="eff19-596">If the demand succeeds, you can return the sensitive information; otherwise, you should return a string that excludes the sensitive information.</span></span>  
  
-   <span data-ttu-id="eff19-597">Twoje <see cref="M:System.Object.ToString" /> zastąpienie powinien mieć żadnych efektów ubocznych zauważalne, aby uniknąć komplikacji w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="eff19-597">Your <see cref="M:System.Object.ToString" /> override should have no observable side effects to avoid complications in debugging.</span></span><span data-ttu-id="eff19-598">Na przykład wywołanie <see cref="M:System.Object.ToString" /> — metoda nie należy zmieniać wartości pól wystąpień.</span><span class="sxs-lookup"><span data-stu-id="eff19-598">For example, a call to the <see cref="M:System.Object.ToString" /> method should not change the value of instance fields.</span></span>  
  
-   <span data-ttu-id="eff19-599">Jeśli Twoje typ implementuje metodę analizowania (lub <see langword="Parse" /> lub <see langword="TryParse" /> metody, konstruktora lub niektóre statyczną metodę, która tworzy wystąpienie tego typu z ciągu), należy upewnić się, że długość ciągu zwróconego przez <see cref="M:System.Object.ToString" /> może być — metoda przekonwertować na wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="eff19-599">If your type implements a parsing method (or <see langword="Parse" /> or <see langword="TryParse" /> method, a constructor, or some other static method that instantiates an instance of the type from a string), you should ensure that the string returned by the <see cref="M:System.Object.ToString" /> method can be converted to an object instance.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>