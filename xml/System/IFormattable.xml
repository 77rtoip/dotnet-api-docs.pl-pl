<Type Name="IFormattable" FullName="System.IFormattable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cda42210ed442bf30f4dea80139a23c9ca54a766" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39943686" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.IFormattable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormattable" />
  <TypeSignature Language="F#" Value="type IFormattable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Oferuje funkcję do formatowania wartości obiektu na reprezentację ciągu znaków.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormattable> Interfejsu Konwertuje obiekt na jego reprezentację ciągu, na podstawie ciągu formatowania i dostawcę formatu.  
  
 Ciąg formatu zwykle definiuje ogólny wygląd obiektu. Na przykład .NET Framework obsługuje następujące funkcje:  
  
-   Standardowe ciągi formatujące formatowania wartości wyliczenia (zobacz [wyliczanie ciągów formatujących](~/docs/standard/base-types/enumeration-format-strings.md)).  
  
-   Ciągi formatów standardowych i niestandardowych do formatowania wartości numerycznych (zobacz [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) i [liczbowe — niestandardowe ciągi formatujące](~/docs/standard/base-types/custom-numeric-format-strings.md)).  
  
-   Ciągi formatów standardowych i niestandardowych do formatowania wartości daty i godziny (zobacz [standardowych ciągów daty i godziny Format](~/docs/standard/base-types/standard-date-and-time-format-strings.md) i [niestandardowych ciągów daty i godziny Format](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).  
  
-   Ciągi formatów standardowych i niestandardowych formatowania przedziały czasu (zobacz [standardowe ciągi formatujące TimeSpan](~/docs/standard/base-types/standard-timespan-format-strings.md) i [— niestandardowe ciągi formatujące TimeSpan](~/docs/standard/base-types/custom-timespan-format-strings.md)).  
  
 Można również definiować własne ciągi formatu do obsługi formatowania dla typów zdefiniowanych przez aplikację.  
  
 Dostawca formatu zwraca obiekt formatowania, który zwykle definiuje symbole używane w konwersji obiektu na jego reprezentację ciągu. Na przykład gdy konwertujesz liczbę jako wartość waluty dostawcę formatu definiuje symbol waluty, która pojawia się w ciągu wynikowym. .NET Framework definiuje trzy dostawców formatu:  
  
-   <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> Klasy, która zwraca albo <xref:System.Globalization.NumberFormatInfo> obiektu do formatowania wartości numerycznych lub <xref:System.Globalization.DateTimeFormatInfo> obiektu do formatowania wartości daty i godziny.  
  
-   <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> Klasy, która zwraca instancję samego siebie formatowania wartości numerycznych.  
  
-   <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType> Klasy, która zwraca instancję samego siebie formatowania wartości daty i godziny.  
  
 Ponadto można definiować własnych niestandardowych dostawców formatu umożliwiają określanie wartości specyficzne dla kultury, specyficzne dla zawód lub informacje specyficzne dla branży używanych w formatowaniu. Aby uzyskać więcej informacji o implementowaniu niestandardowe formatowanie przy użyciu dostawcy formatu niestandardowego, zobacz <xref:System.ICustomFormatter>.  
  
 <xref:System.IFormattable> Interfejs definiuje jedną metodę <xref:System.IFormattable.ToString%2A>, który dostarcza usługi formatowania dla typu implementującego. <xref:System.IFormattable.ToString%2A> Metodę można wywołać bezpośrednio. Ponadto jest on nazywany automatycznie przez <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> i <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> metod i za pomocą metod, które używają [funkcję formatowania złożonego](~/docs/standard/base-types/composite-formatting.md) w .NET Framework. Metody te zawierają <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, <xref:System.String.Format%2A?displayProperty=nameWithType>, i <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, między innymi. <xref:System.IFormattable.ToString%2A> Metoda jest wywoływana dla każdego elementu formatu w ciągu formatu metody.  
  
 <xref:System.IFormattable> Interfejs jest implementowany przez podstawowe typy danych.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano `Temperature` klasę, która implementuje <xref:System.IFormattable> interfejsu. Klasy obsługuje cztery specyfikatorów formatu: "G" i "C", które wskazują, że temperatura ma być wyświetlana w stopniach Celsjusza; "F", co oznacza, że temperatura ma być wyświetlana w Fahrenheita; i "K", co oznacza, że temperatura ma być wyświetlana w kelwinach. Ponadto <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementacji także mogą obsługiwać ciągu formatu, który jest `null` lub jest pusty. Pozostałe dwa `ToString` metody zdefiniowane przez `Temperature` klasy po prostu opakować wywołanie <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementacji.  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 Poniższy przykład następnie wywołuje <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementacji bezpośrednio lub za pomocą ciągu formatu złożonego.  
  
 [!code-csharp[System.IFormattable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#2)]
 [!code-vb[System.IFormattable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Klasy, które wymagają większa kontrola nad formatowaniem ciągi niż <see cref="M:System.Object.ToString" /> zapewnia powinny implementować <see cref="T:System.IFormattable" />.  Klasa, która implementuje <see cref="T:System.IFormattable" /> musi obsługiwać specyfikator (Ogólne) formatu "G". Oprócz specyfikator "G" tej klasy można zdefiniować listę specyfikatorów formatu, które obsługuje. Ponadto klasy musi być przygotowana do obsługi specyfikatora formatu, który jest <see langword="null" />. Aby uzyskać więcej informacji o formatowaniu i kody formatowania, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md)</para>
    </block>
    <altmember cref="T:System.IFormatProvider" />
    <altmember cref="M:System.Object.ToString" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="abstract member ToString : string * IFormatProvider -&gt; string" Usage="iFormattable.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">Format do użycia.  - lub - odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) do użycia domyślny format zdefiniowany dla typu <see cref="T:System.IFormattable" /> implementacji.</param>
        <param name="formatProvider">Dostawcę, który ma być używany do formatowania wartości.  - lub - odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) można uzyskać informacji formatujące z bieżących ustawień regionalnych systemu operacyjnego.</param>
        <summary>Formatuje wartość bieżącego wystąpienia przy użyciu określonego formatu.</summary>
        <returns>Wartość bieżącego wystąpienia w określonym formacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormattable.ToString%2A> Metoda konwertuje wartość na ciąg reprezentujący, które mogą być wyrażone na wiele sposobów. Jego dokładny format zależy od tego, określone symbole lub określonej kolejności, zdefiniowanych przez określonych kultur, zawodów lub przemysłach. Można bezpośrednio wywołać metodę. Jest również nazywany automatycznie przez <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> i <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> metod i za pomocą metod, które używają formatowania złożonego są wyposażone w programie .NET Framework, takich jak <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, i <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>. (Aby uzyskać więcej informacji, zobacz [formatowania złożonego](~/docs/standard/base-types/composite-formatting.md).)  
  
 Wywołanie metody formatowania złożonego <xref:System.IFormattable.ToString%2A> metody raz dla każdego elementu formatu w ciągu formatu. Parametry przekazane do metody są zależne od określonej metody formatowania, która jest wywołana i dla zawartości elementu formatu w następujący sposób:  
  
-   Jeśli element formatu nie zawiera ciąg formatu (na przykład, jeśli element formatu jest po prostu `{0}`), jest przekazywana `null` jako wartość <xref:System.String?displayProperty=nameWithType> parametru.  
  
-   Jeśli element formatu zawiera ciąg formatu (na przykład `{0:G}`), czy ciąg formatu jest przekazywany jako wartość <xref:System.String?displayProperty=nameWithType> parametru.  
  
-   Jeśli oryginalne wywołanie metody nie obejmuje <xref:System.IFormatProvider?displayProperty=nameWithType> parametru <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> jest przekazywany jako wartość <xref:System.IFormatProvider?displayProperty=nameWithType> parametru.  
  
-   Jeśli oryginalne wywołanie metody zawiera <xref:System.IFormatProvider?displayProperty=nameWithType> parametr, dostawcy, która jest dostarczana w wywołaniu metody jest przekazywany jako wartość <xref:System.IFormatProvider?displayProperty=nameWithType> parametru.  
  
> [!NOTE]
>  Obiekt <xref:System.IFormattable.ToString%2A> implementacja jest wywoływana przez metody formatowania złożonego, tylko wtedy, gdy nie są one przekazywane <xref:System.ICustomFormatter> dostawcę formatu, lub jeśli <xref:System.ICustomFormatter.Format%2A> zwraca metoda dostawcy formatu niestandardowego `null`.  
  
 Program .NET Framework zawiera trzy dostawców formatu, które implementują <xref:System.IFormatProvider> interfejsu:  
  
-   <xref:System.Globalization.NumberFormatInfo> dostarcza liczbowych formatowanie informacje, takie jak znaki miejsc dziesiętnych i separatory grup i sprawdzania pisowni i umieszczania symbole waluty w wartości pieniężne.  
  
-   <xref:System.Globalization.DateTimeFormatInfo> dostarcza związane z datami i związanych z czasem informacje o formatowaniu, takich jak położenie we wzorcu data miesiąca, dnia i roku.  
  
-   <xref:System.Globalization.CultureInfo> zawiera domyślne formatowania informacje zawarte w określonej kulturze, łącznie z informacjami formatu liczb i związane z datami i związanych z czasem informacje o formatowaniu.  
  
 Ponadto można określić własnego dostawcę formatu niestandardowego.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano `Temperature` klasę, która implementuje <xref:System.IFormattable.ToString%2A> metody. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.IFormattable> klasy.  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> Metody musi obsługiwać specyfikator (Ogólne) formatu "G". Oprócz specyfikator "G" tej klasy można zdefiniować listę specyfikatorów formatu, które obsługuje. Ponadto klasy musi być przygotowana do obsługi specyfikatora formatu, który jest <see langword="null" />. Aby uzyskać więcej informacji o formatowaniu i kody formatowania, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md).</para>
        </block>
        <altmember cref="T:System.String" />
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>