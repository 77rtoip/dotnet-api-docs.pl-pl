<Type Name="Console" FullName="System.Console">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9845be6cf312e75e59000ecc04690f2c0f053c8c" /><Meta Name="ms.sourcegitcommit" Value="634678f7ccd2928c6b2cf792a301b079b63639af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/26/2019" /><Meta Name="ms.locfileid" Value="68543081" /></Metadata><TypeSignature Language="C#" Value="public static class Console" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Console extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Console" />
  <TypeSignature Language="VB.NET" Value="Public Class Console" />
  <TypeSignature Language="C++ CLI" Value="public ref class Console abstract sealed" />
  <TypeSignature Language="F#" Value="type Console = class" />
  <AssemblyInfo>
    <AssemblyName>System.Console</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje standardowe strumienie danych wejściowych, wyjściowych i błędów dla aplikacji konsolowych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konsola programu jest oknem systemu operacyjnego, w którym użytkownicy wchodzą w interakcje z systemem operacyjnym lub z aplikacją konsolową opartą na tekście przez wprowadzanie tekstu wejściowego za pomocą klawiatury komputer i odczytywanie tekstu wyjściowego z terminalu komputerowego. Na przykład w systemie operacyjnym Windows konsola jest nazywana oknem wiersza polecenia i akceptuje polecenia systemu MS-DOS. <xref:System.Console> Klasa zapewnia podstawową pomoc techniczną dla aplikacji, które odczytują znaki z i zapisują znaki w konsoli programu.  
  
 Aby uzyskać informacje na temat programowania <xref:System.Console> z klasą, zobacz następujące sekcje:  
  
-   [Strumienie we/wy konsoli](#Streams)  
  
-   [Bufor ekranu i okno konsoli](#Buffer)  
  
-   [Obsługa standardu Unicode dla konsoli](#Unicode)  
  
-   [Typowe operacje](#Operations)  
  
-   [Uwagi dotyczące programu .NET Core](#Core)  
  
<a name="Streams"></a>   
## <a name="console-io-streams"></a>Strumienie wejścia/wyjścia konsoli  
 Po uruchomieniu aplikacji konsolowej system operacyjny automatycznie kojarzy trzy strumienie we/wy z konsolą: standardowy strumień wejściowy, standardowy strumień wyjściowy i strumień wyjściowy błędu standardowego. Aplikacja może odczytywać dane wejściowe użytkownika ze standardowego strumienia wejściowego. Zapisuj normalne dane w standardowym strumieniu wyjściowym; i Zapisz dane błędów w standardowym strumieniu wyjściowym błędu. Te strumienie są przedstawiane aplikacji jako wartości <xref:System.Console.In%2A?displayProperty=nameWithType>właściwości, <xref:System.Console.Out%2A?displayProperty=nameWithType>i <xref:System.Console.Error%2A?displayProperty=nameWithType> .  
  
 <xref:System.Console.In%2A> Domyślnie wartość <xref:System.IO.TextWriter?displayProperty=nameWithType> właściwości <xref:System.IO.TextReader?displayProperty=nameWithType> jest obiektem, który reprezentuje klawiaturę, <xref:System.Console.Out%2A> a wartości właściwości i <xref:System.Console.Error%2A> są obiektami, które reprezentują okno konsoli. Można jednak ustawić te właściwości na strumienie, które nie reprezentują okna konsoli lub klawiatury; na przykład można ustawić te właściwości na strumienie reprezentujące pliki. Aby przekierować strumień standardowego wejścia, wyjścia standardowego lub standardowego błędu, należy wywołać <xref:System.Console.SetIn%2A?displayProperty=nameWithType>odpowiednio metodę, <xref:System.Console.SetOut%2A?displayProperty=nameWithType>, <xref:System.Console.SetError%2A?displayProperty=nameWithType> lub. Operacje we/wy, które używają tych strumieni, są synchronizowane, co oznacza, że wiele wątków może odczytywać i zapisywać strumieniowo. Oznacza to, że metody, które są zwykle asynchroniczne, <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>takie jak, wykonują synchronicznie, jeśli obiekt reprezentuje strumień konsoli.  
  
> [!NOTE]
>  Nie należy używać <xref:System.Console> klasy do wyświetlania danych wyjściowych w aplikacjach nienadzorowanych, takich jak aplikacje serwera. Wywołania metod, takich jak <xref:System.Console.Write%2A?displayProperty=nameWithType> i <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> nie mają efektów w aplikacjach graficznego interfejsu użytkownika.  
  
 <xref:System.Console>elementy członkowskie klasy, które działają normalnie, gdy źródłowy strumień jest kierowany do konsoli programu może zgłosić wyjątek, jeśli strumień jest przekierowywany na przykład do pliku. Program aplikacji może przechwytywać <xref:System.IO.IOException?displayProperty=nameWithType> wyjątki w przypadku przekierowania standardowego strumienia. Można również użyć <xref:System.Console.IsOutputRedirected%2A>właściwości, i <xref:System.Console.IsInputRedirected%2A> <xref:System.Console.IsErrorRedirected%2A> , aby określić, czy strumień standardowy jest <xref:System.IO.IOException?displayProperty=nameWithType> przekierowywany przed wykonaniem operacji, która zgłasza wyjątek.  
  
 Czasami warto jawnie wywołać elementy członkowskie obiektów strumienia reprezentowane przez <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>i <xref:System.Console.Error%2A> właściwości. Na przykład domyślnie <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> Metoda odczytuje dane wejściowe ze standardowego strumienia wejściowego. <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> Podobnie Metoda zapisuje dane w standardowym strumieniu wyjściowym, a po nim następuje domyślny ciąg zakończenia wiersza, który jest znakiem powrotu karetki i wysuwu wiersza ("\r\n"). <xref:System.Console> Jednak Klasa nie zapewnia odpowiedniej metody zapisu danych do strumienia wyjściowego błędu standardowego lub właściwości, aby zmienić ciąg zakończenia wiersza dla danych zapisanych w tym strumieniu.  
  
 Możesz rozwiązać ten problem, ustawiając <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> Właściwość <xref:System.Console.Out%2A> lub <xref:System.Console.Error%2A> właściwości na inny ciąg zakończenia wiersza. Na przykład Poniższa C# instrukcja ustawia ciąg zakończenia wiersza dla standardowego strumienia wyjściowego błędu do dwóch sekwencji powrotu karetki i wysuwu wiersza:  
  
 `Console.Error.NewLine = "\r\n\r\n";`  
  
 Następnie można jawnie wywołać <xref:System.IO.TextWriter.WriteLine%2A> metodę obiektu strumienia wyjściowego błędu, jak w poniższej C# instrukcji:  
  
 `Console.Error.WriteLine();`  
  
<a name="Buffer"></a>   
## <a name="screen-buffer-and-console-window"></a>Bufor ekranu i okno konsoli  
 Dwie ściśle powiązane funkcje konsoli to bufor ekranu i okno konsoli. Tekst jest faktycznie odczytywany lub zapisywana w strumieniach należących do konsoli, ale prawdopodobnie jest odczytywany lub zapisywana w obszarze należącym do konsoli o nazwie bufor ekranu. Bufor ekranu jest atrybutem konsoli i jest zorganizowany jako prostokątna siatka wierszy i kolumn, w których każda sekcja przecięcie siatki lub komórka znaku może zawierać znak. Każdy znak ma swój własny kolor pierwszego planu, a każda komórka znaku ma własny kolor tła.  
  
 Bufor ekranu jest wyświetlany za pomocą prostokątnego regionu o nazwie okno konsoli. Okno konsoli jest innym atrybutem konsoli programu; nie jest to sama sama konsola, która jest oknem systemu operacyjnego. Okno konsoli jest ułożone w wiersze i kolumny, jest mniejsze niż lub równe rozmiarowi buforu ekranu i można je przenieść, aby wyświetlić różne obszary odpowiedniego buforu ekranu. Jeśli bufor ekranu jest większy niż okno konsoli, w konsoli programu automatycznie są wyświetlane paski przewijania, dzięki czemu okno konsoli można zmienić w obszarze buforu ekranu.  
  
 Kursor wskazuje położenie buforu ekranu, w którym tekst jest aktualnie odczytywany lub zapisywana. Kursor może być ukryty lub niewidoczny i można zmienić jego wysokość. Jeśli kursor jest widoczny, pozycja okna konsoli jest przenoszona automatycznie, aby kursor był zawsze w widoku.  
  
 Punkt początkowy współrzędne komórki znaku w buforze ekranu jest górnym lewym rogu, a położenia kursora i okna konsoli są mierzone względem tego źródła. Użyj indeksów opartych na zerach, aby określić pozycje; oznacza to, że należy określić górny wiersz jako wiersz 0 i kolumnę z lewej strony jako kolumnę 0. Maksymalna wartość dla indeksów wierszy i kolumn wynosi <xref:System.Int16.MaxValue?displayProperty=nameWithType>.  
  
<a name="Unicode"></a>   
## <a name="unicode-support-for-the-console"></a>Obsługa standardu Unicode dla konsoli  
 Ogólnie rzecz biorąc, konsola odczytuje dane wejściowe i zapisuje dane wyjściowe przy użyciu bieżącej strony kodowej konsoli, która domyślnie definiuje ustawienia regionalne systemu. Strona kodowa może obsługiwać tylko podzestaw dostępnych znaków Unicode, więc jeśli spróbujesz wyświetlić znaki, które nie są zamapowane przez określoną stronę kodową, konsola nie będzie mogła wyświetlać wszystkich znaków ani ich dokładnie przedstawiać. Poniższy przykład ilustruje ten problem. Próbuje wyświetlić znaki alfabetu cyrylicy od U + 0410 do U + 044F w konsoli programu. W przypadku uruchomienia przykładu w systemie, który używa strony kodowej konsoli 437, każdy znak jest zastępowany znakiem zapytania (?), ponieważ znaki cyrylicy nie są mapowane na znaki na stronie kodowej 437.  
  
 [!code-csharp[System.Console.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/unicode1.cs#1)]
 [!code-vb[System.Console.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/unicode1.vb#1)]  
  
 Oprócz obsługi stron kodowych, <xref:System.Console> Klasa obsługuje kodowanie UTF-8 <xref:System.Text.UTF8Encoding> z klasą. Począwszy od .NET Framework 4,5, <xref:System.Console> Klasa obsługuje również kodowanie UTF-16 <xref:System.Text.UnicodeEncoding> z klasą. Aby wyświetlić znaki Unicode w konsoli programu. <xref:System.Console.OutputEncoding%2A> Właściwość ustawia<xref:System.Text.UTF8Encoding> się na<xref:System.Text.UnicodeEncoding>albo.  
  
 Obsługa znaków Unicode wymaga, aby koder rozpoznaje określony znak Unicode, a także wymaga czcionki, która ma glify potrzebne do renderowania tego znaku. Aby pomyślnie wyświetlić znaki Unicode w konsoli programu, czcionka konsoli musi być ustawiona na czcionkę nierastrową lub TrueType, taką jak Consolas lub Lucida Console. Poniższy przykład pokazuje, jak można programowo zmienić czcionkę z czcionki rastrowej na Lucidę Console.  
  
 [!code-csharp[System.Console.Class.Unsafe#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class.unsafe/cs/setfont1.cs#3)]
 [!code-vb[System.Console.Class.Unsafe#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class.unsafe/vb/setfont1.vb#3)]  
  
 Jednak czcionki TrueType mogą wyświetlać tylko podzbiór symboli. Na przykład czcionka konsoli Lucida wyświetla tylko 643 z około 64 000 dostępnych znaków z U + 0021 do U + FB02. Aby zobaczyć, które znaki są obsługiwane przez określoną czcionkę, Otwórz aplet **czcionki** w panelu sterowania, wybierz opcję **Znajdź znak** i wybierz czcionkę, której zestaw znaków chcesz sprawdzić na liście **czcionek** **mapy znaków** Dział.  
  
 System Windows używa łączenia czcionek do wyświetlania glifów, które nie są dostępne w określonej czcionce. Aby uzyskać informacje o łączeniu czcionki do wyświetlania dodatkowych zestawów znaków, [zobacz Globalizacja krok po kroku: Czcionki](https://go.microsoft.com/fwlink/?LinkId=229111). Czcionki połączone są zdefiniowane w podkluczu HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink rejestru. Każda pozycja skojarzona z tym podkluczem odpowiada nazwie czcionki podstawowej, a jej wartość jest tablicą ciągów, która definiuje pliki czcionek i czcionki połączone z czcionką podstawową. Każdy element członkowski tablicy definiuje połączoną czcionkę i przyjmuje postać *Font-File-Name*i*Font-Name*. W poniższym przykładzie pokazano, jak programowo zdefiniować połączoną czcionkę o nazwie SimSun znalezioną w pliku czcionki o nazwie SimSun. TTC, który wyświetla uproszczone znaki Han.  
  
 [!code-csharp[System.Console.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/fontlink1.cs#2)]
 [!code-vb[System.Console.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/fontlink1.vb#2)]  
  
 Obsługa standardu Unicode dla konsoli programu ma następujące ograniczenia:  
  
-   Kodowanie UTF-32 nie jest obsługiwane. Jedynymi obsługiwanymi kodowaniem Unicode są UTF-8 i UTF-16, które są reprezentowane odpowiednio <xref:System.Text.UTF8Encoding> przez <xref:System.Text.UnicodeEncoding> klasy i.  
  
-   Dane wyjściowe dwukierunkowe nie są obsługiwane.  
  
-   Wyświetlanie znaków poza podstawową płaszczyzną wielojęzyczną (czyli pary zastępczej) nie jest obsługiwane, nawet jeśli są one zdefiniowane w połączonym pliku czcionki.  
  
-   Wyświetlanie znaków w złożonych skryptach nie jest obsługiwane.  
  
-   Łączenie sekwencji znaków (czyli znaków, które składają się z znaku podstawowego i jednego lub więcej łączących znaków) są wyświetlane jako osobne znaki. Aby obejść to ograniczenie, można znormalizować ciąg, który ma być wyświetlany, wywołując <xref:System.String.Normalize%2A?displayProperty=nameWithType> metodę przed wysłaniem danych wyjściowych do konsoli. W poniższym przykładzie ciąg, który zawiera sekwencję znaków łączących u + 0061 u + 0308 jest wyświetlany w konsoli jako dwa znaki, zanim ciąg wyjściowy jest znormalizowany i jako pojedynczy znak po <xref:System.String.Normalize%2A?displayProperty=nameWithType> wywołaniu metody.  
  
     [!code-csharp[System.Console.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/normalize1.cs#5)]
     [!code-vb[System.Console.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/normalize1.vb#5)]  
  
     Należy zauważyć, że normalizacja jest rozwiązaniem wykonalnym tylko wtedy, gdy standard Unicode dla znaku zawiera formularz przedłożony, który odnosi się do konkretnej sekwencji znaków łączącej.  
  
-   Jeśli czcionka zawiera glif dla punktu kodu w obszarze prywatnego użytkowania, ten symbol zostanie wyświetlony. Jednak ze względu na to, że znaki w prywatnym obszarze użytkowania są specyficzne dla aplikacji, może to nie być oczekiwany symbol.  
  
 Poniższy przykład wyświetla zakres znaków Unicode do konsoli. W przykładzie są akceptowane trzy parametry wiersza polecenia: początek zakresu do wyświetlenia, koniec zakresu, który ma być wyświetlany, oraz to, czy ma być używane bieżące kodowanie konsoli (`false`) czy kodowanie UTF-16 (`true`). Przyjęto założenie, że konsola używa czcionki TrueType.  
  
 [!code-csharp[System.Console.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/example3.cs#4)]
 [!code-vb[System.Console.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/example3.vb#4)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a>Typowe operacje  
 <xref:System.Console> Klasa zawiera następujące metody odczytywania danych wejściowych konsoli i pisania danych wyjściowych konsoli:  
  
-   Przeciążenia <xref:System.Console.ReadKey%2A> metody odczytają pojedynczy znak.  
  
-   <xref:System.Console.ReadLine%2A> Metoda odczytuje cały wiersz danych wejściowych.  
  
-   Przeciążenia <xref:System.Console.Write%2A> metody konwertują wystąpienie typu wartości, tablicę znaków lub zestaw obiektów na sformatowany lub niesformatowany ciąg, a następnie napisz ten ciąg do konsoli.  
  
-   Równoległy zestaw <xref:System.Console.WriteLine%2A> metod przeciążeń wyprowadza ten sam ciąg <xref:System.Console.Write%2A> jako przeciążenia, ale również dodaje ciąg zakończenia wiersza.  
  
 <xref:System.Console> Klasa zawiera również metody i właściwości, które umożliwiają wykonywanie następujących operacji:  
  
-   Pobierz lub ustaw rozmiar buforu ekranu. Właściwości <xref:System.Console.BufferHeight%2A> <xref:System.Console.SetBufferSize%2A> i <xref:System.Console.BufferWidth%2A> umożliwiają pobieranie lub ustawianie odpowiednio wysokości i szerokości bufora, a Metoda pozwala ustawić rozmiar buforu w wywołaniu pojedynczej metody.  
  
-   Pobierz lub ustaw rozmiar okna konsoli. Właściwości <xref:System.Console.WindowHeight%2A> <xref:System.Console.SetWindowSize%2A> i <xref:System.Console.WindowWidth%2A> umożliwiają pobieranie lub ustawianie odpowiednio wysokooci i szerokości okna, a Metoda pozwala ustawić rozmiar okna w jednym wywołaniu metody.  
  
-   Pobierz lub ustaw rozmiar kursora. <xref:System.Console.CursorSize%2A> Właściwość określa wysokość kursora w komórce znaku.  
  
-   Pobierz lub Ustaw położenie okna konsoli względem buforu ekranu. Właściwości <xref:System.Console.WindowTop%2A> <xref:System.Console.SetWindowPosition%2A> i <xref:System.Console.WindowLeft%2A> umożliwiają pobieranie lub Ustawianie górnego wiersza i kolumny z lewej strony buforu ekranu, które pojawiają się w oknie konsoli, a Metoda pozwala ustawić te wartości w jednym wywołaniu metody.  
  
-   Pobierz lub Ustaw położenie kursora przez pobranie lub ustawienie <xref:System.Console.CursorTop%2A> właściwości i <xref:System.Console.CursorLeft%2A> albo ustawienie pozycji kursora przez wywołanie <xref:System.Console.SetCursorPosition%2A> metody.  
  
-   Przenieś lub Wyczyść dane w buforze ekranu, wywołując <xref:System.Console.MoveBufferArea%2A> metodę lub. <xref:System.Console.Clear%2A>  
  
-   Pobierz lub Ustaw kolory pierwszego planu i tła przy użyciu <xref:System.Console.ForegroundColor%2A> właściwości i <xref:System.Console.BackgroundColor%2A> lub zresetuj tło i pierwszy plan do <xref:System.Console.ResetColor%2A> domyślnych kolorów, wywołując metodę.  
  
-   Odtwórz dźwięk sygnału dźwiękowego przez prelegenta konsoli, wywołując <xref:System.Console.Beep%2A> metodę.  
  
<a name="Core"></a>   
## <a name="includenetcoreincludesnet-core-mdmd-notes"></a>[!INCLUDE[net_core](~/includes/net-core-md.md)]O  
 W .NET Framework na pulpicie <xref:System.Console> Klasa używa kodowania zwróconego przez `GetConsoleCP` i `GetConsoleOutputCP`, który zazwyczaj jest kodowaniem strony kodowej. Na przykład kod, w systemach, których kultura jest angielski (Stany Zjednoczone), strona kodowa 437 jest kodowaniem, które jest używane domyślnie. [!INCLUDE[net_core](~/includes/net-core-md.md)] Jednak mogą być dostępne tylko ograniczone podzbiór tych kodowań. W takim przypadku <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> jest używana jako domyślne kodowanie konsoli programu.  
  
 Jeśli aplikacja zależy od określonych kodowań stron kodowych, można nadal udostępnić je, wykonując następujące czynności *przed* wywołaniem jakichkolwiek <xref:System.Console> metod:  
  
1.  Dodaj odwołanie do zestawu System. Text. Encoding. CodePage. dll do projektu.  
  
2.  <xref:System.Text.EncodingProvider> Pobierz obiekt<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> z właściwości.  
  
3.  <xref:System.Text.EncodingProvider> Przekaż obiekt<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> do metody, aby umożliwić dostęp do dodatkowych kodowań obsługiwanych przez dostawcę kodowania.  
  
 Następnie Klasa automatycznie użyje domyślnego kodowania systemowego zamiast UTF8, pod warunkiem, że dostawca kodowania został zarejestrowany przed wywołaniem jakichkolwiek <xref:System.Console> metod wyjściowych. <xref:System.Console>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób odczytywania danych z i zapisywania danych w standardowym strumieniu danych wejściowych i wyjściowych. Należy zauważyć, że te strumienie mogą być przekierowywane <xref:System.Console.SetOut%2A> przy użyciu <xref:System.Console.SetIn%2A> metod i.  
  
 [!code-cpp[Classic Console Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Console Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Console Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Console Example/CS/source.cs#1)]
 [!code-vb[Classic Console Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Console Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczny wątkowo.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BackgroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor BackgroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : ConsoleColor with get, set" Usage="System.Console.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła konsoli.</summary>
        <value>Wartość, która określa kolor tła konsoli programu; oznacza to, że kolor pojawia się za każdym znakiem. Wartość domyślna to Black.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiana <xref:System.Console.BackgroundColor%2A> właściwości ma wpływ tylko na dane wyjściowe, które są zapisywane do poszczególnych komórek znaków po zmianie koloru tła. Aby zmienić kolor tła okna konsoli jako całości, ustaw <xref:System.Console.BackgroundColor%2A> Właściwość i <xref:System.Console.Clear%2A> Wywołaj metodę. Poniższy przykład stanowi ilustrację.  
  
 [!code-csharp[System.Console.BackgroundColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.backgroundcolor/cs/backgroundcolor1.cs#1)]
 [!code-vb[System.Console.BackgroundColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.backgroundcolor/vb/backgroundcolor1.vb#1)]  
  
 Operacja pobrania dla aplikacji opartej na systemie Windows, w której konsola nie istnieje, zwraca wartość <xref:System.ConsoleColor.Black?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje wartości <xref:System.ConsoleColor> wyliczenia do tablicy i zapisuje bieżące wartości <xref:System.Console.BackgroundColor%2A> właściwości i <xref:System.Console.ForegroundColor%2A> do zmiennych. Następnie zmienia kolor pierwszego planu na każdy kolor w <xref:System.ConsoleColor> wyliczeniu, z wyjątkiem koloru, który jest zgodny z bieżącym tłem, i zmienia kolor tła na każdy kolor <xref:System.ConsoleColor> w wyliczeniu, z wyjątkiem koloru zgodnego z bieżący plan. (Jeśli kolor pierwszego planu jest taki sam jak kolor tła, tekst nie jest widoczny). Na koniec wywołuje <xref:System.Console.ResetColor%2A> metodę w celu przywrócenia oryginalnych kolorów konsoli.  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolor określony w operacji zestawu nie jest prawidłowym elementem członkowskim <see cref="T:System.ConsoleColor" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Beep">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Odtwarza dźwięk sygnału dźwiękowego przez prelegenta konsoli.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep();" />
      <MemberSignature Language="F#" Value="static member Beep : unit -&gt; unit" Usage="System.Console.Beep " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odtwarza dźwięk sygnału dźwiękowego przez prelegenta konsoli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie sygnał dźwiękowy jest odtwarzany z częstotliwością 800 Hz przez czas 200 milisekund.  
  
> [!NOTE]
>  <xref:System.Console.Beep%2A> Metoda nie jest obsługiwana w 64-bitowych wersjach systemu Windows Vista i Windows XP.  
  
 <xref:System.Console.Beep%2A>zawija wywołanie [funkcji sygnałów dźwiękowych](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)systemu Windows. Bez <xref:System.Console.Beep%2A> względu na to, czy program generuje dźwięk w wersjach systemu Windows przed systemem Windows 7, zależy od obecności mikroukładu czasomierza przedziału 8254. Począwszy od systemu Windows 7, zależy to od domyślnego urządzenia dźwiękowego.  
  
   
  
## Examples  
 Poniższy przykład demonstruje <xref:System.Console.Beep%2A> metodę. Przykład akceptuje liczbę z przenoszącą od 1 do 9 jako argument wiersza polecenia i odtwarza dźwięk, ile razy.  
  
 [!code-cpp[console.beep#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep/CPP/beep.cpp#1)]
 [!code-csharp[console.beep#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep/CS/beep.cs#1)]
 [!code-vb[console.beep#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep/VB/beep.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.HostProtectionException">Ta metoda została wykonana na serwerze, takim jak SQL Server, który nie zezwala na dostęp do interfejsu użytkownika.</exception>
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep (int frequency, int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep(int32 frequency, int32 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep (frequency As Integer, duration As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep(int frequency, int duration);" />
      <MemberSignature Language="F#" Value="static member Beep : int * int -&gt; unit" Usage="System.Console.Beep (frequency, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frequency" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="duration" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="frequency">Częstotliwość sygnału dźwiękowego z zakresu od 37 do 32767 Hz.</param>
        <param name="duration">Czas trwania sygnału dźwiękowego mierzony w milisekundach.</param>
        <summary>Odtwarza dźwięk sygnału dźwiękowego z określoną częstotliwością i czasem trwania przez prelegenta konsoli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Console.Beep%2A>zawija wywołanie [funkcji sygnałów dźwiękowych](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)systemu Windows. Bez <xref:System.Console.Beep%2A> względu na to, czy program generuje dźwięk w wersjach systemu Windows przed systemem Windows 7, zależy od obecności mikroukładu czasomierza przedziału 8254. Począwszy od systemu Windows 7, zależy to od domyślnego urządzenia dźwiękowego.  
  
> [!NOTE]
>  <xref:System.Console.Beep%2A> Metoda nie jest obsługiwana w 64-bitowych wersjach systemu Windows Vista i Windows XP.  
  
   
  
## Examples  
 Ten przykład ilustruje <xref:System.Console.Beep%2A> metodę, odtwarzając pierwsze notatki z utworu przez prelegenta konsoli.  
  
 [!code-cpp[console.beep2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep2/CPP/b2.cpp#1)]
 [!code-csharp[console.beep2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep2/CS/b2.cs#1)]
 [!code-vb[console.beep2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep2/VB/b2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="frequency" />jest mniejsza niż 37 lub więcej niż 32767 Hz.  
  
—lub— 
 <paramref name="duration" />jest mniejsze lub równe zero.</exception>
        <exception cref="T:System.Security.HostProtectionException">Ta metoda została wykonana na serwerze, takim jak SQL Server, który nie zezwala na dostęp do konsoli.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Bieżący system operacyjny nie jest systemem Windows.</exception>
      </Docs>
    </Member>
    <Member MemberName="BufferHeight">
      <MemberSignature Language="C#" Value="public static int BufferHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferHeight : int with get, set" Usage="System.Console.BufferHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wysokość obszaru bufora.</summary>
        <value>Bieżąca wysokość w wierszach obszaru bufora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa liczbę wierszy (lub wierszy) przechowywanych w buforze, do którego dostęp jest uzyskiwany za pomocą okna trybu konsoli. Z kolei <xref:System.Console.WindowHeight%2A> Właściwość definiuje liczbę wierszy, które są wyświetlane w oknie konsoli w dowolnym konkretnym czasie. Jeśli liczba wierszy rzeczywiście zapisywana w buforze przekracza liczbę wierszy zdefiniowanych przez <xref:System.Console.WindowHeight%2A> właściwość, okno można przewijać w pionie, tak aby była wyświetlana ciągła liczba wierszy, które są równe <xref:System.Console.WindowHeight%2A> właściwości i znajdują się w lokalizacji gdziekolwiek w buforze.  
  
 Jeśli operacja ustawiania zmniejsza wartość <xref:System.Console.BufferHeight%2A> właściwości, górne wiersze są usuwane. Na przykład, jeśli liczba wierszy zostanie zmniejszona z 300 do 250, wiersze od 0 do 49 zostaną usunięte, a istniejące wiersze 50 za pośrednictwem 299 stają się wierszami od 0 do 249.  
  
   
  
## Examples  
 Ten przykład ilustruje <xref:System.Console.BufferHeight%2A> właściwości i <xref:System.Console.BufferWidth%2A> . Przykład raportuje wymiary okna systemu operacyjnego do rozmiaru buforu 300 wierszy i 85 kolumn.  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość w operacji zestawu jest mniejsza lub równa zero.  
  
—lub— 
Wartość w operacji zestawu jest większa lub równa <see cref="F:System.Int16.MaxValue" />.  
  
—lub— 
Wartość w operacji zestawu jest mniejsza niż <see cref="P:System.Console.WindowTop" />.  +  <see cref="P:System.Console.WindowHeight" /></exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Operacja ustawiania jest wywoływana w systemie operacyjnym innym niż Windows.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BufferWidth">
      <MemberSignature Language="C#" Value="public static int BufferWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferWidth : int with get, set" Usage="System.Console.BufferWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szerokość obszaru bufora.</summary>
        <value>Bieżąca szerokość w kolumnach obszaru bufora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli operacja ustawiania zmniejsza wartość <xref:System.Console.BufferWidth%2A> właściwości, kolumny skrajne prawo są usuwane. Na przykład, jeśli liczba kolumn jest ograniczona od 80 do 60, kolumny 60 za pośrednictwem 79 każdego wiersza są usuwane.  
  
   
  
## Examples  
 Ten przykład ilustruje <xref:System.Console.BufferHeight%2A> właściwości i <xref:System.Console.BufferWidth%2A> . Przykład raportuje wymiary okna systemu operacyjnego do rozmiaru buforu 300 wierszy i 85 kolumn.  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość w operacji zestawu jest mniejsza lub równa zero.  
  
—lub— 
Wartość w operacji zestawu jest większa lub równa <see cref="F:System.Int16.MaxValue" />.  
  
—lub— 
Wartość w operacji zestawu jest mniejsza niż <see cref="P:System.Console.WindowLeft" />.  +  <see cref="P:System.Console.WindowWidth" /></exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Operacja ustawiania jest wywoływana w systemie operacyjnym innym niż Windows.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CancelKeyPress">
      <MemberSignature Language="C#" Value="public static event ConsoleCancelEventHandler CancelKeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ConsoleCancelEventHandler CancelKeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Console.CancelKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CancelKeyPress As ConsoleCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event ConsoleCancelEventHandler ^ CancelKeyPress;" />
      <MemberSignature Language="F#" Value="member this.CancelKeyPress : ConsoleCancelEventHandler " Usage="member this.CancelKeyPress : System.ConsoleCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, <see cref="F:System.ConsoleModifiers.Control" /> gdy klawisz modyfikujący (Ctrl) i <see cref="F:System.ConsoleKey.C" /> klawisz konsoli (C) lub klawisz Break są naciśnięte jednocześnie (Ctrl + C lub Ctrl + Break).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest używane w połączeniu z <xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType> i <xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType>. <xref:System.Console.CancelKeyPress> Zdarzenie umożliwia aplikacji konsolowej przechwycenie sygnału Ctrl + C, aby program obsługi zdarzeń mógł zdecydować, czy kontynuować wykonywanie czy zakończenie. Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 Gdy użytkownik naciśnie kombinację klawiszy CTRL + C lub Ctrl + Break, <xref:System.Console.CancelKeyPress> zdarzenie jest wyzwalane, a program obsługi <xref:System.ConsoleCancelEventHandler> zdarzeń aplikacji jest wykonywany. Program obsługi zdarzeń przeszedł do <xref:System.ConsoleCancelEventArgs> obiektu, który ma dwie przydatne właściwości:  
  
-   <xref:System.ConsoleCancelEventArgs.SpecialKey%2A>, która pozwala określić, czy program obsługi został wywołany w wyniku naciśnięcia kombinacji klawiszy CTRL + C (wartość właściwości to <xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType>) lub Ctrl + Break (wartość właściwości to <xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType>).  
  
-   <xref:System.ConsoleCancelEventArgs.Cancel%2A>, co pozwala określić, jak aplikacja powinna odpowiedzieć użytkownikowi, naciskając klawisze CTRL + C lub Ctrl + Break. Domyślnie <xref:System.ConsoleCancelEventArgs.Cancel%2A> właściwość jest `false`, co powoduje przerwanie wykonywania programu po zakończeniu obsługi zdarzeń. Zmiana jego właściwości na `true` określa, że aplikacja ma nadal działać.  
  
> [!TIP]
>  Jeśli aplikacja ma proste wymagania, możesz użyć <xref:System.Console.TreatControlCAsInput%2A> właściwości zamiast tego zdarzenia. Ustawiając tę właściwość na `false`, można upewnić się, że aplikacja zawsze kończy działanie, jeśli użytkownik naciśnie klawisze CTRL + C. Ustawiając je na `true`, można upewnić się, że naciśnięcie klawiszy CTRL + C nie spowoduje zakończenia aplikacji.  
  
 Procedura obsługi zdarzeń dla tego zdarzenia jest wykonywana w wątku puli wątków.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób <xref:System.Console.CancelKeyPress> użycia zdarzenia. Po naciśnięciu klawiszy CTRL + C operacja odczytu zostanie przerwana i `myHandler` zostanie wywołana procedura obsługi zdarzeń. Po wprowadzeniu do programu obsługi <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> zdarzeń właściwość jest `false`, co oznacza, że bieżący proces zakończy się po zakończeniu obsługi zdarzeń. Jednak program obsługi zdarzeń ustawia <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> właściwość na `true`, co oznacza, że proces nie zostanie zakończony i operacja odczytu zostanie wznowiona.  
  
 [!code-cpp[console.cancelkeypress#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cancelkeypress/cpp/ckp.cpp#1)]
 [!code-csharp[console.cancelkeypress#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cancelkeypress/cs/ckp.cs#1)]
 [!code-vb[console.cancelkeypress#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cancelkeypress/vb/ckp.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="T:System.ConsoleCancelEventArgs" />
        <altmember cref="T:System.ConsoleCancelEventHandler" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public static bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CapsLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CapsLock : bool" Usage="System.Console.CapsLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy przełącznik klawiatury Caps Lock jest włączony, czy wyłączony.</summary>
        <value><see langword="true" />Jeśli Caps Lock jest włączona; <see langword="false" /> Jeśli Caps Lock jest wyłączone.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">Operacja get jest wywoływana w systemie operacyjnym innym niż Windows.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Console.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści bufor konsoli i odpowiednie okno konsoli zawierające informacje o wyświetlaniu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użycie metody jest równoważną wywoływaniem polecenia systemu `cls` MS-DOS w oknie wiersza polecenia. <xref:System.Console.Clear%2A> <xref:System.Console.Clear%2A> Gdy metoda jest wywoływana, kursor automatycznie przewija do lewego górnego rogu okna, a zawartość buforu ekranu jest ustawiana na puste przy użyciu bieżących kolorów tła pierwszego planu.  
  
> [!NOTE]
>  Podjęto próbę wywołania <xref:System.Console.Clear%2A> metody, gdy dane wyjściowe aplikacji konsoli są przekierowywane do pliku <xref:System.IO.IOException>zgłasza. Aby tego uniknąć, zawsze Zawijaj wywołanie <xref:System.Console.Clear%2A> metody `try`w...`catch` odblokowan.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Console.Clear%2A> metodę czyszczenia konsoli przed wykonaniem pętli, program wyświetli użytkownikowi polecenie, aby wybrać kolor pierwszego planu i tła i wprowadzić ciąg do wyświetlenia. Jeśli użytkownik zdecyduje się nie zamknąć programu, oryginalny kolor pierwszego planu i tła konsoli są przywracane, a <xref:System.Console.Clear%2A> Metoda zostanie wywołana ponownie przed ponownym wykonaniem pętli.  
  
 [!code-csharp[System.Console.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.clear/cs/clear1.cs#1)]
 [!code-vb[System.Console.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.clear/vb/clear1.vb#1)]  
  
 Przykład polega na `GetKeyPress` metodzie, aby zweryfikować wybór pierwszego planu i koloru tła przez użytkownika.  
  
 Ten <xref:System.Console.CursorLeft%2A> przykład ilustruje <xref:System.Console.CursorTop%2A> właściwości<xref:System.Console.SetCursorPosition%2A>iimetody. <xref:System.Console.Clear%2A> Przykład ustawia położenie kursora, który określa miejsce następnego zapisu, aby narysować 5 znaków o 5 znaków przy użyciu kombinacji ciągów "+", "&#124;" i "-". Należy zauważyć, że prostokąt można narysować za pomocą mniejszej liczby czynności, używając kombinacji innych ciągów.  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
      </Docs>
    </Member>
    <Member MemberName="CursorLeft">
      <MemberSignature Language="C#" Value="public static int CursorLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorLeft { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorLeft : int with get, set" Usage="System.Console.CursorLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia położenie kolumny kursora w obszarze buforu.</summary>
        <value>Bieżąca pozycja w kolumnach, w której znajduje się kursor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ten <xref:System.Console.CursorLeft%2A> przykład ilustruje <xref:System.Console.CursorTop%2A> właściwości<xref:System.Console.SetCursorPosition%2A>iimetody. <xref:System.Console.Clear%2A> Przykład ustawia położenie kursora, który określa miejsce następnego zapisu, aby narysować 5 znaków o 5 znaków przy użyciu kombinacji ciągów "+", "&#124;" i "-". Należy zauważyć, że prostokąt można narysować za pomocą mniejszej liczby czynności, używając kombinacji innych ciągów.  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość w operacji zestawu jest mniejsza od zera.  
  
—lub— 
Wartość w operacji zestawu jest większa lub równa <see cref="P:System.Console.BufferWidth" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CursorSize">
      <MemberSignature Language="C#" Value="public static int CursorSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorSize" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorSize : int with get, set" Usage="System.Console.CursorSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wysokość kursora w komórce znaku.</summary>
        <value>Rozmiar kursora wyrażony jako procent wysokości komórki znakowej. Wartość właściwości mieści się w zakresie od 1 do 100.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wygląd kursora różni się od linii poziomej w dolnej części komórki, gdy właściwość ma wartość 1, aby całkowicie wypełniać komórkę, gdy wartość właściwości to 100.  
  
   
  
## Examples  
 Ten przykład ilustruje <xref:System.Console.CursorSize%2A> właściwość. Przykład zwiększa rozmiar kursora przy każdym naciśnięciu klawisza konsoli, a następnie przywraca oryginalny rozmiar kursora przed zakończeniem.  
  
 [!code-cpp[console.cursorsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorsize/CPP/csize.cpp#1)]
 [!code-csharp[console.cursorsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorsize/CS/csize.cs#1)]
 [!code-vb[console.cursorsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorsize/VB/csize.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona w operacji zestawu jest mniejsza niż 1 lub większa niż 100.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Operacja ustawiania jest wywoływana w systemie operacyjnym innym niż Windows.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CursorTop">
      <MemberSignature Language="C#" Value="public static int CursorTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorTop { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorTop : int with get, set" Usage="System.Console.CursorTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia położenie wiersza kursora w obszarze buforu.</summary>
        <value>Bieżąca pozycja w wierszach kursora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ten <xref:System.Console.CursorLeft%2A> przykład ilustruje <xref:System.Console.CursorTop%2A> właściwości<xref:System.Console.SetCursorPosition%2A>iimetody. <xref:System.Console.Clear%2A> Przykład ustawia położenie kursora, który określa miejsce następnego zapisu, aby narysować 5 znaków o 5 znaków przy użyciu kombinacji ciągów "+", "&#124;" i "-". Należy zauważyć, że prostokąt można narysować za pomocą mniejszej liczby czynności, używając kombinacji innych ciągów.  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość w operacji zestawu jest mniejsza od zera.  
  
—lub— 
Wartość w operacji zestawu jest większa lub równa <see cref="P:System.Console.BufferHeight" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CursorVisible">
      <MemberSignature Language="C#" Value="public static bool CursorVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CursorVisible" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorVisible" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CursorVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CursorVisible : bool with get, set" Usage="System.Console.CursorVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kursor jest widoczny.</summary>
        <value><see langword="true" />Jeśli kursor jest widoczny; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ten przykład ilustruje <xref:System.Console.CursorVisible%2A> właściwość. W przykładzie widać, że kursor jest widoczny, jeśli pierwsza kolumna danych wejściowych jest znakiem "+" lub jest niewidoczna, jeśli dane wejściowe są znakiem "-".  
  
 [!code-cpp[console.cursorvis#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorvis/CPP/vis.cpp#1)]
 [!code-csharp[console.cursorvis#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorvis/CS/vis.cs#1)]
 [!code-vb[console.cursorvis#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorvis/VB/vis.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Operacja get jest wywoływana w systemie operacyjnym innym niż Windows.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Error" />
      <MemberSignature Language="DocId" Value="P:System.Console.Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Error As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Error { System::IO::TextWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Error : System.IO.TextWriter" Usage="System.Console.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera strumień wyjściowy błędu standardowego.</summary>
        <value><see cref="T:System.IO.TextWriter" /> Reprezentujący standardowy strumień wyjściowy błędu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten standardowy strumień błędów jest domyślnie ustawiany na konsolę. Można ją ustawić na inny strumień przy użyciu <xref:System.Console.SetError%2A> metody. Po przekierowaniu standardowego strumienia błędów można go odzyskać, wywołując <xref:System.Console.OpenStandardError%2A> metodę.  
  
 W aplikacjach konsolowych, których informacje wyjściowe są często przekierowywane do pliku, można użyć standardowego strumienia błędów dostępnego za pomocą <xref:System.Console.Error%2A> właściwości, aby wyświetlić informacje w konsoli nawet w przypadku przekierowania danych wyjściowych. Poniższy przykład wyświetla tabele produktów dla 10 liczb jednocześnie, rozpoczynając od 1. Po każdym zbiorze 10 cyfr <xref:System.Console.Error%2A> właściwość jest używana do poproszenia użytkownika o to, czy ma być wyświetlany następny zestaw. Jeśli standardowe dane wyjściowe są przekierowywane do pliku, użytkownik jest nadal pytany, czy procedura powinna generować następny zestaw produktów.  
  
 [!code-csharp[System.Console.Error#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.error/cs/error1.cs#1)]
 [!code-vb[System.Console.Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.error/vb/error1.vb#1)]  
  
   
  
## Examples  
 Poniższy przykład jest narzędziem wiersza polecenia o nazwie ExpandTabs, które zastępuje znaki tabulacji w pliku tekstowym zawierającym cztery spacje, wartość zdefiniowaną `tabSize` przez zmienną. Przekierowuje do plików standardowe strumienie danych wejściowych i wyjściowych, ale używa <xref:System.Console.Error%2A> właściwości do zapisania standardowego strumienia błędów w konsoli programu. Można go uruchomić z poziomu wiersza polecenia, podając nazwę pliku, który zawiera znaki tabulacji i nazwę pliku wyjściowego.  
  
 [!code-cpp[Console-EXPANDTABSEX#1](~/samples/snippets/cpp/VS_Snippets_CLR/Console-EXPANDTABSEX/CPP/expandtabsex.cpp#1)]
 [!code-csharp[Console-EXPANDTABSEX#1](~/samples/snippets/csharp/VS_Snippets_CLR/Console-EXPANDTABSEX/CS/expandtabsex.cs#1)]
 [!code-vb[Console-EXPANDTABSEX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Console-EXPANDTABSEX/VB/expandtabsex.vb#1)]  
  
 Poniższy przykład to prosta przeglądarka plików tekstowych, która wyświetla zawartość jednego lub więcej plików tekstowych w konsoli programu. Jeśli nie ma żadnych argumentów wiersza polecenia lub jeśli jakiekolwiek pliki przekazane jako argumenty wiersza polecenia nie istnieją, przykład wywołuje <xref:System.Console.SetError%2A> metodę w celu przekierowania informacji o błędach do pliku, <xref:System.Console.OpenStandardError%2A> wywołuje metodę w procesie ponownego uzyskania błędu standardowego przesyła strumieniowo i wskazuje, że informacje o błędzie zostały zazapisywane do pliku.  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 Należy pamiętać, <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> że właściwość jest ustawiona `true` na wartość przed ponownym uzyskaniem strumienia błędu. Dzięki temu dane wyjściowe będą wysyłane do konsoli bezpośrednio, a nie buforowane.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ForegroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor ForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor ForegroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.ForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ForegroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor ForegroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberSignature Language="F#" Value="member this.ForegroundColor : ConsoleColor with get, set" Usage="System.Console.ForegroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu konsoli.</summary>
        <value>A <see cref="T:System.ConsoleColor" /> , który określa kolor pierwszego planu konsoli, czyli kolor każdego znaku, który jest wyświetlany. Wartość domyślna to szary.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Operacja pobrania dla aplikacji opartej na systemie Windows, w której konsola nie istnieje, zwraca wartość <xref:System.ConsoleColor.Gray>.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy kolor tła konsoli jest czarny i, jeśli jest, zmienia kolor tła na czerwony i kolor pierwszego planu na czarny.  
  
 [!code-csharp[System.ConsoleColor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/Example2.cs#2)] 
 [!code-vb[System.ConsoleColor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/Example2.vb#2)]  
  
 Poniższy przykład zapisuje wartości <xref:System.ConsoleColor> wyliczenia do tablicy i zapisuje bieżące wartości <xref:System.Console.BackgroundColor%2A> właściwości i <xref:System.Console.ForegroundColor%2A> do zmiennych. Następnie zmienia kolor pierwszego planu na każdy kolor w <xref:System.ConsoleColor> wyliczeniu, z wyjątkiem koloru, który jest zgodny z bieżącym tłem, i zmienia kolor tła na każdy kolor <xref:System.ConsoleColor> w wyliczeniu, z wyjątkiem koloru zgodnego z bieżący plan. (Jeśli kolor pierwszego planu jest taki sam jak kolor tła, tekst nie jest widoczny). Na koniec wywołuje <xref:System.Console.ResetColor%2A> metodę w celu przywrócenia oryginalnych kolorów konsoli.  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolor określony w operacji zestawu nie jest prawidłowym elementem członkowskim <see cref="T:System.ConsoleColor" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="In">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader In { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextReader In" />
      <MemberSignature Language="DocId" Value="P:System.Console.In" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property In As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextReader ^ In { System::IO::TextReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.In : System.IO.TextReader" Usage="System.Console.In" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera standardowy strumień wejściowy.</summary>
        <value><see cref="T:System.IO.TextReader" /> Reprezentujący standardowy strumień wejściowy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest domyślnie ustawiona na standardowy strumień wejściowy. Tę właściwość można ustawić na inny strumień przy użyciu <xref:System.Console.SetIn%2A> metody.  
  
 Operacje odczytu w standardowym strumieniu wejściowym są wykonywane synchronicznie. Oznacza to, że są one blokowane do momentu ukończenia określonej operacji odczytu. Jest to prawdziwe, nawet jeśli Metoda asynchroniczna, taka <xref:System.IO.TextReader.ReadLineAsync%2A>jak, jest wywoływana <xref:System.IO.TextReader> dla obiektu zwróconego przez <xref:System.Console.In%2A> właściwość.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie `In` właściwości.  
  
 [!code-cpp[consolein#1](~/samples/snippets/cpp/VS_Snippets_CLR/consolein/CPP/consolein.cpp#1)]
 [!code-csharp[consolein#1](~/samples/snippets/csharp/VS_Snippets_CLR/consolein/CS/consolein.cs#1)]
 [!code-vb[consolein#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/consolein/VB/consolein.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Console.OpenStandardInput" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="InputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding InputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding InputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.InputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property InputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ InputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InputEncoding : System.Text.Encoding with get, set" Usage="System.Console.InputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kodowanie używane przez konsolę do odczytu danych wejściowych.</summary>
        <value>Kodowanie używane do odczytywania danych wejściowych konsoli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konsola używa kodowania danych wejściowych do tłumaczenia danych wejściowych z klawiatury do odpowiedniego znaku. Kodowanie danych wejściowych obejmuje stronę kodową, która mapuje kody znaków klawiatury 256 na poszczególne znaki. Różne strony kodowe zawierają różne znaki specjalne, zwykle dostosowane do języka lub grupy języków.  
  
 Począwszy od, operacja pobrania właściwości może zwrócić buforowaną wartość zamiast bieżącego kodowania danych wejściowych konsoli. [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] Taka sytuacja może <xref:System.Console.InputEncoding%2A> wystąpić, jeśli wartość właściwości jest modyfikowana przez niektóre metody inne niż przypisanie <xref:System.Console.InputEncoding%2A> do właściwości, takie jak wywołanie funkcji `chcp` systemu Windows `SetConsoleCP` lub użycie polecenia ze skryptu programu PowerShell.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość właściwości w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas wykonywania tej operacji.</exception>
        <exception cref="T:System.Security.SecurityException">Aplikacja nie ma uprawnień do wykonania tej operacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do odczytu i zapisu w oknach najwyższego poziomu i w podsystemach Windows. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsErrorRedirected">
      <MemberSignature Language="C#" Value="public static bool IsErrorRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsErrorRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsErrorRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsErrorRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsErrorRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsErrorRedirected : bool" Usage="System.Console.IsErrorRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy strumień wyjściowy błędu został przekierowany ze standardowego strumienia błędów.</summary>
        <value><see langword="true" />Jeśli wynik błędu zostanie przekierowany; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="IsInputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsInputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsInputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInputRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputRedirected : bool" Usage="System.Console.IsInputRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dane wejściowe zostały przekierowane ze standardowego strumienia wejściowego.</summary>
        <value><see langword="true" />Jeśli dane wejściowe są przekierowywane; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
        <altmember cref="M:System.Console.OpenStandardInput" />
      </Docs>
    </Member>
    <Member MemberName="IsOutputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsOutputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsOutputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsOutputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsOutputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsOutputRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutputRedirected : bool" Usage="System.Console.IsOutputRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dane wyjściowe zostały przekierowane ze standardowego strumienia wyjściowego.</summary>
        <value><see langword="true" />Jeśli dane wyjściowe są przekierowywane; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="KeyAvailable">
      <MemberSignature Language="C#" Value="public static bool KeyAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeyAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Console.KeyAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KeyAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeyAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyAvailable : bool" Usage="System.Console.KeyAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy naciśnięcie klawisza jest dostępne w strumieniu wejściowym.</summary>
        <value><see langword="true" />Jeśli naciśnięcie klawisza jest dostępne; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest zwracana natychmiast; oznacza to, <xref:System.Console.KeyAvailable%2A> że właściwość nie blokuje danych wejściowych do momentu, gdy klawisz nie będzie dostępny.  
  
 Użyj właściwości w połączeniu z <xref:System.Console.ReadKey%2A> tylko metodą, a nie z <xref:System.Console.Read%2A> lub <xref:System.Console.ReadLine%2A> metodami. <xref:System.Console.KeyAvailable%2A>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Console.KeyAvailable%2A> właściwości, aby utworzyć pętlę, która jest uruchamiana do momentu naciśnięcia klawisza.  
  
 [!code-cpp[console.keyavailable#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.keyavailable/CPP/ka.cpp#1)]
 [!code-csharp[console.keyavailable#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.keyavailable/CS/ka.cs#1)]
 [!code-vb[console.keyavailable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.keyavailable/VB/ka.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.InvalidOperationException">Standardowe dane wejściowe są przekierowywane do pliku zamiast z klawiatury.</exception>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowHeight">
      <MemberSignature Language="C#" Value="public static int LargestWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LargestWindowHeight : int" Usage="System.Console.LargestWindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera największą możliwą liczbę wierszy okna konsoli na podstawie bieżącej rozdzielczości czcionki i ekranu.</summary>
        <value>Wysokość największego możliwego okna konsoli mierzona w wierszach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowWidth">
      <MemberSignature Language="C#" Value="public static int LargestWindowWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LargestWindowWidth : int" Usage="System.Console.LargestWindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera największą możliwą liczbę kolumn okna konsoli na podstawie bieżącej rozdzielczości czcionki i ekranu.</summary>
        <value>Szerokość największego możliwego okna konsoli mierzona w kolumnach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveBufferArea">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kopiuje określony obszar źródłowy buforu ekranu do określonego obszaru docelowego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="F#" Value="static member MoveBufferArea : int * int * int * int * int * int -&gt; unit" Usage="System.Console.MoveBufferArea (sourceLeft, sourceTop, sourceWidth, sourceHeight, targetLeft, targetTop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTop" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceWidth" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceHeight" Type="System.Int32" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetLeft" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetTop" Type="System.Int32" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceLeft">Kolumna z lewej strony obszaru źródłowego.</param>
        <param name="sourceTop">Wiersz najwyższego poziomu obszaru źródłowego.</param>
        <param name="sourceWidth">Liczba kolumn w obszarze źródłowym.</param>
        <param name="sourceHeight">Liczba wierszy w obszarze źródłowym.</param>
        <param name="targetLeft">Kolumna z lewej strony obszaru docelowego.</param>
        <param name="targetTop">Wiersz najwyższego poziomu obszaru docelowego.</param>
        <summary>Kopiuje określony obszar źródłowy buforu ekranu do określonego obszaru docelowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli parametr docelowy i źródłowy określają pozycję znajdującą się poza granicami bieżącego buforu ekranu, kopiowana jest tylko część obszaru źródłowego, która mieści się w obszarze docelowym. Oznacza to, że obszar źródłowy zostanie przycięty w celu dopasowania do bieżącego buforu ekranu.  
  
 <xref:System.Console.MoveBufferArea%2A> Metoda kopiuje obszar źródłowy do obszaru docelowego. Jeśli obszar docelowy nie przecina obszaru źródłowego, obszar źródłowy zostanie wypełniony pustymi danymi przy użyciu bieżącego pierwszego planu i kolorów tła. W przeciwnym razie część przecinania obszaru źródłowego nie została wypełniona.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Co najmniej jeden z parametrów jest mniejszy od zera.  
  
—lub— 
 <paramref name="sourceLeft" />lub <paramref name="targetLeft" /> jest większe lub <see cref="P:System.Console.BufferWidth" />równe.  
  
—lub— 
 <paramref name="sourceTop" />lub <paramref name="targetTop" /> jest większe lub <see cref="P:System.Console.BufferHeight" />równe.  
  
—lub— 
 <paramref name="sourceTop" /> + <paramref name="sourceHeight" />jest większe lub równe <see cref="P:System.Console.BufferHeight" />.  
  
—lub— 
 <paramref name="sourceLeft" /> + <paramref name="sourceWidth" />jest większe lub równe <see cref="P:System.Console.BufferWidth" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Bieżący system operacyjny nie jest systemem Windows.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop, char sourceChar, valuetype System.ConsoleColor sourceForeColor, valuetype System.ConsoleColor sourceBackColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer, sourceChar As Char, sourceForeColor As ConsoleColor, sourceBackColor As ConsoleColor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="F#" Value="static member MoveBufferArea : int * int * int * int * int * int * char * ConsoleColor * ConsoleColor -&gt; unit" Usage="System.Console.MoveBufferArea (sourceLeft, sourceTop, sourceWidth, sourceHeight, targetLeft, targetTop, sourceChar, sourceForeColor, sourceBackColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTop" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceWidth" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceHeight" Type="System.Int32" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetLeft" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetTop" Type="System.Int32" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceChar" Type="System.Char" Index="6" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceForeColor" Type="System.ConsoleColor" Index="7" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceBackColor" Type="System.ConsoleColor" Index="8" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceLeft">Kolumna z lewej strony obszaru źródłowego.</param>
        <param name="sourceTop">Wiersz najwyższego poziomu obszaru źródłowego.</param>
        <param name="sourceWidth">Liczba kolumn w obszarze źródłowym.</param>
        <param name="sourceHeight">Liczba wierszy w obszarze źródłowym.</param>
        <param name="targetLeft">Kolumna z lewej strony obszaru docelowego.</param>
        <param name="targetTop">Wiersz najwyższego poziomu obszaru docelowego.</param>
        <param name="sourceChar">Znak używany do wypełniania obszaru źródłowego.</param>
        <param name="sourceForeColor">Kolor pierwszego planu używany do wypełniania obszaru źródłowego.</param>
        <param name="sourceBackColor">Kolor tła używany do wypełniania obszaru źródłowego.</param>
        <summary>Kopiuje określony obszar źródłowy buforu ekranu do określonego obszaru docelowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli parametr docelowy i źródłowy określają pozycję znajdującą się poza granicami bieżącego buforu ekranu, kopiowana jest tylko część obszaru źródłowego, która mieści się w obszarze docelowym. Oznacza to, że obszar źródłowy zostanie przycięty w celu dopasowania do bieżącego buforu ekranu.  
  
 <xref:System.Console.MoveBufferArea%2A> Metoda kopiuje obszar źródłowy do obszaru docelowego. Jeśli obszar docelowy nie przecina obszaru źródłowego, obszar źródłowy jest wypełniany znakiem określonym przez `sourceChar`, przy użyciu kolorów określonych przez `sourceForeColor` i `sourceBackColor`. W przeciwnym razie część przecinania obszaru źródłowego nie została wypełniona.  
  
 Metoda nie wykonuje operacji, jeśli `sourceWidth` lub `sourceHeight` jest równa zero. <xref:System.Console.MoveBufferArea%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Co najmniej jeden z parametrów jest mniejszy od zera.  
  
—lub— 
 <paramref name="sourceLeft" />lub <paramref name="targetLeft" /> jest większe lub <see cref="P:System.Console.BufferWidth" />równe.  
  
—lub— 
 <paramref name="sourceTop" />lub <paramref name="targetTop" /> jest większe lub <see cref="P:System.Console.BufferHeight" />równe.  
  
—lub— 
 <paramref name="sourceTop" /> + <paramref name="sourceHeight" />jest większe lub równe <see cref="P:System.Console.BufferHeight" />.  
  
—lub— 
 <paramref name="sourceLeft" /> + <paramref name="sourceWidth" />jest większe lub równe <see cref="P:System.Console.BufferWidth" />.</exception>
        <exception cref="T:System.ArgumentException">Jeden lub oba parametry koloru nie są elementem członkowskim <see cref="T:System.ConsoleColor" /> wyliczenia.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Bieżący system operacyjny nie jest systemem Windows.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="NumberLock">
      <MemberSignature Language="C#" Value="public static bool NumberLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool NumberLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.NumberLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NumberLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool NumberLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberLock : bool" Usage="System.Console.NumberLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy przełącznik klawiatury NUM LOCK jest włączony, czy wyłączony.</summary>
        <value><see langword="true" />Jeśli jest włączona funkcja NUM LOCK; <see langword="false" /> Jeśli funkcja Num Lock jest wyłączona.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">Operacja get jest wywoływana w systemie operacyjnym innym niż Windows.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardError">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Uzyskuje standardowy strumień błędów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError();" />
      <MemberSignature Language="F#" Value="static member OpenStandardError : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uzyskuje standardowy strumień błędów.</summary>
        <returns>Standardowy strumień błędów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody można użyć do odzyskania standardowego strumienia błędów po jego zmianie przez <xref:System.Console.SetError%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład to prosta przeglądarka plików tekstowych, która wyświetla zawartość jednego lub więcej plików tekstowych w konsoli programu. Jeśli nie ma żadnych argumentów wiersza polecenia lub jeśli jakiekolwiek pliki przekazane jako argumenty wiersza polecenia nie istnieją, przykład wywołuje <xref:System.Console.SetError%2A> metodę w celu przekierowania informacji o błędach do pliku, <xref:System.Console.OpenStandardError%2A> wywołuje metodę w procesie ponownego uzyskania błędu standardowego przesyła strumieniowo i wskazuje, że informacje o błędzie zostały zazapisywane do pliku.  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 Należy pamiętać, <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> że właściwość jest ustawiona `true` na wartość przed ponownym uzyskaniem strumienia błędu. Dzięki temu dane wyjściowe będą wysyłane do konsoli bezpośrednio, a nie buforowane.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardError : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardError bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bufferSize">Wewnętrzny rozmiar buforu strumienia.</param>
        <summary>Uzyskuje standardowy strumień błędów, który jest ustawiony na określony rozmiar buforu.</summary>
        <returns>Standardowy strumień błędów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody można użyć do odzyskania standardowego strumienia błędów po jego zmianie przez <xref:System.Console.SetError%2A> metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize" />jest mniejsze lub równe zero.</exception>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardInput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Uzyskuje standardowy strumień wejściowy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput();" />
      <MemberSignature Language="F#" Value="static member OpenStandardInput : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uzyskuje standardowy strumień wejściowy.</summary>
        <returns>Standardowy strumień wejściowy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody można użyć do odzyskania standardowego strumienia wejściowego po jego zmianie przez <xref:System.Console.SetIn%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie `OpenStandardInput` właściwości.  
  
 [!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
 [!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
 [!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardInput : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardInput bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bufferSize">Wewnętrzny rozmiar buforu strumienia.</param>
        <summary>Uzyskuje standardowy strumień wejściowy, który jest ustawiony na określony rozmiar buforu.</summary>
        <returns>Standardowy strumień wejściowy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody można użyć do odzyskania standardowego strumienia wyjściowego po jego zmianie przez <xref:System.Console.SetIn%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie `OpenStandardInput` właściwości.  
  
 [!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
 [!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
 [!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize" />jest mniejsze lub równe zero.</exception>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardOutput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Uzyskuje standardowy strumień wyjściowy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput();" />
      <MemberSignature Language="F#" Value="static member OpenStandardOutput : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uzyskuje standardowy strumień wyjściowy.</summary>
        <returns>Standardowy strumień wyjściowy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody można użyć do odzyskania standardowego strumienia wyjściowego po jego zmianie przez <xref:System.Console.SetOut%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład ilustruje <xref:System.Console.OpenStandardOutput%2A> sposób używania metody. Zastępuje cztery następujące po sobie znaki spacji w ciągu zawierającym znak tabulacji. Aby uruchomić tę opcję, należy podać dwa argumenty wiersza polecenia. Pierwszy to nazwa istniejącego pliku tekstowego, do którego zostanie przekierowany standardowy strumień danych wejściowych. Drugi to nazwa pliku, do którego zostanie przekierowany standardowy strumień danych wyjściowych. Ten plik nie musi istnieć. Jeśli istnieje, jego zawartość zostanie zastąpiona.  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardOutput : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardOutput bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bufferSize">Wewnętrzny rozmiar buforu strumienia.</param>
        <summary>Uzyskuje standardowy strumień wyjściowy, który jest ustawiony na określony rozmiar buforu.</summary>
        <returns>Standardowy strumień wyjściowy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody można użyć do odzyskania standardowego strumienia wyjściowego po jego zmianie przez <xref:System.Console.SetOut%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład ilustruje <xref:System.Console.OpenStandardOutput%2A> sposób używania metody. Zastępuje cztery następujące po sobie znaki spacji w ciągu zawierającym znak tabulacji. Aby uruchomić tę opcję, należy podać dwa argumenty wiersza polecenia. Pierwszy to nazwa istniejącego pliku tekstowego, do którego zostanie przekierowany standardowy strumień danych wejściowych. Drugi to nazwa pliku, do którego zostanie przekierowany standardowy strumień danych wyjściowych. Ten plik nie musi istnieć. Jeśli istnieje, jego zawartość zostanie zastąpiona.  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize" />jest mniejsze lub równe zero.</exception>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Out">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Out { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Out" />
      <MemberSignature Language="DocId" Value="P:System.Console.Out" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Out As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Out { System::IO::TextWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Out : System.IO.TextWriter" Usage="System.Console.Out" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera standardowy strumień wyjściowy.</summary>
        <value><see cref="T:System.IO.TextWriter" /> Reprezentujący standardowy strumień wyjściowy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest domyślnie ustawiona na strumień wyjściowy Standard. Tę właściwość można ustawić na inny strumień przy użyciu <xref:System.Console.SetOut%2A> metody.  
  
 Należy zauważyć, że `Console.Out.WriteLine` wywołania metod są równoważne z wywołaniami odpowiednich <xref:System.Console.WriteLine%2A> metod.  
  
   
  
## Examples  
 W poniższym przykładzie użyto właściwości <xref:System.Console.Out%2A> , aby wyświetlić tablicę zawierającą nazwy plików w bieżącym katalogu aplikacji na standardowym urządzeniu wyjściowym. Następnie ustawia standardowe dane wyjściowe do pliku o nazwie Files. txt i wyświetla listę elementów tablicy do pliku. Na koniec ustawia dane wyjściowe w standardowym strumieniu wyjściowym i ponownie wyświetla elementy tablicy na standardowym urządzeniu wyjściowym.  
  
 [!code-csharp[System.Console.Out#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.out/cs/out1.cs#1)]
 [!code-vb[System.Console.Out#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.out/vb/out1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OutputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding OutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding OutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.OutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ OutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OutputEncoding : System.Text.Encoding with get, set" Usage="System.Console.OutputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kodowanie używane przez konsolę do zapisywania danych wyjściowych.</summary>
        <value>Kodowanie używane do zapisywania danych wyjściowych konsoli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konsola używa kodowania danych wyjściowych do tłumaczenia znaków pisanych przez aplikację na odpowiednie znaki w konsoli. Domyślna strona kodowa, która jest stosowana przez konsolę, zależy od ustawień regionalnych systemu.  
  
 Począwszy od, operacja pobrania właściwości może zwrócić buforowaną wartość zamiast bieżącego kodowania danych wyjściowych konsoli. [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] Taka sytuacja może wystąpić, jeśli wartość <xref:System.Console.OutputEncoding%2A> właściwości jest modyfikowana przez niektóre metody inne niż przypisanie <xref:System.Console.OutputEncoding%2A> do właściwości, takie jak wywołanie funkcji systemu Windows `SetConsoleOutputCP` .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość właściwości w operacji zestawu wynosi <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas wykonywania tej operacji.</exception>
        <exception cref="T:System.Security.SecurityException">Aplikacja nie ma uprawnień do wykonania tej operacji.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">do odczytu i zapisu w oknach najwyższego poziomu i w podsystemach Windows.  Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <block subset="none" type="usage"><para>W przypadku kodowań <see cref="T:System.Console" /> Unicode Klasa obsługuje kodowanie UTF-8 <see cref="T:System.Text.UTF8Encoding" /> z klasą [!INCLUDE[net_v45](~/includes/net-v45-md.md)]i, począwszy od, obsługuje kodowanie UTF-16 z <see cref="T:System.Text.UnicodeEncoding" /> klasą. Kodowanie UTF-32 z <see cref="T:System.Text.UTF32Encoding" /> klasą nie jest obsługiwane. Podjęto próbę ustawienia kodowania danych wyjściowych w formacie UTF- <see cref="T:System.IO.IOException" />32.  
  
Należy zauważyć, że w konsoli programu pomyślnie są wyświetlane znaki Unicode, które są następujące: 
— Aby wyświetlić znaki, konsola musi używać czcionki TrueType, takiej jak Lucida Console lub Consolas.  
  
-Czcionka używana przez konsolę programu musi definiować określony glif lub glify, które mają być wyświetlane. Konsola programu może korzystać z funkcji łączenia czcionek, aby wyświetlać symbole z połączonych czcionek, Jeśli czcionka podstawowa nie zawiera definicji dla tego symbolu.  
  
Aby uzyskać więcej informacji na temat obsługi kodowania Unicode przez konsolę programu, zobacz sekcję "Obsługa standardu Unicode dla konsoli" w <see cref="T:System.Console" /> klasie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Read" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Read();" />
      <MemberSignature Language="F#" Value="static member Read : unit -&gt; int" Usage="System.Console.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje następny znak ze standardowego strumienia wejściowego.</summary>
        <returns>Następny znak ze strumienia wejściowego lub ujemny jeden (-1), jeśli nie ma obecnie więcej znaków do odczytania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda blokuje zwrot podczas wpisywania znaków wejściowych; kończy się po <xref:System.ConsoleKey.Enter> naciśnięciu klawisza. <xref:System.Console.Read%2A> Naciśnięcie klawisza ENTER powoduje dołączenie sekwencji zakończenia linii zależnej od platformy do danych wejściowych (na przykład system Windows dołącza sekwencję powrotu karetki). Kolejne wywołania <xref:System.Console.Read%2A> metody pobierają dane wejściowe po jednym znaku naraz. Po pobraniu końcowego znaku program ponownie <xref:System.Console.Read%2A> zablokuje jego powrotu, a cykl powtarza się.  
  
> [!IMPORTANT]
>  Metoda lub właściwość oraz <xref:System.Console.ReadKey%2A> Metoda są preferowane przy użyciu <xref:System.Console.Read%2A> metody. <xref:System.Console.KeyAvailable%2A> <xref:System.Console.ReadLine%2A>  
  
 Należy pamiętać, że metoda nie zwraca-1, chyba że zostanie wykonana jedna z następujących akcji:  
  
-   Naciśnij <xref:System.ConsoleModifiers.Control> jednocześnie klawisz modyfikujący i <xref:System.ConsoleKey.Z> klawisz konsoli (Ctrl + Z), który sygnalizuje warunek końca pliku.  
  
-   Naciśnij odpowiedni klucz, który sygnalizuje warunek końca pliku, taki jak klawisz funkcji F6 w systemie Windows.  
  
-   Przekieruj strumień wejściowy do źródła, takiego jak plik tekstowy, który ma rzeczywisty znak końca pliku.  
  
   
  
## Examples  
 Poniższy przykład demonstruje <xref:System.Console.Read%2A> metodę.  
  
 [!code-cpp[console.read#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.read/CPP/read.cpp#1)]
 [!code-csharp[console.read#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.read/CS/read.cs#1)]
 [!code-vb[console.read#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.read/VB/read.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadKey">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera następny znak lub funkcję wskutek naciśnięcia klawisza przez użytkownika.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey () As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey();" />
      <MemberSignature Language="F#" Value="static member ReadKey : unit -&gt; ConsoleKeyInfo" Usage="System.Console.ReadKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera następny znak lub funkcję wskutek naciśnięcia klawisza przez użytkownika. Naciśnięty klawisz jest wyświetlany w oknie konsoli.</summary>
        <returns>Obiekt, który opisuje <see cref="T:System.ConsoleKey" /> stałą i znak Unicode, jeśli istnieje, który odpowiada klawiszowi konsoli naciśniętej. Obiekt opisuje również w bitowej <see cref="T:System.ConsoleModifiers" /> kombinacji wartości, czy jeden lub więcej klawiszy modyfikujących Shift, Alt lub CTRL został nacionięty jednocześnie z klawiszem konsoli. <see cref="T:System.ConsoleKeyInfo" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda czeka, czyli bloki w wątku, który <xref:System.Console.ReadKey%2A> wystawia metodę, dopóki nie zostanie naciśnięty znak lub klawisz funkcyjny. <xref:System.Console.ReadKey%2A> Znak lub klucz funkcji można nacisnąć w połączeniu z co najmniej jednym klawiszem modyfikującym Alt, CTRL lub Shift. Jednak naciśnięcie klawisza modyfikującego nie będzie powodowało <xref:System.Console.ReadKey%2A> zwrócenia metody.  
  
 W zależności od aplikacji może być konieczne użycie <xref:System.Console.ReadKey%2A> metody w połączeniu <xref:System.Console.KeyAvailable%2A> z właściwością.  
  
 Metoda odczytuje z klawiatury, nawet jeśli standardowe dane wejściowe są przekierowywane do pliku <xref:System.Console.SetIn%2A> przy użyciu metody. <xref:System.Console.ReadKey%2A>  
  
   
  
## Examples  
 Jednym z najczęściej używanych <xref:System.Console.ReadKey> metod jest zatrzymanie wykonywania programu do momentu naciśnięcia klawisza i przerwanie działania aplikacji lub wyświetlenie dodatkowego okna informacji. Poniższy przykład używa metody, <xref:System.Console.ReadKey> aby poczekać, aż użytkownik naciśnie klawisz ENTER przed zakończeniem działania aplikacji.  
  
 [!code-csharp[System.Console.ReadKey#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey1.cs#1)]
 [!code-vb[System.Console.ReadKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey1.vb#1)]  
  
 Należy zauważyć, że to Przeciążenie <xref:System.Console.ReadKey%2A> metody domyślnie zwraca wszystkie klucze, które użytkownik naciśnie do konsoli. Aby je pominąć, należy wywołać <xref:System.Console.ReadKey%2A> metodę `intercept` z argumentem `true`.  
  
 W poniższym przykładzie zastosowano <xref:System.Console.ReadKey> metodę, aby wyświetlić informacje o kluczu, który został naciśnięty przez użytkownika. 
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Console.In" /> Właściwość zostanie przekierowana z pewnego strumienia innego niż konsola.</exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey (bool intercept);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey(bool intercept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey (intercept As Boolean) As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey(bool intercept);" />
      <MemberSignature Language="F#" Value="static member ReadKey : bool -&gt; ConsoleKeyInfo" Usage="System.Console.ReadKey intercept" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intercept" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="intercept">Określa, czy naciśniętego klawisza ma być wyświetlany w oknie konsoli. <see langword="true" />Aby nie wyświetlać naciśniętego klawisza; w przeciwnym razie. <see langword="false" /></param>
        <summary>Pobiera następny znak lub funkcję wskutek naciśnięcia klawisza przez użytkownika. Naciśnięty klawisz jest opcjonalnie wyświetlany w oknie konsoli.</summary>
        <returns>Obiekt, który opisuje <see cref="T:System.ConsoleKey" /> stałą i znak Unicode, jeśli istnieje, który odpowiada klawiszowi konsoli naciśniętej. Obiekt opisuje również w bitowej <see cref="T:System.ConsoleModifiers" /> kombinacji wartości, czy jeden lub więcej klawiszy modyfikujących Shift, Alt lub CTRL został nacionięty jednocześnie z klawiszem konsoli. <see cref="T:System.ConsoleKeyInfo" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda czeka, czyli bloki w wątku, który <xref:System.Console.ReadKey%2A> wystawia metodę, dopóki nie zostanie naciśnięty znak lub klawisz funkcyjny. <xref:System.Console.ReadKey%2A> Znak lub klucz funkcji można nacisnąć w połączeniu z co najmniej jednym klawiszem modyfikującym Alt, CTRL lub Shift. Jednak naciśnięcie klawisza modyfikującego nie będzie powodowało <xref:System.Console.ReadKey%2A> zwrócenia metody.  
  
 Jeśli parametr ma `true`wartość, naciśnięty klawisz jest przechwytywany i nie jest wyświetlany w oknie konsoli; w przeciwnym razie zostanie wyświetlony klawisz naciśnięty. `intercept`  
  
 W zależności od aplikacji może być konieczne użycie <xref:System.Console.ReadKey%2A> metody w połączeniu <xref:System.Console.KeyAvailable%2A> z właściwością.  
  
 Metoda odczytuje z klawiatury, nawet jeśli standardowe dane wejściowe są przekierowywane do pliku <xref:System.Console.SetIn%2A> przy użyciu metody. <xref:System.Console.ReadKey%2A>  
  
   
  
## Examples  
 Jednym z najczęściej używanych <xref:System.Console.ReadKey%2A> metod jest zatrzymanie wykonywania programu do momentu naciśnięcia klawisza i przerwanie działania aplikacji lub wyświetlenie dodatkowego okna informacji. Poniższy przykład używa metody, <xref:System.Console.ReadKey%28System.Boolean%29> aby poczekać, aż użytkownik naciśnie klawisz ENTER przed zakończeniem działania aplikacji. Należy pamiętać, że jeśli użytkownik naciśnie dowolny inny klawisz, nie zostanie on echany do konsoli programu.  
  
 [!code-csharp[System.Console.ReadKey#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey2.cs#2)]
 [!code-vb[System.Console.ReadKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey2.vb#2)]  
  
 W poniższym przykładzie zastosowano <xref:System.Console.ReadKey%28System.Boolean%29> metodę, aby wyświetlić informacje o kluczu, który został naciśnięty przez użytkownika bez wyświetlania tego klucza w konsoli programu.  
  
 [!code-cpp[console.readkey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey2/CPP/rkbool.cpp#1)]
 [!code-csharp[console.readkey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey2/CS/rkbool.cs#1)]
 [!code-vb[console.readkey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey2/VB/rkbool.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Console.In" /> Właściwość zostanie przekierowana z pewnego strumienia innego niż konsola.</exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public static string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="static member ReadLine : unit -&gt; string" Usage="System.Console.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje następny wiersz znaków ze standardowego strumienia wejściowego.</summary>
        <returns>Następny wiersz znaków ze strumienia wejściowego lub <see langword="null" /> Jeśli nie ma więcej dostępnych wierszy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Console.ReadLine%2A> Metoda odczytuje wiersz ze standardowego strumienia wejściowego. (W przypadku definicji wiersza zapoznaj się z akapitem poniżej poniższej listy). Oznacza to, że:  
  
-   Jeśli standardowe urządzenie wejściowe jest klawiaturą, blok jest <xref:System.Console.ReadLine%2A> blokowany do momentu naciśnięcia klawisza **Enter** .  
  
     Jednym z najczęstszych zastosowań <xref:System.Console.ReadLine%2A> metody jest wstrzymanie wykonywania programu przed wyczyszczeniem konsoli i wyświetlenie w niej nowych informacji lub wyświetlenie monitu o naciśnięcie klawisza ENTER przed zakończeniem działania aplikacji. Ilustruje to poniższy przykład.  
  
     [!code-cpp[System.Console.ReadLine#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/ReadLineSimple.cpp#6)]
     [!code-csharp[System.Console.ReadLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLineSimple.cs#6)]
     [!code-vb[System.Console.ReadLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLineSimple.vb#6)]  
  
-   Jeśli standardowe dane wejściowe są przekierowywane do pliku, <xref:System.Console.ReadLine%2A> Metoda odczytuje wiersz tekstu z pliku. Na przykład poniżej znajduje się plik tekstowy o nazwie ReadLine1. txt:  
  
    ```  
  
    This is the first line.  
    This is the second line.  
    This is the third line.  
    This is the fourth line.  
  
    ```  
  
     W poniższym przykładzie zastosowano <xref:System.Console.ReadLine%2A> metodę odczytu danych wejściowych przekierowanych z pliku. Operacja odczytu kończy się, gdy metoda zwraca wartość `null`, która wskazuje, że nie pozostanie do odczytu wierszy.  
  
     [!code-csharp[System.Console.ReadLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine3.cs#3)]
     [!code-vb[System.Console.ReadLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine3.vb#3)]  
  
     Po skompilowaniu przykładu do pliku wykonywalnego o nazwie ReadLine1. exe można uruchomić go z wiersza polecenia przy użyciu składni  
  
    ```  
    ReadLine1 < ReadLine1.txt  
    ```  
  
     Aby odczytać zawartość pliku i wyświetlić je w konsoli programu.  
  
 Wiersz jest definiowany jako sekwencja znaków, po którym następuje znak powrotu karetki (0x000d szesnastkowy), wiersz wysuwu wiersza (szesnastkowy 0x000a) lub wartość <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> właściwości. Zwrócony ciąg nie zawiera znaków kończących. Domyślnie metoda odczytuje dane wejściowe z 256-znakowego buforu wejściowego. Ponieważ obejmuje <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> to znaki, Metoda może odczytywać wiersze, które zawierają do 254 znaków. Aby odczytać więcej wierszy, wywołaj <xref:System.Console.OpenStandardInput%28System.Int32%29> metodę.  
  
 Metoda <xref:System.Console.ReadLine%2A> jest wykonywana synchronicznie. Oznacza to, że jest ona blokowana do momentu odczytania linii lub naciśnięcia kombinacji klawiszy Ctrl + Z. Właściwość zwraca obiekt, który reprezentuje standardowy strumień wejściowy, który ma metodę synchroniczną <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> i metodę asynchroniczną <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>. <xref:System.Console.In%2A> <xref:System.IO.TextReader> Jeśli jednak używany jako standardowy strumień wejściowy konsoli, <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> wykonuje synchronicznie, a nie asynchronicznie i zwraca wartość `Task<String>` tylko po zakończeniu operacji odczytu.  
  
 Jeśli ta metoda zgłasza <xref:System.OutOfMemoryException> wyjątek, pozycja czytnika w obiekcie źródłowym <xref:System.IO.Stream> jest zaawansowana przez liczbę znaków, jaką może odczytać Metoda, ale znaki już odczytane w buforze wewnętrznym <xref:System.Console.ReadLine%2A> są odrzucone. Ponieważ nie można zmienić pozycji czytnika w strumieniu, już odczytane znaki są nieodwracalne i można uzyskać do nich dostęp tylko przez ponowne zainicjowanie <xref:System.IO.TextReader>. Jeśli pozycja początkowa w strumieniu jest nieznana lub strumień nie obsługuje wyszukiwania, należy również ponownie zainicjować <xref:System.IO.Stream> element źródłowy. Aby uniknąć takiej sytuacji i utworzyć niezawodny kod, należy użyć <xref:System.Console.KeyAvailable%2A> właściwości i <xref:System.Console.ReadKey%2A> metody, a następnie zapisać znaki odczytu w buforze wstępnie przydzielonym.  
  
 Jeśli znak Ctrl + Z zostanie naciśnięty, gdy metoda odczytuje dane wejściowe z konsoli, metoda zwraca `null`. Dzięki temu użytkownik może zapobiec dalszemu wprowadzaniu klawiatury, <xref:System.Console.ReadLine%2A> gdy metoda jest wywoływana w pętli. Poniższy przykład ilustruje ten scenariusz.  
  
 [!code-cpp[System.Console.ReadLine#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/readline2.cpp#1)]
 [!code-csharp[System.Console.ReadLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine2.cs#1)]
 [!code-vb[System.Console.ReadLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine2.vb#1)]  
  
   
  
## Examples  
 Poniższy przykład wymaga dwóch argumentów wiersza polecenia: nazwę istniejącego pliku tekstowego oraz nazwę pliku, do którego mają zostać zapisane dane wyjściowe. Otwiera istniejący plik tekstowy i przekierowuje standardowe dane wejściowe z klawiatury do tego pliku. Przekierowuje także standardowe dane wyjściowe z konsoli programu do pliku wyjściowego. Następnie używa <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> metody, aby odczytać każdy wiersz w pliku, zastępuje każdą sekwencję czterech spacji znakiem tabulacji i <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> używa metody, aby zapisać wynik do pliku wyjściowego.  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.OutOfMemoryException">Za mało pamięci, aby przydzielić bufor dla zwracanego ciągu.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Liczba znaków w następnym wierszu znaków jest większa niż <see cref="F:System.Int32.MaxValue" />.</exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="ResetColor">
      <MemberSignature Language="C#" Value="public static void ResetColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ResetColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetColor();" />
      <MemberSignature Language="F#" Value="static member ResetColor : unit -&gt; unit" Usage="System.Console.ResetColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia ustawienia domyślne kolorów pierwszego planu i konsoli w tle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolory pierwszego planu i tła są przywracane do kolorów, które istniały po rozpoczęciu bieżącego procesu. Aby uzyskać więcej informacji, zobacz <xref:System.Console.ForegroundColor%2A> właściwości <xref:System.Console.BackgroundColor%2A> i.  
  
   
  
## Examples  
 Poniższy przykład zapisuje wartości <xref:System.ConsoleColor> wyliczenia do tablicy i zapisuje bieżące wartości <xref:System.Console.BackgroundColor%2A> właściwości i <xref:System.Console.ForegroundColor%2A> do zmiennych. Następnie zmienia kolor pierwszego planu na każdy kolor w <xref:System.ConsoleColor> wyliczeniu, z wyjątkiem koloru, który jest zgodny z bieżącym tłem, i zmienia kolor tła na każdy kolor <xref:System.ConsoleColor> w wyliczeniu, z wyjątkiem koloru zgodnego z bieżący plan. (Jeśli kolor pierwszego planu jest taki sam jak kolor tła, tekst nie jest widoczny). Na koniec wywołuje <xref:System.Console.ResetColor%2A> metodę w celu przywrócenia oryginalnych kolorów konsoli.  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetBufferSize">
      <MemberSignature Language="C#" Value="public static void SetBufferSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBufferSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetBufferSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetBufferSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBufferSize(int width, int height);" />
      <MemberSignature Language="F#" Value="static member SetBufferSize : int * int -&gt; unit" Usage="System.Console.SetBufferSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="height" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="width">Szerokość obszaru buforu mierzona w kolumnach.</param>
        <param name="height">Wysokość obszaru buforu mierzona w wierszach.</param>
        <summary>Ustawia wysokość i szerokość obszaru buforu ekranu na określone wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Console.WindowLeft%2A> ,<xref:System.Console.BufferWidth%2A> ,,<xref:System.Console.BufferHeight%2A>,,, i właściwości<xref:System.Console.CursorVisible%2A> ; oraz<xref:System.Console.SetWindowPosition%2A>, i<xref:System.Console.ReadKey%2A> <xref:System.Console.SetBufferSize%2A> <xref:System.Console.WindowHeight%2A> <xref:System.Console.WindowWidth%2A> <xref:System.Console.WindowTop%2A> form. Przykład rysuje wzorzec siatki w buforze ekranu na podstawie szerokości buforu ekranu. Następnie przykład przenosi okno konsoli w odpowiedzi na, w której znajduje się strzałka w górę, Strzałka w dół, Strzałka w lewo lub Strzałka w prawo. Wzorzec siatki ułatwia przemieszczenie okna konsoli względem buforu ekranu.  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" />lub <paramref name="width" /> jest mniejsze lub równe zero.  
  
—lub— 
 <paramref name="height" />lub <paramref name="width" /> jest większe lub <see cref="F:System.Int16.MaxValue" />równe.  
  
—lub— 
 <paramref name="width" />jest mniejsze niż <see cref="P:System.Console.WindowLeft" />.  +  <see cref="P:System.Console.WindowWidth" />  
  
—lub— 
 <paramref name="height" />jest mniejsze niż <see cref="P:System.Console.WindowTop" />.  +  <see cref="P:System.Console.WindowHeight" /></exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Bieżący system operacyjny nie jest systemem Windows.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public static void SetCursorPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCursorPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetCursorPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCursorPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCursorPosition(int left, int top);" />
      <MemberSignature Language="F#" Value="static member SetCursorPosition : int * int -&gt; unit" Usage="System.Console.SetCursorPosition (left, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="top" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left">Położenie kolumny kursora. Kolumny są numerowane od lewej do prawej, począwszy od 0.</param>
        <param name="top">Pozycja w wierszu kursora. Wiersze są numerowane od góry do dołu, zaczynając od 0.</param>
        <summary>Ustawia pozycję kursora.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Console.SetCursorPosition%2A> Użyj metody, aby określić miejsce rozpoczęcia następnej operacji zapisu w oknie konsoli. Jeśli określona pozycja kursora znajduje się poza obszarem, który jest aktualnie widoczny w oknie konsoli, początek okna zmieni się automatycznie, aby był widoczny.  
  
 Kursor jest automatycznie przenoszony do następnego znaku na pozycji za każdym razem, gdy znak jest zapisywana w oknie konsoli. Jeśli kursor znajduje się w prawym dolnym rogu okna konsoli, następna operacja zapisu powoduje przewinięcie okna konsoli, tak aby kursor pozostał widoczny. Jeśli chcesz napisać znak w prawym dolnym rogu znaku bez wyłączania okna konsoli do przewijania, użyj <xref:System.Console.MoveBufferArea%2A> metody, aby przenieść znak do tego położenia.  
  
   
  
## Examples  
 Ten <xref:System.Console.CursorLeft%2A> przykład ilustruje <xref:System.Console.CursorTop%2A> właściwości<xref:System.Console.SetCursorPosition%2A>iimetody. <xref:System.Console.Clear%2A> Przykład ustawia położenie kursora, który określa miejsce następnego zapisu, aby narysować 5 znaków o 5 znaków przy użyciu kombinacji ciągów "+", "&#124;" i "-". Należy zauważyć, że prostokąt można narysować za pomocą mniejszej liczby czynności, używając kombinacji innych ciągów.  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="left" />lub <paramref name="top" /> jest mniejsza od zera.  
  
—lub— 
 <paramref name="left" />jest większe lub równe <see cref="P:System.Console.BufferWidth" />.  
  
—lub— 
 <paramref name="top" />jest większe lub równe <see cref="P:System.Console.BufferHeight" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="C#" Value="public static void SetError (System.IO.TextWriter newError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetError(class System.IO.TextWriter newError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetError(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetError (newError As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetError(System::IO::TextWriter ^ newError);" />
      <MemberSignature Language="F#" Value="static member SetError : System.IO.TextWriter -&gt; unit" Usage="System.Console.SetError newError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newError" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newError">Strumień, który jest nowym standardowym wyjściem błędu.</param>
        <summary>Ustawia właściwość na określony <see cref="T:System.IO.TextWriter" /> obiekt. <see cref="P:System.Console.Error" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Console.Error%2A> właściwość jest ustawiona na standardowy strumień wyjściowy błędu.  
  
 Obiekt <xref:System.IO.StreamWriter> , który hermetyzuje <xref:System.IO.FileStream> , może służyć do wysyłania komunikatów o błędach do pliku.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak przekierować standardowy strumień błędów do pliku.  
  
 [!code-cpp[System.Console.SetError#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.SetError/cpp/seterror1.cpp#1)]
 [!code-csharp[System.Console.SetError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.SetError/cs/SetError1.cs#1)]
 [!code-vb[System.Console.SetError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.SetError/vb/SetError1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="newError" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie posiada wymaganych uprawnień.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="P:System.Console.Error" />
      </Docs>
    </Member>
    <Member MemberName="SetIn">
      <MemberSignature Language="C#" Value="public static void SetIn (System.IO.TextReader newIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIn(class System.IO.TextReader newIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetIn(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIn (newIn As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIn(System::IO::TextReader ^ newIn);" />
      <MemberSignature Language="F#" Value="static member SetIn : System.IO.TextReader -&gt; unit" Usage="System.Console.SetIn newIn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newIn" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="newIn">Strumień, który jest nowym standardowym wejściem.</param>
        <summary>Ustawia właściwość na określony <see cref="T:System.IO.TextReader" /> obiekt. <see cref="P:System.Console.In" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Console.In%2A> właściwość jest ustawiona na standardowy strumień wejściowy.  
  
 Obiekt <xref:System.IO.StreamReader> , który hermetyzuje <xref:System.IO.FileStream> , może służyć do odbierania danych wejściowych z pliku.  
  
   
  
## Examples  
 Poniższy przykład ilustruje <xref:System.Console.SetIn%2A> sposób używania metody. Zastępuje cztery następujące po sobie znaki spacji w ciągu zawierającym znak tabulacji. Aby uruchomić tę opcję, należy podać dwa argumenty wiersza polecenia. Pierwszy to nazwa istniejącego pliku tekstowego, do którego zostanie przekierowany standardowy strumień danych wejściowych. Drugi to nazwa pliku, do którego zostanie przekierowany standardowy strumień danych wyjściowych. Ten plik nie musi istnieć. Jeśli istnieje, jego zawartość zostanie zastąpiona.  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="newIn" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie posiada wymaganych uprawnień.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Console.In" />
      </Docs>
    </Member>
    <Member MemberName="SetOut">
      <MemberSignature Language="C#" Value="public static void SetOut (System.IO.TextWriter newOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOut(class System.IO.TextWriter newOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetOut(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetOut (newOut As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetOut(System::IO::TextWriter ^ newOut);" />
      <MemberSignature Language="F#" Value="static member SetOut : System.IO.TextWriter -&gt; unit" Usage="System.Console.SetOut newOut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newOut" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newOut">Moduł zapisujący tekstu, który ma być używany jako nowe standardowe dane wyjściowe.</param>
        <summary>Ustawia właściwość na <see cref="T:System.IO.TextWriter" /> obiekt docelowy. <see cref="P:System.Console.Out" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Console.Out%2A> właściwość jest ustawiona na standardowy strumień wyjściowy.  
  
 Obiekt <xref:System.IO.StreamWriter> , który hermetyzuje <xref:System.IO.FileStream> , może służyć do wysyłania danych wyjściowych do pliku. Na przykład:  
  
 [!code-cpp[System.Console.SetOut#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.setout/cpp/source.cpp#1)]
 [!code-csharp[System.Console.SetOut#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.setout/cs/source.cs#1)]
 [!code-vb[System.Console.SetOut#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.setout/vb/source.vb#1)]  
  
 Rzeczywisty obiekt zwrócony przez <xref:System.Console.Out%2A> może być wysynchronizowanej otoki wokół dostarczonego składnika zapisywania tekstu.
  
## Examples  
 Poniższy przykład ilustruje <xref:System.Console.SetOut%2A> sposób używania metody. Zastępuje cztery następujące po sobie znaki spacji w ciągu zawierającym znak tabulacji. Aby uruchomić tę opcję, należy podać dwa argumenty wiersza polecenia. Pierwszy to nazwa istniejącego pliku tekstowego, do którego zostanie przekierowany standardowy strumień danych wejściowych. Drugi to nazwa pliku, do którego zostanie przekierowany standardowy strumień danych wyjściowych. Ten plik nie musi istnieć. Jeśli istnieje, jego zawartość zostanie zastąpiona.  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="newOut" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie posiada wymaganych uprawnień.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowPosition">
      <MemberSignature Language="C#" Value="public static void SetWindowPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowPosition(int left, int top);" />
      <MemberSignature Language="F#" Value="static member SetWindowPosition : int * int -&gt; unit" Usage="System.Console.SetWindowPosition (left, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="top" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left">Pozycja kolumny lewego górnego rogu okna konsoli.</param>
        <param name="top">Pozycja wiersza w lewym górnym rogu okna konsoli.</param>
        <summary>Ustawia pozycję okna konsoli względem buforu ekranu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W oknie system operacyjny zostanie wyświetlone okno konsoli programu, a w oknie konsoli zostanie wyświetlona część buforu ekranu. <xref:System.Console.SetWindowPosition%2A> Metoda ma wpływ na pozycję okna konsoli względem buforu ekranu, ale nie wpływa na położenie okna systemu operacyjnego względem pulpitu.  
  
 Okna konsoli i systemu operacyjnego zwykle nie wpływają na siebie nawzajem. Jeśli jednak bufor ekranu nie może być wyświetlany w bieżącym granicach okna konsoli, system operacyjny automatycznie dołącza paski przewijania do okna systemu operacyjnego. W takim przypadku przeniesienie pasków przewijania okna systemu operacyjnego wpływa na pozycję okna konsoli i przeniesienie okna konsoli z <xref:System.Console.SetWindowPosition%2A> metodą wpływa na pozycję pasków przewijania okna systemu operacyjnego.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Console.WindowLeft%2A> ,<xref:System.Console.BufferWidth%2A> ,,<xref:System.Console.BufferHeight%2A>,,, i właściwości<xref:System.Console.CursorVisible%2A> ; oraz<xref:System.Console.SetWindowPosition%2A>, i<xref:System.Console.ReadKey%2A> <xref:System.Console.SetBufferSize%2A> <xref:System.Console.WindowHeight%2A> <xref:System.Console.WindowWidth%2A> <xref:System.Console.WindowTop%2A> form. Przykład rysuje wzorzec siatki w buforze ekranu na podstawie szerokości buforu ekranu. Następnie przykład przenosi okno konsoli w odpowiedzi na, w której znajduje się strzałka w górę, Strzałka w dół, Strzałka w lewo lub Strzałka w prawo. Wzorzec siatki ułatwia przemieszczenie okna konsoli względem buforu ekranu.  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="left" />lub <paramref name="top" /> jest mniejsza od zera.  
  
—lub— 
 <paramref name="left" /> + <see cref="P:System.Console.WindowWidth" />jest większa niż <see cref="P:System.Console.BufferWidth" />.  
  
—lub— 
 <paramref name="top" /> + <see cref="P:System.Console.WindowHeight" />jest większa niż <see cref="P:System.Console.BufferHeight" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Bieżący system operacyjny nie jest systemem Windows.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetWindowSize">
      <MemberSignature Language="C#" Value="public static void SetWindowSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowSize(int width, int height);" />
      <MemberSignature Language="F#" Value="static member SetWindowSize : int * int -&gt; unit" Usage="System.Console.SetWindowSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="height" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="width">Szerokość okna konsoli mierzona w kolumnach.</param>
        <param name="height">Wysokość okna konsoli mierzona w wierszach.</param>
        <summary>Ustawia wysokość i szerokość okna konsoli na określone wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ten przykład ilustruje <xref:System.Console.SetWindowSize%2A> metodę <xref:System.Console.WindowWidth%2A> oraz właściwości i <xref:System.Console.WindowHeight%2A> . Aby zobaczyć pełny wpływ zmiany rozmiaru okna konsoli, należy uruchomić przykład.  
  
 Przykład raportuje wymiary okna konsoli ustawione na 85 kolumn i 43 wierszy, a następnie czeka na naciśnięcie klawisza. Po naciśnięciu dowolnego klawisza wymiary okna konsoli są wyświetlane, nowe wymiary są raportowane i przykład czeka na kolejne naciśnięcie klawisza. Na koniec po naciśnięciu dowolnego klawisza okno konsoli zostanie przywrócone do jego oryginalnych wymiarów i przykład zostanie przerwany.  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="width" />lub <paramref name="height" /> jest mniejsze lub równe zero.  
  
—lub— 
 <paramref name="width" />znak <see cref="P:System.Console.WindowLeft" /> Plus <paramref name="height" /> lub Plus<see cref="P:System.Console.WindowTop" /> jest większy lub równy <see cref="F:System.Int16.MaxValue" />.  
  
—lub— 
 <paramref name="width" />lub <paramref name="height" /> jest większa niż największa możliwa szerokość lub wysokość okna dla bieżącej rozdzielczości ekranu i czcionki konsoli.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do wykonania tej czynności.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Bieżący system operacyjny nie jest systemem Windows.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public static string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string Title" />
      <MemberSignature Language="DocId" Value="P:System.Console.Title" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Console.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tytuł, który ma być wyświetlany na pasku tytułu konsoli.</summary>
        <value>Ciąg, który będzie wyświetlany na pasku tytułu konsoli programu. Maksymalna długość ciągu tytułu to 24500 znaków.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ten przykład ilustruje <xref:System.Console.Title%2A> właściwość. W przykładzie wyświetlany jest bieżący tytuł okna systemu operacyjnego, czeka na naciśnięcie klawisza, a następnie wyświetla nowy tytuł.  
  
 [!code-cpp[console.title#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.title/CPP/mytitle.cpp#1)]
 [!code-csharp[console.title#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.title/CS/mytitle.cs#1)]
 [!code-vb[console.title#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.title/VB/mytitle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">W operacji get pobrany tytuł zawiera więcej niż 24500 znaków.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">W operacji ustawiania określony tytuł zawiera więcej niż 24500 znaków.</exception>
        <exception cref="T:System.ArgumentNullException">W operacji ustawiania określony tytuł jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Operacja get jest wywoływana w systemie operacyjnym innym niż Windows.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="TreatControlCAsInput">
      <MemberSignature Language="C#" Value="public static bool TreatControlCAsInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool TreatControlCAsInput" />
      <MemberSignature Language="DocId" Value="P:System.Console.TreatControlCAsInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property TreatControlCAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool TreatControlCAsInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatControlCAsInput : bool with get, set" Usage="System.Console.TreatControlCAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kombinacja <see cref="F:System.ConsoleModifiers.Control" /> klawisza modyfikującego i <see cref="F:System.ConsoleKey.C" /> klucza konsoli (Ctrl + C) jest traktowana jako zwykła wartość wejściowa lub jako przerwa obsługiwana przez system operacyjny.</summary>
        <value><see langword="true" />Jeśli kombinacja klawiszy CTRL + C jest traktowana jako zwykłe dane wejściowe; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.Console.TreatControlCAsInput%2A> właściwości to `false` i naciśnięto klawisze CTRL + C, naciśnięte klawisze nie są przechowywane w buforze wejściowym, a system operacyjny kończy proces aktualnie wykonywany. Jest to wartość domyślna.  
  
> [!CAUTION]
>  Użyj tej właściwości w `true` rozsądny sposób, ponieważ ustawienie jej ma znaczący efekt. Większość użytkowników oczekuje kombinacji klawiszy CTRL + C, aby zakończyć działanie aplikacji konsolowej. Jeśli wyłączysz efekt kombinacji klawiszy CTRL + C, użytkownik musi pamiętać o naciśnięciu kombinacji klawiszy Ctrl + Break, aby zakończyć działanie aplikacji, która jest mniej znanym kluczem.  
  
   
  
## Examples  
 Poniższy przykład demonstruje <xref:System.Console.TreatControlCAsInput%2A> właściwość.  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Nie można pobrać lub ustawić trybu wejściowego buforu wejściowego konsoli.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="F:System.ConsoleModifiers.Control" />
        <altmember cref="F:System.ConsoleKey.C" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="WindowHeight">
      <MemberSignature Language="C#" Value="public static int WindowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowHeight : int with get, set" Usage="System.Console.WindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wysokość obszaru okna konsoli.</summary>
        <value>Wysokość okna konsoli mierzona w wierszach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próba ustawienia wartości właściwości w <xref:System.Console.WindowHeight%2A> przypadku przekierowania danych wyjściowych powoduje wystąpienie <xref:System.ArgumentOutOfRangeException> <xref:System.IO.IOException> wyjątku lub. Aby zapobiec wyjątku, można ustawić wartość tej właściwości tylko wtedy, <xref:System.Console.IsOutputRedirected%2A> gdy właściwość zwraca. `false`  
  
   
  
## Examples  
 Ten przykład ilustruje <xref:System.Console.SetWindowSize%2A> metodę <xref:System.Console.WindowWidth%2A> oraz właściwości i <xref:System.Console.WindowHeight%2A> . Aby zobaczyć pełny wpływ zmiany rozmiaru okna konsoli, należy uruchomić przykład.  
  
 Przykład raportuje wymiary okna konsoli ustawione na 85 kolumn i 43 wierszy, a następnie czeka na naciśnięcie klawisza. Po naciśnięciu dowolnego klawisza wymiary okna konsoli są wyświetlane, nowe wymiary są raportowane i przykład czeka na kolejne naciśnięcie klawisza. Na koniec po naciśnięciu dowolnego klawisza okno konsoli zostanie przywrócone do jego oryginalnych wymiarów i przykład zostanie przerwany.  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość <see cref="P:System.Console.WindowWidth" /> właściwości lub wartość <see cref="P:System.Console.WindowHeight" /> właściwości jest mniejsza lub równa 0.  
  
—lub— 
Wartość <see cref="P:System.Console.WindowHeight" /> właściwości i wartość <see cref="P:System.Console.WindowTop" /> właściwości jest <see cref="F:System.Int16.MaxValue" />większa lub równa.  
  
—lub— 
Wartość <see cref="P:System.Console.WindowWidth" /> właściwości lub wartość <see cref="P:System.Console.WindowHeight" /> właściwości jest większa niż największa możliwa szerokość lub wysokość okna dla bieżącej rozdzielczości ekranu i czcionki konsoli.</exception>
        <exception cref="T:System.IO.IOException">Błąd podczas odczytywania lub zapisywania informacji.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Operacja ustawiania jest wywoływana w systemie operacyjnym innym niż Windows.</exception>
      </Docs>
    </Member>
    <Member MemberName="WindowLeft">
      <MemberSignature Language="C#" Value="public static int WindowLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowLeft { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowLeft : int with get, set" Usage="System.Console.WindowLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pozycję z lewej strony obszaru okna konsoli względem buforu ekranu.</summary>
        <value>Pozycja okna konsoli z lewej strony mierzona w kolumnach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konsola reprezentuje prostokątne okno w większym prostokątnym obszarze buforu. Zarówno okno, jak i bufor są mierzone w pionie według liczby wierszy i w poziomie według liczby kolumn. Wymiary obszaru buforu są definiowane przez <xref:System.Console.BufferHeight%2A> właściwości i. <xref:System.Console.BufferWidth%2A> Wymiary obszaru konsoli są definiowane przez <xref:System.Console.WindowHeight%2A> właściwości i. <xref:System.Console.WindowWidth%2A> <xref:System.Console.WindowLeft%2A> Właściwość określa, która kolumna obszaru bufora jest wyświetlana w pierwszej kolumnie okna konsoli. Wartość <xref:System.Console.WindowLeft%2A> właściwości może być z zakresu od 0 do <xref:System.Console.BufferWidth%2A>.  -  <xref:System.Console.WindowWidth%2A> Próba ustawienia jej na wartość spoza tego zakresu zgłasza <xref:System.ArgumentOutOfRangeException>.  
  
 Po otwarciu okna konsoli, wartość <xref:System.Console.WindowLeft%2A> domyślna właściwości jest zero, co oznacza, że pierwsza kolumna pokazywana przez konsolę odpowiada pierwszej kolumnie (kolumna w pozycji zero) w obszarze bufora. Domyślna szerokość zarówno okna konsoli, jak i obszaru bufora to 80 kolumn. Oznacza to, że <xref:System.Console.WindowLeft%2A> Właściwość można modyfikować tylko wtedy, gdy okno konsoli jest węższe lub że obszar bufora jest szerszy.  
  
 Należy pamiętać, że jeśli szerokość obszaru buforu przekracza szerokość okna konsoli, wartość <xref:System.Console.WindowLeft%2A> właściwości jest automatycznie dostosowywana, gdy użytkownik użyje poziomego paska przewijania, aby zdefiniować relację okna do obszaru bufora.  
  
 Podjęto próbę ustawienia wartości <xref:System.Console.WindowLeft%2A> właściwości podczas przekierowywania danych wyjściowych <xref:System.IO.IOException> zgłasza wyjątek. Aby zapobiec wyjątku, można ustawić wartość tej właściwości tylko wtedy, <xref:System.Console.IsOutputRedirected%2A> gdy właściwość zwraca. `false`  
  
   
  
## Examples  
 Poniższy przykład otwiera okno konsoli 80-kolumn i definiuje obszar bufora o szerokości 120 kolumn. Wyświetla informacje o rozmiarze okna i bufora, a następnie czeka, aż użytkownik naciśnie klawisz Strzałka w lewo lub klawisz Strzałka w prawo. W poprzednim przypadku zmniejsza wartość <xref:System.Console.WindowLeft%2A> właściwości o jeden, jeśli wynik jest wartością prawną. W tym drugim przypadku zwiększa wartość <xref:System.Console.WindowLeft%2A> właściwości o jeden, jeśli wynik będzie prawny. Należy zauważyć, że przykład nie musi obsłużyć <xref:System.ArgumentOutOfRangeException>, ponieważ sprawdza, czy wartość, która ma zostać przypisana <xref:System.Console.WindowLeft%2A> do właściwości, nie jest ujemna i nie <xref:System.Console.WindowLeft%2A> powoduje, że suma właściwości <xref:System.Console.WindowWidth%2A> i przekroczy <xref:System.Console.BufferWidth%2A> wartość właściwości.  
  
 [!code-cpp[System.Console.WindowLeft#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.windowleft/cpp/windowleft1.cpp#1)]
 [!code-csharp[System.Console.WindowLeft#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.windowleft/cs/windowleft1.cs#1)]
 [!code-vb[System.Console.WindowLeft#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.windowleft/vb/windowleft1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">W operacji ustawiania wartość, która ma zostać przypisana, jest mniejsza od zera.  
  
—lub— 
W wyniku przydzielenia <see cref="P:System.Console.WindowLeft" /> <see cref="P:System.Console.WindowWidth" /> zostanie przekroczony <see cref="P:System.Console.BufferWidth" />przydział.</exception>
        <exception cref="T:System.IO.IOException">Błąd podczas odczytywania lub zapisywania informacji.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Operacja ustawiania jest wywoływana w systemie operacyjnym innym niż Windows.</exception>
      </Docs>
    </Member>
    <Member MemberName="WindowTop">
      <MemberSignature Language="C#" Value="public static int WindowTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowTop { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowTop : int with get, set" Usage="System.Console.WindowTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia górną pozycję obszaru okna konsoli względem buforu ekranu.</summary>
        <value>Pozycja okna konsoli najwyższego poziomu mierzona w wierszach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konsola reprezentuje prostokątne okno w większym prostokątnym obszarze buforu. Zarówno okno, jak i bufor są mierzone w pionie według liczby wierszy i w poziomie według liczby kolumn. Wymiary obszaru buforu są definiowane przez <xref:System.Console.BufferHeight%2A> właściwości i. <xref:System.Console.BufferWidth%2A> Wymiary obszaru konsoli są definiowane przez <xref:System.Console.WindowHeight%2A> właściwości i. <xref:System.Console.WindowWidth%2A> <xref:System.Console.WindowTop%2A> Właściwość określa, który wiersz obszaru bufora jest wyświetlany w pierwszej kolumnie okna konsoli. Wartość <xref:System.Console.WindowTop%2A> właściwości może być z zakresu od 0 do <xref:System.Console.BufferHeight%2A>.  -  <xref:System.Console.WindowHeight%2A> Próba ustawienia jej na wartość spoza tego zakresu zgłasza <xref:System.ArgumentOutOfRangeException>.  
  
 Podjęto próbę ustawienia wartości <xref:System.Console.WindowTop%2A> właściwości podczas przekierowywania danych wyjściowych <xref:System.IO.IOException> zgłasza wyjątek. Aby zapobiec wyjątku, można ustawić wartość tej właściwości tylko wtedy, <xref:System.Console.IsOutputRedirected%2A> gdy właściwość zwraca. `false`  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Console.WindowLeft%2A> ,<xref:System.Console.BufferWidth%2A> ,,<xref:System.Console.BufferHeight%2A>,,, i właściwości<xref:System.Console.CursorVisible%2A> ; oraz<xref:System.Console.SetWindowPosition%2A>, i<xref:System.Console.ReadKey%2A> <xref:System.Console.SetBufferSize%2A> <xref:System.Console.WindowHeight%2A> <xref:System.Console.WindowWidth%2A> <xref:System.Console.WindowTop%2A> form. Przykład rysuje wzorzec siatki w buforze ekranu na podstawie szerokości buforu ekranu. Następnie przykład przenosi okno konsoli w odpowiedzi na, w której znajduje się strzałka w górę, Strzałka w dół, Strzałka w lewo lub Strzałka w prawo. Wzorzec siatki ułatwia przemieszczenie okna konsoli względem buforu ekranu.  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">W operacji ustawiania wartość, która ma zostać przypisana, jest mniejsza od zera.  
  
—lub— 
W wyniku przydzielenia <see cref="P:System.Console.WindowTop" /> <see cref="P:System.Console.WindowHeight" /> zostanie przekroczony <see cref="P:System.Console.BufferHeight" />przydział.</exception>
        <exception cref="T:System.IO.IOException">Błąd podczas odczytywania lub zapisywania informacji.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Operacja ustawiania jest wywoływana w systemie operacyjnym innym niż Windows.</exception>
      </Docs>
    </Member>
    <Member MemberName="WindowWidth">
      <MemberSignature Language="C#" Value="public static int WindowWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowWidth : int with get, set" Usage="System.Console.WindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szerokość okna konsoli.</summary>
        <value>Szerokość okna konsoli mierzona w kolumnach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Próba ustawienia wartości właściwości w <xref:System.Console.WindowWidth%2A> przypadku przekierowania danych wyjściowych powoduje wystąpienie <xref:System.ArgumentOutOfRangeException> <xref:System.IO.IOException> wyjątku lub. Aby zapobiec wyjątku, można ustawić wartość tej właściwości tylko wtedy, <xref:System.Console.IsOutputRedirected%2A> gdy właściwość zwraca. `false`  
  
   
  
## Examples  
 Ten przykład ilustruje <xref:System.Console.SetWindowSize%2A> metodę <xref:System.Console.WindowWidth%2A> oraz właściwości i <xref:System.Console.WindowHeight%2A> . Aby zobaczyć pełny wpływ zmiany rozmiaru okna konsoli, należy uruchomić przykład.  
  
 Przykład raportuje wymiary okna konsoli ustawione na 85 kolumn i 43 wierszy, a następnie czeka na naciśnięcie klawisza. Po naciśnięciu dowolnego klawisza wymiary okna konsoli są wyświetlane, nowe wymiary są raportowane i przykład czeka na kolejne naciśnięcie klawisza. Na koniec po naciśnięciu dowolnego klawisza okno konsoli zostanie przywrócone do jego oryginalnych wymiarów i przykład zostanie przerwany.  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość <see cref="P:System.Console.WindowWidth" /> właściwości lub wartość <see cref="P:System.Console.WindowHeight" /> właściwości jest mniejsza lub równa 0.  
  
—lub— 
Wartość <see cref="P:System.Console.WindowHeight" /> właściwości i wartość <see cref="P:System.Console.WindowTop" /> właściwości jest <see cref="F:System.Int16.MaxValue" />większa lub równa.  
  
—lub— 
Wartość <see cref="P:System.Console.WindowWidth" /> właściwości lub wartość <see cref="P:System.Console.WindowHeight" /> właściwości jest większa niż największa możliwa szerokość lub wysokość okna dla bieżącej rozdzielczości ekranu i czcionki konsoli.</exception>
        <exception cref="T:System.IO.IOException">Błąd podczas odczytywania lub zapisywania informacji.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Operacja ustawiania jest wywoływana w systemie operacyjnym innym niż Windows.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje tekstową reprezentację określonej wartości lub wartości w standardowym strumieniu wyjściowym.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(bool value);" />
      <MemberSignature Language="F#" Value="static member Write : bool -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej wartości logicznej w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>wywołanie, które wyprowadza <xref:System.Boolean.TrueString?displayProperty=nameWithType> lub <xref:System.Boolean.FalseString?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(char value);" />
      <MemberSignature Language="F#" Value="static member Write : char -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje określoną wartość znaku Unicode w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="static member Write : char[] -&gt; unit" Usage="System.Console.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków Unicode.</param>
        <summary>Zapisuje określoną tablicę znaków Unicode w standardowym strumieniu wyjściowym.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Write : decimal -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej <see cref="T:System.Decimal" /> wartości w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.Decimal.ToString%2A?displayProperty=nameWithType>wywołanie.  
  
   
  
## Examples  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(double value);" />
      <MemberSignature Language="F#" Value="static member Write : double -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej wartości zmiennoprzecinkowej podwójnej precyzji w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.Double.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
   
  
## Examples  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int value);" />
      <MemberSignature Language="F#" Value="static member Write : int -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej 32-bitowej wartości całkowitej ze znakiem w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.Int32.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
   
  
## Examples  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(long value);" />
      <MemberSignature Language="F#" Value="static member Write : int64 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej 64-bitowej wartości całkowitej ze znakiem w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.Int64.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
   
  
## Examples  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisania lub <see langword="null" />.</param>
        <summary>Zapisuje tekstową reprezentację określonego obiektu w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `value` jest`null`, nic nie jest zapisywana i żaden wyjątek nie jest zgłaszany. W przeciwnym `value` razie Metodajestwywoływanawceluutworzeniaswojejreprezentacjiwpostaciciągu,awynikowyciągjestzapisywanawstandardowymstrumieniuwyjściowym.`ToString`  
  
   
  
## Examples  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(float value);" />
      <MemberSignature Language="F#" Value="static member Write : single -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej wartości zmiennoprzecinkowej o pojedynczej precyzji w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.Single.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
   
  
## Examples  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje określoną wartość ciągu w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość jest `null`równa, nic nie jest zapisywane w standardowym strumieniu wyjściowym.  
  
   
  
## Examples  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member Write : uint32 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej 32-bitowej nieoznaczonej liczby całkowitej do standardowego strumienia wyjściowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
   
  
## Examples  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member Write : uint64 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej 64-bitowej nieoznaczonej liczby całkowitej do standardowego strumienia wyjściowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
   
  
## Examples  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj -&gt; unit" Usage="System.Console.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożonego.</param>
        <param name="arg0">Obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <summary>Zapisuje tekstową reprezentację określonego obiektu w standardowym strumieniu wyjściowym przy użyciu informacji o określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa [funkcji formatowania złożonego](~/docs/standard/base-types/composite-formatting.md) .NET Framework, aby przekonwertować wartość obiektu na jego reprezentację tekstową i osadzić tę reprezentację w ciągu. Wynikowy ciąg jest zapisywany do strumienia wyjściowego.  
  
 `format` Parametr składa się z zera lub więcej przebiegów tekstu zmieszanych z zerami lub więcej indeksowanych symboli zastępczych o nazwie elementy formatu, które odpowiadają obiektowi na liście parametrów tej metody. Proces formatowania zastępuje każdy element formatu tekstową reprezentacja wartości odpowiedniego obiektu.  
  
 Składnia elementu formatu jest `{` *indeksem*[`,`wyrównania] [**`:`*FormatString*]`}`, który określa obowiązkowy indeks, opcjonalną długość i wyrównanie sformatowanego tekstu oraz Opcjonalny ciąg znaków specyfikatora formatu, który reguluje sposób formatowania wartości odpowiedniego obiektu.  
  
 Środowisko .NET Framework zapewnia rozbudowaną obsługę formatowania. Opisano to szczegółowo w następujących tematach poświęconych formatowaniu:  
  
-   Aby uzyskać więcej informacji na temat funkcji formatowania złożonego obsługiwanej przez <xref:System.String.Format%2A>metody <xref:System.Text.StringBuilder.AppendFormat%2A>takie jak, i niektóre <xref:System.Console.WriteLine%2A>przeciążenia programu, zobacz [formatowanie złożone](~/docs/standard/base-types/composite-formatting.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md) i [ciągi formatów liczb niestandardowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu daty i godziny, zobacz [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md) oraz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu wyliczenia, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
   
  
## Examples  
 W poniższym przykładzie użyto `WriteLine` metody, aby zademonstrować standardowe specyfikatory formatowania liczb, dat i wyliczeń.  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)] 
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 Poniższy przykład ilustruje <xref:System.Console.Write%2A> sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Specyfikacja formatu w <paramref name="format" /> jest nieprawidłowa.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj[] -&gt; unit" Usage="System.Console.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożonego.</param>
        <param name="arg">Tablica obiektów do zapisu przy użyciu <paramref name="format" />.</param>
        <summary>Zapisuje tekstową reprezentację określonej tablicy obiektów w standardowym strumieniu wyjściowym przy użyciu określonych informacji o formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa [funkcji formatowania złożonego](~/docs/standard/base-types/composite-formatting.md) .NET Framework, aby przekonwertować wartość obiektu na jego reprezentację tekstową i osadzić tę reprezentację w ciągu. Wynikowy ciąg jest zapisywany do strumienia wyjściowego.  
  
 `format` Parametr składa się z zera lub więcej przebiegów tekstu zmieszanych z zerami lub więcej indeksowanych symboli zastępczych o nazwie elementy formatu, które odpowiadają obiektowi na liście parametrów tej metody. Proces formatowania zastępuje każdy element formatu tekstową reprezentacja wartości odpowiedniego obiektu.  
  
 Składnia elementu formatu jest `{` *indeksem*[`,`wyrównania] [**`:`*FormatString*]`}`, który określa obowiązkowy indeks, opcjonalną długość i wyrównanie sformatowanego tekstu oraz Opcjonalny ciąg znaków specyfikatora formatu, który reguluje sposób formatowania wartości odpowiedniego obiektu.  
  
 Środowisko .NET Framework zapewnia rozbudowaną obsługę formatowania. Opisano to szczegółowo w następujących tematach poświęconych formatowaniu:  
  
-   Aby uzyskać więcej informacji na temat funkcji formatowania złożonego obsługiwanej przez <xref:System.String.Format%2A>metody <xref:System.Text.StringBuilder.AppendFormat%2A>takie jak, i niektóre <xref:System.Console.WriteLine%2A>przeciążenia programu, zobacz [formatowanie złożone](~/docs/standard/base-types/composite-formatting.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md) i [ciągi formatów liczb niestandardowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu daty i godziny, zobacz [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md) oraz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu wyliczenia, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
 `arg` Parametr jest tablicą parametrów. Argumenty mogą być przekazane do metody jako tablica lub jako lista co najmniej pięciu elementów. Przykłady ilustrują obie formy wywołania metody.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano `Person` klasę z liczbą właściwości, które zawierają informacje o osobie. Jego `GetDescription` Metoda zwraca tablicę zawierającą wszystkie wartości właściwości z wyjątkiem jednego. W przykładzie zostanie użyta tablica zwrócona przez `GetDescription` metodę w celu wyświetlenia wartości obiektu osoby.  
  
 [!code-csharp[System.Console.Write#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams1.cs#1)]
 [!code-vb[System.Console.Write#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams1.vb#1)]  
  
 Należy zauważyć, że przykład wywołuje <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29> metodę, a nie <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29> metodę, ponieważ próbuje `Person.Remarks` wyświetlić wartość właściwości w tym samym wierszu. W tym celu sprawdza wartość <xref:System.Console.CursorLeft%2A> i <xref:System.Console.WindowWidth%2A> właściwości, aby określić, czy jest wystarczająco dużo miejsca, aby można było dopasować uwagi.  Jeśli jest, wyświetla wiersz. Jeśli nie, zapisuje wiersz, wcięcia trzy spacje i wyświetla uwagi.  
  
 Poniższy przykład jest identyczny z pierwszym, z tą różnicą, że dostarcza listę pięciu elementów jako `arg` argument zamiast tablicy parametrów.  
  
 [!code-csharp[System.Console.Write#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams2.cs#2)]
 [!code-vb[System.Console.Write#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />lub <paramref name="arg" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Specyfikacja formatu w <paramref name="format" /> jest nieprawidłowa.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <block subset="none" type="usage"><para>Ta metoda nie jest wywoływana przez C++ kod. Kompilator rozpoznaje wywołania do [System. Console. Write](xref:System.Console.Write*) , które zawierają ciąg i listę czterech lub więcej parametrów obiektu jako wywołanie <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />. C++ Rozpoznaje wywołania metody [System. Console. Write](xref:System.Console.Write*) , które zawierają ciąg i tablicę obiektów jako wywołanie <see cref="M:System.Console.Write(System.String,System.Object)" />.</para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="static member Write : char[] * int * int -&gt; unit" Usage="System.Console.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków Unicode.</param>
        <param name="index">Pozycja początkowa w <paramref name="buffer" />.</param>
        <param name="count">Liczba znaków, jaka ma zostać zapisana.</param>
        <summary>Zapisuje określoną podtablicę znaków Unicode w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapisuje `count` znaki, `buffer` Zaczynając od `index` pozycji do standardowego strumienia wyjściowego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="index" />Plus <paramref name="count" /> określ pozycję, która nie należy do <paramref name="buffer" />zakresu.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożonego.</param>
        <param name="arg0">Pierwszy obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <param name="arg1">Drugi obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <summary>Zapisuje tekstową reprezentację określonych obiektów w standardowym strumieniu wyjściowym przy użyciu informacji o określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa [funkcji formatowania złożonego](~/docs/standard/base-types/composite-formatting.md) .NET Framework, aby przekonwertować wartość obiektu na jego reprezentację tekstową i osadzić tę reprezentację w ciągu. Wynikowy ciąg jest zapisywany do strumienia wyjściowego.  
  
 `format` Parametr składa się z zera lub więcej przebiegów tekstu zmieszanych z zerami lub więcej indeksowanych symboli zastępczych o nazwie elementy formatu, które odpowiadają obiektowi na liście parametrów tej metody. Proces formatowania zastępuje każdy element formatu tekstową reprezentacja wartości odpowiedniego obiektu.  
  
 Składnia elementu formatu jest `{` *indeksem*[`,`wyrównania] [**`:`*FormatString*]`}`, który określa obowiązkowy indeks, opcjonalną długość i wyrównanie sformatowanego tekstu oraz Opcjonalny ciąg znaków specyfikatora formatu, który reguluje sposób formatowania wartości odpowiedniego obiektu.  
  
 Środowisko .NET Framework zapewnia rozbudowaną obsługę formatowania. Opisano to szczegółowo w następujących tematach poświęconych formatowaniu:  
  
-   Aby uzyskać więcej informacji na temat funkcji formatowania złożonego obsługiwanej przez <xref:System.String.Format%2A>metody <xref:System.Text.StringBuilder.AppendFormat%2A>takie jak, i niektóre <xref:System.Console.WriteLine%2A>przeciążenia programu, zobacz [formatowanie złożone](~/docs/standard/base-types/composite-formatting.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md) i [ciągi formatów liczb niestandardowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu daty i godziny, zobacz [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md) oraz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu wyliczenia, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
   
  
## Examples  
 W poniższym przykładzie użyto `WriteLine` metody, aby zademonstrować standardowe specyfikatory formatowania liczb, dat i wyliczeń.  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Specyfikacja formatu w <paramref name="format" /> jest nieprawidłowa.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożonego.</param>
        <param name="arg0">Pierwszy obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <param name="arg1">Drugi obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <param name="arg2">Trzeci obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <summary>Zapisuje tekstową reprezentację określonych obiektów w standardowym strumieniu wyjściowym przy użyciu informacji o określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa [funkcji formatowania złożonego](~/docs/standard/base-types/composite-formatting.md) .NET Framework, aby przekonwertować wartość obiektu na jego reprezentację tekstową i osadzić tę reprezentację w ciągu. Wynikowy ciąg jest zapisywany do strumienia wyjściowego.  
  
 `format` Parametr składa się z zera lub więcej przebiegów tekstu zmieszanych z zerami lub więcej indeksowanych symboli zastępczych o nazwie elementy formatu, które odpowiadają obiektowi na liście parametrów tej metody. Proces formatowania zastępuje każdy element formatu tekstową reprezentacja wartości odpowiedniego obiektu.  
  
 Składnia elementu formatu jest `{` *indeksem*[`,`wyrównania] [**`:`*FormatString*]`}`, który określa obowiązkowy indeks, opcjonalną długość i wyrównanie sformatowanego tekstu oraz Opcjonalny ciąg znaków specyfikatora formatu, który reguluje sposób formatowania wartości odpowiedniego obiektu.  
  
 Środowisko .NET Framework zapewnia rozbudowaną obsługę formatowania. Opisano to szczegółowo w następujących tematach poświęconych formatowaniu:  
  
-   Aby uzyskać więcej informacji na temat funkcji formatowania złożonego obsługiwanej przez <xref:System.String.Format%2A>metody <xref:System.Text.StringBuilder.AppendFormat%2A>takie jak, i niektóre <xref:System.Console.WriteLine%2A>przeciążenia programu, zobacz [formatowanie złożone](~/docs/standard/base-types/composite-formatting.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md) i [ciągi formatów liczb niestandardowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu daty i godziny, zobacz [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md) oraz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu wyliczenia, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
   
  
## Examples  
 W poniższym przykładzie użyto `WriteLine` metody, aby zademonstrować standardowe specyfikatory formatowania liczb, dat i wyliczeń.  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 Poniższy przykład ilustruje `Write` sposób używania metody.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Specyfikacja formatu w <paramref name="format" /> jest nieprawidłowa.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Object" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożonego.</param>
        <param name="arg0">Pierwszy obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <param name="arg1">Drugi obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <param name="arg2">Trzeci obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <param name="arg3">Czwarty obiekt do zapisu przy <paramref name="format" />użyciu.</param>
        <summary>Zapisuje tekstową reprezentację określonych obiektów i listę parametrów o zmiennej długości do standardowego strumienia wyjściowego przy użyciu informacji o określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Ten interfejs API nie jest zgodny ze specyfikacją CLS. Alternatywa zgodna ze specyfikacją <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>CLS ma wartość. Kompilatory C# i Visual Basic automatycznie rozwiązują wywołanie tej metody jako wywołanie <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Ta metoda używa [funkcji formatowania złożonego](~/docs/standard/base-types/composite-formatting.md) .NET Framework, aby przekonwertować wartość obiektu na jego reprezentację tekstową i osadzić tę reprezentację w ciągu. Wynikowy ciąg jest zapisywany do strumienia wyjściowego.  
  
 `format` Parametr składa się z zera lub więcej przebiegów tekstu zmieszanych z zerami lub więcej indeksowanych symboli zastępczych o nazwie elementy formatu, które odpowiadają obiektowi na liście parametrów tej metody. Proces formatowania zastępuje każdy element formatu tekstową reprezentacja wartości odpowiedniego obiektu.  
  
 Składnia elementu formatu jest `{` *indeksem*[`,`wyrównania] [**`:`*FormatString*]`}`, który określa obowiązkowy indeks, opcjonalną długość i wyrównanie sformatowanego tekstu oraz Opcjonalny ciąg znaków specyfikatora formatu, który reguluje sposób formatowania wartości odpowiedniego obiektu.  
  
 Środowisko .NET Framework zapewnia rozbudowaną obsługę formatowania. Opisano to szczegółowo w następujących tematach poświęconych formatowaniu:  
  
-   Aby uzyskać więcej informacji na temat funkcji formatowania złożonego obsługiwanej przez <xref:System.String.Format%2A>metody <xref:System.Text.StringBuilder.AppendFormat%2A>takie jak, i niektóre <xref:System.Console.WriteLine%2A>przeciążenia programu, zobacz [formatowanie złożone](~/docs/standard/base-types/composite-formatting.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md) i [ciągi formatów liczb niestandardowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu daty i godziny, zobacz [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md) oraz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu wyliczenia, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie parametrów zmiennych przy użyciu <xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> metody. Metoda jest wywoływana z ciągiem formatu złożonego i pięcioma elementami formatu.  
  
 [!code-cpp[System.Console.Write#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.write/cpp/con_write.cpp#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Specyfikacja formatu w <paramref name="format" /> jest nieprawidłowa.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <block subset="none" type="usage"><para>Ta metoda jest oznaczona za pomocą <see langword="vararg" /> słowa kluczowego, co oznacza, że obsługuje zmienną liczbę parametrów. Metodę można wywołać z wizualizacji C++, ale nie można jej wywołać z C# lub Visual Basic kodzie. Kompilatory C# i Visual Basic rozwiązują wywołania <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /> jako wywołania do. <see cref="M:System.Console.Write(System.String,System.Object[])" /></para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje określone dane, a następnie bieżący terminator wiersza w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślny terminator wiersza jest ciągiem, którego wartością jest znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n C#" w `vbCrLf` , lub w Visual Basic). Można zmienić terminator wiersza, ustawiając <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> Właściwość <xref:System.Console.Out%2A> właściwości na inny ciąg.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine();" />
      <MemberSignature Language="F#" Value="static member WriteLine : unit -&gt; unit" Usage="System.Console.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje bieżący terminator wiersza w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślny terminator wiersza jest ciągiem, którego wartością jest znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n C#" w `vbCrLf` , lub w Visual Basic). Można zmienić terminator wiersza, ustawiając <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> Właściwość <xref:System.Console.Out%2A> właściwości na inny ciąg. Przykład stanowi ilustrację.  
  
   
  
## Examples  
 Przykład zmienia terminator wiersza z wartości domyślnej "\r\n" lub `vbCrLf` "\r\n\r\n" lub. `vbCrLf`  +  `vbCrLf` Następnie wywołuje <xref:System.Console.WriteLine> metody i <xref:System.Console.WriteLine%28System.String%29> , aby wyświetlić dane wyjściowe w konsoli programu.  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : bool -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej wartości logicznej oraz terminatora bieżącego wiersza w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład generuje dziesięć losowych liczb całkowitych i używa <xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType> metody, aby wskazać, czy są one parzyste.  
  
 [!code-cpp[System.Console.WriteLine#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_boolean1.cpp#4)]
 [!code-csharp[System.Console.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_boolean1.cs#4)]
 [!code-vb[System.Console.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_boolean1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje określony znak Unicode, a po nim bieżący terminator wiersza, wartość do standardowego strumienia wyjściowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład jest kalkulatorem wskazówek, który oblicza wskazówkę 18% i używa <xref:System.Console.WriteLine%2A> metody do wyświetlania kwoty pierwotnej opłaty, kwoty pozostałej i całkowitej kwoty. W przykładzie występuje aplikacja konsoli, która wymaga, aby użytkownik podał kwotę bazowej należności jako parametr wiersza polecenia.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char[] -&gt; unit" Usage="System.Console.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków Unicode.</param>
        <summary>Zapisuje określoną tablicę znaków Unicode, a po niej bieżący terminator wiersza w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : decimal -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej <see cref="T:System.Decimal" /> wartości, a następnie bieżący terminator wiersza w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.Decimal.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład jest kalkulatorem wskazówek, który oblicza wskazówkę 18% i używa <xref:System.Console.WriteLine%2A> metody do wyświetlania kwoty pierwotnej opłaty, kwoty pozostałej i całkowitej kwoty. W przykładzie występuje aplikacja konsoli, która wymaga, aby użytkownik podał kwotę bazowej należności jako parametr wiersza polecenia.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : double -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej wartości zmiennoprzecinkowej podwójnej precyzji, a następnie bieżący terminator wiersza do standardowego strumienia wyjściowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.Double.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład jest kalkulatorem wskazówek, który oblicza wskazówkę 18% i używa <xref:System.Console.WriteLine%2A> metody do wyświetlania kwoty pierwotnej opłaty, kwoty pozostałej i całkowitej kwoty. W przykładzie występuje aplikacja konsoli, która wymaga, aby użytkownik podał kwotę bazowej należności jako parametr wiersza polecenia.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej 32-bitowej podpisanej wartości całkowitej, a po niej bieżący terminator wiersza do standardowego strumienia wyjściowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.Int32.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład jest kalkulatorem wskazówek, który oblicza wskazówkę 18% i używa <xref:System.Console.WriteLine%2A> metody do wyświetlania kwoty pierwotnej opłaty, kwoty pozostałej i całkowitej kwoty. W przykładzie występuje aplikacja konsoli, która wymaga, aby użytkownik podał kwotę bazowej należności jako parametr wiersza polecenia.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int64 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej 64-bitowej podpisanej wartości całkowitej, a po niej bieżący terminator wiersza do standardowego strumienia wyjściowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.Int64.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład jest kalkulatorem wskazówek, który oblicza wskazówkę 18% i używa <xref:System.Console.WriteLine%2A> metody do wyświetlania kwoty pierwotnej opłaty, kwoty pozostałej i całkowitej kwoty. W przykładzie występuje aplikacja konsoli, która wymaga, aby użytkownik podał kwotę bazowej należności jako parametr wiersza polecenia.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonego obiektu, a następnie bieżący terminator wiersza w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `value` ma `null`wartość, tylko terminator wiersza jest zapisywana. W przeciwnym `value` razie Metodajestwywoływanawceluutworzeniaswojejreprezentacjiwpostaciciągu,awynikowyciągjestzapisywanawstandardowymstrumieniuwyjściowym.`ToString`  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Console.WriteLine%28System.Object%29> metodę w celu wyświetlenia każdej wartości w tablicy obiektów w konsoli programu.  
  
 [!code-cpp[System.Console.WriteLine#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_obj1.cpp#3)]
 [!code-csharp[System.Console.WriteLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_obj1.cs#3)]
 [!code-vb[System.Console.WriteLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_obj1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : single -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej wartości zmiennoprzecinkowej o pojedynczej precyzji, a następnie bieżący terminator wiersza w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.Single.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład jest kalkulatorem wskazówek, który oblicza wskazówkę 18% i używa <xref:System.Console.WriteLine%2A> metody do wyświetlania kwoty pierwotnej opłaty, kwoty pozostałej i całkowitej kwoty. W przykładzie występuje aplikacja konsoli, która wymaga, aby użytkownik podał kwotę bazowej należności jako parametr wiersza polecenia.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje określoną wartość ciągu, a po niej bieżący terminator wiersza w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość jest `null`, tylko terminator wiersza jest zapisywana w standardowym strumieniu wyjściowym.  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine> uwagi metody.  
  
   
  
## Examples  
 Przykład zmienia terminator wiersza z wartości domyślnej "\r\n" lub `vbCrLf` "\r\n\r\n" lub. `vbCrLf`  +  `vbCrLf` Następnie wywołuje <xref:System.Console.WriteLine> metody i <xref:System.Console.WriteLine%28System.String%29> , aby wyświetlić dane wyjściowe w konsoli programu.  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : uint32 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej 32-bitowej nieoznaczonej liczby całkowitej, a po niej bieżący terminator wiersza w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład jest kalkulatorem wskazówek, który oblicza wskazówkę 18% i używa <xref:System.Console.WriteLine%2A> metody do wyświetlania kwoty pierwotnej opłaty, kwoty pozostałej i całkowitej kwoty. W przykładzie występuje aplikacja konsoli, która wymaga, aby użytkownik podał kwotę bazowej należności jako parametr wiersza polecenia.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : uint64 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zapisu.</param>
        <summary>Zapisuje tekstową reprezentację określonej 64-bitowej nieoznaczonej liczby całkowitej, a po niej bieżący terminator wiersza w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekstowa reprezentacja `value` jest generowana przez <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> wywołanie metody.  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład jest kalkulatorem wskazówek, który oblicza wskazówkę 18% i używa <xref:System.Console.WriteLine%2A> metody do wyświetlania kwoty pierwotnej opłaty, kwoty pozostałej i całkowitej kwoty. W przykładzie występuje aplikacja konsoli, która wymaga, aby użytkownik podał kwotę bazowej należności jako parametr wiersza polecenia.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożonego.</param>
        <param name="arg0">Obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <summary>Zapisuje tekstową reprezentację określonego obiektu, a następnie bieżący terminator wiersza w standardowym strumieniu wyjściowym przy użyciu informacji o określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa [funkcji formatowania złożonego](~/docs/standard/base-types/composite-formatting.md) .NET Framework, aby przekonwertować wartość obiektu na jego reprezentację tekstową i osadzić tę reprezentację w ciągu. Wynikowy ciąg jest zapisywany do strumienia wyjściowego.  
  
 `format` Parametr składa się z zera lub więcej przebiegów tekstu zmieszanych z zerami lub więcej indeksowanych symboli zastępczych o nazwie elementy formatu, które odpowiadają obiektowi na liście parametrów tej metody. Proces formatowania zastępuje każdy element formatu tekstową reprezentacja wartości odpowiedniego obiektu.  
  
 Składnia elementu formatu jest `{` *indeksem*[`,`wyrównania] [**`:`*FormatString*]`}`, który określa obowiązkowy indeks, opcjonalną długość i wyrównanie sformatowanego tekstu oraz Opcjonalny ciąg znaków specyfikatora formatu, który reguluje sposób formatowania wartości odpowiedniego obiektu.  
  
 Środowisko .NET Framework zapewnia rozbudowaną obsługę formatowania. Opisano to szczegółowo w następujących tematach poświęconych formatowaniu:  
  
-   Aby uzyskać więcej informacji na temat funkcji formatowania złożonego obsługiwanej przez <xref:System.String.Format%2A>metody <xref:System.Text.StringBuilder.AppendFormat%2A>takie jak, i niektóre <xref:System.Console.WriteLine%2A>przeciążenia programu, zobacz [formatowanie złożone](~/docs/standard/base-types/composite-formatting.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md) i [ciągi formatów liczb niestandardowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu daty i godziny, zobacz [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md) oraz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu wyliczenia, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład wywołuje metodę, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> aby wyświetlić pięć losowo generowanych <xref:System.Boolean> wartości.  
  
 [!code-csharp[System.Console.WriteLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine6.cs#6)]
 [!code-vb[System.Console.WriteLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine6.vb#6)]  
  
 Poniższy przykład wywołuje metodę, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> aby wyświetlić bieżącą datę.   Należy zauważyć, że element formatu w `format` argumencie używa [standardowego ciągu formatu daty i godziny](~/docs/standard/base-types/standard-date-and-time-format-strings.md) "D", aby wyświetlić datę w formacie daty długiej bieżącej kultury.  
  
 [!code-csharp[System.Console.WriteLine#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine7.cs#7)]
 [!code-vb[System.Console.WriteLine#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine7.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Specyfikacja formatu w <paramref name="format" /> jest nieprawidłowa.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj[] -&gt; unit" Usage="System.Console.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożonego.</param>
        <param name="arg">Tablica obiektów do zapisu przy użyciu <paramref name="format" />.</param>
        <summary>Zapisuje tekstową reprezentację określonej tablicy obiektów, a po niej bieżący terminator wiersza, w standardowym strumieniu wyjściowym, korzystając z informacji o określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa [funkcji formatowania złożonego](~/docs/standard/base-types/composite-formatting.md) .NET Framework, aby przekonwertować wartość obiektu na jego reprezentację tekstową i osadzić tę reprezentację w ciągu. Wynikowy ciąg jest zapisywany do strumienia wyjściowego.  
  
 `format` Parametr składa się z zera lub więcej przebiegów tekstu zmieszanych z zerami lub więcej indeksowanych symboli zastępczych o nazwie elementy formatu, które odpowiadają obiektowi na liście parametrów tej metody. Proces formatowania zastępuje każdy element formatu tekstową reprezentacja wartości odpowiedniego obiektu.  
  
 Składnia elementu formatu jest `{` *indeksem*[`,`wyrównania] [**`:`*FormatString*]`}`, który określa obowiązkowy indeks, opcjonalną długość i wyrównanie sformatowanego tekstu oraz Opcjonalny ciąg znaków specyfikatora formatu, który reguluje sposób formatowania wartości odpowiedniego obiektu.  
  
 Środowisko .NET Framework zapewnia rozbudowaną obsługę formatowania. Opisano to szczegółowo w następujących tematach poświęconych formatowaniu:  
  
-   Aby uzyskać więcej informacji na temat funkcji formatowania złożonego obsługiwanej przez <xref:System.String.Format%2A>metody <xref:System.Text.StringBuilder.AppendFormat%2A>takie jak, i niektóre <xref:System.Console.WriteLine%2A>przeciążenia programu, zobacz [formatowanie złożone](~/docs/standard/base-types/composite-formatting.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md) i [ciągi formatów liczb niestandardowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu daty i godziny, zobacz [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md) oraz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu wyliczenia, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład ilustruje standardowe specyfikatory formatowania liczb, dat i wyliczeń.  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 Poniższy przykład jest kalkulatorem wskazówek, który oblicza wskazówkę 18% i używa <xref:System.Console.WriteLine%2A> metody do wyświetlania kwoty pierwotnej opłaty, kwoty pozostałej i całkowitej kwoty. W przykładzie występuje aplikacja konsoli, która wymaga, aby użytkownik podał kwotę bazowej należności jako parametr wiersza polecenia.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />lub <paramref name="arg" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Specyfikacja formatu w <paramref name="format" /> jest nieprawidłowa.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <block subset="none" type="usage"><para>Ta metoda nie jest wywoływana przez C++ kod. Kompilator rozpoznaje wywołania [System. Console. WriteLine](xref:System.Console.WriteLine*) , które zawierają ciąg i listę czterech lub więcej parametrów obiektu jako wywołanie <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />. C++ Rozpoznaje wywołania metody [System. Console. WriteLine](xref:System.Console.WriteLine*) , które zawierają ciąg i tablicę obiektów jako wywołanie <see cref="M:System.Console.WriteLine(System.String,System.Object)" />.</para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char[] * int * int -&gt; unit" Usage="System.Console.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków Unicode.</param>
        <param name="index">Pozycja początkowa w <paramref name="buffer" />.</param>
        <param name="count">Liczba znaków, jaka ma zostać zapisana.</param>
        <summary>Zapisuje określoną podtablicę znaków Unicode, a po niej bieżący terminator wiersza w standardowym strumieniu wyjściowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapisuje `count` znaki, `buffer` Zaczynając od `index` pozycji do standardowego strumienia wyjściowego.  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="index" />Plus <paramref name="count" /> określ pozycję, która nie należy do <paramref name="buffer" />zakresu.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożonego.</param>
        <param name="arg0">Pierwszy obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <param name="arg1">Drugi obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <summary>Zapisuje tekstową reprezentację określonych obiektów, a następnie bieżący terminator wiersza w standardowym strumieniu wyjściowym przy użyciu informacji o określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa [funkcji formatowania złożonego](~/docs/standard/base-types/composite-formatting.md) .NET Framework, aby przekonwertować wartość obiektu na jego reprezentację tekstową i osadzić tę reprezentację w ciągu. Wynikowy ciąg jest zapisywany do strumienia wyjściowego.  
  
 `format` Parametr składa się z zera lub więcej przebiegów tekstu zmieszanych z zerami lub więcej indeksowanych symboli zastępczych o nazwie elementy formatu, które odpowiadają obiektowi na liście parametrów tej metody. Proces formatowania zastępuje każdy element formatu tekstową reprezentacja wartości odpowiedniego obiektu.  
  
 Składnia elementu formatu jest `{` *indeksem*[`,`wyrównania] [**`:`*FormatString*]`}`, który określa obowiązkowy indeks, opcjonalną długość i wyrównanie sformatowanego tekstu oraz Opcjonalny ciąg znaków specyfikatora formatu, który reguluje sposób formatowania wartości odpowiedniego obiektu.  
  
 Środowisko .NET Framework zapewnia rozbudowaną obsługę formatowania. Opisano to szczegółowo w następujących tematach poświęconych formatowaniu:  
  
-   Aby uzyskać więcej informacji na temat funkcji formatowania złożonego obsługiwanej przez <xref:System.String.Format%2A>metody <xref:System.Text.StringBuilder.AppendFormat%2A>takie jak, i niektóre <xref:System.Console.WriteLine%2A>przeciążenia programu, zobacz [formatowanie złożone](~/docs/standard/base-types/composite-formatting.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md) i [ciągi formatów liczb niestandardowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu daty i godziny, zobacz [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md) oraz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu wyliczenia, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład ilustruje standardowe specyfikatory formatowania liczb, dat i wyliczeń.  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 Poniższy przykład jest kalkulatorem wskazówek, który oblicza wskazówkę 18% i używa <xref:System.Console.WriteLine%2A> metody do wyświetlania kwoty pierwotnej opłaty, kwoty pozostałej i całkowitej kwoty. W przykładzie występuje aplikacja konsoli, która wymaga, aby użytkownik podał kwotę bazowej należności jako parametr wiersza polecenia.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Specyfikacja formatu w <paramref name="format" /> jest nieprawidłowa.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożonego.</param>
        <param name="arg0">Pierwszy obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <param name="arg1">Drugi obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <param name="arg2">Trzeci obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <summary>Zapisuje tekstową reprezentację określonych obiektów, a następnie bieżący terminator wiersza w standardowym strumieniu wyjściowym przy użyciu informacji o określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa [funkcji formatowania złożonego](~/docs/standard/base-types/composite-formatting.md) .NET Framework, aby przekonwertować wartość obiektu na jego reprezentację tekstową i osadzić tę reprezentację w ciągu. Wynikowy ciąg jest zapisywany do strumienia wyjściowego.  
  
 `format` Parametr składa się z zera lub więcej przebiegów tekstu zmieszanych z zerami lub więcej indeksowanych symboli zastępczych o nazwie elementy formatu, które odpowiadają obiektowi na liście parametrów tej metody. Proces formatowania zastępuje każdy element formatu tekstową reprezentacja wartości odpowiedniego obiektu.  
  
 Składnia elementu formatu jest `{` *indeksem*[`,`wyrównania] [**`:`*FormatString*]`}`, który określa obowiązkowy indeks, opcjonalną długość i wyrównanie sformatowanego tekstu oraz Opcjonalny ciąg znaków specyfikatora formatu, który reguluje sposób formatowania wartości odpowiedniego obiektu.  
  
 Środowisko .NET Framework zapewnia rozbudowaną obsługę formatowania. Opisano to szczegółowo w następujących tematach poświęconych formatowaniu:  
  
-   Aby uzyskać więcej informacji na temat funkcji formatowania złożonego obsługiwanej przez <xref:System.String.Format%2A>metody <xref:System.Text.StringBuilder.AppendFormat%2A>takie jak, i niektóre <xref:System.Console.WriteLine%2A>przeciążenia programu, zobacz [formatowanie złożone](~/docs/standard/base-types/composite-formatting.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md) i [ciągi formatów liczb niestandardowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu daty i godziny, zobacz [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md) oraz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu wyliczenia, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład ilustruje standardowe specyfikatory formatowania liczb, dat i wyliczeń.  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 Poniższy przykład jest kalkulatorem wskazówek, który oblicza wskazówkę 18% i używa <xref:System.Console.WriteLine%2A> metody do wyświetlania kwoty pierwotnej opłaty, kwoty pozostałej i całkowitej kwoty. W przykładzie występuje aplikacja konsoli, która wymaga, aby użytkownik podał kwotę bazowej należności jako parametr wiersza polecenia.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Specyfikacja formatu w <paramref name="format" /> jest nieprawidłowa.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Object" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożonego.</param>
        <param name="arg0">Pierwszy obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <param name="arg1">Drugi obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <param name="arg2">Trzeci obiekt do zapisu przy użyciu <paramref name="format" />.</param>
        <param name="arg3">Czwarty obiekt do zapisu przy <paramref name="format" />użyciu.</param>
        <summary>Zapisuje tekstową reprezentację określonych obiektów i listę parametrów o zmiennej długości, a następnie bieżący terminator wiersza w standardowym strumieniu wyjściowym przy użyciu określonych informacji o formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Ten interfejs API nie jest zgodny ze specyfikacją CLS. Alternatywa zgodna ze specyfikacją <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>CLS ma wartość. Kompilatory C# i Visual Basic automatycznie rozwiązują wywołanie tej metody jako wywołanie <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Ta metoda używa [funkcji formatowania złożonego](~/docs/standard/base-types/composite-formatting.md) .NET Framework, aby przekonwertować wartość obiektu na jego reprezentację tekstową i osadzić tę reprezentację w ciągu. Wynikowy ciąg jest zapisywany do strumienia wyjściowego.  
  
 `format` Parametr składa się z zera lub więcej przebiegów tekstu zmieszanych z zerami lub więcej indeksowanych symboli zastępczych o nazwie elementy formatu, które odpowiadają obiektowi na liście parametrów tej metody. Proces formatowania zastępuje każdy element formatu tekstową reprezentacja wartości odpowiedniego obiektu.  
  
 Składnia elementu formatu jest `{` *indeksem*[`,`wyrównania] [**`:`*FormatString*]`}`, który określa obowiązkowy indeks, opcjonalną długość i wyrównanie sformatowanego tekstu oraz Opcjonalny ciąg znaków specyfikatora formatu, który reguluje sposób formatowania wartości odpowiedniego obiektu.  
  
 Środowisko .NET Framework zapewnia rozbudowaną obsługę formatowania. Opisano to szczegółowo w następujących tematach poświęconych formatowaniu:  
  
-   Aby uzyskać więcej informacji na temat funkcji formatowania złożonego obsługiwanej przez <xref:System.String.Format%2A>metody <xref:System.Text.StringBuilder.AppendFormat%2A>takie jak, i niektóre <xref:System.Console.WriteLine%2A>przeciążenia programu, zobacz [formatowanie złożone](~/docs/standard/base-types/composite-formatting.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz [Standardowe ciągi formatujące](~/docs/standard/base-types/standard-numeric-format-strings.md) i [ciągi formatów liczb niestandardowych](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu daty i godziny, zobacz [Standardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/standard-date-and-time-format-strings.md) oraz [Niestandardowe ciągi formatujące datę i godzinę](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat specyfikatorów formatu wyliczenia, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).  
  
-   Aby uzyskać więcej informacji na temat formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
 Aby uzyskać więcej informacji na temat terminatora wiersza, zobacz sekcję <xref:System.Console.WriteLine%2A> uwagi metody, która nie wymaga żadnych parametrów.  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie argumentów zmiennych przy użyciu <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> metody. Metoda jest wywoływana z ciągiem formatu złożonego i pięcioma elementami formatu.  
  
 [!code-cpp[System.Console.WriteLine#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_vararg.cpp#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Specyfikacja formatu w <paramref name="format" /> jest nieprawidłowa.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Modyfikowanie bezpiecznych okien najwyższego poziomu i okien podrzędnych. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <block subset="none" type="usage"><para>Ta metoda jest oznaczona za pomocą <see langword="vararg" /> słowa kluczowego, co oznacza, że obsługuje zmienną liczbę parametrów. Metodę można wywołać z wizualizacji C++, ale nie można jej wywołać z C# lub Visual Basic kodzie. Kompilatory C# i Visual Basic rozwiązują wywołania <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /> jako wywołania do. <see cref="M:System.Console.WriteLine(System.String,System.Object[])" /></para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
      </Docs>
    </Member>
  </Members>
</Type>