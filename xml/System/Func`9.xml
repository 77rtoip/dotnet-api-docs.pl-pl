<Type Name="Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;" FullName="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="649ee062fdd63e79232460d652ed71c222a23867" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69406217" /></Metadata><TypeSignature Language="C#" Value="public delegate TResult Func&lt;in T1,in T2,in T3,in T4,in T5,in T6,in T7,in T8,out TResult&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Func`9&lt;- T1, - T2, - T3, - T4, - T5, - T6, - T7, - T8, + TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Func`9" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Func(Of In T1, In T2, In T3, In T4, In T5, In T6, In T7, In T8, Out TResult)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8) As TResult " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename TResult&gt;&#xA;public delegate TResult Func(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8);" />
  <TypeSignature Language="F#" Value="type Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'Result&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 -&gt; 'Result" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T6">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T7">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T8">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TResult">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
    <Parameter Name="arg6" Type="T6" />
    <Parameter Name="arg7" Type="T7" />
    <Parameter Name="arg8" Type="T8" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">Typ pierwszego parametru metody, który jest hermetyzowany przez ten delegat.</typeparam>
    <typeparam name="T2">Typ drugiego parametru metody, który jest hermetyzowany przez ten delegat.</typeparam>
    <typeparam name="T3">Typ trzeciego parametru metody, który jest hermetyzowany przez ten delegat.</typeparam>
    <typeparam name="T4">Typ czwartego parametru metody, który jest hermetyzowany przez ten delegat.</typeparam>
    <typeparam name="T5">Typ piątego parametru metody, który jest hermetyzowany przez ten delegat.</typeparam>
    <typeparam name="T6">Typ szóstego parametru metody, który jest hermetyzowany przez ten delegat.</typeparam>
    <typeparam name="T7">Typ siódmego parametru metody, która jest hermetyzowana przez ten delegat.</typeparam>
    <typeparam name="T8">Typ ósmego parametru metody, który jest hermetyzowany przez ten delegat.</typeparam>
    <typeparam name="TResult">Typ wartości zwracanej przez ten delegata.</typeparam>
    <param name="arg1">Pierwszy parametr metody, która jest hermetyzowana przez ten delegat.</param>
    <param name="arg2">Drugi parametr metody, która jest hermetyzowana przez ten delegat.</param>
    <param name="arg3">Trzeci parametr metody, która jest hermetyzowana przez ten delegat.</param>
    <param name="arg4">Czwarty parametr metody, która jest hermetyzowana przez ten delegat.</param>
    <param name="arg5">Piąty parametr metody, która jest hermetyzowana przez ten delegat.</param>
    <param name="arg6">Szósty parametr metody, która jest hermetyzowana przez ten delegat.</param>
    <param name="arg7">Siódmy parametr metody, która jest hermetyzowana przez ten delegat.</param>
    <param name="arg8">Ósmy parametr metody, która jest hermetyzowana przez ten delegat.</param>
    <summary>Hermetyzuje metodę, która ma osiem parametrów i zwraca wartość typu określonego przez <typeparamref name="TResult" /> parametr.</summary>
    <returns>Wartość zwracana metody, która jest hermetyzowana przez ten delegat.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tego delegata można użyć do reprezentowania metody, którą można przekazać jako parametru bez jawnego deklarowania niestandardowego delegata. Metoda hermetyzowana musi odpowiadać sygnaturze metody zdefiniowanej przez tego delegata. Oznacza to, że metoda hermetyzowana musi mieć osiem parametrów, z których każda jest przenoszona do niego przez wartość i że musi zwrócić wartość.  
  
> [!NOTE]
>  Aby odwołać się do metody, która ma osiem `void` parametrów i zwraca (lub w Visual Basic, która jest `Sub` zadeklarowana jako, `Function`a nie jako), <xref:System.Action%608> należy zamiast tego użyć delegata generycznego.  
  
 Można również użyć <xref:System.Func%609> delegata z metodami anonimowymi i wyrażeniami lambda.  
  
 Typ podstawowy wyrażenia lambda jest jednym z delegatów ogólnych `Func` . Dzięki temu można przekazać wyrażenie lambda jako parametr bez jawnego przypisywania go do delegata.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Action`8" />
  </Docs>
</Type>
