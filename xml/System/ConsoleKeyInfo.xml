<Type Name="ConsoleKeyInfo" FullName="System.ConsoleKeyInfo">
  <TypeSignature Language="C#" Value="public struct ConsoleKeyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit ConsoleKeyInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ConsoleKeyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure ConsoleKeyInfo" />
  <TypeSignature Language="C++ CLI" Value="public value class ConsoleKeyInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Console</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="36ef3-101">W tym artykule opisano klucz konsoli, który został naciśnięty, włączając znak reprezentowany przez klucz konsoli i stan klawisze modyfikujące SHIFT, ALT i CTRL.</span><span class="sxs-lookup"><span data-stu-id="36ef3-101">Describes the console key that was pressed, including the character represented by the console key and the state of the SHIFT, ALT, and CTRL modifier keys.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ef3-102"><xref:System.ConsoleKeyInfo> Typu nie może być utworzone przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="36ef3-102">The <xref:System.ConsoleKeyInfo> type is not intended to be created by users.</span></span> <span data-ttu-id="36ef3-103">Zamiast tego jest zwracany do użytkownika w odpowiedzi na wywołanie <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="36ef3-103">Instead, it is returned to the user in response to calling the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="36ef3-104"><xref:System.ConsoleKeyInfo> Opisuje obiekt <xref:System.ConsoleKey> stała i znak Unicode, który odpowiada klucz naciśniętego konsoli.</span><span class="sxs-lookup"><span data-stu-id="36ef3-104">The <xref:System.ConsoleKeyInfo> object describes the <xref:System.ConsoleKey> constant and Unicode character, if any, that correspond to the pressed console key.</span></span> <span data-ttu-id="36ef3-105"><xref:System.ConsoleKeyInfo> Również opis obiektu, z bitowego połączenia <xref:System.ConsoleModifiers> wartości, czy co najmniej jeden SHIFT, ALT i CTRL klawisze modyfikujące naciśnięto jednocześnie z kluczem konsoli.</span><span class="sxs-lookup"><span data-stu-id="36ef3-105">The <xref:System.ConsoleKeyInfo> object also describes, in a bitwise combination of <xref:System.ConsoleModifiers> values, whether one or more SHIFT, ALT, or CTRL modifier keys was pressed simultaneously with the console key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36ef3-106">W poniższym przykładzie pokazano, przy użyciu <xref:System.ConsoleKeyInfo> obiektu w operacji odczytu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-106">The following example demonstrates using a <xref:System.ConsoleKeyInfo> object in a read operation.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ConsoleModifiers" />
    <altmember cref="T:System.ConsoleKey" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleKeyInfo (char keyChar, ConsoleKey key, bool shift, bool alt, bool control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar, valuetype System.ConsoleKey key, bool shift, bool alt, bool control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char, key As ConsoleKey, shift As Boolean, alt As Boolean, control As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleKeyInfo(char keyChar, ConsoleKey key, bool shift, bool alt, bool control);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
        <Parameter Name="key" Type="System.ConsoleKey" />
        <Parameter Name="shift" Type="System.Boolean" />
        <Parameter Name="alt" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyChar"><span data-ttu-id="36ef3-107">Znak Unicode, który odpowiada <c>klucza</c> parametru.</span><span class="sxs-lookup"><span data-stu-id="36ef3-107">The Unicode character that corresponds to the <c>key</c> parameter.</span></span></param>
        <param name="key"><span data-ttu-id="36ef3-108">Klucz konsoli, który odpowiada <c>keyChar</c> parametru.</span><span class="sxs-lookup"><span data-stu-id="36ef3-108">The console key that corresponds to the <c>keyChar</c> parameter.</span></span></param>
        <param name="shift">
          <span data-ttu-id="36ef3-109"><see langword="true" /> Aby wskazać, że został naciśnięty klawisz SHIFT; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="36ef3-109"><see langword="true" /> to indicate that a SHIFT key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <param name="alt">
          <span data-ttu-id="36ef3-110"><see langword="true" /> Aby wskazać, że został naciśnięty klawisz ALT; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="36ef3-110"><see langword="true" /> to indicate that an ALT key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <param name="control">
          <span data-ttu-id="36ef3-111"><see langword="true" /> Aby wskazać, że został naciśnięty klawisz CTRL; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="36ef3-111"><see langword="true" /> to indicate that a CTRL key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="36ef3-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.ConsoleKeyInfo" /> struktury przy użyciu określony znak, klucza konsoli i klawisze modyfikujące.</span><span class="sxs-lookup"><span data-stu-id="36ef3-112">Initializes a new instance of the <see cref="T:System.ConsoleKeyInfo" /> structure using the specified character, console key, and modifier keys.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ef3-113">Tego typu nie mają być tworzone przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="36ef3-113">This type is not intended to be created by users.</span></span> <span data-ttu-id="36ef3-114">Zamiast tego jest zwracany do użytkownika w odpowiedzi na wywołanie <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="36ef3-114">Instead, it is returned to the user in response to calling the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="36ef3-115"><xref:System.ConsoleKeyInfo> Typ Określa, czy lewego lub prawego SHIFT, ALT i CTRL klawisz modyfikujący został naciśnięty.</span><span class="sxs-lookup"><span data-stu-id="36ef3-115">The <xref:System.ConsoleKeyInfo> type does not specify whether the left or right SHIFT, ALT, or CTRL modifier key was pressed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="36ef3-116">Wartość numeryczna <paramref name="key" /> parametru jest mniejszy niż 0 lub większą niż 255.</span><span class="sxs-lookup"><span data-stu-id="36ef3-116">The numeric value of the <paramref name="key" /> parameter is less than 0 or greater than 255.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36ef3-117">Pobiera wartość wskazującą, czy obiekt lub określone <see cref="T:System.ConsoleKeyInfo" /> obiekt jest taki sam, jak bieżący <see cref="T:System.ConsoleKeyInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-117">Gets a value indicating whether an object or specified <see cref="T:System.ConsoleKeyInfo" /> object is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ConsoleKeyInfo obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.ConsoleKeyInfo obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As ConsoleKeyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(ConsoleKeyInfo obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.ConsoleKeyInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="36ef3-118">Obiekt do porównania z bieżącą <see cref="T:System.ConsoleKeyInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-118">An object to compare to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="36ef3-119">Pobiera wartość wskazującą czy określonego <see cref="T:System.ConsoleKeyInfo" /> obiekt jest taki sam, jak bieżący <see cref="T:System.ConsoleKeyInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-119">Gets a value indicating whether the specified <see cref="T:System.ConsoleKeyInfo" /> object is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="36ef3-120"><see langword="true" /> Jeśli <paramref name="obj" /> jest taki sam, jak bieżący <see cref="T:System.ConsoleKeyInfo" /> obiektu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="36ef3-120"><see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ef3-121">Dwa <xref:System.ConsoleKeyInfo> obiekty są takie same Jeśli odpowiednie <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, i <xref:System.ConsoleKeyInfo.Modifiers%2A> właściwości są takie same.</span><span class="sxs-lookup"><span data-stu-id="36ef3-121">Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="36ef3-122"><xref:System.ConsoleKeyInfo.Equals%2A> Metoda przeprowadza nieco lepszym rozwiązaniem niż <xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=nameWithType> metody, ponieważ nie muszą być konwertowane `obj` do obiektu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-122">The <xref:System.ConsoleKeyInfo.Equals%2A> method performs slightly better than the <xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=nameWithType> method because it does not have to convert `obj` to an object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="36ef3-123">Obiekt do porównania z bieżącą <see cref="T:System.ConsoleKeyInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-123">An object to compare to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="36ef3-124">Pobiera wartość wskazującą, czy określony obiekt jest taki sam, jak bieżący <see cref="T:System.ConsoleKeyInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-124">Gets a value indicating whether the specified object is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="36ef3-125"><see langword="true" /> Jeśli <paramref name="value" /> jest <see cref="T:System.ConsoleKeyInfo" /> obiektu i jest taki sam, jak bieżący <see cref="T:System.ConsoleKeyInfo" /> obiektu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="36ef3-125"><see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.ConsoleKeyInfo" /> object and is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ef3-126">Dwa <xref:System.ConsoleKeyInfo> obiekty są takie same Jeśli odpowiednie <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, i <xref:System.ConsoleKeyInfo.Modifiers%2A> właściwości są takie same.</span><span class="sxs-lookup"><span data-stu-id="36ef3-126">Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36ef3-127">W poniższym przykładzie pokazano <xref:System.ConsoleKeyInfo.Equals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="36ef3-127">The following example demonstrates the <xref:System.ConsoleKeyInfo.Equals%2A> method.</span></span>  
  
 [!code-cpp[system.ConsoleKeyInfo.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals/cpp/consolekeyinfo.equals.cpp#1)]
 [!code-csharp[system.ConsoleKeyInfo.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals/cs/equals.cs#1)]
 [!code-vb[system.ConsoleKeyInfo.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals/vb/equals.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36ef3-128">Zwraca wartość skrótu dla bieżącego <see cref="T:System.ConsoleKeyInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-128">Returns the hash code for the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="36ef3-129">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="36ef3-129">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ef3-130">Wartość zwrócona przez <xref:System.ConsoleKeyInfo.GetHashCode%2A> metoda nie jest odpowiednia do rozróżniania jedną <xref:System.ConsoleKeyInfo> obiekt od drugiego.</span><span class="sxs-lookup"><span data-stu-id="36ef3-130">The value returned by the <xref:System.ConsoleKeyInfo.GetHashCode%2A> method is not suitable for distinguishing one <xref:System.ConsoleKeyInfo> object from another.</span></span> <span data-ttu-id="36ef3-131">Jeśli aplikacja wymaga unikatową wartość skrótu, Zastąp <xref:System.ConsoleKeyInfo.GetHashCode%2A> metody z własnej metody.</span><span class="sxs-lookup"><span data-stu-id="36ef3-131">If your application needs a unique hash code, override the <xref:System.ConsoleKeyInfo.GetHashCode%2A> method with your own method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36ef3-132">W poniższym przykładzie pokazano <xref:System.ConsoleKeyInfo.GetHashCode%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="36ef3-132">The following example demonstrates the <xref:System.ConsoleKeyInfo.GetHashCode%2A> method.</span></span>  
  
 [!code-cpp[System.ConsoleKeyInfo.GetHashCode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode/cpp/hash.cpp#1)]
 [!code-csharp[System.ConsoleKeyInfo.GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode/cs/hash.cs#1)]
 [!code-vb[System.ConsoleKeyInfo.GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode/vb/hash.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public ConsoleKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ConsoleKey Key" />
      <MemberSignature Language="DocId" Value="P:System.ConsoleKeyInfo.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As ConsoleKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ConsoleKey Key { ConsoleKey get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36ef3-133">Pobiera klucz konsoli reprezentowany przez bieżący <see cref="T:System.ConsoleKeyInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-133">Gets the console key represented by the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="36ef3-134">Wartość, która identyfikuje klucz konsoli, który został naciśnięty.</span><span class="sxs-lookup"><span data-stu-id="36ef3-134">A value that identifies the console key that was pressed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36ef3-135">W poniższym przykładzie pokazano, przy użyciu <xref:System.ConsoleKeyInfo.Key%2A> właściwości w operacji odczytu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-135">The following example demonstrates using a <xref:System.ConsoleKeyInfo.Key%2A> property in a read operation.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.ConsoleKeyInfo.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36ef3-136">Pobiera reprezentowany przez bieżący znak Unicode <see cref="T:System.ConsoleKeyInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-136">Gets the Unicode character represented by the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="36ef3-137">Obiekt, który odpowiada kluczowi konsoli reprezentowany przez bieżący <see cref="T:System.ConsoleKeyInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-137">An object that corresponds to the console key represented by the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ef3-138">Jeśli naciśnięto klawisz nie jest zmapowany na znak Unicode (na przykład w przypadku, gdy użytkownik naciśnie **F1** klucza lub **Home** klucza), wartość <xref:System.ConsoleKeyInfo.KeyChar%2A> właściwość jest \U0000.</span><span class="sxs-lookup"><span data-stu-id="36ef3-138">If the key pressed does not map to a Unicode character (for example, if the user presses the **F1** key or the **Home** key), the value of the <xref:System.ConsoleKeyInfo.KeyChar%2A> property is \U0000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36ef3-139">W poniższym przykładzie użyto <xref:System.ConsoleKeyInfo.KeyChar%2A> właściwości, aby dodać dane wejściowe znaków przez użytkownika na ciąg.</span><span class="sxs-lookup"><span data-stu-id="36ef3-139">The following example uses the <xref:System.ConsoleKeyInfo.KeyChar%2A> property to add the characters input by the user into a string.</span></span> <span data-ttu-id="36ef3-140">Przykład ignoruje klawisze specjalne innymi niż **ENTER**, **ESC**, i **BACKSPACE**.</span><span class="sxs-lookup"><span data-stu-id="36ef3-140">The example ignores special keys other than **ENTER**, **ESC**, and **BACKSPACE**.</span></span>  
  
 [!code-csharp[System.ConsoleKeyInfo.KeyChar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolekeyinfo.keychar/cs/keychar1.cs#1)]
 [!code-vb[System.ConsoleKeyInfo.KeyChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolekeyinfo.keychar/vb/keychar1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public ConsoleModifiers Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ConsoleModifiers Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.ConsoleKeyInfo.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As ConsoleModifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ConsoleModifiers Modifiers { ConsoleModifiers get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleModifiers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36ef3-141">Pobiera bitowe połączenie <see cref="T:System.ConsoleModifiers" /> wartości, które określają jedną lub więcej klawisze modyfikujące jednocześnie naciśnięty klawisz konsoli.</span><span class="sxs-lookup"><span data-stu-id="36ef3-141">Gets a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values that specifies one or more modifier keys pressed simultaneously with the console key.</span></span></summary>
        <value><span data-ttu-id="36ef3-142">Bitowe połączenie wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="36ef3-142">A bitwise combination of the enumeration values.</span></span> <span data-ttu-id="36ef3-143">Nie ma żadnej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="36ef3-143">There is no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36ef3-144">W poniższym przykładzie pokazano, przy użyciu <xref:System.ConsoleKeyInfo.Modifiers%2A> właściwości w operacji odczytu.</span><span class="sxs-lookup"><span data-stu-id="36ef3-144">The following example demonstrates using a <xref:System.ConsoleKeyInfo.Modifiers%2A> property in a read operation.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.ConsoleKeyInfo a, valuetype System.ConsoleKeyInfo b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As ConsoleKeyInfo, b As ConsoleKeyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.ConsoleKeyInfo" />
        <Parameter Name="b" Type="System.ConsoleKeyInfo" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="36ef3-145">Pierwszy obiekt, który ma zostać porównany.</span><span class="sxs-lookup"><span data-stu-id="36ef3-145">The first object to compare.</span></span></param>
        <param name="b"><span data-ttu-id="36ef3-146">Drugi obiekt, który będzie porównywany.</span><span class="sxs-lookup"><span data-stu-id="36ef3-146">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="36ef3-147">Wskazuje, czy określony <see cref="T:System.ConsoleKeyInfo" /> obiekty są takie same.</span><span class="sxs-lookup"><span data-stu-id="36ef3-147">Indicates whether the specified <see cref="T:System.ConsoleKeyInfo" /> objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="36ef3-148"><see langword="true" /> Jeśli <paramref name="a" /> jest równa <paramref name="b" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="36ef3-148"><see langword="true" /> if <paramref name="a" /> is equal to <paramref name="b" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ef3-149">Dwa <xref:System.ConsoleKeyInfo> obiekty są takie same Jeśli odpowiednie <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, i <xref:System.ConsoleKeyInfo.Modifiers%2A> właściwości są takie same.</span><span class="sxs-lookup"><span data-stu-id="36ef3-149">Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="36ef3-150">Metoda równoważne tego operatora jest <xref:System.ConsoleKeyInfo.Equals%28System.ConsoleKeyInfo%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="36ef3-150">The equivalent method for this operator is <xref:System.ConsoleKeyInfo.Equals%28System.ConsoleKeyInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.ConsoleKeyInfo a, valuetype System.ConsoleKeyInfo b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As ConsoleKeyInfo, b As ConsoleKeyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.ConsoleKeyInfo" />
        <Parameter Name="b" Type="System.ConsoleKeyInfo" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="36ef3-151">Pierwszy obiekt, który ma zostać porównany.</span><span class="sxs-lookup"><span data-stu-id="36ef3-151">The first object to compare.</span></span></param>
        <param name="b"><span data-ttu-id="36ef3-152">Drugi obiekt, który będzie porównywany.</span><span class="sxs-lookup"><span data-stu-id="36ef3-152">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="36ef3-153">Wskazuje, czy określony <see cref="T:System.ConsoleKeyInfo" /> obiekty nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="36ef3-153">Indicates whether the specified <see cref="T:System.ConsoleKeyInfo" /> objects are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="36ef3-154"><see langword="true" /> Jeśli <paramref name="a" /> nie jest równa <paramref name="b" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="36ef3-154"><see langword="true" /> if <paramref name="a" /> is not equal to <paramref name="b" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ef3-155">Dwa <xref:System.ConsoleKeyInfo> obiekty są takie same Jeśli odpowiednie <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, i <xref:System.ConsoleKeyInfo.Modifiers%2A> właściwości są takie same.</span><span class="sxs-lookup"><span data-stu-id="36ef3-155">Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>