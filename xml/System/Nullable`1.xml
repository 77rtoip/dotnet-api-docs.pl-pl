<Type Name="Nullable&lt;T&gt;" FullName="System.Nullable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e240940b791ea1dbd1691f306c0c8350e09e3673" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69419687" /></Metadata><TypeSignature Language="C#" Value="public struct Nullable&lt;T&gt; where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Nullable`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Nullable`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Nullable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Nullable" />
  <TypeSignature Language="F#" Value="type Nullable&lt;'T (requires 'T : struct)&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">Typ wartości bazowej typu <see cref="T:System.Nullable`1" /> ogólnego.</typeparam>
    <summary>Reprezentuje typ wartości, który można przypisać <see langword="null" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ jest uznawany za dopuszczający wartość null, jeśli może być przypisana wartością lub można `null`ją przypisać, co oznacza, że typ nie ma żadnej wartości. Domyślnie wszystkie typy odwołań, takie jak <xref:System.String>, mają wartość null, ale wszystkie typy wartości, takie jak <xref:System.Int32>, nie są.  
  
 W C# i Visual Basic oznaczasz typ wartości jako Nullable przy użyciu `?` notacji po typie wartości. Na przykład `int?` w programie C# lub `Integer?` w Visual Basic deklaruje typ wartości całkowitej, którą można przypisać `null`.  
  
 <xref:System.Nullable%601> Struktura obsługuje użycie tylko typu wartości jako typu dopuszczającego wartość null, ponieważ typy referencyjne dopuszczają wartości null przez projektowanie.  
  
 Klasa zapewnia uzupełniającą obsługę <xref:System.Nullable%601> struktury. <xref:System.Nullable> <xref:System.Nullable> Klasa obsługuje uzyskanie typu bazowego typu dopuszczającego wartość null oraz operacje porównania i równości na parach typów dopuszczających wartości null, których podstawowy typ wartości nie obsługuje porównania ogólnego i operacji równości.  
  
## <a name="fundamental-properties"></a>Podstawowe właściwości  
 Dwoma podstawowymi elementami członkowskimi <xref:System.Nullable%601> struktury <xref:System.Nullable%601.HasValue%2A> są właściwości i <xref:System.Nullable%601.Value%2A> . <xref:System.Nullable%601.HasValue%2A> Jeśli właściwość <xref:System.Nullable%601> obiektu <xref:System.Nullable%601.Value%2A> to `true`, do wartości obiektu można uzyskać dostęp za pomocą właściwości. Jeśli właściwość jest `false`, wartość obiektu jest niezdefiniowana i próba <xref:System.InvalidOperationException>uzyskania dostępu <xref:System.Nullable%601.Value%2A> do właściwości zgłasza. <xref:System.Nullable%601.HasValue%2A>  
  
## <a name="boxing-and-unboxing"></a>Opakowywanie i rozpakowywanie  
 Gdy typ dopuszczający wartość null jest opakowany, środowisko uruchomieniowe języka wspólnego automatycznie przydzieli wartość <xref:System.Nullable%601> podstawową obiektu, a <xref:System.Nullable%601> nie sam obiekt. Oznacza to, że jeśli <xref:System.Nullable%601.HasValue%2A> właściwość jest `true` <xref:System.Nullable%601.Value%2A> , zawartość właściwości jest opakowana. Gdy wartość podstawowa typu dopuszczającego wartości null jest nieopakowana, środowisko uruchomieniowe języka wspólnego <xref:System.Nullable%601> tworzy nową strukturę zainicjowaną dla podstawowej wartości.  
  
 Jeśli właściwość typu dopuszczającego wartość null `false`ma wartość, wynikiem operacji pakowania jest `null`. `HasValue` W związku z tym, jeśli opakowany typ dopuszczający wartość null jest przekazanie do metody, która oczekuje argumentu obiektu, ta metoda musi być przygotowana do `null`obsługi przypadku, gdy argument jest. Gdy `null` nie jest opakowany do typu dopuszczającego wartość null, środowisko uruchomieniowe <xref:System.Nullable%601> języka wspólnego tworzy nową `HasValue` strukturę i `false`inicjuje jej właściwość w.  
  
## <a name="includenet_v451includesnet-v451-mdmd-and-windows-runtime-components"></a>[!INCLUDE[net_v451](~/includes/net-v451-md.md)]i środowisko wykonawcze systemu Windows składniki  
 Począwszy od <xref:System.Nullable%601> , można dołączyć typ jako element członkowski struktury wyeksportowanej w bibliotece WinMD. [!INCLUDE[net_v451](~/includes/net-v451-md.md)] Wcześniej nie było to obsługiwane.  
  
   
  
## Examples  
 Poniższy przykład kodu definiuje trzy wiersze tabeli w przykładowej bazie danych Microsoft pubs. Tabela zawiera dwie kolumny, które nie dopuszczają wartości null, oraz dwie kolumny, które mają wartość null.  
  
 [!code-cpp[system.nullableOfT.class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.nullableOfT.class/cpp/tarow.cpp#1)]
 [!code-csharp[system.nullableOfT.class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.class/cs/tarow.cs#1)]
 [!code-vb[system.nullableOfT.class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.class/vb/tarow.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Nullable" />
    <related type="Article" href="https://msdn.microsoft.com/library/e473cb01-28ca-42be-9cea-f717055d72c6">Typy dopuszczające wartości zerowe (Przewodnik programowania w języku C#)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/9ac3b602-6f96-4e6d-96f7-cd4e81c468a6">Typy o wartości zerowalnej (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Nullable (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable(T value);" />
      <MemberSignature Language="F#" Value="new Nullable&lt;'T (requires 'T : struct)&gt; : 'T -&gt; Nullable&lt;'T (requires 'T : struct)&gt;" Usage="new System.Nullable&lt;'T (requires 'T : struct)&gt; value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Typ wartości.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Nullable`1" /> struktury do określonej wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Nullable%601.%23ctor%2A> Konstruktor `value` inicjuje właściwość nowego<xref:System.Nullable%601> obiektu do`true`, i<xref:System.Nullable%601.Value%2A> właściwość do wartości parametru. <xref:System.Nullable%601.HasValue%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="nullable.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">Obiekt.</param>
        <summary>Wskazuje, czy bieżący <see cref="T:System.Nullable`1" /> obiekt jest równy podanemu obiektowi.</summary>
        <returns><see langword="true" />Jeśli parametr jest równy bieżącemu <see cref="T:System.Nullable`1" /> obiektowi; w przeciwnym razie <see langword="false" />,. <paramref name="other" />  
  
W tej tabeli opisano, jak równość jest definiowana dla porównywanych wartości: 
 <list type="table"><listheader><term> Wartość zwracana 
 </term><description> Opis 
 </description></listheader><item><term><see langword="true" /></term><description> Właściwość ma <see langword="false" />wartość, a <paramref name="other" /> parametr to <see langword="null" />. <see cref="P:System.Nullable`1.HasValue" /> Oznacza to, że dwie wartości null są równe definicji.  
  
—lub— 
Właściwość jest <see langword="true" />, a wartość zwrócona przez <see cref="P:System.Nullable`1.Value" /> właściwość jest równa <paramref name="other" /> parametrowi. <see cref="P:System.Nullable`1.HasValue" />  
  
 </description></item><item><term><see langword="false" /></term><description> <see cref="P:System.Nullable`1.HasValue" /> Właściwość bieżącej <see cref="T:System.Nullable`1" /> strukturyma<see langword="true" />wartość, a <see langword="null" />parametr to. <paramref name="other" />  
  
—lub— 
<see cref="P:System.Nullable`1.HasValue" /> Właściwość bieżącej <see cref="T:System.Nullable`1" /> strukturyma<see langword="false" />wartość, a <see langword="null" />parametr nie jest. <paramref name="other" />  
  
—lub— 
<see cref="P:System.Nullable`1.Value" /> <paramref name="other" /> Właściwość bieżącej <see cref="T:System.Nullable`1" /> struktury jest<see langword="true" />, a wartość zwrócona przez właściwość nie jest równa parametrowi. <see cref="P:System.Nullable`1.HasValue" />  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `true` `null` `other` Jeśli właściwość bieżącej <xref:System.Nullable%601> struktury ma wartość, a `other` argument niejest,równośćjestokreślanaprzezprzekazanieparametrudometody`Equals` <xref:System.Nullable%601.HasValue%2A> Podstawowa wartość bieżącej <xref:System.Nullable%601> struktury.  
  
   
  
## Examples  
 Poniższy przykład kodu określa, czy obiekt i <xref:System.Nullable%601> obiekt są równe bieżącemu <xref:System.Nullable%601> obiektowi.  
  
 [!code-csharp[system.nullableOfT.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.Equals/cs/eq.cs#1)]
 [!code-vb[system.nullableOfT.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.Equals/vb/eq.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="nullable.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kod skrótu obiektu zwróconego przez <see cref="P:System.Nullable`1.Value" /> właściwość.</summary>
        <returns>Kod skrótu <see cref="P:System.Nullable`1.Value" /> obiektu zwróconego przez właściwość, <see cref="P:System.Nullable`1.HasValue" /> Jeśli właściwość jest <see langword="true" />lub zero, jeśli <see cref="P:System.Nullable`1.HasValue" /> właściwość jest <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValueOrDefault">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartość bieżącego <see cref="T:System.Nullable`1" /> obiektu lub wartość domyślną.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault();" />
      <MemberSignature Language="F#" Value="member this.GetValueOrDefault : unit -&gt; 'T" Usage="nullable.GetValueOrDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość bieżącego <see cref="T:System.Nullable`1" /> obiektu lub wartość domyślną typu źródłowego.</summary>
        <returns>Wartość <see cref="P:System.Nullable`1.Value" /> właściwości, <see cref="P:System.Nullable`1.HasValue" /> Jeśli właściwość jest <see langword="true" />; w przeciwnym razie wartość domyślna typu źródłowego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca wartość, nawet <xref:System.Nullable%601.HasValue%2A> Jeśli właściwość jest `false` (w przeciwieństwie do <xref:System.Nullable%601.Value%2A> właściwości, która zgłasza wyjątek). <xref:System.Nullable%601.GetValueOrDefault%2A> Jeśli właściwość jest `false`, metoda zwraca wartość domyślną typu podstawowego. [](~/docs/csharp/language-reference/keywords/default-values-table.md) <xref:System.Nullable%601.HasValue%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera wartość <xref:System.Nullable%601> obiektu, jeśli ta wartość jest zdefiniowana; w przeciwnym razie pobiera wartość domyślną lub określoną wartość domyślną.  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault(`0)" />
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault (T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault(!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault (defaultValue As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault(T defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValueOrDefault : 'T -&gt; 'T" Usage="nullable.GetValueOrDefault defaultValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="defaultValue">Wartość, która ma zostać zwrócona <see cref="P:System.Nullable`1.HasValue" /> , <see langword="false" />Jeśli właściwość jest.</param>
        <summary>Pobiera wartość bieżącego <see cref="T:System.Nullable`1" /> obiektu lub określoną wartość domyślną.</summary>
        <returns>Wartość <see cref="P:System.Nullable`1.Value" /> właściwości, <see cref="P:System.Nullable`1.HasValue" /> Jeśli <see langword="true" /> Właściwość<paramref name="defaultValue" /> jest; w przeciwnym razie parametr.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca wartość, nawet <xref:System.Nullable%601.HasValue%2A> Jeśli właściwość jest `false` (w przeciwieństwie do <xref:System.Nullable%601.Value%2A> właściwości, która zgłasza wyjątek). <xref:System.Nullable%601.GetValueOrDefault%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera wartość <xref:System.Nullable%601> obiektu, jeśli ta wartość jest zdefiniowana; w przeciwnym razie pobiera wartość domyślną lub określoną wartość domyślną.  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżący <see cref="T:System.Nullable`1" /> obiekt ma prawidłową wartość jego typu podstawowego.</summary>
        <value><see langword="true" />Jeśli bieżący <see cref="T:System.Nullable`1" /> obiekt ma wartość; <see langword="false" /> Jeśli bieżący<see cref="T:System.Nullable`1" /> obiekt nie ma wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość ma `true`wartość, dostęp do bieżącego <xref:System.Nullable%601> obiektu można uzyskać przy użyciu <xref:System.Nullable%601.Value%2A> właściwości. <xref:System.Nullable%601.HasValue%2A> W przeciwnym razie próba uzyskania dostępu do jego wartości zgłasza <xref:System.InvalidOperationException> wyjątek.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Nullable%601.HasValue%2A> Właściwość `Nullable<int>` obiektu (`Nullable(Of Integer)` w Visual Basic), aby <xref:System.Nullable%601.Value%2A> określić, czy ma być wyświetlana właściwość obiektu, czy jej <xref:System.Nullable%601.GetValueOrDefault%2A> właściwość.  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator T (Nullable&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname !T op_Explicit(valuetype System.Nullable`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Nullable(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator T(Nullable&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Nullable&lt;'T (requires 'T : struct)&gt; -&gt; 'T" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Wartość null.</param>
        <summary>Definiuje jawną konwersję <see cref="T:System.Nullable`1" /> wystąpienia na jego wartość bazową.</summary>
        <returns>Wartość <see cref="P:System.Nullable`1.Value" /> właściwości<paramref name="value" /> dla parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten operator obsługuje jawną konwersję bieżącego <xref:System.Nullable%601> wystąpienia na typ `T`, typ <xref:System.Nullable%601.Value%2A>. Składnia takich jawnych konwersji jest zależna od języka. Możesz również wykonać konwersję, wywołując <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> metodę.  
  
 Równoważna Metoda dla tego operatora to<xref:System.Nullable%601.Value?displayProperty=nameWithType>  
  
## Examples  
 Operator włącza Poniższy kod, który `Nullable(Of Int32)` konwertuje wartość na <xref:System.Int32> wartość. <xref:System.Nullable%601.op_Explicit%2A>  
  
 [!code-csharp[System.Nullable~1.Conversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.conversion/cs/explicit1.cs#1)]
 [!code-vb[System.Nullable~1.Conversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.conversion/vb/explicit1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Nullable&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;!T&gt; op_Implicit(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As T) As Nullable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Nullable&lt;T&gt;(T value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : 'T -&gt; Nullable&lt;'T (requires 'T : struct)&gt;" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Typ wartości.</param>
        <summary>Tworzy nowy <see cref="T:System.Nullable`1" /> obiekt zainicjowany do określonej wartości.</summary>
        <returns>Obiekt <see cref="T:System.Nullable`1" /> , którego <see cref="P:System.Nullable`1.Value" /> Właściwośćzostałazainicjowana<paramref name="value" /> za pomocą parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Nullable%601.Value%2A> `value` `true`Jeśli parametr nie `null`jest, właściwość nowej <xref:System.Nullable%601> wartości jest inicjowana do parametru, a <xref:System.Nullable%601.HasValue%2A> właściwość jest inicjowana do. `value`  
  
 `null` <xref:System.Nullable%601> <xref:System.Nullable%601.HasValue%2A> Jeśli parametr ma wartość, <xref:System.Nullable%601.Value%2A> Właściwość nowej wartości jest inicjowana do wartości domyślnej, która jest wartością wszystkich zer binarnych i właściwość jest inicjowana do `false` `value` .  
  
 Równoważna Metoda dla tego operatora to<xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="nullable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca tekstową reprezentację wartości bieżącego <see cref="T:System.Nullable`1" /> obiektu.</summary>
        <returns>Tekstowa <see cref="T:System.Nullable`1" /> reprezentacja wartości bieżącego obiektu, <see cref="P:System.Nullable`1.HasValue" /> Jeśli właściwość jest <see langword="true" />lub <see cref="P:System.Nullable`1.HasValue" /> pusty ciąg (""), jeśli właściwość jest <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zwraca ciąg, `ToString` wywołując właściwość obiektu zwróconego przez <xref:System.Nullable%601.Value%2A> właściwość. <xref:System.Nullable%601.ToString%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartość bieżącego <xref:System.Nullable%601> obiektu.  
  
 [!code-csharp[system.nullableOfT.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.ToString/cs/ts.cs#1)]
 [!code-vb[system.nullableOfT.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.ToString/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'T" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość bieżącego <see cref="T:System.Nullable`1" /> obiektu, jeśli przypisano prawidłową wartość podstawową.</summary>
        <value>Wartość bieżącego <see cref="T:System.Nullable`1" /> obiektu, <see cref="P:System.Nullable`1.HasValue" /> Jeśli właściwość jest <see langword="true" />. Wyjątek jest generowany, <see cref="P:System.Nullable`1.HasValue" /> Jeśli właściwość jest. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `T` Jeśli wartość typu nie została przypisana `null` <xref:System.Nullable%601> do obiektu, można ją porównać z i pobrać jej <xref:System.Nullable%601.HasValue%2A> właściwość, ale nie można uzyskać dostępu do jej <xref:System.Nullable%601.Value%2A> właściwości ani wywołać jej innych elementów członkowskich.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Nullable%601.HasValue%2A> Właściwość `Nullable<int>` obiektu (`Nullable(Of Integer)` w Visual Basic), aby <xref:System.Nullable%601.Value%2A> określić, czy ma być wyświetlana właściwość obiektu, czy jej <xref:System.Nullable%601.GetValueOrDefault%2A> właściwość.  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Nullable`1.HasValue" /> Właściwość jest<see langword="false" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
