<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Nullable`1.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52d5b9220d8b4b5f94e9ef38c32c3cb9e2d9476b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d5b9220d8b4b5f94e9ef38c32c3cb9e2d9476b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The underlying value type of the <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> generic type.</source>
          <target state="translated">Typ wartości podstawowej <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> typu ogólnego.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Nullable`1">
          <source>Represents a value type that can be assigned <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Reprezentuje typ wartości, które można przypisać <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>A type is said to be nullable if it can be assigned a value or can be assigned <ph id="ph1">`null`</ph>, which means the type has no value whatsoever.</source>
          <target state="translated">Typ jest określany jako wartości null który można przypisać wartość lub nie można przypisać <ph id="ph1">`null`</ph>, co oznacza typ nie ma wartości ani.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>By default, all reference types, such as <ph id="ph1">&lt;xref:System.String&gt;</ph>, are nullable, but all value types, such as <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, are not.</source>
          <target state="translated">Domyślnie wszystkie odwołania typów, takie jak <ph id="ph1">&lt;xref:System.String&gt;</ph>, mają wartość null, ale wartość wszystkie typy, takich jak <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, nie są.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>In C# and Visual Basic, you mark a value type as nullable by using the <ph id="ph1">`?`</ph> notation after the value type.</source>
          <target state="translated">W języku C# i Visual Basic, oznacz typ wartości jako wartości null przy użyciu <ph id="ph1">`?`</ph> notacji po typie wartości.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>For example, <ph id="ph1">`int?`</ph> in C# or <ph id="ph2">`Integer?`</ph> in Visual Basic declares an integer value type that can be assigned <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Na przykład <ph id="ph1">`int?`</ph> w języku C# lub <ph id="ph2">`Integer?`</ph> w języku Visual Basic deklaruje wartość całkowitą, który można przypisać <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure supports using only a value type as a nullable type because reference types are nullable by design.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> Struktury umożliwia używanie typu wartości jako typu dopuszczającego wartość null, ponieważ typy referencyjne dopuszczają wartości null, zgodnie z projektem.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> class provides complementary support for the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable&gt;</ph> Klasy zapewnia obsługę uzupełniające <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> struktury.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable&gt;</ph> Klasa obsługuje uzyskiwania typu bazowego dla typu dopuszczającego wartości null i operacji porównania i równości na pary typy dopuszczające wartości zerowe, którego podstawowy typ wartości nie obsługuje ogólnego operacji porównywania i równości.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Fundamental Properties</source>
          <target state="translated">Podstawowe właściwości</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The two fundamental members of the <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure are the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> properties.</source>
          <target state="translated">Dwa podstawowe elementy członkowskie z <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> struktury są <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property for a <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object is <ph id="ph3">`true`</ph>, the value of the object can be accessed with the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwość <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> obiekt jest <ph id="ph3">`true`</ph>, wartość obiektu jest możliwy z <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the value of the object is undefined and an attempt to access the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property throws an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwość jest <ph id="ph2">`false`</ph>, jest niezdefiniowana wartość obiektu, a próba uzyskania dostępu do <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> zgłasza właściwości <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Boxing and Unboxing</source>
          <target state="translated">Opakowywanie i rozpakowywanie</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object, not the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object itself.</source>
          <target state="translated">W przypadku wartości null typ jest opakowany, środowisko uruchomieniowe języka wspólnego automatycznie pola podstawową wartość <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> obiektu nie <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> samego obiektu.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>That is, if the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the contents of the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property is boxed.</source>
          <target state="translated">Oznacza to, że jeśli <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwość jest <ph id="ph2">`true`</ph>, zawartość <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwości jest opakowany.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When the underlying value of a nullable type is unboxed, the common language runtime creates a new <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure initialized to the underlying value.</source>
          <target state="translated">Gdy odpowiednia wartość typu dopuszczającego wartość null jest rozpakowany, środowisko uruchomieniowe języka wspólnego tworzy nową <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> zainicjowany do wartości podstawowej struktury.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">`HasValue`</ph> property of a nullable type is <ph id="ph2">`false`</ph>, the result of a boxing operation is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`HasValue`</ph> właściwość typu dopuszczającego wartość null jest <ph id="ph2">`false`</ph>, wynik operacji konwersji boxing jest <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Consequently, if a boxed nullable type is passed to a method that expects an object argument, that method must be prepared to handle the case where the argument is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">W związku z tym, jeśli opakowanego typ dopuszczający wartość null jest przekazywany do metody, która oczekuje argumentu obiektu, metody muszą być przygotowane do obsługi w przypadku, gdy argument jest <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When <ph id="ph1">`null`</ph> is unboxed into a nullable type, the common language runtime creates a new <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure and initializes its <ph id="ph3">`HasValue`</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Gdy <ph id="ph1">`null`</ph> jest rozpakowany typ dopuszczający wartość null, środowisko uruchomieniowe języka wspólnego tworzy nowy <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> struktury i inicjuje jego <ph id="ph3">`HasValue`</ph> właściwości <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source><ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> and Windows Runtime Components</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> i składników środowiska wykonawczego systemu Windows</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph>, you can include a <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> type as a member of a structure exported in a WinMD library.</source>
          <target state="translated">Począwszy od <ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph>, mogą obejmować <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> typu jako elementu członkowskiego struktury wyeksportowane biblioteki WinMD.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Previously, this was not supported.</source>
          <target state="translated">Wcześniej to nie jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The following code example defines three rows of a table in the Microsoft Pubs sample database.</source>
          <target state="translated">Poniższy przykładowy kod definiuje trzy wiersze tabeli w bazie danych Pubs firmy Microsoft.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The table contains two columns that are not nullable and two columns that are nullable.</source>
          <target state="translated">Tabela zawiera dwie kolumny, które nie są wartości null i dwie kolumny, które dopuszczają wartości null.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.#ctor(`0)">
          <source>A value type.</source>
          <target state="translated">Typ wartości.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.#ctor(`0)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure to the specified value.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> struktury z podaną wartością.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.#ctor(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%2A&gt;</ph> constructor initializes the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of the new <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> object to <ph id="ph4">`true`</ph>, and the <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property to the value of the <ph id="ph6">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%2A&gt;</ph> Konstruktor inicjuje <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwości nowej <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> do obiektu <ph id="ph4">`true`</ph>i <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwości do wartości <ph id="ph6">`value`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>An object.</source>
          <target state="translated">Obiekt.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>Indicates whether the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Wskazuje, czy bieżący <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiekt jest taki sam jak określony obiekt.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parameter is equal to the current <ph id="ph3">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parametru jest taki sam, jak bieżący <ph id="ph3">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiektu; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>This table describes how equality is defined for the compared values:</source>
          <target state="translated">W tej tabeli opisano sposób definiowania równości porównaniu wartości:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość zwracana</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="true" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and the <ph id="ph8">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph9">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="true" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> Właściwość jest <ph id="ph7">&lt;see langword="false" /&gt;</ph>i <ph id="ph8">&lt;paramref name="other" /&gt;</ph> parametr jest <ph id="ph9">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>That is, two null values are equal by definition.</source>
          <target state="translated">Oznacza to, że dwie wartości null są takie same z definicji.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, and the value returned by the <ph id="ph3">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is equal to the <ph id="ph4">&lt;paramref name="other" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> Właściwość jest <ph id="ph2">&lt;see langword="true" /&gt;</ph>i wartość zwrócona przez <ph id="ph3">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> właściwości jest równa <ph id="ph4">&lt;paramref name="other" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="false" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph7">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph8">&lt;see langword="true" /&gt;</ph>, and the <ph id="ph9">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph10">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="false" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> Właściwości dla bieżącego <ph id="ph7">&lt;see cref="T:System.Nullable`1" /&gt;</ph> struktura jest <ph id="ph8">&lt;see langword="true" /&gt;</ph>i <ph id="ph9">&lt;paramref name="other" /&gt;</ph> parametr jest <ph id="ph10">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph3">&lt;see langword="false" /&gt;</ph>, and the <ph id="ph4">&lt;paramref name="other" /&gt;</ph> parameter is not <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> Właściwości dla bieżącego <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> struktura jest <ph id="ph3">&lt;see langword="false" /&gt;</ph>i <ph id="ph4">&lt;paramref name="other" /&gt;</ph> parametr nie jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, and the value returned by the <ph id="ph4">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is not equal to the <ph id="ph5">&lt;paramref name="other" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> Właściwości dla bieżącego <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> struktura jest <ph id="ph3">&lt;see langword="true" /&gt;</ph>i wartość zwrócona przez <ph id="ph4">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> właściwość nie jest równa <ph id="ph5">&lt;paramref name="other" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of the current <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure is <ph id="ph3">`true`</ph> and the <ph id="ph4">`other`</ph> argument is not <ph id="ph5">`null`</ph>, equality is determined by passing the <ph id="ph6">`other`</ph> parameter to the <ph id="ph7">`Equals`</ph> method of the underlying value of the current <ph id="ph8">&lt;xref:System.Nullable%601&gt;</ph> structure.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwości bieżącego <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> struktura jest <ph id="ph3">`true`</ph> i <ph id="ph4">`other`</ph> argument nie jest <ph id="ph5">`null`</ph>, równości jest określany przez przekazanie <ph id="ph6">`other`</ph> parametr <ph id="ph7">`Equals`</ph> metody wartość bieżącej klasy podstawowej <ph id="ph8">&lt;xref:System.Nullable%601&gt;</ph> struktury.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The following code example determines whether an object and a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object are equal to the current <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład kodu Określa, czy obiekt i a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> obiekt jest taki sam, jak bieżący <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetHashCode">
          <source>Retrieves the hash code of the object returned by the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property.</source>
          <target state="translated">Pobiera wartość skrótu obiektu zwróconego przez <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetHashCode">
          <source>The hash code of the object returned by the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, or zero if the <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość skrótu obiektu zwróconego przez <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> właściwości Jeśli <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> właściwość jest <ph id="ph3">&lt;see langword="true" /&gt;</ph>, lub zero, jeśli <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> jest właściwość <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Nullable`1">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or a default value.</source>
          <target state="translated">Pobiera wartość bieżącej <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiektu lub wartości domyślnej.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or the object's default value.</source>
          <target state="translated">Pobiera wartość bieżącej <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiektu lub wartości domyślne obiektu.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the  <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, the default value of the current <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> właściwości Jeśli <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> właściwość jest <ph id="ph3">&lt;see langword="true" /&gt;</ph>; w przeciwnym razie wartość domyślna bieżącego <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The type of the default value is the type argument of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, and the value of the default value consists solely of binary zeroes.</source>
          <target state="translated">Typ wartości domyślnej jest argumentem typu bieżącego <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiektu, a wartość domyślna składa się wyłącznie z binarnej zer.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> method returns a value even if the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph3">`false`</ph> (unlike the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property, which throws an exception).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> Metoda zwróci wartość, nawet jeśli <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwość jest <ph id="ph3">`false`</ph> (w przeciwieństwie do <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwość, która zgłasza wyjątek).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The following code example retrieves the value of a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object if that value is defined; otherwise, it retrieves the default value or a specific default value.</source>
          <target state="translated">Poniższy przykładowy kod pobiera wartość <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> obiektu, jeśli ta wartość jest zdefiniowana; w przeciwnym razie, pobiera wartość domyślną lub wybraną wartość domyślną.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>A value to return if the <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość zwracana, gdy <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> jest właściwość <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or the specified default value.</source>
          <target state="translated">Pobiera wartość bieżącej <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiektu lub określoną wartość domyślną.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, the <ph id="ph4">&lt;paramref name="defaultValue" /&gt;</ph> parameter.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> właściwości Jeśli <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> właściwość jest <ph id="ph3">&lt;see langword="true" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;paramref name="defaultValue" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> method returns a value even if the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph3">`false`</ph> (unlike the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property, which throws an exception).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> Metoda zwróci wartość, nawet jeśli <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwość jest <ph id="ph3">`false`</ph> (w przeciwieństwie do <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwość, która zgłasza wyjątek).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The following code example retrieves the value of a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object if that value is defined; otherwise, it retrieves the default value or a specific default value.</source>
          <target state="translated">Poniższy przykładowy kod pobiera wartość <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> obiektu, jeśli ta wartość jest zdefiniowana; w przeciwnym razie, pobiera wartość domyślną lub wybraną wartość domyślną.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.HasValue">
          <source>Gets a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has a valid value of its underlying type.</source>
          <target state="translated">Pobiera wartość wskazującą czy bieżące <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiekt ma prawidłową wartość jej typu podstawowego.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has a value; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the current <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has no value.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli bieżący <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiekt ma wartość; <ph id="ph3">&lt;see langword="false" /&gt;</ph> Jeśli bieżące <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiekt nie ma wartości.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the value of the current <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> object can be accessed with the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwość jest <ph id="ph2">`true`</ph>, wartość bieżącej klasy <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> obiekt jest dostępny z <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>Otherwise, attempting to access its value throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">W przeciwnym razie próby uzyskania dostępu zgłasza jego wartość <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wyjątku.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of a <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> object to determine whether it should display the object's <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or its <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> property.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwość <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> obiektem, aby określić, czy należy wyświetlić obiektu <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwości lub jego <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>A nullable value.</source>
          <target state="translated">Wartość null.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> instance to its underlying value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> wystąpienie do jego odpowiednia wartość.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property for the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> właściwość <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>This operator supports the explicit conversion of the current <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> instance to type <ph id="ph2">`T`</ph>, the type of <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>.</source>
          <target state="translated">Ten operator obsługuje jawnej konwersji bieżącego <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> wystąpienia na typ <ph id="ph2">`T`</ph>, typ <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The syntax for such explicit conversions is language-dependent.</source>
          <target state="translated">Składnia dla takich jawne konwersje jest zależne od języka.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>You may also be able to perform the conversion by calling the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Można go również możliwość wykonania konwersji przez wywołanie metody <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Nullable%601.Value?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Jest równoważne metodę dla tego operatora <ph id="ph1">&lt;xref:System.Nullable%601.Value?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.op_Explicit%2A&gt;</ph> operator enables code such as the following, which converts a <ph id="ph2">`Nullable(Of Int32)`</ph> value to an <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable%601.op_Explicit%2A&gt;</ph> Operator umożliwia kodu na przykład następujący komunikat, który konwertuje <ph id="ph2">`Nullable(Of Int32)`</ph> do wartości <ph id="ph3">&lt;xref:System.Int32&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>A value type.</source>
          <target state="translated">Typ wartości.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object initialized to a specified value.</source>
          <target state="translated">Tworzy nową <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> ustawiana na wartość określonego obiektu.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object whose <ph id="ph2">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is initialized with the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> którego <ph id="ph2">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> właściwość jest inicjowana z <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>If the <ph id="ph1">`value`</ph> parameter is not <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property of the new <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> value is initialized to the <ph id="ph5">`value`</ph> parameter and the <ph id="ph6">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is initialized to <ph id="ph7">`true`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`value`</ph> parametr nie jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwości nowej <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> wartość została zainicjowana <ph id="ph5">`value`</ph> parametru i <ph id="ph6">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwość jest inicjowana na <ph id="ph7">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>If the <ph id="ph1">`value`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property of the new <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> value is initialized to the default value, which is the value that is all binary zeroes, and the <ph id="ph5">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is initialized to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`value`</ph> parametr jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwości nowej <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> wartość jest ustawiana na wartość domyślna, czyli wartość, która jest wszystkie binarne zera, i <ph id="ph5">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwość jest inicjowana na <ph id="ph6">`false`</ph> .</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Jest równoważne metodę dla tego operatora <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.ToString">
          <source>Returns the text representation of the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object.</source>
          <target state="translated">Zwraca wartość tekstowa reprezentacja wartości bieżącego <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.ToString">
          <source>The text representation of the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, or an empty string ("") if the <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Reprezentacja tekstowa typu wartość bieżącej klasy <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiekt zostanie <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> właściwość jest <ph id="ph3">&lt;see langword="true" /&gt;</ph>, lub ciąg pusty ("") czy <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> właściwość jest <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.ToString%2A&gt;</ph> property returns the string yielded by calling the <ph id="ph2">`ToString`</ph> property of the object returned by the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable%601.ToString%2A&gt;</ph> Właściwość zwraca ciąg przekazanej przez wywołanie <ph id="ph2">`ToString`</ph> właściwości obiektu zwróconego przez <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.ToString">
          <source>The following code example displays the value of the current <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia wartość bieżącej klasy <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.Value">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if it has been assigned a valid underlying value.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiektu, jeśli został przypisany prawidłowej wartości podstawowej.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> obiekt zostanie <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> jest właściwość <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>An exception is thrown if the <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Jest zwracany wyjątek, jeśli <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> jest właściwość <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>If a value of type <ph id="ph1">`T`</ph> has not been assigned to the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object, you can compare it to <ph id="ph3">`null`</ph> and retrieve its <ph id="ph4">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property, but you cannot access its <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or call its other members.</source>
          <target state="translated">Jeśli wartość typu <ph id="ph1">`T`</ph> nie został przypisany do <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> obiekt, aby porównać <ph id="ph3">`null`</ph> i pobierania jej <ph id="ph4">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwości, ale nie ma dostępu do jego <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwość lub wywołanie jego o innych elementach członkowskich.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of a <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> object to determine whether it should display the object's <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or its <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> property.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> właściwość <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> obiektem, aby określić, czy należy wyświetlić obiektu <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> właściwości lub jego <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> Jest właściwość <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>