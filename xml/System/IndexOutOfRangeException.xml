<Type Name="IndexOutOfRangeException" FullName="System.IndexOutOfRangeException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3758620c93a647d6c7c4701db2e836e971106ed" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39765957" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IndexOutOfRangeException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit IndexOutOfRangeException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.IndexOutOfRangeException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IndexOutOfRangeException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class IndexOutOfRangeException sealed : SystemException" />
  <TypeSignature Language="F#" Value="type IndexOutOfRangeException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyjątek, który jest zgłaszany, gdy podejmowana jest próba uzyskania dostępu do elementu tablicy lub kolekcji przy użyciu indeksu, który znajduje się poza jej granicami.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IndexOutOfRangeException> Wyjątek jest zgłaszany, gdy nieprawidłowy indeks jest używany do uzyskania dostępu do członka tablicy lub kolekcji, lub do odczytu lub zapisu określonego miejsca w buforze. Dziedziczy ten wyjątek <xref:System.Exception> klasa, ale dodaje nie unikatowych elementów członkowskich.  
  
 Zazwyczaj <xref:System.IndexOutOfRangeException> wyjątek w wyniku błędu dla deweloperów. Zamiast Obsługa wyjątku, którą należy przyczynę błędu i poprawić kod. Najbardziej typowe przyczyny tego błędu to:  
  
-   Zapominanie, górna granica kolekcji lub tablicę indeksowaną od zera jest jednym mniejsza od jego liczby elementów członkowskich lub elementów, w poniższym przykładzie przedstawiono.  
  
     [!code-csharp[System.IndexOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/length1.cs#3)]
     [!code-vb[System.IndexOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/length1.vb#3)]  
  
     Aby poprawić ten błąd, można użyć kodu, jak pokazano poniżej.  
  
     [!code-csharp[System.IndexOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/length2.cs#4)]
     [!code-vb[System.IndexOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/length2.vb#4)]  
  
     Alternatywnie zamiast Iterowanie wszystkich elementów w tablicy za pomocą ich indeksu, należy użyć `foreach` — instrukcja (w języku C#) lub `For Each` — instrukcja (w języku Visual Basic).  
  
-   Podjęto próbę przypisania do elementu tablicy do innej tablicy nie ma, odpowiednio wymiary i ma mniej elementów niż tablicy oryginalnej. Poniższy przykład podejmie próbę przypisania do ostatniego elementu w `value1` tablicy do tego samego elementu w `value2` tablicy. Jednak `value2` tablicy został niepoprawnie wymiary mieć sześć zamiast siedem elementów. W rezultacie zgłasza przypisania <xref:System.IndexOutOfRangeException> wyjątku.  
  
     [!code-csharp[System.IndexOutOfRangeException#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/Uninit1.cs#10)]
     [!code-vb[System.IndexOutOfRangeException#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/Uninit1.vb#10)]  
  
-   Przy użyciu wartości zwracane przez metodę wyszukiwania do iteracji część tablicy lub kolekcji, zaczynając od pozycji określonego indeksu. Jeśli nie pamiętasz sprawdzić, czy operacja wyszukiwania znalezione dopasowanie, środowisko wykonawcze zgłasza <xref:System.IndexOutOfRangeException> wyjątek, jak pokazano w poniższym przykładzie.  
  
     [!code-csharp[System.IndexOutOfRangeException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/negative1.cs#5)]
     [!code-vb[System.IndexOutOfRangeException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/negative1.vb#5)]  
  
     W tym przypadku <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType> metoda zwraca wartość -1, która jest wartością nieprawidłowy indeks, gdy go nie znajdzie dopasowania. Aby rozwiązać ten problem, sprawdź wartość zwracaną metody wyszukiwania przed iteracja tablicy, jak pokazano w poniższym przykładzie.  
  
     [!code-csharp[System.IndexOutOfRangeException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/negative2.cs#6)]
     [!code-vb[System.IndexOutOfRangeException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/negative2.vb#6)]  
  
-   Podczas próby użycia lub wyliczyć zestawu wyników, kolekcji lub tablicy zwracanej przez zapytanie bez testowania, czy zwracany obiekt zawiera wszystkie prawidłowe dane.  
  
-   Aby zdefiniować indeks początkowy, końcowy indeks lub liczba elementów, należy powtórzyć, przy użyciu obliczoną wartością. Jeśli wynik obliczeń jest nieoczekiwana, może to spowodować <xref:System.IndexOutOfRangeException> wyjątku. Należy sprawdzić logiki programu podczas obliczania wartości indeksu i sprawdź wartość przed Iterowanie przez tablicę lub kolekcję. Następujące warunki muszą być spełnione; w przeciwnym razie <xref:System.IndexOutOfRangeException> zgłoszony wyjątek:  
  
    -   Indeks początkowy musi być większa lub równa <xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType> dla wymiaru tablicy, która ma być iteracji, lub większy niż lub równy 0 dla kolekcji.  
  
    -   Końcowy indeksu nie może przekraczać <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> dla wymiaru tablicy, która ma być iteracji, nie może być większa niż lub równa `Count` właściwości kolekcji.  
  
    -   Poniższego równania muszą być spełnione dla wymiaru tablicy, która ma być iteracji:  
  
        ```  
        start_index >= lower_bound And start_index + items_to_iterate – 1 <= upper_bound  
        ```  
  
         Dla kolekcji poniższego równania muszą być spełnione:  
  
        ```  
        start_index >= 0 And start_index + items_to_iterate <= Count  
        ```  
  
        > [!TIP]
        >  Indeks początkowy tablicy lub kolekcji nigdy nie może być liczbą ujemną.  
  
-   Przy założeniu, że tablica musi być liczony od zera. Można utworzyć tablic, które nie są oparte na zerze <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType> metoda i może zostać zwrócony przez międzyoperacyjną modelu COM, mimo że nie są zgodne ze specyfikacją CLS. W poniższym przykładzie pokazano <xref:System.IndexOutOfRangeException> zgłaszany podczas próby iteracji na podstawie zero tablicę, utworzone przez <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType> metody.  
  
     [!code-csharp[System.IndexOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/nonzero1.cs#1)]
     [!code-vb[System.IndexOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/nonzero1.vb#1)]  
  
     Aby poprawić błąd, tak jak w poniższym przykładzie, można wywołać <xref:System.Array.GetLowerBound%2A> metody zamiast wprowadzania założeń dotyczących wartość początkowa indeksu tablicy.  
  
     [!code-csharp[System.IndexOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/nonzero2.cs#2)]
     [!code-vb[System.IndexOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/nonzero2.vb#2)]  
  
     Należy pamiętać, że podczas wywoływania <xref:System.Array.GetLowerBound%2A> metodę, aby uzyskać początkowy indeks tablicy, należy także wywołać <xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType> metodę, aby uzyskać jego zakończenia indeksu.  
  
-   Mylenie indeksu, jak i wartość tego indeksu w tablicy liczbowej lub kolekcji. Ten problem występuje przeważnie, jeśli za pomocą `foreach` — instrukcja (w języku C#) lub `For Each` — instrukcja (w języku Visual Basic). Poniższy przykład ilustruje ten problem.  
  
     [!code-csharp[System.IndexOutOfRangeException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/foreach1.cs#7)]
     [!code-vb[System.IndexOutOfRangeException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/foreach1.vb#7)]  
  
     Konstrukcja iteracji zwraca każdej wartości w tablicy lub kolekcji, nie jego indeksu. Aby wyeliminować wyjątek, użyj tego kodu.  
  
     [!code-csharp[System.IndexOutOfRangeException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/foreach2.cs#8)]
     [!code-vb[System.IndexOutOfRangeException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/foreach2.vb#8)]  
  
-   Zapewnianie nieprawidłową nazwę kolumny do <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> właściwości.  
  
-   Naruszenie bezpieczeństwa wątków. Operacje, takie jak odczytywanie ich z niego takie same <xref:System.IO.StreamReader> obiektu, zapisywanie do tej samej <xref:System.IO.StreamWriter> obiektów z wielu wątków lub wyliczanie obiektów w <xref:System.Collections.Hashtable> z różnych wątków może zgłosić <xref:System.IndexOutOfRangeException> Jeśli obiekt nie jest dostępne w sposób metodą o bezpiecznych wątkach. Wyjątek ten jest zazwyczaj sporadyczne, ponieważ zależy od sytuacji wyścigu.  
  
 Za pomocą wartości indeksu ustaloną do manipulowania tablicy prawdopodobnie może zgłosić wyjątek, jeśli wartość indeksu jest niepoprawna lub nieprawidłowy lub rozmiar tablicy jest manipulowanie jest nieoczekiwany. Aby uniemożliwić operacji zgłaszanie <xref:System.IndexOutOfRangeException> wyjątku, wykonasz następujące czynności:  
  
-   Iteracji elementów tablicy przy użyciu [foreach](https://msdn.microsoft.com/library/ttw7t8t6.aspx) — instrukcja (w języku C#) lub [For Each... Następny](https://msdn.microsoft.com/library/5ebk1751.aspx) konstruowania (w języku Visual Basic) zamiast iteracja elementów według indeksu.  
  
-   Iteracji elementów według indeksu, począwszy od indeksu zwrócony przez <xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType> metody i kończącą wskaźnik zwracany przez <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> metody.  
  
-   W przypadku przypisywania elementów w tablicy do innej, sprawdź, czy docelowej tablicy ma co najmniej tyle elementów jako tablica źródłowa przez porównanie ich <xref:System.Array.Length%2A?displayProperty=nameWithType> właściwości.  
  
 Aby uzyskać listę początkowe wartości właściwości wystąpienia <xref:System.IndexOutOfRangeException>, zobacz <xref:System.IndexOutOfRangeException> konstruktorów.  
  
 Poniższe instrukcje języka pośredniego (IL) throw <xref:System.IndexOutOfRangeException>:  
  
-   ldelem. \<typ >  
  
-   ldelema  
  
-   stelem.\<type>  
  
 <xref:System.IndexOutOfRangeException> używa COR_E_INDEXOUTOFRANGE HRESULT, która ma wartość 0x80131508.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IndexOutOfRangeException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IndexOutOfRangeException" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Exception.Message%2A> właściwości nowego wystąpienia dostarczane przez system komunikat, który opisuje błąd, takie jak "indeks tablicy jest poza zakresem." Ten komunikat uwzględnia bieżącą kulturę systemu.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.IndexOutOfRangeException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.Exception.Message%2A>|Zlokalizowany ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new IndexOutOfRangeException : string -&gt; IndexOutOfRangeException" Usage="new System.IndexOutOfRangeException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat, który opisuje błąd.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IndexOutOfRangeException" /> klasy przy użyciu określonego komunikatu o błędzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Exception.Message%2A?displayProperty=nameWithType> właściwości nowego wyjątku za pomocą `message` parametru. Zawartość `message` ma być zrozumiała dla ludzi. Obiekt wywołujący tego konstruktora jest wymagany w celu zagwarantowania, że ten ciąg został zlokalizowany w bieżącej kulturze systemu.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.IndexOutOfRangeException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new IndexOutOfRangeException : string * Exception -&gt; IndexOutOfRangeException" Usage="new System.IndexOutOfRangeException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</param>
        <param name="innerException">Wyjątek, który jest przyczyną bieżącego wyjątku. Jeśli <c>innerException</c> parametr nie jest odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), bieżący wyjątek jest zgłaszany w <see langword="catch" /> blok, który obsługuje wyjątek wewnętrzny.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IndexOutOfRangeException" /> klasy przy użyciu określonego komunikatu o błędzie i odwołania do wewnętrznego wyjątku, który jest przyczyną tego wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątek generowany jako bezpośredni wynik poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości. `InnerException` Właściwość zwraca taką samą wartość, która jest przekazywana do konstruktora, lub odwołanie o wartości null (`Nothing` w języku Visual Basic) jeżeli `InnerException` nie dostarcza wartości wewnętrznego wyjątku do konstruktora.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.IndexOutOfRangeException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie do wewnętrznego wyjątku.|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>