<Type Name="Func&lt;T1,T2,T3,T4,TResult&gt;" FullName="System.Func&lt;T1,T2,T3,T4,TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ff21adcbbc27f30b24f2d51c885e8492eac105ea" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46663809" /></Metadata><TypeSignature Language="C#" Value="public delegate TResult Func&lt;in T1,in T2,in T3,in T4,out TResult&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Func`5&lt;- T1, - T2, - T3, - T4, + TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Func`5" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Func(Of In T1, In T2, In T3, In T4, Out TResult)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4) As TResult " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename TResult&gt;&#xA;public delegate TResult Func(T1 arg1, T2 arg2, T3 arg3, T4 arg4);" />
  <TypeSignature Language="F#" Value="type Func&lt;'T1, 'T2, 'T3, 'T4, 'Result&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 -&gt; 'Result" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TResult">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="39746-101">Typ pierwszego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="39746-101">The type of the first parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="39746-102">Typ drugiego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="39746-102">The type of the second parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="39746-103">Typ trzeciego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="39746-103">The type of the third parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="39746-104">Typ czwartego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="39746-104">The type of the fourth parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="TResult"><span data-ttu-id="39746-105">Typ wartości zwracanej metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="39746-105">The type of the return value of the method that this delegate encapsulates.</span></span></typeparam>
    <param name="arg1"><span data-ttu-id="39746-106">Pierwszy parametr metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="39746-106">The first parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg2"><span data-ttu-id="39746-107">Drugi parametr metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="39746-107">The second parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg3"><span data-ttu-id="39746-108">Trzeci parametr metodę, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="39746-108">The third parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg4"><span data-ttu-id="39746-109">Czwartego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="39746-109">The fourth parameter of the method that this delegate encapsulates.</span></span></param>
    <summary><span data-ttu-id="39746-110">Hermetyzuje metody, która ma cztery parametry i zwraca wartość typu określonego przez <typeparamref name="TResult" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="39746-110">Encapsulates a method that has four parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.</span></span></summary>
    <returns><span data-ttu-id="39746-111">Wartość zwracaną przez metodę, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="39746-111">The return value of the method that this delegate encapsulates.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39746-112">Ten delegat służy do reprezentowania metody, która może być przekazywany jako parametr bez jawnego deklarowania niestandardową klasę delegatów.</span><span class="sxs-lookup"><span data-stu-id="39746-112">You can use this delegate to represent a method that can be passed as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="39746-113">Metoda zhermetyzowany musi odpowiadać podpis metody, który jest definiowany przez ten delegat.</span><span class="sxs-lookup"><span data-stu-id="39746-113">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="39746-114">Oznacza to, że metoda zhermetyzowany muszą mieć cztery parametry, z których każdy jest przekazywany do niego przez wartość, i aplikacja musi zwracać wartość.</span><span class="sxs-lookup"><span data-stu-id="39746-114">This means that the encapsulated method must have four parameters, each of which is passed to it by value, and that it must return a value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="39746-115">Metody, która ma cztery parametry i zwraca odwołanie do `void` (lub w języku Visual Basic, który jest zadeklarowany jako `Sub` , a nie jako `Function`), używają ogólnej <xref:System.Action%604> delegowania, zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="39746-115">To reference a method that has four parameters and returns `void` (or in Visual Basic, that is declared as a `Sub` rather than as a `Function`), use the generic <xref:System.Action%604> delegate instead.</span></span>  
  
 <span data-ttu-id="39746-116">Kiedy używasz <xref:System.Func%605> delegata, nie trzeba jawnie zdefiniować delegata, która hermetyzuje metody za pomocą czterech parametrów.</span><span class="sxs-lookup"><span data-stu-id="39746-116">When you use the <xref:System.Func%605> delegate, you do not have to explicitly define a delegate that encapsulates a method with four parameters.</span></span> <span data-ttu-id="39746-117">Na przykład, poniższy kod deklaruje jawnie Delegat ogólny o nazwie `Searcher` i odwołanie do <xref:System.String.IndexOf%2A> metodę, aby jego wystąpienie delegata.</span><span class="sxs-lookup"><span data-stu-id="39746-117">For example, the following code explicitly declares a generic delegate named `Searcher` and assigns a reference to the <xref:System.String.IndexOf%2A> method to its delegate instance.</span></span>  
  
 [!code-csharp[System.Func~5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~5/cs/Delegate.cs#1)]
 [!code-vb[System.Func~5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Func~5/vb/Delegate.vb#1)]  
  
 <span data-ttu-id="39746-118">Poniższy przykład upraszcza ten kod przez utworzenie wystąpienia <xref:System.Func%605> delegata zamiast jawnie nowe delegowanie definiowanie i przypisywanie metodę o nazwie.</span><span class="sxs-lookup"><span data-stu-id="39746-118">The following example simplifies this code by instantiating the <xref:System.Func%605> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-csharp[System.Func~5#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~5/cs/Func5.cs#2)]
 [!code-vb[System.Func~5#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Func~5/vb/Func5.vb#2)]  
  
 <span data-ttu-id="39746-119">Możesz użyć <xref:System.Func%605> delegowanie przy użyciu metod anonimowych w języku C#, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="39746-119">You can use the <xref:System.Func%605> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="39746-120">(Wprowadzenie do metod anonimowych, zobacz [anonimowymi](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span><span class="sxs-lookup"><span data-stu-id="39746-120">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Func~5#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~5/cs/Anon.cs#3)]  
  
 <span data-ttu-id="39746-121">Można również przypisywać w wyrażeniu lambda <xref:System.Func%605> delegować, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="39746-121">You can also assign a lambda expression to a <xref:System.Func%605> delegate, as the following example illustrates.</span></span> <span data-ttu-id="39746-122">(Wprowadzenie do wyrażenia lambda, zobacz [wyrażeń Lambda](~/docs/visual-basic/programming-guide/language-features/procedures/lambda-expressions.md) i [wyrażeń Lambda](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span><span class="sxs-lookup"><span data-stu-id="39746-122">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/visual-basic/programming-guide/language-features/procedures/lambda-expressions.md) and [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Func~5#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~5/cs/Lambda.cs#4)]
 [!code-vb[System.Func~5#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Func~5/vb/Lambda.vb#4)]  
  
 <span data-ttu-id="39746-123">Podstawowy typ wyrażenia lambda jest jednym z ogólnego `Func` delegatów.</span><span class="sxs-lookup"><span data-stu-id="39746-123">The underlying type of a lambda expression is one of the generic `Func` delegates.</span></span> <span data-ttu-id="39746-124">Dzięki temu można przekazać wyrażenia lambda jako parametr bez jawnie przypisywania do delegata.</span><span class="sxs-lookup"><span data-stu-id="39746-124">This makes it possible to pass a lambda expression as a parameter without explicitly assigning it to a delegate.</span></span> <span data-ttu-id="39746-125">W szczególności ponieważ wiele metod typów w <xref:System.Linq> przestrzeń nazw ma `Func` parametrów można przekazywać te metody wyrażenia lambda bez jawnego wystąpienia `Func` delegować.</span><span class="sxs-lookup"><span data-stu-id="39746-125">In particular, because many methods of types in the <xref:System.Linq> namespace have `Func` parameters, you can pass these methods a lambda expression without explicitly instantiating a `Func` delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39746-126">Poniższy przykład pokazuje, jak zadeklarować i użyj <xref:System.Func%603> delegować.</span><span class="sxs-lookup"><span data-stu-id="39746-126">The following example demonstrates how to declare and use a <xref:System.Func%603> delegate.</span></span> <span data-ttu-id="39746-127">W tym przykładzie deklaruje <xref:System.Func%603> zmiennej i przypisuje mu Wyrażenie lambda, która przyjmuje <xref:System.String> wartość i <xref:System.Int32> wartości jako parametry.</span><span class="sxs-lookup"><span data-stu-id="39746-127">This example declares a <xref:System.Func%603> variable and assigns it a lambda expression that takes a <xref:System.String> value and an <xref:System.Int32> value as parameters.</span></span> <span data-ttu-id="39746-128">Wyrażenie lambda zwraca `true` Jeśli długość <xref:System.String> parametr jest równy wartości <xref:System.Int32> parametru.</span><span class="sxs-lookup"><span data-stu-id="39746-128">The lambda expression returns `true` if the length of the <xref:System.String> parameter is equal to the value of the <xref:System.Int32> parameter.</span></span> <span data-ttu-id="39746-129">Delegat, który hermetyzuje tej metody są następnie używane w zapytaniu, aby ciągi filtrów w tablicy ciągów.</span><span class="sxs-lookup"><span data-stu-id="39746-129">The delegate that encapsulates this method is subsequently used in a query to filter strings in an array of strings.</span></span>  
  
 [!code-csharp[System.Func~3#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~3/cs/Example.cs#5)]
 [!code-vb[System.Func~3#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Func~3/vb/Example.vb#5)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md"><span data-ttu-id="39746-130">Wyrażenia lambda (Przewodnik programowania w języku C#)</span><span class="sxs-lookup"><span data-stu-id="39746-130">Lambda Expressions (C# Programming Guide)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/lambda-expressions.md"><span data-ttu-id="39746-131">Wyrażenia lambda</span><span class="sxs-lookup"><span data-stu-id="39746-131">Lambda Expressions</span></span></related>
    <related type="Article" href="~/docs/csharp/programming-guide/delegates/index.md"><span data-ttu-id="39746-132">Delegaty (Przewodnik programowania w języku C#)</span><span class="sxs-lookup"><span data-stu-id="39746-132">Delegates (C# Programming Guide)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/delegates/index.md"><span data-ttu-id="39746-133">Delegatów w języku Visual Basic</span><span class="sxs-lookup"><span data-stu-id="39746-133">Delegates in Visual Basic</span></span></related>
  </Docs>
</Type>