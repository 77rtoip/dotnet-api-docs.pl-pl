<Type Name="Attribute" FullName="System.Attribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="50cb40bd98192588557354c1479365dd85a9471c" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48684979" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Attribute : System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Attribute extends System.Object implements class System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Attribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Attribute&#xA;Implements _Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class Attribute abstract : System::Runtime::InteropServices::_Attribute" />
  <TypeSignature Language="F#" Value="type Attribute = class&#xA;    interface _Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Attribute</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Attribute))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje klasę bazową dla atrybutów niestandardowych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Attribute> Klasa kojarzy informacje o systemie wstępnie zdefiniowanych lub zdefiniowanych przez użytkownika niestandardowych informacji z elementu docelowego. Elementu docelowego może być zestawu, klasy, Konstruktor, delegata, wyliczenia, zdarzenia, pola, interfejsu, — metoda, moduł przenośny plik wykonywalny, parametr, właściwości, wartość zwracana, struktury lub innego atrybutu.  
  
 Informacje podane przez atrybut jest również nazywany metadanych. Metadanych można sprawdzić w czasie wykonywania przez aplikację, aby kontrolować, jak program przetwarza dane lub przed czasem wykonywania przez zewnętrzne narzędzia do kontroli sposobu samej aplikacji są przetwarzane lub przechowywane. Na przykład programu .NET Framework powoduje wstępne definiowanie i używa typów atrybutów do kontrolowania zachowania w czasie wykonywania, a niektóre języki programowania użyć typów atrybutów do reprezentowania funkcje językowe, które nie są bezpośrednio obsługiwane przez system typu wspólnego .NET Framework.  
  
 Wszystkie typy atrybutów dziedziczyć bezpośrednio lub pośrednio <xref:System.Attribute> klasy. Atrybuty mogą być stosowane do dowolnego elementu docelowego; wiele atrybutów mogą być stosowane do tego samego elementu docelowego; i atrybuty mogą być dziedziczone przez element pochodzi od elementu docelowego. Użyj <xref:System.AttributeTargets> klasy, aby określić element docelowy, do którego zastosowano atrybut.  
  
 <xref:System.Attribute> Klasa udostępnia wygodne metody do pobierania i testowania niestandardowych atrybutów. Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [stosowanie atrybutów](~/docs/standard/attributes/applying-attributes.md) i [atrybuty](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute>.  
  
 [!code-cpp[AnimalAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/AnimalAttributes/CPP/customattribute.cpp#1)]
 [!code-csharp[AnimalAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/AnimalAttributes/CS/customattribute.cs#1)]
 [!code-vb[AnimalAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AnimalAttributes/VB/customattribute.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczny wątkowo.</threadsafe>
    <related type="Article" href="http://msdn.microsoft.com/library/dd7604eb-9fa3-4b60-b2dd-b47739fa3148">Stosowanie atrybutów</related>
    <related type="Article" href="~/docs/standard/attributes/index.md">Rozszerzanie metadanych za pomocą atrybutów</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Attribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Attribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Attribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływany tylko przez klasy, które wynikają z <xref:System.Attribute>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje definicji parametru niestandardowego <xref:System.Attribute> klasy z jej konstruktora.  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#2)]
 [!code-csharp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#2)]
 [!code-vb[System.Attribute.GetCustomAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="attribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> Do porównania z tym wystąpieniem lub <see langword="null" />.</param>
        <summary>Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="obj" /> oraz to wystąpienie są tego samego typu i mają takie same wartości; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<xref:System.Attribute.Equals%2A> Metoda używa odbicia, aby pobrać informacje z pola dla bieżącego wystąpienia i `obj` argumentu. Następnie porównuje wartości pól. 

Podczas implementowania własne klasy pochodne <xref:System.Attribute>, możesz zastąpić <xref:System.Attribute.Equals%2A> metody. Ponieważ używa odbicia, firma Microsoft zaleca, że możesz to zrobić. Jednak przesłonięcia, należy wykonać standardowe testu równości odwołań (dwa argumenty reprezentują tego samego wystąpienia obiektu) lub równość wartości (dwa argumenty są tego samego typu i mają takie same wartości). Jeśli chcesz wykonać porównanie niestandardowych do określenia, czy dwa atrybuty obiekty są równe, możesz zastąpić <xref:System.Attribute.Match%2A> metody.   

## Examples  
 W poniższym przykładzie zdefiniowano dwa parametru niestandardowego <xref:System.Attribute> klasy, a następnie tworzy kilka obiektów każdej klasy i używa <xref:System.Attribute.Equals%2A> metody, aby je porównywać.  
  
 [!code-cpp[System.Attribute.Equals](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.Equals/CPP/equals.cpp)]
 [!code-csharp[System.Attribute.Equals](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.Equals/CS/equals.cs)]
 [!code-vb[System.Attribute.Equals](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.Equals/VB/equals.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera atrybut niestandardowy o określonym typie stosowane do zestawu, modułu, składowej typu lub parametru metody.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Assembly, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Assembly" /> klasa, która opisuje zbiorem modułów.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <summary>Pobiera atrybut niestandardowy stosowane do określonego zestawu. Parametry określają zestawu i typu atrybutu niestandardowego, aby wyszukać.</summary>
        <returns>Odwołanie do pojedynczego atrybutu niestandardowego typu <paramref name="attributeType" /> mający zastosowanie do <paramref name="element" />, lub <see langword="null" /> Jeśli nie ma takiego atrybutu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Attribute.GetCustomAttributes%2A> metodę, jeśli oczekujesz, że więcej niż jedną wartość ma zostać zwrócone, lub <xref:System.Reflection.AmbiguousMatchException> zostanie zgłoszony.  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca atrybuty zabezpieczeń, jeśli atrybuty są przechowywane w nowym formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.GetCustomAttribute%2A> wykonywanie metody <xref:System.Reflection.Assembly> jako parametr.  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Znaleziono więcej niż jeden z wymaganych atrybutów.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As MemberInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.MemberInfo" /> klasa, która opisuje konstruktora, zdarzenia, pola, metody lub właściwości składowej klasy.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <summary>Pobiera stosowany do składowej typu atrybutu niestandardowego. Parametry określają elementu członkowskiego i typu atrybutu niestandardowego do wyszukania.</summary>
        <returns>Odwołanie do pojedynczego atrybutu niestandardowego typu <paramref name="attributeType" /> mający zastosowanie do <paramref name="element" />, lub <see langword="null" /> Jeśli nie ma takiego atrybutu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopasowanie jest określana w taki sam sposób, jak opisano w sekcji zwracają wartość <xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca atrybuty zabezpieczeń dla typów, metod i konstruktorów Jeśli atrybutów są przechowywane w nowym formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.GetCustomAttribute%2A> wykonywanie metody <xref:System.Reflection.MemberInfo> jako parametr.  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" /> nie jest konstruktor, metody, właściwości, zdarzenia, typ lub pola.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Znaleziono więcej niż jeden z wymaganych atrybutów.</exception>
        <exception cref="T:System.TypeLoadException">Nie można załadować typu niestandardowego atrybutu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Module, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Module" /> klasa, która opisuje przenośny plik wykonywalny.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <summary>Pobiera atrybut niestandardowy stosowane do modułu. Parametry określają modułu oraz typu atrybutu niestandardowego, aby wyszukać.</summary>
        <returns>Odwołanie do pojedynczego atrybutu niestandardowego typu <paramref name="attributeType" /> mający zastosowanie do <paramref name="element" />, lub <see langword="null" /> Jeśli nie ma takiego atrybutu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.GetCustomAttribute%2A> wykonywanie metody <xref:System.Reflection.Module> jako parametr.  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Znaleziono więcej niż jeden z wymaganych atrybutów.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As ParameterInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.ParameterInfo" /> klasę, która opisuje parametr składową klasy.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <summary>Pobiera atrybut niestandardowy zastosowany do parametru metody. Parametry określają parametru metody i typu atrybutu niestandardowego, aby wyszukać.</summary>
        <returns>Odwołanie do pojedynczego atrybutu niestandardowego typu <paramref name="attributeType" /> mający zastosowanie do <paramref name="element" />, lub <see langword="null" /> Jeśli nie ma takiego atrybutu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `element` reprezentuje parametr w metodzie typu pochodnego, wartość zwracana zawiera dziedziczne atrybutów niestandardowych zastosowanych do tego samego parametru w przesłonięte metody podstawowej.  
  
   
  
## Examples  
 Poniższy kod definiuje parametru niestandardowego <xref:System.Attribute> klasy i stosuje atrybut niestandardowy do metody w klasie pochodnej i podstawowej klasy pochodnej. W przykładzie pokazano użycie <xref:System.Attribute.GetCustomAttribute%2A> metodę, aby zwrócić atrybutów.  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#1)]
 [!code-csharp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#1)]
 [!code-vb[System.Attribute.GetCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Znaleziono więcej niż jeden z wymaganych atrybutów.</exception>
        <exception cref="T:System.TypeLoadException">Nie można załadować typu niestandardowego atrybutu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Assembly, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Assembly" /> klasa, która opisuje zbiorem modułów.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <param name="inherit">Ten parametr jest ignorowany i nie ma wpływu na działanie tej metody.</param>
        <summary>Pobiera atrybutów niestandardowych zastosowanych dla zestawu. Parametry określają zestaw, typ atrybutu niestandardowego, aby wyszukać i opcji wyszukiwania zignorowane.</summary>
        <returns>Odwołanie do pojedynczego atrybutu niestandardowego typu <paramref name="attributeType" /> mający zastosowanie do <paramref name="element" />, lub <see langword="null" /> Jeśli nie ma takiego atrybutu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca atrybuty zabezpieczeń, jeśli atrybuty są przechowywane w nowym formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.GetCustomAttribute%2A> wykonywanie metody <xref:System.Reflection.Assembly> jako parametr.  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Znaleziono więcej niż jeden z wymaganych atrybutów.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As MemberInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.MemberInfo" /> klasa, która opisuje konstruktora, zdarzenia, pola, metody lub właściwości składowej klasy.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <param name="inherit">Jeśli <see langword="true" />, określa również wyszukiwania elementów nadrzędnych elementu <c>elementu</c> dla atrybutów niestandardowych.</param>
        <summary>Pobiera stosowany do składowej typu atrybutu niestandardowego. Parametry Określ element członkowski typu niestandardowego atrybutu w celu wyszukiwania i czy do wyszukiwania elementów nadrzędnych elementu członkowskiego.</summary>
        <returns>Odwołanie do pojedynczego atrybutu niestandardowego typu <paramref name="attributeType" /> mający zastosowanie do <paramref name="element" />, lub <see langword="null" /> Jeśli nie ma takiego atrybutu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca atrybuty zabezpieczeń dla typów, metod i konstruktorów Jeśli atrybutów są przechowywane w nowym formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.GetCustomAttribute%2A> wykonywanie metody <xref:System.Reflection.MemberInfo> jako parametr.  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" /> nie jest konstruktor, metody, właściwości, zdarzenia, typ lub pola.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Znaleziono więcej niż jeden z wymaganych atrybutów.</exception>
        <exception cref="T:System.TypeLoadException">Nie można załadować typu niestandardowego atrybutu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Module, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Module" /> klasa, która opisuje przenośny plik wykonywalny.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <param name="inherit">Ten parametr jest ignorowany i nie ma wpływu na działanie tej metody.</param>
        <summary>Pobiera atrybut niestandardowy stosowane do modułu. Parametry określają modułu, typu atrybutu niestandardowego, aby wyszukać i opcji wyszukiwania zignorowane.</summary>
        <returns>Odwołanie do pojedynczego atrybutu niestandardowego typu <paramref name="attributeType" /> mający zastosowanie do <paramref name="element" />, lub <see langword="null" /> Jeśli nie ma takiego atrybutu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.GetCustomAttribute%2A> wykonywanie metody <xref:System.Reflection.Module> jako parametr.  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Znaleziono więcej niż jeden z wymaganych atrybutów.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.ParameterInfo" /> klasę, która opisuje parametr składową klasy.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <param name="inherit">Jeśli <see langword="true" />, określa również wyszukiwania elementów nadrzędnych elementu <c>elementu</c> dla atrybutów niestandardowych.</param>
        <summary>Pobiera atrybut niestandardowy zastosowany do parametru metody. Parametry określ parametr metody typu niestandardowego atrybutu w celu wyszukiwania i czy do wyszukiwania elementów nadrzędnych parametru metody.</summary>
        <returns>Odwołanie do pojedynczego atrybutu niestandardowego typu <paramref name="attributeType" /> mający zastosowanie do <paramref name="element" />, lub <see langword="null" /> Jeśli nie ma takiego atrybutu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `element` reprezentuje parametr w metodzie typu pochodnego, wartość zwracana zawiera dziedziczne atrybutów niestandardowych zastosowanych do tego samego parametru w przesłonięte metody podstawowej.  
  
   
  
## Examples  
 Poniższy kod definiuje parametru niestandardowego <xref:System.Attribute> klasy i stosuje atrybut niestandardowy do metody w klasie pochodnej i podstawowej klasy pochodnej. W przykładzie pokazano użycie <xref:System.Attribute.GetCustomAttribute%2A> metodę, aby zwrócić atrybutów.  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrprminh.cpp#3)]
 [!code-csharp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrprminh.cs#3)]
 [!code-vb[System.Attribute.GetCustomAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrprminh.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Znaleziono więcej niż jeden z wymaganych atrybutów.</exception>
        <exception cref="T:System.TypeLoadException">Nie można załadować typu niestandardowego atrybutu.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera tablicę atrybutów niestandardowych, zastosowanych do zestawu, modułu, składowej typu lub parametru metody.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Assembly" /> klasa, która opisuje zbiorem modułów.</param>
        <summary>Pobiera tablicę atrybutów niestandardowych zastosowanych dla zestawu. Parametr określa zestaw.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe zastosowane do <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca atrybuty zabezpieczeń, jeśli atrybuty są przechowywane w nowym formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład pobiera atrybuty niestandardowe w bieżącym zestawie.  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As MemberInfo) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.MemberInfo" /> klasa, która opisuje konstruktora, zdarzenia, pola, metody lub właściwości składowej klasy.</param>
        <summary>Pobiera tablicę atrybutów niestandardowych, stosowany do składowej typu. Parametr określa element członkowski.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe zastosowane do <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana zawiera atrybuty niestandardowe dla elementów nadrzędnych `element`.  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca atrybuty zabezpieczeń na metody, konstruktorów i typy Jeśli atrybutów są przechowywane w nowym formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttribute%2A>uwzględnieniem <xref:System.Reflection.MemberInfo> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" /> nie jest konstruktor, metody, właściwości, zdarzenia, typ lub pola.</exception>
        <exception cref="T:System.TypeLoadException">Nie można załadować typu niestandardowego atrybutu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Module" /> klasa, która opisuje przenośny plik wykonywalny.</param>
        <summary>Pobiera tablicę atrybuty niestandardowe zastosowane do modułu. Parametr określa moduł.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe zastosowane do <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.Module> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.ParameterInfo" /> klasę, która opisuje parametr składową klasy.</param>
        <summary>Pobiera tablicę atrybutów niestandardowych, zastosowany do parametru metody. Parametr określa parametr metody.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe zastosowane do <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `element` reprezentuje parametr w metodzie typu pochodnego, wartość zwracana zawiera dziedziczne atrybutów niestandardowych zastosowanych do tego samego parametru w przesłonięte metody podstawowej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.ParameterInfo> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.TypeLoadException">Nie można załadować typu niestandardowego atrybutu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Assembly" /> klasa, która opisuje zbiorem modułów.</param>
        <param name="inherit">Ten parametr jest ignorowany i nie ma wpływu na działanie tej metody.</param>
        <summary>Pobiera tablicę atrybutów niestandardowych zastosowanych dla zestawu. Parametry określają zestaw i opcji wyszukiwania zignorowane.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe zastosowane do <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca atrybuty zabezpieczeń, jeśli atrybuty są przechowywane w nowym formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.Assembly> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Assembly" /> klasa, która opisuje zbiorem modułów.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <summary>Pobiera tablicę atrybutów niestandardowych zastosowanych dla zestawu. Parametry określają zestawu i typu atrybutu niestandardowego do wyszukania.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe typu <paramref name="attributeType" /> dotyczą <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca atrybuty zabezpieczeń, jeśli atrybuty są przechowywane w nowym formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.Assembly> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As MemberInfo, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.MemberInfo" /> klasa, która opisuje konstruktora, zdarzenia, pola, metody lub właściwości składowej klasy.</param>
        <param name="inherit">Jeśli <see langword="true" />, określa również wyszukiwania elementów nadrzędnych elementu <c>elementu</c> dla atrybutów niestandardowych.</param>
        <summary>Pobiera tablicę atrybutów niestandardowych, stosowany do składowej typu. Parametry Określ element członkowski typu niestandardowego atrybutu w celu wyszukiwania i czy do wyszukiwania elementów nadrzędnych elementu członkowskiego.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe zastosowane do <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana zawiera atrybuty niestandardowe dla elementów nadrzędnych `element` Jeśli `inherit` jest `true`.  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca atrybuty zabezpieczeń na metody, konstruktorów i typy Jeśli atrybutów są przechowywane w nowym formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.MemberInfo> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" /> nie jest konstruktor, metody, właściwości, zdarzenia, typ lub pola.</exception>
        <exception cref="T:System.TypeLoadException">Nie można załadować typu niestandardowego atrybutu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.MemberInfo" /> klasa, która opisuje konstruktora, zdarzenia, pola, metody lub właściwości składowej klasy.</param>
        <param name="type">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <summary>Pobiera tablicę atrybutów niestandardowych, stosowany do składowej typu. Parametry określają elementu członkowskiego i typu atrybutu niestandardowego do wyszukania.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe typu <paramref name="type" /> dotyczą <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana zawiera atrybuty niestandardowe dla elementów nadrzędnych `element`.  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca atrybuty zabezpieczeń na metody, konstruktorów i typy Jeśli atrybutów są przechowywane w nowym formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttribute%2A>uwzględnieniem <xref:System.Reflection.MemberInfo> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="type" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" /> nie jest konstruktor, metody, właściwości, zdarzenia, typ lub pola.</exception>
        <exception cref="T:System.TypeLoadException">Nie można załadować typu niestandardowego atrybutu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Module" /> klasa, która opisuje przenośny plik wykonywalny.</param>
        <param name="inherit">Ten parametr jest ignorowany i nie ma wpływu na działanie tej metody.</param>
        <summary>Pobiera tablicę atrybuty niestandardowe zastosowane do modułu. Parametry określają moduł i opcji wyszukiwania zignorowane.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe zastosowane do <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana zawiera atrybuty niestandardowe dla elementów nadrzędnych `element` Jeśli `inherit` jest `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.Module> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Module" /> klasa, która opisuje przenośny plik wykonywalny.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <summary>Pobiera tablicę atrybuty niestandardowe zastosowane do modułu. Parametry określają modułu oraz typu atrybutu niestandardowego, aby wyszukać.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe typu <paramref name="attributeType" /> dotyczą <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.Module> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.ParameterInfo" /> klasę, która opisuje parametr składową klasy.</param>
        <param name="inherit">Jeśli <see langword="true" />, określa również wyszukiwania elementów nadrzędnych elementu <c>elementu</c> dla atrybutów niestandardowych.</param>
        <summary>Pobiera tablicę atrybutów niestandardowych, zastosowany do parametru metody. Parametry określają parametru metody i czy do wyszukiwania elementów nadrzędnych parametru metody.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe zastosowane do <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `element` reprezentuje parametr w metodzie typu pochodnego, wartość zwracana zawiera dziedziczne atrybutów niestandardowych zastosowanych do tego samego parametru w przesłonięte metody podstawowej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.ParameterInfo> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Reflection.ParameterInfo.Member" /> Właściwość <paramref name="element" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.TypeLoadException">Nie można załadować typu niestandardowego atrybutu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.ParameterInfo" /> klasę, która opisuje parametr składową klasy.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <summary>Pobiera tablicę atrybutów niestandardowych, zastosowany do parametru metody. Parametry określają parametru metody i typu atrybutu niestandardowego, aby wyszukać.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe typu <paramref name="attributeType" /> dotyczą <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `element` reprezentuje parametr w metodzie typu pochodnego, wartość zwracana zawiera dziedziczne atrybutów niestandardowych zastosowanych do tego samego parametru w przesłonięte metody podstawowej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.ParameterInfo> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.TypeLoadException">Nie można załadować typu niestandardowego atrybutu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Assembly" /> klasa, która opisuje zbiorem modułów.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <param name="inherit">Ten parametr jest ignorowany i nie ma wpływu na działanie tej metody.</param>
        <summary>Pobiera tablicę atrybutów niestandardowych zastosowanych dla zestawu. Parametry określają zestaw, typ atrybutu niestandardowego, aby wyszukać i opcji wyszukiwania zignorowane.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe typu <paramref name="attributeType" /> dotyczą <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca atrybuty zabezpieczeń, jeśli atrybuty są przechowywane w nowym formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.Assembly> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ type, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, type, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.MemberInfo" /> klasa, która opisuje konstruktora, zdarzenia, pola, metody lub właściwości składowej klasy.</param>
        <param name="type">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <param name="inherit">Jeśli <see langword="true" />, określa również wyszukiwania elementów nadrzędnych elementu <c>elementu</c> dla atrybutów niestandardowych.</param>
        <summary>Pobiera tablicę atrybutów niestandardowych, stosowany do składowej typu. Parametry Określ element członkowski typu niestandardowego atrybutu w celu wyszukiwania i czy do wyszukiwania elementów nadrzędnych elementu członkowskiego.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe typu <paramref name="type" /> dotyczą <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana zawiera atrybuty niestandardowe dla elementów nadrzędnych `element` Jeśli `inherit` jest `true`.  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca atrybuty zabezpieczeń na metody, konstruktorów i typy Jeśli atrybutów są przechowywane w nowym formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.MemberInfo> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="type" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" /> nie jest konstruktor, metody, właściwości, zdarzenia, typ lub pola.</exception>
        <exception cref="T:System.TypeLoadException">Nie można załadować typu niestandardowego atrybutu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Module" /> klasa, która opisuje przenośny plik wykonywalny.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <param name="inherit">Ten parametr jest ignorowany i nie ma wpływu na działanie tej metody.</param>
        <summary>Pobiera tablicę atrybuty niestandardowe zastosowane do modułu. Parametry określają modułu, typu atrybutu niestandardowego, aby wyszukać i opcji wyszukiwania zignorowane.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe typu <paramref name="attributeType" /> dotyczą <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana zawiera atrybuty niestandardowe dla elementów nadrzędnych `element` Jeśli `inherit` jest `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.Module> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.ParameterInfo" /> klasę, która opisuje parametr składową klasy.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <param name="inherit">Jeśli <see langword="true" />, określa również wyszukiwania elementów nadrzędnych elementu <c>elementu</c> dla atrybutów niestandardowych.</param>
        <summary>Pobiera tablicę atrybutów niestandardowych, zastosowany do parametru metody. Parametry określ parametr metody typu niestandardowego atrybutu w celu wyszukiwania i czy do wyszukiwania elementów nadrzędnych parametru metody.</summary>
        <returns>
          <see cref="T:System.Attribute" /> Tablicę, która zawiera atrybuty niestandardowe typu <paramref name="attributeType" /> dotyczą <paramref name="element" />, lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `element` reprezentuje parametr w metodzie typu pochodnego, wartość zwracana zawiera dziedziczne atrybutów niestandardowych zastosowanych do tego samego parametru w przesłonięte metody podstawowej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Attribute.GetCustomAttributes%2A>uwzględnieniem <xref:System.Reflection.ParameterInfo> jako parametr.  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.TypeLoadException">Nie można załadować typu niestandardowego atrybutu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="attribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu dla tego wystąpienia.</summary>
        <returns>Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.GetHashCode%2A> w kontekście <xref:System.Attribute>.  
  
 [!code-csharp[GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetHashCode/CS/hashcode.cs#1)]
 [!code-vb[GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetHashCode/VB/hashcode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="abstract member IsDefaultAttribute : unit -&gt; bool&#xA;override this.IsDefaultAttribute : unit -&gt; bool" Usage="attribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, wskazuje, czy wartość tego wystąpienia jest wartością domyślną dla klasy pochodnej.</summary>
        <returns>
          <see langword="true" /> Jeśli to wystąpienie jest domyślnego atrybutu dla klasy; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja tej klasy zwraca `false`i muszą być zaimplementowane w klasie pochodnej były przydatne dla tej klasy.  
  
 Implementacja tej metody w klasie pochodnej porównuje wartość tego wystąpienia na standardową wartość domyślną, następnie zwraca wartość logiczną wskazującą, czy wartość tego wystąpienia jest równa wartości standardowej. Standardowe wartości jest zazwyczaj kodowane jako stała w implementacji lub programowo przechowywane w polu używane przez implementację.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.IsDefaultAttribute%2A>.  
  
 [!code-cpp[IsDefaultAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefaultAttribute/CPP/defattr.cpp#1)]
 [!code-csharp[IsDefaultAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefaultAttribute/CS/defattr.cs#1)]
 [!code-vb[IsDefaultAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefaultAttribute/VB/defattr.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDefined">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy wszystkie atrybuty niestandardowe określonego typu są stosowane do zestawu, modułu, składowej typu lub parametru metody.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Assembly, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Assembly * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Assembly" /> klasa, która opisuje zbiorem modułów.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <summary>Określa, czy wszystkie atrybuty niestandardowe są stosowane do zestawu. Parametry określają zestawu i typu atrybutu niestandardowego do wyszukania.</summary>
        <returns>
          <see langword="true" /> Jeśli atrybut niestandardowy typu <paramref name="attributeType" /> jest stosowany do <paramref name="element" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca `true` Jeśli zestaw ma atrybuty zabezpieczeń są przechowywane w nowych formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.IsDefined%2A>uwzględnieniem <xref:System.Reflection.Assembly> jako parametr.  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As MemberInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.MemberInfo" /> klasa, która opisuje konstruktora, zdarzenia, pola, metody, typu lub właściwości składowej klasy.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <summary>Określa, czy wszystkie atrybuty niestandardowe są stosowane do składowej typu. Parametry określają elementu członkowskiego i typu atrybutu niestandardowego do wyszukania.</summary>
        <returns>
          <see langword="true" /> Jeśli atrybut niestandardowy typu <paramref name="attributeType" /> jest stosowany do <paramref name="element" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nadrzędne `element` są przeszukiwane pod kątem atrybutów niestandardowych.  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca `true` Jeśli typ, metoda lub Konstruktor ma atrybuty zabezpieczeń są przechowywane w nowych formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.IsDefined%2A>uwzględnieniem <xref:System.Reflection.MemberInfo> jako parametr.  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" /> nie jest konstruktor, metody, właściwości, zdarzenia, typ lub pola.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Module, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Module * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Module" /> klasa, która opisuje przenośny plik wykonywalny.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <summary>Określa, czy wszystkie atrybuty niestandardowe określonego typu są stosowane do modułu. Parametry określają modułu oraz typu atrybutu niestandardowego, aby wyszukać.</summary>
        <returns>
          <see langword="true" /> Jeśli atrybut niestandardowy typu <paramref name="attributeType" /> jest stosowany do <paramref name="element" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nadrzędne `element` atrybutów niestandardowych, które nie są przeszukiwane.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.IsDefined%2A>uwzględnieniem <xref:System.Reflection.Module> jako parametr.  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As ParameterInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.ParameterInfo" /> klasę, która opisuje parametr składową klasy.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <summary>Określa, czy wszystkie atrybuty niestandardowe są stosowane do parametru metody. Parametry określają parametru metody i typu atrybutu niestandardowego, aby wyszukać.</summary>
        <returns>
          <see langword="true" /> Jeśli atrybut niestandardowy typu <paramref name="attributeType" /> jest stosowany do <paramref name="element" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nadrzędne `element` są przeszukiwane pod kątem atrybutów niestandardowych.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.IsDefined%2A>uwzględnieniem <xref:System.Reflection.ParameterInfo> jako parametr.  
  
 [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Assembly, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Assembly * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Assembly" /> klasa, która opisuje zbiorem modułów.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <param name="inherit">Ten parametr jest ignorowany i nie ma wpływu na działanie tej metody.</param>
        <summary>Określa, czy wszystkie atrybuty niestandardowe są stosowane do zestawu. Parametry określają zestaw, typ atrybutu niestandardowego, aby wyszukać i opcji wyszukiwania zignorowane.</summary>
        <returns>
          <see langword="true" /> Jeśli atrybut niestandardowy typu <paramref name="attributeType" /> jest stosowany do <paramref name="element" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca `true` Jeśli zestaw ma atrybuty zabezpieczeń są przechowywane w nowych formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.IsDefined%2A>uwzględnieniem <xref:System.Reflection.Assembly> jako parametr.  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As MemberInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.MemberInfo" /> klasa, która opisuje konstruktora, zdarzenia, pola, metody, typu lub właściwości składowej klasy.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <param name="inherit">Jeśli <see langword="true" />, określa również wyszukiwania elementów nadrzędnych elementu <c>elementu</c> dla atrybutów niestandardowych.</param>
        <summary>Określa, czy wszystkie atrybuty niestandardowe są stosowane do składowej typu. Parametry Określ element członkowski typu niestandardowego atrybutu w celu wyszukiwania i czy do wyszukiwania elementów nadrzędnych elementu członkowskiego.</summary>
        <returns>
          <see langword="true" /> Jeśli atrybut niestandardowy typu <paramref name="attributeType" /> jest stosowany do <paramref name="element" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Począwszy od programu .NET Framework w wersji 2.0, Metoda ta zwraca `true` Jeśli typ, metoda lub Konstruktor ma atrybuty zabezpieczeń są przechowywane w nowych formacie metadanych. Zestawy skompilowane z wersji 2.0 lub nowszej nowego formatu. Dynamicznych zestawów i zestawy skompilowane z wcześniejszych wersji programu .NET Framework należy używać tego starszego formatu XML. Zobacz [emitowanie atrybutów zabezpieczeń deklaracyjnych](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.IsDefined%2A>uwzględnieniem <xref:System.Reflection.MemberInfo> jako parametr.  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" /> nie jest konstruktor, metody, właściwości, zdarzenia, typ lub pola.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Module, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Module * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.Module" /> klasa, która opisuje przenośny plik wykonywalny.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <param name="inherit">Ten parametr jest ignorowany i nie ma wpływu na działanie tej metody.</param>
        <summary>Określa, czy wszystkie atrybuty niestandardowe są stosowane do modułu. Parametry określają modułu, typu atrybutu niestandardowego, aby wyszukać i opcji wyszukiwania zignorowane.</summary>
        <returns>
          <see langword="true" /> Jeśli atrybut niestandardowy typu <paramref name="attributeType" /> jest stosowany do <paramref name="element" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ignoruje `inherit` parametru i nie wyszukuje nadrzędne `element` dla atrybutów niestandardowych.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.IsDefined%2A>uwzględnieniem <xref:System.Reflection.Module> jako parametr.  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt pochodzi od <see cref="T:System.Reflection.ParameterInfo" /> klasę, która opisuje parametr składową klasy.</param>
        <param name="attributeType">Typ lub podstawowym typem atrybutu niestandardowego, aby wyszukać.</param>
        <param name="inherit">Jeśli <see langword="true" />, określa również wyszukiwania elementów nadrzędnych elementu <c>elementu</c> dla atrybutów niestandardowych.</param>
        <summary>Określa, czy wszystkie atrybuty niestandardowe są stosowane do parametru metody. Parametry określ parametr metody typu niestandardowego atrybutu w celu wyszukiwania i czy do wyszukiwania elementów nadrzędnych parametru metody.</summary>
        <returns>
          <see langword="true" /> Jeśli atrybut niestandardowy typu <paramref name="attributeType" /> jest stosowany do <paramref name="element" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Attribute.IsDefined%2A>uwzględnieniem <xref:System.Reflection.ParameterInfo> jako parametr.  
  
 [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> lub <paramref name="attributeType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> nie pochodzi od <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.ExecutionEngineException">
          <paramref name="element" /> Metoda, Konstruktor lub typu, nie jest.</exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public virtual bool Match (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Match(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Match (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Match(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Match : obj -&gt; bool&#xA;override this.Match : obj -&gt; bool" Usage="attribute.Match obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> Do porównania z tym wystąpieniem <see cref="T:System.Attribute" />.</param>
        <summary>Po przesłonięciu w klasie pochodnej zwraca wartość, która wskazuje, czy to wystąpienie jest równe podanemu obiektowi.</summary>
        <returns>
          <see langword="true" /> Jeśli to wystąpienie jest równe <paramref name="obj" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda określa, czy jest to jeden <xref:System.Attribute> jest równe innego. Jego domyślna implementacja jest taka sama jak <xref:System.Attribute.Equals%2A>, która określa, czy dwa atrybuty są tego samego typu i ma takie same wartości pola.

 Ogólnie rzecz biorąc <xref:System.Attribute.Equals%2A> metoda jest przeznaczona do wykonywania standardowych testów pod kątem równości odwołań lub wartość. Można zastąpić <xref:System.Attribute.Match%2A> metody, gdy chcesz wykonać niestandardowe porównania dla równości, na podstawie kryteriów innych niż dwa wystąpienia atrybutów są tego samego typu i wartości identifical. Na przykład, można zastąpić <xref:System.Attribute.Match%2A> metodę, aby porównać atrybutów w następujących scenariuszach:

 - Atrybut zawiera polem bitowym i rozważyć równa dwa wystąpienia atrybutu, jeśli ustawiono bit określonej. Na przykład `NumericDisplay` atrybut może zawierać pole bitowe, która wskazuje, jakie formaty liczbowe (na przykład binarne, ósemkowa i decimal i szesnastkowym) klient obsługuje. Zastąpione <xref:System.Attribute.Match%2A> metoda warto rozważyć równa dwa wystąpienia, jeśli obsługują one tego samego formatu liczbowego.

 - Atrybut zawiera wiele pól, które zawierają ten sam rodzaj informacji lub zawiera tablicę, w którym wartości mogą być w dowolnej kolejności. Na przykład `Author` atrybut może zawierać wiele pól dla nazw autora. Zastąpione <xref:System.Attribute.Match%2A> metoda warto rozważyć równa dwa wystąpienia, jeśli mają one ten sam autorów, niezależnie od tego, czy każde pole jest równa odpowiednie pole.    
 
 
## <a name="example"></a>Przykład  
 Poniższy przykład ilustruje użycie <xref:System.Attribute.Match%2A> do utworzenia metody porównania niestandardowej wartości atrybutów. Jeśli definiuje `AuthorsAttribute` wewnętrznie zawierający `List<String>` który przechowuje nazwy autorów. Ponieważ nazwy mogą występować w dowolnej kolejności na liście, zastępuje ona <xref:System.Attribute.Match%2A> metodę, aby porównać nazw autora, niezależnie od ich pozycji na liście. Uwaga <xref:System.Attribute.Equals%2A> metody, która wykonuje test pod kątem równości wartości, zwraca różne wyniki z <xref:System.Attribute.Match%2A> metody.   
  
 [!code-csharp[Match#1](~/samples/snippets/csharp/VS_Snippets_CLR/Match/CS/match.cs)]
 [!code-vb[Match#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Match/VB/match.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Attribute.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Attribute.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Attribute::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">Zarezerwowane do użytku w przyszłości. Musi być wartością IID_NULL.</param>
        <param name="rgszNames">Przekazana tablica nazw ma być mapowana.</param>
        <param name="cNames">Liczba nazw, które mają być mapowane.</param>
        <param name="lcid">Ustawienia regionalne kontekstu, w którym można interpretować nazwy.</param>
        <param name="rgDispId">Tablica przydzielana przez obiekt wywołujący, który otrzymuje numery identyfikacyjne odpowiadających nazw.</param>
        <summary>Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::GetIDsOfNames`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Dostęp z późnym wiązaniem przy użyciu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Attribute.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Attribute::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">Informacje o typie, który będzie zwracany.</param>
        <param name="lcid">Identyfikator regionalny dla informacji o typie.</param>
        <param name="ppTInfo">Otrzymuje wskaźnik do obiektu informacji żądanego typu.</param>
        <summary>Pobiera informacje o typie dla obiektu, który można pobrać informacji o typie interfejsu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfo`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Dostęp z późnym wiązaniem przy użyciu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Attribute.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Attribute::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">Wskazuje lokalizację, która odbiera informację o liczbie typów dostarczanych przez obiekt.</param>
        <summary>Pobiera informację o liczbie typów interfejsów, jakie zawiera obiekt (0 lub 1).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfoCount`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Dostęp z późnym wiązaniem przy użyciu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.Invoke">
      <MemberSignature Language="C#" Value="void _Attribute.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Attribute.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Attribute::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">Określa element członkowski.</param>
        <param name="riid">Zarezerwowane do użytku w przyszłości. Musi być wartością IID_NULL.</param>
        <param name="lcid">Ustawienia regionalne kontekstu, w którym można interpretować argumenty.</param>
        <param name="wFlags">Flagi opisujące kontekst wywołania.</param>
        <param name="pDispParams">Wskaźnik do struktury zawiera tablicę argumentów, tablicę identyfikatorów DISPID argumentu dla nazwanych argumentów i zlicza liczbę elementów w tablicach.</param>
        <param name="pVarResult">Wskaźnik miejsca, gdzie ma być przechowywany wynik.</param>
        <param name="pExcepInfo">Wskaźnik do struktury, która zawiera informacje o wyjątku.</param>
        <param name="puArgErr">Indeks pierwszego argumentu, który zawiera błąd.</param>
        <summary>Umożliwia dostęp do właściwości i metod udostępnianych przez obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::Invoke`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Dostęp z późnym wiązaniem przy użyciu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public virtual object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.Attribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.Attribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Po zaimplementowaniu w klasie pochodnej pobiera unikatowy identyfikator dla tego <see cref="T:System.Attribute" />.</summary>
        <value>
          <see cref="T:System.Object" /> Oznacza to unikatowy identyfikator dla atrybutu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementowany, ten identyfikator jest jedynie <xref:System.Type> atrybutu. Jednak jest ona przeznaczona, unikatowy identyfikator służyć do identyfikowania dwa atrybuty tego samego typu.  
  
   
  
## Examples  
 Poniższy kod implementuje przykład <xref:System.Attribute.TypeId%2A> właściwości parametru niestandardowego <xref:System.Attribute> klasy i przedstawia jego użycia.  
  
 [!code-cpp[System.Attribute.TypeId#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.TypeId/CPP/typeid.cpp#1)]
 [!code-csharp[System.Attribute.TypeId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.TypeId/CS/typeid.cs#1)]
 [!code-vb[System.Attribute.TypeId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.TypeId/VB/typeid.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>