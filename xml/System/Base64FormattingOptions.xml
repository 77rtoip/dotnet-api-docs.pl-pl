<Type Name="Base64FormattingOptions" FullName="System.Base64FormattingOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2931b58e6ec6b70cf7994ac951d63a771078ae82" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52254200" /></Metadata><TypeSignature Language="C#" Value="public enum Base64FormattingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Base64FormattingOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Base64FormattingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum Base64FormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class Base64FormattingOptions" />
  <TypeSignature Language="F#" Value="type Base64FormattingOptions = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, czy jest to istotne <see cref="Overload:System.Convert.ToBase64CharArray" /> i <see cref="Overload:System.Convert.ToBase64String" /> metody wstawianie podziałów wiersza w swoje dane wyjściowe.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType> i <xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType> konwertują wartość tablicy liczb całkowitych bez znaku 8-bitową na reprezentację ciągu równoważnego, który składa się z podstawowych cyfr 64. Reprezentacja ciągu może zawierać jeden lub więcej podziały wierszy, gdzie podział wiersza jest zdefiniowany jako karetki zwracają znaku (U + 000D), po którym występuje znak (U + 000A) LF. Ponieważ podziały wierszy są traktowane jako znaki odstępu w kodowaniu base-64, są one ignorowane podczas konwertowania base-64 ciąg zakodowany w formacie powrót do tablicy typu byte. Podziały wiersza są po prostu wygodne, wyświetlając ciąg zakodowany formantu lub na urządzeniu, takie jak okna konsoli.  
  
 Brak i wartości InsertLineBreaks wzajemnie się wykluczają. W związku z tym mimo że <xref:System.Base64FormattingOptions.None?displayProperty=nameWithType> wyliczenia jest oznaczona za pomocą <xref:System.FlagsAttribute> atrybutu, nie ma sensu przeprowadzić bitowa kombinacja tych dwóch wartości.  
  
   
  
## Examples  
 Poniższy przykład wywołuje <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> z InsertLineBreaks argument Wstaw wiersz przerywa w ciągu, który jest wytwarzany przez kodowanie tablicy bajtów 100-elementowej.  
  
 [!code-csharp[System.Convert.ToBase64String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String3.cs#3)]
 [!code-vb[System.Convert.ToBase64String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String3.vb#3)]  
  
 Jak wynika z w przykładzie pokazano <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> zakończy się pomyślnie do odzyskiwania oryginalnej tablicy bajtów; znaki końca wiersza są ignorowane podczas konwersji.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="InsertLineBreaks">
      <MemberSignature Language="C#" Value="InsertLineBreaks" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Base64FormattingOptions InsertLineBreaks = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Base64FormattingOptions.InsertLineBreaks" />
      <MemberSignature Language="VB.NET" Value="InsertLineBreaks" />
      <MemberSignature Language="C++ CLI" Value="InsertLineBreaks" />
      <MemberSignature Language="F#" Value="InsertLineBreaks = 1" Usage="System.Base64FormattingOptions.InsertLineBreaks" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Base64FormattingOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Wstawia podziały wiersza po każdym 76 znaków w ciągu reprezentującym.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Base64FormattingOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Base64FormattingOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Base64FormattingOptions.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Base64FormattingOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Po każdym 76 znaków w ciągu reprezentującym nie wstawianie podziałów wiersza.</summary>
      </Docs>
    </Member>
  </Members>
</Type>