<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ValueTuple`8.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50f3b80af01ab6ef85cc4e6dc2686356beeb968bb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f3b80af01ab6ef85cc4e6dc2686356beeb968bb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.7.1,netframework-4.7,netstandard-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>The type of the value tuple's first element.</source>
          <target state="translated">Typ krotki wartość pierwszego elementu.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>The type of the value tuple's second element.</source>
          <target state="translated">Typ krotki wartość drugiego elementu.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>The type of the value tuple's third element.</source>
          <target state="translated">Typ trzeciego elementu krotki wartość.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>The type of the value tuple's fourth element.</source>
          <target state="translated">Typ krotki wartość czwartym elementem.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>The type of the value tuple's fifth element.</source>
          <target state="translated">Typ elementu piątej wartość spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>The type of the value tuple's sixth element.</source>
          <target state="translated">Typ elementu szóstego wartość spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>The type of the value tuple's seventh element.</source>
          <target state="translated">Typ siódmego elementu krotki wartość.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>Any generic value tuple instance that defines the types of the tuple's remaining elements.</source>
          <target state="translated">Wystąpienie spójnej kolekcji ogólnych wartość definiujący typy elementów pozostałych spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.ValueTuple`8">
          <source>Represents an <bpt id="p1">*</bpt>n<ept id="p1">*</ept>-value tuple, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is 8 or greater.</source>
          <target state="translated">Reprezentuje <bpt id="p1">*</bpt>n<ept id="p1">*</ept>— wartość krotki, gdzie <bpt id="p2">*</bpt>n<ept id="p2">*</ept> jest 8 lub nowszego.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>A value tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">Wartość krotki to struktura danych, która ma określoną liczbę i sekwencja wartości.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> structure represents a value tuple that has eight or more elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> Struktury reprezentuje wartość spójnej kolekcji, która ma co najmniej osiem elementy.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>The value tuple types differ from the tuple types (such as <ph id="ph1">&lt;xref:System.Tuple%608&gt;</ph>) as follows:</source>
          <target state="translated">Typy wartości krotki różnią się od typu krotki (takie jak <ph id="ph1">&lt;xref:System.Tuple%608&gt;</ph>) w następujący sposób:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>They are structures (value types) rather than classes (reference types).</source>
          <target state="translated">Są one struktur (typy wartości) zamiast klasy (typy referencyjne).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>Members such as <ph id="ph1">&lt;xref:System.ValueTuple%608.Item1&gt;</ph> and   <ph id="ph2">&lt;xref:System.ValueTuple%608.Item2&gt;</ph> are fields rather than properties.</source>
          <target state="translated">Elementy członkowskie, takie jak <ph id="ph1">&lt;xref:System.ValueTuple%608.Item1&gt;</ph> i <ph id="ph2">&lt;xref:System.ValueTuple%608.Item2&gt;</ph> są pola, a nie właściwości.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>Their fields are mutable rather than read-only.</source>
          <target state="translated">Swoich pól jest modyfikowalny, a nie tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>The value tuple types provide the runtime implementation that supports <bpt id="p1">[</bpt>tuples in C#<ept id="p1">](~/docs/csharp/tuples.md)</ept> and struct tuples in F#.</source>
          <target state="translated">Typy wartości krotki Podaj implementacji środowiska uruchomieniowego, który obsługuje <bpt id="p1">[</bpt>krotek w języku C#<ept id="p1">](~/docs/csharp/tuples.md)</ept> i krotek struktury w języku F #.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>In addition to creating a <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> instance by using language syntax, you can call the <ph id="ph2">&lt;xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=nameWithType&gt;</ph> factory method.</source>
          <target state="translated">Oprócz tworzenia <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> wystąpienia przy użyciu składni języka, należy wywołać <ph id="ph2">&lt;xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=nameWithType&gt;</ph> metoda fabryki.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>Serialization and value tuples</source>
          <target state="translated">Serializacja i wartość krotki</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> type is not serializable in .NET Core 1.x or in the .NET Framework 4.7 and earlier versions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> Typ nie jest możliwy do serializacji w .NET Core 1.x lub .NET Framework 4.7 i wcześniejszych wersjach.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>In addition, .NET Standard, including .NET Standard 2.0, does not mandate serialization of <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> instances; whether or not a <ph id="ph2">&lt;xref:System.ValueTuple%608&gt;</ph> instance is serializable depends on the individual .NET Standard implementation.</source>
          <target state="translated">Ponadto .NET Standard, w tym .NET Standard 2.0 nie wprowadzić serializacji <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> wystąpienia; czy <ph id="ph2">&lt;xref:System.ValueTuple%608&gt;</ph> wystąpienie jest możliwy do serializacji zależy od poszczególnych implementacji .NET Standard.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>To determine whether a <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> type is serializable on a particular .NET implementation, get a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph3">&lt;xref:System.ValueTuple%608&gt;</ph> type and retrieve the value of its <ph id="ph4">&lt;xref:System.Type.IsSerializable%2A&gt;</ph> property.</source>
          <target state="translated">Aby określić, czy <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> typ jest możliwy do serializacji w konkretnej implementacji .NET, Pobierz <ph id="ph2">&lt;xref:System.Type&gt;</ph> obiekt, który reprezentuje <ph id="ph3">&lt;xref:System.ValueTuple%608&gt;</ph> wpisz i pobrać wartość jego <ph id="ph4">&lt;xref:System.Type.IsSerializable%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`8">
          <source>For a list of serializable types in .NET Core and the .NET Framework, see <bpt id="p1">[</bpt>Binary Serialization<ept id="p1">](~/docs/standard/serialization/binary-serialization.md)</ept>.</source>
          <target state="translated">Aby uzyskać listę typów możliwych do serializacji w .NET Core i .NET Framework, zobacz <bpt id="p1">[</bpt>szeregowanie binarne<ept id="p1">](~/docs/standard/serialization/binary-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
          <source>The value tuple's first element.</source>
          <target state="translated">Pierwszy element wartość spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
          <source>The value tuple's second element.</source>
          <target state="translated">Tuple wartość drugiego elementu.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
          <source>The value tuple's third element.</source>
          <target state="translated">Trzeci element wartość spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
          <source>The value tuple's fourth element.</source>
          <target state="translated">Tuple wartość czwartym elementem.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
          <source>The value tuple's fifth element.</source>
          <target state="translated">Element piątej wartość spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
          <source>The value tuple's sixth element.</source>
          <target state="translated">Element szóstego wartość spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
          <source>The value tuple's seventh element.</source>
          <target state="translated">Element siódmego wartość spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
          <source>An instance of any value tuple type that contains the values of the value's tuple's remaining elements.</source>
          <target state="translated">Wystąpienia dowolnego typu krotki wartości zawierającą wartości wartość krotki pozostałe elementy.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance.</source>
          <target state="translated">Inicjuje nowy <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
          <source>In addition to using your language's build-in support for tuples, you can also create a value tuple by calling the static <ph id="ph1">&lt;xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=nameWithType&gt;</ph> method without having to explicitly specify the types of its elements.</source>
          <target state="translated">Oprócz używania swój język kompilacji w pomocy technicznej dla krotek, można tworzyć krotka wartość wywołując statycznych <ph id="ph1">&lt;xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=nameWithType&gt;</ph> metody bez konieczności jawnego określania typów elementów.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
          <source><ph id="ph1">&lt;paramref name="rest" /&gt;</ph> is not a generic value tuple type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rest" /&gt;</ph> nie jest typem ogólnym wartość spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source>The tuple to compare with this instance.</source>
          <target state="translated">Spójna kolekcja do porównania z tym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance to a specified <ph id="ph2">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance</source>
          <target state="translated">Porównuje bieżący <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia określonej <ph id="ph2">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Całkowita wskazująca pozycję tego wystąpienia i <ph id="ph1">&lt;paramref name="other" /&gt;</ph> w porządku sortowania, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Ujemna liczba całkowita</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie poprzedza <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie i <ph id="ph3">&lt;paramref name="other" /&gt;</ph> mieć to samo położenie w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Dodatnia liczba całkowita</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Następuje to wystąpienie <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.ValueTuple`8">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance is equal to a specified object.</source>
          <target state="translated">Zwraca wartość wskazującą, czy bieżący <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienie jest takie samo jak określony obiekt.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Obiekt, który ma zostać porównany z tym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance is equal to a specified object.</source>
          <target state="translated">Zwraca wartość wskazującą, czy bieżący <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienie jest takie samo jak określony obiekt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli bieżące wystąpienie jest taki sam jak określony obiekt; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.Equals(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> argument is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated"><ph id="ph1">`obj`</ph> Argument jest uznawany za taki sam jak bieżące wystąpienie w następujących warunkach:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.Equals(System.Object)">
          <source>It is a <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> value type.</source>
          <target state="translated">Jest <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> typu wartości.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.Equals(System.Object)">
          <source>Its components are of the same types as those of the current instance.</source>
          <target state="translated">Jego składniki mają ten sam typ jak bieżące wystąpienie.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.Equals(System.Object)">
          <source>Its components are equal to those of the current instance.</source>
          <target state="translated">Jego składniki są takie same jak bieżące wystąpienie.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.Equals(System.Object)">
          <source>Equality is determined by the default equality comparer for each component.</source>
          <target state="translated">Równość jest określana przez domyślna funkcja porównująca równości dla każdego składnika.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source>The value tuple to compare with this instance.</source>
          <target state="translated">Spójna kolekcja wartość do porównania z tym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance is equal to a specified <ph id="ph2">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance.</source>
          <target state="translated">Zwraca wartość wskazującą, czy bieżący <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienie jest równe określonej <ph id="ph2">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified tuple; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli bieżące wystąpienie jest równe określonej spójnej kolekcji; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source>The <ph id="ph1">`other`</ph> argument is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated"><ph id="ph1">`other`</ph> Argument jest uznawany za taki sam jak bieżące wystąpienie w następujących warunkach:</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source>Its components are of the same types as those of the current instance.</source>
          <target state="translated">Jego składniki mają ten sam typ jak bieżące wystąpienie.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source>Its components are equal to those of the current instance.</source>
          <target state="translated">Jego składniki są takie same jak bieżące wystąpienie.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})">
          <source>Equality is determined by the default equality comparer for each component.</source>
          <target state="translated">Równość jest określana przez domyślna funkcja porównująca równości dla każdego składnika.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.GetHashCode">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance.</source>
          <target state="translated">Oblicza wartość skrótu dla bieżącego <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.GetHashCode">
          <source>The hash code for the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance.</source>
          <target state="translated">Wartość skrótu dla bieżącego <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`8.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance's first element.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia pierwszego elementu.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`8.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance's second element.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia drugiego elementu.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`8.Item3">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance's third element.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> trzeciego elementu wystąpienia.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`8.Item4">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance's fourth element.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> czwartym elementem wystąpienia.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`8.Item5">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance's fifth element.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> element piątej wystąpienia.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`8.Item6">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance's sixth element.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> element szóstego wystąpienia.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`8.Item7">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance's seventh element.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> element siódmego wystąpienia.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`8.Rest">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance's remaining elements.</source>
          <target state="translated">Pobiera bieżący <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia obiektu pozostałych elementów.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ValueTuple`8.Rest">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%608.Rest&gt;</ph> field returns a nested value tuple that allows access to the eighth though <bpt id="p1">*</bpt>n<ept id="p1">*</ept>th elements of the tuple.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ValueTuple%608.Rest&gt;</ph> Pola zwraca spójną kolekcję wartości zagnieżdżonych umożliwiająca dostęp do ósmego jednak <bpt id="p1">*</bpt>n<ept id="p1">*</ept>elementy th spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ValueTuple`8.Rest">
          <source>Depending on the total number of elements in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested value tuple's <ph id="ph1">`Item1`</ph> through <ph id="ph2">`Item7`</ph> properties.</source>
          <target state="translated">W zależności od całkowita liczba elementów w spójnej kolekcji, można pobrać wartości ósmego za pośrednictwem czternastego składników z krotki zagnieżdżonych wartości <ph id="ph1">`Item1`</ph> za pośrednictwem <ph id="ph2">`Item7`</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ValueTuple`8.Rest">
          <source>You can then use the <ph id="ph1">&lt;xref:System.ValueTuple%608.Rest&gt;</ph> property of a nested <ph id="ph2">&lt;xref:System.ValueTuple%608&gt;</ph> object to retrieve the value tuple at the next level of nesting.</source>
          <target state="translated">Następnie można użyć <ph id="ph1">&lt;xref:System.ValueTuple%608.Rest&gt;</ph> właściwość zagnieżdżoną <ph id="ph2">&lt;xref:System.ValueTuple%608&gt;</ph> obiekt, aby pobrać wartość spójną kolekcję na następny poziom zagnieżdżenia.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The object to compare with the current instance.</source>
          <target state="translated">Obiekt do porównania z bieżącym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">Obiekt dostarczający niestandardowe reguły na potrzeby porównania.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Porównuje bieżący <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia określony obiekt przy użyciu określona funkcja porównująca i zwraca liczbę całkowitą, która wskazuje, czy bieżący obiekt jest przed, po lub w tym samym miejscu określony obiekt w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Całkowita wskazująca pozycję tego wystąpienia i <ph id="ph1">&lt;paramref name="other" /&gt;</ph> w porządku sortowania, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Ujemna liczba całkowita</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie poprzedza <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie i <ph id="ph3">&lt;paramref name="other" /&gt;</ph> mieć to samo położenie w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Dodatnia liczba całkowita</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Następuje to wystąpienie <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This member is an explicit interface implementation.</source>
          <target state="translated">Ten element członkowski jest jawną implementacją interfejsu.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It can only be used when the <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> instance is cast to an  <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.</source>
          <target state="translated">Może być tylko używane podczas <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This method lets you define customized comparisons of <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> objects.</source>
          <target state="translated">Ta metoda pozwala zdefiniować dostosowane porównania <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>For example, you can use this method to order <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> objects based on the value of a specific component.</source>
          <target state="translated">Na przykład można użyć tej metody do zlecenia <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> obiektów na podstawie wartości z określonego składnika.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Although this method can be called directly, it is most commonly called by collection-sorting methods that include <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.</source>
          <target state="translated">Mimo że tę metodę można wywołać bezpośrednio, najczęściej jest wywoływana przez sortowanie kolekcji metod, które obejmują <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parametry porządkowania elementów członkowskich kolekcji.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>For example, it is called by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">Na przykład jest wywoływana przez <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> — metoda i <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> metody <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt, który zostanie uruchomiony przy użyciu <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ValueTuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> Metoda jest przeznaczona do użycia w operacji sortowania.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">Nie należy jej używać, gdy głównym celem porównania jest ustalenie, czy dwa obiekty są sobie równe.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.ValueTuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> method.</source>
          <target state="translated">Aby ustalić, czy dwa obiekty są takie same, należy wywołać <ph id="ph1">&lt;xref:System.ValueTuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> nie jest <ph id="ph2">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Obiekt, który ma zostać porównany z tym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">Obiekt definiujący metodę służącą ocenie, czy dwa obiekty są sobie równe.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">Zwraca wartość wskazującą, czy bieżący <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienie jest takie samo jak określony obiekt na podstawie metody porównania określony.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified objects; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli bieżące wystąpienie jest równe określonej obiektów; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface implementation.</source>
          <target state="translated">Ten element członkowski jest jawną implementacją interfejsu.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It can only be used when the <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> instance is cast to an  <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Może być tylko używane podczas <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation is called only if <ph id="ph2">`other`</ph> is not <ph id="ph3">`null`</ph>, and if it can be successfully cast to a <ph id="ph4">&lt;xref:System.ValueTuple%608&gt;</ph> object that has the same total number of components (including those in nested tuple objects) of the same types as the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> Implementacji jest wywoływana tylko wtedy, gdy <ph id="ph2">`other`</ph> nie jest <ph id="ph3">`null`</ph>, i czy można pomyślnie rzutować <ph id="ph4">&lt;xref:System.ValueTuple%608&gt;</ph> obiektu, który ma taką samą całkowitą liczbę (w tym tych w obiektach zagnieżdżonych krotki) składniki tego samego typu jak bieżące wystąpienie.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType&gt;</ph> method first passes the <ph id="ph2">&lt;xref:System.ValueTuple%608.Item1&gt;</ph> values of the <ph id="ph3">&lt;xref:System.ValueTuple%608&gt;</ph> objects to be compared to the <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType&gt;</ph> Metoda przekazuje pierwszy <ph id="ph2">&lt;xref:System.ValueTuple%608.Item1&gt;</ph> wartości <ph id="ph3">&lt;xref:System.ValueTuple%608&gt;</ph> obiekty do porównania z <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, the method is called again and passed the <ph id="ph2">&lt;xref:System.ValueTuple%608.Item2&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.ValueTuple%608&gt;</ph> objects.</source>
          <target state="translated">Jeśli wywołanie tej metody zwraca <ph id="ph1">`true`</ph>, metoda jest wywoływana ponownie i przekazany <ph id="ph2">&lt;xref:System.ValueTuple%608.Item2&gt;</ph> wartości dwa <ph id="ph3">&lt;xref:System.ValueTuple%608&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This continues until the method call returns <ph id="ph1">`false`</ph> when it compares a specific pair of values, or the two <ph id="ph2">&lt;xref:System.ValueTuple%608.Rest&gt;</ph> values are passed to the method.</source>
          <target state="translated">Ten proces jest kontynuowany do momentu wywołania metody, które zwraca <ph id="ph1">`false`</ph> podczas porównywania konkretną parą wartości lub dwa <ph id="ph2">&lt;xref:System.ValueTuple%608.Rest&gt;</ph> wartości są przekazywane do metody.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance.</source>
          <target state="translated">Obiekt których <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> metody oblicza wartość skrótu bieżącego <ph id="ph2">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance by using a specified computation method.</source>
          <target state="translated">Oblicza wartość skrótu dla bieżącego <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia za pomocą metody określonej obliczeń.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface implementation.</source>
          <target state="translated">Ten element członkowski jest jawną implementacją interfejsu.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>It can only be used when the <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> instance is cast to an  <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Może być tylko używane podczas <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The method simply wraps a call to the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Metoda opakowuje po prostu wywołanie <ph id="ph1">`comparer`</ph> obiektu <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The algorithm used to compute the hash code should return the same hash code for two <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> objects that are considered to be equal.</source>
          <target state="translated">Algorytm używany do obliczania skrótu ma zwracać taki sam skrót dla dwóch <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> obiektów, które są traktowane jako równe.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Obiekt, który ma zostać porównany z bieżącym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Porównuje bieżący <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> obiekt do określonego obiektu i zwraca liczbę całkowitą, która wskazuje, czy bieżący obiekt jest przed, po lub w tym samym miejscu określony obiekt w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Całkowita wskazująca pozycję tego wystąpienia i <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> w porządku sortowania, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Ujemna liczba całkowita</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie poprzedza <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie i <ph id="ph3">&lt;paramref name="other" /&gt;</ph> mieć to samo położenie w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Dodatnia liczba całkowita</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Następuje to wystąpienie <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source>This method provides the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation for the <ph id="ph2">&lt;xref:System.ValueTuple%608&gt;</ph> structure.</source>
          <target state="translated">Ta metoda zapewnia <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementację <ph id="ph2">&lt;xref:System.ValueTuple%608&gt;</ph> struktury.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source>Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, to order the members of a collection.</source>
          <target state="translated">Mimo że można bezpośrednio wywołać metody, najczęściej jest wywoływana przez przeciążeń domyślne sortowanie kolekcji metod, takich jak <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, porządkowania elementów członkowskich kolekcji.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%608.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ValueTuple%608.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> Metoda jest przeznaczona do użycia w operacji sortowania.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">Nie należy jej używać, gdy głównym celem porównania jest ustalenie, czy dwa obiekty są sobie równe.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.ValueTuple%608.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Aby ustalić, czy dwa obiekty są takie same, należy wywołać <ph id="ph1">&lt;xref:System.ValueTuple%608.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source>This method uses the default object comparer to compare each component.</source>
          <target state="translated">Ta metoda używa domyślna funkcja porównująca obiekt do porównania poszczególnych składników.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> nie jest <ph id="ph2">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the specified <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> element.</source>
          <target state="translated">Wartość określonego <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 for <ph id="ph1">&lt;see langword="Item1" /&gt;</ph> to one less than the number of elements in the <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Indeks<ept id="p1">&lt;/c&gt;</ept> można z zakresu od 0 do <ph id="ph1">&lt;see langword="Item1" /&gt;</ph> na mniejszy niż liczba elementów w jeden <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> element.</source>
          <target state="translated">Pobiera wartość określonego <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> elementu w określonej pozycji.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ValueTuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> Właściwość jest jawnej implementacji interfejsu.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Aby wywołać go, należy rzutowania lub konwersji <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> do obiektu <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> obiektu interfejsu.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza niż 0.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than or equal to <ph id="ph2">&lt;see cref="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest większe lub równe <ph id="ph2">&lt;see cref="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph>.</source>
          <target state="translated">Pobiera liczbę elementów w <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length">
          <source>The number of elements in the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph>.</source>
          <target state="translated">Liczba elementów w <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ValueTuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType&gt;</ph> Właściwość jest jawnej implementacji interfejsu.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Aby wywołać go, należy rzutowania lub konwersji <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> do obiektu <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> obiektu interfejsu.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance.</source>
          <target state="translated">Zwraca ciąg reprezentujący wartość to <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`8.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> instance.</source>
          <target state="translated">Reprezentacja ciągu <ph id="ph1">&lt;see cref="T:System.ValueTuple`8" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>, <bpt id="p5">*</bpt>Item5<ept id="p5">*</ept>, <bpt id="p6">*</bpt>Item6<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item7<ept id="p7">*</ept>, <bpt id="p8">*</bpt>Item8<ept id="p8">*</ept>…), where <bpt id="p9">*</bpt>Item1<ept id="p9">*</ept>, <bpt id="p10">*</bpt>Item2<ept id="p10">*</ept>, <bpt id="p11">*</bpt>Item3<ept id="p11">*</ept>, <bpt id="p12">*</bpt>Item4<ept id="p12">*</ept>, <bpt id="p13">*</bpt>Item5<ept id="p13">*</ept>, <bpt id="p14">*</bpt>Item6<ept id="p14">*</ept>, and <bpt id="p15">*</bpt>Item7<ept id="p15">*</ept> represent the values of the <ph id="ph1">&lt;xref:System.ValueTuple%608.Item1&gt;</ph>, <ph id="ph2">&lt;xref:System.ValueTuple%608.Item2&gt;</ph>, <ph id="ph3">&lt;xref:System.ValueTuple%608.Item3&gt;</ph>, <ph id="ph4">&lt;xref:System.ValueTuple%608.Item4&gt;</ph>, <ph id="ph5">&lt;xref:System.ValueTuple%608.Item5&gt;</ph>, <ph id="ph6">&lt;xref:System.ValueTuple%608.Item6&gt;</ph>, and <ph id="ph7">&lt;xref:System.ValueTuple%608.Item7&gt;</ph> fields.</source>
          <target state="translated">Długość ciągu zwróconego przez tę metodę ma postać (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>, <bpt id="p5">*</bpt>Item5<ept id="p5">*</ept>, <bpt id="p6">*</bpt>Item6<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item7<ept id="p7">*</ept>, <bpt id="p8">*</bpt>item8 —<ept id="p8">*</ept>...), gdzie <bpt id="p9">*</bpt>Item1<ept id="p9">*</ept>, <bpt id="p10">*</bpt>Item2<ept id="p10">*</ept>, <bpt id="p11">*</bpt>Item3<ept id="p11">*</ept>, <bpt id="p12">*</bpt>Item4<ept id="p12">*</ept>, <bpt id="p13">*</bpt>Item5<ept id="p13">*</ept>, <bpt id="p14">*</bpt>Item6<ept id="p14">*</ept>, i <bpt id="p15">*</bpt>Item7<ept id="p15">*</ept> reprezentują wartości <ph id="ph1">&lt;xref:System.ValueTuple%608.Item1&gt;</ph>, <ph id="ph2">&lt;xref:System.ValueTuple%608.Item2&gt;</ph>, <ph id="ph3">&lt;xref:System.ValueTuple%608.Item3&gt;</ph>, <ph id="ph4">&lt;xref:System.ValueTuple%608.Item4&gt;</ph>, <ph id="ph5">&lt;xref:System.ValueTuple%608.Item5&gt;</ph>, <ph id="ph6">&lt;xref:System.ValueTuple%608.Item6&gt;</ph>, i <ph id="ph7">&lt;xref:System.ValueTuple%608.Item7&gt;</ph> pól.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.ToString">
          <source><bpt id="p1">*</bpt>Item8<ept id="p1">*</ept> represents the value of the <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> instance's <ph id="ph2">`Next.Item1`</ph> field.</source>
          <target state="translated"><bpt id="p1">*</bpt>Item8 —<ept id="p1">*</ept> reprezentuje wartość <ph id="ph1">&lt;xref:System.ValueTuple%608&gt;</ph> wystąpienia <ph id="ph2">`Next.Item1`</ph> pola.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.ToString">
          <source>The value of any additional nested elements follows <bpt id="p1">*</bpt>Item8<ept id="p1">*</ept>.</source>
          <target state="translated">Wartość dodatkowych elementów zagnieżdżonych następuje <bpt id="p1">*</bpt>item8 —<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`8.ToString">
          <source>If any of the field values is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Jeśli dowolna z wartości pola jest <ph id="ph1">`null`</ph>, jest reprezentowany jako <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>