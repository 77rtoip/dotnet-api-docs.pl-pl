<Type Name="EventHandler&lt;TEventArgs&gt;" FullName="System.EventHandler&lt;TEventArgs&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c01017430b39928c390691c2d824c9ab4caa4690" />
    <Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/27/2018" />
    <Meta Name="ms.locfileid" Value="42987260" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler&lt;TEventArgs&gt;(object sender, TEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler`1&lt;TEventArgs&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(Of TEventArgs)(sender As Object, e As TEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEventArgs&gt;&#xA;public delegate void EventHandler(System::Object ^ sender, TEventArgs e);" />
  <TypeSignature Language="F#" Value="type EventHandler&lt;'EventArgs&gt; = delegate of obj * 'EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEventArgs" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="TEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TEventArgs">Typ danych zdarzenia wygenerowane przez zdarzenie.</typeparam>
    <param name="sender">Źródło zdarzenia.</param>
    <param name="e">Obiekt zawierający dane zdarzenia.</param>
    <summary>Reprezentuje metodę, która obsłuży zdarzenie, gdy zdarzenie dostarcza dane.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Model zdarzeń w programie .NET Framework opiera się na potrzeby delegata zdarzenia, który łączy się zdarzenie z jego obsługi. Aby wywołać zdarzenie, potrzebne są dwa elementy:  
  
-   Delegat, który odwołuje się do metody, która udostępnia odpowiedź na zdarzenie.  
  
-   Opcjonalnie klasa, która przechowuje dane zdarzenia, jeśli zdarzenie zawiera dane.  
  
 Delegat to typ, który definiuje podpis, oznacza to, typ zwracanej wartości i typy listy parametrów dla metody. Typ delegata można użyć, aby zadeklarować zmienną, która może odwoływać się do dowolnej metody z taką samą sygnaturę jak delegat.  
  
 Standardowa podpis delegata obsługi zdarzeń definiuje metodę, która nie zwraca wartości. Ta metoda pierwszy parametr jest typu <xref:System.Object> i odnosi się do wystąpienia, która wywołuje zdarzenia. Drugim parametrem jest tworzony na podstawie typu <xref:System.EventArgs> i przechowuje dane zdarzenia. Jeśli zdarzenie nie generuje dane zdarzenia, drugi parametr jest po prostu wartość <xref:System.EventArgs.Empty?displayProperty=nameWithType> pola. W przeciwnym razie drugi parametr jest typu, który pochodzi z <xref:System.EventArgs> i dostarcza żadnych pól lub właściwości niezbędne do przechowywania danych zdarzenia.  
  
 <xref:System.EventHandler%601> Delegat jest wstępnie zdefiniowanego delegata, który reprezentuje metodę programu obsługi zdarzeń dla zdarzenia, które generuje dane. Zaletą korzystania z <xref:System.EventHandler%601> jest, czy jest konieczne kodu własną niestandardową klasę delegatów, jeśli zdarzenia generuje dane zdarzenia. Typ obiektu danych zdarzenia jest po prostu podać jako parametr ogólny.  
  
 Skojarzone zdarzenie w metodzie, która obsłuży zdarzenie, dodaje wystąpienie delegata zdarzenia. Program obsługi zdarzeń jest wywoływany przy każdym wystąpieniu zdarzenia, o ile nie usunięto delegata.  
  
 Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano zdarzenie o nazwie `ThresholdReached`. Zdarzenie jest skojarzone z <xref:System.EventHandler%601> delegować.  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altCompliant cref="T:System.EventHandler" />
    <altmember cref="T:System.EventHandler" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>