<Type Name="EventHandler&lt;TEventArgs&gt;" FullName="System.EventHandler&lt;TEventArgs&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="beab496f598c06940c92c932e76930d473484cd8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30743852" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler&lt;TEventArgs&gt;(object sender, TEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler`1&lt;TEventArgs&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(Of TEventArgs)(sender As Object, e As TEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEventArgs&gt;&#xA;public delegate void EventHandler(System::Object ^ sender, TEventArgs e);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEventArgs" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="TEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TEventArgs">Typ danych zdarzeń generowanych przez zdarzenie.</typeparam>
    <param name="sender">Źródło zdarzenia.</param>
    <param name="e">Obiekt zawierający dane zdarzenia.</param>
    <summary>Reprezentuje metodę, która obsłuży zdarzenie, gdy zdarzenie dostarcza dane.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Model zdarzeń w programie .NET Framework opiera się na posiadanie delegata zdarzenia, który łączy z jej procedura obsługi zdarzeń. Aby zgłosić zdarzenie, potrzebne są dwa elementy:  
  
-   Delegat, który odwołuje się do metody, która udostępnia odpowiedź na zdarzenie.  
  
-   Opcjonalnie klasa, która przechowuje dane zdarzenia, jeśli zdarzenie zawiera dane.  
  
 Delegat jest typem, który definiuje podpis, to, że typ zwracanej wartości i typy listy parametrów metody. Typ delegata można użyć do zadeklarowania zmiennej, która może odwoływać się do dowolnej metody z takiego samego podpisu jak obiekt delegowany.  
  
 Standardowa podpis delegata obsługi zdarzeń definiuje metodę, która nie zwraca wartości. Pierwszy parametr tej metody jest typu <xref:System.Object> i odwołuje się do wystąpienia, który wywołuje zdarzenie. Drugi parametr pochodzi z typu <xref:System.EventArgs> i przechowuje dane zdarzenia. Jeśli zdarzenie nie generuje dane zdarzenia, drugi parametr jest po prostu wartość <xref:System.EventArgs.Empty?displayProperty=nameWithType> pola. W przeciwnym razie drugi parametr ma typ pochodny typu <xref:System.EventArgs> i dostarcza żadnych pól lub właściwości niezbędne do przechowywania danych zdarzenia.  
  
 <xref:System.EventHandler%601> Delegat jest wstępnie zdefiniowanych delegata, który reprezentuje metoda obsługi zdarzeń dla zdarzenia, który generuje dane. Zaletą używania <xref:System.EventHandler%601> jest, że nie trzeba kodu własne niestandardowe delegata, jeśli zdarzenie generuje dane zdarzenia. Typ obiektu danych zdarzeń wystarczy podać jako parametr ogólny.  
  
 Aby skojarzyć zdarzenie z metody, która obsłuży zdarzenie, dodać wystąpienia delegata zdarzenia. Program obsługi zdarzeń jest wywoływany przy każdym wystąpieniu zdarzenia, o ile nie usunięto delegata.  
  
 Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono zdarzenia o nazwie `ThresholdReached`. Zdarzenie jest skojarzony z <xref:System.EventHandler%601> delegowanie.  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altCompliant cref="T:System.EventHandler" />
    <altmember cref="T:System.EventHandler" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>