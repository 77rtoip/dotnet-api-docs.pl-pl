<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;">
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`8&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`8" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename TRest&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
    <TypeParameter Name="T7" />
    <TypeParameter Name="TRest" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="2db6e-101">Typ pierwszego składnika spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="2db6e-102">Typ drugiego składnika spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="2db6e-103">Typ trzeciego składnika spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="2db6e-104">Typ czwartego składnika spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="2db6e-105">Typ piątego składnika spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="2db6e-106">Typ szóstego składnika spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-106">The type of the tuple's sixth component.</span></span></typeparam>
    <typeparam name="T7"><span data-ttu-id="2db6e-107">Typ siódmego składnika spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-107">The type of the tuple's seventh component.</span></span></typeparam>
    <typeparam name="TRest"><span data-ttu-id="2db6e-108">Wszelkie ogólny <see langword="Tuple" /> obiektu, który definiuje typy spójna kolekcja znajdująca się na pozostałych składników.</span><span class="sxs-lookup"><span data-stu-id="2db6e-108">Any generic <see langword="Tuple" /> object that defines the types of the tuple's remaining components.</span></span></typeparam>
    <summary><span data-ttu-id="2db6e-109">Reprezentuje *n*- spójnej kolekcji, której *n* jest 8 lub nowszego.</span><span class="sxs-lookup"><span data-stu-id="2db6e-109">Represents an *n*-tuple, where *n* is 8 or greater.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-110">Spójna kolekcja to struktura danych, która ma określoną liczbę i kolejność wartości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-110">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="2db6e-111"><xref:System.Tuple%608> Klasy reprezentuje *n*- krotki z co najmniej ośmiu składników.</span><span class="sxs-lookup"><span data-stu-id="2db6e-111">The <xref:System.Tuple%608> class represents an *n*-tuple that has eight or more components.</span></span>  
  
 <span data-ttu-id="2db6e-112">Można utworzyć wystąpienia <xref:System.Tuple%608> obiektu o dokładnie osiem składników przez wywołanie metody statycznych <xref:System.Tuple.Create%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2db6e-112">You can instantiate a <xref:System.Tuple%608> object with exactly eight components by calling the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2db6e-113">Poniższy przykład tworzy 8-krotka (octuple) zawierający liczb pierwszych, które są mniej niż 20.</span><span class="sxs-lookup"><span data-stu-id="2db6e-113">The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20.</span></span> <span data-ttu-id="2db6e-114">Należy pamiętać, używa wnioskowanie o typie, aby określić typ każdego składnika.</span><span class="sxs-lookup"><span data-stu-id="2db6e-114">Note that it uses type inference to determine the type of each component.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="2db6e-115">Można również tworzenia wystąpienia obiektu spójnej kolekcji n z co najmniej ośmiu składników, wywołując <xref:System.Tuple%608.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2db6e-115">You can also instantiate an n-tuple object with eight or more components by calling the <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="2db6e-116">W poniższym przykładzie użyto <xref:System.Tuple%608.%23ctor%2A> konstruktora w celu utworzenia krotka 8 odpowiada utworzony w poprzednim przykładzie spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-116">The following example uses the <xref:System.Tuple%608.%23ctor%2A> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="2db6e-117">Aby utworzyć krotka n z dziewięciu lub więcej składników, należy wywołać <xref:System.Tuple%608.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2db6e-117">To create an n-tuple with nine or more components, you must call the  <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="2db6e-118">Metody statyczne fabryki <xref:System.Tuple> klasa nie obsługuje tworzenia `Tuple` obiekty o więcej niż osiem składników.</span><span class="sxs-lookup"><span data-stu-id="2db6e-118">The static factory methods of the <xref:System.Tuple> class do not support the creation of `Tuple` objects with more than eight components.</span></span>  
  
 <span data-ttu-id="2db6e-119">Można utworzyć wystąpienia n krotka, która ma co najmniej osiem składników z <xref:System.Tuple%608.%23ctor%2A> konstruktora, podaj ogólnego `Tuple` obiekt jako `rest` parametr, aby zdefiniować ósmego za pośrednictwem *n*th składniki spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-119">To instantiate an n-tuple that has eight or more components with the <xref:System.Tuple%608.%23ctor%2A> constructor, you supply a generic `Tuple` object as the `rest` parameter to define the eighth through *n*th components of the tuple.</span></span> <span data-ttu-id="2db6e-120">Przez zagnieżdżanie ogólnego `Tuple` obiektów w ten sposób można utworzyć spójnych kolekcji zawierający bez praktyczne ograniczenia liczby jego składniki.</span><span class="sxs-lookup"><span data-stu-id="2db6e-120">By nesting generic `Tuple` objects in this way, you can create a tuple that has no practical limitation on the number of its components.</span></span>  
  
 <span data-ttu-id="2db6e-121">Poniższy przykład tworzy krotka 17 zawierający dane populacji dla miasta z Detroit, Michigan, dla każdego national spisu z 1860 do 2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-121">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each national census from 1860 to 2000.</span></span> <span data-ttu-id="2db6e-122">Pierwszy składnik spójnej kolekcji jest nazwą miasta.</span><span class="sxs-lookup"><span data-stu-id="2db6e-122">The first component of the tuple is the city name.</span></span> <span data-ttu-id="2db6e-123">Drugi składnik jest data rozpoczęcia serii danych, a trzeci składnik jest populacji na datę rozpoczęcia.</span><span class="sxs-lookup"><span data-stu-id="2db6e-123">The second component is the start date of the data series, and the third component is the population at the start date.</span></span> <span data-ttu-id="2db6e-124">Każdy składnik kolejnych zawiera populacji odstępach dekadę.</span><span class="sxs-lookup"><span data-stu-id="2db6e-124">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="2db6e-125">17 tuple jest tworzony przez zagnieżdżanie <xref:System.Tuple%603> obiektów wewnątrz <xref:System.Tuple%608> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-125">The 17-tuple is created by nesting a <xref:System.Tuple%603> object inside a <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="2db6e-126">(Czyli, <xref:System.Tuple%603> obiektu jest podana jako wartość `rest` parametru w <xref:System.Tuple%608> konstruktora klasy.) To <xref:System.Tuple%608> obiektu z kolei zagnieżdżone w zewnętrznym <xref:System.Tuple%608> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-126">(That is, the <xref:System.Tuple%603> object is supplied as the value of the `rest` parameter in the <xref:System.Tuple%608> class constructor.) This <xref:System.Tuple%608> object is, in turn, nested in an outer <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="2db6e-127">(To, <xref:System.Tuple%608> obiektu jest podana jako wartość `rest` parametru w zewnętrznego <xref:System.Tuple%608> konstruktora klasy obiektu.)</span><span class="sxs-lookup"><span data-stu-id="2db6e-127">(That is, the <xref:System.Tuple%608> object is supplied as the value of the `rest` parameter in the outer <xref:System.Tuple%608> object's class constructor.)</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 <span data-ttu-id="2db6e-128">Można pobrać wartość krotki najpierw siedmiu składników za pomocą tylko do odczytu <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, i <xref:System.Tuple%607.Item7%2A> wystąpienia właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-128">You can retrieve the value of the tuple's first seven components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.</span></span> <span data-ttu-id="2db6e-129">Dodatkowe składniki są zagnieżdżone i mogą być pobierane z <xref:System.Tuple%608.Rest%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-129">Any additional components are nested and can be retrieved from the <xref:System.Tuple%608.Rest%2A> property.</span></span> <span data-ttu-id="2db6e-130">W poprzednim przykładzie <xref:System.Tuple%608.Item1%2A> za pośrednictwem <xref:System.Tuple%608.Item7%2A> właściwości pobrać od pierwszego siódmego składniki spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-130">In the previous example, the <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties retrieve the first through seventh components of the tuple.</span></span> <span data-ttu-id="2db6e-131">8 za pomocą czternastego składniki znajdują się w spójnej kolekcji, która jest zagnieżdżona w drugiej a są reprezentowane przez `Rest.Item1` za pośrednictwem `Rest.Item7` właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-131">The eighth through fourteenth components are contained in the tuple that is nested at the second level, and are represented by the `Rest.Item1` through `Rest.Item7` properties.</span></span> <span data-ttu-id="2db6e-132">Piętnasta za pomocą siedemnasta składniki znajdują się w zagnieżdżonym na trzeci poziom spójnej kolekcji i są reprezentowane przez `Rest.Rest.Item1` chociaż `Rest.Rest.Item3` właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-132">The fifteenth through seventeenth components are contained in the tuple that is nested at the third level, and are represented by the `Rest.Rest.Item1` though `Rest.Rest.Item3` properties.</span></span>  
  
 <span data-ttu-id="2db6e-133">Spójne kolekcje są powszechnie wykorzystywane na cztery różne sposoby:</span><span class="sxs-lookup"><span data-stu-id="2db6e-133">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="2db6e-134">Reprezentowanie jednego zestawu danych.</span><span class="sxs-lookup"><span data-stu-id="2db6e-134">To represent a single set of data.</span></span> <span data-ttu-id="2db6e-135">Na przykład spójna kolekcja może reprezentować rekord bazy danych, a jej składniki mogą reprezentować poszczególne pola rekordu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-135">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="2db6e-136">Zapewnienie łatwego dostępu do zestawu danych i możliwości wykonywania w nim różnych operacji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-136">To provide easy access to, and manipulation of, a data set.</span></span>  
  
-   <span data-ttu-id="2db6e-137">Aby zwrócić wartości wielu z metody bez użycia `out` parametrów (C#) lub `ByRef` parametry (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2db6e-137">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="2db6e-138">Na przykład poprzednim przykładzie zwraca jego obliczona statystyk, oraz nazwę miejscowości <xref:System.Tuple%607> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-138">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="2db6e-139">Przekazywanie wielu wartości do metody za pomocą jednego parametru.</span><span class="sxs-lookup"><span data-stu-id="2db6e-139">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="2db6e-140">Na przykład <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> metoda ma jeden parametr, który pozwala na określanie jedną wartość do metody, która wykonuje wątek przy uruchamianiu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-140">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="2db6e-141">Jeśli podasz <xref:System.Tuple%607> obiekt jako argument metody, możesz podać procedury uruchomienia wątku z siedmiu elementów danych.</span><span class="sxs-lookup"><span data-stu-id="2db6e-141">If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the thread’s startup routine with seven items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6, !T7 item7, !TRest rest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, rest As TRest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
        <Parameter Name="rest" Type="TRest" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="2db6e-142">Wartość pierwszego składnika spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-142">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="2db6e-143">Wartość drugiego składnika spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-143">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="2db6e-144">Wartość trzeciego składnika spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-144">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="2db6e-145">Wartość czwartego składnika spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-145">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="2db6e-146">Wartość piątego składnika spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-146">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="2db6e-147">Wartość krotki szóstego składnika.</span><span class="sxs-lookup"><span data-stu-id="2db6e-147">The value of the tuple's sixth component.</span></span></param>
        <param name="item7"><span data-ttu-id="2db6e-148">Wartość krotki siódmego składnika.</span><span class="sxs-lookup"><span data-stu-id="2db6e-148">The value of the tuple's seventh component.</span></span></param>
        <param name="rest"><span data-ttu-id="2db6e-149">Wszelkie ogólny <see langword="Tuple" /> obiekt, który zawiera wartości spójna kolekcja znajdująca się na pozostałych składników.</span><span class="sxs-lookup"><span data-stu-id="2db6e-149">Any generic <see langword="Tuple" /> object that contains the values of the tuple's remaining components.</span></span></param>
        <summary><span data-ttu-id="2db6e-150">Inicjuje nowe wystąpienie klasy <see cref="T:System.Tuple`8" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2db6e-150">Initializes a new instance of the <see cref="T:System.Tuple`8" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-151">Można również użyć statycznych <xref:System.Tuple.Create%2A?displayProperty=nameWithType> metody do tworzenia wystąpienia obiektu 8-krotki (octuple) bez konieczności jawnego określania typów jego składniki.</span><span class="sxs-lookup"><span data-stu-id="2db6e-151">You can also use the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="2db6e-152">W poniższym przykładzie użyto <xref:System.Tuple.Create%2A?displayProperty=nameWithType> metody do tworzenia wystąpienia obiektu 8 krotka liczb pierwszych, które są mniej niż 20.</span><span class="sxs-lookup"><span data-stu-id="2db6e-152">The following example uses the <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple object that contains prime numbers that are less than 20.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="2db6e-153">Jest to równoważne następujące wywołanie do <xref:System.Tuple%607.%23ctor%2A> konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="2db6e-153">This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
 <span data-ttu-id="2db6e-154">Jednak statycznych <xref:System.Tuple.Create%2A?displayProperty=nameWithType> nie można użyć metody, aby utworzyć obiekt spójnej kolekcji o więcej niż osiem składników.</span><span class="sxs-lookup"><span data-stu-id="2db6e-154">However, the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method cannot be used to create a tuple object with more than eight components.</span></span>  
  
 <span data-ttu-id="2db6e-155">Korzystając z <xref:System.Tuple%608.%23ctor%2A> konstruktora w celu utworzenia krotka n z co najmniej ośmiu składniki używane `rest` parametr w celu utworzenia zagnieżdżonych n elementowej, który ma od jednej do siedmiu składników.</span><span class="sxs-lookup"><span data-stu-id="2db6e-155">When using the <xref:System.Tuple%608.%23ctor%2A> constructor to create an n-tuple with eight or more components, you use the `rest` parameter to create a nested n-tuple that has from one to seven components.</span></span> <span data-ttu-id="2db6e-156">Za pomocą kolejnych poziomów zagnieżdżenia, można utworzyć n krotki z nieograniczoną liczbę składników.</span><span class="sxs-lookup"><span data-stu-id="2db6e-156">By using successive levels of nesting, you can create an n-tuple that has a virtually unlimited number of components.</span></span> <span data-ttu-id="2db6e-157">Na przykład, aby utworzyć krotka 25, można utworzyć wystąpienia <xref:System.Tuple%608> obiekt z trzech poziomów zagnieżdżenia, w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="2db6e-157">For example, to create a 25-tuple, you instantiate a <xref:System.Tuple%608> object with three levels of nesting, as follows:</span></span>  
  
-   <span data-ttu-id="2db6e-158">Najbardziej zewnętrznego <xref:System.Tuple%608> obiekt zawiera składniki siódmego okres od pierwszego.</span><span class="sxs-lookup"><span data-stu-id="2db6e-158">The outermost <xref:System.Tuple%608> object contains the first through seventh components.</span></span> <span data-ttu-id="2db6e-159">Jego <xref:System.Tuple%608.Rest%2A> właściwości zapewnia dostęp do <xref:System.Tuple%608> obiektu pierwszego poziomu zagnieżdżenia.</span><span class="sxs-lookup"><span data-stu-id="2db6e-159">Its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the first level of nesting.</span></span>  
  
-   <span data-ttu-id="2db6e-160">Zagnieżdżone peryferyjnych <xref:System.Tuple%608> ósmego za pośrednictwem czternastego składników, zawiera obiekt i jego <xref:System.Tuple%608.Rest%2A> właściwości zapewnia dostęp do <xref:System.Tuple%608> obiektu na drugi poziom zagnieżdżenia.</span><span class="sxs-lookup"><span data-stu-id="2db6e-160">The outermost nested <xref:System.Tuple%608> object contains the eighth through fourteenth components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the second level of nesting.</span></span>  
  
-   <span data-ttu-id="2db6e-161"><xref:System.Tuple%608> Obiekt na drugi poziom zagnieżdżenia zawiera piętnastego za pośrednictwem składników dwudziestego pierwszego i jego <xref:System.Tuple%608.Rest%2A> właściwości zapewnia dostęp do <xref:System.Tuple%604> obiektu na trzeci poziom zagnieżdżenia.</span><span class="sxs-lookup"><span data-stu-id="2db6e-161">The <xref:System.Tuple%608> object at the second level of nesting contains the fifteenth through twenty-first  components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%604> object at the third level of nesting.</span></span>  
  
-   <span data-ttu-id="2db6e-162">Najbardziej Krotka jest <xref:System.Tuple%604> obiekt, który zawiera składniki dwudziestego piątego do dwudziestego drugiego.</span><span class="sxs-lookup"><span data-stu-id="2db6e-162">The innermost tuple is a <xref:System.Tuple%604> object that contains the twenty-second through twenty-fifth components.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-163">Poniższy przykład tworzy krotka 17 zawierający dane populacji dla miasta z Detroit, Michigan, dla każdego spisu z 1860 do 2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-163">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each census from 1860 to 2000.</span></span> <span data-ttu-id="2db6e-164">Pierwszy składnik spójnej kolekcji jest nazwą miasta.</span><span class="sxs-lookup"><span data-stu-id="2db6e-164">The first component of the tuple is the city name.</span></span> <span data-ttu-id="2db6e-165">Drugi składnik jest data rozpoczęcia serii danych, a trzeci składnik jest populacji na datę rozpoczęcia.</span><span class="sxs-lookup"><span data-stu-id="2db6e-165">The second component is the start date of the series of data, and the third component is the population at the start date.</span></span> <span data-ttu-id="2db6e-166">Każdy składnik kolejnych zawiera populacji odstępach dekadę.</span><span class="sxs-lookup"><span data-stu-id="2db6e-166">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="2db6e-167">W przykładzie użyto dwóch warstw zagnieżdżenia do utworzenia spójnej kolekcji 17: definiuje krotka 7 którego innych za pośrednictwem składników siódmego zawierają dane populacji dla 1860 za pośrednictwem 1900 zagnieżdżonych 7-spójnych kolekcji zawierający dane populacji dla 1910 za pośrednictwem 1970, i wewnętrzny zagnieżdżone krotki 3 zawierający dane populacji dla 1980 do 2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-167">The example uses two layers of nesting to create the 17-tuple: It defines a 7-tuple whose third through seventh components contain population data for 1860 through 1900, a nested 7-tuple that contains population data for 1910 through 1970, and an inner nested 3-tuple that contains population data for 1980 through 2000.</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2db6e-168"><paramref name="rest" /> nie jest rodzajowa <see langword="Tuple" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-168"><paramref name="rest" /> is not a generic <see langword="Tuple" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2db6e-169">Obiekt, który ma zostać porównany z tym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="2db6e-169">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="2db6e-170">Zwraca wartość wskazującą, czy bieżący <see cref="T:System.Tuple`8" /> obiekt jest taki sam jak określony obiekt.</span><span class="sxs-lookup"><span data-stu-id="2db6e-170">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="2db6e-171"><see langword="true" /> Jeśli bieżące wystąpienie jest taki sam jak określony obiekt; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2db6e-171"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-172">`obj` Parametr jest traktowany jako taki sam, jak bieżące wystąpienie, jeśli spełnia wszystkie następujące warunki:</span><span class="sxs-lookup"><span data-stu-id="2db6e-172">The `obj` parameter is considered to be equal to the current instance if it meets all the following conditions:</span></span>  
  
-   <span data-ttu-id="2db6e-173">Jest <xref:System.Tuple%608> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-173">It is a <xref:System.Tuple%608> object.</span></span>  
  
-   <span data-ttu-id="2db6e-174">Ma taką samą całkowitą liczbę składników, które są tego samego typu jak bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="2db6e-174">It has the same total number of components that are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="2db6e-175">Jego składniki (łącznie z ich elementów zagnieżdżonych) są takie same jak bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="2db6e-175">Its components (including its nested components) are equal to those of the current instance.</span></span> <span data-ttu-id="2db6e-176">Równość jest określana przez domyślna funkcja porównująca równości dla każdego składnika.</span><span class="sxs-lookup"><span data-stu-id="2db6e-176">Equality is determined by the default equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-177">W poniższym przykładzie zdefiniowano pięć <xref:System.Tuple%608> obiektów, które zawierają liczby pierwsze.</span><span class="sxs-lookup"><span data-stu-id="2db6e-177">The following example defines five <xref:System.Tuple%608> objects that contain prime numbers.</span></span> <span data-ttu-id="2db6e-178">Porównuje pierwszy obiekt z każdym pozostałe obiekty.</span><span class="sxs-lookup"><span data-stu-id="2db6e-178">It then compares the first object with each of the remaining objects.</span></span> <span data-ttu-id="2db6e-179">Jak przedstawiono na dane wyjściowe, tylko pierwszy i ostatni <xref:System.Tuple%608> obiekty są takie same, ponieważ mają one taką samą liczbę elementów z identycznymi wartościami.</span><span class="sxs-lookup"><span data-stu-id="2db6e-179">As the output shows, only the first and the last <xref:System.Tuple%608> objects are equal, because they have an identical number of components with identical values.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`8.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2db6e-180">Oblicza wartość skrótu dla bieżącego <see cref="T:System.Tuple`8" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-180">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object.</span></span></summary>
        <returns><span data-ttu-id="2db6e-181">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="2db6e-181">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2db6e-182">Pobiera wartość bieżącego <see cref="T:System.Tuple`8" /> pierwszy składnik obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-182">Gets the value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="2db6e-183">Wartość bieżącego <see cref="T:System.Tuple`8" /> pierwszy składnik obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-183">The value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-184">Dynamiczne można określić typu <xref:System.Tuple%608.Item1%2A> składnika w jeden z dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="2db6e-184">You can dynamically determine the type of the <xref:System.Tuple%608.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2db6e-185">Wywołując `GetType` metody na wartość, która jest zwracana w wyniku <xref:System.Tuple%608.Item1%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-185">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="2db6e-186">Pobierając <xref:System.Type> obiekt, który reprezentuje <xref:System.Tuple%608> obiektu i pobierania pierwszego elementu z tablicy, która jest zwracana przez jego <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2db6e-186">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-187">W poniższym przykładzie nastąpi utworzenie obiektu 17-elementowej spójnej kolekcji zawierającego dane o ludności miasta Detroit (stan Michigan) w latach 1860-2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-187">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2db6e-188">Pierwszy składnik krotki 17 jest nazwą miasta.</span><span class="sxs-lookup"><span data-stu-id="2db6e-188">The first component of the 17-tuple is the city name.</span></span> <span data-ttu-id="2db6e-189">W przykładzie użyto <xref:System.Tuple%608.Item1%2A> właściwość, aby wyświetlić nazwę miejscowości w nagłówku tabeli przed wyświetleniem danych wypełniania.</span><span class="sxs-lookup"><span data-stu-id="2db6e-189">The example uses the <xref:System.Tuple%608.Item1%2A> property to display the city name in the table header before displaying the population data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2db6e-190">Pobiera wartość bieżącego <see cref="T:System.Tuple`8" /> drugi składnik obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-190">Gets the value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="2db6e-191">Wartość bieżącego <see cref="T:System.Tuple`8" /> drugi składnik obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-191">The value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-192">Dynamiczne można określić typu <xref:System.Tuple%608.Item2%2A> składnika w jeden z dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="2db6e-192">You can dynamically determine the type of the <xref:System.Tuple%608.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2db6e-193">Wywołując `GetType` metody na wartość, która jest zwracana w wyniku <xref:System.Tuple%608.Item2%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-193">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="2db6e-194">Pobierając <xref:System.Type> obiekt, który reprezentuje <xref:System.Tuple%608> obiektu i pobierania drugiego elementu z tablicy, która jest zwracana przez jego <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2db6e-194">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-195">W poniższym przykładzie nastąpi utworzenie obiektu 17-elementowej spójnej kolekcji zawierającego dane o ludności miasta Detroit (stan Michigan) w latach 1860-2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-195">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2db6e-196">Drugi składnik krotki 17 jest pierwszym roku serii danych.</span><span class="sxs-lookup"><span data-stu-id="2db6e-196">The second component of the 17-tuple is the first year of the data series.</span></span> <span data-ttu-id="2db6e-197">Przykład przypisuje wartość <xref:System.Tuple%608.Item2%2A> właściwości do zmiennej, a następnie używa to zmienną do reprezentowania roku, w których dane są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="2db6e-197">The example assigns the value of the <xref:System.Tuple%608.Item2%2A> property to a variable, and then uses that variable to represent the year whose data is displayed.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2db6e-198">Pobiera wartość bieżącego <see cref="T:System.Tuple`8" /> trzecim składnikiem obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-198">Gets the value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="2db6e-199">Wartość bieżącego <see cref="T:System.Tuple`8" /> trzecim składnikiem obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-199">The value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-200">Dynamiczne można określić typu <xref:System.Tuple%608.Item3%2A> składnika w jeden z dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="2db6e-200">You can dynamically determine the type of the <xref:System.Tuple%608.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2db6e-201">Wywołując `GetType` metody na wartość, która jest zwracana w wyniku <xref:System.Tuple%608.Item3%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-201">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="2db6e-202">Pobierając <xref:System.Type> obiekt, który reprezentuje <xref:System.Tuple%608> obiektu i pobierania trzeciego elementu z tablicy, która jest zwracana przez jego <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2db6e-202">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-203">W poniższym przykładzie nastąpi utworzenie obiektu 17-elementowej spójnej kolekcji zawierającego dane o ludności miasta Detroit (stan Michigan) w latach 1860-2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-203">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2db6e-204">Trzecim składnikiem krotki 17 jest populacji w 1860.</span><span class="sxs-lookup"><span data-stu-id="2db6e-204">The third component of the 17-tuple is the population in 1860.</span></span> <span data-ttu-id="2db6e-205">W przykładzie użyto <xref:System.Tuple%608.Item3%2A> właściwości do wyświetlania wartości populacji i obliczyć roczne szybkość zmian populacji między 1860 i 1870.</span><span class="sxs-lookup"><span data-stu-id="2db6e-205">The example uses the <xref:System.Tuple%608.Item3%2A> property to display the population value and to calculate the annual rate of population change between 1860 and 1870.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2db6e-206">Pobiera wartość bieżącego <see cref="T:System.Tuple`8" /> czwartym składnikiem obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-206">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="2db6e-207">Wartość bieżącego <see cref="T:System.Tuple`8" /> czwartym składnikiem obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-207">The value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-208">Dynamiczne można określić typu <xref:System.Tuple%608.Item4%2A> składnika w jeden z dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="2db6e-208">You can dynamically determine the type of the <xref:System.Tuple%608.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2db6e-209">Wywołując `GetType` metody na wartość, która jest zwracana w wyniku <xref:System.Tuple%608.Item4%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-209">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="2db6e-210">Pobierając <xref:System.Type> obiekt, który reprezentuje <xref:System.Tuple%608> obiektu i pobierania czwartym elementem z tablicy, która jest zwracana przez jego <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2db6e-210">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-211">W poniższym przykładzie nastąpi utworzenie obiektu 17-elementowej spójnej kolekcji zawierającego dane o ludności miasta Detroit (stan Michigan) w latach 1860-2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-211">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2db6e-212">Czwartym składnikiem krotki 17 jest populacji w 1870.</span><span class="sxs-lookup"><span data-stu-id="2db6e-212">The fourth component of the 17-tuple is the population in 1870.</span></span> <span data-ttu-id="2db6e-213">W przykładzie użyto <xref:System.Tuple%608.Item4%2A> właściwości do wyświetlania wartości populacji i roczne szybkość zmian populacji między 1870 i 1880 obliczania.</span><span class="sxs-lookup"><span data-stu-id="2db6e-213">The example uses the <xref:System.Tuple%608.Item4%2A> property to display the population value and to calculate the annual rate of population change between 1870 and 1880.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2db6e-214">Pobiera wartość bieżącego <see cref="T:System.Tuple`8" /> piątym składnikiem obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-214">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="2db6e-215">Wartość bieżącego <see cref="T:System.Tuple`8" /> piątym składnikiem obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-215">The value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-216">Dynamiczne można określić typu <xref:System.Tuple%608.Item5%2A> składnika w jeden z dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="2db6e-216">You can dynamically determine the type of the <xref:System.Tuple%608.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2db6e-217">Wywołując `GetType` metody na wartość, która jest zwracana w wyniku <xref:System.Tuple%608.Item5%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-217">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="2db6e-218">Pobierając <xref:System.Type> obiekt, który reprezentuje <xref:System.Tuple%608> obiektu i pobierania piątej elementu z tablicy, która jest zwracana przez jego <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2db6e-218">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-219">W poniższym przykładzie nastąpi utworzenie obiektu 17-elementowej spójnej kolekcji zawierającego dane o ludności miasta Detroit (stan Michigan) w latach 1860-2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-219">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2db6e-220">Piątym składnikiem krotki 17 jest populacji w 1880.</span><span class="sxs-lookup"><span data-stu-id="2db6e-220">The fifth component of the 17-tuple is the population in 1880.</span></span> <span data-ttu-id="2db6e-221">W przykładzie użyto <xref:System.Tuple%608.Item5%2A> właściwości do wyświetlania wartości populacji i roczne szybkość zmian populacji między 1880 i 1890 obliczania.</span><span class="sxs-lookup"><span data-stu-id="2db6e-221">The example uses the <xref:System.Tuple%608.Item5%2A> property to display the population value and to calculate the annual rate of population change between 1880 and 1890.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2db6e-222">Pobiera wartość bieżącego <see cref="T:System.Tuple`8" /> składnika szóstego obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-222">Gets the value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="2db6e-223">Wartość bieżącego <see cref="T:System.Tuple`8" /> składnika szóstego obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-223">The value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-224">Dynamiczne można określić typu <xref:System.Tuple%608.Item6%2A> składnika w jeden z dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="2db6e-224">You can dynamically determine the type of the <xref:System.Tuple%608.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2db6e-225">Wywołując `GetType` metody na wartość, która jest zwracana w wyniku <xref:System.Tuple%608.Item6%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-225">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="2db6e-226">Pobierając <xref:System.Type> obiekt, który reprezentuje <xref:System.Tuple%608> obiektu i pobierania szóstego elementu z tablicy, która jest zwracana przez jego <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2db6e-226">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-227">W poniższym przykładzie nastąpi utworzenie obiektu 17-elementowej spójnej kolekcji zawierającego dane o ludności miasta Detroit (stan Michigan) w latach 1860-2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-227">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2db6e-228">Szóstym składnika krotki 17 jest populacji w 1890.</span><span class="sxs-lookup"><span data-stu-id="2db6e-228">The sixth component of the 17-tuple is the population in 1890.</span></span> <span data-ttu-id="2db6e-229">W przykładzie użyto <xref:System.Tuple%608.Item6%2A> właściwości do wyświetlania wartości populacji i obliczyć roczne szybkość zmian populacji między 1890 i 1900 roku.</span><span class="sxs-lookup"><span data-stu-id="2db6e-229">The example uses the <xref:System.Tuple%608.Item6%2A> property to display the population value and to calculate the annual rate of population change between 1890 and 1900.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item7">
      <MemberSignature Language="C#" Value="public T7 Item7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T7 Item7" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item7" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item7 As T7" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T7 Item7 { T7 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2db6e-230">Pobiera wartość bieżącego <see cref="T:System.Tuple`8" /> składnika siódmego obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-230">Gets the value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></summary>
        <value><span data-ttu-id="2db6e-231">Wartość bieżącego <see cref="T:System.Tuple`8" /> składnika siódmego obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-231">The value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-232">Dynamiczne można określić typu <xref:System.Tuple%608.Item7%2A> składnika w jeden z dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="2db6e-232">You can dynamically determine the type of the <xref:System.Tuple%608.Item7%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2db6e-233">Wywołując `GetType` metody na wartość, która jest zwracana w wyniku <xref:System.Tuple%608.Item7%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-233">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item7%2A> property.</span></span>  
  
-   <span data-ttu-id="2db6e-234">Pobierając <xref:System.Type> obiekt, który reprezentuje <xref:System.Tuple%608> obiektu i pobierania siódmego elementu z tablicy, która jest zwracana przez jego <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2db6e-234">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-235">W poniższym przykładzie nastąpi utworzenie obiektu 17-elementowej spójnej kolekcji zawierającego dane o ludności miasta Detroit (stan Michigan) w latach 1860-2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-235">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2db6e-236">Siódmego składnika krotki 17 jest populacji w 1900 roku.</span><span class="sxs-lookup"><span data-stu-id="2db6e-236">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="2db6e-237">W przykładzie użyto <xref:System.Tuple%608.Item7%2A> właściwości do wyświetlania wartości populacji i obliczyć roczne szybkość zmian populacji między 1900 a 1910.</span><span class="sxs-lookup"><span data-stu-id="2db6e-237">The example uses the <xref:System.Tuple%608.Item7%2A> property to display the population value and to calculate the annual rate of population change between 1900 and 1910.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rest">
      <MemberSignature Language="C#" Value="public TRest Rest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TRest Rest" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Rest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rest As TRest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TRest Rest { TRest get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2db6e-238">Pobiera bieżący <see cref="T:System.Tuple`8" /> obiektu na pozostałych składników.</span><span class="sxs-lookup"><span data-stu-id="2db6e-238">Gets the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></summary>
        <value><span data-ttu-id="2db6e-239">Wartość bieżącego <see cref="T:System.Tuple`8" /> obiektu na pozostałych składników.</span><span class="sxs-lookup"><span data-stu-id="2db6e-239">The value of the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-240"><xref:System.Tuple%608.Rest%2A> Właściwość zwraca zagnieżdżoną `Tuple` obiekt, który zezwala na dostęp do ósmego jednak *n*th składniki spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-240">The <xref:System.Tuple%608.Rest%2A> property returns a nested `Tuple` object that allows access to the eighth though *n*th components of the tuple.</span></span> <span data-ttu-id="2db6e-241">W zależności od całkowita liczba elementów w spójnej kolekcji, można pobrać wartości ósmego za pośrednictwem czternastego składników z zagnieżdżone `Tuple` obiektu <xref:System.Tuple%608.Item1%2A> za pośrednictwem <xref:System.Tuple%608.Item7%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-241">Depending on the total number of components in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested `Tuple` object's <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="2db6e-242">Następnie można użyć <xref:System.Tuple%608.Rest%2A> właściwość zagnieżdżoną <xref:System.Tuple%608> obiekt, aby pobrać `Tuple` obiektu na następny poziom zagnieżdżenia.</span><span class="sxs-lookup"><span data-stu-id="2db6e-242">You can then use the <xref:System.Tuple%608.Rest%2A> property of a nested <xref:System.Tuple%608> object to retrieve the `Tuple` object at the next level of nesting.</span></span>  
  
 <span data-ttu-id="2db6e-243">Dynamiczne można określić liczbę składników w zagnieżdżonych `Tuple` obiektu, który jest zwracany przez <xref:System.Tuple%608.Rest%2A> właściwości wyodrębniając cyfrą z nazwy typu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-243">You can dynamically determine the number of components in a nested `Tuple` object that is returned by the <xref:System.Tuple%608.Rest%2A> property by extracting the digit from its type name.</span></span> <span data-ttu-id="2db6e-244">Poniższy przykład stanowi ilustrację.</span><span class="sxs-lookup"><span data-stu-id="2db6e-244">The following example provides an illustration.</span></span>  
  
 [!code-vb[System.Tuple\`8.Item1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/rest.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-245">W poniższym przykładzie nastąpi utworzenie obiektu 17-elementowej spójnej kolekcji zawierającego dane o ludności miasta Detroit (stan Michigan) w latach 1860-2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-245">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="2db6e-246">Siódmego składnika krotki 17 jest populacji w 1900 roku.</span><span class="sxs-lookup"><span data-stu-id="2db6e-246">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="2db6e-247">W przykładzie użyto <xref:System.Tuple%608.Rest%2A> właściwość do pobierania wartości ósmego za pośrednictwem czternastego składników, a używa <xref:System.Tuple%608.Rest%2A> właściwości zagnieżdżone <xref:System.Tuple%608> obiektu można pobrać wartości pozostałych składników.</span><span class="sxs-lookup"><span data-stu-id="2db6e-247">The example uses the <xref:System.Tuple%608.Rest%2A> property to retrieve the values of the eighth through fourteenth components, and it uses the <xref:System.Tuple%608.Rest%2A> property of the nested <xref:System.Tuple%608> object to retrieve the values of the remaining components.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="2db6e-248">Obiekt, który ma zostać porównany z bieżącym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="2db6e-248">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="2db6e-249">Obiekt dostarczający niestandardowe reguły na potrzeby porównania.</span><span class="sxs-lookup"><span data-stu-id="2db6e-249">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="2db6e-250">Porównuje bieżący <see cref="T:System.Tuple`8" /> obiektu określony obiekt przy użyciu określona funkcja porównująca i zwraca liczbę całkowitą, która wskazuje, czy bieżący obiekt jest przed, po lub w tym samym miejscu określony obiekt w kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="2db6e-250">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="2db6e-251">Całkowita wskazująca pozycję tego wystąpienia i <paramref name="other" /> w porządku sortowania, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="2db6e-251">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="2db6e-252"><list type="table"><listheader><term> Wartość</span><span class="sxs-lookup"><span data-stu-id="2db6e-252"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="2db6e-253"></term><description> Opis elementu</span><span class="sxs-lookup"><span data-stu-id="2db6e-253"></term><description> Description</span></span>  
  
 <span data-ttu-id="2db6e-254"></description></listheader><item><term> Ujemna liczba całkowita</span><span class="sxs-lookup"><span data-stu-id="2db6e-254"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="2db6e-255"></term><description> To wystąpienie poprzedza <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="2db6e-255"></term><description> This instance precedes <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="2db6e-256"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="2db6e-256"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="2db6e-257"></term><description> To wystąpienie i <paramref name="other" /> mieć to samo położenie w kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="2db6e-257"></term><description> This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="2db6e-258"></description></item><item><term> Dodatnia liczba całkowita</span><span class="sxs-lookup"><span data-stu-id="2db6e-258"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="2db6e-259"></term><description> Następuje to wystąpienie <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="2db6e-259"></term><description> This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-260">Ten element członkowski jest jawną implementacją interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-260">This member is an explicit interface implementation.</span></span> <span data-ttu-id="2db6e-261">Można go używać tylko wtedy, gdy <xref:System.Tuple%608> wystąpienia jest rzutowane na <xref:System.Collections.IStructuralComparable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-261">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="2db6e-262">Ta metoda pozwala zdefiniować dostosowane porównania <xref:System.Tuple%608> obiektów.</span><span class="sxs-lookup"><span data-stu-id="2db6e-262">This method lets you define customized comparisons of <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="2db6e-263">Na przykład można użyć tej metody do zlecenia <xref:System.Tuple%608> obiektów na podstawie wartości z określonego składnika.</span><span class="sxs-lookup"><span data-stu-id="2db6e-263">For example, you can use this method to order <xref:System.Tuple%608> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="2db6e-264">Mimo że tę metodę można wywołać bezpośrednio, najczęściej jest wywoływana przez sortowanie kolekcji metod, które obejmują <xref:System.Collections.IComparer> parametry porządkowania elementów członkowskich kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-264">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="2db6e-265">Na przykład jest wywoływana przez <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> — metoda i <xref:System.Collections.SortedList.Add%2A> metody <xref:System.Collections.SortedList> obiekt, który zostanie uruchomiony przy użyciu <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2db6e-265">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2db6e-266"><xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> Metoda jest przeznaczona do użycia w operacji sortowania.</span><span class="sxs-lookup"><span data-stu-id="2db6e-266">The <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="2db6e-267">Nie należy jej używać, gdy głównym celem porównania jest ustalenie, czy dwa obiekty są sobie równe.</span><span class="sxs-lookup"><span data-stu-id="2db6e-267">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="2db6e-268">Aby ustalić, czy dwa obiekty są takie same, należy wywołać <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2db6e-268">To determine whether two objects are equal, call the <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-269">Poniższy przykład tworzy tablicę <xref:System.Tuple%608> obiektów, które zawierają dane populacji cztery miejscowości USA z 1940 do 2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-269">The following example creates an array of <xref:System.Tuple%608> objects that contains population data for four U.S. cities from 1940 to 2000.</span></span> <span data-ttu-id="2db6e-270">Pierwszy składnik octuple jest nazwą miasta.</span><span class="sxs-lookup"><span data-stu-id="2db6e-270">The octuple's first component is the city name.</span></span> <span data-ttu-id="2db6e-271">Pozostałe składniki sześciu reprezentować populacji odstępach 10 lat od 1940 do 2000.</span><span class="sxs-lookup"><span data-stu-id="2db6e-271">The remaining six components represent the population at 10-year intervals from 1940 to 2000.</span></span>  
  
 <span data-ttu-id="2db6e-272">`PopulationComparer` Klasa udostępnia <xref:System.Collections.IComparer> implementację, która umożliwia tablicy octuples sortowania za pomocą jednej z jego składników.</span><span class="sxs-lookup"><span data-stu-id="2db6e-272">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of octuples to be sorted by any one of its components.</span></span> <span data-ttu-id="2db6e-273">Dwie wartości są dostarczane do `PopulationComparer` klasy w swoich konstruktorach: położenie składnika, który definiuje kolejność sortowania i <xref:System.Boolean> wartość, która wskazuje, czy obiekty krotki mają być sortowane w kolejności rosnącej lub malejącej.</span><span class="sxs-lookup"><span data-stu-id="2db6e-273">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="2db6e-274">Przykładzie następnie wyświetla elementy w tablicy w kolejności nieposortowane, sortowane według trzecim składnikiem (populacji 1950) i wyświetla je, sortowane według składnika ósmego (populacji 2000) i wyświetla je.</span><span class="sxs-lookup"><span data-stu-id="2db6e-274">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1950) and displays them, and then sorts them by the eighth component (the population in 2000) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`8.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2db6e-275"><paramref name="other" /> nie jest <see cref="T:System.Tuple`8" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-275"><paramref name="other" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="2db6e-276">Obiekt, który ma zostać porównany z tym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="2db6e-276">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="2db6e-277">Obiekt definiujący metodę służącą ocenie, czy dwa obiekty są sobie równe.</span><span class="sxs-lookup"><span data-stu-id="2db6e-277">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="2db6e-278">Zwraca wartość wskazującą, czy bieżący <see cref="T:System.Tuple`8" /> obiekt jest taki sam jak określony obiekt na podstawie metody porównania określony.</span><span class="sxs-lookup"><span data-stu-id="2db6e-278">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns>
          <span data-ttu-id="2db6e-279"><see langword="true" /> Jeśli bieżące wystąpienie jest taki sam jak określony obiekt; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2db6e-279"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-280">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="2db6e-280">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2db6e-281">Można go używać tylko wtedy, gdy <xref:System.Tuple%608> wystąpienia jest rzutowane na <xref:System.Collections.IStructuralEquatable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-281">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="2db6e-282"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> Implementacji jest wywoływana tylko wtedy, gdy `other` nie jest `null`, jeśli można pomyślnie rzutowanie (C#) i przekonwertować (w języku Visual Basic) <xref:System.Tuple%608> obiektu, który ma taką samą całkowitą liczbę składników (włącznie z zawartymi w zagnieżdżonych `Tuple` obiektów) tego samego typu jak bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="2db6e-282">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%608> object that has the same total number of components (including those in nested `Tuple` objects) of the same types as the current instance.</span></span> <span data-ttu-id="2db6e-283"><xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> Metoda przekazuje pierwszy <xref:System.Tuple%608.Item1%2A> wartości <xref:System.Tuple%608> obiekty do porównania z <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementacji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-283">The <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%608.Item1%2A> values of the <xref:System.Tuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="2db6e-284">Jeśli wywołanie tej metody zwraca `true`, metoda jest wywoływana ponownie i przekazany <xref:System.Tuple%608.Item2%2A> wartości dwa <xref:System.Tuple%608> obiektów.</span><span class="sxs-lookup"><span data-stu-id="2db6e-284">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%608.Item2%2A> values of the two <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="2db6e-285">Ten proces jest kontynuowany do momentu wywołania metody, które zwraca `false` podczas porównywania konkretną parą wartości lub dwa <xref:System.Tuple%608.Rest%2A> wartości są przekazywane do metody.</span><span class="sxs-lookup"><span data-stu-id="2db6e-285">This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.Tuple%608.Rest%2A> values are passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="2db6e-286">Obiekt których <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> metody oblicza wartość skrótu bieżącego <see cref="T:System.Tuple`8" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-286">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`8" /> object.</span></span></param>
        <summary><span data-ttu-id="2db6e-287">Oblicza wartość skrótu dla bieżącego <see cref="T:System.Tuple`8" /> obiektu za pomocą metody określonej obliczeń.</span><span class="sxs-lookup"><span data-stu-id="2db6e-287">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="2db6e-288">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="2db6e-288">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-289">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="2db6e-289">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2db6e-290">Można go używać tylko wtedy, gdy <xref:System.Tuple%608> wystąpienia jest rzutowane na <xref:System.Collections.IStructuralEquatable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-290">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="2db6e-291">Metoda opakowuje po prostu wywołanie `comparer` obiektu <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementacji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-291">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="2db6e-292">Algorytm używany do obliczania skrótu ma zwracać taki sam skrót dla dwóch <xref:System.Tuple%608> obiektów, które są traktowane jako równe.</span><span class="sxs-lookup"><span data-stu-id="2db6e-292">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%608> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2db6e-293">Obiekt, który ma zostać porównany z bieżącym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="2db6e-293">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="2db6e-294">Porównuje bieżący <see cref="T:System.Tuple`8" /> obiekt do określonego obiektu i zwraca liczbę całkowitą, która wskazuje, czy bieżący obiekt jest przed, po lub w tym samym miejscu określony obiekt w kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="2db6e-294">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="2db6e-295">Całkowita wskazująca pozycję tego wystąpienia i <paramref name="obj" /> w porządku sortowania, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="2db6e-295">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="2db6e-296"><list type="table"><listheader><term> Wartość</span><span class="sxs-lookup"><span data-stu-id="2db6e-296"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="2db6e-297"></term><description> Opis elementu</span><span class="sxs-lookup"><span data-stu-id="2db6e-297"></term><description> Description</span></span>  
  
 <span data-ttu-id="2db6e-298"></description></listheader><item><term> Ujemna liczba całkowita</span><span class="sxs-lookup"><span data-stu-id="2db6e-298"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="2db6e-299"></term><description> To wystąpienie poprzedza <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="2db6e-299"></term><description> This instance precedes <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="2db6e-300"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="2db6e-300"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="2db6e-301"></term><description> To wystąpienie i <paramref name="obj" /> mieć to samo położenie w kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="2db6e-301"></term><description> This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="2db6e-302"></description></item><item><term> Dodatnia liczba całkowita</span><span class="sxs-lookup"><span data-stu-id="2db6e-302"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="2db6e-303"></term><description> Następuje to wystąpienie <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="2db6e-303"></term><description> This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-304">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="2db6e-304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2db6e-305">Można go używać tylko wtedy, gdy <xref:System.Tuple%608> wystąpienia jest rzutowane na <xref:System.IComparable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-305">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="2db6e-306">Ta metoda zapewnia <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementację <xref:System.Tuple%608> klasy.</span><span class="sxs-lookup"><span data-stu-id="2db6e-306">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%608> class.</span></span> <span data-ttu-id="2db6e-307">Mimo że można bezpośrednio wywołać metody, najczęściej jest wywoływana przez przeciążeń domyślne sortowanie kolekcji metod, takich jak <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> i <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, porządkowania elementów członkowskich kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-307">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2db6e-308"><xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> Metoda jest przeznaczona do użycia w operacji sortowania.</span><span class="sxs-lookup"><span data-stu-id="2db6e-308">The <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="2db6e-309">Nie należy jej używać, gdy głównym celem porównania jest ustalenie, czy dwa obiekty są sobie równe.</span><span class="sxs-lookup"><span data-stu-id="2db6e-309">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="2db6e-310">Aby ustalić, czy dwa obiekty są takie same, należy wywołać <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2db6e-310">To determine whether two objects are equal, call the <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2db6e-311">Ta metoda używa domyślna funkcja porównująca obiekt do porównania poszczególnych składników.</span><span class="sxs-lookup"><span data-stu-id="2db6e-311">This method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-312">Poniższy przykład tworzy tablicę octuples, których składniki są liczb całkowitych, które zawiera zakresu liczb pierwszych.</span><span class="sxs-lookup"><span data-stu-id="2db6e-312">The following example creates an array of octuples whose components are integers that contain a range of prime numbers.</span></span> <span data-ttu-id="2db6e-313">Przykładzie wyświetla elementy tablicy w kolejności nieposortowane, sortuje tablicy, a następnie wyświetla tablicy posortowane.</span><span class="sxs-lookup"><span data-stu-id="2db6e-313">The example displays the elements of the array in unsorted order, sorts the array, and then displays the array in sorted order.</span></span> <span data-ttu-id="2db6e-314">Dane wyjściowe zawierają posortowane według tablicy <xref:System.Tuple%608.Item1%2A>, lub pierwszy składnik spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-314">The output shows that the array has been sorted by <xref:System.Tuple%608.Item1%2A>, or the tuple's first component.</span></span> <span data-ttu-id="2db6e-315">Należy pamiętać, że przykładzie nie mogą bezpośrednio wywoływać <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> metody.</span><span class="sxs-lookup"><span data-stu-id="2db6e-315">Note that the example does not directly call the <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="2db6e-316">Ta metoda jest wywoływana przez niejawnie <xref:System.Array.Sort%28System.Array%29> metody dla każdego elementu w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2db6e-316">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`8.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2db6e-317"><paramref name="obj" /> nie jest <see cref="T:System.Tuple`8" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-317"><paramref name="obj" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Runtime.CompilerServices.ITuple.Item[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2db6e-318">Określony indeks <see langword="Tuple" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-318">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="2db6e-319"><c>Indeks</c> można z zakresu od 0 do <see langword="Item1" /> na mniejszy niż liczba elementów w jeden <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="2db6e-319"><c>index</c> can range from 0 for <see langword="Item1" /> to one less than the number of elements in the <see langword="Tuple" />.</span></span></param>
        <summary><span data-ttu-id="2db6e-320">Pobiera wartość określonego <see langword="Tuple" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-320">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="2db6e-321">Wartość <see langword="Tuple" /> elementu w określonej pozycji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-321">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-322"><xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> Właściwość jest jawnej implementacji interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-322">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="2db6e-323">Aby wywołać go, należy rzutowania lub konwersji <xref:System.Tuple%608> do obiektu <xref:System.Runtime.CompilerServices.ITuple> obiektu interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-323">To call it, you must cast or convert the <xref:System.Tuple%608> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="2db6e-324"><paramref name="index" /> jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2db6e-324"><paramref name="index" /> is less than 0.</span></span>  
  
 <span data-ttu-id="2db6e-325">—lub—</span><span class="sxs-lookup"><span data-stu-id="2db6e-325">-or-</span></span>  
  
 <span data-ttu-id="2db6e-326"><paramref name="index" /> jest większe lub równe <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span><span class="sxs-lookup"><span data-stu-id="2db6e-326"><paramref name="index" /> is greater than or equal to <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System.Runtime.CompilerServices.ITuple.Length { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2db6e-327">Pobiera liczbę elementów w <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="2db6e-327">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="2db6e-328">Liczba elementów w <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="2db6e-328">The number of elements in the <see langword="Tuple" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-329"><xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> Właściwość jest jawnej implementacji interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-329">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="2db6e-330">Aby wywołać go, należy rzutowania lub konwersji <xref:System.Tuple%608> typ <xref:System.Runtime.CompilerServices.ITuple> obiektu interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-330">To call it, you must cast or convert the <xref:System.Tuple%608> type to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2db6e-331">Zwraca ciąg reprezentujący wartość to <see cref="T:System.Tuple`8" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2db6e-331">Returns a string that represents the value of this <see cref="T:System.Tuple`8" /> instance.</span></span></summary>
        <returns><span data-ttu-id="2db6e-332">Reprezentacja ciągu <see cref="T:System.Tuple`8" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2db6e-332">The string representation of this <see cref="T:System.Tuple`8" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db6e-333">Długość ciągu zwróconego przez tę metodę ma postać (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, * Item8 —*...), gdzie *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, i *Item7* reprezentują wartości <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, i <xref:System.Tuple%608.Item7%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-333">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, and <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="2db6e-334">*Item8 —* reprezentuje wartość <xref:System.Tuple%608> obiektu `Next.Item1` właściwości.</span><span class="sxs-lookup"><span data-stu-id="2db6e-334">*Item8* represents the value of the <xref:System.Tuple%608> object's `Next.Item1` property.</span></span> <span data-ttu-id="2db6e-335">Wykonaj wartość dodatkowe składniki zagnieżdżonych *item8 —*.</span><span class="sxs-lookup"><span data-stu-id="2db6e-335">The value of any additional nested components follow *Item8*.</span></span> <span data-ttu-id="2db6e-336">Jeśli dowolna z wartości właściwości jest `null`, jest reprezentowany jako <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2db6e-336">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2db6e-337">Poniższy przykład tworzy krotka 17 zawierający dane populacji dla miasta z Detroit, Michigan, z 1860 do 1900.</span><span class="sxs-lookup"><span data-stu-id="2db6e-337">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, from 1860 to 1900.</span></span> <span data-ttu-id="2db6e-338">Następnie używa <xref:System.Tuple%608.ToString%2A> metodę w celu wyświetlenia danych spójnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2db6e-338">It then uses the <xref:System.Tuple%608.ToString%2A> method to display the tuple's data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`8.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>