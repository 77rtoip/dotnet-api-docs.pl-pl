<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Tuple`3.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a892a759931a6c8c1129221f72863b69f099d998.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a892a759931a6c8c1129221f72863b69f099d998</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The type of the tuple's first component.</source>
          <target state="translated">Typ pierwszego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The type of the tuple's second component.</source>
          <target state="translated">Typ drugiego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The type of the tuple's third component.</source>
          <target state="translated">Typ trzeciego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Tuple`3">
          <source>Represents a 3-tuple, or triple.</source>
          <target state="translated">Reprezentuje krotki 3 lub triple.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>A tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">Spójna kolekcja to struktura danych, która ma określoną liczbę i kolejność wartości.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> class represents a 3-tuple, or triple, which is a tuple that has three components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> Klasa reprezentuje krotka 3 lub Potrójna, czyli krotka zawiera trzy składniki.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object by calling either the <ph id="ph2">&lt;xref:System.Tuple%603.%23ctor%2A&gt;</ph> constructor or the static <ph id="ph3">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Można utworzyć wystąpienia <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektu, wywołując jedną <ph id="ph2">&lt;xref:System.Tuple%603.%23ctor%2A&gt;</ph> konstruktora lub statycznych <ph id="ph3">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>You can retrieve the values of the tuple's components by using the read-only <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> instance properties.</source>
          <target state="translated">Można pobrać wartości krotki składników za pomocą tylko do odczytu <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph>, i <ph id="ph3">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> wystąpienia właściwości.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>Tuples are commonly used in four different ways:</source>
          <target state="translated">Spójne kolekcje są powszechnie wykorzystywane na cztery różne sposoby:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>To represent a single set of data.</source>
          <target state="translated">Reprezentowanie jednego zestawu danych.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>For example, a tuple can represent a database record, and its components can represent individual fields of the record.</source>
          <target state="translated">Na przykład spójna kolekcja może reprezentować rekord bazy danych, a jej składniki mogą reprezentować poszczególne pola rekordu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>To provide easy access to, and manipulation of, a data set.</source>
          <target state="translated">Zapewnienie łatwego dostępu do zestawu danych i możliwości wykonywania w nim różnych operacji.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that contain the names of students, their average test scores, and the number of tests taken.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano tablicę <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektów, które zawierają nazwy studentów, jego średni wyniki i Liczba podjętych prób.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates the mean and standard deviation of the test scores.</source>
          <target state="translated">Tablica jest przekazywana do <ph id="ph1">`ComputeStatistics`</ph> metodę, która oblicza średnią i odchylenie standardowe wyniki testów.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>To return multiple values from a method without the use of <ph id="ph1">`out`</ph> parameters (in C#) or <ph id="ph2">`ByRef`</ph> parameters (in Visual Basic).</source>
          <target state="translated">Aby zwrócić wartości wielu z metody bez użycia <ph id="ph1">`out`</ph> parametrów (C#) lub <ph id="ph2">`ByRef`</ph> parametry (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>For example, the previous example returns its summary test score statistics in a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object.</source>
          <target state="translated">Na przykład poprzednim przykładzie zwraca jego statystyki wynik testu podsumowania w <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>To pass multiple values to a method through a single parameter.</source>
          <target state="translated">Przekazywanie wielu wartości do metody za pomocą jednego parametru.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>For example, the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> metoda ma jeden parametr, który pozwala na określanie jedną wartość do metody, która wykonuje wątek przy uruchamianiu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>If you supply a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object as the method argument, you can supply the thread’s startup routine with three items of data.</source>
          <target state="translated">Jeśli podasz <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiekt jako argument metody, możesz podać procedury uruchomienia wątku z trzech elementów danych.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>The value of the tuple's first component.</source>
          <target state="translated">Wartość pierwszego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>The value of the tuple's second component.</source>
          <target state="translated">Wartość drugiego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>The value of the tuple's third component.</source>
          <target state="translated">Wartość trzeciego składnika spójnej kolekcji.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>You can also use the static <ph id="ph1">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 3-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated">Można również użyć statycznych <ph id="ph1">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> metody do tworzenia wystąpienia obiektu spójnej kolekcji 3 bez konieczności jawnego określania typów jego składniki.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 3-tuple whose components are of type <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">&lt;xref:System.Double&gt;</ph>, and <ph id="ph4">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> metody tworzenia wystąpienia których elementy są typu krotki 3 <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">&lt;xref:System.Double&gt;</ph>, i <ph id="ph4">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>This is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%603.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">Jest to równoważne następujące wywołanie do <ph id="ph1">&lt;xref:System.Tuple%603.%23ctor%2A&gt;</ph> konstruktora klasy.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Obiekt, który ma zostać porównany z tym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Zwraca wartość wskazującą, czy bieżący <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> obiekt jest taki sam jak określony obiekt.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli bieżące wystąpienie jest taki sam jak określony obiekt; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated"><ph id="ph1">`obj`</ph> Parametr jest uznawany za taki sam jak bieżące wystąpienie w następujących warunkach:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>It is a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object.</source>
          <target state="translated">Jest <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>Its three components are of the same types as the current instance.</source>
          <target state="translated">Jego trzy składniki mają ten sam typ jak bieżące wystąpienie.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>Its three components are equal to those of the current instance.</source>
          <target state="translated">Jego trzy składniki są takie same jak bieżące wystąpienie.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>Equality is determined by the default object equality comparer for each component.</source>
          <target state="translated">Równość jest określana przez domyślny moduł porównywania równości obiektów dla każdego składnika.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method to determine whether any of the objects in an array of <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> objects are equal to one another.</source>
          <target state="translated">Następujące przykładowe wywołania <ph id="ph1">&lt;xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> metodę, aby określić, czy obiekty w tablicy <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> obiekty są takie same ze sobą.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>The output reflects the fact that the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%28System.Object%29&gt;</ph> method returns <ph id="ph2">`true`</ph> when comparing <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects whose components have equal values.</source>
          <target state="translated">Dane wyjściowe odzwierciedla który <ph id="ph1">&lt;xref:System.Tuple%603.Equals%28System.Object%29&gt;</ph> metoda zwraca <ph id="ph2">`true`</ph> podczas porównywania <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> obiektów, których składniki mają takie same wartości.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated">Zwraca wartość skrótu dla bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's first component.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> pierwszy składnik obiektu.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's first component.</source>
          <target state="translated">Wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> pierwszy składnik obiektu.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Dynamiczne można określić typu <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> składnika w jeden z dwóch sposobów:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> property.</source>
          <target state="translated">Wywołując <ph id="ph1">`GetType`</ph> metody na wartość, która jest zwracana w wyniku <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> object, and retrieving the first element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pobierając <ph id="ph1">&lt;xref:System.Type&gt;</ph> obiekt, który reprezentuje <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> obiektu i pobierania pierwszego elementu z tablicy, która jest zwracana przez jego <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that contain the names of students, their average test scores, and the number of tests taken.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano tablicę <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektów, które zawierają nazwy studentów, jego średni wyniki i Liczba podjętych prób.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</source>
          <target state="translated">Tablica jest przekazywana do <ph id="ph1">`ComputeStatistics`</ph> metodę, która oblicza wynik średnia, odchylenie standardowe i liczbę przypadków, z którego mają być obliczane statystyki.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>These values are stored in the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object that is returned by the <ph id="ph2">`ComputeStatistics`</ph> method.</source>
          <target state="translated">Te wartości są przechowywane w <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektu, który jest zwracany przez <ph id="ph2">`ComputeStatistics`</ph> metody.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> property contains the number of cases.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> Właściwość zawiera liczbę przypadków.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's second component.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> drugi składnik obiektu.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's second component.</source>
          <target state="translated">Wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> drugi składnik obiektu.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Dynamiczne można określić typu <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> składnika w jeden z dwóch sposobów:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> property.</source>
          <target state="translated">Wywołując <ph id="ph1">`GetType`</ph> metody na wartość, która jest zwracana w wyniku <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pobierając <ph id="ph1">&lt;xref:System.Type&gt;</ph> obiekt, który reprezentuje <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> obiektu i pobierania drugiego elementu z tablicy, która jest zwracana przez jego <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that contain the names of students, their average test scores, and the number of tests taken.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano tablicę <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektów, które zawierają nazwy studentów, jego średni wyniki i Liczba podjętych prób.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</source>
          <target state="translated">Tablica jest przekazywana do <ph id="ph1">`ComputeStatistics`</ph> metodę, która oblicza wynik średnia, odchylenie standardowe i liczbę przypadków, z którego mają być obliczane statystyki.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>These values are stored in the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object that is returned by the <ph id="ph2">`ComputeStatistics`</ph> method.</source>
          <target state="translated">Te wartości są przechowywane w <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektu, który jest zwracany przez <ph id="ph2">`ComputeStatistics`</ph> metody.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> property contains the mean test score.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> Właściwość zawiera wynik testu średniej.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.Item3">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's third component.</source>
          <target state="translated">Pobiera wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> trzecim składnikiem obiektu.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's third component.</source>
          <target state="translated">Wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> trzecim składnikiem obiektu.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Dynamiczne można określić typu <ph id="ph1">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> składnika w jeden z dwóch sposobów:</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value returned by the <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> property.</source>
          <target state="translated">Wywołując <ph id="ph1">`GetType`</ph> metody na wartość zwrócona przez <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> object, and retrieving the third element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pobierając <ph id="ph1">&lt;xref:System.Type&gt;</ph> obiekt, który reprezentuje <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> obiektu i pobierania trzeciego elementu z tablicy, która jest zwracana przez jego <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that contain the names of students, their average test scores, and the number of tests taken.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano tablicę <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektów, które zawierają nazwy studentów, jego średni wyniki i Liczba podjętych prób.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</source>
          <target state="translated">Tablica jest przekazywana do <ph id="ph1">`ComputeStatistics`</ph> metodę, która oblicza wynik średnia, odchylenie standardowe i liczbę przypadków, z którego mają być obliczane statystyki.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>These values are stored in the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object that is returned by the <ph id="ph2">`ComputeStatistics`</ph> method.</source>
          <target state="translated">Te wartości są przechowywane w <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektu, który jest zwracany przez <ph id="ph2">`ComputeStatistics`</ph> metody.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> property contains the standard deviation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> Właściwość zawiera odchylenie standardowe.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Obiekt, który ma zostać porównany z bieżącym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">Obiekt dostarczający niestandardowe reguły na potrzeby porównania.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Porównuje bieżący <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> obiektu określony obiekt przy użyciu określona funkcja porównująca i zwraca liczbę całkowitą, która wskazuje, czy bieżący obiekt jest przed, po lub w tym samym miejscu określony obiekt w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Całkowita wskazująca pozycję tego wystąpienia i <ph id="ph1">&lt;paramref name="other" /&gt;</ph> w porządku sortowania, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Ujemna liczba całkowita</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie poprzedza <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie i <ph id="ph3">&lt;paramref name="other" /&gt;</ph> mieć to samo położenie w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Dodatnia liczba całkowita</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Następuje to wystąpienie <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Although this method can be called directly, it is most commonly called by collection sorting methods that include <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.</source>
          <target state="translated">Mimo że tę metodę można wywołać bezpośrednio, najczęściej jest wywoływana przez kolekcję sortowanie metod, które obejmują <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parametry porządkowania elementów członkowskich kolekcji.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>For example, it is called by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">Na przykład jest wywoływana przez <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> — metoda i <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> metody <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> obiekt, który zostanie uruchomiony przy użyciu <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> Metoda jest przeznaczona do użycia w operacji sortowania.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">Nie należy jej używać, gdy głównym celem porównania jest ustalenie, czy dwa obiekty są sobie równe.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Aby ustalić, czy dwa obiekty są takie same, należy wywołać <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that consist of a student's name, mean test score, and number of tests.</source>
          <target state="translated">Poniższy przykład tworzy tablicę <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektów, które składają się z nazwy, wynik testu średnią i liczba testów studenta.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> to display the value of each tuple in sorted order.</source>
          <target state="translated">On wyświetla składnika każda krotka w tablicy w kolejności nieposortowane, sortuje tablicy, a następnie wywołuje <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> do wyświetlenia wartości poszczególne krotki posortowane.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To sort the array, the example defines a generic <ph id="ph1">`ScoreComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interface and sorts the <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects in ascending order by the value of their second component rather than their first component.</source>
          <target state="translated">Aby posortować tablicy, w przykładzie zdefiniowano ogólnego <ph id="ph1">`ScoreComparer`</ph> klasa implementująca <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interfejsu i sortowanie <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> obiektów w porządku rosnącym według wartości ich drugi składnik, a nie ich pierwszym składnikiem.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Należy pamiętać, że przykładzie nie mogą bezpośrednio wywoływać <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method for each element in the array.</source>
          <target state="translated">Ta metoda jest wywoływana przez niejawnie <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> metody dla każdego elementu w tablicy.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> nie jest <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Obiekt, który ma zostać porównany z tym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">Obiekt definiujący metodę służącą ocenie, czy dwa obiekty są sobie równe.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">Zwraca wartość wskazującą, czy bieżący <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> obiekt jest taki sam jak określony obiekt na podstawie metody porównania określony.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli bieżące wystąpienie jest taki sam jak określony obiekt; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation is called only if <ph id="ph2">`other`</ph> is not <ph id="ph3">`null`</ph>, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <ph id="ph4">&lt;xref:System.Tuple%603&gt;</ph> object whose components are of the same types as the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> Implementacji jest wywoływana tylko wtedy, gdy <ph id="ph2">`other`</ph> nie jest <ph id="ph3">`null`</ph>, jeśli można pomyślnie rzutowanie (C#) i przekonwertować (w języku Visual Basic) <ph id="ph4">&lt;xref:System.Tuple%603&gt;</ph> obiektów, których elementy mają ten sam typ jak bieżące wystąpienie.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> method first passes the <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> values of the <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects to be compared to the <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> Metoda przekazuje pierwszy <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> wartości <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> obiekty do porównania z <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, the method is called again and passed the <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects.</source>
          <target state="translated">Jeśli wywołanie tej metody zwraca <ph id="ph1">`true`</ph>, metoda jest wywoływana ponownie i przekazany <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> wartości dwa <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph> again, the method is called a third time and passed the <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects.</source>
          <target state="translated">Jeśli wywołanie tej metody zwraca <ph id="ph1">`true`</ph> ponownie, ma zostać wywołana metoda innej czasu i przekazany <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> wartości dwa <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines an <ph id="ph1">`Item2Comparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interface and changes the way in which <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects are evaluated for equality.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano <ph id="ph1">`Item2Comparer`</ph> klasa implementująca <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interfejsu i zmiany sposobu, w jaki <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> obiekty są oceniane pod kątem równości.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The method always returns <ph id="ph1">`true`</ph> when it is passed the <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> property values of two <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects, and it calls the <ph id="ph4">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> method to evaluate their <ph id="ph5">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> property values.</source>
          <target state="translated">Metoda zawsze zwraca <ph id="ph1">`true`</ph> po jest przekazywany <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> wartości właściwości dwóch <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> obiektów który wywołuje <ph id="ph4">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> metodę sprawdzania ich <ph id="ph5">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> wartości właściwości.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, their <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> property values are passed to the method, which always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Jeśli wywołanie tej metody zwraca <ph id="ph1">`true`</ph>, ich <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> wartości właściwości są przekazywane do metody, która zawsze zwraca <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>As a result, the method tests for equality based only on the value of the <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> property.</source>
          <target state="translated">W związku z tym testy metoda równości tylko na podstawie wartości z <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The output illustrates the result for a data set of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that record the names, mean test score, and number of tests of students in a class.</source>
          <target state="translated">Dane wyjściowe przedstawia wynik dla zestawu danych <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiekty służące do rejestrowania nazwy, wynik testu średnią i liczba testów studentów w klasie.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated">Obiekt których <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> metody oblicza wartość skrótu bieżącego <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object by using a specified computation method.</source>
          <target state="translated">Oblicza wartość skrótu dla bieżącego <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> obiektu za pomocą metody określonej obliczeń.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The method simply wraps a call to the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Metoda opakowuje po prostu wywołanie <ph id="ph1">`comparer`</ph> obiektu <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The algorithm used to compute the hash code should return the same hash code for two <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that are considered to be equal.</source>
          <target state="translated">Algorytm używany do obliczania skrótu ma zwracać taki sam skrót dla dwóch <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektów, które są traktowane jako równe.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Obiekt, który ma zostać porównany z bieżącym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Porównuje bieżący <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> obiekt do określonego obiektu i zwraca liczbę całkowitą, która wskazuje, czy bieżący obiekt jest przed, po lub w tym samym miejscu określony obiekt w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Całkowita wskazująca pozycję tego wystąpienia i <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> w porządku sortowania, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Ujemna liczba całkowita</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie poprzedza <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> To wystąpienie i <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> mieć to samo położenie w kolejności sortowania.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Dodatnia liczba całkowita</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Następuje to wystąpienie <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>This method provides the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation for the <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> class.</source>
          <target state="translated">Ta metoda zapewnia <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementację <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, to order the members of a collection.</source>
          <target state="translated">Mimo że można bezpośrednio wywołać metody, najczęściej jest wywoływana przez przeciążeń domyślne sortowanie metod, takich jak kolekcja <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, porządkowania elementów członkowskich kolekcji.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> Metoda jest przeznaczona do użycia w operacji sortowania.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">Nie należy jej używać, gdy głównym celem porównania jest ustalenie, czy dwa obiekty są sobie równe.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Aby ustalić, czy dwa obiekty są takie same, należy wywołać <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method uses the default object comparer to compare each component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> Metoda używa domyślna funkcja porównująca obiekt do porównania poszczególnych składników.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects whose components consist of a student's name, mean test score, and number of tests.</source>
          <target state="translated">Poniższy przykład tworzy tablicę <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> obiektów, których składniki składają się z nazwy Studenta, wynik testu średnią i liczba testów.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>It displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> to display each tuple in sorted order.</source>
          <target state="translated">On Wyświetla składniki każda krotka w tablicy w kolejności nieposortowane, sortuje tablicy, a następnie wywołuje <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> Aby wyświetlić poszczególne krotki posortowane.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The output shows that the array has been sorted by its first component.</source>
          <target state="translated">Dane wyjściowe zawierają posortowane według jego pierwszym składnikiem tablicy.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Należy pamiętać, że przykładzie nie mogą bezpośrednio wywoływać <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> method for each element in the array.</source>
          <target state="translated">Ta metoda jest wywoływana przez niejawnie <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> metody dla każdego elementu w tablicy.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> nie jest <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">Określony indeks <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 to 2.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Indeks<ept id="p1">&lt;/c&gt;</ept> można z zakresu od 0 do 2.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">Pobiera wartość określonego <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> elementu w określonej pozycji.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> Właściwość jest jawnej implementacji interfejsu.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Aby wywołać go, należy rzutowania lub konwersji <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> do obiektu <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> obiektu interfejsu.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 2.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza niż 0 lub większa niż 2.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</source>
          <target state="translated">Pobiera liczbę elementów w <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>3, the number of elements in a <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated">3, liczba elementów w <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> Właściwość jest jawnej implementacji interfejsu.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Aby wywołać go, należy rzutowania lub konwersji <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> do obiektu <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> obiektu interfejsu.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> instance.</source>
          <target state="translated">Zwraca ciąg reprezentujący wartość to <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated">Reprezentacja ciągu <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>), where <bpt id="p4">*</bpt>Item1<ept id="p4">*</ept>, <bpt id="p5">*</bpt>Item2<ept id="p5">*</ept>, and <bpt id="p6">*</bpt>Item3<ept id="p6">*</ept> represent the values of the <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> properties, respectively.</source>
          <target state="translated">Długość ciągu zwróconego przez tę metodę ma postać (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>), gdzie <bpt id="p4">*</bpt>Item1<ept id="p4">*</ept>, <bpt id="p5">*</bpt>Item2<ept id="p5">*</ept>, i <bpt id="p6">*</bpt>Item3<ept id="p6">*</ept> reprezentują wartości <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph>, i <ph id="ph3">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> właściwości, odpowiednio.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.ToString">
          <source>If any of the property values is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Jeśli dowolna z wartości właściwości jest <ph id="ph1">`null`</ph>, jest reprezentowany jako <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> method.</source>
          <target state="translated">Poniższy przykład przedstawia <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> metody.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>