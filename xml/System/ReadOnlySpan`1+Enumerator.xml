<Type Name="ReadOnlySpan&lt;T&gt;+Enumerator" FullName="System.ReadOnlySpan&lt;T&gt;+Enumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2232e4b634ee3471ee874bc45ca1732fb3636710" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55367198" /></Metadata><TypeSignature Language="C#" Value="public struct ReadOnlySpan&lt;T&gt;.Enumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ReadOnlySpan`1/Enumerator&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ReadOnlySpan`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure ReadOnlySpan(Of T).Enumerator" />
  <TypeSignature Language="C++ CLI" Value="public: value class ReadOnlySpan&lt;T&gt;::Enumerator" />
  <TypeSignature Language="F#" Value="type ReadOnlySpan&lt;'T&gt;.Enumerator = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.2">
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ed884-101">Dostarcza moduł wyliczający dla elementów <see cref="T:System.ReadOnlySpan`1" />.</span><span class="sxs-lookup"><span data-stu-id="ed884-101">Provides an enumerator for the elements of a <see cref="T:System.ReadOnlySpan`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[<span data-ttu-id="ed884-102">C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) języka C# i [For Each... Następny](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) konstrukcja w języku Visual Basic powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="ed884-102">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) of the C# language and the [For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construct in Visual Basic hides the complexity of enumerators.</span></span> <span data-ttu-id="ed884-103">Zamiast bezpośredniego wykonywania operacji modułu wyliczającego, za pomocą `foreach` lub `For Each...Next` jest zalecane.</span><span class="sxs-lookup"><span data-stu-id="ed884-103">Instead of directly manipulating the enumerator, using `foreach` or `For Each...Next` is recommended.</span></span> 

<span data-ttu-id="ed884-104">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w <xref:System.ReadOnlySpan`1>.</span><span class="sxs-lookup"><span data-stu-id="ed884-104">Initially, the enumerator is positioned before the first element in the <xref:System.ReadOnlySpan`1>.</span></span> <span data-ttu-id="ed884-105">W tym miejscu <xref:System.ReadOnlySpan`1.Enumerator.Current> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="ed884-105">At this position, <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="ed884-106">Należy wywołać <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu w <xref:System.ReadOnlySpan`1> przed odczytaniem wartości właściwości <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span><span class="sxs-lookup"><span data-stu-id="ed884-106">You must call <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> to advance the enumerator to the first item in the <xref:System.ReadOnlySpan`1> before reading the value of <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span></span>

<span data-ttu-id="ed884-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> zwraca taką samą wartość, dopóki <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ed884-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="ed884-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> Ustawia <xref:System.ReadOnlySpan`1.Enumerator.Current> do następnego elementu w <xref:System.ReadOnlySpan`1>.</span><span class="sxs-lookup"><span data-stu-id="ed884-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> sets <xref:System.ReadOnlySpan`1.Enumerator.Current> to the next item in the <xref:System.ReadOnlySpan`1>.</span></span>

<span data-ttu-id="ed884-109">Jeśli <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> przekazuje koniec <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="ed884-109">If <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> passes the end of the <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ed884-110">Gdy moduł wyliczający jest w tym stanie, kolejne wywołania <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> również zwracać `false` i <xref:System.ReadOnlySpan`1.Enumerator.Current> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="ed884-110">When the enumerator is at this state, subsequent calls to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> also return `false` and <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="ed884-111">Nie można ustawić <xref:System.ReadOnlySpan`1.Enumerator.Current> do pierwszego elementu w <xref:System.ReadOnlySpan`1> ponownie; zamiast tego należy utworzyć nowe wystąpienie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="ed884-111">You cannot set <xref:System.ReadOnlySpan`1.Enumerator.Current> to the first item in the <xref:System.ReadOnlySpan`1> again; you must create a new enumerator instance instead.</span></span> 

<span data-ttu-id="ed884-112">Chociaż <xref:System.ReadOnlySpan`1> jest przydzielony na stosie danych bazowych, na którym <xref:System.ReadOnlySpan`1> punkty, może się różnić.</span><span class="sxs-lookup"><span data-stu-id="ed884-112">Though the <xref:System.ReadOnlySpan`1> is allocated on the stack, the underlying data on which the <xref:System.ReadOnlySpan`1> points to, may not be.</span></span> <span data-ttu-id="ed884-113">W związku z tym, wyliczanie <xref:System.ReadOnlySpan`1> nie jest wewnętrznie procedurą odporną.</span><span class="sxs-lookup"><span data-stu-id="ed884-113">Therefore, enumerating through a <xref:System.ReadOnlySpan`1> is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ed884-114">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="ed884-114">To guarantee thread safety during enumeration, you must implement your own synchronization.</span></span>

<span data-ttu-id="ed884-115">W odróżnieniu od niektórych innych struktur moduł wyliczający na platformie .NET <xref:System.ReadOnlySpan`1.Enumerator>:</span><span class="sxs-lookup"><span data-stu-id="ed884-115">Unlike some other enumerator structures in .NET, the <xref:System.ReadOnlySpan`1.Enumerator>:</span></span>

- <span data-ttu-id="ed884-116">Nie implementuje <xref:System.Collections.IEnumerator> lub <xref:System.Collections.Generic.IEnumerator`1> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ed884-116">Does not implement the <xref:System.Collections.IEnumerator> or <xref:System.Collections.Generic.IEnumerator`1> interface.</span></span> <span data-ttu-id="ed884-117">Jest to spowodowane <xref:System.ReadOnlySpan`1.Enumerator> jest [ref struct](~/docs/csharp/language-reference/keywords/ref.md#ref-struct-types) i nie może zostać opakowany.</span><span class="sxs-lookup"><span data-stu-id="ed884-117">This is because <xref:System.ReadOnlySpan`1.Enumerator> is a [ref struct](~/docs/csharp/language-reference/keywords/ref.md#ref-struct-types) and cannot be boxed.</span></span>

- <span data-ttu-id="ed884-118">Nie obejmuje `Reset` metody, które można ustawić modułu wyliczającego początkową przed pierwszym elementem w zakresie.</span><span class="sxs-lookup"><span data-stu-id="ed884-118">Does not include a `Reset` method, which can set the enumerator to its initial position before the first element in the span.</span></span> <span data-ttu-id="ed884-119">( <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> Metoda musi zostać wdrożony jako część interfejsu, ale większość implementors zgłoszą wyjątek lub nie implementacji.)</span><span class="sxs-lookup"><span data-stu-id="ed884-119">(The <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> method must be implemented as part of the interface, but most implementors either throw an exception or provide no implementation.)</span></span>]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T&amp; Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance T&amp; modreq(System.Runtime.InteropServices.InAttribute) Current" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlySpan`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T&amp; ^ Current { T&amp; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : T&amp;" Usage="System.ReadOnlySpan&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.2">
          <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue RefType="Ref">
        <ReturnType>T&amp;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed884-120">Pobiera odwołanie do elementu w bieżącym położeniu modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="ed884-120">Gets a reference to the item at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="ed884-121">Element w <see cref="T:System.ReadOnlySpan`1" /> w bieżącym położeniu modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="ed884-121">The element in the <see cref="T:System.ReadOnlySpan`1" /> at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="ed884-122">`Current` jest niezdefiniowana w ramach jednej z następujących warunków:</span><span class="sxs-lookup"><span data-stu-id="ed884-122">`Current` is undefined under either of the following conditions:</span></span> 

- <span data-ttu-id="ed884-123">Natychmiast, po utworzeniu modułu wyliczającego moduł wyliczający jest umieszczony przed pierwszym elementem w zakresie.</span><span class="sxs-lookup"><span data-stu-id="ed884-123">Immediately after the enumerator is created, the enumerator is positioned before the first element in the span.</span></span> <span data-ttu-id="ed884-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> musi zostać wywołana w celu wyprzedzeniem modułu wyliczającego do pierwszego elementu zakresu przed odczytaniem wartości właściwości `Current`.</span><span class="sxs-lookup"><span data-stu-id="ed884-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> must be called to advance the enumerator to the first element of the span before reading the value of `Current`.</span></span>

- <span data-ttu-id="ed884-125">Ostatnie wywołanie elementu <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> zwrócił `false`, która wskazuje koniec zakresu.</span><span class="sxs-lookup"><span data-stu-id="ed884-125">The last call to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> returned `false`, which indicates the end of the span.</span></span> 

<span data-ttu-id="ed884-126">`Current` zwraca taką samą wartość, dopóki <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ed884-126">`Current` returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> is called.</span></span> <span data-ttu-id="ed884-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> Ustawia `Current` do następnego elementu w zakresie.</span><span class="sxs-lookup"><span data-stu-id="ed884-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> sets `Current` to the next item in the span.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ed884-128">Przesuwa modułu wyliczającego do następnego elementu <see cref="System.ReadOnlySpan`1" />.</span><span class="sxs-lookup"><span data-stu-id="ed884-128">Advances the enumerator to the next item of the <see cref="System.ReadOnlySpan`1" />.</span></span></summary>
        <returns><span data-ttu-id="ed884-129">`true` Jeśli moduł wyliczający pomyślnie zaawansowane do następnego elementu; `false` koniec zakresu została przekazana.</span><span class="sxs-lookup"><span data-stu-id="ed884-129">`true` if the enumerator successfully advanced to the next item; `false` if the end of the span has been passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="ed884-130">Po utworzeniu moduł wyliczający jest umieszczony przed pierwszym elementem w zakresu, a pierwsze wywołanie `MoveNext` prowadzi modułu wyliczającego do pierwszego elementu w zakresie.</span><span class="sxs-lookup"><span data-stu-id="ed884-130">After an enumerator is created, it is positioned before the first element in the span, and the first call to `MoveNext` advances the enumerator to the first item in the span.</span></span> 

<span data-ttu-id="ed884-131">Jeśli `MoveNext` przekazuje na końcu zakresu, `MoveNext` zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="ed884-131">If `MoveNext` passes the end of the span, `MoveNext` returns `false`.</span></span> <span data-ttu-id="ed884-132">Gdy moduł wyliczający jest w tym stanie, kolejne wywołania `MoveNext` również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="ed884-132">When the enumerator is at this state, subsequent calls to `MoveNext` also return `false`.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>