<Type Name="StringComparer" FullName="System.StringComparer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fef81d39f18f6ae0e33d7d4afa958e4bc6174f28" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52345630" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class StringComparer : System.Collections.Generic.IComparer&lt;string&gt;, System.Collections.Generic.IEqualityComparer&lt;string&gt;, System.Collections.IComparer, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit StringComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;string&gt;, class System.Collections.Generic.IEqualityComparer`1&lt;string&gt;, class System.Collections.IComparer, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.StringComparer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StringComparer&#xA;Implements IComparer, IComparer(Of String), IEqualityComparer, IEqualityComparer(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringComparer abstract : System::Collections::Generic::IComparer&lt;System::String ^&gt;, System::Collections::Generic::IEqualityComparer&lt;System::String ^&gt;, System::Collections::IComparer, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type StringComparer = class&#xA;    interface IComparer&#xA;    interface IEqualityComparer&#xA;    interface IComparer&lt;string&gt;&#xA;    interface IEqualityComparer&lt;string&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="67b68-101">Reprezentuje operacja porównania ciągu, korzystającą z konkretnego przypadku i reguł porównywania kultury lub liczbą porządkową.</span>
      <span class="sxs-lookup">
        <span data-stu-id="67b68-101">Represents a string comparison operation that uses specific case and culture-based or ordinal comparison rules.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-102">Obiekt pochodzi od <xref:System.StringComparer> klasy stanowią porównania oparte na ciągach, równości i mieszania kod operacji, które wziąć pod uwagę zarówno reguł porównywania specyficzne dla kultury i wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="67b68-102">An object derived from the <xref:System.StringComparer> class embodies string-based comparison, equality, and hash code operations that take into account both case and culture-specific comparison rules.</span></span> <span data-ttu-id="67b68-103">Możesz użyć <xref:System.StringComparer> klasy w celu utworzenia porównania specyficznych dla typu, aby posortować elementy w kolekcji ogólnych.</span><span class="sxs-lookup"><span data-stu-id="67b68-103">You can use the <xref:System.StringComparer> class to create a type-specific comparison to sort the elements in a generic collection.</span></span> <span data-ttu-id="67b68-104">Klasy, takie jak <xref:System.Collections.Hashtable>, <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.SortedList>, i <xref:System.Collections.Generic.SortedList%602> użyj <xref:System.StringComparer> klasy na potrzeby sortowania.</span><span class="sxs-lookup"><span data-stu-id="67b68-104">Classes such as <xref:System.Collections.Hashtable>, <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.SortedList>, and <xref:System.Collections.Generic.SortedList%602> use the <xref:System.StringComparer> class for sorting purposes.</span></span>  
  
 <span data-ttu-id="67b68-105">Operacja porównania, która jest reprezentowana przez <xref:System.StringComparer> klasa jest zdefiniowana, aby być uwzględniana wielkość liter lub bez uwzględniania wielkości liter, a następnie użyć albo programu word (wrażliwe na ustawienia kulturowe) lub reguł porównanie porządkowe (niewrażliwość na ustawienia kulturowe).</span><span class="sxs-lookup"><span data-stu-id="67b68-105">A comparison operation that is represented by the <xref:System.StringComparer> class is defined to be either case-sensitive or case-insensitive, and use either word (culture-sensitive) or ordinal (culture-insensitive) comparison rules.</span></span> <span data-ttu-id="67b68-106">Aby uzyskać więcej informacji na temat programu word i reguł porównania porządkowego, zobacz <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="67b68-106">For more information about word and ordinal comparison rules, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  

> [!NOTE]
> <span data-ttu-id="67b68-107">Możesz pobrać [tabele wagi sortowania](https://www.microsoft.com/en-us/download/details.aspx?id=10921), zbiór plików tekstowych, które zawierają informacje o wagi znaku w operacjach sortowania i porównywania dla systemów operacyjnych Windows, a [domyślne Unicode Tabela elementów sortowania](https://www.unicode.org/Public/UCA/latest/allkeys.txt), najnowszą wersję tabeli wagi sortowania dla systemów Linux i macOS.</span><span class="sxs-lookup"><span data-stu-id="67b68-107">You can download the [Sorting Weight Tables](https://www.microsoft.com/en-us/download/details.aspx?id=10921), a set of text files that contain information on the character weights used in sorting and comparison operations for Windows operating systems, and the [Default Unicode Collation Element Table](https://www.unicode.org/Public/UCA/latest/allkeys.txt), the latest version of the sort weight table for Linux and macOS.</span></span> <span data-ttu-id="67b68-108">Określoną wersję tabeli wagi sortowania w systemie Linux i macOS jest zależna od wersji [składniki międzynarodowego standardu Unicode](http://site.icu-project.org/) biblioteki zainstalowane w systemie.</span><span class="sxs-lookup"><span data-stu-id="67b68-108">The specific version of the sort weight table on Linux and macOS depends on the version of the [International Components for Unicode](http://site.icu-project.org/) libraries installed on the system.</span></span> <span data-ttu-id="67b68-109">Informacje na temat ICU wersji i wersje Unicode, które implementują, zobacz [pobieranie ICU](http://site.icu-project.org/download).</span><span class="sxs-lookup"><span data-stu-id="67b68-109">For information on ICU versions and the Unicode versions that they implement, see [Downloading ICU](http://site.icu-project.org/download).</span></span>

## <a name="implemented-properties"></a><span data-ttu-id="67b68-110">Zaimplementowane właściwości</span><span class="sxs-lookup"><span data-stu-id="67b68-110">Implemented properties</span></span>  

<span data-ttu-id="67b68-111">Może być mylone o sposobie używania <xref:System.StringComparer> właściwościami klasy z powodu seeming sprzeczne.</span><span class="sxs-lookup"><span data-stu-id="67b68-111">You might be confused about how to use the <xref:System.StringComparer> class properties because of a seeming contradiction.</span></span> <span data-ttu-id="67b68-112"><xref:System.StringComparer> Zadeklarowano klasę `abstract` (`MustInherit` w języku Visual Basic), co oznacza jego elementów członkowskich mogą być wywoływane tylko dla obiektu klasy pochodzącej od <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-112">The <xref:System.StringComparer> class is declared `abstract` (`MustInherit` in Visual Basic), which means its members can be invoked only on an object of a class derived from the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="67b68-113">Jest sprzeczność to, że każda właściwość <xref:System.StringComparer> zadeklarowano klasę `static` (`Shared` w języku Visual Basic), co oznacza, że właściwość może być wywołana bez tworzenia klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="67b68-113">The contradiction is that each property of the <xref:System.StringComparer> class is declared `static` (`Shared` in Visual Basic), which means the property can be invoked without first creating a derived class.</span></span>  
  
 <span data-ttu-id="67b68-114">Możesz wywołać <xref:System.StringComparer> właściwości bezpośrednio, ponieważ każda właściwość faktycznie Zwraca wystąpienie klasy anonimowe, która jest pochodną <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-114">You can call a <xref:System.StringComparer> property directly because each property actually returns an instance of an anonymous class that is derived from the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="67b68-115">W związku z tym, typ wartość każdej właściwości jest <xref:System.StringComparer>, który nie jest klasą bazową klasy anonimowe, typ anonimowy samej klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-115">Consequently, the type of each property value is <xref:System.StringComparer>, which is the base class of the anonymous class, not the type of the anonymous class itself.</span></span> <span data-ttu-id="67b68-116">Każdy <xref:System.StringComparer> klasy właściwość zwraca <xref:System.StringComparer> obiekt, który obsługuje wstępnie zdefiniowanych reguł wielkość liter i porównywania.</span><span class="sxs-lookup"><span data-stu-id="67b68-116">Each <xref:System.StringComparer> class property returns a <xref:System.StringComparer> object that supports predefined case and comparison rules.</span></span>  
  
## Examples  

<span data-ttu-id="67b68-117">W poniższym przykładzie pokazano właściwości i <xref:System.StringComparer.Create%2A> metody <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-117">The following example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="67b68-118">W przykładzie pokazano jak różne <xref:System.StringComparer> obiektów sortują trzy wersje Łacińskiej litery I.</span><span class="sxs-lookup"><span data-stu-id="67b68-118">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.String" />
    <altmember cref="T:System.Globalization.CompareOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StringComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StringComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67b68-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.StringComparer" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-119">Initializes a new instance of the <see cref="T:System.StringComparer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="67b68-120">Porównuje dwa obiekty lub ciągów i zwraca wskazanie ich względnych sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-120">Compares two objects or strings and returns an indication of their relative sort order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As Object, y As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="stringComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="67b68-121">Obiekt do porównania z <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-121">An object to compare to <paramref name="y" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="67b68-122">Obiekt do porównania z <paramref name="x" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-122">An object to compare to <paramref name="x" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67b68-123">W przypadku przesłonięcia w klasie pochodnej, porównuje dwa obiekty i zwraca wskazanie ich względnych sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-123">When overridden in a derived class, compares two objects and returns an indication of their relative sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67b68-124">Liczba całkowita wskazująca wartości względne <paramref name="x" /> i <paramref name="y" />, jak pokazano w poniższej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-124">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="67b68-125">Wartość</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-125">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="67b68-126">Znaczenie</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-126">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="67b68-127">Mniej niż zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-127">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="67b68-128">
                  <paramref name="x" /> poprzedza <paramref name="y" /> w porządku sortowania.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-128">
                    <paramref name="x" /> precedes  <paramref name="y" /> in the sort order.</span>
                </span>
                <span data-ttu-id="67b68-129">—lub—</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-129">-or-</span>
                </span>
                <span data-ttu-id="67b68-130">
                  <paramref name="x" /> jest <see langword="null" /> i <paramref name="y" /> nie <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-130">
                    <paramref name="x" /> is <see langword="null" /> and <paramref name="y" /> is not <see langword="null" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="67b68-131">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-131">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="67b68-132">
                  <paramref name="x" /> jest równa <paramref name="y" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-132">
                    <paramref name="x" /> is equal to <paramref name="y" />.</span>
                </span>
                <span data-ttu-id="67b68-133">—lub—</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-133">-or-</span>
                </span>
                <span data-ttu-id="67b68-134">
                  <paramref name="x" /> i <paramref name="y" /> są <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-134">
                    <paramref name="x" /> and <paramref name="y" /> are both <see langword="null" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="67b68-135">Większe od zera</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-135">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="67b68-136">
                  <paramref name="x" /> następuje <paramref name="y" /> w porządku sortowania.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-136">
                    <paramref name="x" /> follows <paramref name="y" /> in the sort order.</span>
                </span>
                <span data-ttu-id="67b68-137">—lub—</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-137">-or-</span>
                </span>
                <span data-ttu-id="67b68-138">
                  <paramref name="y" /> jest <see langword="null" /> i <paramref name="x" /> nie <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-138">
                    <paramref name="y" /> is <see langword="null" /> and <paramref name="x" /> is not <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-139"><xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> Metody jest nieco bardziej efektywne niż <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> metody ponieważ konwersja `x` i `y` argumenty są wymagane do wykonania porównania.</span><span class="sxs-lookup"><span data-stu-id="67b68-139">The <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method is slightly more efficient than the <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method because no conversion of the `x` and `y` arguments is needed to perform the comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="67b68-140">Ani <paramref name="x" /> ani <paramref name="y" /> jest <see cref="T:System.String" /> obiektu i żadna <paramref name="x" /> ani <paramref name="y" /> implementuje <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-140">Neither <paramref name="x" /> nor <paramref name="y" /> is a <see cref="T:System.String" /> object, and neither <paramref name="x" /> nor <paramref name="y" /> implements the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (string x, string y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string x, string y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As String, y As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(System::String ^ x, System::String ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string -&gt; int" Usage="stringComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
        <Parameter Name="y" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="67b68-141">Ciąg do porównania z <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-141">A string to compare to <paramref name="y" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="67b68-142">Ciąg do porównania z <paramref name="x" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-142">A string to compare to <paramref name="x" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67b68-143">W przypadku przesłonięcia w klasie pochodnej, porównuje dwa ciągi i zwraca wskazanie ich względnych sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-143">When overridden in a derived class, compares two strings and returns an indication of their relative sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67b68-144">Liczba całkowita wskazująca wartości względne <paramref name="x" /> i <paramref name="y" />, jak pokazano w poniższej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-144">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="67b68-145">Wartość</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-145">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="67b68-146">Znaczenie</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-146">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="67b68-147">Mniej niż zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-147">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="67b68-148">
                  <paramref name="x" /> poprzedza <paramref name="y" /> w porządku sortowania.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-148">
                    <paramref name="x" /> precedes <paramref name="y" /> in the sort order.</span>
                </span>
                <span data-ttu-id="67b68-149">—lub—</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-149">-or-</span>
                </span>
                <span data-ttu-id="67b68-150">
                  <paramref name="x" /> jest <see langword="null" /> i <paramref name="y" /> nie <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-150">
                    <paramref name="x" /> is <see langword="null" /> and <paramref name="y" /> is not <see langword="null" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="67b68-151">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-151">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="67b68-152">
                  <paramref name="x" /> jest równa <paramref name="y" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-152">
                    <paramref name="x" /> is equal to <paramref name="y" />.</span>
                </span>
                <span data-ttu-id="67b68-153">—lub—</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-153">-or-</span>
                </span>
                <span data-ttu-id="67b68-154">
                  <paramref name="x" /> i <paramref name="y" /> są <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-154">
                    <paramref name="x" /> and <paramref name="y" /> are both <see langword="null" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="67b68-155">Większe od zera</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-155">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="67b68-156">
                  <paramref name="x" /> następuje <paramref name="y" /> w porządku sortowania.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-156">
                    <paramref name="x" /> follows <paramref name="y" /> in the sort order.</span>
                </span>
                <span data-ttu-id="67b68-157">—lub—</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-157">-or-</span>
                </span>
                <span data-ttu-id="67b68-158">
                  <paramref name="y" /> jest <see langword="null" /> i <paramref name="x" /> nie <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="67b68-158">
                    <paramref name="y" /> is <see langword="null" /> and <paramref name="x" /> is not <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-159"><xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> Metody jest nieco bardziej efektywne niż <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> metody ponieważ konwersja `x` i `y` argumenty są wymagane do wykonania porównania.</span><span class="sxs-lookup"><span data-stu-id="67b68-159">The <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method is slightly more efficient than the <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method because no conversion of the `x` and `y` arguments is needed to perform the comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static StringComparer Create (System.Globalization.CultureInfo culture, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer Create(class System.Globalization.CultureInfo culture, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (culture As CultureInfo, ignoreCase As Boolean) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ Create(System::Globalization::CultureInfo ^ culture, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Create : System.Globalization.CultureInfo * bool -&gt; StringComparer" Usage="System.StringComparer.Create (culture, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="67b68-160">Kultura, w których językowej zasady są używane do wykonywania porównania ciągów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-160">A culture whose linguistic rules are used to perform a string comparison.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="67b68-161">
            <see langword="true" /> Aby określić operacji porównania bez uwzględniania wielkości liter; <see langword="false" /> Aby określić, że porównanie operacje być uwzględniana wielkość liter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-161">
              <see langword="true" /> to specify that comparison operations be case-insensitive; <see langword="false" /> to specify that comparison operations be case-sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67b68-162">Tworzy <see cref="T:System.StringComparer" /> obiekt, który porównuje ciągi zgodnie z regułami określonej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-162">Creates a <see cref="T:System.StringComparer" /> object that compares strings according to the rules of a specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67b68-163">Nowy <see cref="T:System.StringComparer" /> obiekt, który wykonuje porównania ciągów, zgodnie z regułami porównania posługują się <paramref name="culture" /> parametr i reguły wielkości liter, określonej przez <paramref name="ignoreCase" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-163">A new <see cref="T:System.StringComparer" /> object that performs string comparisons according to the comparison rules used by the <paramref name="culture" /> parameter and the case rule specified by the <paramref name="ignoreCase" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67b68-164">Poniższy przykład kodu pokazuje właściwości i <xref:System.StringComparer.Create%2A> metody <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-164">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="67b68-165">W przykładzie pokazano jak różne <xref:System.StringComparer> obiektów sortują trzy wersje Łacińskiej litery I.</span><span class="sxs-lookup"><span data-stu-id="67b68-165">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67b68-166">
            <paramref name="culture" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-166">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static StringComparer Create (System.Globalization.CultureInfo culture, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer Create(class System.Globalization.CultureInfo culture, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (culture As CultureInfo, options As CompareOptions) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ Create(System::Globalization::CultureInfo ^ culture, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="static member Create : System.Globalization.CultureInfo * System.Globalization.CompareOptions -&gt; StringComparer" Usage="System.StringComparer.Create (culture, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="culture">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static StringComparer CurrentCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCulture As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ CurrentCulture { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : StringComparer" Usage="System.StringComparer.CurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67b68-167">Pobiera <see cref="T:System.StringComparer" /> obiekt, który wykonuje porównanie ciągu z uwzględnieniem wielkości liter, za pomocą reguł porównywania word bieżącej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-167">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive string comparison using the word comparison rules of the current culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67b68-168">Nowy <see cref="T:System.StringComparer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-168">A new <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-169"><xref:System.StringComparer> Zwrócone przez <xref:System.StringComparer.CurrentCulture%2A> właściwość może być używana w przypadku ciągów lingwistycznie.</span><span class="sxs-lookup"><span data-stu-id="67b68-169">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.CurrentCulture%2A> property can be used when strings are linguistically relevant.</span></span> <span data-ttu-id="67b68-170">Na przykład jeśli ciągi są wyświetlane użytkownikowi lub jeśli ciągi są wynikiem interakcji z użytkownikiem, porównania ciągów zależne od kultury powinny służyć do porządkowania danych ciągu.</span><span class="sxs-lookup"><span data-stu-id="67b68-170">For example, if strings are displayed to the user, or if strings are the result of user interaction, culture-sensitive string comparison should be used to order the string data.</span></span>  
  
 <span data-ttu-id="67b68-171">Bieżącą kulturą jest <xref:System.Globalization.CultureInfo> obiekt skojarzony z bieżącym wątkiem.</span><span class="sxs-lookup"><span data-stu-id="67b68-171">The current culture is the <xref:System.Globalization.CultureInfo> object associated with the current thread.</span></span>  
  
 <span data-ttu-id="67b68-172"><xref:System.StringComparer.CurrentCulture%2A> Właściwość faktycznie Zwraca wystąpienie klasy anonimowe pochodną <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-172">The <xref:System.StringComparer.CurrentCulture%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 <span data-ttu-id="67b68-173">Każde wywołanie <xref:System.StringComparer.CurrentCulture%2A> właściwość `get` akcesor zwraca nowy <xref:System.StringComparer> obiektu, co ilustruje poniższy kod.</span><span class="sxs-lookup"><span data-stu-id="67b68-173">Each call to the <xref:System.StringComparer.CurrentCulture%2A> property `get` accessor returns a new <xref:System.StringComparer> object, as the following code shows.</span></span>  
  
 [!code-csharp[System.StringComparer.CurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/cs/CompareObjects.cs#1)]
 [!code-vb[System.StringComparer.CurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/vb/CompareObjects.vb#1)]  
  
 <span data-ttu-id="67b68-174">Aby zwiększyć wydajność, można przechowywać <xref:System.StringComparer> obiektu w zmiennej lokalnej, zamiast pobierać wartości <xref:System.StringComparer.CurrentCulture%2A> właściwość wiele razy.</span><span class="sxs-lookup"><span data-stu-id="67b68-174">To improve performance, you can store the <xref:System.StringComparer> object in a local variable rather than retrieve the value of the <xref:System.StringComparer.CurrentCulture%2A> property multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67b68-175">Poniższy przykład kodu pokazuje właściwości i <xref:System.StringComparer.Create%2A> metody <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-175">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="67b68-176">W przykładzie pokazano jak różne <xref:System.StringComparer> obiektów sortują trzy wersje Łacińskiej litery I.</span><span class="sxs-lookup"><span data-stu-id="67b68-176">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="67b68-177">Najlepsze praktyki używania ciągów w programie .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-177">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCultureIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer CurrentCultureIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer CurrentCultureIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.CurrentCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCultureIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ CurrentCultureIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCultureIgnoreCase : StringComparer" Usage="System.StringComparer.CurrentCultureIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67b68-178">Pobiera <see cref="T:System.StringComparer" /> obiekt, który wykonuje porównania bez uwzględniania wielkości liter ciągu za pomocą reguł porównywania word bieżącej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-178">Gets a <see cref="T:System.StringComparer" /> object that performs case-insensitive string comparisons using the word comparison rules of the current culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67b68-179">Nowy <see cref="T:System.StringComparer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-179">A new <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-180">Bieżącą kulturą jest <xref:System.Globalization.CultureInfo> obiekt skojarzony z bieżącym wątkiem.</span><span class="sxs-lookup"><span data-stu-id="67b68-180">The current culture is the <xref:System.Globalization.CultureInfo> object associated with the current thread.</span></span>  
  
 <span data-ttu-id="67b68-181"><xref:System.StringComparer> Zwrócone przez <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> właściwość może być używana, jeśli ciągi są lingwistycznie, ale nie widać ich przypadku.</span><span class="sxs-lookup"><span data-stu-id="67b68-181">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property can be used when strings are linguistically relevant but their case is not.</span></span> <span data-ttu-id="67b68-182">Na przykład jeśli ciągi są wyświetlane użytkownikowi, ale wielkość liter jest ważne, wrażliwość na ustawienia kulturowe, porównanie bez uwzględniania wielkości liter ciągu powinna służyć do porządkowania danych ciągu.</span><span class="sxs-lookup"><span data-stu-id="67b68-182">For example, if strings are displayed to the user but case is unimportant, culture-sensitive, case-insensitive string comparison should be used to order the string data.</span></span>  
  
 <span data-ttu-id="67b68-183"><xref:System.StringComparer.CurrentCultureIgnoreCase%2A> Właściwość faktycznie Zwraca wystąpienie klasy anonimowe pochodną <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-183">The <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 <span data-ttu-id="67b68-184">Każde wywołanie <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> właściwość `get` akcesor zwraca nowy <xref:System.StringComparer> obiektu, co ilustruje poniższy kod.</span><span class="sxs-lookup"><span data-stu-id="67b68-184">Each call to the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property `get` accessor returns a new <xref:System.StringComparer> object, as the following code shows.</span></span>  
  
 [!code-csharp[System.StringComparer.CurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/cs/CompareObjects.cs#2)]
 [!code-vb[System.StringComparer.CurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/vb/CompareObjects.vb#2)]  
  
 <span data-ttu-id="67b68-185">Aby zwiększyć wydajność, można przechowywać <xref:System.StringComparer> obiektu w zmiennej lokalnej, zamiast pobierać wartości <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> właściwość wiele razy.</span><span class="sxs-lookup"><span data-stu-id="67b68-185">To improve performance, you can store the <xref:System.StringComparer> object in a local variable rather than retrieve the value of the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="67b68-186">Najlepsze praktyki używania ciągów w programie .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-186">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="67b68-187">W przypadku przesłonięcia w klasie pochodnej, wskazuje, czy dwa obiekty lub ciągi są równe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-187">When overridden in a derived class, indicates whether two objects or strings are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As Object, y As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj * obj -&gt; bool" Usage="stringComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="67b68-188">Obiekt do porównania z <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-188">An object to compare to <paramref name="y" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="67b68-189">Obiekt do porównania z <paramref name="x" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-189">An object to compare to <paramref name="x" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67b68-190">W przypadku przesłonięcia w klasie pochodnej, wskazuje, czy dwa obiekty są takie same.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-190">When overridden in a derived class, indicates whether two objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67b68-191">
            <see langword="true" /> Jeśli <paramref name="x" /> i <paramref name="y" /> odnoszą się do tego samego obiektu lub <paramref name="x" /> i <paramref name="y" /> są tego samego typu obiektu i te obiekty są równe, i / lub <paramref name="x" /> i <paramref name="y" /> są <see langword="null" />; w przeciwnym razie <see langword="false" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-191">
              <see langword="true" /> if <paramref name="x" /> and <paramref name="y" /> refer to the same object, or <paramref name="x" /> and <paramref name="y" /> are both the same type of object and those objects are equal, or both <paramref name="x" /> and <paramref name="y" /> are <see langword="null" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-192">Ponieważ środowisko wykonawcze nie będzie musiał rozpakowania `x` lub `y` jeśli są typami wartości lub spróbować do takiej `x` lub `y` na ciągi, jeśli są typami odwołań, <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> metoda może być nieco bardziej efektywne niż <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> metody.</span><span class="sxs-lookup"><span data-stu-id="67b68-192">Because the runtime does not have to unbox `x` or `y` if they are value types or attempt to downcast `x` or `y` to strings if they are reference types, the <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> method may be slightly more efficient than the <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (string x, string y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string x, string y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Equals(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As String, y As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(System::String ^ x, System::String ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : string * string -&gt; bool" Usage="stringComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
        <Parameter Name="y" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="67b68-193">Ciąg do porównania z <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-193">A string to compare to <paramref name="y" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="67b68-194">Ciąg do porównania z <paramref name="x" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-194">A string to compare to <paramref name="x" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67b68-195">W przypadku przesłonięcia w klasie pochodnej, wskazuje, czy dwa ciągi są równe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-195">When overridden in a derived class, indicates whether two strings are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67b68-196">
            <see langword="true" /> Jeśli <paramref name="x" /> i <paramref name="y" /> odnoszą się do tego samego obiektu lub <paramref name="x" /> i <paramref name="y" /> są takie same lub <paramref name="x" /> i <paramref name="y" /> są <see langword="null" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-196">
              <see langword="true" /> if <paramref name="x" /> and <paramref name="y" /> refer to the same object, or <paramref name="x" /> and <paramref name="y" /> are equal, or <paramref name="x" /> and <paramref name="y" /> are <see langword="null" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-197">Ponieważ środowisko wykonawcze nie będzie musiał rozpakowania `x` lub `y` jeśli są typami wartości lub spróbować do takiej `x` lub `y` na ciągi, jeśli są typami odwołań, <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> metoda może być nieco bardziej efektywne niż <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> metody.</span><span class="sxs-lookup"><span data-stu-id="67b68-197">Because the runtime does not have to unbox `x` or `y` if they are value types or attempt to downcast `x` or `y` to strings if they are reference types, the <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> method may be slightly more efficient than the <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromComparison">
      <MemberSignature Language="C#" Value="public static StringComparer FromComparison (StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer FromComparison(valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.FromComparison(System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromComparison (comparisonType As StringComparison) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ FromComparison(StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member FromComparison : StringComparison -&gt; StringComparer" Usage="System.StringComparer.FromComparison comparisonType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="67b68-198">W przypadku przesłonięcia w klasie pochodnej pobiera wartość skrótu dla bieżącego <see cref="T:System.StringComparer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-198">When overridden in a derived class, gets the hash code for the current <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : obj -&gt; int" Usage="stringComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="67b68-199">Obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-199">An object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67b68-200">Po przesłonięciu w klasie pochodnej pobiera wartość skrótu dla określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-200">When overridden in a derived class, gets the hash code for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67b68-201">Kod 32-bitowy skrót podpisanego obliczonym na podstawie wartości <paramref name="obj" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-201">A 32-bit signed hash code calculated from the value of the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-202"><xref:System.StringComparer.GetHashCode%28System.String%29> Metody jest bardziej wydajne niż <xref:System.StringComparer.GetHashCode%2A> metody ponieważ `obj` parametr nie ma być rozpakowany do wykonania tej operacji.</span><span class="sxs-lookup"><span data-stu-id="67b68-202">The <xref:System.StringComparer.GetHashCode%28System.String%29> method is more efficient than the <xref:System.StringComparer.GetHashCode%2A> method because the `obj` parameter does not have to be unboxed to perform the operation.</span></span>  
  
 <span data-ttu-id="67b68-203"><xref:System.StringComparer.GetHashCode%28System.Object%29> Metoda przydziela ilość pamięci, który jest proporcjonalny do rozmiaru `obj` do obliczania skrótu `obj`.</span><span class="sxs-lookup"><span data-stu-id="67b68-203">The <xref:System.StringComparer.GetHashCode%28System.Object%29> method allocates an amount of memory that is proportional to the size of `obj` to calculate the hash code of `obj`.</span></span> <span data-ttu-id="67b68-204">W przypadku dużych ciągów próby pobrania skrótu może zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="67b68-204">In the case of large strings, trying to retrieve the hash code can throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="67b68-205">Zamiast tego można użyć alternatywnego algorytmu, który przydziela stałą ilość pamięci podczas obliczania kodów wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="67b68-205">Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</span></span> <span data-ttu-id="67b68-206">Aby użyć tego algorytmu, Dodaj [< NetFx45_CultureAwareComparerGetHashCode_LongStrings >](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) elementu [ \<runtime >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) sekcję pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="67b68-206">To use this algorithm, add the [<NetFx45_CultureAwareComparerGetHashCode_LongStrings>](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="67b68-207">Nie ma wystarczającej ilości pamięci jest dostępny, można przydzielić bufora, który jest wymagany do Oblicz wartość skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-207">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67b68-208">
            <paramref name="obj" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-208">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="  &#xA;            T:System.ArgumentException">
          <span data-ttu-id="67b68-209">Nie ma wystarczającej ilości pamięci jest dostępny, można przydzielić bufora, który jest wymagany do Oblicz wartość skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-209">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (string obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.GetHashCode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(System::String ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : string -&gt; int" Usage="stringComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="67b68-210">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-210">A string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67b68-211">Po przesłonięciu w klasie pochodnej pobiera wartość skrótu dla określonego ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-211">When overridden in a derived class, gets the hash code for the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67b68-212">Kod 32-bitowy skrót podpisanego obliczonym na podstawie wartości <paramref name="obj" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-212">A 32-bit signed hash code calculated from the value of the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-213"><xref:System.StringComparer.GetHashCode%28System.String%29> Metody jest bardziej wydajne niż <xref:System.StringComparer.GetHashCode%28System.Object%29> metody ponieważ `obj` parametr nie ma być rozpakowany do wykonania tej operacji.</span><span class="sxs-lookup"><span data-stu-id="67b68-213">The <xref:System.StringComparer.GetHashCode%28System.String%29> method is more efficient than the <xref:System.StringComparer.GetHashCode%28System.Object%29> method because the `obj` parameter does not have to be unboxed to perform the operation.</span></span>  
  
 <span data-ttu-id="67b68-214"><xref:System.StringComparer.GetHashCode%28System.String%29> Metoda przydziela ilość pamięci, który jest proporcjonalny do rozmiaru `obj` do obliczania skrótu `obj`.</span><span class="sxs-lookup"><span data-stu-id="67b68-214">The <xref:System.StringComparer.GetHashCode%28System.String%29> method allocates an amount of memory that is proportional to the size of `obj` to calculate the hash code of `obj`.</span></span> <span data-ttu-id="67b68-215">W przypadku dużych ciągów próby pobrania skrótu może zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="67b68-215">In the case of large strings, trying to retrieve the hash code can throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="67b68-216">Zamiast tego można użyć alternatywnego algorytmu, który przydziela stałą ilość pamięci podczas obliczania kodów wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="67b68-216">Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</span></span> <span data-ttu-id="67b68-217">Aby użyć tego algorytmu, Dodaj [< NetFx45_CultureAwareComparerGetHashCode_LongStrings >](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) elementu [ \<runtime >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) sekcję pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="67b68-217">To use this algorithm, add the [<NetFx45_CultureAwareComparerGetHashCode_LongStrings>](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="67b68-218">Nie ma wystarczającej ilości pamięci jest dostępny, można przydzielić bufora, który jest wymagany do Oblicz wartość skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-218">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67b68-219">
            <paramref name="obj" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-219">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="  &#xA;            T:System.ArgumentException">
          <span data-ttu-id="67b68-220">Nie ma wystarczającej ilości pamięci jest dostępny, można przydzielić bufora, który jest wymagany do Oblicz wartość skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-220">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static StringComparer InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ InvariantCulture { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCulture : StringComparer" Usage="System.StringComparer.InvariantCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67b68-221">Pobiera <see cref="T:System.StringComparer" /> obiekt, który wykonuje porównanie ciągu z uwzględnieniem wielkości liter, za pomocą reguł porównywania word niezmiennej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-221">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive string comparison using the word comparison rules of the invariant culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67b68-222">Nowy <see cref="T:System.StringComparer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-222">A new <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-223"><xref:System.StringComparer> Zwrócone przez <xref:System.StringComparer.InvariantCulture%2A> właściwość porównuje ciągi w sposób lingwistycznie, ale nie nadaje się do wyświetlenia w żadnej określonej kultury.</span><span class="sxs-lookup"><span data-stu-id="67b68-223">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.InvariantCulture%2A> property compares strings in a linguistically relevant manner, but it is not suitable for display in any particular culture.</span></span> <span data-ttu-id="67b68-224">Jego główne aplikacji jest kolejności ciągów w taki sposób, że będą identyczne różnych kultur.</span><span class="sxs-lookup"><span data-stu-id="67b68-224">Its major application is to order strings in a way that will be identical across cultures.</span></span>  
  
 <span data-ttu-id="67b68-225">Niezmienna kultura jest <xref:System.Globalization.CultureInfo> obiektu zwróconego przez <xref:System.Globalization.CultureInfo.InvariantCulture%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="67b68-225">The invariant culture is the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="67b68-226"><xref:System.StringComparer.InvariantCulture%2A> Właściwość faktycznie Zwraca wystąpienie klasy anonimowe pochodną <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-226">The <xref:System.StringComparer.InvariantCulture%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67b68-227">Poniższy przykład kodu pokazuje właściwości i <xref:System.StringComparer.Create%2A> metody <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-227">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="67b68-228">W przykładzie pokazano jak różne <xref:System.StringComparer> obiektów sortują trzy wersje Łacińskiej litery I.</span><span class="sxs-lookup"><span data-stu-id="67b68-228">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="67b68-229">Najlepsze praktyki używania ciągów w programie .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-229">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InvariantCultureIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer InvariantCultureIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer InvariantCultureIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.InvariantCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCultureIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ InvariantCultureIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCultureIgnoreCase : StringComparer" Usage="System.StringComparer.InvariantCultureIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67b68-230">Pobiera <see cref="T:System.StringComparer" /> obiekt, który wykonuje porównania bez uwzględniania wielkości liter ciągu za pomocą reguł porównywania word niezmiennej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-230">Gets a <see cref="T:System.StringComparer" /> object that performs a case-insensitive string comparison using the word comparison rules of the invariant culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67b68-231">Nowy <see cref="T:System.StringComparer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-231">A new <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-232"><xref:System.StringComparer> Zwrócone przez <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> właściwość porównuje ciągi w sposób lingwistycznie, które ignoruje wielkość liter, ale nie nadaje się do wyświetlenia w żadnej określonej kultury.</span><span class="sxs-lookup"><span data-stu-id="67b68-232">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> property compares strings in a linguistically relevant manner that ignores case, but it is not suitable for display in any particular culture.</span></span> <span data-ttu-id="67b68-233">Jego główne aplikacji jest kolejności ciągów w taki sposób, że będą identyczne różnych kultur.</span><span class="sxs-lookup"><span data-stu-id="67b68-233">Its major application is to order strings in a way that will be identical across cultures.</span></span>  
  
 <span data-ttu-id="67b68-234">Niezmienna kultura jest <xref:System.Globalization.CultureInfo> obiektu zwróconego przez <xref:System.Globalization.CultureInfo.InvariantCulture%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="67b68-234">The invariant culture is the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="67b68-235"><xref:System.StringComparer.InvariantCultureIgnoreCase%2A> Właściwość faktycznie Zwraca wystąpienie klasy anonimowe pochodną <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-235">The <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="67b68-236">Najlepsze praktyki używania ciągów w programie .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-236">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public static StringComparer Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Ordinal As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ Ordinal { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : StringComparer" Usage="System.StringComparer.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67b68-237">Pobiera <see cref="T:System.StringComparer" /> obiekt, który wykonuje porównanie ciągach porządkowych uwzględniana wielkość liter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-237">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive ordinal string comparison.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67b68-238">Element <see cref="T:System.StringComparer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-238">A <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-239"><xref:System.StringComparer> Zwrócone przez <xref:System.StringComparer.Ordinal%2A> właściwość wykonuje porównanie jednobajtowych, który jest niezależny od języka.</span><span class="sxs-lookup"><span data-stu-id="67b68-239">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.Ordinal%2A> property performs a simple byte comparison that is independent of language.</span></span> <span data-ttu-id="67b68-240">Jest to najbardziej odpowiednie w przypadku, gdy porównywanie ciągów, które są generowane, programowo, albo podczas porównywania liter zasoby, takie jak hasła.</span><span class="sxs-lookup"><span data-stu-id="67b68-240">This is most appropriate when comparing strings that are generated programmatically or when comparing case-sensitive resources such as passwords.</span></span>  
  
 <span data-ttu-id="67b68-241"><xref:System.StringComparer.Ordinal%2A> Właściwość faktycznie Zwraca wystąpienie klasy anonimowe pochodną <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-241">The <xref:System.StringComparer.Ordinal%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67b68-242">Poniższy przykład kodu pokazuje właściwości i <xref:System.StringComparer.Create%2A> metody <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-242">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="67b68-243">W przykładzie pokazano jak różne <xref:System.StringComparer> obiektów sortują trzy wersje Łacińskiej litery I.</span><span class="sxs-lookup"><span data-stu-id="67b68-243">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="67b68-244">Najlepsze praktyki używania ciągów w programie .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-244">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OrdinalIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer OrdinalIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer OrdinalIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.OrdinalIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OrdinalIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ OrdinalIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrdinalIgnoreCase : StringComparer" Usage="System.StringComparer.OrdinalIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67b68-245">Pobiera <see cref="T:System.StringComparer" /> obiekt, który wykonuje porównania bez uwzględniania wielkości liter ciągach porządkowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-245">Gets a <see cref="T:System.StringComparer" /> object that performs a case-insensitive ordinal string comparison.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67b68-246">Element <see cref="T:System.StringComparer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-246">A <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b68-247"><xref:System.StringComparer> Zwrócone przez <xref:System.StringComparer.OrdinalIgnoreCase%2A> właściwość traktuje znaków w ciągach znaków, aby porównać tak, jakby one zostały przekonwertowane na wielkie litery za pomocą Konwencji kultury niezmiennej, a następnie wykonuje porównanie jednobajtowych, który jest niezależny od język.</span><span class="sxs-lookup"><span data-stu-id="67b68-247">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.OrdinalIgnoreCase%2A> property treats the characters in the strings to compare as if they were converted to uppercase using the conventions of the invariant culture, and then performs a simple byte comparison that is independent of language.</span></span> <span data-ttu-id="67b68-248">Jest to najbardziej odpowiednie w przypadku, gdy porównywanie ciągów, które są generowane programistycznie lub gdy porównanie bez uwzględniania wielkości liter zasobów, takich jak ścieżki i nazwy plików.</span><span class="sxs-lookup"><span data-stu-id="67b68-248">This is most appropriate when comparing strings that are generated programmatically or when comparing case-insensitive resources such as paths and filenames.</span></span>  
  
 <span data-ttu-id="67b68-249"><xref:System.StringComparer.OrdinalIgnoreCase%2A> Właściwość faktycznie Zwraca wystąpienie klasy anonimowe pochodną <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-249">The <xref:System.StringComparer.OrdinalIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67b68-250">Poniższy przykład kodu pokazuje właściwości i <xref:System.StringComparer.Create%2A> metody <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="67b68-250">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="67b68-251">W przykładzie pokazano jak różne <xref:System.StringComparer> obiektów sortują trzy wersje Łacińskiej litery I.</span><span class="sxs-lookup"><span data-stu-id="67b68-251">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="67b68-252">Najlepsze praktyki używania ciągów w programie .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="67b68-252">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>