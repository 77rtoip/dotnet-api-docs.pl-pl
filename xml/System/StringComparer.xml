<Type Name="StringComparer" FullName="System.StringComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9779a1a49153cd7ebfef7a77f2829a578a39ed5b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69419318" /></Metadata><TypeSignature Language="C#" Value="public abstract class StringComparer : System.Collections.Generic.IComparer&lt;string&gt;, System.Collections.Generic.IEqualityComparer&lt;string&gt;, System.Collections.IComparer, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit StringComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;string&gt;, class System.Collections.Generic.IEqualityComparer`1&lt;string&gt;, class System.Collections.IComparer, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.StringComparer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StringComparer&#xA;Implements IComparer, IComparer(Of String), IEqualityComparer, IEqualityComparer(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringComparer abstract : System::Collections::Generic::IComparer&lt;System::String ^&gt;, System::Collections::Generic::IEqualityComparer&lt;System::String ^&gt;, System::Collections::IComparer, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type StringComparer = class&#xA;    interface IComparer&#xA;    interface IEqualityComparer&#xA;    interface IComparer&lt;string&gt;&#xA;    interface IEqualityComparer&lt;string&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cdd3a-101">Reprezentuje operację porównywania ciągów, która używa określonych reguł porównywania wielkości liter i kulturowej lub porządkowej.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-101">Represents a string comparison operation that uses specific case and culture-based or ordinal comparison rules.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-102">Obiekt pochodny <xref:System.StringComparer> klasy opiera się na operacjach porównania, równości i kodu mieszania opartych na ciągach, które uwzględniają zarówno reguły porównania dotyczące wielkości liter, jak i kultury.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-102">An object derived from the <xref:System.StringComparer> class embodies string-based comparison, equality, and hash code operations that take into account both case and culture-specific comparison rules.</span></span> <span data-ttu-id="cdd3a-103">Można użyć klasy, <xref:System.StringComparer> aby utworzyć porównanie specyficzne dla typu w celu sortowania elementów w kolekcji ogólnej.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-103">You can use the <xref:System.StringComparer> class to create a type-specific comparison to sort the elements in a generic collection.</span></span> <span data-ttu-id="cdd3a-104">Klasy takie jak <xref:System.Collections.Hashtable> <xref:System.Collections.Generic.Dictionary%602>,, i<xref:System.Collections.Generic.SortedList%602> używają<xref:System.StringComparer>klasydosortowania. <xref:System.Collections.SortedList></span><span class="sxs-lookup"><span data-stu-id="cdd3a-104">Classes such as <xref:System.Collections.Hashtable>, <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.SortedList>, and <xref:System.Collections.Generic.SortedList%602> use the <xref:System.StringComparer> class for sorting purposes.</span></span>  
  
 <span data-ttu-id="cdd3a-105">Dla operacji porównywania reprezentowanej przez <xref:System.StringComparer> klasę jest definiowana wielkość liter lub wielkość liter, a także użyto reguł porównania programu Word (z uwzględnieniem kultury) lub liczby porządkowej (bez uwzględniania kultury).</span><span class="sxs-lookup"><span data-stu-id="cdd3a-105">A comparison operation that is represented by the <xref:System.StringComparer> class is defined to be either case-sensitive or case-insensitive, and use either word (culture-sensitive) or ordinal (culture-insensitive) comparison rules.</span></span> <span data-ttu-id="cdd3a-106">Aby uzyskać więcej informacji na temat reguł porównywania programów Word <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>i porządkowego, zobacz.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-106">For more information about word and ordinal comparison rules, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  

> [!NOTE]
> <span data-ttu-id="cdd3a-107">Można pobrać [tabele wagi sortowania](https://www.microsoft.com/download/details.aspx?id=10921), zestaw plików tekstowych, które zawierają informacje o wagach znaków używanych w operacjach sortowania i porównywania dla systemów operacyjnych Windows, a także [domyślną tabelę elementów sortowania Unicode](https://www.unicode.org/Public/UCA/latest/allkeys.txt), Najnowsza wersja tabeli Sortuj wagi dla systemów Linux i macOS.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-107">You can download the [Sorting Weight Tables](https://www.microsoft.com/download/details.aspx?id=10921), a set of text files that contain information on the character weights used in sorting and comparison operations for Windows operating systems, and the [Default Unicode Collation Element Table](https://www.unicode.org/Public/UCA/latest/allkeys.txt), the latest version of the sort weight table for Linux and macOS.</span></span> <span data-ttu-id="cdd3a-108">Określona wersja tabeli posortowanych wag w systemie Linux i macOS zależy od wersji [międzynarodowych składników dla bibliotek Unicode](http://site.icu-project.org/) zainstalowanych w systemie.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-108">The specific version of the sort weight table on Linux and macOS depends on the version of the [International Components for Unicode](http://site.icu-project.org/) libraries installed on the system.</span></span> <span data-ttu-id="cdd3a-109">Aby uzyskać informacje na temat wersji ICU i wersji standardu Unicode, które implementują, zobacz [pobieranie ICU](http://site.icu-project.org/download).</span><span class="sxs-lookup"><span data-stu-id="cdd3a-109">For information on ICU versions and the Unicode versions that they implement, see [Downloading ICU](http://site.icu-project.org/download).</span></span>

## <a name="implemented-properties"></a><span data-ttu-id="cdd3a-110">Zaimplementowane właściwości</span><span class="sxs-lookup"><span data-stu-id="cdd3a-110">Implemented properties</span></span>  

<span data-ttu-id="cdd3a-111">Można zamylić, jak używać <xref:System.StringComparer> właściwości klasy z powodu pozornego sprzeczności.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-111">You might be confused about how to use the <xref:System.StringComparer> class properties because of a seeming contradiction.</span></span> <span data-ttu-id="cdd3a-112">Klasa jest zadeklarowana `abstract` (`MustInherit` w Visual Basic), co oznacza, że jej składowe mogą być wywoływane tylko dla obiektu klasy pochodzącej od <xref:System.StringComparer> klasy. <xref:System.StringComparer></span><span class="sxs-lookup"><span data-stu-id="cdd3a-112">The <xref:System.StringComparer> class is declared `abstract` (`MustInherit` in Visual Basic), which means its members can be invoked only on an object of a class derived from the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="cdd3a-113">Sprzeczność polega na tym, że każda Właściwość <xref:System.StringComparer> klasy jest zadeklarowana`Shared` `static` (w Visual Basic), co oznacza, że właściwość może być wywoływana bez wcześniejszego tworzenia klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-113">The contradiction is that each property of the <xref:System.StringComparer> class is declared `static` (`Shared` in Visual Basic), which means the property can be invoked without first creating a derived class.</span></span>  
  
 <span data-ttu-id="cdd3a-114"><xref:System.StringComparer> Właściwość można wywołać bezpośrednio, ponieważ każda Właściwość faktycznie zwraca wystąpienie klasy anonimowej, która jest pochodną <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-114">You can call a <xref:System.StringComparer> property directly because each property actually returns an instance of an anonymous class that is derived from the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="cdd3a-115">W związku z tym typem każdej wartości właściwości jest <xref:System.StringComparer>, która jest klasą bazową klasy anonimowej, a nie typem samej klasy anonimowej.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-115">Consequently, the type of each property value is <xref:System.StringComparer>, which is the base class of the anonymous class, not the type of the anonymous class itself.</span></span> <span data-ttu-id="cdd3a-116">Każda <xref:System.StringComparer> właściwość klasy <xref:System.StringComparer> zwraca obiekt, który obsługuje wstępnie zdefiniowane reguły dotyczące wielkości liter i porównywania.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-116">Each <xref:System.StringComparer> class property returns a <xref:System.StringComparer> object that supports predefined case and comparison rules.</span></span>  
  
## Examples  

<span data-ttu-id="cdd3a-117">Poniższy przykład demonstruje właściwości i <xref:System.StringComparer.Create%2A> metodę <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-117">The following example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="cdd3a-118">W przykładzie pokazano, jak <xref:System.StringComparer> różne obiekty sortują trzy wersje łacińskich liter I.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-118">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.String" />
    <altmember cref="T:System.Globalization.CompareOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StringComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StringComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cdd3a-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.StringComparer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-119">Initializes a new instance of the <see cref="T:System.StringComparer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cdd3a-120">Porównuje dwa obiekty lub ciągi i zwraca wskazanie powiązanej kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-120">Compares two objects or strings and returns an indication of their relative sort order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As Object, y As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="stringComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="y" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="cdd3a-121">Obiekt do porównania <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-121">An object to compare to <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="cdd3a-122">Obiekt do porównania <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-122">An object to compare to <paramref name="x" />.</span></span></param>
        <summary><span data-ttu-id="cdd3a-123">Gdy jest zastępowany w klasie pochodnej, porównuje dwa obiekty i zwraca wskazanie powiązanej kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-123">When overridden in a derived class, compares two objects and returns an indication of their relative sort order.</span></span></summary>
        <returns><span data-ttu-id="cdd3a-124">Liczba całkowita ze znakiem, która wskazuje wartości <paramref name="x" /> względne i <paramref name="y" />, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-124">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cdd3a-125">Wartość</span><span class="sxs-lookup"><span data-stu-id="cdd3a-125">Value</span></span> 
 </term><description> <span data-ttu-id="cdd3a-126">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="cdd3a-126">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cdd3a-127">Mniej niż zero</span><span class="sxs-lookup"><span data-stu-id="cdd3a-127">Less than zero</span></span> 
 </term><description><span data-ttu-id="cdd3a-128"><paramref name="x" /><paramref name="y" /> poprzedza w kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-128"><paramref name="x" /> precedes  <paramref name="y" /> in the sort order.</span></span>  
  
<span data-ttu-id="cdd3a-129">—lub—</span><span class="sxs-lookup"><span data-stu-id="cdd3a-129">-or-</span></span> 
 <span data-ttu-id="cdd3a-130"><paramref name="x" />is <see langword="null" /> i <paramref name="y" /> nie<see langword="null" />jest.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-130"><paramref name="x" /> is <see langword="null" /> and <paramref name="y" /> is not <see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cdd3a-131">Zero</span><span class="sxs-lookup"><span data-stu-id="cdd3a-131">Zero</span></span> 
 </term><description><span data-ttu-id="cdd3a-132"><paramref name="x" />jest równe <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-132"><paramref name="x" /> is equal to <paramref name="y" />.</span></span>  
  
<span data-ttu-id="cdd3a-133">—lub—</span><span class="sxs-lookup"><span data-stu-id="cdd3a-133">-or-</span></span> 
 <span data-ttu-id="cdd3a-134"><paramref name="x" />i <paramref name="y" /> są oba <see langword="null" />te elementy.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-134"><paramref name="x" /> and <paramref name="y" /> are both <see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cdd3a-135">Większe od zera</span><span class="sxs-lookup"><span data-stu-id="cdd3a-135">Greater than zero</span></span> 
 </term><description><span data-ttu-id="cdd3a-136"><paramref name="x" />poniżej <paramref name="y" /> w kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-136"><paramref name="x" /> follows <paramref name="y" /> in the sort order.</span></span>  
  
<span data-ttu-id="cdd3a-137">—lub—</span><span class="sxs-lookup"><span data-stu-id="cdd3a-137">-or-</span></span> 
 <span data-ttu-id="cdd3a-138"><paramref name="y" />is <see langword="null" /> i <paramref name="x" /> nie<see langword="null" />jest.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-138"><paramref name="y" /> is <see langword="null" /> and <paramref name="x" /> is not <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-139">Metoda jest nieco bardziej wydajna niż Metoda <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> , `x` ponieważ konwersja argumentów i `y` nie jest wymagana do przeprowadzenia porównania. <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cdd3a-139">The <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method is slightly more efficient than the <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method because no conversion of the `x` and `y` arguments is needed to perform the comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cdd3a-140"><paramref name="x" /> Aninie<see cref="T:System.String" /> jestobiektem<paramref name="y" /> , <paramref name="x" /> ani nie implementuje<see cref="T:System.IComparable" /> interfejsu. <paramref name="y" /></span><span class="sxs-lookup"><span data-stu-id="cdd3a-140">Neither <paramref name="x" /> nor <paramref name="y" /> is a <see cref="T:System.String" /> object, and neither <paramref name="x" /> nor <paramref name="y" /> implements the <see cref="T:System.IComparable" /> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (string x, string y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string x, string y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As String, y As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(System::String ^ x, System::String ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string -&gt; int" Usage="stringComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
        <Parameter Name="y" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="cdd3a-141">Ciąg do porównania <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-141">A string to compare to <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="cdd3a-142">Ciąg do porównania <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-142">A string to compare to <paramref name="x" />.</span></span></param>
        <summary><span data-ttu-id="cdd3a-143">Gdy jest zastępowany w klasie pochodnej, porównuje dwa ciągi i zwraca wskazanie powiązanej kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-143">When overridden in a derived class, compares two strings and returns an indication of their relative sort order.</span></span></summary>
        <returns><span data-ttu-id="cdd3a-144">Liczba całkowita ze znakiem, która wskazuje wartości <paramref name="x" /> względne i <paramref name="y" />, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-144">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cdd3a-145">Wartość</span><span class="sxs-lookup"><span data-stu-id="cdd3a-145">Value</span></span> 
 </term><description> <span data-ttu-id="cdd3a-146">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="cdd3a-146">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cdd3a-147">Mniej niż zero</span><span class="sxs-lookup"><span data-stu-id="cdd3a-147">Less than zero</span></span> 
 </term><description><span data-ttu-id="cdd3a-148"><paramref name="x" /><paramref name="y" /> poprzedza w kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-148"><paramref name="x" /> precedes <paramref name="y" /> in the sort order.</span></span>  
  
<span data-ttu-id="cdd3a-149">—lub—</span><span class="sxs-lookup"><span data-stu-id="cdd3a-149">-or-</span></span> 
 <span data-ttu-id="cdd3a-150"><paramref name="x" />is <see langword="null" /> i <paramref name="y" /> nie<see langword="null" />jest.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-150"><paramref name="x" /> is <see langword="null" /> and <paramref name="y" /> is not <see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cdd3a-151">Zero</span><span class="sxs-lookup"><span data-stu-id="cdd3a-151">Zero</span></span> 
 </term><description><span data-ttu-id="cdd3a-152"><paramref name="x" />jest równe <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-152"><paramref name="x" /> is equal to <paramref name="y" />.</span></span>  
  
<span data-ttu-id="cdd3a-153">—lub—</span><span class="sxs-lookup"><span data-stu-id="cdd3a-153">-or-</span></span> 
 <span data-ttu-id="cdd3a-154"><paramref name="x" />i <paramref name="y" /> są oba <see langword="null" />te elementy.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-154"><paramref name="x" /> and <paramref name="y" /> are both <see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cdd3a-155">Większe od zera</span><span class="sxs-lookup"><span data-stu-id="cdd3a-155">Greater than zero</span></span> 
 </term><description><span data-ttu-id="cdd3a-156"><paramref name="x" />poniżej <paramref name="y" /> w kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-156"><paramref name="x" /> follows <paramref name="y" /> in the sort order.</span></span>  
  
<span data-ttu-id="cdd3a-157">—lub—</span><span class="sxs-lookup"><span data-stu-id="cdd3a-157">-or-</span></span> 
 <span data-ttu-id="cdd3a-158"><paramref name="y" />is <see langword="null" /> i <paramref name="x" /> nie<see langword="null" />jest.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-158"><paramref name="y" /> is <see langword="null" /> and <paramref name="x" /> is not <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-159">Metoda jest nieco bardziej wydajna niż Metoda <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> , `x` ponieważ konwersja argumentów i `y` nie jest wymagana do przeprowadzenia porównania. <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cdd3a-159">The <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method is slightly more efficient than the <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method because no conversion of the `x` and `y` arguments is needed to perform the comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static StringComparer Create (System.Globalization.CultureInfo culture, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer Create(class System.Globalization.CultureInfo culture, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (culture As CultureInfo, ignoreCase As Boolean) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ Create(System::Globalization::CultureInfo ^ culture, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Create : System.Globalization.CultureInfo * bool -&gt; StringComparer" Usage="System.StringComparer.Create (culture, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="cdd3a-160">Kultura, której reguły językowe są używane do przeprowadzenia porównania ciągów.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-160">A culture whose linguistic rules are used to perform a string comparison.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="cdd3a-161"><see langword="true" />Aby określić, że operacje porównania mają być bez uwzględniania wielkości liter; <see langword="false" /> aby określić, że operacje porównania mają uwzględniać wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-161"><see langword="true" /> to specify that comparison operations be case-insensitive; <see langword="false" /> to specify that comparison operations be case-sensitive.</span></span></param>
        <summary><span data-ttu-id="cdd3a-162"><see cref="T:System.StringComparer" /> Tworzy obiekt, który porównuje ciągi zgodnie z regułami określonej kultury.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-162">Creates a <see cref="T:System.StringComparer" /> object that compares strings according to the rules of a specified culture.</span></span></summary>
        <returns><span data-ttu-id="cdd3a-163">Nowy <see cref="T:System.StringComparer" /> obiekt wykonujący porównania ciągów zgodnie z regułami porównania używanymi <paramref name="culture" /> przez parametr i regułę <paramref name="ignoreCase" /> przypadku określonym przez parametr.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-163">A new <see cref="T:System.StringComparer" /> object that performs string comparisons according to the comparison rules used by the <paramref name="culture" /> parameter and the case rule specified by the <paramref name="ignoreCase" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cdd3a-164">Poniższy przykład kodu demonstruje właściwości i <xref:System.StringComparer.Create%2A> metody <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-164">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="cdd3a-165">W przykładzie pokazano, jak <xref:System.StringComparer> różne obiekty sortują trzy wersje łacińskich liter I.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-165">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cdd3a-166"><paramref name="culture" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-166"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static StringComparer Create (System.Globalization.CultureInfo culture, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer Create(class System.Globalization.CultureInfo culture, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (culture As CultureInfo, options As CompareOptions) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ Create(System::Globalization::CultureInfo ^ culture, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="static member Create : System.Globalization.CultureInfo * System.Globalization.CompareOptions -&gt; StringComparer" Usage="System.StringComparer.Create (culture, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static StringComparer CurrentCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCulture As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ CurrentCulture { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : StringComparer" Usage="System.StringComparer.CurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdd3a-167"><see cref="T:System.StringComparer" /> Pobiera obiekt, który wykonuje porównanie ciągów z uwzględnieniem wielkości liter przy użyciu reguł porównania wyrazów bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-167">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive string comparison using the word comparison rules of the current culture.</span></span></summary>
        <value><span data-ttu-id="cdd3a-168">Nowy <see cref="T:System.StringComparer" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-168">A new <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-169"><xref:System.StringComparer> Zwracanej<xref:System.StringComparer.CurrentCulture%2A> przez właściwość można użyć, gdy ciągi są odpowiednie dla języków.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-169">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.CurrentCulture%2A> property can be used when strings are linguistically relevant.</span></span> <span data-ttu-id="cdd3a-170">Jeśli na przykład ciągi są wyświetlane użytkownikowi lub ciągi są wynikiem interakcji z użytkownikiem, należy użyć porównania ciągów z uwzględnieniem kultury, aby zamówić dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-170">For example, if strings are displayed to the user, or if strings are the result of user interaction, culture-sensitive string comparison should be used to order the string data.</span></span>  
  
 <span data-ttu-id="cdd3a-171">Bieżąca kultura jest <xref:System.Globalization.CultureInfo> obiektem skojarzonym z bieżącym wątkiem.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-171">The current culture is the <xref:System.Globalization.CultureInfo> object associated with the current thread.</span></span>  
  
 <span data-ttu-id="cdd3a-172">Właściwość faktycznie zwraca wystąpienie klasy anonimowej pochodnej <xref:System.StringComparer> od klasy. <xref:System.StringComparer.CurrentCulture%2A></span><span class="sxs-lookup"><span data-stu-id="cdd3a-172">The <xref:System.StringComparer.CurrentCulture%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 <span data-ttu-id="cdd3a-173">Każde wywołanie metody dostępu <xref:System.StringComparer.CurrentCulture%2A> do `get` właściwości zwraca nowy <xref:System.StringComparer> obiekt, jak pokazano w poniższym kodzie.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-173">Each call to the <xref:System.StringComparer.CurrentCulture%2A> property `get` accessor returns a new <xref:System.StringComparer> object, as the following code shows.</span></span>  
  
 [!code-csharp[System.StringComparer.CurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/cs/CompareObjects.cs#1)]
 [!code-vb[System.StringComparer.CurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/vb/CompareObjects.vb#1)]  
  
 <span data-ttu-id="cdd3a-174">Aby zwiększyć wydajność, można przechowywać <xref:System.StringComparer> obiekt w zmiennej lokalnej, zamiast pobierać wartość <xref:System.StringComparer.CurrentCulture%2A> właściwości wiele razy.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-174">To improve performance, you can store the <xref:System.StringComparer> object in a local variable rather than retrieve the value of the <xref:System.StringComparer.CurrentCulture%2A> property multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdd3a-175">Poniższy przykład kodu demonstruje właściwości i <xref:System.StringComparer.Create%2A> metody <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-175">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="cdd3a-176">W przykładzie pokazano, jak <xref:System.StringComparer> różne obiekty sortują trzy wersje łacińskich liter I.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-176">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="cdd3a-177">Najlepsze rozwiązania dotyczące używania ciągów w programie .NET</span><span class="sxs-lookup"><span data-stu-id="cdd3a-177">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCultureIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer CurrentCultureIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer CurrentCultureIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.CurrentCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCultureIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ CurrentCultureIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCultureIgnoreCase : StringComparer" Usage="System.StringComparer.CurrentCultureIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdd3a-178"><see cref="T:System.StringComparer" /> Pobiera obiekt, który wykonuje porównania ciągów bez uwzględniania wielkości liter przy użyciu reguł porównania wyrazów bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-178">Gets a <see cref="T:System.StringComparer" /> object that performs case-insensitive string comparisons using the word comparison rules of the current culture.</span></span></summary>
        <value><span data-ttu-id="cdd3a-179">Nowy obiekt do porównania ciągów.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-179">A new object for string comparison.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-180">Bieżąca kultura jest <xref:System.Globalization.CultureInfo> obiektem skojarzonym z bieżącym wątkiem. jest on zwracany <xref:System.Globalization.CultureInfo.CurrentCulture?displayProperty=nameWithType> przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-180">The current culture is the <xref:System.Globalization.CultureInfo> object associated with the current thread; it is returned by the <xref:System.Globalization.CultureInfo.CurrentCulture?displayProperty=nameWithType> property.</span></span>
  
 <span data-ttu-id="cdd3a-181"><xref:System.StringComparer> Zwracanej<xref:System.StringComparer.CurrentCultureIgnoreCase%2A> przez właściwość można użyć, gdy ciągi są istotne dla języka, ale ich wielkość liter nie jest.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-181">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property can be used when strings are linguistically relevant but their case is not.</span></span> <span data-ttu-id="cdd3a-182">Jeśli na przykład ciągi są wyświetlane dla użytkownika, ale wielkość liter nie jest istotna, Porównywanie ciągów bez uwzględniania wielkości liter nie powinno być używane do porządkowania danych ciągu.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-182">For example, if strings are displayed to the user but case is unimportant, culture-sensitive, case-insensitive string comparison should be used to order the string data.</span></span>  

[!INCLUDE[platform-note](~/includes/c-and-posix-cultures.md)]  

 <span data-ttu-id="cdd3a-183">Właściwość faktycznie zwraca wystąpienie klasy anonimowej pochodnej <xref:System.StringComparer> od klasy. <xref:System.StringComparer.CurrentCultureIgnoreCase%2A></span><span class="sxs-lookup"><span data-stu-id="cdd3a-183">The <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 <span data-ttu-id="cdd3a-184">Każde wywołanie metody dostępu <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> do `get` właściwości zwraca nowy <xref:System.StringComparer> obiekt, jak pokazano w poniższym kodzie.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-184">Each call to the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property `get` accessor returns a new <xref:System.StringComparer> object, as the following code shows.</span></span>  
  
 [!code-csharp[System.StringComparer.CurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/cs/CompareObjects.cs#2)]
 [!code-vb[System.StringComparer.CurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/vb/CompareObjects.vb#2)]  
  
 <span data-ttu-id="cdd3a-185">Aby zwiększyć wydajność, można przechowywać <xref:System.StringComparer> obiekt w zmiennej lokalnej, zamiast pobierać wartość <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> właściwości wiele razy.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-185">To improve performance, you can store the <xref:System.StringComparer> object in a local variable rather than retrieve the value of the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="cdd3a-186">Najlepsze rozwiązania dotyczące używania ciągów w programie .NET</span><span class="sxs-lookup"><span data-stu-id="cdd3a-186">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cdd3a-187">Gdy jest zastępowany w klasie pochodnej, wskazuje, czy dwa obiekty lub ciągi są równe.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-187">When overridden in a derived class, indicates whether two objects or strings are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As Object, y As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj * obj -&gt; bool" Usage="stringComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="y" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="cdd3a-188">Obiekt do porównania <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-188">An object to compare to <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="cdd3a-189">Obiekt do porównania <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-189">An object to compare to <paramref name="x" />.</span></span></param>
        <summary><span data-ttu-id="cdd3a-190">Gdy jest zastępowany w klasie pochodnej, wskazuje, czy dwa obiekty są równe.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-190">When overridden in a derived class, indicates whether two objects are equal.</span></span></summary>
        <returns><span data-ttu-id="cdd3a-191"><see langword="true" />Jeśli <paramref name="x" /> i <paramref name="y" /> <paramref name="y" /> <paramref name="x" /> <see langword="null" /> <paramref name="x" /> zapoznaj się z tym samym obiektem lub i są tego samego typu obiektu, a oba obiekty są równe lub obie i są; w przeciwnym razie, <paramref name="y" /> <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-191"><see langword="true" /> if <paramref name="x" /> and <paramref name="y" /> refer to the same object, or <paramref name="x" /> and <paramref name="y" /> are both the same type of object and those objects are equal, or both <paramref name="x" /> and <paramref name="y" /> are <see langword="null" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-192">Ponieważ środowisko uruchomieniowe `x` nie musi Unbox lub `y` jeśli są typami wartości lub próbują downcast `x` lub `y` do ciągów, jeśli są typami odwołań, <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> Metoda może być nieco bardziej wydajna niż <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> Metoda.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-192">Because the runtime does not have to unbox `x` or `y` if they are value types or attempt to downcast `x` or `y` to strings if they are reference types, the <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> method may be slightly more efficient than the <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (string x, string y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string x, string y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Equals(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As String, y As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(System::String ^ x, System::String ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : string * string -&gt; bool" Usage="stringComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
        <Parameter Name="y" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="cdd3a-193">Ciąg do porównania <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-193">A string to compare to <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="cdd3a-194">Ciąg do porównania <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-194">A string to compare to <paramref name="x" />.</span></span></param>
        <summary><span data-ttu-id="cdd3a-195">Gdy jest zastępowany w klasie pochodnej, wskazuje, czy dwa ciągi są równe.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-195">When overridden in a derived class, indicates whether two strings are equal.</span></span></summary>
        <returns><span data-ttu-id="cdd3a-196"><see langword="true" />Jeśli <paramref name="x" /> i <paramref name="y" /> <see langword="false" /> <paramref name="y" /> <see langword="null" /> <paramref name="x" /> <paramref name="x" /> zapoznaj się z tym samym obiektem lub i są równe lub i są; w przeciwnym razie,. <paramref name="y" /></span><span class="sxs-lookup"><span data-stu-id="cdd3a-196"><see langword="true" /> if <paramref name="x" /> and <paramref name="y" /> refer to the same object, or <paramref name="x" /> and <paramref name="y" /> are equal, or <paramref name="x" /> and <paramref name="y" /> are <see langword="null" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-197">Ponieważ środowisko uruchomieniowe `x` nie musi Unbox lub `y` jeśli są typami wartości lub próbują downcast `x` lub `y` do ciągów, jeśli są typami odwołań, <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> Metoda może być nieco bardziej wydajna niż <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> Metoda.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-197">Because the runtime does not have to unbox `x` or `y` if they are value types or attempt to downcast `x` or `y` to strings if they are reference types, the <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> method may be slightly more efficient than the <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromComparison">
      <MemberSignature Language="C#" Value="public static StringComparer FromComparison (StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer FromComparison(valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.FromComparison(System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromComparison (comparisonType As StringComparison) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ FromComparison(StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member FromComparison : StringComparison -&gt; StringComparer" Usage="System.StringComparer.FromComparison comparisonType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cdd3a-198">Gdy jest zastępowany w klasie pochodnej, Pobiera kod skrótu dla bieżącego <see cref="T:System.StringComparer" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-198">When overridden in a derived class, gets the hash code for the current <see cref="T:System.StringComparer" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : obj -&gt; int" Usage="stringComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="cdd3a-199">Obiekt.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-199">An object.</span></span></param>
        <summary><span data-ttu-id="cdd3a-200">Gdy jest zastępowany w klasie pochodnej, Pobiera kod skrótu dla określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-200">When overridden in a derived class, gets the hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="cdd3a-201">32-bitowy podpisany kod skrótu obliczany na podstawie wartości <paramref name="obj" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-201">A 32-bit signed hash code calculated from the value of the <paramref name="obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-202">Metoda jest bardziej wydajna niż Metoda <xref:System.StringComparer.GetHashCode%2A> , ponieważ `obj` parametr nie musi być nieopakowany, aby wykonać operację. <xref:System.StringComparer.GetHashCode%28System.String%29></span><span class="sxs-lookup"><span data-stu-id="cdd3a-202">The <xref:System.StringComparer.GetHashCode%28System.String%29> method is more efficient than the <xref:System.StringComparer.GetHashCode%2A> method because the `obj` parameter does not have to be unboxed to perform the operation.</span></span>  
  
 <span data-ttu-id="cdd3a-203">Metoda przypisuje ilość pamięci proporcjonalną do `obj` rozmiaru w celu `obj`obliczenia kodu skrótu. <xref:System.StringComparer.GetHashCode%28System.Object%29></span><span class="sxs-lookup"><span data-stu-id="cdd3a-203">The <xref:System.StringComparer.GetHashCode%28System.Object%29> method allocates an amount of memory that is proportional to the size of `obj` to calculate the hash code of `obj`.</span></span> <span data-ttu-id="cdd3a-204">W przypadku dużych ciągów próba pobrania kodu skrótu może zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-204">In the case of large strings, trying to retrieve the hash code can throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="cdd3a-205">Zamiast tego można użyć alternatywnego algorytmu, który przydziela stałą ilość pamięci podczas obliczania kodów skrótów.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-205">Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</span></span> <span data-ttu-id="cdd3a-206">Aby użyć tego algorytmu, Dodaj element [< NetFx45_CultureAwareComparerGetHashCode_LongStrings >](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) do [ \<sekcji > środowiska uruchomieniowego](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) w pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-206">To use this algorithm, add the [<NetFx45_CultureAwareComparerGetHashCode_LongStrings>](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cdd3a-207">Za mało dostępnej pamięci, aby przydzielić bufor wymagany do obliczenia kodu skrótu.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-207">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cdd3a-208"><paramref name="obj" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-208"><paramref name="obj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (string obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.GetHashCode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(System::String ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : string -&gt; int" Usage="stringComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="cdd3a-209">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-209">A string.</span></span></param>
        <summary><span data-ttu-id="cdd3a-210">Gdy jest zastępowany w klasie pochodnej, Pobiera kod skrótu dla określonego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-210">When overridden in a derived class, gets the hash code for the specified string.</span></span></summary>
        <returns><span data-ttu-id="cdd3a-211">32-bitowy podpisany kod skrótu obliczany na podstawie wartości <paramref name="obj" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-211">A 32-bit signed hash code calculated from the value of the <paramref name="obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-212">Metoda jest bardziej wydajna niż Metoda <xref:System.StringComparer.GetHashCode%28System.Object%29> , ponieważ `obj` parametr nie musi być nieopakowany, aby wykonać operację. <xref:System.StringComparer.GetHashCode%28System.String%29></span><span class="sxs-lookup"><span data-stu-id="cdd3a-212">The <xref:System.StringComparer.GetHashCode%28System.String%29> method is more efficient than the <xref:System.StringComparer.GetHashCode%28System.Object%29> method because the `obj` parameter does not have to be unboxed to perform the operation.</span></span>  
  
 <span data-ttu-id="cdd3a-213">Metoda przypisuje ilość pamięci proporcjonalną do `obj` rozmiaru w celu `obj`obliczenia kodu skrótu. <xref:System.StringComparer.GetHashCode%28System.String%29></span><span class="sxs-lookup"><span data-stu-id="cdd3a-213">The <xref:System.StringComparer.GetHashCode%28System.String%29> method allocates an amount of memory that is proportional to the size of `obj` to calculate the hash code of `obj`.</span></span> <span data-ttu-id="cdd3a-214">W przypadku dużych ciągów próba pobrania kodu skrótu może zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-214">In the case of large strings, trying to retrieve the hash code can throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="cdd3a-215">Zamiast tego można użyć alternatywnego algorytmu, który przydziela stałą ilość pamięci podczas obliczania kodów skrótów.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-215">Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</span></span> <span data-ttu-id="cdd3a-216">Aby użyć tego algorytmu, Dodaj element [< NetFx45_CultureAwareComparerGetHashCode_LongStrings >](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) do [ \<sekcji > środowiska uruchomieniowego](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) w pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-216">To use this algorithm, add the [<NetFx45_CultureAwareComparerGetHashCode_LongStrings>](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cdd3a-217">Za mało dostępnej pamięci, aby przydzielić bufor wymagany do obliczenia kodu skrótu.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-217">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cdd3a-218"><paramref name="obj" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-218"><paramref name="obj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static StringComparer InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ InvariantCulture { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCulture : StringComparer" Usage="System.StringComparer.InvariantCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdd3a-219"><see cref="T:System.StringComparer" /> Pobiera obiekt, który wykonuje porównanie ciągów z uwzględnieniem wielkości liter przy użyciu reguł porównania wyrazów niezmiennej kultury.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-219">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive string comparison using the word comparison rules of the invariant culture.</span></span></summary>
        <value><span data-ttu-id="cdd3a-220">Nowy <see cref="T:System.StringComparer" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-220">A new <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-221"><xref:System.StringComparer> Zwracany<xref:System.StringComparer.InvariantCulture%2A> przez właściwość porównuje ciągi w sposób istotny, ale nie jest odpowiedni do wyświetlania w żadnej określonej kulturze.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-221">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.InvariantCulture%2A> property compares strings in a linguistically relevant manner, but it is not suitable for display in any particular culture.</span></span> <span data-ttu-id="cdd3a-222">Główna aplikacja polega na uporządkowaniu ciągów w sposób, który będzie identyczny między kulturami.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-222">Its major application is to order strings in a way that will be identical across cultures.</span></span>  
  
 <span data-ttu-id="cdd3a-223">Kultura niezmienna jest <xref:System.Globalization.CultureInfo> obiektem zwracanym <xref:System.Globalization.CultureInfo.InvariantCulture%2A> przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-223">The invariant culture is the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="cdd3a-224">Właściwość faktycznie zwraca wystąpienie klasy anonimowej pochodnej <xref:System.StringComparer> od klasy. <xref:System.StringComparer.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="cdd3a-224">The <xref:System.StringComparer.InvariantCulture%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdd3a-225">Poniższy przykład kodu demonstruje właściwości i <xref:System.StringComparer.Create%2A> metody <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-225">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="cdd3a-226">W przykładzie pokazano, jak <xref:System.StringComparer> różne obiekty sortują trzy wersje łacińskich liter I.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-226">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="cdd3a-227">Najlepsze rozwiązania dotyczące używania ciągów w programie .NET</span><span class="sxs-lookup"><span data-stu-id="cdd3a-227">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InvariantCultureIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer InvariantCultureIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer InvariantCultureIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.InvariantCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCultureIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ InvariantCultureIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCultureIgnoreCase : StringComparer" Usage="System.StringComparer.InvariantCultureIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdd3a-228"><see cref="T:System.StringComparer" /> Pobiera obiekt, który wykonuje porównanie ciągów bez uwzględniania wielkości liter przy użyciu reguł porównania wyrazów niezmiennej kultury.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-228">Gets a <see cref="T:System.StringComparer" /> object that performs a case-insensitive string comparison using the word comparison rules of the invariant culture.</span></span></summary>
        <value><span data-ttu-id="cdd3a-229">Nowy <see cref="T:System.StringComparer" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-229">A new <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-230"><xref:System.StringComparer> Zwracany<xref:System.StringComparer.InvariantCultureIgnoreCase%2A> przez właściwość porównuje ciągi w sposób istotny, który ignoruje wielkość liter, ale nie jest odpowiedni do wyświetlania w żadnej określonej kulturze.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-230">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> property compares strings in a linguistically relevant manner that ignores case, but it is not suitable for display in any particular culture.</span></span> <span data-ttu-id="cdd3a-231">Główna aplikacja polega na uporządkowaniu ciągów w sposób, który będzie identyczny między kulturami.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-231">Its major application is to order strings in a way that will be identical across cultures.</span></span>  
  
 <span data-ttu-id="cdd3a-232">Kultura niezmienna jest <xref:System.Globalization.CultureInfo> obiektem zwracanym <xref:System.Globalization.CultureInfo.InvariantCulture%2A> przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-232">The invariant culture is the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="cdd3a-233">Właściwość faktycznie zwraca wystąpienie klasy anonimowej pochodnej <xref:System.StringComparer> od klasy. <xref:System.StringComparer.InvariantCultureIgnoreCase%2A></span><span class="sxs-lookup"><span data-stu-id="cdd3a-233">The <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="cdd3a-234">Najlepsze rozwiązania dotyczące używania ciągów w programie .NET</span><span class="sxs-lookup"><span data-stu-id="cdd3a-234">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public static StringComparer Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Ordinal As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ Ordinal { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : StringComparer" Usage="System.StringComparer.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdd3a-235"><see cref="T:System.StringComparer" /> Pobiera obiekt, który wykonuje porównanie ciągów porządkowych z uwzględnieniem wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-235">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive ordinal string comparison.</span></span></summary>
        <value><span data-ttu-id="cdd3a-236">Element <see cref="T:System.StringComparer" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-236">A <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-237">Wartość <xref:System.StringComparer> zwracana<xref:System.StringComparer.Ordinal%2A> przez właściwość wykonuje proste porównanie bajtów, które jest niezależne od języka.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-237">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.Ordinal%2A> property performs a simple byte comparison that is independent of language.</span></span> <span data-ttu-id="cdd3a-238">Jest to najbardziej odpowiednie w przypadku porównywania ciągów, które są generowane programowo lub w porównaniu z uwzględnieniem wielkości liter, takich jak hasła.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-238">This is most appropriate when comparing strings that are generated programmatically or when comparing case-sensitive resources such as passwords.</span></span>  
  
 <span data-ttu-id="cdd3a-239">Właściwość faktycznie zwraca wystąpienie klasy anonimowej pochodnej <xref:System.StringComparer> od klasy. <xref:System.StringComparer.Ordinal%2A></span><span class="sxs-lookup"><span data-stu-id="cdd3a-239">The <xref:System.StringComparer.Ordinal%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdd3a-240">Poniższy przykład kodu demonstruje właściwości i <xref:System.StringComparer.Create%2A> metody <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-240">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="cdd3a-241">W przykładzie pokazano, jak <xref:System.StringComparer> różne obiekty sortują trzy wersje łacińskich liter I.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-241">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="cdd3a-242">Najlepsze rozwiązania dotyczące używania ciągów w programie .NET</span><span class="sxs-lookup"><span data-stu-id="cdd3a-242">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrdinalIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer OrdinalIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer OrdinalIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.OrdinalIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OrdinalIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ OrdinalIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrdinalIgnoreCase : StringComparer" Usage="System.StringComparer.OrdinalIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdd3a-243"><see cref="T:System.StringComparer" /> Pobiera obiekt, który wykonuje porównanie ciągów porządkowych bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-243">Gets a <see cref="T:System.StringComparer" /> object that performs a case-insensitive ordinal string comparison.</span></span></summary>
        <value><span data-ttu-id="cdd3a-244">Element <see cref="T:System.StringComparer" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-244">A <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdd3a-245"><xref:System.StringComparer> Zwracana<xref:System.StringComparer.OrdinalIgnoreCase%2A> przez właściwość traktuje znaki w ciągu do porównania, tak jakby były konwertowane na wielkie litery przy użyciu Konwencji kultury niezmiennej, a następnie wykonuje proste porównanie bajtów niezależne od językowe.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-245">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.OrdinalIgnoreCase%2A> property treats the characters in the strings to compare as if they were converted to uppercase using the conventions of the invariant culture, and then performs a simple byte comparison that is independent of language.</span></span> <span data-ttu-id="cdd3a-246">Jest to najbardziej odpowiednie w przypadku porównywania ciągów, które są generowane programowo lub podczas porównywania zasobów bez uwzględniania wielkości liter, takich jak ścieżki i nazwy plików.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-246">This is most appropriate when comparing strings that are generated programmatically or when comparing case-insensitive resources such as paths and filenames.</span></span>  
  
 <span data-ttu-id="cdd3a-247">Właściwość faktycznie zwraca wystąpienie klasy anonimowej pochodnej <xref:System.StringComparer> od klasy. <xref:System.StringComparer.OrdinalIgnoreCase%2A></span><span class="sxs-lookup"><span data-stu-id="cdd3a-247">The <xref:System.StringComparer.OrdinalIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdd3a-248">Poniższy przykład kodu demonstruje właściwości i <xref:System.StringComparer.Create%2A> metody <xref:System.StringComparer> klasy.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-248">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="cdd3a-249">W przykładzie pokazano, jak <xref:System.StringComparer> różne obiekty sortują trzy wersje łacińskich liter I.</span><span class="sxs-lookup"><span data-stu-id="cdd3a-249">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="cdd3a-250">Najlepsze rozwiązania dotyczące używania ciągów w programie .NET</span><span class="sxs-lookup"><span data-stu-id="cdd3a-250">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="y" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="y" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
