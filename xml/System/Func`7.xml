<Type Name="Func&lt;T1,T2,T3,T4,T5,T6,TResult&gt;" FullName="System.Func&lt;T1,T2,T3,T4,T5,T6,TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d73f0c1564447877354041b8a1f59d0347cdc48b" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58741118" /></Metadata><TypeSignature Language="C#" Value="public delegate TResult Func&lt;in T1,in T2,in T3,in T4,in T5,in T6,out TResult&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Func`7&lt;- T1, - T2, - T3, - T4, - T5, - T6, + TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Func`7" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Func(Of In T1, In T2, In T3, In T4, In T5, In T6, Out TResult)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6) As TResult " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename TResult&gt;&#xA;public delegate TResult Func(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);" />
  <TypeSignature Language="F#" Value="type Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'Result&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; 'Result" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T6">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TResult">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
    <Parameter Name="arg6" Type="T6" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="eeffb-101">Typ pierwszego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-101">The type of the first parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="eeffb-102">Typ drugiego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-102">The type of the second parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="eeffb-103">Typ trzeciego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-103">The type of the third parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="eeffb-104">Typ czwartego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-104">The type of the fourth parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="eeffb-105">Typ piątego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-105">The type of the fifth parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="eeffb-106">Typ szóstego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-106">The type of the sixth parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="TResult"><span data-ttu-id="eeffb-107">Typ wartości zwracanej metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-107">The type of the return value of the method that this delegate encapsulates.</span></span></typeparam>
    <param name="arg1"><span data-ttu-id="eeffb-108">Pierwszy parametr metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-108">The first parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg2"><span data-ttu-id="eeffb-109">Drugi parametr metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-109">The second parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg3"><span data-ttu-id="eeffb-110">Trzeci parametr metodę, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-110">The third parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg4"><span data-ttu-id="eeffb-111">Czwartego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-111">The fourth parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg5"><span data-ttu-id="eeffb-112">Piątego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-112">The fifth parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg6"><span data-ttu-id="eeffb-113">Szóstego parametru metody, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-113">The sixth parameter of the method that this delegate encapsulates.</span></span></param>
    <summary><span data-ttu-id="eeffb-114">Hermetyzuje metody, która ma sześć parametrów i zwraca wartość typu określonego przez <typeparamref name="TResult" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="eeffb-114">Encapsulates a method that has six parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.</span></span></summary>
    <returns><span data-ttu-id="eeffb-115">Wartość zwracaną przez metodę, która hermetyzuje tego delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-115">The return value of the method that this delegate encapsulates.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeffb-116">Ten delegat służy do reprezentowania metody, która może być przekazywany jako parametr bez jawnego deklarowania niestandardową klasę delegatów.</span><span class="sxs-lookup"><span data-stu-id="eeffb-116">You can use this delegate to represent a method that can be passed as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="eeffb-117">Metoda zhermetyzowany musi odpowiadać podpis metody, który jest definiowany przez ten delegat.</span><span class="sxs-lookup"><span data-stu-id="eeffb-117">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="eeffb-118">Oznacza to, że metoda zhermetyzowany muszą mieć sześć parametry, z których każdy jest przekazywany do niego przez wartość, i aplikacja musi zwracać wartość.</span><span class="sxs-lookup"><span data-stu-id="eeffb-118">This means that the encapsulated method must have six parameters, each of which is passed to it by value, and that it must return a value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eeffb-119">Metody, która zawiera sześć parametrów i zwraca odwołanie do `void` (lub w języku Visual Basic, który jest zadeklarowany jako `Sub` , a nie jako `Function`), używają ogólnej <xref:System.Action%606> delegowania, zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="eeffb-119">To reference a method that has six parameters and returns `void` (or in Visual Basic, that is declared as a `Sub` rather than as a `Function`), use the generic <xref:System.Action%606> delegate instead.</span></span>  
  
 <span data-ttu-id="eeffb-120">Można również użyć <xref:System.Func%607> delegowanie przy użyciu metody anonimowe i wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eeffb-120">You can also use the <xref:System.Func%607> delegate with anonymous methods and lambda expressions.</span></span>  
  
 <span data-ttu-id="eeffb-121">Podstawowy typ wyrażenia lambda jest jednym z ogólnego `Func` delegatów.</span><span class="sxs-lookup"><span data-stu-id="eeffb-121">The underlying type of a lambda expression is one of the generic `Func` delegates.</span></span> <span data-ttu-id="eeffb-122">Dzięki temu można przekazać wyrażenia lambda jako parametr bez jawnie przypisywania do delegata.</span><span class="sxs-lookup"><span data-stu-id="eeffb-122">This makes it possible to pass a lambda expression as a parameter without explicitly assigning it to a delegate.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Action`6" />
  </Docs>
</Type>