<Type Name="NullReferenceException" FullName="System.NullReferenceException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="871adebd50877699047b62f9d350cf2555dfe480" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30744152" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NullReferenceException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit NullReferenceException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.NullReferenceException" />
  <TypeSignature Language="VB.NET" Value="Public Class NullReferenceException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class NullReferenceException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyjątek zgłaszany, gdy jest próba wyłuskania odwołanie do obiektu o wartości null.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.NullReferenceException> wyjątek podczas próby uzyskania dostępu do członka typu, którego wartość jest `null`. A <xref:System.NullReferenceException> wyjątek zazwyczaj odzwierciedla błąd deweloperów i jest generowany w następujących scenariuszach:  
  
-   Pamiętasz można utworzyć wystąpienia typu referencyjnego. W poniższym przykładzie `names` jest zadeklarowane, ale nigdy nie miała wystąpień:  
  
     [!code-csharp[System.NullReferenceException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/example1.cs#1)]
     [!code-vb[System.NullReferenceException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/example1.vb#1)]  
  
     Niektóre kompilatory ostrzeżenie podczas ich skompilowanie tego kodu. Inne zgłosi błąd i kompilacja zakończy się niepowodzeniem. Aby rozwiązać ten problem, dzięki czemu jego wartość nie jest już Utwórz wystąpienie obiektu `null`. Poniższy przykład robi to poprzez wywołanie konstruktora klasy typu.  
  
     [!code-csharp[System.NullReferenceException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/example1a.cs#2)]
     [!code-vb[System.NullReferenceException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/example1a.vb#2)]  
  
-   Pamiętasz wymiaru tablicy przed jego inicjowania. W poniższym przykładzie `values` został zadeklarowany jako tablica liczba całkowita, ale nigdy nie jest określona liczba elementów, które zawiera. Próba zainicjowania jego wartości w związku z tym zgłoszony <xref:System.NullReferenceException> wyjątku.  
  
     [!code-csharp[System.NullReferenceException.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array3.cs#10)]
     [!code-vb[System.NullReferenceException.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array3.vb#10)]  
  
     Wyjątek można wyeliminować przez zadeklarowanie przed inicjowanie, liczba elementów w tablicy, tak jak w poniższym przykładzie.  
  
     [!code-csharp[System.NullReferenceException.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array4.cs#11)]
     [!code-vb[System.NullReferenceException.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array4.vb#11)]  
  
     Aby uzyskać więcej informacji dotyczących deklarowanie i inicjowania tablic, zobacz [tablice](http://msdn.microsoft.com/library/bb79bdde-e570-4c30-adb0-1dd5759ae041) i [tablice](http://msdn.microsoft.com/library/dbf29737-b589-4443-bee6-a27588d9c67e).  
  
-   Możesz uzyskać **null** wartość zwracana z metody, a następnie wywołać metodę zwróconego typu. Czasami jest to wynik błędu dokumentacji; dokumentację zakończy się niepowodzeniem, należy pamiętać, że może zwrócić wywołanie metody `null`. W pozostałych przypadkach kodu błędnego przyjęto założenie, że metoda zawsze zwraca niż**null** wartość.  
  
     Kod w poniższym przykładzie założono, że <xref:System.Array.Find%2A?displayProperty=nameWithType> metoda zawsze zwraca `Person` którego `FirstName` pola dopasowuje ciąg wyszukiwania. Ponieważ nie ma dopasowania, zgłasza wyjątek środowiska uruchomieniowego <xref:System.NullReferenceException> wyjątku.  
  
     [!code-csharp[System.NullReferenceException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/nullreturn2.cs#4)]
     [!code-vb[System.NullReferenceException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/nullreturn2.vb#4)]  
  
     Aby rozwiązać ten problem, należy przetestować zwracana wartość metody, aby upewnić się, że nie jest `null` przed wywołaniem któregokolwiek z członków, tak jak w poniższym przykładzie.  
  
     [!code-csharp[System.NullReferenceException.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/nullreturn2a.cs#5)]
     [!code-vb[System.NullReferenceException.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/nullreturn2a.vb#5)]  
  
-   Używasz wyrażenia (na przykład użytkownik jest łańcucha listę metody lub właściwości ze sobą) można pobrać wartości i, chociaż jest sprawdzanie, czy wartość jest `null`, nadal zgłasza wyjątek środowiska uruchomieniowego <xref:System.NullReferenceException> wyjątku. Dzieje się tak dlatego zwraca jedną z wartości pośrednich w wyrażeniu `null`. W rezultacie, Twoje rest dla `null` nigdy nie jest obliczane.  
  
     W poniższym przykładzie zdefiniowano `Pages` obiekt, który przechowuje informacje dotyczące stron sieci web, które są przedstawiane przez `Page` obiektów. `Example.Main` Metoda sprawdza, czy bieżącej strony sieci web ma tytuł inną niż null i jeśli tak, Wyświetla tytuł. Niezależnie od tego, czy, jednak metoda zgłasza <xref:System.NullReferenceException> wyjątku.  
  
     [!code-csharp[System.NullReferenceException.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Chain1.cs#6)]
     [!code-vb[System.NullReferenceException.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Chain1.vb#6)]  
  
     Wyjątek jest zgłaszany, ponieważ `pages.CurrentPage` zwraca `null` Jeśli nie informacje ze strony są przechowywane w pamięci podręcznej. Można usunąć tego wyjątku, sprawdzając wartość `CurrentPage` właściwości przed pobraniem bieżącego `Page` obiektu `Title` właściwości, jak w poniższym przykładzie jest:  
  
     [!code-csharp[System.NullReferenceException.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Chain2.cs#7)]
     [!code-vb[System.NullReferenceException.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Chain2.vb#7)]  
  
-   W przypadku wyliczania elementów tablicy, która zawiera typy referencyjne i próba procesu jednego z elementów zgłasza <xref:System.NullReferenceException> wyjątku.  
  
     W poniższym przykładzie zdefiniowano tablicy ciągów. A `for` instrukcji wylicza elementów w tablicy i wywołuje każdy ciąg <xref:System.String.Trim%2A> metoda przed wyświetleniem ciąg.  
  
     [!code-csharp[System.NullReferenceException.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array1.cs#8)]
     [!code-vb[System.NullReferenceException.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array1.vb#8)]  
  
     Ten wyjątek występuje, gdy użytkownik założono, że każdy element tablicy musi zawierać wartość inną niż null i wartość elementu tablicy jest w rzeczywistości `null`. Wyjątek mogą zostać usunięte przez sprawdzenie, czy element jest `null` przed wykonaniem każdej operacji w tym elemencie, jak w poniższym przykładzie przedstawiono.  
  
     [!code-csharp[System.NullReferenceException.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array2.cs#9)]
     [!code-vb[System.NullReferenceException.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array2.vb#9)]  
  
-   A <xref:System.NullReferenceException> wyjątku przez metodę, która została przekazana `null`. W przypadku niektórych metod Sprawdź poprawność argumentów, które są przekazywane do nich. Jeśli tak, a jeden z argumentów jest `null`, metoda wygeneruje <xref:System.ArgumentNullException?displayProperty=nameWithType> wyjątku. W przeciwnym razie zwraca <xref:System.NullReferenceException> wyjątku. Poniższy przykład przedstawia, w tym scenariuszu.  
  
     [!code-csharp[System.NullReferenceException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/example2.cs#3)]
     [!code-vb[System.NullReferenceException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/example2.vb#3)]  
  
     Aby rozwiązać ten problem, upewnij się, że argument przekazany do metody nie jest `null`, lub dojścia zwrócony wyjątek w `try…catch…finally` bloku. Aby uzyskać więcej informacji, zobacz [wyjątki](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735).  
  
 Firmy Microsoft język pośredni (MSIL) instrukcji throw <xref:System.NullReferenceException>: `callvirt`, `cpblk`, `cpobj`, `initblk`, `ldelem.<type>`, `ldelema`, `ldfld`, `ldflda`, `ldind.<type>` , `ldlen`, `stelem.<type>`, `stfld`, `stind.<type>`, `throw`, i `unbox`.  
  
 <xref:System.NullReferenceException> używa COR_E_NULLREFERENCE HRESULT, która ma wartość 0x80004003.  
  
 Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.NullReferenceException>, zobacz <xref:System.NullReferenceException.%23ctor%2A> konstruktorów.  
  
 **Obsługa wyjątku NullReferenceException w kodzie zlecenia**  
  
 Zazwyczaj najlepiej uniknąć NullReferenceException niż do jej obsługi po jego wystąpieniu. Obsługa wyjątku może poprawić czytelność kodu trudniejsze do utrzymywania i zrozumieć, a czasami może wprowadzić inne błędy. NullReferenceException często jest to nieodwracalny błąd. W takich przypadkach umożliwiając wyjątek Zatrzymaj aplikację może być najlepsze alternatywnej.  
  
 Istnieją jednak wiele sytuacji, gdy obsługa błędu mogą być przydatne:  
  
-   Aplikację można zignorować obiektów, które mają wartość null. Na przykład jeśli aplikacja pobiera i przetwarza rekordów bazy danych, można zignorować pewną liczbę nieprawidłowych rekordów powodujących obiektów null. Rejestrowanie nieprawidłowe dane w pliku dziennika lub w aplikacji interfejsu użytkownika może być wszystko, co należy zrobić.  
  
-   Można odzyskać z wyjątkiem. Na przykład wywołanie usługi sieci web, która zwraca typ referencyjny może zwracać wartości zerowej, jeśli połączenie zostanie przerwane lub upłynął limit czasu połączenia. Możesz spróbować ponownie nawiązać połączenie i spróbuj ponownie.  
  
-   Stan aplikacji można przywrócić do prawidłowego stanu. Na przykład użytkownik może wykonywać wieloetapowych zadanie, które wymaga zapisania informacji w magazynie danych, przed wywołaniem metody, która zgłasza wyjątku NullReferenceException. Jeśli Niezainicjowany obiekt może spowodować uszkodzenie rekordu danych, możesz usunąć poprzednie dane przed zamknięciem aplikacji.  
  
-   Chcesz zgłosić wyjątek. Na przykład jeśli błąd został spowodowany przez błąd użytkownika aplikacji, można wygenerować wiadomość, aby pomóc mu Podaj poprawne informacje. Można również rejestrować informacje o błędzie, aby pomóc w rozwiązaniu problemu. Niektórych struktur, takich jak ASP.NET, mają wyjątek ogólny program obsługi, który przechwytuje wszystkie błędy, na który nigdy nie awarii aplikacji; w takim przypadku rejestrowania wyjątku może być jedynym sposobem wiadomo, że występuje.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NullReferenceException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullReferenceException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NullReferenceException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NullReferenceException" /> klasy ustawienie <see cref="P:System.Exception.Message" /> właściwość nowego wystąpienia dostarczony przez system komunikatu, opisem błędu, takie jak "wartość"null"znaleziono, gdy wystąpienie obiektu nie jest wymagana." Ten komunikat uwzględnia bieżącą kulturę systemu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.NullReferenceException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.Exception.Message%2A>|Zlokalizowany ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullReferenceException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NullReferenceException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.String" /> opisujący błąd. Zawartość <c>komunikat</c> ma na celu rozumiane przez człowieka. Obiekt wywołujący tego konstruktora jest wymagany w celu zagwarantowania, że ten ciąg został zlokalizowany w bieżącej kulturze systemu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NullReferenceException" /> klasy z powodu określonego błędu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.NullReferenceException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NullReferenceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NullReferenceException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt zawierający dane serializowanego obiektu.</param>
        <param name="context">Informacje kontekstowe o źródłowego lub miejscu docelowym.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NullReferenceException" /> z zserializowanymi danymi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływana podczas deserializacji do odtworzenia obiektu wyjątku przesyłanego za pomocą strumienia. Aby uzyskać więcej informacji, zobacz [XML i serializacji SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullReferenceException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NullReferenceException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</param>
        <param name="innerException">Wyjątek, który jest przyczyną bieżącego wyjątku. Jeśli <c>innerException</c> parametr nie jest <see langword="null" />, bieżący wyjątek jest zgłaszany w <see langword="catch" /> bloku, który obsługuje wyjątek wewnętrzny.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NullReferenceException" /> z określonego komunikatu o błędzie i odwołania do wyjątek wewnętrzny będący przyczyną tego wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątek zgłaszany bezpośrednio w wyniku poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości. <xref:System.Exception.InnerException%2A> Właściwość zwraca tę samą wartość, która została przekazana do konstruktora, lub `null` Jeśli <xref:System.Exception.InnerException%2A> właściwości nie dostarcza do konstruktora wartości wyjątku wewnętrznego.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.NullReferenceException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie do wewnętrznego wyjątku.|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>