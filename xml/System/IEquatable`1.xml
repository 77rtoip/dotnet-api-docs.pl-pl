<Type Name="IEquatable&lt;T&gt;" FullName="System.IEquatable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fcae00acfa7690a177a9ae3923d64e925291729" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69420291" /></Metadata><TypeSignature Language="C#" Value="public interface IEquatable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEquatable`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IEquatable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEquatable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEquatable" />
  <TypeSignature Language="F#" Value="type IEquatable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="146a4-101">Typ obiektów do porównania.</span><span class="sxs-lookup"><span data-stu-id="146a4-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="146a4-102">Definiuje uogólnioną metodę, która jest implementowana przez typ wartości lub klasy w celu utworzenia metody specyficznej dla określonego typu w celu określenia równości wystąpień.</span><span class="sxs-lookup"><span data-stu-id="146a4-102">Defines a generalized method that a value type or class implements to create a type-specific method for determining equality of instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="146a4-103">Ten interfejs jest implementowany przez typy, których wartości mogą być równe (na przykład klasy liczbowe i ciągi).</span><span class="sxs-lookup"><span data-stu-id="146a4-103">This interface is implemented by types whose values can be equated (for example, the numeric and string classes).</span></span> <span data-ttu-id="146a4-104">Typ wartości lub Klasa implementuje metodę, <xref:System.IEquatable%601.Equals%2A> aby utworzyć metodę specyficzną dla typu odpowiednią do określania równości wystąpień.</span><span class="sxs-lookup"><span data-stu-id="146a4-104">A value type or class implements the <xref:System.IEquatable%601.Equals%2A> method to create a type-specific method suitable for determining equality of instances.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="146a4-105"><xref:System.IComparable%601> Interfejs<xref:System.IComparable%601.CompareTo%2A> definiuje metodę, która określa kolejność sortowania wystąpień typu implementującego.</span><span class="sxs-lookup"><span data-stu-id="146a4-105">The <xref:System.IComparable%601> interface defines the <xref:System.IComparable%601.CompareTo%2A> method, which determines the sort order of instances of the implementing type.</span></span> <span data-ttu-id="146a4-106"><xref:System.IEquatable%601> Interfejs<xref:System.IEquatable%601.Equals%2A> definiuje metodę, która określa równość wystąpień typu implementującego.</span><span class="sxs-lookup"><span data-stu-id="146a4-106">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="146a4-107">`Contains` `LastIndexOf` <xref:System.Collections.Generic.LinkedList%601> `IndexOf` <xref:System.Collections.Generic.Dictionary%602> <xref:System.Collections.Generic.List%601>Interfejs jest używany przez obiekty kolekcji generycznej, takie jak, i podczas testowania pod kątem równości w takich metodach jak,, `Remove`i. <xref:System.IEquatable%601></span><span class="sxs-lookup"><span data-stu-id="146a4-107">The <xref:System.IEquatable%601> interface is used by generic collection objects such as <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, and <xref:System.Collections.Generic.LinkedList%601> when testing for equality in such methods as `Contains`, `IndexOf`, `LastIndexOf`, and `Remove`.</span></span> <span data-ttu-id="146a4-108">Należy ją zaimplementować dla każdego obiektu, który może być przechowywany w kolekcji ogólnej.</span><span class="sxs-lookup"><span data-stu-id="146a4-108">It should be implemented for any object that might be stored in a generic collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="146a4-109">Zobacz przykład dla <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="146a4-109">See the example for the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="146a4-110">Zastąp parametr <see cref="T:System.IEquatable`1" /> Type interfejsu typem implementującym ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="146a4-110">Replace the type parameter of the <see cref="T:System.IEquatable`1" /> interface with the type that is implementing this interface.</span></span>  
  
<span data-ttu-id="146a4-111">W przypadku zaimplementowania <see cref="T:System.IEquatable`1" />należy również przesłonić <see cref="M:System.Object.Equals(System.Object)" /> implementacje klas podstawowych <see cref="M:System.Object.GetHashCode" /> i tak, aby <see cref="M:System.IEquatable`1.Equals(`0)" /> ich zachowanie było zgodne z tą metodą.</span><span class="sxs-lookup"><span data-stu-id="146a4-111">If you implement <see cref="T:System.IEquatable`1" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method.</span></span> <span data-ttu-id="146a4-112">W przypadku przesłonięcia <see cref="M:System.Object.Equals(System.Object)" />przesłonięta implementacja jest również wywoływana w wywołaniach metody <see langword="Equals(System.Object, System.Object)" /> statycznej klasy.</span><span class="sxs-lookup"><span data-stu-id="146a4-112">If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class.</span></span> <span data-ttu-id="146a4-113">Ponadto należy przeciążać <see langword="op_Equality" /> operatory i <see langword="op_Inequality" /> .</span><span class="sxs-lookup"><span data-stu-id="146a4-113">In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators.</span></span> <span data-ttu-id="146a4-114">Dzięki temu wszystkie testy pod kątem równości zwracają spójne wyniki.</span><span class="sxs-lookup"><span data-stu-id="146a4-114">This ensures that all tests for equality return consistent results.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="146a4-115">Aby uzyskać informacje na <see cref="M:System.Object.Equals(System.Object)" />temat przesłaniania <see cref="M:System.Object.Equals(System.Object)" /> , zobacz artykuł.</span><span class="sxs-lookup"><span data-stu-id="146a4-115">For information on overriding <see cref="M:System.Object.Equals(System.Object)" />, see the <see cref="M:System.Object.Equals(System.Object)" /> article.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="146a4-116">Dla typu wartości należy zawsze implementować <see cref="T:System.IEquatable`1" /> i przesłonić <see cref="M:System.Object.Equals(System.Object)" /> w celu zwiększenia wydajności.</span><span class="sxs-lookup"><span data-stu-id="146a4-116">For a value type, you should always implement <see cref="T:System.IEquatable`1" /> and override <see cref="M:System.Object.Equals(System.Object)" /> for better performance.</span></span> <span data-ttu-id="146a4-117"><see cref="M:System.Object.Equals(System.Object)" />pola typów wartości i opierają się na odbiciu w celu porównania dwóch wartości dla równości.</span><span class="sxs-lookup"><span data-stu-id="146a4-117"><see cref="M:System.Object.Equals(System.Object)" /> boxes value types and relies on reflection to compare two values for equality.</span></span> <span data-ttu-id="146a4-118">Zarówno implementacja <see cref="M:System.IEquatable`1.Equals(`0)" /> , jak i <see cref="M:System.Object.Equals(System.Object)" /> przesłonięcie powinny zwracać spójne wyniki.</span><span class="sxs-lookup"><span data-stu-id="146a4-118">Both your implementation of <see cref="M:System.IEquatable`1.Equals(`0)" /> and your override of <see cref="M:System.Object.Equals(System.Object)" /> should return consistent results.</span></span>  
  
<span data-ttu-id="146a4-119">W przypadku zaimplementowania <see cref="T:System.IEquatable`1" />należy również zaimplementować <see cref="T:System.IComparable`1" /> , czy wystąpienia typu mogą być uporządkowane lub sortowane.</span><span class="sxs-lookup"><span data-stu-id="146a4-119">If you implement <see cref="T:System.IEquatable`1" />, you should also implement <see cref="T:System.IComparable`1" /> if instances of your type can be ordered or sorted.</span></span> <span data-ttu-id="146a4-120">Jeśli typ implementuje <see cref="T:System.IComparable`1" />, prawie zawsze zaimplementowana jest <see cref="T:System.IEquatable`1" />również implementacja.</span><span class="sxs-lookup"><span data-stu-id="146a4-120">If your type implements <see cref="T:System.IComparable`1" />, you almost always also implement <see cref="T:System.IEquatable`1" />.</span></span></para>
      <para><span data-ttu-id="146a4-121">Należy zauważyć, że istnieją projekty, w których typ obsługuje relację zamówienia, ale równość może być odmienne względem relacji kolejności.</span><span class="sxs-lookup"><span data-stu-id="146a4-121">Note that there are some designs where a type supports an order relation, but equality may be distinct from an ordering relation.</span></span> <span data-ttu-id="146a4-122">Rozważmy `Person` klasę, w której sortujesz alfabetycznie.</span><span class="sxs-lookup"><span data-stu-id="146a4-122">Consider a `Person` class where you sort alphabetically.</span></span> <span data-ttu-id="146a4-123">Dwie osoby o tej samej nazwie sortują te same, ale nie są tej samej osoby.</span><span class="sxs-lookup"><span data-stu-id="146a4-123">Two people with the same name sort the same, but are not the same person.</span></span></para></block>
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.IComparable" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IEquatable`1.Equals(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T -&gt; bool" Usage="iEquatable.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="146a4-124">Obiekt, który ma zostać porównany z tym obiektem.</span><span class="sxs-lookup"><span data-stu-id="146a4-124">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="146a4-125">Wskazuje, czy bieżący obiekt jest równy innemu obiektowi tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="146a4-125">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="146a4-126"><see langword="true" />Jeśli bieżący obiekt jest równy <paramref name="other" /> parametrowi; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="146a4-126"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="146a4-127">Implementacja <xref:System.IEquatable%601.Equals%2A> metody jest przeznaczona do wykonania testu pod kątem równości z innym obiektem typu `T`, tego samego typu co bieżący obiekt.</span><span class="sxs-lookup"><span data-stu-id="146a4-127">The implementation of the <xref:System.IEquatable%601.Equals%2A> method is intended to perform a test for equality with another object of type `T`, the same type as the current object.</span></span> <span data-ttu-id="146a4-128"><xref:System.IEquatable%601.Equals(%600)> Metoda jest wywoływana w następujących okolicznościach:</span><span class="sxs-lookup"><span data-stu-id="146a4-128">The <xref:System.IEquatable%601.Equals(%600)> method is called in the following circumstances:</span></span>  
  
-   <span data-ttu-id="146a4-129">Gdy metoda jest wywoływana `other` i argument jest obiektem o jednoznacznie określonym typie `T`. `Equals`</span><span class="sxs-lookup"><span data-stu-id="146a4-129">When the `Equals` method is called and the `other` argument is a strongly-typed object of type `T`.</span></span> <span data-ttu-id="146a4-130">(Jeśli `other` nie jest typu `T`, wywoływana jest metoda <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> podstawowa.</span><span class="sxs-lookup"><span data-stu-id="146a4-130">(If `other` is not of type `T`, the base <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="146a4-131">Z dwóch metod <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> oferuje nieco lepszą wydajność.</span><span class="sxs-lookup"><span data-stu-id="146a4-131">Of the two methods, <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> offers slightly better performance.)</span></span>  
  
-   <span data-ttu-id="146a4-132">Gdy wywoływana jest metoda wyszukiwania dla wielu obiektów kolekcji ogólnej.</span><span class="sxs-lookup"><span data-stu-id="146a4-132">When the search methods of a number of generic collection objects are called.</span></span> <span data-ttu-id="146a4-133">Poniżej wymieniono niektóre z tych typów i ich metody:</span><span class="sxs-lookup"><span data-stu-id="146a4-133">Some of these types and their methods include the following:</span></span>  
  
    -   <span data-ttu-id="146a4-134">Niektóre z ogólnych przeciążeń <xref:System.Array.BinarySearch%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="146a4-134">Some of the generic overloads of the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
    -   <span data-ttu-id="146a4-135">Metody <xref:System.Collections.Generic.List%601> wyszukiwania klasy, w tym <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, i <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="146a4-135">The search methods of the <xref:System.Collections.Generic.List%601> class, including <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, and <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="146a4-136">Metody <xref:System.Collections.Generic.Dictionary%602> wyszukiwania klasy, w tym <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> i <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="146a4-136">The search methods of the <xref:System.Collections.Generic.Dictionary%602> class, including <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> and <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span></span>  
  
    -   <span data-ttu-id="146a4-137">Metody wyszukiwania klasy generycznej <xref:System.Collections.Generic.LinkedList%601> , w tym <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> i <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="146a4-137">The search methods of the generic <xref:System.Collections.Generic.LinkedList%601> class, including <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> and <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span></span>  
  
 <span data-ttu-id="146a4-138">Innymi słowy, aby obsłużyć możliwość, że obiekty klasy będą przechowywane w tablicy lub ogólnym obiekcie kolekcji, to dobrym pomysłem jest zaimplementowanie <xref:System.IEquatable%601> , aby umożliwić łatwe identyfikowanie i manipulowanie obiektem.</span><span class="sxs-lookup"><span data-stu-id="146a4-138">In other words, to handle the possibility that objects of a class will be stored in an array or a generic collection object, it is a good idea to implement <xref:System.IEquatable%601> so that the object can be easily identified and manipulated.</span></span>  
  
 <span data-ttu-id="146a4-139">Podczas implementowania <xref:System.IEquatable%601.Equals%2A> metody, zdefiniuj równość odpowiednio dla typu określonego przez argument typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="146a4-139">When implementing the <xref:System.IEquatable%601.Equals%2A> method, define equality appropriately for the type specified by the generic type argument.</span></span> <span data-ttu-id="146a4-140">Na przykład, jeśli argumentem typu jest <xref:System.Int32>, zdefiniuj równość odpowiednio dla porównania 2 32-bitowych liczb całkowitych ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="146a4-140">For example, if the type argument is <xref:System.Int32>, define equality appropriately for the comparison of two 32-bit signed integers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="146a4-141">W `Person` poniższym przykładzie przedstawiono częściową implementację klasy, która implementuje <xref:System.IEquatable%601> i ma dwie właściwości, `LastName` i. `SSN`</span><span class="sxs-lookup"><span data-stu-id="146a4-141">The following example shows the partial implementation of a `Person` class that implements <xref:System.IEquatable%601> and has two properties, `LastName` and `SSN`.</span></span> <span data-ttu-id="146a4-142"><xref:System.IEquatable%601.Equals%2A> Metoda zwraca `True` Jeśli Właściwość`SSN` `False`dwóch obiektówjesttakasama;wprzeciwnymraziezwraca`Person` .</span><span class="sxs-lookup"><span data-stu-id="146a4-142">The <xref:System.IEquatable%601.Equals%2A> method returns `True` if the `SSN` property of two `Person` objects is identical; otherwise, it returns `False`.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/EqualsEx2.cs#3)]
 [!code-vb[System.GenericIEquatable.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/EqualsEx2.vb#3)]  
  
 <span data-ttu-id="146a4-143">`Person`obiekty mogą być następnie przechowywane w <xref:System.Collections.Generic.List%601> obiekcie i mogą być identyfikowane `Contains` przez metodę, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="146a4-143">`Person` objects can then be stored in a <xref:System.Collections.Generic.List%601> object and can be identified by the `Contains` method, as the following example shows.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/Snippet12.cs#12)]
 [!code-vb[System.GenericIEquatable.Equals#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/Snippet12.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="146a4-144">W przypadku zaimplementowania <see cref="M:System.IEquatable`1.Equals(`0)" />należy również przesłonić <see cref="M:System.Object.Equals(System.Object)" /> implementacje klas podstawowych <see cref="M:System.Object.GetHashCode" /> i tak, aby <see cref="M:System.IEquatable`1.Equals(`0)" /> ich zachowanie było zgodne z tą metodą.</span><span class="sxs-lookup"><span data-stu-id="146a4-144">If you implement <see cref="M:System.IEquatable`1.Equals(`0)" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method.</span></span> <span data-ttu-id="146a4-145">W przypadku przesłonięcia <see cref="M:System.Object.Equals(System.Object)" />przesłonięta implementacja jest również wywoływana w wywołaniach metody <see langword="Equals(System.Object, System.Object)" /> statycznej klasy.</span><span class="sxs-lookup"><span data-stu-id="146a4-145">If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class.</span></span> <span data-ttu-id="146a4-146">Ponadto należy przeciążać <see langword="op_Equality" /> operatory i <see langword="op_Inequality" /> .</span><span class="sxs-lookup"><span data-stu-id="146a4-146">In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators.</span></span> <span data-ttu-id="146a4-147">Gwarantuje to, że wszystkie testy na potrzeby równości zwracają spójne wyniki, które przykład ilustruje.</span><span class="sxs-lookup"><span data-stu-id="146a4-147">This ensures that all tests for equality return consistent results, which the example illustrates.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
