<Type Name="IEquatable&lt;T&gt;" FullName="System.IEquatable&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IEquatable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEquatable`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IEquatable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEquatable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="f9301-101">Typ obiektów do porównania.</span><span class="sxs-lookup"><span data-stu-id="f9301-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="f9301-102">Definiuje metodę uogólniony implementujący typu wartości lub klasy do utworzenia metody określania równości wystąpienia określonego typu.</span><span class="sxs-lookup"><span data-stu-id="f9301-102">Defines a generalized method that a value type or class implements to create a type-specific method for determining equality of instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9301-103">Ten interfejs jest implementowany przez typy, których wartości można postaci (na przykład numeryczne i ciąg klasy).</span><span class="sxs-lookup"><span data-stu-id="f9301-103">This interface is implemented by types whose values can be equated (for example, the numeric and string classes).</span></span> <span data-ttu-id="f9301-104">Typ wartości lub klasa implementuje <xref:System.IEquatable%601.Equals%2A> metodę w celu utworzenia odpowiedniego określania równości wystąpienia metody określonego typu.</span><span class="sxs-lookup"><span data-stu-id="f9301-104">A value type or class implements the <xref:System.IEquatable%601.Equals%2A> method to create a type-specific method suitable for determining equality of instances.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9301-105"><xref:System.IComparable%601> Interfejs definiuje <xref:System.IComparable%601.CompareTo%2A> metodę, która określa porządek sortowania wystąpień typu implementującej.</span><span class="sxs-lookup"><span data-stu-id="f9301-105">The <xref:System.IComparable%601> interface defines the <xref:System.IComparable%601.CompareTo%2A> method, which determines the sort order of instances of the implementing type.</span></span> <span data-ttu-id="f9301-106"><xref:System.IEquatable%601> Interfejs definiuje <xref:System.IEquatable%601.Equals%2A> metodę, która określa równości wystąpień typu implementującej.</span><span class="sxs-lookup"><span data-stu-id="f9301-106">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="f9301-107"><xref:System.IEquatable%601> Interfejs jest używany przez obiekty kolekcji ogólnych, takich jak <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, i <xref:System.Collections.Generic.LinkedList%601> podczas testowania pod kątem równości w tych metod jako `Contains`, `IndexOf`, `LastIndexOf`, i `Remove`.</span><span class="sxs-lookup"><span data-stu-id="f9301-107">The <xref:System.IEquatable%601> interface is used by generic collection objects such as <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, and <xref:System.Collections.Generic.LinkedList%601> when testing for equality in such methods as `Contains`, `IndexOf`, `LastIndexOf`, and `Remove`.</span></span> <span data-ttu-id="f9301-108">Powinny zostać wdrożone dla dowolnego obiektu, które mogą być przechowywane w zbiorze ogólnym.</span><span class="sxs-lookup"><span data-stu-id="f9301-108">It should be implemented for any object that might be stored in a generic collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9301-109">Zobacz przykład <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="f9301-109">See the example for the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="f9301-110">Zastąp parametr typu <see cref="T:System.IEquatable`1" /> interfejsu z typem, który implementuje ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="f9301-110">Replace the type parameter of the <see cref="T:System.IEquatable`1" /> interface with the type that is implementing this interface.</span></span>  
  
 <span data-ttu-id="f9301-111">W przypadku zastosowania <see cref="T:System.IEquatable`1" />, również powinny zastępować implementacji klasy podstawowej <see cref="M:System.Object.Equals(System.Object)" /> i <see cref="M:System.Object.GetHashCode" /> tak, aby ich zachowanie jest zgodne z tymi, które <see cref="M:System.IEquatable`1.Equals(`0)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="f9301-111">If you implement <see cref="T:System.IEquatable`1" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method.</span></span> <span data-ttu-id="f9301-112">Jeśli zastąpienie <see cref="M:System.Object.Equals(System.Object)" />, implementacji przesłoniętych jest również nazywany w wywołaniach statycznych <see langword="Equals(System.Object, System.Object)" /> metody w klasie.</span><span class="sxs-lookup"><span data-stu-id="f9301-112">If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class.</span></span> <span data-ttu-id="f9301-113">Ponadto powinien przeciążać <see langword="op_Equality" /> i <see langword="op_Inequality" /> operatorów.</span><span class="sxs-lookup"><span data-stu-id="f9301-113">In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators.</span></span> <span data-ttu-id="f9301-114">Daje to pewność, że wszystkie testy równości zwracają spójne wyniki.</span><span class="sxs-lookup"><span data-stu-id="f9301-114">This ensures that all tests for equality return consistent results.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="f9301-115">Aby uzyskać informacje dotyczące zastępowania <see cref="M:System.Object.Equals(System.Object)" />, zobacz <see cref="M:System.Object.Equals(System.Object)" /> artykułu.</span><span class="sxs-lookup"><span data-stu-id="f9301-115">For information on overriding <see cref="M:System.Object.Equals(System.Object)" />, see the <see cref="M:System.Object.Equals(System.Object)" /> article.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="f9301-116">Dla typu wartości, należy zawsze zaimplementować <see cref="T:System.IEquatable`1" /> i zastąpić <see cref="M:System.Object.Equals(System.Object)" /> w celu poprawy wydajności.</span><span class="sxs-lookup"><span data-stu-id="f9301-116">For a value type, you should always implement <see cref="T:System.IEquatable`1" /> and override <see cref="M:System.Object.Equals(System.Object)" /> for better performance.</span></span> <span data-ttu-id="f9301-117"><see cref="M:System.Object.Equals(System.Object)" /> pola typów wartości i zależy od odbicia porównuje dwie wartości pod kątem równości.</span><span class="sxs-lookup"><span data-stu-id="f9301-117"><see cref="M:System.Object.Equals(System.Object)" /> boxes value types and relies on reflection to compare two values for equality.</span></span> <span data-ttu-id="f9301-118">Zarówno implementacji <see cref="M:System.IEquatable`1.Equals(`0)" /> i zastąpienia z <see cref="M:System.Object.Equals(System.Object)" /> powinien zwrócić spójne wyniki.</span><span class="sxs-lookup"><span data-stu-id="f9301-118">Both your implementation of <see cref="M:System.IEquatable`1.Equals(`0)" /> and your override of <see cref="M:System.Object.Equals(System.Object)" /> should return consistent results.</span></span>  
  
 <span data-ttu-id="f9301-119">W przypadku zastosowania <see cref="T:System.IEquatable`1" />, powinny również implementować <see cref="T:System.IComparable`1" /> Jeśli wystąpień tego typu mogą być uporządkowane lub sortowane.</span><span class="sxs-lookup"><span data-stu-id="f9301-119">If you implement <see cref="T:System.IEquatable`1" />, you should also implement <see cref="T:System.IComparable`1" /> if instances of your type can be ordered or sorted.</span></span> <span data-ttu-id="f9301-120">Jeśli Twoje typ implementuje <see cref="T:System.IComparable`1" />, prawie zawsze także implementować <see cref="T:System.IEquatable`1" />.</span><span class="sxs-lookup"><span data-stu-id="f9301-120">If your type implements <see cref="T:System.IComparable`1" />, you almost always also implement <see cref="T:System.IEquatable`1" />.</span></span></para>
      <para><span data-ttu-id="f9301-121">Należy pamiętać, że niektóre projekty, gdy typem obsługuje relacji kolejności, ale równości może się różnić od porządkowania relacji.</span><span class="sxs-lookup"><span data-stu-id="f9301-121">Note that there are some designs where a type supports an order relation, but equality may be distinct from an ordering relation.</span></span> <span data-ttu-id="f9301-122">Należy wziąć pod uwagę `Person` klasy, w którym sortowania w porządku alfabetycznym.</span><span class="sxs-lookup"><span data-stu-id="f9301-122">Consider a `Person` class where you sort alphabetically.</span></span> <span data-ttu-id="f9301-123">Dwie osoby o takiej samej nazwie sortowania taki sam, ale nie są ta sama osoba.</span><span class="sxs-lookup"><span data-stu-id="f9301-123">Two people with the same name sort the same, but are not the same person.</span></span></para>
    </block>
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.IComparable" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IEquatable`1.Equals(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="f9301-124">Obiekt do porównania z tym obiektem.</span><span class="sxs-lookup"><span data-stu-id="f9301-124">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="f9301-125">Wskazuje, czy bieżący obiekt jest taki sam, jak inny obiekt tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="f9301-125">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns>
          <span data-ttu-id="f9301-126"><see langword="true" /> Jeśli bieżący obiekt jest taki sam <paramref name="other" /> parametru; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9301-126"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9301-127">Implementacja <xref:System.IEquatable%601.Equals%2A> metoda jest przeznaczona do wykonania testu równości z innym obiektem typu `T`, taki sam typ jak bieżący obiekt.</span><span class="sxs-lookup"><span data-stu-id="f9301-127">The implementation of the <xref:System.IEquatable%601.Equals%2A> method is intended to perform a test for equality with another object of type `T`, the same type as the current object.</span></span> <span data-ttu-id="f9301-128"><xref:System.IEquatable%601.Equals(%600)> Metoda jest wywoływana w następujących okolicznościach:</span><span class="sxs-lookup"><span data-stu-id="f9301-128">The <xref:System.IEquatable%601.Equals(%600)> method is called in the following circumstances:</span></span>  
  
-   <span data-ttu-id="f9301-129">Gdy `Equals` metoda jest wywoływana i `other` argument jest jednoznacznie obiektu typu `T`.</span><span class="sxs-lookup"><span data-stu-id="f9301-129">When the `Equals` method is called and the `other` argument is a strongly-typed object of type `T`.</span></span> <span data-ttu-id="f9301-130">(Jeśli `other` nie jest typu `T`, bazie <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="f9301-130">(If `other` is not of type `T`, the base <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="f9301-131">Z dwóch metod <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> zapewnia nieco większą wydajność.)</span><span class="sxs-lookup"><span data-stu-id="f9301-131">Of the two methods, <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> offers slightly better performance.)</span></span>  
  
-   <span data-ttu-id="f9301-132">Kiedy są wywoływane metody wyszukiwania liczby obiektów kolekcji ogólnej.</span><span class="sxs-lookup"><span data-stu-id="f9301-132">When the search methods of a number of generic collection objects are called.</span></span> <span data-ttu-id="f9301-133">Niektóre z tych typów i ich metod są następujące:</span><span class="sxs-lookup"><span data-stu-id="f9301-133">Some of these types and their methods include the following:</span></span>  
  
    -   <span data-ttu-id="f9301-134">Niektóre z ogólnym przeciążeń <xref:System.Array.BinarySearch%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f9301-134">Some of the generic overloads of the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
    -   <span data-ttu-id="f9301-135">Metody wyszukiwania <xref:System.Collections.Generic.List%601> klasy, w tym <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, i <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f9301-135">The search methods of the <xref:System.Collections.Generic.List%601> class, including <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, and <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="f9301-136">Metody wyszukiwania <xref:System.Collections.Generic.Dictionary%602> klasy, w tym <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> i <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9301-136">The search methods of the <xref:System.Collections.Generic.Dictionary%602> class, including <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> and <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span></span>  
  
    -   <span data-ttu-id="f9301-137">Metody wyszukiwania ogólnego <xref:System.Collections.Generic.LinkedList%601> klasy, w tym <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> i <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9301-137">The search methods of the generic <xref:System.Collections.Generic.LinkedList%601> class, including <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> and <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span></span>  
  
 <span data-ttu-id="f9301-138">Innymi słowy, aby obsłużyć możliwość, że obiekty klasy będą przechowywane w tablicy lub obiektu kolekcji uniwersalnej, jest dobrym rozwiązaniem jest wdrożenie <xref:System.IEquatable%601> tak, aby obiekt można łatwo zidentyfikować i manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="f9301-138">In other words, to handle the possibility that objects of a class will be stored in an array or a generic collection object, it is a good idea to implement <xref:System.IEquatable%601> so that the object can be easily identified and manipulated.</span></span>  
  
 <span data-ttu-id="f9301-139">Podczas implementowania <xref:System.IEquatable%601.Equals%2A> metody Definiowanie równości odpowiednio do typu argumentu typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="f9301-139">When implementing the <xref:System.IEquatable%601.Equals%2A> method, define equality appropriately for the type specified by the generic type argument.</span></span> <span data-ttu-id="f9301-140">Na przykład, jeśli argument typu jest <xref:System.Int32>, definiowanie równości odpowiednio do porównania dwóch 32-bitowych liczb całkowitych ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="f9301-140">For example, if the type argument is <xref:System.Int32>, define equality appropriately for the comparison of two 32-bit signed integers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9301-141">W poniższym przykładzie przedstawiono częściowa implementacja `Person` klasa implementująca <xref:System.IEquatable%601> i ma dwie właściwości `LastName` i `SSN`.</span><span class="sxs-lookup"><span data-stu-id="f9301-141">The following example shows the partial implementation of a `Person` class that implements <xref:System.IEquatable%601> and has two properties, `LastName` and `SSN`.</span></span> <span data-ttu-id="f9301-142"><xref:System.IEquatable%601.Equals%2A> Metoda zwraca `True` Jeśli `SSN` właściwości dwóch `Person` obiektów jest identyczny; w przeciwnym razie zwraca `False`.</span><span class="sxs-lookup"><span data-stu-id="f9301-142">The <xref:System.IEquatable%601.Equals%2A> method returns `True` if the `SSN` property of two `Person` objects is identical; otherwise, it returns `False`.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/EqualsEx2.cs#3)]
 [!code-vb[System.GenericIEquatable.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/EqualsEx2.vb#3)]  
  
 <span data-ttu-id="f9301-143">`Person` obiekty mogą być następnie przechowywane w <xref:System.Collections.Generic.List%601> obiektu i mogą zostać zidentyfikowane przez `Contains` metody, jak przedstawiono na poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="f9301-143">`Person` objects can then be stored in a <xref:System.Collections.Generic.List%601> object and can be identified by the `Contains` method, as the following example shows.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/Snippet12.cs#12)]
 [!code-vb[System.GenericIEquatable.Equals#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/Snippet12.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="f9301-144">W przypadku zastosowania <see cref="M:System.IEquatable`1.Equals(`0)" />, również powinny zastępować implementacji klasy podstawowej <see cref="M:System.Object.Equals(System.Object)" /> i <see cref="M:System.Object.GetHashCode" /> tak, aby ich zachowanie jest zgodne z tymi, które <see cref="M:System.IEquatable`1.Equals(`0)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="f9301-144">If you implement <see cref="M:System.IEquatable`1.Equals(`0)" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method.</span></span> <span data-ttu-id="f9301-145">Jeśli zastąpienie <see cref="M:System.Object.Equals(System.Object)" />, implementacji przesłoniętych jest również nazywany w wywołaniach statycznych <see langword="Equals(System.Object, System.Object)" /> metody w klasie.</span><span class="sxs-lookup"><span data-stu-id="f9301-145">If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class.</span></span> <span data-ttu-id="f9301-146">Ponadto powinien przeciążać <see langword="op_Equality" /> i <see langword="op_Inequality" /> operatorów.</span><span class="sxs-lookup"><span data-stu-id="f9301-146">In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators.</span></span> <span data-ttu-id="f9301-147">Daje to pewność, że wszystkie testy równości zwracają spójne wyniki, co pokazano w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="f9301-147">This ensures that all tests for equality return consistent results, which the example illustrates.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>