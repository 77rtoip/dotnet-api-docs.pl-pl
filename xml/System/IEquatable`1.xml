<Type Name="IEquatable&lt;T&gt;" FullName="System.IEquatable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6cf9514e878010f1710a9517414d04169c8524bc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36431075" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEquatable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEquatable`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IEquatable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEquatable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEquatable" />
  <TypeSignature Language="F#" Value="type IEquatable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Typ obiektów do porównania.</typeparam>
    <summary>Definiuje metodę uogólniony implementujący typu wartości lub klasy do utworzenia metody określania równości wystąpienia określonego typu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs jest implementowany przez typy, których wartości można postaci (na przykład numeryczne i ciąg klasy). Typ wartości lub klasa implementuje <xref:System.IEquatable%601.Equals%2A> metodę w celu utworzenia odpowiedniego określania równości wystąpienia metody określonego typu.  
  
> [!NOTE]
>  <xref:System.IComparable%601> Interfejs definiuje <xref:System.IComparable%601.CompareTo%2A> metodę, która określa porządek sortowania wystąpień typu implementującej. <xref:System.IEquatable%601> Interfejs definiuje <xref:System.IEquatable%601.Equals%2A> metodę, która określa równości wystąpień typu implementującej.  
  
 <xref:System.IEquatable%601> Interfejs jest używany przez obiekty kolekcji ogólnych, takich jak <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, i <xref:System.Collections.Generic.LinkedList%601> podczas testowania pod kątem równości w tych metod jako `Contains`, `IndexOf`, `LastIndexOf`, i `Remove`. Powinny zostać wdrożone dla dowolnego obiektu, które mogą być przechowywane w zbiorze ogólnym.  
  
   
  
## Examples  
 Zobacz przykład <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Zastąp parametr typu <see cref="T:System.IEquatable`1" /> interfejsu z typem, który implementuje ten interfejs.  W przypadku zastosowania <see cref="T:System.IEquatable`1" />, również powinny zastępować implementacji klasy podstawowej <see cref="M:System.Object.Equals(System.Object)" /> i <see cref="M:System.Object.GetHashCode" /> tak, aby ich zachowanie jest zgodne z tymi, które <see cref="M:System.IEquatable`1.Equals(`0)" /> metody. Jeśli zastąpienie <see cref="M:System.Object.Equals(System.Object)" />, implementacji przesłoniętych jest również nazywany w wywołaniach statycznych <see langword="Equals(System.Object, System.Object)" /> metody w klasie. Ponadto powinien przeciążać <see langword="op_Equality" /> i <see langword="op_Inequality" /> operatorów. Daje to pewność, że wszystkie testy równości zwracają spójne wyniki.  <block subset="none" type="note"><para> Aby uzyskać informacje dotyczące zastępowania <see cref="M:System.Object.Equals(System.Object)" />, zobacz <see cref="M:System.Object.Equals(System.Object)" /> artykułu.  </para></block>  Dla typu wartości, należy zawsze zaimplementować <see cref="T:System.IEquatable`1" /> i zastąpić <see cref="M:System.Object.Equals(System.Object)" /> w celu poprawy wydajności. <see cref="M:System.Object.Equals(System.Object)" /> pola typy wartości i zależy od odbicia porównuje dwie wartości pod kątem równości. Zarówno implementacji <see cref="M:System.IEquatable`1.Equals(`0)" /> i zastąpienia z <see cref="M:System.Object.Equals(System.Object)" /> powinien zwrócić spójne wyniki.  W przypadku zastosowania <see cref="T:System.IEquatable`1" />, powinny również implementować <see cref="T:System.IComparable`1" /> Jeśli wystąpień tego typu mogą być uporządkowane lub sortowane. Jeśli Twoje typ implementuje <see cref="T:System.IComparable`1" />, prawie zawsze także implementować <see cref="T:System.IEquatable`1" />.</para>
      <para>Należy pamiętać, że niektóre projekty, gdy typem obsługuje relacji kolejności, ale równości może się różnić od porządkowania relacji. Należy wziąć pod uwagę klasy "Osoba", gdzie sortowania w porządku alfabetycznym. Dwie osoby o takiej samej nazwie sortowania taki sam, ale nie są ta sama osoba.</para>
    </block>
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.IComparable" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IEquatable`1.Equals(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T -&gt; bool" Usage="iEquatable.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other">Obiekt do porównania z tym obiektem.</param>
        <summary>Wskazuje, czy bieżący obiekt jest taki sam, jak inny obiekt tego samego typu.</summary>
        <returns>
          <see langword="true" /> Jeśli bieżący obiekt jest taki sam <paramref name="other" /> parametru; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacja <xref:System.IEquatable%601.Equals%2A> metoda jest przeznaczona do wykonania testu równości z innym obiektem typu `T`, taki sam typ jak bieżący obiekt. <xref:System.IEquatable%601.Equals(%600)> Metoda jest wywoływana w następujących okolicznościach:  
  
-   Gdy `Equals` metoda jest wywoływana i `other` argument jest jednoznacznie obiektu typu `T`. (Jeśli `other` nie jest typu `T`, bazie <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> metoda jest wywoływana. Z dwóch metod <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> zapewnia nieco większą wydajność.)  
  
-   Kiedy są wywoływane metody wyszukiwania liczby obiektów kolekcji ogólnej. Niektóre z tych typów i ich metod są następujące:  
  
    -   Niektóre z ogólnym przeciążeń <xref:System.Array.BinarySearch%2A> metody.  
  
    -   Metody wyszukiwania <xref:System.Collections.Generic.List%601> klasy, w tym <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, i <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.  
  
    -   Metody wyszukiwania <xref:System.Collections.Generic.Dictionary%602> klasy, w tym <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> i <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.  
  
    -   Metody wyszukiwania ogólnego <xref:System.Collections.Generic.LinkedList%601> klasy, w tym <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> i <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.  
  
 Innymi słowy, aby obsłużyć możliwość, że obiekty klasy będą przechowywane w tablicy lub obiektu kolekcji uniwersalnej, jest dobrym rozwiązaniem jest wdrożenie <xref:System.IEquatable%601> tak, aby obiekt można łatwo zidentyfikować i manipulowanie.  
  
 Podczas implementowania <xref:System.IEquatable%601.Equals%2A> metody Definiowanie równości odpowiednio do typu argumentu typu ogólnego. Na przykład, jeśli argument typu jest <xref:System.Int32>, definiowanie równości odpowiednio do porównania dwóch 32-bitowych liczb całkowitych ze znakiem.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono częściowa implementacja `Person` klasa implementująca <xref:System.IEquatable%601> i ma dwie właściwości `LastName` i `SSN`. <xref:System.IEquatable%601.Equals%2A> Metoda zwraca `True` Jeśli `SSN` właściwości dwóch `Person` obiektów jest identyczny; w przeciwnym razie zwraca `False`.  
  
 [!code-csharp[System.GenericIEquatable.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/EqualsEx2.cs#3)]
 [!code-vb[System.GenericIEquatable.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/EqualsEx2.vb#3)]  
  
 `Person` obiekty mogą być następnie przechowywane w <xref:System.Collections.Generic.List%601> obiektu i mogą zostać zidentyfikowane przez `Contains` metody, jak przedstawiono na poniższym przykładzie.  
  
 [!code-csharp[System.GenericIEquatable.Equals#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/Snippet12.cs#12)]
 [!code-vb[System.GenericIEquatable.Equals#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/Snippet12.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku zastosowania <see cref="M:System.IEquatable`1.Equals(`0)" />, również powinny zastępować implementacji klasy podstawowej <see cref="M:System.Object.Equals(System.Object)" /> i <see cref="M:System.Object.GetHashCode" /> tak, aby ich zachowanie jest zgodne z tymi, które <see cref="M:System.IEquatable`1.Equals(`0)" /> metody. Jeśli zastąpienie <see cref="M:System.Object.Equals(System.Object)" />, implementacji przesłoniętych jest również nazywany w wywołaniach statycznych <see langword="Equals(System.Object, System.Object)" /> metody w klasie. Ponadto powinien przeciążać <see langword="op_Equality" /> i <see langword="op_Inequality" /> operatorów. Daje to pewność, że wszystkie testy równości zwracają spójne wyniki, co pokazano w przykładzie.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>