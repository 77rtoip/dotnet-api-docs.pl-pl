<Type Name="IEquatable&lt;T&gt;" FullName="System.IEquatable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fcae00acfa7690a177a9ae3923d64e925291729" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69420291" /></Metadata><TypeSignature Language="C#" Value="public interface IEquatable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEquatable`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IEquatable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEquatable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEquatable" />
  <TypeSignature Language="F#" Value="type IEquatable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Typ obiektów do porównania.</typeparam>
    <summary>Definiuje uogólnioną metodę, która jest implementowana przez typ wartości lub klasy w celu utworzenia metody specyficznej dla określonego typu w celu określenia równości wystąpień.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs jest implementowany przez typy, których wartości mogą być równe (na przykład klasy liczbowe i ciągi). Typ wartości lub Klasa implementuje metodę, <xref:System.IEquatable%601.Equals%2A> aby utworzyć metodę specyficzną dla typu odpowiednią do określania równości wystąpień.  
  
> [!NOTE]
>  <xref:System.IComparable%601> Interfejs<xref:System.IComparable%601.CompareTo%2A> definiuje metodę, która określa kolejność sortowania wystąpień typu implementującego. <xref:System.IEquatable%601> Interfejs<xref:System.IEquatable%601.Equals%2A> definiuje metodę, która określa równość wystąpień typu implementującego.  
  
 `Contains` `LastIndexOf` <xref:System.Collections.Generic.LinkedList%601> `IndexOf` <xref:System.Collections.Generic.Dictionary%602> <xref:System.Collections.Generic.List%601>Interfejs jest używany przez obiekty kolekcji generycznej, takie jak, i podczas testowania pod kątem równości w takich metodach jak,, `Remove`i. <xref:System.IEquatable%601> Należy ją zaimplementować dla każdego obiektu, który może być przechowywany w kolekcji ogólnej.  
  
   
  
## Examples  
 Zobacz przykład dla <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Zastąp parametr <see cref="T:System.IEquatable`1" /> Type interfejsu typem implementującym ten interfejs.  
  
W przypadku zaimplementowania <see cref="T:System.IEquatable`1" />należy również przesłonić <see cref="M:System.Object.Equals(System.Object)" /> implementacje klas podstawowych <see cref="M:System.Object.GetHashCode" /> i tak, aby <see cref="M:System.IEquatable`1.Equals(`0)" /> ich zachowanie było zgodne z tą metodą. W przypadku przesłonięcia <see cref="M:System.Object.Equals(System.Object)" />przesłonięta implementacja jest również wywoływana w wywołaniach metody <see langword="Equals(System.Object, System.Object)" /> statycznej klasy. Ponadto należy przeciążać <see langword="op_Equality" /> operatory i <see langword="op_Inequality" /> . Dzięki temu wszystkie testy pod kątem równości zwracają spójne wyniki.  
  
 <block subset="none" type="note"><para>  
 Aby uzyskać informacje na <see cref="M:System.Object.Equals(System.Object)" />temat przesłaniania <see cref="M:System.Object.Equals(System.Object)" /> , zobacz artykuł.  
  
</para></block>  
  
 Dla typu wartości należy zawsze implementować <see cref="T:System.IEquatable`1" /> i przesłonić <see cref="M:System.Object.Equals(System.Object)" /> w celu zwiększenia wydajności. <see cref="M:System.Object.Equals(System.Object)" />pola typów wartości i opierają się na odbiciu w celu porównania dwóch wartości dla równości. Zarówno implementacja <see cref="M:System.IEquatable`1.Equals(`0)" /> , jak i <see cref="M:System.Object.Equals(System.Object)" /> przesłonięcie powinny zwracać spójne wyniki.  
  
W przypadku zaimplementowania <see cref="T:System.IEquatable`1" />należy również zaimplementować <see cref="T:System.IComparable`1" /> , czy wystąpienia typu mogą być uporządkowane lub sortowane. Jeśli typ implementuje <see cref="T:System.IComparable`1" />, prawie zawsze zaimplementowana jest <see cref="T:System.IEquatable`1" />również implementacja.</para>
      <para>Należy zauważyć, że istnieją projekty, w których typ obsługuje relację zamówienia, ale równość może być odmienne względem relacji kolejności. Rozważmy `Person` klasę, w której sortujesz alfabetycznie. Dwie osoby o tej samej nazwie sortują te same, ale nie są tej samej osoby.</para></block>
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.IComparable" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IEquatable`1.Equals(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T -&gt; bool" Usage="iEquatable.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other">Obiekt, który ma zostać porównany z tym obiektem.</param>
        <summary>Wskazuje, czy bieżący obiekt jest równy innemu obiektowi tego samego typu.</summary>
        <returns><see langword="true" />Jeśli bieżący obiekt jest równy <paramref name="other" /> parametrowi; w przeciwnym razie,. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacja <xref:System.IEquatable%601.Equals%2A> metody jest przeznaczona do wykonania testu pod kątem równości z innym obiektem typu `T`, tego samego typu co bieżący obiekt. <xref:System.IEquatable%601.Equals(%600)> Metoda jest wywoływana w następujących okolicznościach:  
  
-   Gdy metoda jest wywoływana `other` i argument jest obiektem o jednoznacznie określonym typie `T`. `Equals` (Jeśli `other` nie jest typu `T`, wywoływana jest metoda <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> podstawowa. Z dwóch metod <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> oferuje nieco lepszą wydajność.  
  
-   Gdy wywoływana jest metoda wyszukiwania dla wielu obiektów kolekcji ogólnej. Poniżej wymieniono niektóre z tych typów i ich metody:  
  
    -   Niektóre z ogólnych przeciążeń <xref:System.Array.BinarySearch%2A> metody.  
  
    -   Metody <xref:System.Collections.Generic.List%601> wyszukiwania klasy, w tym <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, i <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.  
  
    -   Metody <xref:System.Collections.Generic.Dictionary%602> wyszukiwania klasy, w tym <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> i <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.  
  
    -   Metody wyszukiwania klasy generycznej <xref:System.Collections.Generic.LinkedList%601> , w tym <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> i <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.  
  
 Innymi słowy, aby obsłużyć możliwość, że obiekty klasy będą przechowywane w tablicy lub ogólnym obiekcie kolekcji, to dobrym pomysłem jest zaimplementowanie <xref:System.IEquatable%601> , aby umożliwić łatwe identyfikowanie i manipulowanie obiektem.  
  
 Podczas implementowania <xref:System.IEquatable%601.Equals%2A> metody, zdefiniuj równość odpowiednio dla typu określonego przez argument typu ogólnego. Na przykład, jeśli argumentem typu jest <xref:System.Int32>, zdefiniuj równość odpowiednio dla porównania 2 32-bitowych liczb całkowitych ze znakiem.  
  
   
  
## Examples  
 W `Person` poniższym przykładzie przedstawiono częściową implementację klasy, która implementuje <xref:System.IEquatable%601> i ma dwie właściwości, `LastName` i. `SSN` <xref:System.IEquatable%601.Equals%2A> Metoda zwraca `True` Jeśli Właściwość`SSN` `False`dwóch obiektówjesttakasama;wprzeciwnymraziezwraca`Person` .  
  
 [!code-csharp[System.GenericIEquatable.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/EqualsEx2.cs#3)]
 [!code-vb[System.GenericIEquatable.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/EqualsEx2.vb#3)]  
  
 `Person`obiekty mogą być następnie przechowywane w <xref:System.Collections.Generic.List%601> obiekcie i mogą być identyfikowane `Contains` przez metodę, jak pokazano w poniższym przykładzie.  
  
 [!code-csharp[System.GenericIEquatable.Equals#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/Snippet12.cs#12)]
 [!code-vb[System.GenericIEquatable.Equals#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/Snippet12.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku zaimplementowania <see cref="M:System.IEquatable`1.Equals(`0)" />należy również przesłonić <see cref="M:System.Object.Equals(System.Object)" /> implementacje klas podstawowych <see cref="M:System.Object.GetHashCode" /> i tak, aby <see cref="M:System.IEquatable`1.Equals(`0)" /> ich zachowanie było zgodne z tą metodą. W przypadku przesłonięcia <see cref="M:System.Object.Equals(System.Object)" />przesłonięta implementacja jest również wywoływana w wywołaniach metody <see langword="Equals(System.Object, System.Object)" /> statycznej klasy. Ponadto należy przeciążać <see langword="op_Equality" /> operatory i <see langword="op_Inequality" /> . Gwarantuje to, że wszystkie testy na potrzeby równości zwracają spójne wyniki, które przykład ilustruje.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
