<Type Name="GenericUriParser" FullName="System.GenericUriParser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df1082446a95937cd93cd58c704e34204d3b971d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37727877" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GenericUriParser : UriParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GenericUriParser extends System.UriParser" />
  <TypeSignature Language="DocId" Value="T:System.GenericUriParser" />
  <TypeSignature Language="VB.NET" Value="Public Class GenericUriParser&#xA;Inherits UriParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenericUriParser : UriParser" />
  <TypeSignature Language="F#" Value="type GenericUriParser = class&#xA;    inherit UriParser" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.UriParser</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Można dostosować analizator dla hierarchicznych identyfikatora URI.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli chcesz tworzyć analizatorem oparte na schemat dobrze znane, należy użyć <xref:System.HttpStyleUriParser>, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>, lub <xref:System.NewsStyleUriParser>.  
  
 Podczas tworzenia analizatora można dostosowywać, zachowanie Analizator jest określona przez przekazanie bitowa kombinacja wartości, które są dostępne w <xref:System.GenericUriParserOptions?displayProperty=nameWithType> wyliczeniu, aby <xref:System.GenericUriParser> konstruktora.  
  
 Istniejące <xref:System.Uri?displayProperty=nameWithType> klasa została rozszerzona, aby zapewnić obsługę międzynarodowych identyfikatorów zasobów (IRI) i międzynarodowych nazw domen (IDN). Bieżąca liczba użytkowników nie będą widzieć wszelkie zmiany w zachowaniu .NET Framework 2.0, chyba że jawnie włączyć IRI. Dzięki temu zgodność aplikacji z wcześniejszych wersji programu .NET Framework.  
  
 Wszystkie analizatory składni pochodną <xref:System.GenericUriParser> nie uzyska IRI i IDN domyślnie. <xref:System.GenericUriParserOptions.Default> Opcji nie obejmuje IRI i IDN pomocy technicznej. Dwa nowe wartości są dodawane do <xref:System.GenericUriParserOptions?displayProperty=nameWithType> wyliczenie, aby wskazać, czy analizator niestandardowy obsługuje IRI i IDN.  
  
 Aby uzyskać więcej informacji na temat obsługi IRI i IDN, zobacz sekcję Spostrzeżenia, aby <xref:System.Uri?displayProperty=nameWithType> klasy.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenericUriParser (GenericUriParserOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.GenericUriParserOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GenericUriParser.#ctor(System.GenericUriParserOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As GenericUriParserOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GenericUriParser(GenericUriParserOptions options);" />
      <MemberSignature Language="F#" Value="new GenericUriParser : GenericUriParserOptions -&gt; GenericUriParser" Usage="new System.GenericUriParser options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.GenericUriParserOptions" />
      </Parameters>
      <Docs>
        <param name="options">Określ opcje dla tego <see cref="T:System.GenericUriParser" />.</param>
        <summary>Utwórz dostosowywalne analizatora dla hierarchicznych identyfikatora URI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyć tego konstruktora jako argument <xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType>  
  
 Jeśli chcesz tworzyć analizatorem oparte na schemat dobrze znane, należy użyć <xref:System.HttpStyleUriParser>, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>, lub <xref:System.NewsStyleUriParser>.  
  
 Podczas tworzenia analizatora można dostosowywać, zachowanie Analizator jest określona przez przekazanie bitowa kombinacja wartości, które są dostępne w <xref:System.GenericUriParserOptions?displayProperty=nameWithType> wyliczeniu, aby <xref:System.GenericUriParser> konstruktora.  
  
 Istniejące <xref:System.Uri?displayProperty=nameWithType> klasa została rozszerzona, aby zapewnić obsługę międzynarodowych identyfikatorów zasobów (IRI) i międzynarodowych nazw domen (IDN). Bieżąca liczba użytkowników nie będą widzieć wszelkie zmiany w zachowaniu .NET Framework 2.0, chyba że jawnie włączyć IRI. Dzięki temu zgodność aplikacji z wcześniejszych wersji programu .NET Framework.  
  
 Wszystkie analizatory składni pochodną <xref:System.GenericUriParser> nie uzyska IRI i IDN domyślnie. <xref:System.GenericUriParserOptions.Default> Opcji nie obejmuje IRI i IDN pomocy technicznej. Dwa nowe wartości są dodawane do <xref:System.GenericUriParserOptions?displayProperty=nameWithType> wyliczenie, aby wskazać, czy analizator niestandardowy obsługuje IRI i IDN.  
  
 <xref:System.GenericUriParserOptions.IriParsing> Typ wskazuje parser obsługuje reguły analizy składni określony w RFC 3987 dla międzynarodowych identyfikatorów zasobów (IRI). Czy jest używany IRI jest zależna od wartości konfiguracji.  
  
 <xref:System.GenericUriParserOptions.Idn> Typ wskazuje parser obsługuje międzynarodowych nazw domen (IDN) podczas analizowania (IDN) nazw hostów. Czy jest używany IDN jest zależna od wartości konfiguracji.  
  
 Ustawienie konfiguracji dotyczące <xref:System.Configuration.IdnElement?displayProperty=nameWithType> pośrednio jest kontrolowana przez <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> ustawienie konfiguracji, które kontroluje przetwarzanie w IRI <xref:System.Uri?displayProperty=nameWithType> klasy. Przetwarzanie IRI musi być włączona dla IDN, przetwarzania, aby zawsze jest możliwe. Jeśli przetwarzanie IRI jest wyłączone, ustawienie domyślne, których zachowanie środowiska .NET Framework 2.0 jest używany do zapewnienia zgodności i nazwy IDN nie są używane ustawiony jest IDN przetwarzania.  
  
 Atrybut Zinternacjonalizowanych nazw domen (IDN) czynność reguluje tylko IDN przetwarzania. Wszystkie inne IRI przetwarzania (na przykład znak normalizacji) odbywa się domyślnie.  
  
 Aby uzyskać więcej informacji na temat obsługi IRI i IDN, zobacz sekcję Spostrzeżenia, aby <xref:System.Uri?displayProperty=nameWithType> klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.GenericUriParserOptions" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>