<Type Name="Array" FullName="System.Array">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e84e497cc9b3a9531978b8704b5e107ac8cfda55" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36435088" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Array : ICloneable, System.Collections.IList, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Array extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Array" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Array&#xA;Implements ICloneable, IList, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Array abstract : ICloneable, System::Collections::IList, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Array = class&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IList&#xA;    interface IEnumerable&#xA;    interface IStructuralComparable&#xA;    interface IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="64f69-101">Udostępnia metody tworzenia, modyfikowania, wyszukiwania i sortowania tablic, w tym samym służy jako klasa podstawowa dla wszystkich tablic w środowisko uruchomieniowe języka wspólnego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="64f69-101">Provides methods for creating, manipulating, searching, and sorting arrays, thereby serving as the base class for all arrays in the common language runtime.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-102"><xref:System.Array> Klasa nie jest częścią <xref:System.Collections> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="64f69-102">The <xref:System.Array> class is not part of the <xref:System.Collections> namespaces.</span></span> <span data-ttu-id="64f69-103">Jednak nadal uważa się kolekcji, ponieważ jest on oparty na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-103">However, it is still considered a collection because it is based on the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="64f69-104"><xref:System.Array> Klasa jest klasą podstawową dla implementacji języka, które obsługują tablic.</span><span class="sxs-lookup"><span data-stu-id="64f69-104">The <xref:System.Array> class is the base class for language implementations that support arrays.</span></span> <span data-ttu-id="64f69-105">Jednak tylko systemu i kompilatory można jawnie pochodzi od <xref:System.Array> klasy.</span><span class="sxs-lookup"><span data-stu-id="64f69-105">However, only the system and compilers can derive explicitly from the <xref:System.Array> class.</span></span> <span data-ttu-id="64f69-106">Użytkownicy powinny zostać konstrukcje tablicy udostępniane przez język.</span><span class="sxs-lookup"><span data-stu-id="64f69-106">Users should employ the array constructs provided by the language.</span></span>  
  
 <span data-ttu-id="64f69-107">Element ma wartość <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-107">An element is a value in an <xref:System.Array>.</span></span> <span data-ttu-id="64f69-108">Długość <xref:System.Array> jest to całkowita liczba elementów może zawierać.</span><span class="sxs-lookup"><span data-stu-id="64f69-108">The length of an <xref:System.Array> is the total number of elements it can contain.</span></span> <span data-ttu-id="64f69-109">Dolna granica <xref:System.Array> jest indeks pierwszego elementu.</span><span class="sxs-lookup"><span data-stu-id="64f69-109">The lower bound of an <xref:System.Array> is the index of its first element.</span></span> <span data-ttu-id="64f69-110"><xref:System.Array> Może mieć żadnych dolna granica, ale ma dolna granica zero domyślnie.</span><span class="sxs-lookup"><span data-stu-id="64f69-110">An <xref:System.Array> can have any lower bound, but it has a lower bound of zero by default.</span></span> <span data-ttu-id="64f69-111">Podczas tworzenia wystąpienia można zdefiniować dolną granicą inną <xref:System.Array> przy użyciu <xref:System.Array.CreateInstance%2A>. Wielowymiarowe <xref:System.Array> może mieć różne granic dla każdego wymiaru.</span><span class="sxs-lookup"><span data-stu-id="64f69-111">A different lower bound can be defined when creating an instance of the <xref:System.Array> class using <xref:System.Array.CreateInstance%2A>.A multidimensional <xref:System.Array> can have different bounds for each dimension.</span></span> <span data-ttu-id="64f69-112">Tablica może mieć maksymalnie 32 wymiarów.</span><span class="sxs-lookup"><span data-stu-id="64f69-112">An array can have a maximum of 32 dimensions.</span></span>  
  
 <span data-ttu-id="64f69-113">W odróżnieniu od klasy w <xref:System.Collections> przestrzeni nazw, <xref:System.Array> ma stały pojemność.</span><span class="sxs-lookup"><span data-stu-id="64f69-113">Unlike the classes in the <xref:System.Collections> namespaces, <xref:System.Array> has a fixed capacity.</span></span> <span data-ttu-id="64f69-114">Aby zwiększyć pojemność, należy utworzyć nowy <xref:System.Array> obiektów z wymaganą pojemnością, skopiować elementy ze starego <xref:System.Array> do nowego obiektu, a następnie usuń stare <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-114">To increase the capacity, you must create a new <xref:System.Array> object with the required capacity, copy the elements from the old <xref:System.Array> object to the new one, and delete the old <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-115">Domyślnie maksymalny rozmiar <xref:System.Array> 2 gigabajty (GB).</span><span class="sxs-lookup"><span data-stu-id="64f69-115">By default, the maximum size of an <xref:System.Array> is 2 gigabytes (GB).</span></span> <span data-ttu-id="64f69-116">W środowisku 64-bitowym ograniczenie rozmiaru można uniknąć, ustawiając `enabled` atrybutu [gcallowverylargeobjects —](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) element konfiguracji do `true` w środowisku czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="64f69-116">In a 64-bit environment, you can avoid the size restriction by setting the `enabled` attribute of the [gcAllowVeryLargeObjects](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span> <span data-ttu-id="64f69-117">Jednak tablicy nadal będzie ograniczona, łączną liczbę elementów 4 miliardy oraz maksymalny indeks 0X7FEFFFFF w dowolnym danym wymiarze (0X7FFFFFC7 tablice typu byte i tablice struktur jednobajtowe).</span><span class="sxs-lookup"><span data-stu-id="64f69-117">However, the array will still be limited to a total of 4 billion elements, and to a maximum index of 0X7FEFFFFF in any given dimension (0X7FFFFFC7 for byte arrays and arrays of single-byte structures).</span></span>  
  
 <span data-ttu-id="64f69-118">Tablice jednowymiarowe zaimplementować <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.ICollection%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IReadOnlyList%601?displayProperty=nameWithType> i <xref:System.Collections.Generic.IReadOnlyCollection%601?displayProperty=nameWithType> interfejsach.</span><span class="sxs-lookup"><span data-stu-id="64f69-118">Single-dimensional arrays implement the <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.ICollection%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IReadOnlyList%601?displayProperty=nameWithType> and <xref:System.Collections.Generic.IReadOnlyCollection%601?displayProperty=nameWithType> generic interfaces.</span></span> <span data-ttu-id="64f69-119">Implementacje są dostarczane do tablic w czasie wykonywania, a w związku z tym interfejsy ogólne nie są wyświetlane w Składnia deklaracji <xref:System.Array> klasy.</span><span class="sxs-lookup"><span data-stu-id="64f69-119">The implementations are provided to arrays at run time, and as a result, the generic interfaces do not appear in the declaration syntax for the <xref:System.Array> class.</span></span> <span data-ttu-id="64f69-120">Ponadto nie ma żadnych tematy dokumentacji dla członków interfejsu, które są dostępne tylko przez rzutowanie tablicy typu ogólnego interfejsu (jawne implementacje interfejsu).</span><span class="sxs-lookup"><span data-stu-id="64f69-120">In addition,  there are no reference topics for interface members that are accessible only by casting an array to the generic interface type (explicit interface implementations).</span></span> <span data-ttu-id="64f69-121">Klucza jest, aby mieć świadomość podczas rzutowania tablicy do jednej z tych interfejsów jest elementów członkowskich, które dodają, Wstaw lub usuń elementy throw <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-121">The key thing to be aware of when you cast an array to one of these interfaces is that members which add, insert, or remove elements throw <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="64f69-122"><xref:System.Type> obiekty zawierają informacje dotyczące deklaracje typu tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-122"><xref:System.Type> objects provide information about array type declarations.</span></span> <span data-ttu-id="64f69-123"><xref:System.Array> obiekty z tym samym typem tablicy współużytkują takie same <xref:System.Type> obiektu.</span><span class="sxs-lookup"><span data-stu-id="64f69-123"><xref:System.Array> objects with the same array type share the same <xref:System.Type> object.</span></span>  
  
 <span data-ttu-id="64f69-124"><xref:System.Type.IsArray%2A?displayProperty=nameWithType> i <xref:System.Type.GetElementType%2A?displayProperty=nameWithType> nie może zwrócić oczekiwanych rezultatów przy <xref:System.Array> ponieważ jeśli tablica jest rzutowany na typ <xref:System.Array>, wynikiem jest obiekt nie tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-124"><xref:System.Type.IsArray%2A?displayProperty=nameWithType> and <xref:System.Type.GetElementType%2A?displayProperty=nameWithType> might not return the expected results with <xref:System.Array> because if an array is cast to the type <xref:System.Array>, the result is an object, not an array.</span></span> <span data-ttu-id="64f69-125">Oznacza to `typeof(System.Array).IsArray` zwraca `false`, i `typeof(System.Array).GetElementType` zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-125">That is, `typeof(System.Array).IsArray` returns `false`, and `typeof(System.Array).GetElementType` returns `null`.</span></span>  
  
 <span data-ttu-id="64f69-126"><xref:System.Array.Copy%2A?displayProperty=nameWithType> Metoda kopiuje elementy nie tylko między macierzami z tego samego typu, ale również między standardowe tablice o różnych typach; obsługiwane są automatycznie rzutowanie typów.</span><span class="sxs-lookup"><span data-stu-id="64f69-126">The <xref:System.Array.Copy%2A?displayProperty=nameWithType> method copies elements not only between arrays of the same type but also between standard arrays of different types; it handles type casting automatically.</span></span>  
  
 <span data-ttu-id="64f69-127">Niektóre metody, takie jak <xref:System.Array.CreateInstance%2A>, <xref:System.Array.Copy%2A>, <xref:System.Array.CopyTo%2A>, <xref:System.Array.GetValue%2A>, i <xref:System.Array.SetValue%2A>, podaj przeciążenia, które akceptują 64-bitowych liczb całkowitych jako parametry, aby pomieścić tablice dużej pojemności.</span><span class="sxs-lookup"><span data-stu-id="64f69-127">Some methods, such as <xref:System.Array.CreateInstance%2A>, <xref:System.Array.Copy%2A>, <xref:System.Array.CopyTo%2A>, <xref:System.Array.GetValue%2A>, and <xref:System.Array.SetValue%2A>, provide overloads that accept 64-bit integers as parameters to accommodate large capacity arrays.</span></span> <span data-ttu-id="64f69-128"><xref:System.Array.LongLength%2A> i <xref:System.Array.GetLongLength%2A> zwraca 64-bitowych liczb całkowitych wskazującą długości tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-128"><xref:System.Array.LongLength%2A> and <xref:System.Array.GetLongLength%2A> return 64-bit integers indicating the length of the array.</span></span>  
  
 <span data-ttu-id="64f69-129"><xref:System.Array> Nie jest gwarantowana ma zostać posortowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-129">The <xref:System.Array> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="64f69-130">Należy sortować <xref:System.Array> przed wykonaniem operacji (takich jak <xref:System.Array.BinarySearch%2A>), które wymagają <xref:System.Array> ma zostać posortowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-130">You must sort the <xref:System.Array> prior to performing operations (such as <xref:System.Array.BinarySearch%2A>) that require the <xref:System.Array> to be sorted.</span></span>  
  
 <span data-ttu-id="64f69-131">Przy użyciu <xref:System.Array> obiektu wskaźniki w kodzie natywnym nie jest obsługiwana i zgłosi <xref:System.NotSupportedException> dla kilku metod.</span><span class="sxs-lookup"><span data-stu-id="64f69-131">Using an <xref:System.Array> object of pointers in native code is not supported and will throw a <xref:System.NotSupportedException> for several methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-132">Poniższy kod przedstawia przykład sposobu <xref:System.Array.Copy%2A?displayProperty=nameWithType> kopiuje elementy między tablicą typu integer i tablicy typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="64f69-132">The following code example shows how <xref:System.Array.Copy%2A?displayProperty=nameWithType> copies elements between an array of type integer and an array of type <xref:System.Object>.</span></span>  
  
 [!code-cpp[Classic Array Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array Example/CS/source.cs#1)]
 [!code-vb[Classic Array Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array Example/VB/source.vb#1)]  
  
 <span data-ttu-id="64f69-133">Poniższy przykład kodu tworzy i inicjuje <xref:System.Array> i wyświetla jego właściwości i jej elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-133">The following code example creates and initializes an <xref:System.Array> and displays its properties and its elements.</span></span>  
  
 [!code-cpp[Classic Array Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array Example/CPP/source3.cpp#2)]
 [!code-csharp[Classic Array Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array Example/CS/source3.cs#2)]
 [!code-vb[Classic Array Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array Example/VB/source3.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="64f69-134">Publiczne statyczne (<see langword="Shared" /> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="64f69-134">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="64f69-135">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="64f69-135">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="64f69-136">Ta implementacja nie zapewnia zsynchronizowany otoki (wielowątkowość) dla <see cref="T:System.Array" />, jednak na podstawie klasy .NET Framework <see cref="T:System.Array" /> Udostępnij własnych zsynchronizowaną wersję w kolekcji przy użyciu <see cref="P:System.Array.SyncRoot" /> właściwości.</span>
      <span class="sxs-lookup">
        <span data-stu-id="64f69-136">This implementation does not provide a synchronized (thread safe) wrapper for an <see cref="T:System.Array" />; however, .NET Framework classes based on <see cref="T:System.Array" /> provide their own synchronized version of the collection using the <see cref="P:System.Array.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="64f69-137">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span>
      <span class="sxs-lookup">
        <span data-stu-id="64f69-137">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="64f69-138">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span>
      <span class="sxs-lookup">
        <span data-stu-id="64f69-138">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="64f69-139">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="64f69-139">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Type" />
  </Docs>
  <Members>
    <Member MemberName="AsReadOnly&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; AsReadOnly&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; AsReadOnly&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.AsReadOnly``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsReadOnly(Of T) (array As T()) As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ AsReadOnly(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="static member AsReadOnly : 'T[] -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="System.Array.AsReadOnly array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-140">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-140">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-141">Tablica jednowymiarowa, liczony od zera do zakodowania w tylko do odczytu <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> otoki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-141">The one-dimensional, zero-based array to wrap in a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-142">Zwraca tylko do odczytu otoki dla określonej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-142">Returns a read-only wrapper for the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-143">Tylko do odczytu <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> otoki dla określonej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-143">A read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the specified array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-144">Aby zapobiec wszelkie zmiany w tablicy, ujawnia tablicy tylko za pośrednictwem tej otoki.</span><span class="sxs-lookup"><span data-stu-id="64f69-144">To prevent any modifications to the array, expose the array only through this wrapper.</span></span>  
  
 <span data-ttu-id="64f69-145">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="64f69-145">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="64f69-146">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-146">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-147">Poniższy przykład otacza tablicy tylko do odczytu <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="64f69-147">The following example wraps an array in a read-only <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 [!code-cpp[System.Array.AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.AsReadOnly/CPP/arrayasreadonly.cpp#1)]
 [!code-csharp[System.Array.AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.AsReadOnly/CS/arrayasreadonly.cs#1)]
 [!code-vb[System.Array.AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.AsReadOnly/VB/arrayasreadonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-148">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-148">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-149">Wyszukuje jednowymiarowa sortowane <see cref="T:System.Array" /> wartości, przy użyciu algorytmu wyszukiwania binarnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-149">Searches a one-dimensional sorted <see cref="T:System.Array" /> for a value, using a binary search algorithm.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : Array * obj -&gt; int" Usage="System.Array.BinarySearch (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-150">Sortowanych jednowymiarowa <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-150">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-151">Obiekt, który trzeba wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-151">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-152">Wyszukiwanie jako całą jednowymiarowa sortowane tablicy dla określonego elementu, za pomocą <see cref="T:System.IComparable" /> interfejsu zaimplementowanego przez każdy element tablicy i określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-152">Searches an entire one-dimensional sorted array for a specific element, using the <see cref="T:System.IComparable" /> interface implemented by each element of the array and by the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-153">Określony indeks <paramref name="value" /> w określonym <paramref name="array" />, jeśli <paramref name="value" /> zostanie odnaleziony; w przeciwnym razie wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-153">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="64f69-154">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest mniejszy niż jeden lub więcej elementów w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego indeksu pierwszego elementu, który jest większy niż <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-154">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="64f69-155">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest większa niż wszystkie elementy w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego (indeksu ostatnim elementem plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-155">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="64f69-156">Jeśli ta metoda jest wywoływana z innych niż — sortowane <paramref name="array" />, zwracana wartość może być nieprawidłowy i może zostać zwrócona wartość ujemną, nawet jeśli <paramref name="value" /> znajduje się w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-156">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-157">Ta metoda nie obsługuje tablic wyszukiwanie, zawierające ujemne indeksy.</span><span class="sxs-lookup"><span data-stu-id="64f69-157">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="64f69-158">`array` muszą być posortowane przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-158">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="64f69-159">Jeśli <xref:System.Array> nie zawiera określonej wartości, metoda zwraca całkowitą liczbą ujemną.</span><span class="sxs-lookup"><span data-stu-id="64f69-159">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="64f69-160">Operator dopełnienia bitowego można zastosować (~ w języku C# `Not` w języku Visual Basic) do negatywny wynik do tworzenia indeksu.</span><span class="sxs-lookup"><span data-stu-id="64f69-160">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="64f69-161">Jeśli ten indeks jest większa niż górna granica tablicy, istnieją żadnych elementów, które są większe niż `value` w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-161">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="64f69-162">W przeciwnym razie jest to indeks pierwszego elementu, który jest większy niż `value`.</span><span class="sxs-lookup"><span data-stu-id="64f69-162">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="64f69-163">Albo `value` lub każdy element `array` musi implementować <xref:System.IComparable> interfejs, który jest używany do porównania.</span><span class="sxs-lookup"><span data-stu-id="64f69-163">Either `value` or every element of `array` must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="64f69-164">Elementy `array` już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <xref:System.IComparable> implementacji; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-164">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-165">Jeśli`value` nie implementuje <xref:System.IComparable> interfejsu elementy `array` nie są sprawdzane pod kątem <xref:System.IComparable> przed rozpoczęciem wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="64f69-165">If`value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="64f69-166">Jest zwracany wyjątek, jeśli wyszukiwanie napotkał element, który nie implementuje <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="64f69-166">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="64f69-167">Dozwolone są zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-167">Duplicate elements are allowed.</span></span> <span data-ttu-id="64f69-168">Jeśli <xref:System.Array> zawiera więcej niż jeden element równa `value`, metoda zwraca indeks tylko jedno z wystąpień i niekoniecznie pierwsza z nich.</span><span class="sxs-lookup"><span data-stu-id="64f69-168">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="64f69-169">`null` zawsze można porównać z żadnym innym typem odwołania; w związku z tym porównania z `null` nie generują wyjątek.</span><span class="sxs-lookup"><span data-stu-id="64f69-169">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-170">Dla każdego elementu przetestowane `value` jest przekazywany do odpowiedniego <xref:System.IComparable> wdrożenia, nawet jeśli `value` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-170">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="64f69-171">Oznacza to <xref:System.IComparable> wdrożenia Określa jak porównuje danego elementu `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-171">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="64f69-172">Ta metoda jest O (dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-172">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-173">Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Array.BinarySearch%2A> można znaleźć określonego obiektu w <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-173">The following code example shows how to use <xref:System.Array.BinarySearch%2A> to locate a specific object in an <xref:System.Array>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-174">Tablica jest tworzony z jego elementów w kolejności rosnącej.</span><span class="sxs-lookup"><span data-stu-id="64f69-174">The array is created with its elements in ascending sort order.</span></span> <span data-ttu-id="64f69-175"><xref:System.Array.BinarySearch%2A> Metoda wymaga tablicy mają być sortowane w kolejności rosnącej.</span><span class="sxs-lookup"><span data-stu-id="64f69-175">The <xref:System.Array.BinarySearch%2A> method requires the array to be sorted in ascending order.</span></span>  
  
 [!code-cpp[Classic Array.BinarySearch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.BinarySearch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/CS/source.cs#1)]
 [!code-vb[Classic Array.BinarySearch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-176">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-176">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-177">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-177">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-178">
            <paramref name="value" /> Typ nie jest zgodny z elementami <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-178">
              <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-179">
            <paramref name="value" /> nie implementuje <see cref="T:System.IComparable" /> interfejsu i wyszukiwanie napotkał element, który nie implementuje <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-179">
              <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : Array * obj * System.Collections.IComparer -&gt; int" Usage="System.Array.BinarySearch (array, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-180">Sortowanych jednowymiarowa <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-180">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-181">Obiekt, który trzeba wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-181">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-182">
            <see cref="T:System.Collections.IComparer" /> Wdrożenia do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-182">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="64f69-183">- lub - <see langword="null" /> do używania <see cref="T:System.IComparable" /> stosowania dla każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-183">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-184">Wyszukiwanie jako całą jednowymiarowa sortowane tablicy wartości przy użyciu określonego <see cref="T:System.Collections.IComparer" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-184">Searches an entire one-dimensional sorted array for a value using the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-185">Określony indeks <paramref name="value" /> w określonym <paramref name="array" />, jeśli <paramref name="value" /> zostanie odnaleziony; w przeciwnym razie wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-185">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="64f69-186">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest mniejszy niż jeden lub więcej elementów w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego indeksu pierwszego elementu, który jest większy niż <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-186">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="64f69-187">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest większa niż wszystkie elementy w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego (indeksu ostatnim elementem plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-187">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="64f69-188">Jeśli ta metoda jest wywoływana z innych niż — sortowane <paramref name="array" />, zwracana wartość może być nieprawidłowy i może zostać zwrócona wartość ujemną, nawet jeśli <paramref name="value" /> znajduje się w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-188">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-189">Ta metoda nie obsługuje tablic wyszukiwanie, zawierające ujemne indeksy.</span><span class="sxs-lookup"><span data-stu-id="64f69-189">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="64f69-190">`array` muszą być posortowane przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-190">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="64f69-191">Jeśli <xref:System.Array> nie zawiera określonej wartości, metoda zwraca całkowitą liczbą ujemną.</span><span class="sxs-lookup"><span data-stu-id="64f69-191">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="64f69-192">Operator dopełnienia bitowego można zastosować (~ w języku C# `Not` w języku Visual Basic) do negatywny wynik do tworzenia indeksu.</span><span class="sxs-lookup"><span data-stu-id="64f69-192">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="64f69-193">Jeśli ten indeks jest większa niż górna granica tablicy, istnieją żadnych elementów, które są większe niż `value` w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-193">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="64f69-194">W przeciwnym razie jest to indeks pierwszego elementu, który jest większy niż `value`.</span><span class="sxs-lookup"><span data-stu-id="64f69-194">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="64f69-195">Moduł porównujący dostosowuje sposób porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-195">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="64f69-196">Na przykład można użyć <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> jako modułu porównującego do wyszukiwania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="64f69-196">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="64f69-197">Jeśli `comparer` nie jest `null`, elementy `array` są porównywane z podaną wartością przy użyciu określonego <xref:System.Collections.IComparer> implementacji.</span><span class="sxs-lookup"><span data-stu-id="64f69-197">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="64f69-198">Elementy `array` już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez `comparer`; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-198">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="64f69-199">Jeśli`comparer` jest `null`, porównanie wykonuje się za pomocą <xref:System.IComparable> implementacja elementu lub określonej wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-199">If`comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="64f69-200">Elementy `array` już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <xref:System.IComparable> implementacji; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-200">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-201">Jeśli `comparer` jest `null` i `value` nie implementuje <xref:System.IComparable> interfejsu elementy `array` nie są sprawdzane pod kątem <xref:System.IComparable> przed rozpoczęciem wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="64f69-201">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="64f69-202">Jest zwracany wyjątek, jeśli wyszukiwanie napotkał element, który nie implementuje <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="64f69-202">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="64f69-203">Dozwolone są zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-203">Duplicate elements are allowed.</span></span> <span data-ttu-id="64f69-204">Jeśli <xref:System.Array> zawiera więcej niż jeden element równa `value`, metoda zwraca indeks tylko jedno z wystąpień i niekoniecznie pierwsza z nich.</span><span class="sxs-lookup"><span data-stu-id="64f69-204">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="64f69-205">`null` zawsze można porównać z żadnym innym typem odwołania; w związku z tym porównania z `null` nie generują wyjątek.</span><span class="sxs-lookup"><span data-stu-id="64f69-205">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-206">Dla każdego elementu przetestowane `value` jest przekazywany do odpowiedniego <xref:System.IComparable> wdrożenia, nawet jeśli `value` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-206">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="64f69-207">Oznacza to <xref:System.IComparable> wdrożenia Określa jak porównuje danego elementu `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-207">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="64f69-208">Ta metoda jest O (dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-208">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-209">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-209">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-210">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-210">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-211">
            <paramref name="comparer" /> jest <see langword="null" />, i <paramref name="value" /> jest typu, który nie jest zgodny z elementami <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-211">
              <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-212">
            <paramref name="comparer" /> jest <see langword="null" />, <paramref name="value" /> nie implementuje <see cref="T:System.IComparable" /> interfejsu i wyszukiwanie napotkał element, który nie implementuje <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-212">
              <paramref name="comparer" /> is <see langword="null" />, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, int index, int length, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, int32 index, int32 length, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, int index, int length, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : Array * int * int * obj -&gt; int" Usage="System.Array.BinarySearch (array, index, length, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-213">Sortowanych jednowymiarowa <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-213">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-214">Indeks początkowy zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-214">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-215">Długość zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-215">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-216">Obiekt, który trzeba wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-216">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-217">Przeszukuje zakresu elementów tablicą jednowymiarową posortowane wartości, przy użyciu <see cref="T:System.IComparable" /> interfejsu zaimplementowanego przez każdy element tablicy i określonej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-217">Searches a range of elements in a one-dimensional sorted array for a value, using the <see cref="T:System.IComparable" /> interface implemented by each element of the array and by the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-218">Określony indeks <paramref name="value" /> w określonym <paramref name="array" />, jeśli <paramref name="value" /> zostanie odnaleziony; w przeciwnym razie wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-218">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="64f69-219">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest mniejszy niż jeden lub więcej elementów w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego indeksu pierwszego elementu, który jest większy niż <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-219">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="64f69-220">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest większa niż wszystkie elementy w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego (indeksu ostatnim elementem plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-220">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="64f69-221">Jeśli ta metoda jest wywoływana z innych niż — sortowane <paramref name="array" />, zwracana wartość może być nieprawidłowy i może zostać zwrócona wartość ujemną, nawet jeśli <paramref name="value" /> znajduje się w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-221">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-222">Ta metoda nie obsługuje tablic wyszukiwanie, zawierające ujemne indeksy.</span><span class="sxs-lookup"><span data-stu-id="64f69-222">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="64f69-223">`array` muszą być posortowane przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-223">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="64f69-224">Jeśli <xref:System.Array> nie zawiera określonej wartości, metoda zwraca całkowitą liczbą ujemną.</span><span class="sxs-lookup"><span data-stu-id="64f69-224">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="64f69-225">Operator dopełnienia bitowego można zastosować (~ w języku C# `Not` w języku Visual Basic) do negatywny wynik do tworzenia indeksu.</span><span class="sxs-lookup"><span data-stu-id="64f69-225">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result to produce an index.</span></span> <span data-ttu-id="64f69-226">Jeśli ten indeks jest większa niż górna granica tablicy, istnieją żadnych elementów, które są większe niż `value` w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-226">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="64f69-227">W przeciwnym razie jest to indeks pierwszego elementu, który jest większy niż `value`.</span><span class="sxs-lookup"><span data-stu-id="64f69-227">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="64f69-228">Albo `value` lub każdy element `array` musi implementować <xref:System.IComparable> interfejs, który jest używany do porównania.</span><span class="sxs-lookup"><span data-stu-id="64f69-228">Either `value` or every element of `array` must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="64f69-229">Elementy `array` już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <xref:System.IComparable> implementacji; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-229">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-230">Jeśli `value` nie implementuje <xref:System.IComparable> interfejsu elementy `array` nie są sprawdzane pod kątem <xref:System.IComparable> przed rozpoczęciem wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="64f69-230">If `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="64f69-231">Jest zwracany wyjątek, jeśli wyszukiwanie napotkał element, który nie implementuje <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="64f69-231">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="64f69-232">Dozwolone są zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-232">Duplicate elements are allowed.</span></span> <span data-ttu-id="64f69-233">Jeśli <xref:System.Array> zawiera więcej niż jeden element równa `value`, metoda zwraca indeks tylko jedno z wystąpień i niekoniecznie pierwsza z nich.</span><span class="sxs-lookup"><span data-stu-id="64f69-233">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="64f69-234">`null` zawsze można porównać z żadnym innym typem odwołania; w związku z tym porównania z `null` nie generują wyjątek.</span><span class="sxs-lookup"><span data-stu-id="64f69-234">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-235">Dla każdego elementu przetestowane `value` jest przekazywany do odpowiedniego <xref:System.IComparable> wdrożenia, nawet jeśli `value` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-235">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="64f69-236">Oznacza to <xref:System.IComparable> wdrożenia Określa jak porównuje danego elementu `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-236">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="64f69-237">Ta metoda jest O (dziennika `n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-237">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-238">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-238">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-239">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-239">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-240">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-240">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-241">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-241">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-242">
            <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-242">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-243">- lub - <paramref name="value" /> jest typu, który nie jest zgodny z elementami <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-243">-or-  <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-244">
            <paramref name="value" /> nie implementuje <see cref="T:System.IComparable" /> interfejsu i wyszukiwanie napotkał element, który nie implementuje <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-244">
              <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, int index, int length, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, int32 index, int32 length, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, int index, int length, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : Array * int * int * obj * System.Collections.IComparer -&gt; int" Usage="System.Array.BinarySearch (array, index, length, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-245">Sortowanych jednowymiarowa <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-245">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-246">Indeks początkowy zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-246">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-247">Długość zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-247">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-248">Obiekt, który trzeba wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-248">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-249">
            <see cref="T:System.Collections.IComparer" /> Wdrożenia do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-249">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="64f69-250">- lub - <see langword="null" /> do używania <see cref="T:System.IComparable" /> stosowania dla każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-250">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-251">Przeszukuje tablicą jednowymiarową posortowane wartości, korzystając z określonego zakresu elementów <see cref="T:System.Collections.IComparer" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-251">Searches a range of elements in a one-dimensional sorted array for a value, using the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-252">Określony indeks <paramref name="value" /> w określonym <paramref name="array" />, jeśli <paramref name="value" /> zostanie odnaleziony; w przeciwnym razie wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-252">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="64f69-253">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest mniejszy niż jeden lub więcej elementów w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego indeksu pierwszego elementu, który jest większy niż <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-253">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="64f69-254">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest większa niż wszystkie elementy w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego (indeksu ostatnim elementem plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-254">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="64f69-255">Jeśli ta metoda jest wywoływana z innych niż — sortowane <paramref name="array" />, zwracana wartość może być nieprawidłowy i może zostać zwrócona wartość ujemną, nawet jeśli <paramref name="value" /> znajduje się w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-255">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-256">Ta metoda nie obsługuje tablic wyszukiwanie, zawierające ujemne indeksy.</span><span class="sxs-lookup"><span data-stu-id="64f69-256">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="64f69-257">`array` muszą być posortowane przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-257">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="64f69-258">Jeśli <xref:System.Array> nie zawiera określonej wartości, metoda zwraca całkowitą liczbą ujemną.</span><span class="sxs-lookup"><span data-stu-id="64f69-258">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="64f69-259">Operator dopełnienia bitowego można zastosować (~ w języku C# `Not` w języku Visual Basic) do negatywny wynik do tworzenia indeksu.</span><span class="sxs-lookup"><span data-stu-id="64f69-259">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="64f69-260">Jeśli ten indeks jest większa niż górna granica tablicy, istnieją żadnych elementów, które są większe niż `value` w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-260">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="64f69-261">W przeciwnym razie jest to indeks pierwszego elementu, który jest większy niż `value`.</span><span class="sxs-lookup"><span data-stu-id="64f69-261">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="64f69-262">Moduł porównujący dostosowuje sposób porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-262">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="64f69-263">Na przykład można użyć <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> jako modułu porównującego do wyszukiwania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="64f69-263">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="64f69-264">Jeśli `comparer` nie jest `null`, elementy `array` są porównywane z podaną wartością przy użyciu określonego <xref:System.Collections.IComparer> implementacji.</span><span class="sxs-lookup"><span data-stu-id="64f69-264">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="64f69-265">Elementy `array` już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez `comparer`; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-265">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="64f69-266">Jeśli `comparer` jest `null`, porównanie wykonuje się za pomocą <xref:System.IComparable> implementacja elementu lub określonej wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-266">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="64f69-267">Elementy `array` już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <xref:System.IComparable> implementacji; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-267">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-268">Jeśli `comparer` jest `null` i `value` nie implementuje <xref:System.IComparable> interfejsu elementy `array` nie są sprawdzane pod kątem <xref:System.IComparable> przed rozpoczęciem wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="64f69-268">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="64f69-269">Jest zwracany wyjątek, jeśli wyszukiwanie napotkał element, który nie implementuje <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="64f69-269">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="64f69-270">Dozwolone są zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-270">Duplicate elements are allowed.</span></span> <span data-ttu-id="64f69-271">Jeśli <xref:System.Array> zawiera więcej niż jeden element równa `value`, metoda zwraca indeks tylko jedno z wystąpień i niekoniecznie pierwsza z nich.</span><span class="sxs-lookup"><span data-stu-id="64f69-271">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="64f69-272">`null` zawsze można porównać z żadnym innym typem odwołania; w związku z tym porównania z `null` nie generują wyjątek, korzystając z <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="64f69-272">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception when using <xref:System.IComparable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-273">Dla każdego elementu przetestowane `value` jest przekazywany do odpowiedniego <xref:System.IComparable> wdrożenia, nawet jeśli `value` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-273">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="64f69-274">Oznacza to <xref:System.IComparable> wdrożenia Określa jak porównuje danego elementu `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-274">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="64f69-275">Ta metoda jest O (dziennika `n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-275">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-276">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-276">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-277">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-277">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-278">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-278">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-279">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-279">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-280">
            <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-280">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-281">- lub - <paramref name="comparer" /> jest <see langword="null" />, i <paramref name="value" /> jest typu, który nie jest zgodny z elementami <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-281">-or-  <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-282">
            <paramref name="comparer" /> jest <see langword="null" />, <paramref name="value" /> nie implementuje <see cref="T:System.IComparable" /> interfejsu i wyszukiwanie napotkał element, który nie implementuje <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-282">
              <paramref name="comparer" /> is <see langword="null" />, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : 'T[] * 'T -&gt; int" Usage="System.Array.BinarySearch (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-283">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-283">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-284">Sortowanych jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-284">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-285">Obiekt, który trzeba wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-285">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-286">Wyszukiwanie jako całą jednowymiarowa sortowane tablicy dla określonego elementu, za pomocą <see cref="T:System.IComparable`1" /> ogólny interfejs implementowany przez każdy element <see cref="T:System.Array" /> i określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-286">Searches an entire one-dimensional sorted array for a specific element, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-287">Określony indeks <paramref name="value" /> w określonym <paramref name="array" />, jeśli <paramref name="value" /> zostanie odnaleziony; w przeciwnym razie wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-287">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="64f69-288">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest mniejszy niż jeden lub więcej elementów w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego indeksu pierwszego elementu, który jest większy niż <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-288">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="64f69-289">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest większa niż wszystkie elementy w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego (indeksu ostatnim elementem plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-289">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="64f69-290">Jeśli ta metoda jest wywoływana z innych niż — sortowane <paramref name="array" />, zwracana wartość może być nieprawidłowy i może zostać zwrócona wartość ujemną, nawet jeśli <paramref name="value" /> znajduje się w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-290">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-291">Ta metoda nie obsługuje tablic wyszukiwanie, zawierające ujemne indeksy.</span><span class="sxs-lookup"><span data-stu-id="64f69-291">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="64f69-292">`array` muszą być posortowane przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-292">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="64f69-293">Jeśli `array` nie zawiera określonej wartości, metoda zwraca całkowitą liczbą ujemną.</span><span class="sxs-lookup"><span data-stu-id="64f69-293">If `array` does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="64f69-294">Operator dopełnienia bitowego można zastosować (~ w języku C# `Not` w języku Visual Basic) do negatywny wynik do tworzenia indeksu.</span><span class="sxs-lookup"><span data-stu-id="64f69-294">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="64f69-295">Jeśli ten indeks jest równy rozmiarowi tablicy, są żadnych elementów większe niż `value` w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-295">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="64f69-296">W przeciwnym razie jest to indeks pierwszego elementu, który jest większy niż `value`.</span><span class="sxs-lookup"><span data-stu-id="64f69-296">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="64f69-297">`T` musi implementować <xref:System.IComparable%601> interfejs ogólny, który służy do porównania.</span><span class="sxs-lookup"><span data-stu-id="64f69-297">`T` must implement the <xref:System.IComparable%601> generic interface, which is used for comparisons.</span></span> <span data-ttu-id="64f69-298">Elementy `array` już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <xref:System.IComparable%601> implementacji; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-298">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="64f69-299">Dozwolone są zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-299">Duplicate elements are allowed.</span></span> <span data-ttu-id="64f69-300">Jeśli <xref:System.Array> zawiera więcej niż jeden element równa `value`, metoda zwraca indeks tylko jedno z wystąpień i niekoniecznie pierwsza z nich.</span><span class="sxs-lookup"><span data-stu-id="64f69-300">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="64f69-301">`null` zawsze można porównać z żadnym innym typem odwołania; w związku z tym porównania z `null` nie generują wyjątek.</span><span class="sxs-lookup"><span data-stu-id="64f69-301">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-302">Dla każdego elementu przetestowane `value` jest przekazywany do odpowiedniego <xref:System.IComparable%601> wdrożenia, nawet jeśli `value` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-302">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="64f69-303">Oznacza to <xref:System.IComparable%601> wdrożenia Określa jak porównuje danego elementu `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-303">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="64f69-304">Ta metoda jest O (dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-304">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-305">Poniższy przykład kodu pokazuje <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> przeciążenia metody rodzajowej i <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> przeciążenia metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-305">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload.</span></span> <span data-ttu-id="64f69-306">Tablica ciągów jest tworzony w określonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="64f69-306">An array of strings is created, in no particular order.</span></span>  
  
 <span data-ttu-id="64f69-307">Tablica jest wyświetlana, sortowana i ponownie wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="64f69-307">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="64f69-308">Tablice muszą być posortowane w celu użycia <xref:System.Array.BinarySearch%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-308">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-309">Wywołania <xref:System.Array.Sort%2A> i <xref:System.Array.BinarySearch%2A> metody rodzajowe nie wygląda inaczej z wywołań, aby ich odpowiedniki nierodzajowe, ponieważ Visual Basic, C# i C++ wnioskować o typie parametru typu ogólnego z typem pierwszego argumentu.</span><span class="sxs-lookup"><span data-stu-id="64f69-309">The calls to the <xref:System.Array.Sort%2A> and <xref:System.Array.BinarySearch%2A> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="64f69-310">Jeśli używasz [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) zbadać język pośredni firmy Microsoft (MSIL), widoczny wywoływane metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-310">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="64f69-311"><xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> Przeciążenia metody rodzajowej jest następnie używany do wyszukiwania dwa ciągi, jest taki, który nie znajduje się w tablicy i jeden który.</span><span class="sxs-lookup"><span data-stu-id="64f69-311">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="64f69-312">Tablica i wartość zwracaną <xref:System.Array.BinarySearch%2A> metody są przekazywane do `ShowWhere` ogólnego metodę, która zawiera wartość indeksu, jeśli ciąg zostanie znaleziony, a w przeciwnym razie elementy ciąg wyszukiwania spadnie między gdyby w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-312">The array and the return value of the <xref:System.Array.BinarySearch%2A> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="64f69-313">Indeks jest liczbą ujemną, jeśli ciąg nie jest w tablicy, więc `ShowWhere` metoda przyjmuje dopełnienia bitowego (~ operatora w języku C# i Visual C++ `Xor`-1 w języku Visual Basic) Aby uzyskać indeks pierwszego elementu na liście, który jest większy niż wyszukiwanie str w toku.</span><span class="sxs-lookup"><span data-stu-id="64f69-313">The index is negative if the string is not in the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor`-1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearch/cs/source.cs#1)]
 [!code-vb[Array_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-314">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-314">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-315">
            <paramref name="T" /> nie implementuje <see cref="T:System.IComparable`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-315">
              <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : 'T[] * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Array.BinarySearch (array, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-316">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-316">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-317">Sortowanych jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-317">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-318">Obiekt, który trzeba wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-318">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-319">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Wdrożenia do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-319">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="64f69-320">- lub - <see langword="null" /> do używania <see cref="T:System.IComparable`1" /> stosowania dla każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-320">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-321">Wyszukiwanie jako całą jednowymiarowa sortowane tablicy wartości przy użyciu określonego <see cref="T:System.Collections.Generic.IComparer`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-321">Searches an entire one-dimensional sorted array for a value using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-322">Określony indeks <paramref name="value" /> w określonym <paramref name="array" />, jeśli <paramref name="value" /> zostanie odnaleziony; w przeciwnym razie wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-322">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="64f69-323">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest mniejszy niż jeden lub więcej elementów w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego indeksu pierwszego elementu, który jest większy niż <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-323">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="64f69-324">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest większa niż wszystkie elementy w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego (indeksu ostatnim elementem plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-324">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="64f69-325">Jeśli ta metoda jest wywoływana z innych niż — sortowane <paramref name="array" />, zwracana wartość może być nieprawidłowy i może zostać zwrócona wartość ujemną, nawet jeśli <paramref name="value" /> znajduje się w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-325">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-326">Ta metoda nie obsługuje tablic wyszukiwanie, zawierające ujemne indeksy.</span><span class="sxs-lookup"><span data-stu-id="64f69-326">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="64f69-327">`array` muszą być posortowane przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-327">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="64f69-328">Jeśli <xref:System.Array> nie zawiera określonej wartości, metoda zwraca całkowitą liczbą ujemną.</span><span class="sxs-lookup"><span data-stu-id="64f69-328">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="64f69-329">Operator dopełnienia bitowego można zastosować (~ w języku C# `Not` w języku Visual Basic) do negatywny wynik do tworzenia indeksu.</span><span class="sxs-lookup"><span data-stu-id="64f69-329">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result to produce an index.</span></span> <span data-ttu-id="64f69-330">Jeśli ten indeks jest równy rozmiarowi tablicy, są żadnych elementów większe niż `value` w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-330">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="64f69-331">W przeciwnym razie jest to indeks pierwszego elementu, który jest większy niż `value`.</span><span class="sxs-lookup"><span data-stu-id="64f69-331">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="64f69-332">Moduł porównujący dostosowuje sposób porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-332">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="64f69-333">Na przykład można użyć <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> jako modułu porównującego do wyszukiwania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="64f69-333">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="64f69-334">Jeśli `comparer` nie jest `null`, elementy `array` są porównywane z podaną wartością przy użyciu określonego <xref:System.Collections.Generic.IComparer%601> implementacją ogólnego interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-334">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> generic interface implementation.</span></span> <span data-ttu-id="64f69-335">Elementy `array` już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez `comparer`; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-335">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="64f69-336">Jeśli `comparer` jest `null`, porównanie wykonuje się za pomocą <xref:System.IComparable%601> implementacji interfejsu ogólnego pochodzącymi `T`.</span><span class="sxs-lookup"><span data-stu-id="64f69-336">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable%601> generic interface implementation provided by `T`.</span></span> <span data-ttu-id="64f69-337">Elementy `array` już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <xref:System.IComparable%601> implementacji; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-337">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-338">Jeśli `comparer` jest `null` i `value` nie implementuje <xref:System.IComparable%601> interfejs ogólny, elementy `array` nie są sprawdzane pod kątem <xref:System.IComparable%601> przed rozpoczęciem wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="64f69-338">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable%601> generic interface, the elements of `array` are not tested for <xref:System.IComparable%601> before the search begins.</span></span> <span data-ttu-id="64f69-339">Jest zwracany wyjątek, jeśli wyszukiwanie napotkał element, który nie implementuje <xref:System.IComparable%601>.</span><span class="sxs-lookup"><span data-stu-id="64f69-339">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable%601>.</span></span>  
  
 <span data-ttu-id="64f69-340">Dozwolone są zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-340">Duplicate elements are allowed.</span></span> <span data-ttu-id="64f69-341">Jeśli <xref:System.Array> zawiera więcej niż jeden element równa `value`, metoda zwraca indeks tylko jedno z wystąpień i niekoniecznie pierwsza z nich.</span><span class="sxs-lookup"><span data-stu-id="64f69-341">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="64f69-342">`null` zawsze można porównać z żadnym innym typem odwołania; w związku z tym porównania z `null` nie generują wyjątek.</span><span class="sxs-lookup"><span data-stu-id="64f69-342">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-343">Dla każdego elementu przetestowane `value` jest przekazywany do odpowiedniego <xref:System.IComparable%601> wdrożenia, nawet jeśli `value` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-343">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="64f69-344">Oznacza to <xref:System.IComparable%601> wdrożenia Określa jak porównuje danego elementu `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-344">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="64f69-345">Ta metoda jest O (dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-345">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-346">W poniższym przykładzie pokazano <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> przeciążenia metody rodzajowej i <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> przeciążenia metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-346">The following example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload.</span></span>  
  
 <span data-ttu-id="64f69-347">Przykładowy kod definiuje alternatywny porównania ciągów o nazwie `ReverseCompare`, który implementuje `IComparer<string>` (`IComparer(Of String)` w języku Visual Basic `IComparer<String^>` w programie Visual C++) interfejs generyczny.</span><span class="sxs-lookup"><span data-stu-id="64f69-347">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="64f69-348">Moduł porównujący wywołania <xref:System.String.CompareTo%28System.String%29> metody odwracanie kolejności comparands, dzięki czemu ciągi sortowania dużej do minimum zamiast niskiego na wysoki.</span><span class="sxs-lookup"><span data-stu-id="64f69-348">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="64f69-349">Tablica jest wyświetlana, sortowana i ponownie wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="64f69-349">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="64f69-350">Tablice muszą być posortowane w celu użycia <xref:System.Array.BinarySearch%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-350">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-351">Wywołania <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> i <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> metody rodzajowe nie wygląda inaczej z wywołań, aby ich odpowiedniki nierodzajowe, ponieważ Visual Basic, C# i C++ wnioskować o typie parametru typu ogólnego z typem pierwszego argumentu.</span><span class="sxs-lookup"><span data-stu-id="64f69-351">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="64f69-352">Jeśli używasz [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) zbadać język pośredni firmy Microsoft (MSIL), widoczny wywoływane metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-352">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="64f69-353"><xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> Przeciążenia metody rodzajowej jest następnie używany do wyszukiwania dwa ciągi, jest taki, który nie znajduje się w tablicy i jeden który.</span><span class="sxs-lookup"><span data-stu-id="64f69-353">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="64f69-354">Tablica i wartość zwracaną <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> metody są przekazywane do `ShowWhere` ogólnego metodę, która zawiera wartość indeksu, jeśli ciąg zostanie znaleziony, a w przeciwnym razie elementy ciąg wyszukiwania spadnie między gdyby w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-354">The array and the return value of the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="64f69-355">Indeks jest liczbą ujemną, jeśli ciąg nie jest n tablicy, więc `ShowWhere` metoda przyjmuje dopełnienia bitowego (~ operatora w języku C# i Visual C++ `Xor` -1 w języku Visual Basic) Aby uzyskać indeks pierwszego elementu na liście, który jest większy niż ściśle wyszukiwania NG.</span><span class="sxs-lookup"><span data-stu-id="64f69-355">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[Array_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-356">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-356">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-357">
            <paramref name="comparer" /> jest <see langword="null" />, i <paramref name="value" /> jest typu, który nie jest zgodny z elementami <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-357">
              <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-358">
            <paramref name="comparer" /> jest <see langword="null" />, i <paramref name="T" /> nie implementuje <see cref="T:System.IComparable`1" /> interfejs ogólny</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-358">
              <paramref name="comparer" /> is <see langword="null" />, and <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, int index, int length, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, int index, int length, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : 'T[] * int * int * 'T -&gt; int" Usage="System.Array.BinarySearch (array, index, length, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-359">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-359">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-360">Sortowanych jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-360">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-361">Indeks początkowy zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-361">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-362">Długość zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-362">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-363">Obiekt, który trzeba wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-363">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-364">Przeszukuje zakresu elementów tablicą jednowymiarową posortowane wartości, przy użyciu <see cref="T:System.IComparable`1" /> ogólny interfejs implementowany przez każdy element <see cref="T:System.Array" /> i podaną wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-364">Searches a range of elements in a one-dimensional sorted array for a value, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-365">Określony indeks <paramref name="value" /> w określonym <paramref name="array" />, jeśli <paramref name="value" /> zostanie odnaleziony; w przeciwnym razie wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-365">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="64f69-366">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest mniejszy niż jeden lub więcej elementów w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego indeksu pierwszego elementu, który jest większy niż <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-366">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="64f69-367">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest większa niż wszystkie elementy w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego (indeksu ostatnim elementem plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-367">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="64f69-368">Jeśli ta metoda jest wywoływana z innych niż — sortowane <paramref name="array" />, zwracana wartość może być nieprawidłowy i może zostać zwrócona wartość ujemną, nawet jeśli <paramref name="value" /> znajduje się w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-368">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-369">Ta metoda nie obsługuje tablic wyszukiwanie, zawierające ujemne indeksy.</span><span class="sxs-lookup"><span data-stu-id="64f69-369">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="64f69-370">`array` muszą być posortowane przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-370">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="64f69-371">Jeśli macierz nie zawiera określonej wartości, metoda zwraca całkowitą liczbą ujemną.</span><span class="sxs-lookup"><span data-stu-id="64f69-371">If the array does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="64f69-372">Operator dopełnienia bitowego można zastosować (~ w języku C# `Not` w języku Visual Basic) do negatywny wynik do tworzenia indeksu.</span><span class="sxs-lookup"><span data-stu-id="64f69-372">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="64f69-373">Jeśli ten indeks jest równy rozmiarowi tablicy, są żadnych elementów większe niż `value` w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-373">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="64f69-374">W przeciwnym razie jest to indeks pierwszego elementu, który jest większy niż `value`.</span><span class="sxs-lookup"><span data-stu-id="64f69-374">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="64f69-375">`T` musi implementować <xref:System.IComparable%601> interfejs ogólny, który służy do porównania.</span><span class="sxs-lookup"><span data-stu-id="64f69-375">`T` must implement the <xref:System.IComparable%601> generic interface, which is used for comparisons.</span></span> <span data-ttu-id="64f69-376">Elementy `array` już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <xref:System.IComparable%601> implementacji; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-376">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="64f69-377">Dozwolone są zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-377">Duplicate elements are allowed.</span></span> <span data-ttu-id="64f69-378">Jeśli <xref:System.Array> zawiera więcej niż jeden element równa `value`, metoda zwraca indeks tylko jedno z wystąpień i niekoniecznie pierwsza z nich.</span><span class="sxs-lookup"><span data-stu-id="64f69-378">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="64f69-379">`null` zawsze można porównać z żadnym innym typem odwołania; w związku z tym porównania z `null` nie generują wyjątek.</span><span class="sxs-lookup"><span data-stu-id="64f69-379">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-380">Dla każdego elementu przetestowane `value` jest przekazywany do odpowiedniego <xref:System.IComparable%601> wdrożenia, nawet jeśli `value` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-380">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="64f69-381">Oznacza to <xref:System.IComparable%601> wdrożenia Określa jak porównuje danego elementu `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-381">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="64f69-382">Ta metoda jest O (dziennika `n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-382">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-383">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-383">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-384">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-384">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-385">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-385">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-386">
            <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-386">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-387">- lub - <paramref name="value" /> jest typu, który nie jest zgodny z elementami <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-387">-or-  <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-388">
            <paramref name="T" /> nie implementuje <see cref="T:System.IComparable`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-388">
              <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : 'T[] * int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Array.BinarySearch (array, index, length, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-389">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-389">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-390">Sortowanych jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-390">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-391">Indeks początkowy zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-391">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-392">Długość zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-392">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-393">Obiekt, który trzeba wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-393">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-394">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Wdrożenia do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-394">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="64f69-395">- lub - <see langword="null" /> do używania <see cref="T:System.IComparable`1" /> stosowania dla każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-395">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-396">Przeszukuje tablicą jednowymiarową posortowane wartości, korzystając z określonego zakresu elementów <see cref="T:System.Collections.Generic.IComparer`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-396">Searches a range of elements in a one-dimensional sorted array for a value, using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-397">Określony indeks <paramref name="value" /> w określonym <paramref name="array" />, jeśli <paramref name="value" /> zostanie odnaleziony; w przeciwnym razie wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-397">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="64f69-398">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest mniejszy niż jeden lub więcej elementów w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego indeksu pierwszego elementu, który jest większy niż <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-398">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="64f69-399">Jeśli <paramref name="value" /> nie można odnaleźć i <paramref name="value" /> jest większa niż wszystkie elementy w <paramref name="array" />, liczbami ujemnymi zwrócony dopełnienia bitowego (indeksu ostatnim elementem plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-399">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="64f69-400">Jeśli ta metoda jest wywoływana z innych niż — sortowane <paramref name="array" />, zwracana wartość może być nieprawidłowy i może zostać zwrócona wartość ujemną, nawet jeśli <paramref name="value" /> znajduje się w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-400">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-401">Ta metoda nie obsługuje tablic wyszukiwanie, zawierające ujemne indeksy.</span><span class="sxs-lookup"><span data-stu-id="64f69-401">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="64f69-402">`array` muszą być posortowane przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-402">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="64f69-403">Jeśli macierz nie zawiera określonej wartości, metoda zwraca całkowitą liczbą ujemną.</span><span class="sxs-lookup"><span data-stu-id="64f69-403">If the array does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="64f69-404">Operator dopełnienia bitowego można zastosować (~ w języku C# `Not` w języku Visual Basic) do negatywny wynik do tworzenia indeksu.</span><span class="sxs-lookup"><span data-stu-id="64f69-404">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="64f69-405">Jeśli ten indeks jest równy rozmiarowi tablicy, są żadnych elementów większe niż `value` w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-405">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="64f69-406">W przeciwnym razie jest to indeks pierwszego elementu, który jest większy niż `value`.</span><span class="sxs-lookup"><span data-stu-id="64f69-406">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="64f69-407">Moduł porównujący dostosowuje sposób porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-407">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="64f69-408">Na przykład można użyć <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> jako modułu porównującego do wyszukiwania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="64f69-408">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="64f69-409">Jeśli `comparer` nie jest `null`, elementy `array` są porównywane z podaną wartością przy użyciu określonego <xref:System.Collections.Generic.IComparer%601> implementacją ogólnego interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-409">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> generic interface implementation.</span></span> <span data-ttu-id="64f69-410">Elementy `array` już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez `comparer`; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-410">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="64f69-411">Jeśli `comparer` jest `null`, porównanie wykonuje się za pomocą <xref:System.IComparable%601> implementacji ogólny interfejs dostarczony dla typu `T`.</span><span class="sxs-lookup"><span data-stu-id="64f69-411">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable%601> generic interface implementation provided for type `T`.</span></span> <span data-ttu-id="64f69-412">Elementy `array` już muszą być posortowane w zwiększenie wartości w kolejności sortowania zdefiniowane przez <xref:System.IComparable%601> implementacji; w przeciwnym razie wynik może być nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-412">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="64f69-413">Dozwolone są zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-413">Duplicate elements are allowed.</span></span> <span data-ttu-id="64f69-414">Jeśli <xref:System.Array> zawiera więcej niż jeden element równa `value`, metoda zwraca indeks tylko jedno z wystąpień i niekoniecznie pierwsza z nich.</span><span class="sxs-lookup"><span data-stu-id="64f69-414">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="64f69-415">`null` zawsze można porównać z żadnym innym typem odwołania; w związku z tym porównania z `null` nie generują wyjątek, korzystając z <xref:System.IComparable%601>.</span><span class="sxs-lookup"><span data-stu-id="64f69-415">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception when using <xref:System.IComparable%601>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-416">Dla każdego elementu przetestowane `value` jest przekazywany do odpowiedniego <xref:System.IComparable%601> wdrożenia, nawet jeśli `value` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-416">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="64f69-417">Oznacza to <xref:System.IComparable%601> wdrożenia Określa jak porównuje danego elementu `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-417">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="64f69-418">Ta metoda jest O (dziennika `n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-418">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-419">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-419">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-420">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-420">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-421">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-421">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-422">
            <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-422">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-423">- lub - <paramref name="comparer" /> jest <see langword="null" />, i <paramref name="value" /> jest typu, który nie jest zgodny z elementami <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-423">-or-  <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-424">
            <paramref name="comparer" /> jest <see langword="null" />, i <paramref name="T" /> nie implementuje <see cref="T:System.IComparable`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-424">
              <paramref name="comparer" /> is <see langword="null" />, and <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Clear(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear(Array ^ array, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Clear : Array * int * int -&gt; unit" Usage="System.Array.Clear (array, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-425">Tablica której elementy muszą zostać wyczyszczone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-425">The array whose elements need to be cleared.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-426">Indeks początkowy zakresu elementów, aby wyczyścić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-426">The starting index of the range of elements to clear.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-427">Liczba elementów, aby wyczyścić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-427">The number of elements to clear.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-428">Określa zakres elementów w tablicy na wartość domyślną każdego typu elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-428">Sets a range of elements in an array to the default value of each element type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-429">Ta metoda powoduje zresetowanie każdego elementu w tablicy, wartość domyślna typu elementu.</span><span class="sxs-lookup"><span data-stu-id="64f69-429">This method resets each element in an array to the element type's default value.</span></span> <span data-ttu-id="64f69-430">Ustawia elementy Typy odwołań (łącznie z <xref:System.String> elementy) do `null`i ustawia elementy typów wartości do wartości domyślnych, które przedstawiono w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="64f69-430">It sets elements of reference types (including <xref:System.String> elements) to `null`, and sets elements of value types to the default values shown in the following table.</span></span>  
  
|<span data-ttu-id="64f69-431">Typ</span><span class="sxs-lookup"><span data-stu-id="64f69-431">Type</span></span>|<span data-ttu-id="64f69-432">Wartość</span><span class="sxs-lookup"><span data-stu-id="64f69-432">Value</span></span>|  
|----------|-----------|  
|<xref:System.Boolean>|`false`|  
|<span data-ttu-id="64f69-433">Wszystkie typy liczbowe punktu całkowitych i zmiennoprzecinkowych</span><span class="sxs-lookup"><span data-stu-id="64f69-433">All integral and floating point numeric types</span></span>|<span data-ttu-id="64f69-434">0 (zero)</span><span class="sxs-lookup"><span data-stu-id="64f69-434">0 (zero)</span></span>|  
|<xref:System.DateTime>|<xref:System.DateTime.MinValue?displayProperty=nameWithType>|  
|<span data-ttu-id="64f69-435">Inne typy wartości</span><span class="sxs-lookup"><span data-stu-id="64f69-435">Other value types</span></span>|<span data-ttu-id="64f69-436">Domyślna wartość pola typu</span><span class="sxs-lookup"><span data-stu-id="64f69-436">Default value of the type's fields</span></span>|  
  
 <span data-ttu-id="64f69-437">Zakres wyczyszczone zawijania elementy wiersz po wierszu w tablicy wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-437">The range of cleared elements wrap from row to row in a multi-dimensional array.</span></span>  
  
 <span data-ttu-id="64f69-438">Ta metoda usuwa tylko wartości elementów; nie są usuwane ze sobą elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-438">This method only clears the values of the elements; it does not delete the elements themselves.</span></span> <span data-ttu-id="64f69-439">Tablica ma stały rozmiar; w związku z tym elementów nie można dodać ani usunąć.</span><span class="sxs-lookup"><span data-stu-id="64f69-439">An array has a fixed size; therefore, elements cannot be added or removed.</span></span>  
  
 <span data-ttu-id="64f69-440">Ta metoda jest O (`n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-440">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-441">W poniższym przykładzie użyto <xref:System.Array.Clear%2A> metodę, aby zresetować wartości całkowite w tablicy jednowymiarowa dwuwymiarowa i trójwymiarowych.</span><span class="sxs-lookup"><span data-stu-id="64f69-441">The following example uses the <xref:System.Array.Clear%2A> method to reset integer values in a one-dimensional, two-dimensional, and three-dimensional array.</span></span>  
  
 [!code-csharp[System.Array.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clear/cs/example.cs#1)]
 [!code-vb[System.Array.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clear/vb/example.vb#1)]  
  
 <span data-ttu-id="64f69-442">W poniższym przykładzie zdefiniowano `TimeZoneTime` struktury zawierającej <xref:System.TimeZoneInfo> pola i <xref:System.DateTimeOffset> pola.</span><span class="sxs-lookup"><span data-stu-id="64f69-442">The following example defines a `TimeZoneTime` structure that includes a <xref:System.TimeZoneInfo> field and a <xref:System.DateTimeOffset> field.</span></span> <span data-ttu-id="64f69-443">Następnie wywołuje <xref:System.Array.Clear%2A> metodę, aby wyczyścić jeden element w tablicy dwuelementową `TimeZoneTime` wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-443">It then calls the <xref:System.Array.Clear%2A> method to clear one element in a two-element array of `TimeZoneTime` values.</span></span> <span data-ttu-id="64f69-444">Metoda ustawia wartość elementu wyczyszczone, wartość domyślna wynosząca <xref:System.TimeZoneInfo> obiektu, który jest `null`i wartość domyślną <xref:System.DateTimeOffset> obiektu, który jest <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="64f69-444">The method sets the value of the cleared element to the default value of a <xref:System.TimeZoneInfo> object, which is `null`, and the default value of a <xref:System.DateTimeOffset> object, which is <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Array.Clear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clear/cs/clearstruct1.cs#2)]
 [!code-vb[System.Array.Clear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clear/vb/clearstruct1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-445">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-445">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-446">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-446">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-447">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-447">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-448">- lub - sumę <paramref name="index" /> i <paramref name="length" /> jest większy niż rozmiar <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-448">-or-  The sum of <paramref name="index" /> and <paramref name="length" /> is greater than the size of <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="array.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64f69-449">Tworzy kopię pobieżną <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-449">Creates a shallow copy of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-450">Kopia pobieżna <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-450">A shallow copy of the <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-451">Kopia pobieżna <xref:System.Array> kopiuje elementy ze <xref:System.Array>, czy znajdują się odwołania typy lub wartości, ale nie kopiuje obiektów, które dotyczą odwołania.</span><span class="sxs-lookup"><span data-stu-id="64f69-451">A shallow copy of an <xref:System.Array> copies only the elements of the <xref:System.Array>, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="64f69-452">Odwołań w nowym <xref:System.Array> wskazują ten sam obiekty, które odwołań w oryginalnym <xref:System.Array> wskaż.</span><span class="sxs-lookup"><span data-stu-id="64f69-452">The references in the new <xref:System.Array> point to the same objects that the references in the original <xref:System.Array> point to.</span></span>  
  
 <span data-ttu-id="64f69-453">Z kolei bezpośrednich kopię <xref:System.Array> kopiuje elementy i wszystkich bezpośrednio lub pośrednio odwołuje się elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-453">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="64f69-454">Klon jest taka sama <xref:System.Type> jak oryginał <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-454">The clone is of the same <xref:System.Type> as the original <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-455">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A>.</span><span class="sxs-lookup"><span data-stu-id="64f69-455">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-456">Poniższy kod przykładowy klony <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> tablicy i prezentuje działanie kopia pobieżna.</span><span class="sxs-lookup"><span data-stu-id="64f69-456">The following code example clones a <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> array and demonstrates the behavior of a shallow copy.</span></span>  
  
 [!code-cpp[System.Array.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Clone/CPP/arrayclone.cpp#1)]
 [!code-csharp[System.Array.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clone/CS/arrayclone.cs#1)]
 [!code-vb[System.Array.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clone/VB/arrayclone.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Array.Copy" />
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ConstrainedCopy">
      <MemberSignature Language="C#" Value="public static void ConstrainedCopy (Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConstrainedCopy(class System.Array sourceArray, int32 sourceIndex, class System.Array destinationArray, int32 destinationIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConstrainedCopy (sourceArray As Array, sourceIndex As Integer, destinationArray As Array, destinationIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConstrainedCopy(Array ^ sourceArray, int sourceIndex, Array ^ destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="F#" Value="static member ConstrainedCopy : Array * int * Array * int * int -&gt; unit" Usage="System.Array.ConstrainedCopy (sourceArray, sourceIndex, destinationArray, destinationIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="64f69-457">
            <see cref="T:System.Array" /> Zawierający dane do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-457">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="sourceIndex">
          <span data-ttu-id="64f69-458">32-bitową liczbę całkowitą, która reprezentuje indeks w <c>Tablica_źródłowa</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-458">A 32-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="64f69-459">
            <see cref="T:System.Array" /> Odbierająca danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-459">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="64f69-460">32-bitową liczbę całkowitą, która reprezentuje indeks w <c>destinationArray</c> od przechowywania, która rozpoczyna się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-460">A 32-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-461">32-bitową liczbę całkowitą reprezentującą liczbę elementów do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-461">A 32-bit integer that represents the number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-462">Kopiuje elementy z zakresu <see cref="T:System.Array" /> począwszy od indeksu określone źródło i wkleja je do innego <see cref="T:System.Array" /> począwszy od indeksu do określonej lokalizacji docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-462">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span>
          </span>
          <span data-ttu-id="64f69-463">Gwarantuje, że wszystkie zmiany zostaną cofnięte, jeśli kopiowanie nie powiedzie się całkowicie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-463">Guarantees that all changes are undone if the copy does not succeed completely.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-464">`sourceArray` i `destinationArray` parametry muszą mieć taką samą liczbę wymiarów.</span><span class="sxs-lookup"><span data-stu-id="64f69-464">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span>  <span data-ttu-id="64f69-465">`sourceArray` Typu musi być taka sama jak lub pochodny `destinationArray` typu; w przeciwnym razie <xref:System.ArrayTypeMismatchException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-465">The `sourceArray` type must be the same as or derived from the `destinationArray` type; otherwise, an <xref:System.ArrayTypeMismatchException> is thrown.</span></span>  <span data-ttu-id="64f69-466">W odróżnieniu od <xref:System.Array.Copy%2A>, <xref:System.Array.ConstrainedCopy%2A> sprawdza zgodność typy tablic, przed wykonaniem każdej operacji.</span><span class="sxs-lookup"><span data-stu-id="64f69-466">Unlike <xref:System.Array.Copy%2A>, <xref:System.Array.ConstrainedCopy%2A> verifies the compatibility of the array types before performing any operation.</span></span>  
  
 <span data-ttu-id="64f69-467">Jeśli kopiowanie odbywa się między tablice wielowymiarowe, tablicy zachowuje się jak długo Jednowymiarowa tablica, gdzie wierszy (lub kolumny) koncepcyjnie ustanowienia end-to-end.</span><span class="sxs-lookup"><span data-stu-id="64f69-467">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="64f69-468">Jeśli na przykład tablica ma trzy wiersze (lub kolumny) z czterema elementami, skopiowanie sześciu elementów od początku tablicy może spowodować skopiowanie wszystkich czterech elementów pierwszego wiersza (lub kolumny) i pierwszych dwóch elementów drugiego wiersza (lub kolumny).</span><span class="sxs-lookup"><span data-stu-id="64f69-468">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="64f69-469">Aby rozpocząć kopiowanie z drugiego elementu trzeciego wiersza (lub kolumny), `sourceIndex` musi być górna granica pierwszego wiersza (lub kolumny) oraz długość wiersza drugi (lub kolumny) oraz dwa.</span><span class="sxs-lookup"><span data-stu-id="64f69-469">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="64f69-470">Jeśli `sourceArray` i `destinationArray` nakładają się na siebie, ta metoda działa tak, jakby oryginalnej wartości `sourceArray` zostały zachowane w tymczasowej lokalizacji przed `destinationArray` zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="64f69-470">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="64f69-471">[C++]</span><span class="sxs-lookup"><span data-stu-id="64f69-471">[C++]</span></span>  
  
 <span data-ttu-id="64f69-472">Ta metoda jest odpowiednikiem standardowego funkcji C/C++ `memmove`, a nie `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="64f69-472">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="64f69-473">Tablice mogą być tablicami typu odwołania lub tablicami typu wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-473">The arrays can be reference-type arrays or value-type arrays.</span></span>  <span data-ttu-id="64f69-474">Jeśli `sourceArray` i `destinationArray` są obie tablic typu odwołania lub obu tablic typu <xref:System.Object>, jest wykonywana kopia pobieżna.</span><span class="sxs-lookup"><span data-stu-id="64f69-474">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="64f69-475">Kopia pobieżna <xref:System.Array> to nowa <xref:System.Array> zawierające odwołania do tych samych elementów jak oryginał <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-475">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="64f69-476">Nie są kopiowane same elementy ani to, co odwołuje się do elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-476">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="64f69-477">Z kolei bezpośrednich kopię <xref:System.Array> kopiuje elementy i wszystkich bezpośrednio lub pośrednio odwołuje się elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-477">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="64f69-478">Jeśli ta metoda zgłasza wyjątek podczas kopiowania, `destinationArray` pozostaje niezmieniona; w związku z tym <xref:System.Array.ConstrainedCopy%2A> znajdują się w regionie ograniczonego wykonania (<xref:System.Runtime.ConstrainedExecution.Cer>).</span><span class="sxs-lookup"><span data-stu-id="64f69-478">If this method throws an exception while copying, the `destinationArray` remains unchanged; therefore, <xref:System.Array.ConstrainedCopy%2A> can be used within a constrained execution region (<xref:System.Runtime.ConstrainedExecution.Cer>).</span></span>  
  
 <span data-ttu-id="64f69-479">Ta metoda jest O (`n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-479">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-480">
            <paramref name="sourceArray" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-480">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-481">- lub - <paramref name="destinationArray" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-481">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-482">
            <paramref name="sourceArray" /> i <paramref name="destinationArray" /> ma różnym stopniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-482">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="64f69-483">
            <paramref name="sourceArray" /> Typu nie jest ani taka sama jak ani nie pochodzi od <paramref name="destinationArray" /> typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-483">The <paramref name="sourceArray" /> type is neither the same as nor derived from the <paramref name="destinationArray" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-484">Co najmniej jeden element w <paramref name="sourceArray" /> nie można rzutować na typ <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-484">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-485">
            <paramref name="sourceIndex" /> jest mniejsza niż dolna granica pierwszym wymiarze <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-485">
              <paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="64f69-486">- lub - <paramref name="destinationIndex" /> jest mniejsza niż dolna granica pierwszym wymiarze <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-486">-or-  <paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.</span>
          </span>
          <span data-ttu-id="64f69-487">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-487">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-488">
            <paramref name="length" /> jest większa niż liczba elementów od <paramref name="sourceIndex" /> na końcu <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-488">
              <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="64f69-489">- lub - <paramref name="length" /> jest większa niż liczba elementów od <paramref name="destinationIndex" /> na końcu <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-489">-or-  <paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.Copy" />
        <altmember cref="M:System.Array.Clone" />
        <altmember cref="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" />
        <altmember cref="T:System.Runtime.ConstrainedExecution.Cer" />
      </Docs>
    </Member>
    <Member MemberName="ConvertAll&lt;TInput,TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput[] ConvertAll&lt;TInput,TOutput&gt; (TInput[] array, Converter&lt;TInput,TOutput&gt; converter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput[] ConvertAll&lt;TInput, TOutput&gt;(!!TInput[] array, class System.Converter`2&lt;!!TInput, !!TOutput&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ConvertAll``2(``0[],System.Converter{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertAll(Of TInput, TOutput) (array As TInput(), converter As Converter(Of TInput, TOutput)) As TOutput()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TOutput&gt;&#xA; static cli::array &lt;TOutput&gt; ^ ConvertAll(cli::array &lt;TInput&gt; ^ array, Converter&lt;TInput, TOutput&gt; ^ converter);" />
      <MemberSignature Language="F#" Value="static member ConvertAll : 'Input[] * Converter&lt;'Input, 'Output&gt; -&gt; 'Output[]" Usage="System.Array.ConvertAll (array, converter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="TInput[]" />
        <Parameter Name="converter" Type="System.Converter&lt;TInput,TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="64f69-490">Typ elementów tablicy źródłowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-490">The type of the elements of the source array.</span>
          </span>
        </typeparam>
        <typeparam name="TOutput">
          <span data-ttu-id="64f69-491">Typ elementów tablicy docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-491">The type of the elements of the target array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-492">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> można przekonwertować na typ docelowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-492">The one-dimensional, zero-based <see cref="T:System.Array" /> to convert to a target type.</span>
          </span>
        </param>
        <param name="converter">
          <span data-ttu-id="64f69-493">A <see cref="T:System.Converter`2" /> konwertująca każdy element z jednego typu do innego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-493">A <see cref="T:System.Converter`2" /> that converts each element from one type to another type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-494">Konwertuje tablicę jednego typu na tablicę innego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-494">Converts an array of one type to an array of another type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-495">Tablica zawierająca elementy przekonwertowany z tablicy źródłowej na typ docelowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-495">An array of the target type containing the converted elements from the source array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-496"><xref:System.Converter%602> Jest delegowany do metody, która konwertuje obiektu na typ docelowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-496">The <xref:System.Converter%602> is a delegate to a method that converts an object to the target type.</span></span>  <span data-ttu-id="64f69-497">Elementy `array` indywidualnie są przekazywane do <xref:System.Converter%602>, i przekonwertowane elementy są zapisywane w nowej tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-497">The elements of `array` are individually passed to the <xref:System.Converter%602>, and the converted elements are saved in the new array.</span></span>  
  
 <span data-ttu-id="64f69-498">Źródło `array` pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="64f69-498">The source `array` remains unchanged.</span></span>  
  
 <span data-ttu-id="64f69-499">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-499">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-500">Poniższy przykładowy kod definiuje metodę o nazwie `PointFToPoint` konwertująca <xref:System.Drawing.PointF> struktury do <xref:System.Drawing.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="64f69-500">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="64f69-501">Następnie tworzony tablicę <xref:System.Drawing.PointF> struktury, tworzy `Converter<PointF, Point>` delegować (`Converter(Of PointF, Point)` w języku Visual Basic) do reprezentowania `PointFToPoint` metody i przekazuje delegata do <xref:System.Array.ConvertAll%2A> — metoda.</span><span class="sxs-lookup"><span data-stu-id="64f69-501">The example then creates an array of <xref:System.Drawing.PointF> structures, creates a `Converter<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Array.ConvertAll%2A> method.</span></span> <span data-ttu-id="64f69-502"><xref:System.Array.ConvertAll%2A> Metoda przekazuje każdy element na liście wejściowej, aby `PointFToPoint` — metoda i umieszcza przekonwertowanego elementy do nowej listy <xref:System.Drawing.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="64f69-502">The <xref:System.Array.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="64f69-503">Zarówno listy są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="64f69-503">Both lists are displayed.</span></span>  
  
 [!code-cpp[Array_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[Array_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_ConvertAll/cs/source.cs#1)]
 [!code-vb[Array_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-504">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-504">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-505">- lub - <paramref name="converter" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-505">-or-  <paramref name="converter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Converter`2" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-506">Kopiuje zakresu elementów w jednym <see cref="T:System.Array" /> do innego <see cref="T:System.Array" /> i wykonuje typu rzutowania i konwersja boxing zgodnie z wymaganiami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-506">Copies a range of elements in one <see cref="T:System.Array" /> to another <see cref="T:System.Array" /> and performs type casting and boxing as required.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, Array destinationArray, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, class System.Array destinationArray, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, destinationArray As Array, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, Array ^ destinationArray, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : Array * Array * int -&gt; unit" Usage="System.Array.Copy (sourceArray, destinationArray, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="64f69-507">
            <see cref="T:System.Array" /> Zawierający dane do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-507">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="64f69-508">
            <see cref="T:System.Array" /> Odbierająca danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-508">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-509">32-bitową liczbę całkowitą reprezentującą liczbę elementów do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-509">A 32-bit integer that represents the number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-510">Kopiuje elementy z zakresu <see cref="T:System.Array" /> zaczynając od pierwszego elementu i wkleja je do innego <see cref="T:System.Array" /> zaczynając od pierwszego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-510">Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element.</span>
          </span>
          <span data-ttu-id="64f69-511">Długość jest określony jako 32-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-511">The length is specified as a 32-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-512">`sourceArray` i `destinationArray` parametry muszą mieć taką samą liczbę wymiarów.</span><span class="sxs-lookup"><span data-stu-id="64f69-512">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="64f69-513">Ponadto `destinationArray` musi już mieć wymiarów i musi mieć wystarczającą liczbę elementów do uwzględnienia skopiowanych danych.</span><span class="sxs-lookup"><span data-stu-id="64f69-513">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="64f69-514">Jeśli kopiowanie odbywa się między tablice wielowymiarowe, tablicy zachowuje się jak długo Jednowymiarowa tablica, gdzie wierszy (lub kolumny) koncepcyjnie określone są pełne.</span><span class="sxs-lookup"><span data-stu-id="64f69-514">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end to end.</span></span> <span data-ttu-id="64f69-515">Jeśli na przykład tablica ma trzy wiersze (lub kolumny) z czterema elementami, skopiowanie sześciu elementów od początku tablicy może spowodować skopiowanie wszystkich czterech elementów pierwszego wiersza (lub kolumny) i pierwszych dwóch elementów drugiego wiersza (lub kolumny).</span><span class="sxs-lookup"><span data-stu-id="64f69-515">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span>  
  
 <span data-ttu-id="64f69-516">Jeśli `sourceArray` i `destinationArray` nakładają się na siebie, ta metoda działa tak, jakby oryginalnej wartości `sourceArray` zostały zachowane w tymczasowej lokalizacji przed `destinationArray` zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="64f69-516">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="64f69-517">[C++]</span><span class="sxs-lookup"><span data-stu-id="64f69-517">[C++]</span></span>  
  
 <span data-ttu-id="64f69-518">Ta metoda jest odpowiednikiem standardowego funkcji C/C++ `memmove`, a nie `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="64f69-518">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="64f69-519">Tablice mogą być tablicami typu odwołania lub tablicami typu wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-519">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="64f69-520">Rzutowanie typu w dół jest wykonywane odpowiednio do potrzeb.</span><span class="sxs-lookup"><span data-stu-id="64f69-520">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="64f69-521">Podczas kopiowania z tablicy typu odwołania do tablicy typu wartości każdy element jest rozpakowywany, a następnie kopiowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-521">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="64f69-522">Podczas kopiowania z tablicy wartości typu do tablicy typu odwołania każdy element jest pakowany, a następnie kopiowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-522">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="64f69-523">Podczas kopiowania z tablicą typu odwołanie lub typ wartości do <xref:System.Object> tablicy, <xref:System.Object> jest utworzony w celu przechowywania każdej wartości lub odwołania, a następnie skopiowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-523">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="64f69-524">Podczas kopiowania z <xref:System.Object> tablicy do tablicy typu odwołanie lub typ wartości i przypisanie nie jest możliwe, <xref:System.InvalidCastException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-524">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="64f69-525">Jeśli `sourceArray` i `destinationArray` są obie tablic typu odwołania lub obu tablic typu <xref:System.Object>, jest wykonywana kopia pobieżna.</span><span class="sxs-lookup"><span data-stu-id="64f69-525">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="64f69-526">Kopia pobieżna <xref:System.Array> to nowa <xref:System.Array> zawierające odwołania do tych samych elementów jak oryginał <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-526">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="64f69-527">Nie są kopiowane same elementy ani to, co odwołuje się do elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-527">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="64f69-528">Z kolei bezpośrednich kopię <xref:System.Array> kopiuje elementy i wszystkich bezpośrednio lub pośrednio odwołuje się elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-528">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="64f69-529"><xref:System.ArrayTypeMismatchException> Jest generowany, jeśli tablice mają niezgodne typy.</span><span class="sxs-lookup"><span data-stu-id="64f69-529">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="64f69-530">Zgodność z typem jest zdefiniowana w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-530">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="64f69-531">Typ jest zgodny z samym sobą.</span><span class="sxs-lookup"><span data-stu-id="64f69-531">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="64f69-532">Typ wartości jest niezgodny z <xref:System.Object> i typu interfejsu implementowanych przez ten typ wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-532">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="64f69-533">Typ wartości jest uważany za podłączony do interfejsu tylko wtedy, gdy bezpośrednio implementuje ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="64f69-533">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="64f69-534">Odłączony typy nie są zgodne.</span><span class="sxs-lookup"><span data-stu-id="64f69-534">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="64f69-535">Dwa typy rzeczywistej wartości wewnętrznej (wstępnie zdefiniowane) są zgodne w przypadku kopiowania z typu źródłowego na typ docelowy w konwersji rozszerzającej.</span><span class="sxs-lookup"><span data-stu-id="64f69-535">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="64f69-536">Konwersja rozszerzająca nigdy nie traci informacji, podczas gdy konwersja zawężająca może utracić informacje.</span><span class="sxs-lookup"><span data-stu-id="64f69-536">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="64f69-537">Na przykład konwersja 32-bitowej oznaczonej liczby całkowitej na 64-bitową jest konwersją rozszerzającą, a 64-bitowej oznaczonej liczby całkowitej na 32-bitową jest konwersją zawężającą.</span><span class="sxs-lookup"><span data-stu-id="64f69-537">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="64f69-538">Aby uzyskać więcej informacji na temat konwersji, zobacz <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="64f69-538">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="64f69-539">Typ wartości niewewnętrznej (zdefiniowanej przez użytkownika) jest zgodny tylko z samym sobą.</span><span class="sxs-lookup"><span data-stu-id="64f69-539">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="64f69-540">Wyliczenia mają niejawnej konwersji <xref:System.Enum> i ich typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-540">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="64f69-541">Jeśli wartość każdego elementu w `sourceArray` wymaga przypisanie elementu podrzędnego (na przykład z klasy podstawowej w klasie pochodnej lub interfejs do obiektu) i jeden lub więcej elementów nie można rzutować typu odpowiadającego w `destinationArray`, <xref:System.InvalidCastException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-541">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="64f69-542">Jeśli ta metoda zgłasza wyjątek podczas kopiowania, stan `destinationArray` jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-542">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="64f69-543">Ta metoda jest O (`n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-543">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-544">
            <paramref name="sourceArray" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-544">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-545">- lub - <paramref name="destinationArray" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-545">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-546">
            <paramref name="sourceArray" /> i <paramref name="destinationArray" /> ma różnym stopniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-546">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="64f69-547">
            <paramref name="sourceArray" /> i <paramref name="destinationArray" /> mają niezgodne typy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-547">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-548">Co najmniej jeden element w <paramref name="sourceArray" /> nie można rzutować na typ <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-548">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-549">
            <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-549">
              <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-550">
            <paramref name="length" /> jest większa niż liczba elementów w <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-550">
              <paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="64f69-551">- lub - <paramref name="length" /> jest większa niż liczba elementów w <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-551">-or-  <paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, Array destinationArray, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, class System.Array destinationArray, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Array,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, destinationArray As Array, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, Array ^ destinationArray, long length);" />
      <MemberSignature Language="F#" Value="static member Copy : Array * Array * int64 -&gt; unit" Usage="System.Array.Copy (sourceArray, destinationArray, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="64f69-552">
            <see cref="T:System.Array" /> Zawierający dane do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-552">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="64f69-553">
            <see cref="T:System.Array" /> Odbierająca danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-553">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-554">64-bitową liczbę całkowitą reprezentującą liczbę elementów do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-554">A 64-bit integer that represents the number of elements to copy.</span>
          </span>
          <span data-ttu-id="64f69-555">Liczba całkowita należy do zakresu od zera i <see cref="F:System.Int32.MaxValue" />włącznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-555">The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-556">Kopiuje elementy z zakresu <see cref="T:System.Array" /> zaczynając od pierwszego elementu i wkleja je do innego <see cref="T:System.Array" /> zaczynając od pierwszego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-556">Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element.</span>
          </span>
          <span data-ttu-id="64f69-557">Długość jest określony jako 64-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-557">The length is specified as a 64-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-558">`sourceArray` i `destinationArray` parametry muszą mieć taką samą liczbę wymiarów.</span><span class="sxs-lookup"><span data-stu-id="64f69-558">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="64f69-559">Ponadto `destinationArray` musi już mieć wymiarów i musi mieć wystarczającą liczbę elementów do uwzględnienia skopiowanych danych.</span><span class="sxs-lookup"><span data-stu-id="64f69-559">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="64f69-560">Jeśli kopiowanie odbywa się między tablice wielowymiarowe, tablicy zachowuje się jak długo Jednowymiarowa tablica, gdzie wierszy (lub kolumny) koncepcyjnie określone są pełne.</span><span class="sxs-lookup"><span data-stu-id="64f69-560">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end to end.</span></span> <span data-ttu-id="64f69-561">Jeśli na przykład tablica ma trzy wiersze (lub kolumny) z czterema elementami, skopiowanie sześciu elementów od początku tablicy może spowodować skopiowanie wszystkich czterech elementów pierwszego wiersza (lub kolumny) i pierwszych dwóch elementów drugiego wiersza (lub kolumny).</span><span class="sxs-lookup"><span data-stu-id="64f69-561">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span>  
  
 <span data-ttu-id="64f69-562">Jeśli `sourceArray` i `destinationArray` nakładają się na siebie, ta metoda działa tak, jakby oryginalnej wartości `sourceArray` zostały zachowane w tymczasowej lokalizacji przed `destinationArray` zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="64f69-562">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="64f69-563">[C++]</span><span class="sxs-lookup"><span data-stu-id="64f69-563">[C++]</span></span>  
  
 <span data-ttu-id="64f69-564">Ta metoda jest odpowiednikiem standardowego funkcji C/C++ `memmove`, a nie `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="64f69-564">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="64f69-565">Tablice mogą być tablicami typu odwołania lub tablicami typu wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-565">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="64f69-566">Rzutowanie typu w dół jest wykonywane odpowiednio do potrzeb.</span><span class="sxs-lookup"><span data-stu-id="64f69-566">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="64f69-567">Podczas kopiowania z tablicy typu odwołania do tablicy typu wartości każdy element jest rozpakowywany, a następnie kopiowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-567">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="64f69-568">Podczas kopiowania z tablicy wartości typu do tablicy typu odwołania każdy element jest pakowany, a następnie kopiowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-568">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="64f69-569">Podczas kopiowania z tablicą typu odwołanie lub typ wartości do <xref:System.Object> tablicy, <xref:System.Object> jest utworzony w celu przechowywania każdej wartości lub odwołania, a następnie skopiowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-569">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="64f69-570">Podczas kopiowania z <xref:System.Object> tablicy do tablicy typu odwołanie lub typ wartości i przypisanie nie jest możliwe, <xref:System.InvalidCastException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-570">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="64f69-571">Jeśli `sourceArray` i `destinationArray` są obie tablic typu odwołania lub obu tablic typu <xref:System.Object>, jest wykonywana kopia pobieżna.</span><span class="sxs-lookup"><span data-stu-id="64f69-571">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="64f69-572">Kopia pobieżna <xref:System.Array> to nowa <xref:System.Array> zawierające odwołania do tych samych elementów jak oryginał <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-572">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="64f69-573">Nie są kopiowane same elementy ani to, co odwołuje się do elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-573">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="64f69-574">Z kolei bezpośrednich kopię <xref:System.Array> kopiuje elementy i wszystkich bezpośrednio lub pośrednio odwołuje się elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-574">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="64f69-575"><xref:System.ArrayTypeMismatchException> Jest generowany, jeśli tablice mają niezgodne typy.</span><span class="sxs-lookup"><span data-stu-id="64f69-575">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="64f69-576">Zgodność z typem jest zdefiniowana w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-576">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="64f69-577">Typ jest zgodny z samym sobą.</span><span class="sxs-lookup"><span data-stu-id="64f69-577">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="64f69-578">Typ wartości jest niezgodny z <xref:System.Object> i typu interfejsu implementowanych przez ten typ wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-578">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="64f69-579">Typ wartości jest uważany za podłączony do interfejsu tylko wtedy, gdy bezpośrednio implementuje ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="64f69-579">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="64f69-580">Odłączony typy nie są zgodne.</span><span class="sxs-lookup"><span data-stu-id="64f69-580">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="64f69-581">Dwa typy rzeczywistej wartości wewnętrznej (wstępnie zdefiniowane) są zgodne w przypadku kopiowania z typu źródłowego na typ docelowy w konwersji rozszerzającej.</span><span class="sxs-lookup"><span data-stu-id="64f69-581">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="64f69-582">Konwersja rozszerzająca nigdy nie traci informacji, podczas gdy konwersja zawężająca może utracić informacje.</span><span class="sxs-lookup"><span data-stu-id="64f69-582">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="64f69-583">Na przykład konwersja 32-bitowej oznaczonej liczby całkowitej na 64-bitową jest konwersją rozszerzającą, a 64-bitowej oznaczonej liczby całkowitej na 32-bitową jest konwersją zawężającą.</span><span class="sxs-lookup"><span data-stu-id="64f69-583">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="64f69-584">Aby uzyskać więcej informacji na temat konwersji, zobacz <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="64f69-584">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="64f69-585">Typ wartości niewewnętrznej (zdefiniowanej przez użytkownika) jest zgodny tylko z samym sobą.</span><span class="sxs-lookup"><span data-stu-id="64f69-585">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="64f69-586">Wyliczenia mają niejawnej konwersji <xref:System.Enum> i ich typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-586">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="64f69-587">Jeśli wartość każdego elementu w `sourceArray` wymaga przypisanie elementu podrzędnego (na przykład z klasy podstawowej w klasie pochodnej lub interfejs do obiektu) i jeden lub więcej elementów nie można rzutować typu odpowiadającego w `destinationArray`, <xref:System.InvalidCastException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-587">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="64f69-588">Jeśli ta metoda zgłasza wyjątek podczas kopiowania, stan `destinationArray` jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-588">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="64f69-589">Ta metoda jest O (`n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-589">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-590">
            <paramref name="sourceArray" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-590">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-591">- lub - <paramref name="destinationArray" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-591">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-592">
            <paramref name="sourceArray" /> i <paramref name="destinationArray" /> ma różnym stopniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-592">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="64f69-593">
            <paramref name="sourceArray" /> i <paramref name="destinationArray" /> mają niezgodne typy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-593">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-594">Co najmniej jeden element w <paramref name="sourceArray" /> nie można rzutować na typ <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-594">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-595">
            <paramref name="length" /> jest mniejsza niż 0 lub większą niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-595">
              <paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-596">
            <paramref name="length" /> jest większa niż liczba elementów w <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-596">
              <paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="64f69-597">- lub - <paramref name="length" /> jest większa niż liczba elementów w <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-597">-or-  <paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, int32 sourceIndex, class System.Array destinationArray, int32 destinationIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, sourceIndex As Integer, destinationArray As Array, destinationIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, int sourceIndex, Array ^ destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : Array * int * Array * int * int -&gt; unit" Usage="System.Array.Copy (sourceArray, sourceIndex, destinationArray, destinationIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="64f69-598">
            <see cref="T:System.Array" /> Zawierający dane do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-598">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="sourceIndex">
          <span data-ttu-id="64f69-599">32-bitową liczbę całkowitą, która reprezentuje indeks w <c>Tablica_źródłowa</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-599">A 32-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="64f69-600">
            <see cref="T:System.Array" /> Odbierająca danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-600">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="64f69-601">32-bitową liczbę całkowitą, która reprezentuje indeks w <c>destinationArray</c> od przechowywania, która rozpoczyna się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-601">A 32-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-602">32-bitową liczbę całkowitą reprezentującą liczbę elementów do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-602">A 32-bit integer that represents the number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-603">Kopiuje elementy z zakresu <see cref="T:System.Array" /> począwszy od indeksu określone źródło i wkleja je do innego <see cref="T:System.Array" /> począwszy od indeksu do określonej lokalizacji docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-603">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span>
          </span>
          <span data-ttu-id="64f69-604">Długość i indeksy są określone jako 32-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-604">The length and the indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-605">`sourceArray` i `destinationArray` parametry muszą mieć taką samą liczbę wymiarów.</span><span class="sxs-lookup"><span data-stu-id="64f69-605">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="64f69-606">Ponadto `destinationArray` musi już mieć wymiarów i musi mieć wystarczającą liczbę elementów od `destinationIndex` pozycji, aby pomieścić skopiowanych danych.</span><span class="sxs-lookup"><span data-stu-id="64f69-606">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements starting from the `destinationIndex` position to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="64f69-607">Jeśli kopiowanie odbywa się między tablice wielowymiarowe, tablicy zachowuje się jak długo Jednowymiarowa tablica, gdzie wierszy (lub kolumny) koncepcyjnie ustanowienia end-to-end.</span><span class="sxs-lookup"><span data-stu-id="64f69-607">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="64f69-608">Jeśli na przykład tablica ma trzy wiersze (lub kolumny) z czterema elementami, skopiowanie sześciu elementów od początku tablicy może spowodować skopiowanie wszystkich czterech elementów pierwszego wiersza (lub kolumny) i pierwszych dwóch elementów drugiego wiersza (lub kolumny).</span><span class="sxs-lookup"><span data-stu-id="64f69-608">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="64f69-609">Aby rozpocząć kopiowanie z drugiego elementu trzeciego wiersza (lub kolumny), `sourceIndex` musi być górna granica pierwszego wiersza (lub kolumny) oraz długość wiersza drugi (lub kolumny) oraz dwa.</span><span class="sxs-lookup"><span data-stu-id="64f69-609">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="64f69-610">Jeśli `sourceArray` i `destinationArray` nakładają się na siebie, ta metoda działa tak, jakby oryginalnej wartości `sourceArray` zostały zachowane w tymczasowej lokalizacji przed `destinationArray` zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="64f69-610">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="64f69-611">[C++]</span><span class="sxs-lookup"><span data-stu-id="64f69-611">[C++]</span></span>  
  
 <span data-ttu-id="64f69-612">Ta metoda jest odpowiednikiem standardowego funkcji C/C++ `memmove`, a nie `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="64f69-612">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="64f69-613">Tablice mogą być tablicami typu odwołania lub tablicami typu wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-613">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="64f69-614">Rzutowanie typu w dół jest wykonywane odpowiednio do potrzeb.</span><span class="sxs-lookup"><span data-stu-id="64f69-614">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="64f69-615">Podczas kopiowania z tablicy typu odwołania do tablicy typu wartości każdy element jest rozpakowywany, a następnie kopiowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-615">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="64f69-616">Podczas kopiowania z tablicy wartości typu do tablicy typu odwołania każdy element jest pakowany, a następnie kopiowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-616">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="64f69-617">Podczas kopiowania z tablicą typu odwołanie lub typ wartości do <xref:System.Object> tablicy, <xref:System.Object> jest utworzony w celu przechowywania każdej wartości lub odwołania, a następnie skopiowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-617">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="64f69-618">Podczas kopiowania z <xref:System.Object> tablicy do tablicy typu odwołanie lub typ wartości i przypisanie nie jest możliwe, <xref:System.InvalidCastException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-618">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="64f69-619">Jeśli `sourceArray` i `destinationArray` są obie tablic typu odwołania lub obu tablic typu <xref:System.Object>, jest wykonywana kopia pobieżna.</span><span class="sxs-lookup"><span data-stu-id="64f69-619">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="64f69-620">Kopia pobieżna <xref:System.Array> to nowa <xref:System.Array> zawierające odwołania do tych samych elementów jak oryginał <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-620">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="64f69-621">Nie są kopiowane same elementy ani to, co odwołuje się do elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-621">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="64f69-622">Z kolei bezpośrednich kopię <xref:System.Array> kopiuje elementy i wszystkich bezpośrednio lub pośrednio odwołuje się elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-622">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="64f69-623"><xref:System.ArrayTypeMismatchException> Jest generowany, jeśli tablice mają niezgodne typy.</span><span class="sxs-lookup"><span data-stu-id="64f69-623">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="64f69-624">Zgodność z typem jest zdefiniowana w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-624">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="64f69-625">Typ jest zgodny z samym sobą.</span><span class="sxs-lookup"><span data-stu-id="64f69-625">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="64f69-626">Typ wartości jest niezgodny z <xref:System.Object> i typu interfejsu implementowanych przez ten typ wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-626">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="64f69-627">Typ wartości jest uważany za podłączony do interfejsu tylko wtedy, gdy bezpośrednio implementuje ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="64f69-627">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="64f69-628">Odłączony typy nie są zgodne.</span><span class="sxs-lookup"><span data-stu-id="64f69-628">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="64f69-629">Dwa typy rzeczywistej wartości wewnętrznej (wstępnie zdefiniowane) są zgodne w przypadku kopiowania z typu źródłowego na typ docelowy w konwersji rozszerzającej.</span><span class="sxs-lookup"><span data-stu-id="64f69-629">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="64f69-630">Konwersja rozszerzająca nigdy nie traci informacji, podczas gdy konwersja zawężająca może utracić informacje.</span><span class="sxs-lookup"><span data-stu-id="64f69-630">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="64f69-631">Na przykład konwersja 32-bitowej oznaczonej liczby całkowitej na 64-bitową jest konwersją rozszerzającą, a 64-bitowej oznaczonej liczby całkowitej na 32-bitową jest konwersją zawężającą.</span><span class="sxs-lookup"><span data-stu-id="64f69-631">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="64f69-632">Aby uzyskać więcej informacji na temat konwersji, zobacz <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="64f69-632">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="64f69-633">Typ wartości niewewnętrznej (zdefiniowanej przez użytkownika) jest zgodny tylko z samym sobą.</span><span class="sxs-lookup"><span data-stu-id="64f69-633">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="64f69-634">Wyliczenia mają niejawnej konwersji <xref:System.Enum> i ich typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-634">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="64f69-635">Jeśli wartość każdego elementu w `sourceArray` wymaga przypisanie elementu podrzędnego (na przykład z klasy podstawowej w klasie pochodnej lub interfejs do obiektu) i jeden lub więcej elementów nie można rzutować typu odpowiadającego w `destinationArray`, <xref:System.InvalidCastException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-635">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="64f69-636">Jeśli ta metoda zgłasza wyjątek podczas kopiowania, stan `destinationArray` jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-636">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="64f69-637">Ta metoda jest O (`n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-637">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-638">Poniższy przykład kodu pokazuje sposób kopiowania z jednego <xref:System.Array> typu <xref:System.Object> do innego <xref:System.Array> typu integer.</span><span class="sxs-lookup"><span data-stu-id="64f69-638">The following code example shows how to copy from one <xref:System.Array> of type <xref:System.Object> to another <xref:System.Array> of type integer.</span></span>  
  
 [!code-cpp[Classic Array.Copy1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Copy1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Copy1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-639">
            <paramref name="sourceArray" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-639">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-640">- lub - <paramref name="destinationArray" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-640">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-641">
            <paramref name="sourceArray" /> i <paramref name="destinationArray" /> ma różnym stopniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-641">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="64f69-642">
            <paramref name="sourceArray" /> i <paramref name="destinationArray" /> mają niezgodne typy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-642">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-643">Co najmniej jeden element w <paramref name="sourceArray" /> nie można rzutować na typ <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-643">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-644">
            <paramref name="sourceIndex" /> jest mniejsza niż dolna granica pierwszym wymiarze <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-644">
              <paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="64f69-645">- lub - <paramref name="destinationIndex" /> jest mniejsza niż dolna granica pierwszym wymiarze <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-645">-or-  <paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.</span>
          </span>
          <span data-ttu-id="64f69-646">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-646">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-647">
            <paramref name="length" /> jest większa niż liczba elementów od <paramref name="sourceIndex" /> na końcu <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-647">
              <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="64f69-648">- lub - <paramref name="length" /> jest większa niż liczba elementów od <paramref name="destinationIndex" /> na końcu <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-648">-or-  <paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, long sourceIndex, Array destinationArray, long destinationIndex, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, int64 sourceIndex, class System.Array destinationArray, int64 destinationIndex, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Int64,System.Array,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, sourceIndex As Long, destinationArray As Array, destinationIndex As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, long sourceIndex, Array ^ destinationArray, long destinationIndex, long length);" />
      <MemberSignature Language="F#" Value="static member Copy : Array * int64 * Array * int64 * int64 -&gt; unit" Usage="System.Array.Copy (sourceArray, sourceIndex, destinationArray, destinationIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int64" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="64f69-649">
            <see cref="T:System.Array" /> Zawierający dane do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-649">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="sourceIndex">
          <span data-ttu-id="64f69-650">64-bitową liczbę całkowitą, która reprezentuje indeks w <c>Tablica_źródłowa</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-650">A 64-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="64f69-651">
            <see cref="T:System.Array" /> Odbierająca danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-651">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="64f69-652">64-bitową liczbę całkowitą, która reprezentuje indeks w <c>destinationArray</c> od przechowywania, która rozpoczyna się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-652">A 64-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-653">64-bitową liczbę całkowitą reprezentującą liczbę elementów do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-653">A 64-bit integer that represents the number of elements to copy.</span>
          </span>
          <span data-ttu-id="64f69-654">Liczba całkowita należy do zakresu od zera i <see cref="F:System.Int32.MaxValue" />włącznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-654">The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-655">Kopiuje elementy z zakresu <see cref="T:System.Array" /> począwszy od indeksu określone źródło i wkleja je do innego <see cref="T:System.Array" /> począwszy od indeksu do określonej lokalizacji docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-655">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span>
          </span>
          <span data-ttu-id="64f69-656">Długość i indeksy są określone jako 64-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-656">The length and the indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-657">`sourceArray` i `destinationArray` parametry muszą mieć taką samą liczbę wymiarów.</span><span class="sxs-lookup"><span data-stu-id="64f69-657">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="64f69-658">Ponadto `destinationArray` musi już mieć wymiarów i musi mieć wystarczającą liczbę elementów od `destinationIndex` pozycji, aby pomieścić skopiowanych danych.</span><span class="sxs-lookup"><span data-stu-id="64f69-658">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements starting from the `destinationIndex` position to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="64f69-659">Jeśli kopiowanie odbywa się między tablice wielowymiarowe, tablicy zachowuje się jak długo Jednowymiarowa tablica, gdzie wierszy (lub kolumny) koncepcyjnie ustanowienia end-to-end.</span><span class="sxs-lookup"><span data-stu-id="64f69-659">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="64f69-660">Jeśli na przykład tablica ma trzy wiersze (lub kolumny) z czterema elementami, skopiowanie sześciu elementów od początku tablicy może spowodować skopiowanie wszystkich czterech elementów pierwszego wiersza (lub kolumny) i pierwszych dwóch elementów drugiego wiersza (lub kolumny).</span><span class="sxs-lookup"><span data-stu-id="64f69-660">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="64f69-661">Aby rozpocząć kopiowanie z drugiego elementu trzeciego wiersza (lub kolumny), `sourceIndex` musi być górna granica pierwszego wiersza (lub kolumny) oraz długość wiersza drugi (lub kolumny) oraz dwa.</span><span class="sxs-lookup"><span data-stu-id="64f69-661">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="64f69-662">Jeśli `sourceArray` i `destinationArray` nakładają się na siebie, ta metoda działa tak, jakby oryginalnej wartości `sourceArray` zostały zachowane w tymczasowej lokalizacji przed `destinationArray` zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="64f69-662">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="64f69-663">[C++]</span><span class="sxs-lookup"><span data-stu-id="64f69-663">[C++]</span></span>  
  
 <span data-ttu-id="64f69-664">Ta metoda jest odpowiednikiem standardowego funkcji C/C++ `memmove`, a nie `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="64f69-664">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="64f69-665">Tablice mogą być tablicami typu odwołania lub tablicami typu wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-665">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="64f69-666">Rzutowanie typu w dół jest wykonywane odpowiednio do potrzeb.</span><span class="sxs-lookup"><span data-stu-id="64f69-666">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="64f69-667">Podczas kopiowania z tablicy typu odwołania do tablicy typu wartości każdy element jest rozpakowywany, a następnie kopiowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-667">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="64f69-668">Podczas kopiowania z tablicy wartości typu do tablicy typu odwołania każdy element jest pakowany, a następnie kopiowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-668">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="64f69-669">Podczas kopiowania z tablicą typu odwołanie lub typ wartości do <xref:System.Object> tablicy, <xref:System.Object> jest utworzony w celu przechowywania każdej wartości lub odwołania, a następnie skopiowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-669">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="64f69-670">Podczas kopiowania z <xref:System.Object> tablicy do tablicy typu odwołanie lub typ wartości i przypisanie nie jest możliwe, <xref:System.InvalidCastException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-670">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="64f69-671">Jeśli `sourceArray` i `destinationArray` są obie tablic typu odwołania lub obu tablic typu <xref:System.Object>, jest wykonywana kopia pobieżna.</span><span class="sxs-lookup"><span data-stu-id="64f69-671">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="64f69-672">Kopia pobieżna <xref:System.Array> to nowa <xref:System.Array> zawierające odwołania do tych samych elementów jak oryginał <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-672">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="64f69-673">Nie są kopiowane same elementy ani to, co odwołuje się do elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-673">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="64f69-674">Z kolei bezpośrednich kopię <xref:System.Array> kopiuje elementy i wszystkich bezpośrednio lub pośrednio odwołuje się elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-674">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="64f69-675"><xref:System.ArrayTypeMismatchException> Jest generowany, jeśli tablice mają niezgodne typy.</span><span class="sxs-lookup"><span data-stu-id="64f69-675">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="64f69-676">Zgodność z typem jest zdefiniowana w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-676">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="64f69-677">Typ jest zgodny z samym sobą.</span><span class="sxs-lookup"><span data-stu-id="64f69-677">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="64f69-678">Typ wartości jest niezgodny z <xref:System.Object> i typu interfejsu implementowanych przez ten typ wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-678">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="64f69-679">Typ wartości jest uważany za podłączony do interfejsu tylko wtedy, gdy bezpośrednio implementuje ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="64f69-679">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="64f69-680">Odłączony typy nie są zgodne.</span><span class="sxs-lookup"><span data-stu-id="64f69-680">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="64f69-681">Dwa typy rzeczywistej wartości wewnętrznej (wstępnie zdefiniowane) są zgodne w przypadku kopiowania z typu źródłowego na typ docelowy w konwersji rozszerzającej.</span><span class="sxs-lookup"><span data-stu-id="64f69-681">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="64f69-682">Konwersja rozszerzająca nigdy nie traci informacji, podczas gdy konwersja zawężająca może utracić informacje.</span><span class="sxs-lookup"><span data-stu-id="64f69-682">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="64f69-683">Na przykład konwersja 32-bitowej oznaczonej liczby całkowitej na 64-bitową jest konwersją rozszerzającą, a 64-bitowej oznaczonej liczby całkowitej na 32-bitową jest konwersją zawężającą.</span><span class="sxs-lookup"><span data-stu-id="64f69-683">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="64f69-684">Aby uzyskać więcej informacji na temat konwersji, zobacz <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="64f69-684">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="64f69-685">Typ wartości niewewnętrznej (zdefiniowanej przez użytkownika) jest zgodny tylko z samym sobą.</span><span class="sxs-lookup"><span data-stu-id="64f69-685">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="64f69-686">Wyliczenia mają niejawnej konwersji <xref:System.Enum> i ich typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="64f69-686">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="64f69-687">Jeśli wartość każdego elementu w `sourceArray` wymaga przypisanie elementu podrzędnego (na przykład z klasy podstawowej w klasie pochodnej lub interfejs do obiektu) i jeden lub więcej elementów nie można rzutować typu odpowiadającego w `destinationArray`, <xref:System.InvalidCastException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-687">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="64f69-688">Jeśli ta metoda zgłasza wyjątek podczas kopiowania, stan `destinationArray` jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-688">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="64f69-689">Ta metoda jest O (`n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-689">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-690">Poniższy przykład kodu pokazuje sposób kopiowania z jednego <xref:System.Array> typu <xref:System.Object> do innego <xref:System.Array> typu integer.</span><span class="sxs-lookup"><span data-stu-id="64f69-690">The following code example shows how to copy from one <xref:System.Array> of type <xref:System.Object> to another <xref:System.Array> of type integer.</span></span>  
  
 [!code-cpp[Classic Array.Copy1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Copy1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Copy1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-691">
            <paramref name="sourceArray" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-691">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-692">- lub - <paramref name="destinationArray" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-692">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-693">
            <paramref name="sourceArray" /> i <paramref name="destinationArray" /> ma różnym stopniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-693">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="64f69-694">
            <paramref name="sourceArray" /> i <paramref name="destinationArray" /> mają niezgodne typy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-694">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-695">Co najmniej jeden element w <paramref name="sourceArray" /> nie można rzutować na typ <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-695">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-696">
            <paramref name="sourceIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-696">
              <paramref name="sourceIndex" /> is outside the range of valid indexes for the <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="64f69-697">- lub - <paramref name="destinationIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-697">-or-  <paramref name="destinationIndex" /> is outside the range of valid indexes for the <paramref name="destinationArray" />.</span>
          </span>
          <span data-ttu-id="64f69-698">- lub - <paramref name="length" /> jest mniejsza niż 0 lub większą niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-698">-or-  <paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-699">
            <paramref name="length" /> jest większa niż liczba elementów od <paramref name="sourceIndex" /> na końcu <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-699">
              <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="64f69-700">- lub - <paramref name="length" /> jest większa niż liczba elementów od <paramref name="destinationIndex" /> na końcu <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-700">-or-  <paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-701">Kopiuje wszystkie elementy tablicy jednowymiarowej bieżącej do określonej tablicy jednowymiarowej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-701">Copies all the elements of the current one-dimensional array to the specified one-dimensional array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="array.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-702">Jednowymiarowa tablica, która jest miejscem docelowym elementów kopiowanych z bieżącej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-702">The one-dimensional array that is the destination of the elements copied from the current array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-703">32-bitową liczbę całkowitą, która reprezentuje indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-703">A 32-bit integer that represents the index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-704">Kopiuje wszystkie elementy bieżącego tablicy jednowymiarowej do określonej tablicy jednowymiarowej tablicy, zaczynając od indeksu tablicy w określonej lokalizacji docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-704">Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</span>
          </span>
          <span data-ttu-id="64f69-705">Indeks jest określony jako 32-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-705">The index is specified as a 32-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-706">Ta metoda kopiuje wszystkie elementy do bieżącego wystąpienia tablicy `array` docelowej tablicy, zaczynając od indeksu `index`.</span><span class="sxs-lookup"><span data-stu-id="64f69-706">This method copies all the elements of the current array instance to the `array` destination array, starting at index `index`.</span></span> <span data-ttu-id="64f69-707">`array` Tablicy docelowej musi już mieć wymiarów i musi mieć wystarczającą liczbę elementów do uwzględnienia skopiowane elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-707">The `array` destination array must already have been dimensioned and must have a sufficient number of elements to accommodate the copied elements.</span></span> <span data-ttu-id="64f69-708">W przeciwnym razie metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="64f69-708">Otherwise, the method throws an exception.</span></span>  
  
 <span data-ttu-id="64f69-709">Ta metoda obsługuje <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-709">This method supports the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="64f69-710">W przypadku implementowania <xref:System.Collections.ICollection?displayProperty=nameWithType> jest jawnie nie jest to wymagane, użyj <xref:System.Array.Copy%2A> Aby uniknąć dodatkowych pośrednie.</span><span class="sxs-lookup"><span data-stu-id="64f69-710">If implementing <xref:System.Collections.ICollection?displayProperty=nameWithType> is not explicitly required, use <xref:System.Array.Copy%2A> to avoid an extra indirection.</span></span>  
  
 <span data-ttu-id="64f69-711">Jeśli ta metoda zgłasza wyjątek podczas kopiowania, stan `array` jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-711">If this method throws an exception while copying, the state of `array` is undefined.</span></span>  
  
 <span data-ttu-id="64f69-712">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A>. Wykonuje kopię pobieżną tylko.</span><span class="sxs-lookup"><span data-stu-id="64f69-712">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.It performs a shallow copy only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-713">Poniższy przykład kodu pokazuje sposób kopiowania <xref:System.Array> do innego <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-713">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#1)]  
  
 <span data-ttu-id="64f69-714">Poniższy przykład kodu pokazuje sposób kopiowania <xref:System.Array> do innego <xref:System.Array> z dolną granicą różną od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-714">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array> with a nonzero lower bound.</span></span> <span data-ttu-id="64f69-715">Należy pamiętać, że cały źródła <xref:System.Array> jest kopiowana, włączając puste elementy, które zastąpić istniejące elementy w celu <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-715">Note that the entire source <xref:System.Array> is copied, including empty elements that overwrite existing elements in the target <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Array.CopyTo Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#2)]
 [!code-vb[Classic Array.CopyTo Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-716">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-716">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-717">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-717">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-718">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-718">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="64f69-719">- lub - liczba elementów w tablicy źródłowej jest większa niż liczba dostępnych elementów z <paramref name="index" /> do końca tablicy docelowej <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-719">-or-  The number of elements in the source array is greater than the available number of elements from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="64f69-720">Typ źródła <see cref="T:System.Array" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-720">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-721">Źródłowa tablica jest wielowymiarowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-721">The source array is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-722">Co najmniej jeden element w źródle <see cref="T:System.Array" /> nie można rzutować na typ docelowy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-722">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array array, int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CopyTo(System.Array,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ array, long index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Array * int64 -&gt; unit" Usage="array.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-723">Jednowymiarowa tablica, która jest miejscem docelowym elementów kopiowanych z bieżącej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-723">The one-dimensional array that is the destination of the elements copied from the current array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-724">64-bitową liczbę całkowitą, która reprezentuje indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-724">A 64-bit integer that represents the index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-725">Kopiuje wszystkie elementy bieżącego tablicy jednowymiarowej do określonej tablicy jednowymiarowej tablicy, zaczynając od indeksu tablicy w określonej lokalizacji docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-725">Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</span>
          </span>
          <span data-ttu-id="64f69-726">Indeks jest określony jako 64-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-726">The index is specified as a 64-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-727">Ta metoda kopiuje wszystkie elementy do bieżącego wystąpienia tablicy `array` docelowej tablicy, zaczynając od indeksu `index`.</span><span class="sxs-lookup"><span data-stu-id="64f69-727">This method copies all the elements of the current array instance to the `array` destination array, starting at index `index`.</span></span> <span data-ttu-id="64f69-728">`array` Tablicy docelowej musi już mieć wymiarów i musi mieć wystarczającą liczbę elementów do uwzględnienia skopiowane elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-728">The `array` destination array must already have been dimensioned and must have a sufficient number of elements to accommodate the copied elements.</span></span> <span data-ttu-id="64f69-729">W przeciwnym razie metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="64f69-729">Otherwise, the method throws an exception.</span></span>  
  
 <span data-ttu-id="64f69-730">Ta metoda obsługuje <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-730">This method supports the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="64f69-731">W przypadku implementowania <xref:System.Collections.ICollection?displayProperty=nameWithType> jest jawnie nie jest to wymagane, użyj <xref:System.Array.Copy%2A> Aby uniknąć dodatkowych pośrednie.</span><span class="sxs-lookup"><span data-stu-id="64f69-731">If implementing <xref:System.Collections.ICollection?displayProperty=nameWithType> is not explicitly required, use <xref:System.Array.Copy%2A> to avoid an extra indirection.</span></span>  
  
 <span data-ttu-id="64f69-732">Jeśli ta metoda zgłasza wyjątek podczas kopiowania, stan `array` jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-732">If this method throws an exception while copying, the state of `array` is undefined.</span></span>  
  
 <span data-ttu-id="64f69-733">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A>. Wykonuje kopię pobieżną tylko.</span><span class="sxs-lookup"><span data-stu-id="64f69-733">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.It performs a shallow copy only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-734">Poniższy przykład kodu pokazuje sposób kopiowania <xref:System.Array> do innego <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-734">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#1)]  
  
 <span data-ttu-id="64f69-735">Poniższy przykład kodu pokazuje sposób kopiowania <xref:System.Array> do innego <xref:System.Array> z dolną granicą różną od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-735">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array> with a nonzero lower bound.</span></span> <span data-ttu-id="64f69-736">Należy pamiętać, że cały źródła <xref:System.Array> jest kopiowana, włączając puste elementy, które zastąpić istniejące elementy w celu <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-736">Note that the entire source <xref:System.Array> is copied, including empty elements that overwrite existing elements in the target <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Array.CopyTo Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#2)]
 [!code-vb[Classic Array.CopyTo Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-737">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-737">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-738">
            <paramref name="index" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-738">
              <paramref name="index" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-739">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-739">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="64f69-740">- lub - liczba elementów w tablicy źródłowej jest większa niż liczba dostępnych elementów z <paramref name="index" /> do końca tablicy docelowej <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-740">-or-  The number of elements in the source array is greater than the available number of elements from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="64f69-741">Typ źródła <see cref="T:System.Array" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-741">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-742">Źródło <see cref="T:System.Array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-742">The source <see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-743">Co najmniej jeden element w źródle <see cref="T:System.Array" /> nie można rzutować na typ docelowy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-743">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Array.Copy(System.Array,System.Array,System.Int64)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-744">Inicjuje nowe wystąpienie klasy <see cref="T:System.Array" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-744">Initializes a new instance of the <see cref="T:System.Array" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * int -&gt; Array" Usage="System.Array.CreateInstance (elementType, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="64f69-745">
            <see cref="T:System.Type" /> z <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-745">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-746">Rozmiar <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-746">The size of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-747">Tworzy jednowymiarowa <see cref="T:System.Array" /> określonego <see cref="T:System.Type" /> i długości z indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-747">Creates a one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and length, with zero-based indexing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-748">Nowy jednowymiarowa <see cref="T:System.Array" /> określonego <see cref="T:System.Type" /> o określonej długości, przy użyciu indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-748">A new one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-749">W przeciwieństwie do większości klasy <xref:System.Array> zapewnia <xref:System.Array.CreateInstance%2A> metody, zamiast konstruktorów publicznych, aby umożliwić późne powiązania dostępu.</span><span class="sxs-lookup"><span data-stu-id="64f69-749">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="64f69-750">Elementy typu odwołania są zainicjowane do `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-750">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="64f69-751">Elementy typu wartości są inicjowane od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-751">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="64f69-752">Ta metoda jest O (`n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-752">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-753">Poniższy przykładowy kod przedstawia sposób tworzenia i inicjowania jednowymiarowa <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-753">The following code example shows how to create and initialize a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-754">
            <paramref name="elementType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-754">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-755">
            <paramref name="elementType" /> nie jest prawidłową <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-755">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64f69-756">
            <paramref name="elementType" /> nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-756">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="64f69-757">Na przykład <see cref="T:System.Void" /> nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-757">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="64f69-758">- lub - <paramref name="elementType" /> jest otwartym typem ogólnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-758">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-759">
            <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-759">
              <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, params int[] lengths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32[] lengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, ParamArray lengths As Integer()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, ... cli::array &lt;int&gt; ^ lengths);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * int[] -&gt; Array" Usage="System.Array.CreateInstance (elementType, lengths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="64f69-760">
            <see cref="T:System.Type" /> z <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-760">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="lengths">
          <span data-ttu-id="64f69-761">32-bitowych liczb całkowitych, które reprezentują rozmiar każdego wymiaru tablicy <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-761">An array of 32-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-762">Tworzy wielowymiarowe <see cref="T:System.Array" /> określonego <see cref="T:System.Type" /> i wymiarów długości z indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-762">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          </span>
          <span data-ttu-id="64f69-763">Długości wymiaru są określone w tablicy 32-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-763">The dimension lengths are specified in an array of 32-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-764">Nowy wielowymiarowe <see cref="T:System.Array" /> określonego <see cref="T:System.Type" /> o określonej długości dla każdego wymiaru przy użyciu indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-764">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-765">W przeciwieństwie do większości klasy <xref:System.Array> zapewnia <xref:System.Array.CreateInstance%2A> metody, zamiast konstruktorów publicznych, aby umożliwić późne powiązania dostępu.</span><span class="sxs-lookup"><span data-stu-id="64f69-765">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="64f69-766">Liczba elementów w `lengths` tablicy musi być równa liczby wymiarów w nowym <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-766">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span> <span data-ttu-id="64f69-767">Każdy element `lengths` określić długości odpowiedniego wymiaru tablicy w nowym <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-767">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-768">Elementy typu odwołania są zainicjowane do `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-768">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="64f69-769">Elementy typu wartości są inicjowane od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-769">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="64f69-770">Ta metoda jest O (`n`) operację, której `n` jest produktem wszystkich wartości w `lengths`.</span><span class="sxs-lookup"><span data-stu-id="64f69-770">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-771">Poniższy przykładowy kod przedstawia sposób tworzenia i inicjowania wielowymiarowe <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-771">The following code example shows how to create and initialize a multidimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-772">
            <paramref name="elementType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-772">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-773">- lub - <paramref name="lengths" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-773">-or-  <paramref name="lengths" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-774">
            <paramref name="elementType" /> nie jest prawidłową <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-774">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="64f69-775">- lub - <paramref name="lengths" /> tablica zawiera mniej niż jeden element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-775">-or-  The <paramref name="lengths" /> array contains less than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64f69-776">
            <paramref name="elementType" /> nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-776">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="64f69-777">Na przykład <see cref="T:System.Void" /> nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-777">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="64f69-778">- lub - <paramref name="elementType" /> jest otwartym typem ogólnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-778">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-779">Dowolna wartość <paramref name="lengths" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-779">Any value in <paramref name="lengths" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, params long[] lengths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int64[] lengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, ParamArray lengths As Long()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, ... cli::array &lt;long&gt; ^ lengths);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * int64[] -&gt; Array" Usage="System.Array.CreateInstance (elementType, lengths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="64f69-780">
            <see cref="T:System.Type" /> z <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-780">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="lengths">
          <span data-ttu-id="64f69-781">64-bitowych liczb całkowitych, które reprezentują rozmiar każdego wymiaru tablicy <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-781">An array of 64-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
          <span data-ttu-id="64f69-782">Każdy całkowitą w tablicy musi wynosić od zera i <see cref="F:System.Int32.MaxValue" />włącznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-782">Each integer in the array must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-783">Tworzy wielowymiarowe <see cref="T:System.Array" /> określonego <see cref="T:System.Type" /> i wymiarów długości z indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-783">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          </span>
          <span data-ttu-id="64f69-784">Długości wymiaru są określone w tablicy 64-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-784">The dimension lengths are specified in an array of 64-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-785">Nowy wielowymiarowe <see cref="T:System.Array" /> określonego <see cref="T:System.Type" /> o określonej długości dla każdego wymiaru przy użyciu indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-785">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-786">W przeciwieństwie do większości klasy <xref:System.Array> zapewnia <xref:System.Array.CreateInstance%2A> metody, zamiast konstruktorów publicznych, aby umożliwić późne powiązania dostępu.</span><span class="sxs-lookup"><span data-stu-id="64f69-786">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="64f69-787">Liczba elementów w `lengths` tablicy musi być równa liczby wymiarów w nowym <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-787">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span> <span data-ttu-id="64f69-788">Każdy element `lengths` określić długości odpowiedniego wymiaru tablicy w nowym <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-788">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-789">Elementy typu odwołania są zainicjowane do `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-789">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="64f69-790">Elementy typu wartości są inicjowane od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-790">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="64f69-791">Ta metoda jest O (`n`) operację, której `n` jest produktem wszystkich wartości w `lengths`.</span><span class="sxs-lookup"><span data-stu-id="64f69-791">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-792">Poniższy przykładowy kod przedstawia sposób tworzenia i inicjowania wielowymiarowe <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-792">The following code example shows how to create and initialize a multidimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-793">
            <paramref name="elementType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-793">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-794">- lub - <paramref name="lengths" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-794">-or-  <paramref name="lengths" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-795">
            <paramref name="elementType" /> nie jest prawidłową <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-795">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="64f69-796">- lub - <paramref name="lengths" /> tablica zawiera mniej niż jeden element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-796">-or-  The <paramref name="lengths" /> array contains less than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64f69-797">
            <paramref name="elementType" /> nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-797">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="64f69-798">Na przykład <see cref="T:System.Void" /> nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-798">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="64f69-799">- lub - <paramref name="elementType" /> jest otwartym typem ogólnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-799">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-800">Dowolna wartość <paramref name="lengths" /> jest mniejsza niż zero lub większa niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-800">Any value in <paramref name="lengths" /> is less than zero or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length1, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length1, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length1 As Integer, length2 As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length1, int length2);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * int * int -&gt; Array" Usage="System.Array.CreateInstance (elementType, length1, length2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="64f69-801">
            <see cref="T:System.Type" /> z <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-801">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length1">
          <span data-ttu-id="64f69-802">Rozmiar pierwszym wymiarze <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-802">The size of the first dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length2">
          <span data-ttu-id="64f69-803">Rozmiar drugiego wymiaru <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-803">The size of the second dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-804">Tworzy dwuwymiarowa <see cref="T:System.Array" /> określonego <see cref="T:System.Type" /> i wymiarów długości z indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-804">Creates a two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-805">Nowy dwuwymiarowa <see cref="T:System.Array" /> określonego <see cref="T:System.Type" /> o określonej długości dla każdego wymiaru przy użyciu indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-805">A new two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-806">W przeciwieństwie do większości klasy <xref:System.Array> zapewnia <xref:System.Array.CreateInstance%2A> metody, zamiast konstruktorów publicznych, aby umożliwić późne powiązania dostępu.</span><span class="sxs-lookup"><span data-stu-id="64f69-806">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="64f69-807">Elementy typu odwołania są zainicjowane do `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-807">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="64f69-808">Elementy typu wartości są inicjowane od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-808">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="64f69-809">Ta metoda jest O (`n`) operację, której `n` jest produktem `length1` i `length2`.</span><span class="sxs-lookup"><span data-stu-id="64f69-809">This method is an O(`n`) operation, where `n` is the product of `length1` and `length2`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-810">Poniższy przykładowy kod przedstawia sposób tworzenia i inicjowania dwuwymiarowa <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-810">The following code example shows how to create and initialize a two-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-811">
            <paramref name="elementType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-811">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-812">
            <paramref name="elementType" /> nie jest prawidłową <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-812">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64f69-813">
            <paramref name="elementType" /> nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-813">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="64f69-814">Na przykład <see cref="T:System.Void" /> nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-814">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="64f69-815">- lub - <paramref name="elementType" /> jest otwartym typem ogólnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-815">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-816">
            <paramref name="length1" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-816">
              <paramref name="length1" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-817">- lub - <paramref name="length2" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-817">-or-  <paramref name="length2" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int[] lengths, int[] lowerBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32[] lengths, int32[] lowerBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, lengths As Integer(), lowerBounds As Integer()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, cli::array &lt;int&gt; ^ lengths, cli::array &lt;int&gt; ^ lowerBounds);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * int[] * int[] -&gt; Array" Usage="System.Array.CreateInstance (elementType, lengths, lowerBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int32[]" />
        <Parameter Name="lowerBounds" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="64f69-818">
            <see cref="T:System.Type" /> z <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-818">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="lengths">
          <span data-ttu-id="64f69-819">Jednowymiarowa tablica, która zawiera rozmiar każdego wymiaru <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-819">A one-dimensional array that contains the size of each dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="lowerBounds">
          <span data-ttu-id="64f69-820">Jednowymiarowa tablica, która zawiera dolna granica (indeks początkowy) każdego wymiaru <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-820">A one-dimensional array that contains the lower bound (starting index) of each dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-821">Tworzy wielowymiarowe <see cref="T:System.Array" /> określonego <see cref="T:System.Type" /> i wymiarów długości z określonym dolne granice tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-821">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with the specified lower bounds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-822">Nowy wielowymiarowe <see cref="T:System.Array" /> określonego <see cref="T:System.Type" /> z określoną długość i dolną granicę każdego wymiaru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-822">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length and lower bound for each dimension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-823">W przeciwieństwie do większości klasy <xref:System.Array> zapewnia <xref:System.Array.CreateInstance%2A> metody, zamiast konstruktorów publicznych, aby umożliwić późne powiązania dostępu.</span><span class="sxs-lookup"><span data-stu-id="64f69-823">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="64f69-824">`lengths` i `lowerBounds` tablice muszą mieć taką samą liczbę elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-824">The `lengths` and `lowerBounds` arrays must have the same number of elements.</span></span> <span data-ttu-id="64f69-825">Liczba elementów w `lengths` tablicy musi być równa liczby wymiarów w nowym <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-825">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-826">Każdy element `lengths` określić długości odpowiedniego wymiaru tablicy w nowym <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-826">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-827">Każdy element `lowerBounds` określić dolna granica odpowiedniego wymiaru tablicy w nowym <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-827">Each element of the `lowerBounds` array must specify the lower bound of the corresponding dimension in the new <xref:System.Array>.</span></span> <span data-ttu-id="64f69-828">Ogólnie rzecz biorąc Biblioteka klas programu .NET Framework i wielu języków programowania nie obsługują niezerową dolne granice tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-828">Generally, the .NET Framework class library and many programming languages do not handle nonzero lower bounds.</span></span>  
  
 <span data-ttu-id="64f69-829">Elementy typu odwołania są zainicjowane do `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-829">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="64f69-830">Elementy typu wartości są inicjowane od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-830">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="64f69-831">Ta metoda jest O (`n`) operację, której `n` jest produktem wszystkich wartości w `lengths`.</span><span class="sxs-lookup"><span data-stu-id="64f69-831">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-832">Poniższy przykładowy kod przedstawia sposób tworzenia i inicjowania wielowymiarowe <xref:System.Array> z określonym dolne granice tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-832">The following code example shows how to create and initialize a multidimensional <xref:System.Array> with specified lower bounds.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance4 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance4 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-833">
            <paramref name="elementType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-833">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-834">- lub - <paramref name="lengths" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-834">-or-  <paramref name="lengths" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-835">- lub - <paramref name="lowerBounds" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-835">-or-  <paramref name="lowerBounds" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-836">
            <paramref name="elementType" /> nie jest prawidłową <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-836">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="64f69-837">- lub - <paramref name="lengths" /> tablica zawiera mniej niż jeden element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-837">-or-  The <paramref name="lengths" /> array contains less than one element.</span>
          </span>
          <span data-ttu-id="64f69-838">- lub - <paramref name="lengths" /> i <paramref name="lowerBounds" /> tablice nie zawierają tę samą liczbę elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-838">-or-  The <paramref name="lengths" /> and <paramref name="lowerBounds" /> arrays do not contain the same number of elements.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64f69-839">
            <paramref name="elementType" /> nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-839">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="64f69-840">Na przykład <see cref="T:System.Void" /> nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-840">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="64f69-841">- lub - <paramref name="elementType" /> jest otwartym typem ogólnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-841">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-842">Dowolna wartość <paramref name="lengths" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-842">Any value in <paramref name="lengths" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-843">- lub - dowolna wartość <paramref name="lowerBounds" /> jest bardzo duży, w taki sposób, że suma dolna granica wymiaru i jego długość jest większa niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-843">-or-  Any value in <paramref name="lowerBounds" /> is very large, such that the sum of a dimension's lower bound and length is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length1, int length2, int length3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length1, int32 length2, int32 length3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length1 As Integer, length2 As Integer, length3 As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length1, int length2, int length3);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * int * int * int -&gt; Array" Usage="System.Array.CreateInstance (elementType, length1, length2, length3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="length3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="64f69-844">
            <see cref="T:System.Type" /> z <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-844">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length1">
          <span data-ttu-id="64f69-845">Rozmiar pierwszym wymiarze <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-845">The size of the first dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length2">
          <span data-ttu-id="64f69-846">Rozmiar drugiego wymiaru <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-846">The size of the second dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length3">
          <span data-ttu-id="64f69-847">Rozmiar wymiaru innych <see cref="T:System.Array" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-847">The size of the third dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-848">Tworzy trójwymiarowy <see cref="T:System.Array" /> określonego <see cref="T:System.Type" /> i wymiarów długości z indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-848">Creates a three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-849">Nowy trójwymiarowy <see cref="T:System.Array" /> określonego <see cref="T:System.Type" /> o określonej długości dla każdego wymiaru przy użyciu indeksowania liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-849">A new three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-850">W przeciwieństwie do większości klasy <xref:System.Array> zapewnia <xref:System.Array.CreateInstance%2A> metody, zamiast konstruktorów publicznych, aby umożliwić późne powiązania dostępu.</span><span class="sxs-lookup"><span data-stu-id="64f69-850">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="64f69-851">Elementy typu odwołania są zainicjowane do `null`.</span><span class="sxs-lookup"><span data-stu-id="64f69-851">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="64f69-852">Elementy typu wartości są inicjowane od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-852">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="64f69-853">Ta metoda jest O (`n`) operację, której `n` jest produktem `length1`, `length2`, i `length3`.</span><span class="sxs-lookup"><span data-stu-id="64f69-853">This method is an O(`n`) operation, where `n` is the product of `length1`, `length2`, and `length3`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-854">Poniższy przykładowy kod przedstawia sposób tworzenia i inicjowania trójwymiarowy <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-854">The following code example shows how to create and initialize a three-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-855">
            <paramref name="elementType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-855">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-856">
            <paramref name="elementType" /> nie jest prawidłową <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-856">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64f69-857">
            <paramref name="elementType" /> nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-857">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="64f69-858">Na przykład <see cref="T:System.Void" /> nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-858">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="64f69-859">- lub - <paramref name="elementType" /> jest otwartym typem ogólnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-859">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-860">
            <paramref name="length1" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-860">
              <paramref name="length1" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-861">- lub - <paramref name="length2" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-861">-or-  <paramref name="length2" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-862">- lub - <paramref name="length3" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-862">-or-  <paramref name="length3" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Empty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] Empty&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] Empty&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Empty``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Empty(Of T) () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ Empty();" />
      <MemberSignature Language="F#" Value="static member Empty : unit -&gt; 'T[]" Usage="System.Array.Empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-863">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-863">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="64f69-864">Zwraca pustą tablicę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-864">Returns an empty array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-865">Zwraca pustą <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-865">Returns an empty <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Exists&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists(Of T) (array As T(), match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool Exists(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member Exists : 'T[] * Predicate&lt;'T&gt; -&gt; bool" Usage="System.Array.Exists (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-866">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-866">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-867">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-867">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="64f69-868">
            <see cref="T:System.Predicate`1" /> Definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-868">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-869">Określa, czy określona tablica zawiera elementy odpowiadające warunkom zdefiniowanym przez określony predykat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-869">Determines whether the specified array contains elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-870">
            <see langword="true" /> Jeśli <paramref name="array" /> zawiera jeden lub więcej elementów, które pasują do warunków zdefiniowanych przez określony predykat; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-870">
              <see langword="true" /> if <paramref name="array" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-871"><xref:System.Predicate%601> Jest delegowany do metody, która zwraca `true` obiekt przekazywany do jest zgodne z warunkami określonymi w delegacie.</span><span class="sxs-lookup"><span data-stu-id="64f69-871">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="64f69-872">Elementy `array` indywidualnie są przekazywane do <xref:System.Predicate%601>, i przetwarzania jest zatrzymana po znalezieniu dopasowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-872">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and processing is stopped when a match is found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-873">W języku C# i Visual Basic, nie jest konieczne tworzenie <xref:System.Predicate%601> jawnie delegowanie.</span><span class="sxs-lookup"><span data-stu-id="64f69-873">In C# and Visual Basic, it is not necessary to create the <xref:System.Predicate%601> delegate explicitly.</span></span> <span data-ttu-id="64f69-874">Te języki wnioskują o poprawnym delegacie z kontekstu, a następnie są tworzone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="64f69-874">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="64f69-875">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-875">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-876">W poniższym przykładzie warunki dopasowania <xref:System.Array.Exists%2A> wyrażenia usinglambda metody do sprawdzenia, czy planety zaczynał się literą danego lub czy świecie znajduje się w podanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-876">The following example specifies the match conditions for the <xref:System.Array.Exists%2A> method usinglambda expressions to check whether a planet starts with a given letter or whether the planet is found on the given array.</span></span>  
  
 [!code-csharp[System.Array.Exists#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists3.cs#3)]
 [!code-vb[System.Array.Exists#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists3.vb#3)]  
  
 <span data-ttu-id="64f69-877">W poniższym przykładzie użyto <xref:System.Array.Exists%2A> metodę, aby wskazać, czy wszystkie nazwy w tablicy ciągów zaczynają się od określonego znaku.</span><span class="sxs-lookup"><span data-stu-id="64f69-877">The following example uses the <xref:System.Array.Exists%2A> method to indicate whether any names in a string array begin with a specified character.</span></span> <span data-ttu-id="64f69-878">Przykład tworzy `StringSearcher` obiektu przez przekazywanie ciągu wyszukiwania dla jego konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="64f69-878">The example instantiates a `StringSearcher` object by passing the string to search for to its class constructor.</span></span> <span data-ttu-id="64f69-879">`StringSearcher.StartsWith` Metoda ma takiego samego podpisu jak <xref:System.Predicate%601> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="64f69-879">The `StringSearcher.StartsWith` method has same signature as the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="64f69-880">Gdy <xref:System.Array.Exists%2A> metoda jest wywoływana, każdy element członkowski tablicy jest przekazywana do delegata, dopóki zwróci `true` lub iteracji wszystkich elementów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-880">When the <xref:System.Array.Exists%2A> method is called, each member of the array is passed to the delegate until it returns `true` or iterates all the elements in the array.</span></span>  
  
 [!code-csharp[System.Array.Exists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists1.cs#1)]
 [!code-vb[System.Array.Exists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists1.vb#1)]  
  
 <span data-ttu-id="64f69-881">Można również użyć wyrażenia lambda zamiast jawnie definiować metody, której sygnatura odpowiada do tego delegata.</span><span class="sxs-lookup"><span data-stu-id="64f69-881">You can also use a lambda expression rather than explicitly define a method whose signature corresponds to that of the delegate.</span></span> <span data-ttu-id="64f69-882">W poniższym przykładzie `StringSearcher` klasy i jej `StartsWith` metody za pomocą wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="64f69-882">The following example replaces the `StringSearcher` class and its `StartsWith` method with a lambda expression.</span></span>  
  
 [!code-csharp[System.Array.Exists#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists2.cs#2)]
 [!code-vb[System.Array.Exists#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-883">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-883">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-884">- lub - <paramref name="match" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-884">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="Fill&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Fill&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Fill``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill(Of T) (array As T(), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Fill(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberSignature Language="F#" Value="static member Fill : 'T[] * 'T -&gt; unit" Usage="System.Array.Fill (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Fill&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Fill``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill(Of T) (array As T(), value As T, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Fill(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member Fill : 'T[] * 'T * int * int -&gt; unit" Usage="System.Array.Fill (array, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="value">To be added.</param>
        <param name="startIndex">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Find&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Find&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Find(Of T) (array As T(), match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T Find(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member Find : 'T[] * Predicate&lt;'T&gt; -&gt; 'T" Usage="System.Array.Find (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-885">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-885">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-886">Tablica jednowymiarowa, liczony od zera do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-886">The one-dimensional, zero-based array to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="64f69-887">Predykat definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-887">The predicate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-888">Wyszukuje element, który pasuje do warunków zdefiniowanych przez określony predykat i zwraca pierwsze wystąpienie w ramach całego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-888">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-889">Pierwszy element, który pasuje do warunków zdefiniowanych przez określony predykat, gdy znaleziono; w przeciwnym razie wartość domyślna dla typu <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-889">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-890"><xref:System.Predicate%601> Jest delegowany do metody lub wyrażenie lambda, które zwraca `true` obiekt przekazywany do jest zgodne z warunkami określonymi w delegat lub wyrażenie lambda.</span><span class="sxs-lookup"><span data-stu-id="64f69-890">The <xref:System.Predicate%601> is a delegate to a method or a lambda expression that returns `true` if the object passed to it matches the conditions defined in the delegate or lambda expression.</span></span>  <span data-ttu-id="64f69-891">Elementy `array` indywidualnie są przekazywane do <xref:System.Predicate%601>, rozpoczynając od pierwszego elementu i kończąc ostatnim elemencie.</span><span class="sxs-lookup"><span data-stu-id="64f69-891">The elements of `array` are individually passed to the <xref:System.Predicate%601>, starting with the first element and ending with the last element.</span></span>  <span data-ttu-id="64f69-892">Przetwarzanie zostało zatrzymane po znalezieniu dopasowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-892">Processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="64f69-893">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-893">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-894">W poniższym przykładzie użyto <xref:System.Predicate%601> delegat <xref:System.Array.Find%2A> metody ogólnej wyszukiwania tablicę <xref:System.Drawing.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="64f69-894">The following example uses a <xref:System.Predicate%601> delegate with the <xref:System.Array.Find%2A> generic method to search an array of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="64f69-895">Reprezentuje delegata, Metoda `ProductGT10`, zwraca `true` Jeśli produkt pola X i Y jest większa niż 100 000.</span><span class="sxs-lookup"><span data-stu-id="64f69-895">The method the delegate represents, `ProductGT10`, returns `true` if the product of the X and Y fields is greater than 100,000.</span></span> <span data-ttu-id="64f69-896"><xref:System.Array.Find%2A> Metoda wywołuje delegata dla każdego elementu w tablicy, zwracając pierwszego punktu, który spełnia warunek testu.</span><span class="sxs-lookup"><span data-stu-id="64f69-896">The <xref:System.Array.Find%2A> method calls the delegate for each element of the array, returning the first point that meets the test condition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-897">Visual Basic i C# użytkowników ma utworzyć delegat jawnie lub określić argument typu metody ogólnej.</span><span class="sxs-lookup"><span data-stu-id="64f69-897">Visual Basic and C# users do not have to create the delegate explicitly or specify the type argument of the generic method.</span></span> <span data-ttu-id="64f69-898">Kompilatory ustalić wymagane typy z podane argumenty metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-898">The compilers determine the necessary types from the method arguments you supply.</span></span>  
  
 [!code-csharp[System.Array.Find#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.find/cs/source.cs#1)]
 [!code-vb[System.Array.Find#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.find/vb/source.vb#1)]  
  
 <span data-ttu-id="64f69-899">Zamiast jawnie definiowanie metody podpisem konieczne utworzenie wystąpienia <xref:System.Predicate%601> delegować i przekazywanie delegata do <xref:System.Array.Find%2A> metody jest zwyczajowe można użyć wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="64f69-899">Rather than explicitly defining a method with the necessary signature, instantiating a <xref:System.Predicate%601> delegate, and passing the delegate to the <xref:System.Array.Find%2A> method, it is customary to use a lambda expression.</span></span> <span data-ttu-id="64f69-900">Poniższy przykład jest taki sam jak poprzedni, z wyjątkiem tego, że używa wyrażenia lambda jako `match` argumentu.</span><span class="sxs-lookup"><span data-stu-id="64f69-900">The following example is identical to the previous one, except that it uses a lambda expression as the `match` argument.</span></span>  
  
 [!code-csharp[System.Array.Find#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.find/cs/lambda.cs#2)]
 [!code-vb[System.Array.Find#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.find/vb/lambda.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-901">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-901">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-902">- lub - <paramref name="match" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-902">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] FindAll&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] FindAll&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAll(Of T) (array As T(), match As Predicate(Of T)) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ FindAll(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindAll : 'T[] * Predicate&lt;'T&gt; -&gt; 'T[]" Usage="System.Array.FindAll (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-903">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-903">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-904">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-904">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="64f69-905">
            <see cref="T:System.Predicate`1" /> Definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-905">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-906">Pobiera wszystkie elementy odpowiadające warunkom zdefiniowanym przez określony predykat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-906">Retrieves all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-907">
            <see cref="T:System.Array" /> Zawierający wszystkie elementy zgodnych warunki zdefiniowane przez określony predykat, jeśli je znaleziono; w przeciwnym razie, pustą <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-907">An <see cref="T:System.Array" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-908"><xref:System.Predicate%601> Jest delegowany do metody, która zwraca `true` obiekt przekazywany do jest zgodne z warunkami określonymi w delegacie.</span><span class="sxs-lookup"><span data-stu-id="64f69-908">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="64f69-909">Elementy `array` indywidualnie są przekazywane do <xref:System.Predicate%601>, i elementy, które spełniają podane są zapisywane w zwróconej tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-909">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and the elements that match the conditions are saved in the returned array.</span></span>  
  
 <span data-ttu-id="64f69-910">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-910">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-911">Poniższy przykład tworzy tablicę 50 liczb losowych wartości, które mogą należeć do zakresu od 0 do 1000.</span><span class="sxs-lookup"><span data-stu-id="64f69-911">The following example creates an array of 50 random numbers with values that can range from 0 to 1,000.</span></span> <span data-ttu-id="64f69-912">Następnie wywołuje <xref:System.Array.FindAll%2A> metody za pomocą wyrażenia lambda, która zwraca wartości zakresu od 300 do 600.</span><span class="sxs-lookup"><span data-stu-id="64f69-912">It then calls the <xref:System.Array.FindAll%2A> method with a lambda expression that returns the values that range from 300 to 600.</span></span> <span data-ttu-id="64f69-913">Należy pamiętać, że wyrażenie lambda jest przekazywany parametr o nazwie `x`;  Ta pozycja reprezentuje poszczególnych element członkowski, który jest przekazywany do <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="64f69-913">Note that the lambda expression is passed a parameter named `x`;  this represents the individual array member that is passed to the <xref:System.Predicate%601>.</span></span> <span data-ttu-id="64f69-914">Należy również zauważyć, że lokalna `lBound` i `uBound` zmienne są dostępne w wyrażeniu lambda.</span><span class="sxs-lookup"><span data-stu-id="64f69-914">Also note that the local `lBound` and `uBound` variables are accessible within the lambda expression.</span></span>  
  
 [!code-csharp[System.Array.FindAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.findall/cs/findall.cs#1)]
 [!code-vb[System.Array.FindAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.findall/vb/findall.vb#1)]  
  
 <span data-ttu-id="64f69-915">Poniższy przykład kodu pokazuje <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, i <xref:System.Array.FindAll%2A> metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-915">The following code example demonstrates the <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, and <xref:System.Array.FindAll%2A> generic methods.</span></span> <span data-ttu-id="64f69-916">Tworzona jest tablica ciągów zawierająca 8 nazw dinozaurów, przy czym dwie z nich (w pozycjach 1 i 5) kończą się na „saurus”.</span><span class="sxs-lookup"><span data-stu-id="64f69-916">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="64f69-917">Przykładowy kod definiuje również metody predykatu wyszukiwania o nazwie `EndsWithSaurus`, który akceptuje parametr typu string i zwraca wartość typu Boolean wartość wskazującą, czy ciąg wejściowy kończy się na "saurus".</span><span class="sxs-lookup"><span data-stu-id="64f69-917">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="64f69-918"><xref:System.Array.Find%2A> Metoda rodzajowa jest przesyłany tablicy od początku, przekazywanie kolejno do każdego elementu `EndsWithSaurus` metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-918">The <xref:System.Array.Find%2A> generic method traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="64f69-919">Zatrzymuje wyszukiwania, kiedy `EndsWithSaurus` metoda zwraca `true` dla elementu "Amargasaurus".</span><span class="sxs-lookup"><span data-stu-id="64f69-919">The search stops when the `EndsWithSaurus` method returns `true` for the element "Amargasaurus".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-920">W języku C# i Visual Basic, nie jest konieczne tworzenie `Predicate<string>` delegować (`Predicate(Of String)` w języku Visual Basic) jawnie.</span><span class="sxs-lookup"><span data-stu-id="64f69-920">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="64f69-921">Te języki wnioskują o poprawnym delegacie z kontekstu, a następnie są tworzone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="64f69-921">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="64f69-922"><xref:System.Array.FindLast%2A> Metoda ogólna służy do wyszukiwania do tyłu na końcu tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-922">The <xref:System.Array.FindLast%2A> generic method is used to search the array backward from the end.</span></span> <span data-ttu-id="64f69-923">Znajduje element „Dilophosaurus” w pozycji 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-923">It finds the element "Dilophosaurus" at position 5.</span></span> <span data-ttu-id="64f69-924"><xref:System.Array.FindAll%2A> Metoda ogólna służy do zwracania tablica zawierająca wszystkie elementy, które kończą się "saurus".</span><span class="sxs-lookup"><span data-stu-id="64f69-924">The <xref:System.Array.FindAll%2A> generic method is used to return an array containing all the elements that end in "saurus".</span></span> <span data-ttu-id="64f69-925">Elementy są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="64f69-925">The elements are displayed.</span></span>  
  
 <span data-ttu-id="64f69-926">Przykład kodu pokazuje, również <xref:System.Array.Exists%2A> i <xref:System.Array.TrueForAll%2A> metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-926">The code example also demonstrates the <xref:System.Array.Exists%2A> and <xref:System.Array.TrueForAll%2A> generic methods.</span></span>  
  
 [!code-cpp[Array_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[Array_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindEtAl/cs/source.cs#1)]
 [!code-vb[Array_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-927">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-927">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-928">- lub - <paramref name="match" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-928">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindIndex&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-929">Wyszukuje element, który pasuje do warunków zdefiniowanych przez określony predykat i zwraca liczony od zera indeks pierwszego wystąpienia w <see cref="T:System.Array" /> lub jego część.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-929">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within an <see cref="T:System.Array" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindIndex : 'T[] * Predicate&lt;'T&gt; -&gt; int" Usage="System.Array.FindIndex (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-930">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-930">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-931">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-931">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="64f69-932">
            <see cref="T:System.Predicate`1" /> Definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-932">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-933">Wyszukuje element, który pasuje do warunków zdefiniowanych przez określony predykat i zwraca liczony od zera indeks pierwszego wystąpienia w obrębie całej <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-933">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-934">Liczony od zera indeks pierwszego wystąpienia elementu, który pasuje do warunków zdefiniowanych przez <paramref name="match" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-934">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-935"><xref:System.Array> Przeszukiwany jest do przodu zaczynając od pierwszego elementu i końcowy z ostatniego elementu.</span><span class="sxs-lookup"><span data-stu-id="64f69-935">The <xref:System.Array> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="64f69-936"><xref:System.Predicate%601> Jest delegowany do metody, która zwraca `true` obiekt przekazywany do jest zgodne z warunkami określonymi w delegacie.</span><span class="sxs-lookup"><span data-stu-id="64f69-936">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="64f69-937">Elementy `array` indywidualnie są przekazywane do <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="64f69-937">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="64f69-938">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-938">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-939">Poniższy przykład kodu pokazuje wszystkich trzech przeciążeń <xref:System.Array.FindIndex%2A> metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-939">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="64f69-940">Tworzona jest tablica ciągów zawierająca 8 nazw dinozaurów, przy czym dwie z nich (w pozycjach 1 i 5) kończą się na „saurus”.</span><span class="sxs-lookup"><span data-stu-id="64f69-940">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="64f69-941">Przykładowy kod definiuje również metody predykatu wyszukiwania o nazwie `EndsWithSaurus`, który akceptuje parametr typu string i zwraca wartość typu Boolean wartość wskazującą, czy ciąg wejściowy kończy się na "saurus".</span><span class="sxs-lookup"><span data-stu-id="64f69-941">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="64f69-942"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> Przeciążenie metody są przesyłane za pośrednictwem tablicy od początku, przekazywanie kolejno do każdego elementu `EndsWithSaurus` metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-942">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="64f69-943">Zatrzymuje wyszukiwania, kiedy `EndsWithSaurus` metoda zwraca `true` dla elementu na pozycji 1.</span><span class="sxs-lookup"><span data-stu-id="64f69-943">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-944">W języku C# i Visual Basic, nie jest konieczne tworzenie `Predicate<string>` delegować (`Predicate(Of String)` w języku Visual Basic) jawnie.</span><span class="sxs-lookup"><span data-stu-id="64f69-944">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="64f69-945">Te języki wnioskują o poprawnym delegacie z kontekstu, a następnie są tworzone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="64f69-945">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="64f69-946"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> Przeciążenie metody używane do przeszukiwania tablicy, zaczynając od pozycji 2 i przejściem do końca tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-946">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="64f69-947">Wyszukiwany element na pozycji 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-947">It finds the element at position 5.</span></span> <span data-ttu-id="64f69-948">Na koniec <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> przeciążenie metody używane do przeszukiwania zakres trzy elementy, zaczynając od pozycji 2.</span><span class="sxs-lookup"><span data-stu-id="64f69-948">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="64f69-949">Ponieważ nie ma nazw dinozaurów w tym zakresie kończących się ciągiem „saurus”, zwraca wartość –1.</span><span class="sxs-lookup"><span data-stu-id="64f69-949">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-950">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-950">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-951">- lub - <paramref name="match" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-951">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, int32 startIndex, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindIndex : 'T[] * int * Predicate&lt;'T&gt; -&gt; int" Usage="System.Array.FindIndex (array, startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-952">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-952">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-953">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-953">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="64f69-954">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-954">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="64f69-955">
            <see cref="T:System.Predicate`1" /> Definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-955">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-956">Wyszukuje element, który pasuje do warunków zdefiniowanych przez określony predykat i zwraca liczony od zera indeks pierwszego wystąpienia w zakresie elementów w <see cref="T:System.Array" /> który rozciąga się od określonego indeksu do ostatniego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-956">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-957">Liczony od zera indeks pierwszego wystąpienia elementu, który pasuje do warunków zdefiniowanych przez <paramref name="match" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-957">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-958"><xref:System.Array> Przeszukiwany jest do przodu zaczynając od `startIndex` i kończąc na ostatnim elemencie.</span><span class="sxs-lookup"><span data-stu-id="64f69-958">The <xref:System.Array> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="64f69-959"><xref:System.Predicate%601> Jest delegowany do metody, która zwraca `true` obiekt przekazywany do jest zgodne z warunkami określonymi w delegacie.</span><span class="sxs-lookup"><span data-stu-id="64f69-959">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="64f69-960">Elementy `array` indywidualnie są przekazywane do <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="64f69-960">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="64f69-961">Ta metoda jest O (`n`) operację, której `n` jest liczba elementów od `startIndex` na końcu `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-961">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-962">Poniższy przykład kodu pokazuje wszystkich trzech przeciążeń <xref:System.Array.FindIndex%2A> metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-962">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="64f69-963">Tworzona jest tablica ciągów zawierająca 8 nazw dinozaurów, przy czym dwie z nich (w pozycjach 1 i 5) kończą się na „saurus”.</span><span class="sxs-lookup"><span data-stu-id="64f69-963">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="64f69-964">Przykładowy kod definiuje również metody predykatu wyszukiwania o nazwie `EndsWithSaurus`, który akceptuje parametr typu string i zwraca wartość typu Boolean wartość wskazującą, czy ciąg wejściowy kończy się na "saurus".</span><span class="sxs-lookup"><span data-stu-id="64f69-964">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="64f69-965"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> Przeciążenie metody są przesyłane za pośrednictwem tablicy od początku, przekazywanie kolejno do każdego elementu `EndsWithSaurus` metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-965">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="64f69-966">Zatrzymuje wyszukiwania, kiedy `EndsWithSaurus` metoda zwraca `true` dla elementu na pozycji 1.</span><span class="sxs-lookup"><span data-stu-id="64f69-966">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-967">W języku C# i Visual Basic, nie jest konieczne tworzenie `Predicate<string>` delegować (`Predicate(Of String)` w języku Visual Basic) jawnie.</span><span class="sxs-lookup"><span data-stu-id="64f69-967">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="64f69-968">Te języki wnioskują o poprawnym delegacie z kontekstu, a następnie są tworzone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="64f69-968">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="64f69-969"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> Przeciążenie metody używane do przeszukiwania tablicy, zaczynając od pozycji 2 i przejściem do końca tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-969">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="64f69-970">Wyszukiwany element na pozycji 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-970">It finds the element at position 5.</span></span> <span data-ttu-id="64f69-971">Na koniec <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> przeciążenie metody używane do przeszukiwania zakres trzy elementy, zaczynając od pozycji 2.</span><span class="sxs-lookup"><span data-stu-id="64f69-971">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="64f69-972">Ponieważ nie ma nazw dinozaurów w tym zakresie kończących się ciągiem „saurus”, zwraca wartość –1.</span><span class="sxs-lookup"><span data-stu-id="64f69-972">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-973">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-973">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-974">- lub - <paramref name="match" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-974">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-975">
            <paramref name="startIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-975">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, int32 startIndex, int32 count, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindIndex : 'T[] * int * int * Predicate&lt;'T&gt; -&gt; int" Usage="System.Array.FindIndex (array, startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-976">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-976">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-977">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-977">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="64f69-978">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-978">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="64f69-979">Liczba elementów w sekcji do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-979">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="64f69-980">
            <see cref="T:System.Predicate`1" /> Definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-980">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-981">Wyszukuje element, który pasuje do warunków zdefiniowanych przez określony predykat i zwraca liczony od zera indeks pierwszego wystąpienia w zakresie elementów w <see cref="T:System.Array" /> rozpoczyna się od określonego indeksu i zawiera określonej liczby elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-981">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-982">Liczony od zera indeks pierwszego wystąpienia elementu, który pasuje do warunków zdefiniowanych przez <paramref name="match" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-982">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-983"><xref:System.Array> Przeszukiwany jest do przodu zaczynając od `startIndex` i kończący się na `startIndex` plus `count` pomniejszonej o 1, jeśli `count` jest większa niż 0.</span><span class="sxs-lookup"><span data-stu-id="64f69-983">The <xref:System.Array> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="64f69-984"><xref:System.Predicate%601> Jest delegowany do metody, która zwraca `true` obiekt przekazywany do jest zgodne z warunkami określonymi w delegacie.</span><span class="sxs-lookup"><span data-stu-id="64f69-984">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="64f69-985">Elementy `array` indywidualnie są przekazywane do <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="64f69-985">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="64f69-986">Ta metoda jest O (`n`) operację, której `n` jest `count`.</span><span class="sxs-lookup"><span data-stu-id="64f69-986">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-987">Poniższy przykład kodu pokazuje wszystkich trzech przeciążeń <xref:System.Array.FindIndex%2A> metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-987">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="64f69-988">Tworzona jest tablica ciągów zawierająca 8 nazw dinozaurów, przy czym dwie z nich (w pozycjach 1 i 5) kończą się na „saurus”.</span><span class="sxs-lookup"><span data-stu-id="64f69-988">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="64f69-989">Przykładowy kod definiuje również metody predykatu wyszukiwania o nazwie `EndsWithSaurus`, który akceptuje parametr typu string i zwraca wartość typu Boolean wartość wskazującą, czy ciąg wejściowy kończy się na "saurus".</span><span class="sxs-lookup"><span data-stu-id="64f69-989">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="64f69-990"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> Przeciążenie metody są przesyłane za pośrednictwem tablicy od początku, przekazywanie kolejno do każdego elementu `EndsWithSaurus` metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-990">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="64f69-991">Zatrzymuje wyszukiwania, kiedy `EndsWithSaurus` metoda zwraca `true` dla elementu na pozycji 1.</span><span class="sxs-lookup"><span data-stu-id="64f69-991">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-992">W języku C# i Visual Basic, nie jest konieczne tworzenie `Predicate<string>` delegować (`Predicate(Of String)` w języku Visual Basic) jawnie.</span><span class="sxs-lookup"><span data-stu-id="64f69-992">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="64f69-993">Te języki wnioskują o poprawnym delegacie z kontekstu, a następnie są tworzone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="64f69-993">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="64f69-994"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> Przeciążenie metody używane do przeszukiwania tablicy, zaczynając od pozycji 2 i przejściem do końca tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-994">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="64f69-995">Wyszukiwany element na pozycji 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-995">It finds the element at position 5.</span></span> <span data-ttu-id="64f69-996">Na koniec <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> przeciążenie metody używane do przeszukiwania zakres trzy elementy, zaczynając od pozycji 2.</span><span class="sxs-lookup"><span data-stu-id="64f69-996">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="64f69-997">Ponieważ nie ma nazw dinozaurów w tym zakresie kończących się ciągiem „saurus”, zwraca wartość –1.</span><span class="sxs-lookup"><span data-stu-id="64f69-997">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-998">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-998">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-999">- lub - <paramref name="match" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-999">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1000">
            <paramref name="startIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1000">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-1001">- lub - <paramref name="count" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1001">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-1002">- lub - <paramref name="startIndex" /> i <paramref name="count" /> nie zostanie określony prawidłowy części <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1002">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLast&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FindLast&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FindLast&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLast(Of T) (array As T(), match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T FindLast(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindLast : 'T[] * Predicate&lt;'T&gt; -&gt; 'T" Usage="System.Array.FindLast (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1003">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1003">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1004">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1004">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="64f69-1005">
            <see cref="T:System.Predicate`1" /> Definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1005">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1006">Wyszukuje element, który pasuje do warunków zdefiniowanych przez określony predykat i zwraca ostatnie wystąpienie w ramach całego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1006">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1007">Ostatni element, który pasuje do warunków zdefiniowanych przez określony predykat, gdy znaleziono; w przeciwnym razie wartość domyślna dla typu <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1007">The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1008"><xref:System.Predicate%601> Jest delegowany do metody, która zwraca `true` obiekt przekazywany do jest zgodne z warunkami określonymi w delegacie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1008">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="64f69-1009">Elementy `array` indywidualnie są przekazywane do <xref:System.Predicate%601>, przenoszenie z poprzednimi wersjami w <xref:System.Array>, zaczynając od ostatniego elementu i kończąc pierwszego elementu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1009">The elements of `array` are individually passed to the <xref:System.Predicate%601>, moving backward in the <xref:System.Array>, starting with the last element and ending with the first element.</span></span>  <span data-ttu-id="64f69-1010">Przetwarzanie zostało zatrzymane po znalezieniu dopasowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1010">Processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="64f69-1011">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1011">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1012">Poniższy przykład kodu pokazuje <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, i <xref:System.Array.FindAll%2A> metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-1012">The following code example demonstrates the <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, and <xref:System.Array.FindAll%2A> generic methods.</span></span> <span data-ttu-id="64f69-1013">Tworzona jest tablica ciągów zawierająca 8 nazw dinozaurów, przy czym dwie z nich (w pozycjach 1 i 5) kończą się na „saurus”.</span><span class="sxs-lookup"><span data-stu-id="64f69-1013">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="64f69-1014">Przykładowy kod definiuje również metody predykatu wyszukiwania o nazwie `EndsWithSaurus`, który akceptuje parametr typu string i zwraca wartość typu Boolean wartość wskazującą, czy ciąg wejściowy kończy się na "saurus".</span><span class="sxs-lookup"><span data-stu-id="64f69-1014">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="64f69-1015"><xref:System.Array.Find%2A> Metoda rodzajowa jest przesyłany tablicy od początku, przekazywanie kolejno do każdego elementu `EndsWithSaurus` metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1015">The <xref:System.Array.Find%2A> generic method traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="64f69-1016">Zatrzymuje wyszukiwania, kiedy `EndsWithSaurus` metoda zwraca `true` dla elementu "Amargasaurus".</span><span class="sxs-lookup"><span data-stu-id="64f69-1016">The search stops when the `EndsWithSaurus` method returns `true` for the element "Amargasaurus".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1017">W języku C# i Visual Basic, nie jest konieczne tworzenie`Predicate<string>` delegować (`Predicate(Of String)` w języku Visual Basic) jawnie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1017">In C# and Visual Basic, it is not necessary to create the`Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="64f69-1018">Te języki wnioskują o poprawnym delegacie z kontekstu, a następnie są tworzone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1018">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="64f69-1019"><xref:System.Array.FindLast%2A> Metoda ogólna służy do wyszukiwania do tyłu na końcu tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1019">The <xref:System.Array.FindLast%2A> generic method is used to search the array backward from the end.</span></span> <span data-ttu-id="64f69-1020">Znajduje element „Dilophosaurus” w pozycji 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-1020">It finds the element "Dilophosaurus" at position 5.</span></span> <span data-ttu-id="64f69-1021"><xref:System.Array.FindAll%2A> Metoda ogólna służy do zwracania tablica zawierająca wszystkie elementy, które kończą się "saurus".</span><span class="sxs-lookup"><span data-stu-id="64f69-1021">The <xref:System.Array.FindAll%2A> generic method is used to return an array containing all the elements that end in "saurus".</span></span> <span data-ttu-id="64f69-1022">Elementy są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1022">The elements are displayed.</span></span>  
  
 <span data-ttu-id="64f69-1023">Przykład kodu pokazuje, również <xref:System.Array.Exists%2A> i <xref:System.Array.TrueForAll%2A> metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-1023">The code example also demonstrates the <xref:System.Array.Exists%2A> and <xref:System.Array.TrueForAll%2A> generic methods.</span></span>  
  
 [!code-cpp[Array_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[Array_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindEtAl/cs/source.cs#1)]
 [!code-vb[Array_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1024">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1024">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-1025">- lub - <paramref name="match" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1025">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindLastIndex&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1026">Wyszukuje element, który pasuje do warunków zdefiniowanych przez określony predykat i zwraca liczony od zera indeks w ciągu ostatniego wystąpienia <see cref="T:System.Array" /> lub jego część.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1026">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within an <see cref="T:System.Array" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindLastIndex : 'T[] * Predicate&lt;'T&gt; -&gt; int" Usage="System.Array.FindLastIndex (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1027">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1027">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1028">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1028">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="64f69-1029">
            <see cref="T:System.Predicate`1" /> Definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1029">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1030">Wyszukuje element, który pasuje do warunków zdefiniowanych przez określony predykat i zwraca liczony od zera indeks ostatniego wystąpienia w obrębie całej <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1030">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1031">Liczony od zera indeks ostatniego wystąpienia elementu, który pasuje do warunków zdefiniowanych przez <paramref name="match" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1031">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1032"><xref:System.Array> Przeszukiwany jest wstecz od ostatniego elementu i kończącego się na pierwszym elementem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1032">The <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="64f69-1033"><xref:System.Predicate%601> Jest delegowany do metody, która zwraca `true` obiekt przekazywany do jest zgodne z warunkami określonymi w delegacie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1033">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="64f69-1034">Elementy `array` indywidualnie są przekazywane do <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1034">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="64f69-1035">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1035">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1036">Poniższy przykład kodu pokazuje wszystkich trzech przeciążeń <xref:System.Array.FindLastIndex%2A> metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1036">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="64f69-1037">Tworzona jest tablica ciągów zawierająca 8 nazw dinozaurów, przy czym dwie z nich (w pozycjach 1 i 5) kończą się na „saurus”.</span><span class="sxs-lookup"><span data-stu-id="64f69-1037">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="64f69-1038">Przykładowy kod definiuje również metody predykatu wyszukiwania o nazwie `EndsWithSaurus`, który akceptuje parametr typu string i zwraca wartość typu Boolean wartość wskazującą, czy ciąg wejściowy kończy się na "saurus".</span><span class="sxs-lookup"><span data-stu-id="64f69-1038">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="64f69-1039"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> Przeciążenie metody jest przesyłany z poprzednimi wersjami tablicy po zakończeniu przekazywania kolejno do każdego elementu `EndsWithSaurus` metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1039">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="64f69-1040">Zatrzymuje wyszukiwania, kiedy `EndsWithSaurus` metoda zwraca `true` dla elementu na pozycji 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-1040">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1041">W języku C# i Visual Basic, nie jest konieczne tworzenie `Predicate<string>` delegować (`Predicate(Of String)` w języku Visual Basic) jawnie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1041">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="64f69-1042">Te języki wnioskują o poprawnym delegacie z kontekstu, a następnie są tworzone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1042">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="64f69-1043"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> Przeciążenie metody używane do przeszukiwania tablicy, zaczynając od pozycji 4 i kontynuowanie wstecz na początku tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1043">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="64f69-1044">Wyszukiwany element na pozycji 1.</span><span class="sxs-lookup"><span data-stu-id="64f69-1044">It finds the element at position 1.</span></span> <span data-ttu-id="64f69-1045">Na koniec <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> przeciążenie metody używane do przeszukiwania zakres trzy elementy zaczynając od pozycji 4 i Praca Wstecz (to znaczy elementy 4, 3 i 2).</span><span class="sxs-lookup"><span data-stu-id="64f69-1045">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="64f69-1046">Ponieważ nie ma nazw dinozaurów w tym zakresie kończących się ciągiem „saurus”, zwraca wartość –1.</span><span class="sxs-lookup"><span data-stu-id="64f69-1046">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1047">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1047">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-1048">- lub - <paramref name="match" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1048">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, int32 startIndex, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindLastIndex : 'T[] * int * Predicate&lt;'T&gt; -&gt; int" Usage="System.Array.FindLastIndex (array, startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1049">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1049">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1050">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1050">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="64f69-1051">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1051">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="64f69-1052">
            <see cref="T:System.Predicate`1" /> Definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1052">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1053">Wyszukuje element, który pasuje do warunków zdefiniowanych przez określony predykat i zwraca liczony od zera indeks ostatniego wystąpienia w zakresie elementów w <see cref="T:System.Array" /> który rozciąga się od pierwszego elementu zgodnie z określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1053">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1054">Liczony od zera indeks ostatniego wystąpienia elementu, który pasuje do warunków zdefiniowanych przez <paramref name="match" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1054">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1055"><xref:System.Array> Jest przeszukane z poprzednimi wersjami zaczynając od `startIndex` i kończącego się na pierwszym elementem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1055">The <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="64f69-1056"><xref:System.Predicate%601> Jest delegowany do metody, która zwraca `true` obiekt przekazywany do jest zgodne z warunkami określonymi w delegacie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1056">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="64f69-1057">Elementy `array` indywidualnie są przekazywane do <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1057">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="64f69-1058">Ta metoda jest O (`n`) operację, której `n` jest liczba elementów od początku `array` do `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1058">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1059">Poniższy przykład kodu pokazuje wszystkich trzech przeciążeń <xref:System.Array.FindLastIndex%2A> metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1059">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="64f69-1060">Tworzona jest tablica ciągów zawierająca 8 nazw dinozaurów, przy czym dwie z nich (w pozycjach 1 i 5) kończą się na „saurus”.</span><span class="sxs-lookup"><span data-stu-id="64f69-1060">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="64f69-1061">Przykładowy kod definiuje również metody predykatu wyszukiwania o nazwie `EndsWithSaurus`, który akceptuje parametr typu string i zwraca wartość typu Boolean wartość wskazującą, czy ciąg wejściowy kończy się na "saurus".</span><span class="sxs-lookup"><span data-stu-id="64f69-1061">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="64f69-1062"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> Przeciążenie metody jest przesyłany z poprzednimi wersjami tablicy po zakończeniu przekazywania kolejno do każdego elementu `EndsWithSaurus` metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1062">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="64f69-1063">Zatrzymuje wyszukiwania, kiedy `EndsWithSaurus` metoda zwraca `true` dla elementu na pozycji 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-1063">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1064">W języku C# i Visual Basic, nie jest konieczne tworzenie `Predicate<string>` delegować (`Predicate(Of String)` w języku Visual Basic) jawnie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1064">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="64f69-1065">Te języki wnioskują o poprawnym delegacie z kontekstu, a następnie są tworzone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1065">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="64f69-1066"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> Przeciążenie metody używane do przeszukiwania tablicy, zaczynając od pozycji 4 i kontynuowanie wstecz na początku tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1066">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="64f69-1067">Wyszukiwany element na pozycji 1.</span><span class="sxs-lookup"><span data-stu-id="64f69-1067">It finds the element at position 1.</span></span> <span data-ttu-id="64f69-1068">Na koniec <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> przeciążenie metody używane do przeszukiwania zakres trzy elementy zaczynając od pozycji 4 i Praca Wstecz (to znaczy elementy 4, 3 i 2).</span><span class="sxs-lookup"><span data-stu-id="64f69-1068">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="64f69-1069">Ponieważ nie ma nazw dinozaurów w tym zakresie kończących się ciągiem „saurus”, zwraca wartość –1.</span><span class="sxs-lookup"><span data-stu-id="64f69-1069">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1070">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1070">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-1071">- lub - <paramref name="match" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1071">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1072">
            <paramref name="startIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1072">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, int32 startIndex, int32 count, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindLastIndex : 'T[] * int * int * Predicate&lt;'T&gt; -&gt; int" Usage="System.Array.FindLastIndex (array, startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1073">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1073">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1074">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1074">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="64f69-1075">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1075">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="64f69-1076">Liczba elementów w sekcji do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1076">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="64f69-1077">
            <see cref="T:System.Predicate`1" /> Definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1077">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1078">Wyszukuje element, który pasuje do warunków zdefiniowanych przez określony predykat i zwraca liczony od zera indeks ostatniego wystąpienia w zakresie elementów w <see cref="T:System.Array" /> czy zawiera określoną liczbę elementów i kończy się na określony indeks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1078">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1079">Liczony od zera indeks ostatniego wystąpienia elementu, który pasuje do warunków zdefiniowanych przez <paramref name="match" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1079">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1080"><xref:System.Array> Jest przeszukane z poprzednimi wersjami zaczynając od `startIndex` i kończący się na `startIndex` minus `count` plus 1, jeśli `count` jest większa niż 0.</span><span class="sxs-lookup"><span data-stu-id="64f69-1080">The <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="64f69-1081"><xref:System.Predicate%601> Jest delegowany do metody, która zwraca `true` obiekt przekazywany do jest zgodne z warunkami określonymi w delegacie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1081">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="64f69-1082">Elementy `array` indywidualnie są przekazywane do <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1082">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="64f69-1083">Ta metoda jest O (`n`) operację, której `n` jest `count`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1083">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1084">Poniższy przykład kodu pokazuje wszystkich trzech przeciążeń <xref:System.Array.FindLastIndex%2A> metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1084">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="64f69-1085">Tworzona jest tablica ciągów zawierająca 8 nazw dinozaurów, przy czym dwie z nich (w pozycjach 1 i 5) kończą się na „saurus”.</span><span class="sxs-lookup"><span data-stu-id="64f69-1085">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="64f69-1086">Przykładowy kod definiuje również metody predykatu wyszukiwania o nazwie `EndsWithSaurus`, który akceptuje parametr typu string i zwraca wartość typu Boolean wartość wskazującą, czy ciąg wejściowy kończy się na "saurus".</span><span class="sxs-lookup"><span data-stu-id="64f69-1086">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="64f69-1087"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> Przeciążenie metody jest przesyłany z poprzednimi wersjami tablicy po zakończeniu przekazywania kolejno do każdego elementu `EndsWithSaurus` metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1087">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="64f69-1088">Zatrzymuje wyszukiwania, kiedy `EndsWithSaurus` metoda zwraca `true` dla elementu na pozycji 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-1088">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1089">W języku C# i Visual Basic, nie jest konieczne tworzenie `Predicate<string>` delegować (`Predicate(Of String)` w języku Visual Basic) jawnie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1089">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="64f69-1090">Te języki wnioskują o poprawnym delegacie z kontekstu, a następnie są tworzone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1090">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="64f69-1091"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> Przeciążenie metody używane do przeszukiwania tablicy, zaczynając od pozycji 4 i kontynuowanie wstecz na początku tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1091">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="64f69-1092">Wyszukiwany element na pozycji 1.</span><span class="sxs-lookup"><span data-stu-id="64f69-1092">It finds the element at position 1.</span></span> <span data-ttu-id="64f69-1093">Na koniec <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> przeciążenie metody używane do przeszukiwania zakres trzy elementy zaczynając od pozycji 4 i Praca Wstecz (to znaczy elementy 4, 3 i 2).</span><span class="sxs-lookup"><span data-stu-id="64f69-1093">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="64f69-1094">Ponieważ nie ma nazw dinozaurów w tym zakresie kończących się ciągiem „saurus”, zwraca wartość –1.</span><span class="sxs-lookup"><span data-stu-id="64f69-1094">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1095">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1095">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-1096">- lub - <paramref name="match" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1096">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1097">
            <paramref name="startIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1097">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-1098">- lub - <paramref name="count" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1098">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-1099">- lub - <paramref name="startIndex" /> i <paramref name="count" /> nie zostanie określony prawidłowy części <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1099">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ForEach&lt;T&gt; (T[] array, Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForEach&lt;T&gt;(!!T[] array, class System.Action`1&lt;!!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ForEach``1(``0[],System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ForEach(Of T) (array As T(), action As Action(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void ForEach(cli::array &lt;T&gt; ^ array, Action&lt;T&gt; ^ action);" />
      <MemberSignature Language="F#" Value="static member ForEach : 'T[] * Action&lt;'T&gt; -&gt; unit" Usage="System.Array.ForEach (array, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="action" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1100">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1100">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1101">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> dla elementów, których ma być wykonywane działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1101">The one-dimensional, zero-based <see cref="T:System.Array" /> on whose elements the action is to be performed.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="64f69-1102">
            <see cref="T:System.Action`1" /> Do wykonania na każdym elemencie <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1102">The <see cref="T:System.Action`1" /> to perform on each element of <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1103">Wykonuje określoną akcję na każdym elemencie określonej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1103">Performs the specified action on each element of the specified array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1104"><xref:System.Action%601> Delegowany do metody, która wykonuje akcję na obiekcie przekazywanych do niej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1104">The <xref:System.Action%601> is a delegate to a method that performs an action on the object passed to it.</span></span>  <span data-ttu-id="64f69-1105">Elementy `array` indywidualnie są przekazywane do <xref:System.Action%601>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1105">The elements of `array` are individually passed to the <xref:System.Action%601>.</span></span>  
  
 <span data-ttu-id="64f69-1106">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1106">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1107">Poniższy przykład przedstawia użycie <xref:System.Array.ForEach%2A> do wyświetlenia kwadratów każdego elementu w tablicy liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1107">The following example shows how to use <xref:System.Array.ForEach%2A> to display the squares of each element in an integer array.</span></span>  
  
 [!code-cpp[System.Array.ForEach#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.foreach/cpp/source.cpp#1)]
 [!code-csharp[System.Array.ForEach#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.foreach/cs/source.cs#1)]
 [!code-vb[System.Array.ForEach#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.foreach/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1108">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1108">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-1109">- lub - <paramref name="action" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1109">-or-  <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Action`1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="array.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1110">Zwraca <see cref="T:System.Collections.IEnumerator" /> dla <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1110">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1111">
            <see cref="T:System.Collections.IEnumerator" /> Dla <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1111">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1112">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="64f69-1112">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="64f69-1113">`foreach` Instrukcji języka C# (`for each` w języku C++ `For Each` w języku Visual Basic) ukrywa złożoność wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="64f69-1113">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="64f69-1114">W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="64f69-1114">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="64f69-1115">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1115">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="64f69-1116">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="64f69-1116">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="64f69-1117"><xref:System.Collections.IEnumerator.Reset%2A> również wprowadzono moduł wyliczający wróć do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="64f69-1117"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="64f69-1118">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1118">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="64f69-1119">W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1119">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="64f69-1120"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1120"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="64f69-1121"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1121"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="64f69-1122">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1122">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="64f69-1123">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.IEnumerator.MoveNext%2A> zwracają również `false`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1123">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="64f69-1124">Jeśli przez ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1124">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="64f69-1125">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> aby pierwszym elementem kolekcji ponownie, należy wywołać <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1125">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="64f69-1126">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="64f69-1126">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="64f69-1127">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1127">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="64f69-1128">Moduł wyliczający nie ma wyłączny dostęp do kolekcji; w związku z tym wyliczania kolekcji leżą nie jest bezpieczne procedury wątku.</span><span class="sxs-lookup"><span data-stu-id="64f69-1128">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="64f69-1129">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1129">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="64f69-1130">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="64f69-1130">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="64f69-1131">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1131">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1132">Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Array.GetEnumerator%2A> do listy elementów tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1132">The following code example shows how to use <xref:System.Array.GetEnumerator%2A> to list the elements of an array.</span></span>  
  
 [!code-cpp[System.Array_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetEnumerator/CPP/array_getenumerator.cpp#1)]
 [!code-csharp[System.Array_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetEnumerator/CS/array_getenumerator.cs#1)]
 [!code-vb[System.Array_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetEnumerator/VB/array_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLength">
      <MemberSignature Language="C#" Value="public int GetLength (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLength(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLength (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLength(int dimension);" />
      <MemberSignature Language="F#" Value="member this.GetLength : int -&gt; int" Usage="array.GetLength dimension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <span data-ttu-id="64f69-1133">Liczony od zera wymiaru <see cref="T:System.Array" /> którego długość musi można określić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1133">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1134">Pobiera 32-bitową liczbę całkowitą reprezentującą liczbę elementów w określonym wymiarze <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1134">Gets a 32-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1135">32-bitową liczbę całkowitą reprezentującą liczbę elementów w określonym wymiarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1135">A 32-bit integer that represents the number of elements in the specified dimension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1136">Przykład <xref:System.Array.GetLength%2A> jest `GetLength(0)`, która zwraca liczbę elementów w pierwszym wymiarze <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1136">An example of <xref:System.Array.GetLength%2A> is `GetLength(0)`, which returns the number of elements in the first dimension of the <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-1137">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1137">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1138">Poniższy przykład przedstawia użycie <xref:System.Array.GetLength%2A> do wyświetlenia wymiary dwie tablice o różnym stopniu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1138">The following example shows how to use <xref:System.Array.GetLength%2A> to display the dimensions of two arrays with different ranks.</span></span>  
  
 [!code-cpp[System.Array.GetLength#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getlength/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetLength#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getlength/cs/source.cs#1)]
 [!code-vb[System.Array.GetLength#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getlength/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-1139">
            <paramref name="dimension" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1139">
              <paramref name="dimension" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-1140">- lub - <paramref name="dimension" /> jest równa lub większa niż <see cref="P:System.Array.Rank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1140">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetLongLength">
      <MemberSignature Language="C#" Value="public long GetLongLength (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetLongLength(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLongLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLongLength (dimension As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetLongLength(int dimension);" />
      <MemberSignature Language="F#" Value="member this.GetLongLength : int -&gt; int64" Usage="array.GetLongLength dimension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <span data-ttu-id="64f69-1141">Liczony od zera wymiaru <see cref="T:System.Array" /> którego długość musi można określić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1141">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1142">Pobiera 64-bitową liczbę całkowitą reprezentującą liczbę elementów w określonym wymiarze <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1142">Gets a 64-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1143">64-bitową liczbę całkowitą reprezentującą liczbę elementów w określonym wymiarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1143">A 64-bit integer that represents the number of elements in the specified dimension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1144">Przykład <xref:System.Array.GetLongLength%2A> jest `GetLongLength(0)`, która zwraca liczbę elementów w pierwszym wymiarze <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1144">An example of <xref:System.Array.GetLongLength%2A> is `GetLongLength(0)`, which returns the number of elements in the first dimension of the <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-1145">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1145">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-1146">
            <paramref name="dimension" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1146">
              <paramref name="dimension" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-1147">- lub - <paramref name="dimension" /> jest równa lub większa niż <see cref="P:System.Array.Rank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1147">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetLowerBound">
      <MemberSignature Language="C#" Value="public int GetLowerBound (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLowerBound(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLowerBound(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLowerBound (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLowerBound(int dimension);" />
      <MemberSignature Language="F#" Value="member this.GetLowerBound : int -&gt; int" Usage="array.GetLowerBound dimension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <span data-ttu-id="64f69-1148">Liczony od zera wymiar tablicy, którego indeks początkowy trzeba określić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1148">A zero-based dimension of the array whose starting index needs to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1149">Pobiera indeks pierwszego elementu określonego wymiaru tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1149">Gets the index of the first element of the specified dimension in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1150">Indeks pierwszego elementu obiektu określonego wymiaru tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1150">The index of the first element of the specified dimension in the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1151">`GetLowerBound(0)` Zwraca indeks początkowy pierwszego wymiaru tablicy, i `GetLowerBound(Rank - 1)` zwraca indeks początkowy ostatniego wymiaru tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1151">`GetLowerBound(0)` returns the starting index of the first dimension of the array, and `GetLowerBound(Rank - 1)` returns the starting index of the last dimension of the array.</span></span>  
  
 <span data-ttu-id="64f69-1152"><xref:System.Array.GetLowerBound%2A> Metoda zawsze zwraca wartość wskazującą, indeks dolna granica tablicy, nawet jeśli tablica jest pusta.</span><span class="sxs-lookup"><span data-stu-id="64f69-1152">The <xref:System.Array.GetLowerBound%2A> method always returns a value that indicates the index of the lower bound of the array, even if the array is empty.</span></span>  
  
 <span data-ttu-id="64f69-1153">Należy zauważyć, że chociaż większość tablic w programie .NET Framework jest liczony od zera (to znaczy <xref:System.Array.GetLowerBound%2A> metoda zwraca zero dla każdego wymiaru tablicy), programu .NET Framework obsługuje tablic, które nie są liczony od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-1153">Note that, although most arrays in the .NET Framework are zero-based (that is, the <xref:System.Array.GetLowerBound%2A> method returns zero for each dimension of an array), the .NET Framework does support arrays that are not zero-based.</span></span> <span data-ttu-id="64f69-1154">Takie tablice można tworzyć za pomocą <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29> metody, a także mogą być zwracane z kodem niezarządzanym.</span><span class="sxs-lookup"><span data-stu-id="64f69-1154">Such arrays can be created with the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29> method, and can also be returned from unmanaged code.</span></span>  
  
 <span data-ttu-id="64f69-1155">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1155">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1156">W poniższym przykładzie użyto <xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metody do wyświetlania granice tablicy jednowymiarowej tablicy i dwuwymiarowa i wyświetlanie ich elementów tablicy wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-1156">The following example uses the <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods to display the bounds of a one-dimensional and two-dimensional array and to display the values of their array elements.</span></span>  
  
 [!code-cpp[System.Array.GetUpperBound#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getupperbound/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetUpperBound#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getupperbound/cs/source.cs#1)]
 [!code-vb[System.Array.GetUpperBound#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getupperbound/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-1157">
            <paramref name="dimension" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1157">
              <paramref name="dimension" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-1158">- lub - <paramref name="dimension" /> jest równa lub większa niż <see cref="P:System.Array.Rank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1158">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetUpperBound">
      <MemberSignature Language="C#" Value="public int GetUpperBound (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetUpperBound(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetUpperBound(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpperBound (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetUpperBound(int dimension);" />
      <MemberSignature Language="F#" Value="member this.GetUpperBound : int -&gt; int" Usage="array.GetUpperBound dimension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <span data-ttu-id="64f69-1159">Liczony od zera wymiar tablicy, w których górna granica trzeba określić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1159">A zero-based dimension of the array whose upper bound needs to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1160">Pobiera indeks ostatnim elementem określonego wymiaru tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1160">Gets the index of the last element of the specified dimension in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1161">Indeks ostatniego elementu określonego wymiaru tablicy lub -1, jeśli określony wymiar jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1161">The index of the last element of the specified dimension in the array, or -1 if the specified dimension is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1162">`GetUpperBound(0)` Zwraca ostatni indeks w pierwszym wymiarze tablicy i `GetUpperBound(Rank - 1)` zwraca ostatni indeks ostatniego wymiaru tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1162">`GetUpperBound(0)` returns the last index in the first dimension of the array, and `GetUpperBound(Rank - 1)` returns the last index of the last dimension of the array.</span></span>  
  
 <span data-ttu-id="64f69-1163">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1163">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1164">W poniższym przykładzie użyto <xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metody do wyświetlania granice tablicy jednowymiarowej tablicy i dwuwymiarowa i wyświetlanie ich elementów tablicy wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-1164">The following example uses the <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods to display the bounds of a one-dimensional and two-dimensional array and to display the values of their array elements.</span></span>  
  
 [!code-cpp[System.Array.GetUpperBound#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getupperbound/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetUpperBound#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getupperbound/cs/source.cs#1)]
 [!code-vb[System.Array.GetUpperBound#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getupperbound/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-1165">
            <paramref name="dimension" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1165">
              <paramref name="dimension" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-1166">- lub - <paramref name="dimension" /> jest równa lub większa niż <see cref="P:System.Array.Rank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1166">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1167">Pobiera wartość określonego elementu w bieżącym <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1167">Gets the value of the specified element in the current <see cref="T:System.Array" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int -&gt; obj" Usage="array.GetValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="64f69-1168">32-bitową liczbę całkowitą, która reprezentuje pozycję <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1168">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1169">Pobiera wartość w określonej pozycji w jednowymiarowej tablicy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1169">Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1170">Indeks jest określony jako 32-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1170">The index is specified as a 32-bit integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1171">Wartość w określonej pozycji w jednowymiarowej tablicy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1171">The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1172"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można określić, czy wartość `index` jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1172">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1173">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1173">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1174">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1174">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1175">Bieżące <see cref="T:System.Array" /> nie ma dokładnie jednego wymiaru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1175">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-1176">
            <paramref name="index" /> znajduje się poza zakresem indeksów prawidłowy dla bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1176">
              <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (params int[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (ParamArray indices As Integer()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(... cli::array &lt;int&gt; ^ indices);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int[] -&gt; obj" Usage="array.GetValue indices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indices" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indices">
          <span data-ttu-id="64f69-1177">Jednowymiarowa tablica 32-bitowych liczb całkowitych reprezentujących indeksów określający pozycję <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1177">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1178">Pobiera wartość w określonej pozycji w wielowymiarowe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1178">Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1179">Indeksy są określone jako tablicę 32-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1179">The indexes are specified as an array of 32-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1180">Wartość w określonej pozycji w wielowymiarowe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1180">The value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1181">Liczba elementów w `indices` musi być równa liczbie wymiarów w <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1181">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="64f69-1182">Wszystkie elementy w `indices` tablicy wspólnie określić położenie żądanego elementu w wielowymiarowe <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1182">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-1183"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można ustalić, czy dowolny z indeksów jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1183">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1184">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1184">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1185">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1185">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1186">
            <paramref name="indices" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1186">
              <paramref name="indices" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1187">Liczba wymiarów w bieżącym <see cref="T:System.Array" /> nie jest równa liczbie elementów w <paramref name="indices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1187">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-1188">Dowolny element w <paramref name="indices" /> znajduje się poza zakresem indeksów prawidłowy dla odpowiedniego wymiaru bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1188">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int64 -&gt; obj" Usage="array.GetValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="64f69-1189">64-bitową liczbę całkowitą, która reprezentuje pozycję <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1189">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1190">Pobiera wartość w określonej pozycji w jednowymiarowej tablicy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1190">Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1191">Indeks jest określony jako 64-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1191">The index is specified as a 64-bit integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1192">Wartość w określonej pozycji w jednowymiarowej tablicy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1192">The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1193"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można określić, czy wartość `index` jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1193">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1194">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1194">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1195">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1195">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1196">Bieżące <see cref="T:System.Array" /> nie ma dokładnie jednego wymiaru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1196">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1197">
            <paramref name="index" /> znajduje się poza zakresem indeksów prawidłowy dla bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1197">
              <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (params long[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (ParamArray indices As Long()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(... cli::array &lt;long&gt; ^ indices);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int64[] -&gt; obj" Usage="array.GetValue indices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indices" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indices">
          <span data-ttu-id="64f69-1198">Jednowymiarowa tablica 64-bitowych liczb całkowitych reprezentujących indeksów określający pozycję <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1198">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1199">Pobiera wartość w określonej pozycji w wielowymiarowe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1199">Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1200">Indeksy są określone jako tablicę 64-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1200">The indexes are specified as an array of 64-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1201">Wartość w określonej pozycji w wielowymiarowe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1201">The value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1202">Liczba elementów w `indices` musi być równa liczbie wymiarów w <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1202">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="64f69-1203">Wszystkie elementy w `indices` tablicy wspólnie określić położenie żądanego elementu w wielowymiarowe <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1203">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-1204"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można ustalić, czy dowolny z indeksów jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1204">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1205">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1205">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1206">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1206">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1207">
            <paramref name="indices" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1207">
              <paramref name="indices" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1208">Liczba wymiarów w bieżącym <see cref="T:System.Array" /> nie jest równa liczbie elementów w <paramref name="indices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1208">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1209">Dowolny element w <paramref name="indices" /> znajduje się poza zakresem indeksów prawidłowy dla odpowiedniego wymiaru bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1209">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index1, int index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index1, int32 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Integer, index2 As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index1, int index2);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int * int -&gt; obj" Usage="array.GetValue (index1, index2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index1">
          <span data-ttu-id="64f69-1210">32-bitową liczbę całkowitą, który reprezentuje indeks pierwszego wymiaru <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1210">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="64f69-1211">32-bitową liczbę całkowitą, reprezentującą sekundę wymiaru indeks <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1211">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1212">Pobiera wartość w określonej pozycji w dwuwymiarowa <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1212">Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1213">Indeksy są określane jako 32-bitowe liczby całkowite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1213">The indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1214">Wartość w określonej pozycji w dwuwymiarowa <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1214">The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1215"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można ustalić, czy dowolny z indeksów jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1215">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1216">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1216">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1217">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1217">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1218">Bieżące <see cref="T:System.Array" /> nie ma dokładnie dwóch wymiarów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1218">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-1219">Albo <paramref name="index1" /> lub <paramref name="index2" /> znajduje się poza zakresem indeksów prawidłowy dla odpowiedniego wymiaru bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1219">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index1, long index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index1, int64 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Long, index2 As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index1, long index2);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int64 * int64 -&gt; obj" Usage="array.GetValue (index1, index2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index1">
          <span data-ttu-id="64f69-1220">64-bitową liczbę całkowitą, który reprezentuje indeks pierwszego wymiaru <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1220">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="64f69-1221">64-bitową liczbę całkowitą reprezentującą sekundę wymiaru indeks <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1221">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1222">Pobiera wartość w określonej pozycji w dwuwymiarowa <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1222">Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1223">Indeksy są określone jako 64-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1223">The indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1224">Wartość w określonej pozycji w dwuwymiarowa <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1224">The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1225"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można ustalić, czy dowolny z indeksów jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1225">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1226">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1226">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1227">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1227">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1228">Bieżące <see cref="T:System.Array" /> nie ma dokładnie dwóch wymiarów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1228">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1229">Albo <paramref name="index1" /> lub <paramref name="index2" /> znajduje się poza zakresem indeksów prawidłowy dla odpowiedniego wymiaru bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1229">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index1, int index2, int index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index1, int32 index2, int32 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Integer, index2 As Integer, index3 As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index1, int index2, int index3);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int * int * int -&gt; obj" Usage="array.GetValue (index1, index2, index3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
        <Parameter Name="index3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index1">
          <span data-ttu-id="64f69-1230">32-bitową liczbę całkowitą, który reprezentuje indeks pierwszego wymiaru <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1230">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="64f69-1231">32-bitową liczbę całkowitą, reprezentującą sekundę wymiaru indeks <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1231">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index3">
          <span data-ttu-id="64f69-1232">32-bitową liczbę całkowitą, reprezentujący indeks trzeci wymiar <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1232">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1233">Pobiera wartość w określonej pozycji w trójwymiarowy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1233">Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1234">Indeksy są określane jako 32-bitowe liczby całkowite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1234">The indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1235">Wartość w określonej pozycji w trójwymiarowy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1235">The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1236"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można ustalić, czy dowolny z indeksów jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1236">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1237">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1237">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1238">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1238">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1239">Bieżące <see cref="T:System.Array" /> nie ma dokładnie trzy wymiarów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1239">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-1240">
            <paramref name="index1" /> lub <paramref name="index2" /> lub <paramref name="index3" /> znajduje się poza zakresem indeksów prawidłowy dla odpowiedniego wymiaru bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1240">
              <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index1, long index2, long index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index1, int64 index2, int64 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Long, index2 As Long, index3 As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index1, long index2, long index3);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int64 * int64 * int64 -&gt; obj" Usage="array.GetValue (index1, index2, index3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
        <Parameter Name="index3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index1">
          <span data-ttu-id="64f69-1241">64-bitową liczbę całkowitą, który reprezentuje indeks pierwszego wymiaru <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1241">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="64f69-1242">64-bitową liczbę całkowitą reprezentującą sekundę wymiaru indeks <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1242">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index3">
          <span data-ttu-id="64f69-1243">64-bitową liczbę całkowitą, reprezentujący indeks trzeci wymiar <see cref="T:System.Array" /> elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1243">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1244">Pobiera wartość w określonej pozycji w trójwymiarowy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1244">Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1245">Indeksy są określone jako 64-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1245">The indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1246">Wartość w określonej pozycji w trójwymiarowy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1246">The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1247"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można ustalić, czy dowolny z indeksów jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1247">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1248">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1248">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1249">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1249">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1250">Bieżące <see cref="T:System.Array" /> nie ma dokładnie trzy wymiarów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1250">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1251">
            <paramref name="index1" /> lub <paramref name="index2" /> lub <paramref name="index3" /> znajduje się poza zakresem indeksów prawidłowy dla odpowiedniego wymiaru bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1251">
              <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1252">Wyszukuje określony obiekt i zwraca indeks jego pierwszego wystąpienia w tablicy jednowymiarowej tablicy lub zakresu elementów w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1252">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array or in a range of elements in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IndexOf : Array * obj -&gt; int" Usage="System.Array.IndexOf (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-1253">Jednowymiarowa tablica, która do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1253">The one-dimensional array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-1254">Obiekt do zlokalizowania w <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1254">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1255">Wyszukuje określony obiekt i zwraca indeks jego pierwszego wystąpienia w tablicą jednowymiarową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1255">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1256">Indeks pierwszego wystąpienia <paramref name="value" /> w <paramref name="array" />, jeśli je znaleziono; w przeciwnym razie wartość dolna granica tablicy pomniejszonej o 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1256">The index of the first occurrence of <paramref name="value" /> in <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1257">Ta metoda przeszukuje wszystkie elementy jednowymiarowa arrayfor `value`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1257">This method searches all the elements of a one-dimensional arrayfor `value`.</span></span> <span data-ttu-id="64f69-1258">Aby określić, czy `value` istnieje w `array`, metoda przeprowadza porównanie równości, wywołując każdy element `Equals` metody do momentu znalezienia dopasowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1258">To determine whether `value` exists in `array`, the method performs an equality comparison by calling each element's `Equals` method until it finds a match.</span></span> <span data-ttu-id="64f69-1259">Oznacza to, że jeśli zastępuje element <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> wywoływana jest metoda, tego zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="64f69-1259">This means that if the element overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="64f69-1260">Ponieważ większość tablice dolna granica zero, tej metody zwykle zwraca -1, jeśli`value` nie zostanie odnaleziony.</span><span class="sxs-lookup"><span data-stu-id="64f69-1260">Because most arrays have a lower bound of zero, this method generally returns –1 if`value` isn’t found.</span></span> <span data-ttu-id="64f69-1261">W rzadkich przypadkach, że dolna granica tablicy wynosi <xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) i `value` nie zostanie odnaleziony, ta metoda zwraca <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span><span class="sxs-lookup"><span data-stu-id="64f69-1261">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="64f69-1262">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1262">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1263">Przykład wywołuje następujących trzech przeciążeń <xref:System.Array.IndexOf%2A> metody do znalezienia w tablicy ciągów indeksu ciągu:</span><span class="sxs-lookup"><span data-stu-id="64f69-1263">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="64f69-1264"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, aby określić pierwsze wystąpienie ciągu "" w tablicy ciągów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1264"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="64f69-1265"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, aby określić pierwsze wystąpienie ciągu "" w czwartym do ostatnich elementów tablicy ciągów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1265"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="64f69-1266"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, aby określić pierwsze wystąpienie ciągu "" w ciągu tablicy z elementu, który następuje ostatniego pomyślnego dopasowania do końca tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1266"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1267">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1267">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1268">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1268">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member IndexOf : Array * obj * int -&gt; int" Usage="System.Array.IndexOf (array, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-1269">Jednowymiarowa tablica, która do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1269">The one-dimensional array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-1270">Obiekt do zlokalizowania w <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1270">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="64f69-1271">Indeks początkowy wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1271">The starting index of the search.</span>
          </span>
          <span data-ttu-id="64f69-1272">0 (zero) jest prawidłową wartością w pustej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1272">0 (zero) is valid in an empty array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1273">Wyszukuje określony obiekt w zakresie elementów tablicy jednowymiarowej i zwraca indeks jego pierwszego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1273">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</span>
          </span>
          <span data-ttu-id="64f69-1274">Z zakresu od określonego indeksu do końca tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1274">The range extends from a specified index to the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1275">Indeks pierwszego wystąpienia <paramref name="value" />, jeśli został znaleziony, w ramach zakresu elementów <paramref name="array" /> rozciąga się od <paramref name="startIndex" /> do ostatniego elementu; w przeciwnym razie wartość dolnej granicy tablicy pomniejszonej o 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1275">The index of the first occurrence of <paramref name="value" />, if it’s found, within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1276">Ta metoda wyszukuje tablicą jednowymiarową z elementu o indeksie `startIndex` do ostatniego elementu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1276">This method searches a one-dimensional array from the element at index `startIndex` to the last element.</span></span> <span data-ttu-id="64f69-1277">Aby określić, czy `value` istnieje w `array`, metoda przeprowadza porównanie równości, wywołując `Equals` metody każdego elementu, aż do znalezienia dopasowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1277">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `Equals` method of every element until it finds a match.</span></span> <span data-ttu-id="64f69-1278">Oznacza to, że jeśli zastępuje element <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> wywoływana jest metoda, tego zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="64f69-1278">This means that if the element overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="64f69-1279">Ponieważ większość tablice dolna granica zero, tej metody zwykle zwraca -1, jeśli `value` nie zostanie odnaleziony.</span><span class="sxs-lookup"><span data-stu-id="64f69-1279">Because most arrays have a lower bound of zero, this method generally returns –1 if `value` isn’t found.</span></span> <span data-ttu-id="64f69-1280">W rzadkich przypadkach, że dolna granica tablicy wynosi <xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) i `value` nie zostanie odnaleziony, ta metoda zwraca <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span><span class="sxs-lookup"><span data-stu-id="64f69-1280">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="64f69-1281">Jeśli `startIndex` jest równe <xref:System.Array.Length%2A?displayProperty=nameWithType>, metoda zwraca wartość -1.</span><span class="sxs-lookup"><span data-stu-id="64f69-1281">If `startIndex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>,the method returns -1.</span></span> <span data-ttu-id="64f69-1282">Jeśli `startIndex` jest większa niż <xref:System.Array.Length%2A?displayProperty=nameWithType>, metoda wygeneruje <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1282">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="64f69-1283">Ta metoda jest O (`n`) operację, której `n` jest liczba elementów od `startIndex` na końcu `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1283">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1284">Przykład wywołuje następujących trzech przeciążeń <xref:System.Array.IndexOf%2A> metody do znalezienia w tablicy ciągów indeksu ciągu:</span><span class="sxs-lookup"><span data-stu-id="64f69-1284">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="64f69-1285"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, aby określić pierwsze wystąpienie ciągu "" w tablicy ciągów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1285"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="64f69-1286"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, aby określić pierwsze wystąpienie ciągu "" w czwartym do ostatnich elementów tablicy ciągów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1286"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="64f69-1287"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, aby określić pierwsze wystąpienie ciągu "" w ciągu tablicy z elementu, który następuje ostatniego pomyślnego dopasowania do końca tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1287"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1288">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1288">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1289">
            <paramref name="startIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1289">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1290">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1290">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member IndexOf : Array * obj * int * int -&gt; int" Usage="System.Array.IndexOf (array, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-1291">Jednowymiarowa tablica, która do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1291">The one-dimensional array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-1292">Obiekt do zlokalizowania w <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1292">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="64f69-1293">Indeks początkowy wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1293">The starting index of the search.</span>
          </span>
          <span data-ttu-id="64f69-1294">0 (zero) jest prawidłową wartością w pustej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1294">0 (zero) is valid in an empty array.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="64f69-1295">Liczba elementów do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1295">The number of elements to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1296">Wyszukuje określony obiekt w zakresie elementów tablicy jednowymiarowej i zwraca indeks ifs pierwszego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1296">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of ifs first occurrence.</span>
          </span>
          <span data-ttu-id="64f69-1297">Z zakresu od określonego indeksu dla określonej liczby elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1297">The range extends from a specified index for a specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1298">Indeks pierwszego wystąpienia <paramref name="value" />, jeśli został znaleziony w <paramref name="array" /> z indeksu <paramref name="startIndex" /> do <paramref name="startIndex" />  +  <paramref name="count" /> - 1, a w przeciwnym razie dolna granica tablicy pomniejszonej o 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1298">The index of the first occurrence of <paramref name="value" />, if it’s found in the <paramref name="array" /> from index <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> - 1; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1299">Ta metoda przeszukuje elementy jednowymiarowa arrayfrom `startIndex` do `startIndex` plus `count` pomniejszonej o 1, jeśli `count` jest większa niż 0.</span><span class="sxs-lookup"><span data-stu-id="64f69-1299">This method searches the elements of a one-dimensional arrayfrom `startIndex` to `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span> <span data-ttu-id="64f69-1300">Aby określić, czy `value` istnieje w `array`, metoda przeprowadza porównanie równości, wywołując `Equals` metody każdego elementu, aż do znalezienia dopasowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1300">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `Equals` method of every element until it finds a match.</span></span> <span data-ttu-id="64f69-1301">Oznacza to, że jeśli zastępuje element <xref:System.Object.Equals%2A?displayProperty=nameWithType> wywoływana jest metoda, tego zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="64f69-1301">This means that if the element overrides the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="64f69-1302">Tablice Becausemost ma dolna granica zero, ta metoda zwraca wartość-1 w przypadku `value` nie zostanie odnaleziony.</span><span class="sxs-lookup"><span data-stu-id="64f69-1302">Becausemost arrays have a lower bound of zero, this method generally returns –1 when `value` isn’t found.</span></span> <span data-ttu-id="64f69-1303">W rzadkich przypadkach, że dolna granica tablicy wynosi <xref:System.Int32.MinValue?displayProperty=nameWithType> (0x80000000) i `value` nie zostanie odnaleziony, ta metoda zwraca <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span><span class="sxs-lookup"><span data-stu-id="64f69-1303">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> (0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="64f69-1304">Jeśli `startindex` jest równe <xref:System.Array.Length%2A?displayProperty=nameWithType>, metoda zwraca wartość -1.</span><span class="sxs-lookup"><span data-stu-id="64f69-1304">If `startindex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method returns -1.</span></span> <span data-ttu-id="64f69-1305">Jeśli `startIndex` jest większa niż <xref:System.Array.Length%2A?displayProperty=nameWithType>, metoda wygeneruje <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1305">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="64f69-1306">Ta metoda jest O (`n`) operację, której `n` jest `count`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1306">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1307">Przykład wywołuje następujących trzech przeciążeń <xref:System.Array.IndexOf%2A> metody do znalezienia w tablicy ciągów indeksu ciągu:</span><span class="sxs-lookup"><span data-stu-id="64f69-1307">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="64f69-1308"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, aby określić pierwsze wystąpienie ciągu "" w tablicy ciągów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1308"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="64f69-1309"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, aby określić pierwsze wystąpienie ciągu "" w czwartym do ostatnich elementów tablicy ciągów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1309"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="64f69-1310"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, aby określić pierwsze wystąpienie ciągu "" w ciągu tablicy z elementu, który następuje ostatniego pomyślnego dopasowania do końca tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1310"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span> <span data-ttu-id="64f69-1311">Aby określić wartość `count` argumentu, odejmuje górna granica tablicy z indeks początkowy i dodaje jeden.</span><span class="sxs-lookup"><span data-stu-id="64f69-1311">To determine the value of the `count` argument, it subtracts the upper bound of the array from the starting index and adds one.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1312">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1312">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1313">
            <paramref name="startIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1313">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-1314">- lub - <paramref name="count" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1314">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-1315">- lub - <paramref name="startIndex" /> i <paramref name="count" /> nie zostanie określony prawidłowy części <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1315">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1316">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1316">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberSignature Language="F#" Value="static member IndexOf : 'T[] * 'T -&gt; int" Usage="System.Array.IndexOf (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1317">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1317">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1318">Tablica jednowymiarowa, liczony od zera do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1318">The one-dimensional, zero-based array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-1319">Obiekt do zlokalizowania w <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1319">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1320">Wyszukuje określony obiekt i zwraca indeks jego pierwszego wystąpienia w tablicą jednowymiarową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1320">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1321">Liczony od zera indeks pierwszego wystąpienia <paramref name="value" /> w całej <paramref name="array" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1321">The zero-based index of the first occurrence of <paramref name="value" /> in the entire <paramref name="array" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1322">Ta metoda przeszukuje wszystkie elementy tablicy jednowymiarowej dla `value`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1322">This method searches all the elements of a one-dimensional array for `value`.</span></span> <span data-ttu-id="64f69-1323">Aby określić, czy `value` istnieje w `array`, metoda przeprowadza porównanie równości, wywołując `T.Equals` metody dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1323">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="64f69-1324">Oznacza to, że jeśli `T` zastępuje <xref:System.Object.Equals%2A> wywoływana jest metoda, tego zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="64f69-1324">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="64f69-1325">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1325">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1326">W poniższym przykładzie pokazano wszystkie trzy ogólnego przeciążeń <xref:System.Array.IndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1326">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="64f69-1327">Tablica ciągów jest tworzona, gdy jeden wpis, to pojawia się dwukrotnie, z lokalizacją indeksu 0 i lokalizacją indeksu 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-1327">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="64f69-1328"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> Przeciążenie metody wyszukuje tablicy od początku i znajduje pierwsze wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1328">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="64f69-1329"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> Przeciążenie metody używane do przeszukiwania tablicy, począwszy od lokalizacji indeksu 3 i dalej koniec tablicy i wyszukuje drugie wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1329">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="64f69-1330">Na koniec <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> przeciążenie metody używane do przeszukiwania zakres dwóch wpisów, rozpoczynając od lokalizacji indeksu dwa; zwraca -1, ponieważ nie bez wystąpień ciągu wyszukiwania w tym zakresie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1330">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1331">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1331">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member IndexOf : 'T[] * 'T * int -&gt; int" Usage="System.Array.IndexOf (array, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1332">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1332">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1333">Tablica jednowymiarowa, liczony od zera do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1333">The one-dimensional, zero-based array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-1334">Obiekt do zlokalizowania w <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1334">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="64f69-1335">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1335">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="64f69-1336">0 (zero) jest prawidłową wartością w pustej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1336">0 (zero) is valid in an empty array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1337">Wyszukuje określony obiekt w zakresie elementów Jednowymiarowa tablica i zwraca indeks jego pierwszego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1337">Searches for the specified object in a range of elements of a one dimensional array, and returns the index of its first occurrence.</span>
          </span>
          <span data-ttu-id="64f69-1338">Z zakresu od określonego indeksu do końca tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1338">The range extends from a specified index to the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1339">Liczony od zera indeks pierwszego wystąpienia <paramref name="value" /> w zakresie elementów w <paramref name="array" /> rozciąga się od <paramref name="startIndex" /> do ostatniego elementu, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1339">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1340">Ta metoda wyszukuje tablicą jednowymiarową z elementu `startIndex` do końca tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1340">This method searches a one-dimensional array from the element at `startIndex` to the end of the array.</span></span> <span data-ttu-id="64f69-1341">Aby określić, czy `value` istnieje w `array`, metoda przeprowadza porównanie równości, wywołując `T.Equals` metody dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1341">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="64f69-1342">Oznacza to, że jeśli `T` zastępuje <xref:System.Object.Equals%2A> wywoływana jest metoda, tego zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="64f69-1342">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="64f69-1343">Jeśli `startIndex` jest równe <xref:System.Array.Length%2A>, metoda zwraca - 1.If `startIndex` jest większa niż <xref:System.Array.Length%2A?displayProperty=nameWithType>, metoda wygeneruje <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1343">If `startIndex` equals <xref:System.Array.Length%2A>,the method returns -1.If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="64f69-1344">Ta metoda jest O (`n`) operację, której `n` jest liczba elementów od `startIndex` na końcu `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1344">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1345">W poniższym przykładzie pokazano wszystkie trzy ogólnego przeciążeń <xref:System.Array.IndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1345">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="64f69-1346">Tablica ciągów jest tworzona, gdy jeden wpis, to pojawia się dwukrotnie, z lokalizacją indeksu 0 i lokalizacją indeksu 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-1346">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="64f69-1347"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> Przeciążenie metody wyszukuje tablicy od początku i znajduje pierwsze wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1347">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="64f69-1348"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> Przeciążenie metody używane do przeszukiwania tablicy, począwszy od lokalizacji indeksu 3 i dalej koniec tablicy i wyszukuje drugie wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1348">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="64f69-1349">Na koniec <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> przeciążenie metody używane do przeszukiwania zakres dwóch wpisów, rozpoczynając od lokalizacji indeksu dwa; zwraca -1, ponieważ nie bez wystąpień ciągu wyszukiwania w tym zakresie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1349">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1350">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1350">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1351">
            <paramref name="startIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1351">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member IndexOf : 'T[] * 'T * int * int -&gt; int" Usage="System.Array.IndexOf (array, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1352">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1352">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1353">Tablica jednowymiarowa, liczony od zera do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1353">The one-dimensional, zero-based array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-1354">Obiekt do zlokalizowania w <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1354">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="64f69-1355">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1355">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="64f69-1356">0 (zero) jest prawidłową wartością w pustej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1356">0 (zero) is valid in an empty array.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="64f69-1357">Liczba elementów w sekcji do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1357">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1358">Wyszukuje określony obiekt w zakresie elementów tablicy jednowymiarowej i zwraca indeks jego pierwszego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1358">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</span>
          </span>
          <span data-ttu-id="64f69-1359">Z zakresu od określonego indeksu dla określonej liczby elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1359">The range extends from a specified index for a specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1360">Liczony od zera indeks pierwszego wystąpienia <paramref name="value" /> w zakresie elementów w <paramref name="array" /> który rozpoczyna się od <paramref name="startIndex" /> i zawiera liczbę elementów określonych w <paramref name="count" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1360">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified in <paramref name="count" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1361">Tej metody elementy searchesthe tablicy jednowymiarowej z `startIndex` do `startIndex` plus `count` pomniejszonej o 1, jeśli `count` jest większa niż 0.</span><span class="sxs-lookup"><span data-stu-id="64f69-1361">This method searchesthe elements of a one-dimensional array from `startIndex` to `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span> <span data-ttu-id="64f69-1362">Aby określić, czy `value` istnieje w `array`, metoda przeprowadza porównanie równości, wywołując `T.Equals` metody dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1362">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="64f69-1363">Oznacza to, że jeśli `T` zastępuje <xref:System.Object.Equals%2A> wywoływana jest metoda, tego zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="64f69-1363">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="64f69-1364">Jeśli `startIndex` jest równe <xref:System.Array.Length%2A?displayProperty=nameWithType>, metoda zwraca wartość -1.</span><span class="sxs-lookup"><span data-stu-id="64f69-1364">If `startIndex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method returns -1.</span></span>  <span data-ttu-id="64f69-1365">Jeśli `startIndex` jest większa niż <xref:System.Array.Length%2A?displayProperty=nameWithType>, metoda wygeneruje <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1365">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="64f69-1366">Ta metoda jest O (`n`) operację, której `n` jest `count`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1366">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1367">W poniższym przykładzie pokazano wszystkie trzy ogólnego przeciążeń <xref:System.Array.IndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1367">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="64f69-1368">Tablica ciągów jest tworzona, gdy jeden wpis, to pojawia się dwukrotnie, z lokalizacją indeksu 0 i lokalizacją indeksu 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-1368">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="64f69-1369"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> Przeciążenie metody wyszukuje tablicy od początku i znajduje pierwsze wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1369">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="64f69-1370"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> Przeciążenie metody używane do przeszukiwania tablicy, począwszy od lokalizacji indeksu 3 i dalej koniec tablicy i wyszukuje drugie wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1370">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="64f69-1371">Na koniec <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> przeciążenie metody używane do przeszukiwania zakres dwóch wpisów, rozpoczynając od lokalizacji indeksu dwa; zwraca -1, ponieważ nie bez wystąpień ciągu wyszukiwania w tym zakresie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1371">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1372">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1372">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1373">
            <paramref name="startIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1373">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-1374">- lub - <paramref name="count" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1374">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-1375">- lub - <paramref name="startIndex" /> i <paramref name="count" /> nie zostanie określony prawidłowy części <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1375">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberSignature Language="F#" Value="member this.Initialize : unit -&gt; unit" Usage="array.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1376">Inicjuje każdy element na wartość typu <see cref="T:System.Array" /> przez wywołanie konstruktora domyślnego typu wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1376">Initializes every element of the value-type <see cref="T:System.Array" /> by calling the default constructor of the value type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1377">Ta metoda ma na celu kompilatory obsługuje tablic typu wartość; Większość użytkowników nie muszą tej metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1377">This method is designed to help compilers support value-type arrays; most users do not need this method.</span></span> <span data-ttu-id="64f69-1378">Nie należy go w tablicach Typ odwołania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1378">It must not be used on reference-type arrays.</span></span>  
  
 <span data-ttu-id="64f69-1379">Jeśli <xref:System.Array> nie jest typem wartości <xref:System.Array> lub jeśli typ wartości nie ma konstruktora domyślnego <xref:System.Array> nie jest modyfikowany.</span><span class="sxs-lookup"><span data-stu-id="64f69-1379">If the <xref:System.Array> is not a value-type <xref:System.Array> or if the value type does not have a default constructor, the <xref:System.Array> is not modified.</span></span>  
  
 <span data-ttu-id="64f69-1380">Typ wartości <xref:System.Array> może mieć żadnych dolna granica i dowolną liczbę wymiarów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1380">The value-type <xref:System.Array> can have any lower bound and any number of dimensions.</span></span>  
  
 <span data-ttu-id="64f69-1381">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1381">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="64f69-1382">Tej metody można użyć tylko dla typów wartości, które mają konstruktorów; typy wartości, które są natywne dla C# nie mają jednak konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1382">You can use this method only on value types that have constructors; however, value types that are native to C# do not have constructors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Array.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1383">Pobiera wartość wskazującą czy <see cref="T:System.Array" /> ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1383">Gets a value indicating whether the <see cref="T:System.Array" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64f69-1384">Ta właściwość jest zawsze <see langword="true" /> dla wszystkich tablic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1384">This property is always <see langword="true" /> for all arrays.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1385"><xref:System.Array> implementuje <xref:System.Array.IsFixedSize%2A> właściwości, ponieważ jest to wymagane przez <xref:System.Collections.IList?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1385"><xref:System.Array> implements the <xref:System.Array.IsFixedSize%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="64f69-1386">Tablicy o ustalonym rozmiarze nie zezwala na dodawanie i usuwanie elementów po utworzeniu tablicy, ale umożliwia modyfikowanie istniejących elementów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1386">An array with a fixed size does not allow the addition or removal of elements after the array is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="64f69-1387">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1387">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.Collections.Generic.IList`1" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Array.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1388">Pobiera wartość wskazującą czy <see cref="T:System.Array" /> jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1388">Gets a value indicating whether the <see cref="T:System.Array" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64f69-1389">Ta właściwość jest zawsze <see langword="false" /> dla wszystkich tablic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1389">This property is always <see langword="false" /> for all arrays.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1390"><xref:System.Array> implementuje <xref:System.Array.IsReadOnly%2A> właściwości, ponieważ jest to wymagane przez <xref:System.Collections.IList?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1390"><xref:System.Array> implements the <xref:System.Array.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="64f69-1391">Tablica, która jest tylko do odczytu nie zezwala na dodanie, usunięcie lub modyfikowania elementów po utworzeniu tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1391">An array that is read-only does not allow the addition, removal, or modification of elements after the array is created.</span></span>  
  
 <span data-ttu-id="64f69-1392">Jeśli potrzebujesz kolekcji tylko do odczytu, użyj <xref:System.Collections> klasa implementująca <xref:System.Collections.IList?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1392">If you require a read-only collection, use a <xref:System.Collections> class that implements the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="64f69-1393">Jeśli rzutowania lub konwersji tablicy do <xref:System.Collections.IList> obiektu interfejsu <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> zwraca właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1393">If you cast or convert an array to an <xref:System.Collections.IList> interface object, the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> property returns `false`.</span></span> <span data-ttu-id="64f69-1394">Jednak jeśli rzutowania lub konwersji tablicy do <xref:System.Collections.Generic.IList%601> interfejsu `IsReadOnly` zwraca właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1394">However, if you cast or convert an array to a <xref:System.Collections.Generic.IList%601> interface, the `IsReadOnly` property returns `true`.</span></span>  
  
 <span data-ttu-id="64f69-1395">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1395">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="N:System.Collections" />
        <altmember cref="T:System.Collections.Generic.IList`1" />
        <altmember cref="N:System.Collections.Generic" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Array.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1396">Pobiera wartość wskazującą czy uzyskują dostęp do <see cref="T:System.Array" /> jest synchronizowane (wielowątkowość).</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1396">Gets a value indicating whether access to the <see cref="T:System.Array" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64f69-1397">Ta właściwość jest zawsze <see langword="false" /> dla wszystkich tablic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1397">This property is always <see langword="false" /> for all arrays.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1398"><xref:System.Array> implementuje <xref:System.Array.IsSynchronized%2A> właściwości, ponieważ jest to wymagane przez <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1398"><xref:System.Array> implements the <xref:System.Array.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="64f69-1399">Na podstawie klasy .NET framework <xref:System.Array> Udostępnij własnych zsynchronizowaną wersję w kolekcji przy użyciu <xref:System.Array.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="64f69-1399">.NET Framework classes based on <xref:System.Array> provide their own synchronized version of the collection using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="64f69-1400">Klasy korzystające tablice można też wdrożyć za pomocą ich własnych synchronizacji <xref:System.Array.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="64f69-1400">Classes that use arrays can also implement their own synchronization using the <xref:System.Array.SyncRoot%2A> property.</span></span> <span data-ttu-id="64f69-1401">Synchronizowanie kodu musi wykonywać operacje `SyncRoot` kolekcji, a nie bezpośrednio w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="64f69-1401">The synchronizing code must perform operations on the `SyncRoot` of the collection, not directly on the collection.</span></span> <span data-ttu-id="64f69-1402">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1402">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="64f69-1403">W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowania kolekcji.</span><span class="sxs-lookup"><span data-stu-id="64f69-1403">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection.</span></span> <span data-ttu-id="64f69-1404">Należy pamiętać, że niektóre implementacje <xref:System.Array.SyncRoot%2A> może zwrócić <xref:System.Array> samej siebie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1404">Note that some implementations of <xref:System.Array.SyncRoot%2A> might return the <xref:System.Array> itself.</span></span>  
  
 <span data-ttu-id="64f69-1405">Wyliczanie za pomocą kolekcji leżą nie jest procedurą bezpieczne wątku.</span><span class="sxs-lookup"><span data-stu-id="64f69-1405">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="64f69-1406">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="64f69-1406">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="64f69-1407">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="64f69-1407">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="64f69-1408">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1408">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1409">Poniższy przykład kodu pokazuje, jak można zablokować tablicy podczas wyliczania całego przy użyciu <xref:System.Array.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="64f69-1409">The following code example shows how to lock an array during the entire enumeration by using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 [!code-cpp[System.Array.SyncRoot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.SyncRoot/cpp/source.cpp#1)]
 [!code-csharp[System.Array.SyncRoot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.SyncRoot/cs/source.cs#1)]
 [!code-vb[System.Array.SyncRoot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.SyncRoot/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1410">Zwraca indeks ostatniego wystąpienia wartości w jednowymiarowa <see cref="T:System.Array" /> lub w części <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1410">Returns the index of the last occurrence of a value in a one-dimensional <see cref="T:System.Array" /> or in a portion of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : Array * obj -&gt; int" Usage="System.Array.LastIndexOf (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-1411">Jednowymiarowa <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1411">The one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-1412">Obiekt do zlokalizowania w <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1412">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1413">Wyszukuje określony obiekt i zwraca indeks ostatniego wystąpienia w obrębie całej jednowymiarowa <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1413">Searches for the specified object and returns the index of the last occurrence within the entire one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1414">Indeks ostatniego wystąpienia <paramref name="value" /> w obrębie całej <paramref name="array" />, jeśli je znaleziono; w przeciwnym razie wartość dolna granica tablicy pomniejszonej o 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1414">The index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1415">Jednowymiarowa <xref:System.Array> przeszukiwany jest wstecz od ostatniego elementu i kończącego się na pierwszym elementem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1415">The one-dimensional <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="64f69-1416">Elementy są porównywane przy użyciu określonej wartości <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1416">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="64f69-1417">Jeśli typ elementu jest nonintrinsic typem (zdefiniowane przez użytkownika), `Equals` implementacji tego typu jest używana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1417">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="64f69-1418">Ponieważ większość tablice mają dolna granica zero, ta metoda zwróci zazwyczaj-1 w przypadku `value` nie znaleziono.</span><span class="sxs-lookup"><span data-stu-id="64f69-1418">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="64f69-1419">W rzadkich przypadkach, że dolna granica tablicy wynosi <xref:System.Int32.MinValue?displayProperty=nameWithType> i `value` nie zostanie znaleziony, ta metoda zwraca <xref:System.Int32.MaxValue?displayProperty=nameWithType>, która jest `System.Int32.MinValue - 1`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1419">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="64f69-1420">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1420">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="64f69-1421">W programie .NET Framework w wersji 2.0, ta metoda używa <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody <xref:System.Array> ustalenie, czy <xref:System.Object> określonego przez `value` parametr istnieje.</span><span class="sxs-lookup"><span data-stu-id="64f69-1421">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="64f69-1422">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `value` <xref:System.Object> samej siebie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1422">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
 <span data-ttu-id="64f69-1423"><xref:System.IComparable.CompareTo%2A> metody `item` parametrów dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="64f69-1423"><xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1424">Poniższy przykład kodu pokazuje, jak można określić indeksu ostatniego wystąpienia określony element w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1424">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1425">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1425">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1426">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1426">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : Array * obj * int -&gt; int" Usage="System.Array.LastIndexOf (array, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-1427">Jednowymiarowa <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1427">The one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-1428">Obiekt do zlokalizowania w <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1428">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="64f69-1429">Indeks początkowy wyszukiwania do tyłu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1429">The starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1430">Wyszukuje określony obiekt i zwraca indeks ostatniego wystąpienia w zakresie elementów w jednowymiarowej tablicy <see cref="T:System.Array" /> który rozciąga się od pierwszego elementu zgodnie z określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1430">Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1431">Indeks ostatniego wystąpienia <paramref name="value" /> w zakresie elementów w <paramref name="array" /> który rozciąga się od pierwszego elementu <paramref name="startIndex" />, jeśli je znaleziono; w przeciwnym razie wartość dolna granica tablicy pomniejszonej o 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1431">The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1432">Jednowymiarowa <xref:System.Array> jest przeszukane z poprzednimi wersjami zaczynając od `startIndex` i kończącego się na pierwszym elementem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1432">The one-dimensional <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="64f69-1433">Elementy są porównywane przy użyciu określonej wartości <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1433">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="64f69-1434">Jeśli typ elementu jest nonintrinsic typem (zdefiniowane przez użytkownika), `Equals` implementacji tego typu jest używana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1434">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="64f69-1435">Ponieważ większość tablice mają dolna granica zero, ta metoda zwróci zazwyczaj-1 w przypadku `value` nie znaleziono.</span><span class="sxs-lookup"><span data-stu-id="64f69-1435">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="64f69-1436">W rzadkich przypadkach, że dolna granica tablicy wynosi <xref:System.Int32.MinValue?displayProperty=nameWithType> i `value` nie zostanie znaleziony, ta metoda zwraca <xref:System.Int32.MaxValue?displayProperty=nameWithType>, która jest `System.Int32.MinValue - 1`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1436">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="64f69-1437">Ta metoda jest O (`n`) operację, której `n` jest liczba elementów od początku `array` do `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1437">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
 <span data-ttu-id="64f69-1438">W programie .NET Framework w wersji 2.0, ta metoda używa <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody <xref:System.Array> ustalenie, czy <xref:System.Object> określonego przez `value` parametr istnieje.</span><span class="sxs-lookup"><span data-stu-id="64f69-1438">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="64f69-1439">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `value` <xref:System.Object> samej siebie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1439">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1440">Poniższy przykład kodu pokazuje, jak można określić indeksu ostatniego wystąpienia określony element w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1440">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1441">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1441">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1442">
            <paramref name="startIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1442">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1443">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1443">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : Array * obj * int * int -&gt; int" Usage="System.Array.LastIndexOf (array, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-1444">Jednowymiarowa <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1444">The one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-1445">Obiekt do zlokalizowania w <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1445">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="64f69-1446">Indeks początkowy wyszukiwania do tyłu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1446">The starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="64f69-1447">Liczba elementów w sekcji do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1447">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1448">Wyszukuje określony obiekt i zwraca indeks ostatniego wystąpienia w zakresie elementów w jednowymiarowej tablicy <see cref="T:System.Array" /> zawierający określoną liczbę elementów i kończy się w określonym indeksie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1448">Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1449">Indeks ostatniego wystąpienia <paramref name="value" /> w zakresie elementów w <paramref name="array" /> zawiera liczbę elementów określonych w <paramref name="count" /> i kończy się na <paramref name="startIndex" />, jeśli je znaleziono; w przeciwnym razie wartość dolna granica tablicy pomniejszonej o 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1449">The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1450">Jednowymiarowa <xref:System.Array> jest przeszukane z poprzednimi wersjami zaczynając od `startIndex` i kończący się na `startIndex` minus `count` plus 1, jeśli `count` jest większa niż 0.</span><span class="sxs-lookup"><span data-stu-id="64f69-1450">The one-dimensional <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="64f69-1451">Elementy są porównywane przy użyciu określonej wartości <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1451">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="64f69-1452">Jeśli typ elementu jest nonintrinsic typem (zdefiniowane przez użytkownika),`Equals` implementacji tego typu jest używana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1452">If the element type is a nonintrinsic (user-defined) type, the`Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="64f69-1453">Ponieważ większość tablice mają dolna granica zero, ta metoda zwróci zazwyczaj-1 w przypadku `value` nie znaleziono.</span><span class="sxs-lookup"><span data-stu-id="64f69-1453">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="64f69-1454">W rzadkich przypadkach, że dolna granica tablicy wynosi <xref:System.Int32.MinValue?displayProperty=nameWithType> i `value` nie zostanie znaleziony, ta metoda zwraca <xref:System.Int32.MaxValue?displayProperty=nameWithType>, która jest `System.Int32.MinValue - 1`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1454">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="64f69-1455">Ta metoda jest O (`n`) operację, której `n` jest `count`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1455">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="64f69-1456">W programie .NET Framework w wersji 2.0, ta metoda używa <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody <xref:System.Array> ustalenie, czy <xref:System.Object> określonego przez `value` parametr istnieje.</span><span class="sxs-lookup"><span data-stu-id="64f69-1456">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="64f69-1457">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metody `value` <xref:System.Object> samej siebie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1457">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1458">Poniższy przykład kodu pokazuje, jak można określić indeksu ostatniego wystąpienia określony element w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1458">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span> <span data-ttu-id="64f69-1459">Należy pamiętać, że <xref:System.Array.LastIndexOf%2A> metoda jest wyszukiwania do tyłu; w związku z tym `count` musi być mniejsze niż lub równe (`startIndex` minus dolna granica tablicy plus 1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1459">Note that the <xref:System.Array.LastIndexOf%2A> method is a backward search; therefore, `count` must be less than or equal to (`startIndex` minus the lower bound of the array plus 1).</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1460">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1460">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1461">
            <paramref name="startIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1461">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-1462">- lub - <paramref name="count" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1462">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-1463">- lub - <paramref name="startIndex" /> i <paramref name="count" /> nie zostanie określony prawidłowy części <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1463">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1464">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1464">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : 'T[] * 'T -&gt; int" Usage="System.Array.LastIndexOf (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1465">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1465">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1466">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1466">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-1467">Obiekt do zlokalizowania w <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1467">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1468">Wyszukuje określony obiekt i zwraca indeks ostatniego wystąpienia w obrębie całej <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1468">Searches for the specified object and returns the index of the last occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1469">Liczony od zera indeks ostatniego wystąpienia <paramref name="value" /> w obrębie całej <paramref name="array" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1469">The zero-based index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1470"><xref:System.Array> Przeszukiwany jest wstecz od ostatniego elementu i kończącego się na pierwszym elementem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1470">The <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="64f69-1471">Elementy są porównywane przy użyciu określonej wartości <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1471">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="64f69-1472">Jeśli typ elementu jest nonintrinsic typem (zdefiniowane przez użytkownika), `Equals` implementacji tego typu jest używana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1472">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="64f69-1473">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1473">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1474">Poniższy przykład kodu pokazuje wszystkie trzy ogólnego przeciążeń <xref:System.Array.LastIndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1474">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="64f69-1475">Tablica ciągów jest tworzona, gdy jeden wpis, to pojawia się dwukrotnie, z lokalizacją indeksu 0 i lokalizacją indeksu 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-1475">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="64f69-1476"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> Przeciążenie metody wyszukuje całą macierz od jej końca i wyszukuje drugie wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1476">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="64f69-1477"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> Przeciążenie metody używane do przeszukiwania tablicy z poprzednimi wersjami, począwszy od lokalizacji indeksu 3 i dalej na początku tablicy i znajduje pierwsze wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1477">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="64f69-1478">Na koniec <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> przeciążenie metody używane do przeszukiwania zakres cztery wpisy, zaczynając od lokalizacji indeksu 4 i rozszerzanie Wstecz (to znaczy przeszukuje elementy w lokalizacjach, 4, 3, 2 i 1); to wyszukiwanie zwraca -1, ponieważ nie żadnych wystąpień wyszukiwania ciąg w tym zakresie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1478">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1479">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1479">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : 'T[] * 'T * int -&gt; int" Usage="System.Array.LastIndexOf (array, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1480">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1480">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1481">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1481">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-1482">Obiekt do zlokalizowania w <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1482">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="64f69-1483">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1483">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1484">Wyszukuje określony obiekt i zwraca indeks ostatniego wystąpienia w zakresie elementów w <see cref="T:System.Array" /> który rozciąga się od pierwszego elementu zgodnie z określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1484">Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1485">Liczony od zera indeks ostatniego wystąpienia <paramref name="value" /> w zakresie elementów w <paramref name="array" /> który rozciąga się od pierwszego elementu <paramref name="startIndex" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1485">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1486"><xref:System.Array> Jest przeszukane z poprzednimi wersjami zaczynając od `startIndex` i kończącego się na pierwszym elementem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1486">The <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="64f69-1487">Elementy są porównywane przy użyciu określonej wartości <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1487">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="64f69-1488">Jeśli typ elementu jest nonintrinsic typem (zdefiniowane przez użytkownika), `Equals` implementacji tego typu jest używana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1488">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="64f69-1489">Ta metoda jest O (`n`) operację, której `n` jest liczba elementów od początku `array` do `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1489">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1490">Poniższy przykład kodu pokazuje wszystkie trzy ogólnego przeciążeń <xref:System.Array.LastIndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1490">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="64f69-1491">Tablica ciągów jest tworzona, gdy jeden wpis, to pojawia się dwukrotnie, z lokalizacją indeksu 0 i lokalizacją indeksu 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-1491">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="64f69-1492"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> Przeciążenie metody wyszukuje całą macierz od jej końca i wyszukuje drugie wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1492">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="64f69-1493"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> Przeciążenie metody używane do przeszukiwania tablicy z poprzednimi wersjami, począwszy od lokalizacji indeksu 3 i dalej na początku tablicy i znajduje pierwsze wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1493">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="64f69-1494">Na koniec <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> przeciążenie metody używane do przeszukiwania zakres cztery wpisy, zaczynając od lokalizacji indeksu 4 i rozszerzanie Wstecz (to znaczy przeszukuje elementy w lokalizacjach, 4, 3, 2 i 1); to wyszukiwanie zwraca -1, ponieważ nie żadnych wystąpień wyszukiwania ciąg w tym zakresie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1494">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1495">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1495">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1496">
            <paramref name="startIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1496">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : 'T[] * 'T * int * int -&gt; int" Usage="System.Array.LastIndexOf (array, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1497">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1497">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1498">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1498">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-1499">Obiekt do zlokalizowania w <c>tablicy</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1499">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="64f69-1500">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1500">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="64f69-1501">Liczba elementów w sekcji do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1501">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1502">Wyszukuje określony obiekt i zwraca indeks ostatniego wystąpienia w zakresie elementów w <see cref="T:System.Array" /> zawierający określoną liczbę elementów i kończy się w określonym indeksie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1502">Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-1503">Liczony od zera indeks ostatniego wystąpienia <paramref name="value" /> w zakresie elementów w <paramref name="array" /> zawiera liczbę elementów określonych w <paramref name="count" /> i kończy się na <paramref name="startIndex" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1503">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1504"><xref:System.Array> Jest przeszukane z poprzednimi wersjami zaczynając od `startIndex` i kończący się na `startIndex` minus `count` plus 1, jeśli `count` jest większa niż 0.</span><span class="sxs-lookup"><span data-stu-id="64f69-1504">The <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="64f69-1505">Elementy są porównywane przy użyciu określonej wartości <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1505">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="64f69-1506">Jeśli typ elementu jest nonintrinsic typem (zdefiniowane przez użytkownika), `Equals` implementacji tego typu jest używana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1506">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="64f69-1507">Ta metoda jest O (`n`) operację, której `n` jest `count`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1507">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1508">Poniższy przykład kodu pokazuje wszystkie trzy ogólnego przeciążeń <xref:System.Array.LastIndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1508">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="64f69-1509">Tablica ciągów jest tworzona, gdy jeden wpis, to pojawia się dwukrotnie, z lokalizacją indeksu 0 i lokalizacją indeksu 5.</span><span class="sxs-lookup"><span data-stu-id="64f69-1509">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="64f69-1510"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> Przeciążenie metody wyszukuje całą macierz od jej końca i wyszukuje drugie wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1510">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="64f69-1511"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> Przeciążenie metody używane do przeszukiwania tablicy z poprzednimi wersjami, począwszy od lokalizacji indeksu 3 i dalej na początku tablicy i znajduje pierwsze wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1511">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="64f69-1512">Na koniec <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> przeciążenie metody używane do przeszukiwania zakres cztery wpisy, zaczynając od lokalizacji indeksu 4 i rozszerzanie Wstecz (to znaczy przeszukuje elementy w lokalizacjach, 4, 3, 2 i 1); to wyszukiwanie zwraca -1, ponieważ nie żadnych wystąpień wyszukiwania ciąg w tym zakresie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1512">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1513">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1513">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1514">
            <paramref name="startIndex" /> znajduje się poza zakresem indeksów prawidłowy dla <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1514">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-1515">- lub - <paramref name="count" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1515">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-1516">- lub - <paramref name="startIndex" /> i <paramref name="count" /> nie zostanie określony prawidłowy części <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1516">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Array.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Array.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1517">Pobiera całkowitą liczbę elementów w wszystkie wymiary <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1517">Gets the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64f69-1518">Całkowita liczba elementów w wszystkie wymiary <see cref="T:System.Array" />; zero, jeśli w tablicy nie ma elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1518">The total number of elements in all the dimensions of the <see cref="T:System.Array" />; zero if there are no elements in the array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1519">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1519">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1520">W poniższym przykładzie użyto <xref:System.Array.Length%2A> właściwości do pobrania łączna liczba elementów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1520">The following example uses the <xref:System.Array.Length%2A> property to get the total number of elements in an array.</span></span> <span data-ttu-id="64f69-1521">Ponadto użyto <xref:System.Array.GetUpperBound%2A> metodę, aby określić liczbę elementów w każdego wymiaru tablicy wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1521">It also uses the <xref:System.Array.GetUpperBound%2A> method to determine the number of elements in each dimension of a multidimensional array.</span></span>  
  
 [!code-csharp[System.Array.Length#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.length/cs/length1.cs#1)]
 [!code-vb[System.Array.Length#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.length/vb/length1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="64f69-1522">Tablica jest wielowymiarowa i zawiera więcej niż <see cref="F:System.Int32.MaxValue" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1522">The array is multidimensional and contains more than <see cref="F:System.Int32.MaxValue" /> elements.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="P:System.Array.LongLength" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="LongLength">
      <MemberSignature Language="C#" Value="public long LongLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LongLength" />
      <MemberSignature Language="DocId" Value="P:System.Array.LongLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LongLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LongLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.LongLength : int64" Usage="System.Array.LongLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1523">Pobiera 64-bitową liczbę całkowitą, reprezentujący łączna liczba elementów w wszystkie wymiary <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1523">Gets a 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64f69-1524">64-bitową liczbę całkowitą, reprezentujący łączna liczba elementów w wszystkie wymiary <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1524">A 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1525">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1525">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
        <altmember cref="P:System.Array.Length" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public int Rank { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rank" />
      <MemberSignature Language="DocId" Value="P:System.Array.Rank" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rank { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Rank : int" Usage="System.Array.Rank" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1526">Pobiera pozycję (liczba wymiarów) <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1526">Gets the rank (number of dimensions) of the <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1527">Na przykład tablicą jednowymiarową zwraca wartość 1, jest tablicą dwuwymiarową zwraca 2 i tak dalej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1527">For example, a one-dimensional array returns 1, a two-dimensional array returns 2, and so on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64f69-1528">Rangę (liczba wymiarów) <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1528">The rank (number of dimensions) of the <see cref="T:System.Array" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1529">Na przykład kod Visual Basic</span><span class="sxs-lookup"><span data-stu-id="64f69-1529">For example, the Visual Basic code</span></span>  
  
```vb  
Dim TDArray(0,0,0) As Integer  
```  
  
 <span data-ttu-id="64f69-1530">i kodu C#</span><span class="sxs-lookup"><span data-stu-id="64f69-1530">and the C# code</span></span>  
  
```csharp  
int[,,] TDArray = new int[1,1,1];  
```  
  
 <span data-ttu-id="64f69-1531">Utwórz tablicę trzech wymiarów z <xref:System.Array.Rank%2A> właściwości, którego wartość to 3.</span><span class="sxs-lookup"><span data-stu-id="64f69-1531">create an array of three dimensions with a <xref:System.Array.Rank%2A> property whose value is 3.</span></span>  
  
 <span data-ttu-id="64f69-1532">Tablicy nieregularnej (tablicy tablic) jest tablicą jednowymiarową; wartość jego <xref:System.Array.Rank%2A> właściwość jest 1.</span><span class="sxs-lookup"><span data-stu-id="64f69-1532">A jagged array (an array of arrays) is a one-dimensional array; the value of its <xref:System.Array.Rank%2A> property is 1.</span></span>  
  
 <span data-ttu-id="64f69-1533">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1533">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1534">W poniższym przykładzie inicjuje tablicą jednowymiarową tablicą dwuwymiarową i tablicy nieregularnej i pobiera <xref:System.Array.Rank%2A> właściwości każdego z nich.</span><span class="sxs-lookup"><span data-stu-id="64f69-1534">The following example initializes a one-dimensional array, a two-dimensional array, and a jagged array, and retrieves the <xref:System.Array.Rank%2A> property of each.</span></span>  
  
 [!code-csharp[System.Array.Rank#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.rank/cs/rank1.cs#1)]
 [!code-vb[System.Array.Rank#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.rank/vb/rank1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="P:System.Array.LongLength" />
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Resize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Resize&lt;T&gt; (ref T[] array, int newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Resize&lt;T&gt;(!!T[]&amp; array, int32 newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Resize``1(``0[]@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Resize(Of T) (ByRef array As T(), newSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Resize(cli::array &lt;T&gt; ^ % array, int newSize);" />
      <MemberSignature Language="F#" Value="static member Resize :  * int -&gt; unit" Usage="System.Array.Resize (array, newSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]&amp;" RefType="ref" />
        <Parameter Name="newSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1535">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1535">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1536">Tablica jednowymiarowa, liczony od zera do zmiany rozmiaru, lub <see langword="null" /> do utworzenia nowej tablicy o określonym rozmiarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1536">The one-dimensional, zero-based array to resize, or <see langword="null" /> to create a new array with the specified size.</span>
          </span>
        </param>
        <param name="newSize">
          <span data-ttu-id="64f69-1537">Rozmiar nowej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1537">The size of the new array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1538">Zmiany liczby elementów tablicy jednowymiarowej z określonym rozmiarem nowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1538">Changes the number of elements of a one-dimensional array to the specified new size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1539">Ta metoda przydziela nowej tablicy o określonym rozmiarze, kopiuje elementy z tablicy starego do nowego i zastąpi stare tablicy nowym.</span><span class="sxs-lookup"><span data-stu-id="64f69-1539">This method allocates a new array with the specified size, copies elements from the old array to the new one, and then replaces the old array with the new one.</span></span> <span data-ttu-id="64f69-1540">`array` musi być tablicą jednowymiarową.</span><span class="sxs-lookup"><span data-stu-id="64f69-1540">`array` must be a one-dimensional array.</span></span>  
  
 <span data-ttu-id="64f69-1541">Jeśli `array` jest `null`, ta metoda tworzy nowy tablicy o określonym rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="64f69-1541">If `array` is `null`, this method creates a new array with the specified size.</span></span>  
  
 <span data-ttu-id="64f69-1542">Jeśli `newSize` jest większa niż <xref:System.Array.Length%2A> starego tablicy jest przydzielany nowej tablicy i wszystkie elementy są kopiowane z tablicy starego do nowego.</span><span class="sxs-lookup"><span data-stu-id="64f69-1542">If `newSize` is greater than the <xref:System.Array.Length%2A> of the old array, a new array is allocated and all the elements are copied from the old array to the new one.</span></span>  <span data-ttu-id="64f69-1543">Jeśli `newSize` jest mniejsza niż <xref:System.Array.Length%2A> starego tablicy jest przydzielany nowej tablicy i są kopiowane elementy z tablicy starego do nowego dopóki nowym jest wypełniony; pozostałe elementy w tablicy stare są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1543">If `newSize` is less than the <xref:System.Array.Length%2A> of the old array, a new array is allocated and elements are copied from the old array to the new one until the new one is filled; the rest of the elements in the old array are ignored.</span></span>  <span data-ttu-id="64f69-1544">Jeśli `newSize` jest równa <xref:System.Array.Length%2A> starego tablicy, ta metoda nie działa.</span><span class="sxs-lookup"><span data-stu-id="64f69-1544">If `newSize` is equal to the <xref:System.Array.Length%2A> of the old array, this method does nothing.</span></span>  
  
 <span data-ttu-id="64f69-1545">Ta metoda jest O (`n`) operację, której `n` jest `newSize`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1545">This method is an O(`n`) operation, where `n` is `newSize`.</span></span>  
  
 <span data-ttu-id="64f69-1546"><xref:System.Array.Resize%2A> Metody zmienia rozmiar tylko tablicą jednowymiarową.</span><span class="sxs-lookup"><span data-stu-id="64f69-1546">The <xref:System.Array.Resize%2A> method resizes a one-dimensional array only.</span></span> <span data-ttu-id="64f69-1547"><xref:System.Array> Klasa nie ma metody do zmiany rozmiaru tablic wielowymiarowych.</span><span class="sxs-lookup"><span data-stu-id="64f69-1547">The <xref:System.Array> class does not include a method for resizing multi-dimensional arrays.</span></span> <span data-ttu-id="64f69-1548">Aby to zrobić, należy zapewnić swoim własnym kodem lub wywołanie metody specjalnych w bibliotece innych firm.</span><span class="sxs-lookup"><span data-stu-id="64f69-1548">To do this, you must either provide your own code or call a special-purpose method in a third-party library.</span></span> <span data-ttu-id="64f69-1549">Poniższy kod przedstawia możliwe jedna implementacja metody, która zmienia rozmiar tablicy *n* wymiarów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1549">The following code illustrates one possible implementation for a method that resizes an array of *n* dimensions.</span></span>  
  
 [!code-csharp[System.Array.Resize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Resize/CS/resizexd.cs#2)]
 [!code-vb[System.Array.Resize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Resize/VB/resizexd.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1550">W poniższym przykładzie pokazano, jak zmiana rozmiaru wpływa na tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1550">The following example shows how resizing affects the array.</span></span>  
  
 [!code-cpp[System.Array.Resize#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Resize/CPP/System.Array.Resize.cpp#1)]
 [!code-csharp[System.Array.Resize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Resize/CS/arrayresize.cs#1)]
 [!code-vb[System.Array.Resize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Resize/VB/arrayresize.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1551">
            <paramref name="newSize" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1551">
              <paramref name="newSize" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1552">Odwraca kolejność elementów w jednowymiarowa <see cref="T:System.Array" /> lub w części <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1552">Reverses the order of the elements in a one-dimensional <see cref="T:System.Array" /> or in a portion of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static void Reverse (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reverse(Array ^ array);" />
      <MemberSignature Language="F#" Value="static member Reverse : Array -&gt; unit" Usage="System.Array.Reverse array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-1553">Jednowymiarowa <see cref="T:System.Array" /> Aby odwrócić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1553">The one-dimensional <see cref="T:System.Array" /> to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1554">Odwraca kolejność elementów w całej jednowymiarowa <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1554">Reverses the sequence of the elements in the entire one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1555">Po wywołaniu tej metody elementu `myArray[i]`, gdzie `i` żadnych indeks w tablicy, przenosi do `myArray[j]`, gdzie `j` jest równe `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1555">After a call to this method, the element at `myArray[i]`, where `i` is any index in the array, moves to `myArray[j]`, where `j` equals `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span></span>  
  
 <span data-ttu-id="64f69-1556">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1556">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="64f69-1557">Jak pokazano na poniższym przykładzie, <xref:System.Array.Reverse%2A> metody można użyć do odwracania tablicą nieregularną.</span><span class="sxs-lookup"><span data-stu-id="64f69-1557">As the following example shows, the <xref:System.Array.Reverse%2A> method can be used to reverse a jagged array.</span></span> <span data-ttu-id="64f69-1558">Tablicy nieregularnej o jeden element jest inicjowana w każdym miesiącu w bieżącym roku w kalendarzu bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="64f69-1558">It initializes a jagged array with one element for each month of the current year in the current culture's calendar.</span></span> <span data-ttu-id="64f69-1559">Każdy element zawiera tablicę z dowolną liczbę elementów, ponieważ dni miesiąca.</span><span class="sxs-lookup"><span data-stu-id="64f69-1559">Each element contains an array with as many elements as that month has days.</span></span> <span data-ttu-id="64f69-1560">W przykładzie przedstawiono zawartości tablicy, wywołania <xref:System.Array.Reverse%2A> metody, a następnie wyświetla zawartość tablicę wycofane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1560">The example displays the contents of the array, calls the <xref:System.Array.Reverse%2A> method, and then displays the contents of the reversed array.</span></span>  
  
 [!code-csharp[System.Array.Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.reverse/cs/reversejagged.cs#1)]
 [!code-vb[System.Array.Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.reverse/vb/reversejagged.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1561">Poniższy przykładowy kod przedstawia sposób sortowania wartości w odwrotnej <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1561">The following code example shows how to reverse the sort of the values in an <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1562">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1562">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1563">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1563">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static void Reverse (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reverse(Array ^ array, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Reverse : Array * int * int -&gt; unit" Usage="System.Array.Reverse (array, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-1564">Jednowymiarowa <see cref="T:System.Array" /> Aby odwrócić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1564">The one-dimensional <see cref="T:System.Array" /> to reverse.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-1565">Indeks początkowy sekcji, aby odwrócić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1565">The starting index of the section to reverse.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-1566">Liczba elementów w sekcji, aby odwrócić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1566">The number of elements in the section to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1567">Odwraca kolejność elementów w zakresie elementów w jednowymiarowej tablicy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1567">Reverses the sequence of the elements in a range of elements in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1568">Po wywołaniu tej metody elementu `myArray[i]`, gdzie `i` żadnych indeks w tablicy, przenosi do `myArray[j]`, gdzie `j` jest równe `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1568">After a call to this method, the element at `myArray[i]`, where `i` is any index in the array, moves to `myArray[j]`, where `j` equals `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span></span>  
  
 <span data-ttu-id="64f69-1569"><xref:System.Array.Reverse%2A> Metody można użyć do odwracania tablicą nieregularną.</span><span class="sxs-lookup"><span data-stu-id="64f69-1569">The <xref:System.Array.Reverse%2A> method can be used to reverse a jagged array.</span></span>  
  
 <span data-ttu-id="64f69-1570">Ta metoda jest O (`n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1570">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1571">Poniższy przykładowy kod przedstawia sposób Odwróć kolejność sortowania wartości zakresu elementów w <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1571">The following code example shows how to reverse the sort of the values in a range of elements in an <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1572">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1572">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1573">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1573">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1574">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1574">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-1575">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1575">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1576">
            <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1576">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Reverse&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Reverse(Of T) (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Reverse(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="static member Reverse : 'T[] -&gt; unit" Usage="System.Array.Reverse array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Reverse&lt;T&gt; (T[] array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse&lt;T&gt;(!!T[] array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Reverse(Of T) (array As T(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Reverse(cli::array &lt;T&gt; ^ array, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Reverse : 'T[] * int * int -&gt; unit" Usage="System.Array.Reverse (array, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1577">Ustawia określony element w bieżącym <see cref="T:System.Array" /> z podaną wartością.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1577">Sets the specified element in the current <see cref="T:System.Array" /> to the specified value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int -&gt; unit" Usage="array.SetValue (value, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64f69-1578">Nowa wartość dla określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1578">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-1579">32-bitową liczbę całkowitą, która reprezentuje pozycję <see cref="T:System.Array" /> element, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1579">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1580">Ustawia wartość do elementu w określonej pozycji w jednowymiarowej tablicy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1580">Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1581">Indeks jest określony jako 32-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1581">The index is specified as a 32-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1582"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można określić, czy wartość `index` jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1582">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1583">Aby uzyskać więcej informacji na temat konwersji, zobacz <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1583">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="64f69-1584">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1584">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1585">Jeśli <xref:System.Array.SetValue%2A> jest używana do przypisywania `null` do elementu tablicy typów wartości zainicjowaniem wszystkich pól elementu od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-1585">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="64f69-1586">Wartość elementu nie jest odwołaniem zerowym i nie można jej znaleźć przez wyszukiwanie odwołania zerowego.</span><span class="sxs-lookup"><span data-stu-id="64f69-1586">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1587">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1587">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1588">Bieżące <see cref="T:System.Array" /> nie ma dokładnie jednego wymiaru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1588">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-1589">
            <paramref name="value" /> Nie można rzutować na typ elementu bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1589">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-1590">
            <paramref name="index" /> znajduje się poza zakresem indeksów prawidłowy dla bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1590">
              <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, params int[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, ParamArray indices As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, ... cli::array &lt;int&gt; ^ indices);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int[] -&gt; unit" Usage="array.SetValue (value, indices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="indices" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64f69-1591">Nowa wartość dla określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1591">The new value for the specified element.</span>
          </span>
        </param>
        <param name="indices">
          <span data-ttu-id="64f69-1592">Jednowymiarowa tablica 32-bitowych liczb całkowitych reprezentujących indeksów, określając położenie elementu można ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1592">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1593">Ustawia wartość do elementu w określonej pozycji w wielowymiarowe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1593">Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1594">Indeksy są określone jako tablicę 32-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1594">The indexes are specified as an array of 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1595">Liczba elementów w `indices` musi być równa liczbie wymiarów w <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1595">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="64f69-1596">Wszystkie elementy w `indices` tablicy wspólnie określić położenie żądanego elementu w wielowymiarowe <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1596">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-1597"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można określić, czy dowolna z wartości w `indices` tablicy jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1597">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the values in the `indices` array is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1598">Aby uzyskać więcej informacji na temat konwersji, zobacz <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1598">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="64f69-1599">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1599">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1600">Jeśli <xref:System.Array.SetValue%2A> jest używana do przypisywania `null` do elementu tablicy typów wartości zainicjowaniem wszystkich pól elementu od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-1600">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="64f69-1601">Wartość elementu nie jest odwołaniem zerowym i nie można jej znaleźć przez wyszukiwanie odwołania zerowego.</span><span class="sxs-lookup"><span data-stu-id="64f69-1601">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1602">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1602">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1603">
            <paramref name="indices" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1603">
              <paramref name="indices" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1604">Liczba wymiarów w bieżącym <see cref="T:System.Array" /> nie jest równa liczbie elementów w <paramref name="indices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1604">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-1605">
            <paramref name="value" /> Nie można rzutować na typ elementu bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1605">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-1606">Dowolny element w <paramref name="indices" /> znajduje się poza zakresem indeksów prawidłowy dla odpowiedniego wymiaru bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1606">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int64 -&gt; unit" Usage="array.SetValue (value, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64f69-1607">Nowa wartość dla określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1607">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-1608">64-bitową liczbę całkowitą, która reprezentuje pozycję <see cref="T:System.Array" /> element, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1608">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1609">Ustawia wartość do elementu w określonej pozycji w jednowymiarowej tablicy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1609">Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1610">Indeks jest określony jako 64-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1610">The index is specified as a 64-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1611"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można określić, czy wartość `index` jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1611">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1612">Aby uzyskać więcej informacji na temat konwersji, zobacz <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1612">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="64f69-1613">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1613">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1614">Jeśli <xref:System.Array.SetValue%2A> jest używana do przypisywania `null` do elementu tablicy typów wartości zainicjowaniem wszystkich pól elementu od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-1614">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="64f69-1615">Wartość elementu nie jest odwołaniem zerowym i nie można jej znaleźć przez wyszukiwanie odwołania zerowego.</span><span class="sxs-lookup"><span data-stu-id="64f69-1615">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1616">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1616">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1617">Bieżące <see cref="T:System.Array" /> nie ma dokładnie jednego wymiaru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1617">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-1618">
            <paramref name="value" /> Nie można rzutować na typ elementu bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1618">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1619">
            <paramref name="index" /> znajduje się poza zakresem indeksów prawidłowy dla bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1619">
              <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, params long[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, ParamArray indices As Long())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, ... cli::array &lt;long&gt; ^ indices);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int64[] -&gt; unit" Usage="array.SetValue (value, indices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="indices" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64f69-1620">Nowa wartość dla określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1620">The new value for the specified element.</span>
          </span>
        </param>
        <param name="indices">
          <span data-ttu-id="64f69-1621">Jednowymiarowa tablica 64-bitowych liczb całkowitych reprezentujących indeksów, określając położenie elementu można ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1621">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1622">Ustawia wartość do elementu w określonej pozycji w wielowymiarowe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1622">Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1623">Indeksy są określone jako tablicę 64-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1623">The indexes are specified as an array of 64-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1624">Liczba elementów w `indices` musi być równa liczbie wymiarów w <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1624">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="64f69-1625">Wszystkie elementy w `indices` tablicy wspólnie określić położenie żądanego elementu w wielowymiarowe <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1625">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-1626"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można określić, czy dowolna z wartości w `indices` tablicy jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1626">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the values in the `indices` array is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1627">Aby uzyskać więcej informacji na temat konwersji, zobacz <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1627">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="64f69-1628">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1628">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1629">Jeśli <xref:System.Array.SetValue%2A> jest używana do przypisywania `null` do elementu tablicy typów wartości zainicjowaniem wszystkich pól elementu od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-1629">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="64f69-1630">Wartość elementu nie jest odwołaniem zerowym i nie można jej znaleźć przez wyszukiwanie odwołania zerowego.</span><span class="sxs-lookup"><span data-stu-id="64f69-1630">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1631">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1631">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1632">
            <paramref name="indices" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1632">
              <paramref name="indices" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1633">Liczba wymiarów w bieżącym <see cref="T:System.Array" /> nie jest równa liczbie elementów w <paramref name="indices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1633">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-1634">
            <paramref name="value" /> Nie można rzutować na typ elementu bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1634">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1635">Dowolny element w <paramref name="indices" /> znajduje się poza zakresem indeksów prawidłowy dla odpowiedniego wymiaru bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1635">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index1, int index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index1, int32 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Integer, index2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index1, int index2);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int * int -&gt; unit" Usage="array.SetValue (value, index1, index2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64f69-1636">Nowa wartość dla określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1636">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index1">
          <span data-ttu-id="64f69-1637">32-bitową liczbę całkowitą, który reprezentuje indeks pierwszego wymiaru <see cref="T:System.Array" /> element, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1637">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="64f69-1638">32-bitową liczbę całkowitą, reprezentującą sekundę wymiaru indeks <see cref="T:System.Array" /> element, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1638">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1639">Ustawia wartość do elementu w określonej pozycji w dwuwymiarowa <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1639">Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1640">Indeksy są określane jako 32-bitowe liczby całkowite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1640">The indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1641"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można ustalić, czy dowolny z indeksów jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1641">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1642">Aby uzyskać więcej informacji na temat konwersji, zobacz <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1642">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="64f69-1643">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1643">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1644">Jeśli <xref:System.Array.SetValue%2A> jest używana do przypisywania `null` do elementu tablicy typów wartości zainicjowaniem wszystkich pól elementu od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-1644">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="64f69-1645">Wartość elementu nie jest odwołaniem zerowym i nie można jej znaleźć przez wyszukiwanie odwołania zerowego.</span><span class="sxs-lookup"><span data-stu-id="64f69-1645">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1646">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1646">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1647">Bieżące <see cref="T:System.Array" /> nie ma dokładnie dwóch wymiarów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1647">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-1648">
            <paramref name="value" /> Nie można rzutować na typ elementu bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1648">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-1649">Albo <paramref name="index1" /> lub <paramref name="index2" /> znajduje się poza zakresem indeksów prawidłowy dla odpowiedniego wymiaru bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1649">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index1, long index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index1, int64 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Long, index2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index1, long index2);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int64 * int64 -&gt; unit" Usage="array.SetValue (value, index1, index2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64f69-1650">Nowa wartość dla określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1650">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index1">
          <span data-ttu-id="64f69-1651">64-bitową liczbę całkowitą, który reprezentuje indeks pierwszego wymiaru <see cref="T:System.Array" /> element, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1651">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="64f69-1652">64-bitową liczbę całkowitą reprezentującą sekundę wymiaru indeks <see cref="T:System.Array" /> element, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1652">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1653">Ustawia wartość do elementu w określonej pozycji w dwuwymiarowa <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1653">Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1654">Indeksy są określone jako 64-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1654">The indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1655"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można ustalić, czy dowolny z indeksów jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1655">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1656">Aby uzyskać więcej informacji na temat konwersji, zobacz <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1656">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="64f69-1657">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1657">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1658">Jeśli <xref:System.Array.SetValue%2A> jest używana do przypisywania `null` do elementu tablicy typów wartości zainicjowaniem wszystkich pól elementu od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-1658">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="64f69-1659">Wartość elementu nie jest odwołaniem zerowym i nie można jej znaleźć przez wyszukiwanie odwołania zerowego.</span><span class="sxs-lookup"><span data-stu-id="64f69-1659">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1660">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1660">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1661">Bieżące <see cref="T:System.Array" /> nie ma dokładnie dwóch wymiarów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1661">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-1662">
            <paramref name="value" /> Nie można rzutować na typ elementu bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1662">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1663">Albo <paramref name="index1" /> lub <paramref name="index2" /> znajduje się poza zakresem indeksów prawidłowy dla odpowiedniego wymiaru bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1663">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index1, int index2, int index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index1, int32 index2, int32 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Integer, index2 As Integer, index3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index1, int index2, int index3);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int * int * int -&gt; unit" Usage="array.SetValue (value, index1, index2, index3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
        <Parameter Name="index3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64f69-1664">Nowa wartość dla określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1664">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index1">
          <span data-ttu-id="64f69-1665">32-bitową liczbę całkowitą, który reprezentuje indeks pierwszego wymiaru <see cref="T:System.Array" /> element, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1665">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="64f69-1666">32-bitową liczbę całkowitą, reprezentującą sekundę wymiaru indeks <see cref="T:System.Array" /> element, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1666">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index3">
          <span data-ttu-id="64f69-1667">32-bitową liczbę całkowitą, reprezentujący indeks trzeci wymiar <see cref="T:System.Array" /> element, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1667">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1668">Ustawia wartość do elementu w określonej pozycji w trójwymiarowy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1668">Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1669">Indeksy są określane jako 32-bitowe liczby całkowite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1669">The indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1670"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można ustalić, czy dowolny z indeksów jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1670">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1671">Aby uzyskać więcej informacji na temat konwersji, zobacz <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1671">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="64f69-1672">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1672">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1673">Jeśli <xref:System.Array.SetValue%2A> jest używana do przypisywania `null` do elementu tablicy typów wartości zainicjowaniem wszystkich pól elementu od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-1673">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="64f69-1674">Wartość elementu nie jest odwołaniem zerowym i nie można jej znaleźć przez wyszukiwanie odwołania zerowego.</span><span class="sxs-lookup"><span data-stu-id="64f69-1674">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1675">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1675">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1676">Bieżące <see cref="T:System.Array" /> nie ma dokładnie trzy wymiarów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1676">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-1677">
            <paramref name="value" /> Nie można rzutować na typ elementu bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1677">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="64f69-1678">
            <paramref name="index1" /> lub <paramref name="index2" /> lub <paramref name="index3" /> znajduje się poza zakresem indeksów prawidłowy dla odpowiedniego wymiaru bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1678">
              <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index1, long index2, long index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index1, int64 index2, int64 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Long, index2 As Long, index3 As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index1, long index2, long index3);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int64 * int64 * int64 -&gt; unit" Usage="array.SetValue (value, index1, index2, index3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
        <Parameter Name="index3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64f69-1679">Nowa wartość dla określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1679">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index1">
          <span data-ttu-id="64f69-1680">64-bitową liczbę całkowitą, który reprezentuje indeks pierwszego wymiaru <see cref="T:System.Array" /> element, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1680">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="64f69-1681">64-bitową liczbę całkowitą reprezentującą sekundę wymiaru indeks <see cref="T:System.Array" /> element, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1681">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index3">
          <span data-ttu-id="64f69-1682">64-bitową liczbę całkowitą, reprezentujący indeks trzeci wymiar <see cref="T:System.Array" /> element, aby ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1682">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1683">Ustawia wartość do elementu w określonej pozycji w trójwymiarowy <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1683">Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1684">Indeksy są określone jako 64-bitowych liczb całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1684">The indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1685"><xref:System.Array.GetLowerBound%2A> i <xref:System.Array.GetUpperBound%2A> metod można ustalić, czy dowolny z indeksów jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1685">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="64f69-1686">Aby uzyskać więcej informacji na temat konwersji, zobacz <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1686">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="64f69-1687">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-1687">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1688">Jeśli <xref:System.Array.SetValue%2A> jest używana do przypisywania `null` do elementu tablicy typów wartości zainicjowaniem wszystkich pól elementu od zera.</span><span class="sxs-lookup"><span data-stu-id="64f69-1688">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="64f69-1689">Wartość elementu nie jest odwołaniem zerowym i nie można jej znaleźć przez wyszukiwanie odwołania zerowego.</span><span class="sxs-lookup"><span data-stu-id="64f69-1689">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1690">Poniższy przykład kodu pokazuje, jak ustawiać i pobierać określoną wartość w tablicy jednowymiarowej lub wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1690">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1691">Bieżące <see cref="T:System.Array" /> nie ma dokładnie trzy wymiarów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1691">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="64f69-1692">
            <paramref name="value" /> Nie można rzutować na typ elementu bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1692">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1693">
            <paramref name="index1" /> lub <paramref name="index2" /> lub <paramref name="index3" /> znajduje się poza zakresem indeksów prawidłowy dla odpowiedniego wymiaru bieżącego <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1693">
              <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-1694">Sortuje elementy z tablicą jednowymiarową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1694">Sorts the elements in a one-dimensional array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array);" />
      <MemberSignature Language="F#" Value="static member Sort : Array -&gt; unit" Usage="System.Array.Sort array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-1695">Jednowymiarowa <see cref="T:System.Array" /> do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1695">The one-dimensional <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1696">Sortuje elementów w całej jednowymiarowa <see cref="T:System.Array" /> przy użyciu <see cref="T:System.IComparable" /> stosowania dla każdego elementu <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1696">Sorts the elements in an entire one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1697">Każdy element `array` musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdego innego elementu w `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1697">Each element of `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="64f69-1698">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1698">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-1699">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-1699">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-1700">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1700">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1701">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1701">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1702">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1702">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-1703">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1703">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-1704">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-1704">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-1705">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1705">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1706">Poniższy przykład kodu pokazuje sposób posortować wartości w <xref:System.Array> przy użyciu domyślna funkcja porównująca i niestandardowej funkcji porównującej Odwraca kolejność sortowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1706">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="64f69-1707">Należy pamiętać, że wynik mogą się różnić w zależności od bieżącej <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1707">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1708">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1708">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1709">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1709">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-1710">Co najmniej jeden element w <paramref name="array" /> nie implementują <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1710">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * Array -&gt; unit" Usage="System.Array.Sort (keys, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="64f69-1711">Jednowymiarowa <see cref="T:System.Array" /> zawierającą klucze ze słownika do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1711">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="64f69-1712">Jednowymiarowa <see cref="T:System.Array" /> zawiera elementy, które odpowiadają każdej z kluczy w <c>klucze</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1712">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1713">- lub - <see langword="null" /> sortowania tylko <c>klucze</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1713">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1714">Sortuje pary jednowymiarowa <see cref="T:System.Array" /> obiektów (jeden zawiera klucze, a drugi zawiera odpowiednie elementy) oparte na klucze w pierwszym <see cref="T:System.Array" /> przy użyciu <see cref="T:System.IComparable" /> stosowania dla każdego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1714">Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1715">Każdy klucz w `keys` <xref:System.Array> ma odpowiadający mu element w `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1715">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="64f69-1716">Po klucz zostaje przeniesiony podczas sortowania, odpowiadający mu element w `items` <xref:System.Array> podobnie ponownie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1716">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="64f69-1717">W związku z tym `items` <xref:System.Array> jest sortowana według rozmieszczenia odpowiadające im klucze w `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1717">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-1718">Każdy klucz w `keys` <xref:System.Array> musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdym innym kluczem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1718">Each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="64f69-1719">Można sortować, jeśli istnieje więcej elementów niż klucze, ale elementy, które mają nie odpowiadające im klucze nie będą sortowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1719">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="64f69-1720">Nie można sortować, jeśli istnieją kluczy więcej niż elementów. Spowoduje to zgłasza <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1720">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="64f69-1721">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1721">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-1722">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-1722">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-1723">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1723">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1724">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1724">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1725">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1725">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-1726">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1726">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-1727">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-1727">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-1728">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `keys`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1728">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `keys`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1729">Poniższy przykład przedstawia sposób sortowania dwie tablice skojarzony, gdzie pierwszy tablica zawiera klucze, a druga tablica zawiera wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-1729">The following example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="64f69-1730">Sortuje są wykonywane przy użyciu domyślna funkcja porównująca i niestandardowej funkcji porównującej Odwraca kolejność sortowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1730">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="64f69-1731">Należy pamiętać, że wynik mogą się różnić w zależności od bieżącej <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1731">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1732">
            <paramref name="keys" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1732">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1733">
            <paramref name="keys" />
            <see cref="T:System.Array" /> Jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1733">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="64f69-1734">- lub - <paramref name="items" /><see cref="T:System.Array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1734">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1735">
            <paramref name="items" /> nie jest <see langword="null" />, a długość <paramref name="keys" /> jest większa niż długość <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1735">
              <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-1736">Co najmniej jeden element w <paramref name="keys" /><see cref="T:System.Array" /> nie implementują <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1736">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * System.Collections.IComparer -&gt; unit" Usage="System.Array.Sort (array, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-1737">Jednowymiarowa tablica, aby posortować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1737">The one-dimensional array to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-1738">Implementacja do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1738">The implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="64f69-1739">- lub - <see langword="null" /> do używania <see cref="T:System.IComparable" /> stosowania dla każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1739">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1740">Sortuje elementy w jednowymiarowa <see cref="T:System.Array" /> przy użyciu określonego <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1740">Sorts the elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1741">Jeśli `comparer` jest `null`, każdy element `array` musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdego innego elementu w `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1741">If `comparer` is `null`, each element of `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="64f69-1742">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1742">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-1743">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-1743">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-1744">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1744">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1745">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1745">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1746">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1746">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-1747">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1747">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-1748">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-1748">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-1749">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1749">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="64f69-1750">.NET Framework zawiera wstępnie zdefiniowane <xref:System.Collections.IComparer> implementacje wymienione w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="64f69-1750">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="64f69-1751">Implementacja</span><span class="sxs-lookup"><span data-stu-id="64f69-1751">Implementation</span></span>|<span data-ttu-id="64f69-1752">Opis</span><span class="sxs-lookup"><span data-stu-id="64f69-1752">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="64f69-1753">Porównuje dowolnymi dwoma obiektami, ale wykonuje bez uwzględniania wielkości liter porównania ciągów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1753">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="64f69-1754">Porównuje dowolnymi dwoma obiektami przy użyciu konwencji sortowania bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="64f69-1754">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="64f69-1755">Porównuje dowolnymi dwoma obiektami za pomocą sortowania konwencjach Niezmienna kultura.</span><span class="sxs-lookup"><span data-stu-id="64f69-1755">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="64f69-1756">Porównuje dwa obiekty typu `T` przy użyciu sortowania domyślnego typu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1756">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="64f69-1757">Może również obsługiwać niestandardowe porównania, podając własne wystąpienie <xref:System.Collections.IComparer> wykonania `comparer` parametru.</span><span class="sxs-lookup"><span data-stu-id="64f69-1757">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="64f69-1758">Przykład robi to poprzez definiowanie `ReverseComparer` klasy, która Odwraca kolejność sortowania domyślnego wystąpienia typu i wykonuje porównania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="64f69-1758">The example does this by defining a `ReverseComparer` class that reverses the default sort order for instances of a type and performs case-insensitive string comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1759">Poniższy przykład sortuje wartości arrayby ciągu, przy użyciu domyślna funkcja porównująca.</span><span class="sxs-lookup"><span data-stu-id="64f69-1759">The following example sorts the values in a string arrayby using the default comparer.</span></span> <span data-ttu-id="64f69-1760">Definiuje również niestandardowego <xref:System.Collections.IComparer> wdrożenia o nazwie `ReverseComparer` który Odwraca kolejność sortowania domyślnego obiektu podczas wykonywania porównania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="64f69-1760">It also defines a custom <xref:System.Collections.IComparer> implementation named `ReverseComparer` that reverses an object's default sort order while performing a case-insensitive string comparison.</span></span> <span data-ttu-id="64f69-1761">Należy pamiętać, że dane wyjściowe mogą się różnić w zależności od bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="64f69-1761">Note that the output might vary depending on the current culture.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1762">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1762">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1763">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1763">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-1764">
            <paramref name="comparer" /> jest <see langword="null" />i co najmniej jeden element w <paramref name="array" /> nie implementują <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1764">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1765">Implementacja <paramref name="comparer" /> spowodował błąd podczas sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1765">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="64f69-1766">Na przykład <paramref name="comparer" /> nie mogą zwracać 0, podczas porównywania elementu z samym sobą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1766">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="64f69-1767">
            <para>.NET Framework 4 i starszych wersji należy używać tylko algorytm Quicksort. Quicksort określa nieprawidłowy comparers w niektórych sytuacjach, w których zgłasza operacji <see cref="T:System.IndexOutOfRangeException" /> wyjątku i zgłasza <see cref="T:System.ArgumentException" /> wyjątek do obiektu wywołującego. Począwszy od [! INCLUDE[net_v45](~/includes/NET-V45-MD.MD)] jest możliwe, że sortowanie operacji poprzednio zwrócił <see cref="T:System.ArgumentException" /> nie spowoduje zgłoszenie wyjątku, ponieważ algorytmy sortowania i heapsort wstawiania nie wykrywaj nieprawidłowe porównania. W większości przypadków dotyczy tablic o mniej niż 16 elementów.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1767">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * Array * System.Collections.IComparer -&gt; unit" Usage="System.Array.Sort (keys, items, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="64f69-1768">Jednowymiarowa <see cref="T:System.Array" /> zawierającą klucze ze słownika do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1768">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="64f69-1769">Jednowymiarowa <see cref="T:System.Array" /> zawiera elementy, które odpowiadają każdej z kluczy w <c>klucze</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1769">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1770">- lub - <see langword="null" /> sortowania tylko <c>klucze</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1770">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-1771">
            <see cref="T:System.Collections.IComparer" /> Wdrożenia do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1771">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="64f69-1772">- lub - <see langword="null" /> do używania <see cref="T:System.IComparable" /> stosowania dla każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1772">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1773">Sortuje pary jednowymiarowa <see cref="T:System.Array" /> obiektów (jeden zawiera klucze, a drugi zawiera odpowiednie elementy) oparte na klucze w pierwszym <see cref="T:System.Array" /> przy użyciu określonego <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1773">Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1774">Każdy klucz w `keys` <xref:System.Array> ma odpowiadający mu element w `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1774">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="64f69-1775">Po klucz zostaje przeniesiony podczas sortowania, odpowiadający mu element w `items` <xref:System.Array> podobnie ponownie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1775">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="64f69-1776">W związku z tym `items` <xref:System.Array> jest sortowana według rozmieszczenia odpowiadające im klucze w `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1776">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-1777">Jeśli `comparer` jest `null`, każdy klucz w `keys` <xref:System.Array> musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdym innym kluczem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1777">If `comparer` is `null`, each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="64f69-1778">Można sortować, jeśli istnieje więcej elementów niż klucze, ale elementy, które mają nie odpowiadające im klucze nie będą sortowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1778">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="64f69-1779">Nie można sortować, jeśli istnieją kluczy więcej niż elementów. Spowoduje to zgłasza <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1779">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="64f69-1780">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1780">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-1781">.NET Framework zawiera wstępnie zdefiniowane <xref:System.Collections.IComparer> implementacje wymienione w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="64f69-1781">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="64f69-1782">Implementacja</span><span class="sxs-lookup"><span data-stu-id="64f69-1782">Implementation</span></span>|<span data-ttu-id="64f69-1783">Opis</span><span class="sxs-lookup"><span data-stu-id="64f69-1783">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="64f69-1784">Porównuje dowolnymi dwoma obiektami, ale wykonuje bez uwzględniania wielkości liter porównania ciągów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1784">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="64f69-1785">Porównuje dowolnymi dwoma obiektami przy użyciu konwencji sortowania bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="64f69-1785">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="64f69-1786">Porównuje dowolnymi dwoma obiektami za pomocą sortowania konwencjach Niezmienna kultura.</span><span class="sxs-lookup"><span data-stu-id="64f69-1786">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="64f69-1787">Porównuje dwa obiekty typu `T` przy użyciu sortowania domyślnego typu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1787">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="64f69-1788">Może również obsługiwać niestandardowe porównania, podając własne wystąpienie <xref:System.Collections.IComparer> wykonania `comparer` parametru.</span><span class="sxs-lookup"><span data-stu-id="64f69-1788">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="64f69-1789">Przykład robi to poprzez definiowanie <xref:System.Collections.IComparer> implementacji Odwraca kolejność sortowania domyślnego, który wykonuje porównania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="64f69-1789">The example does this by defining an <xref:System.Collections.IComparer> implementation that reverses the default sort order and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="64f69-1790">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-1790">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-1791">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1791">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1792">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1792">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1793">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1793">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-1794">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1794">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-1795">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-1795">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-1796">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `keys`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1796">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `keys`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1797">Poniższy przykład przedstawia sposób sortowania dwie tablice skojarzony, gdzie pierwszy tablica zawiera klucze, a druga tablica zawiera wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-1797">The following example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="64f69-1798">Sortuje są wykonywane przy użyciu domyślna funkcja porównująca i niestandardowej funkcji porównującej Odwraca kolejność sortowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1798">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="64f69-1799">Należy pamiętać, że wynik mogą się różnić w zależności od bieżącej <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1799">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1800">
            <paramref name="keys" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1800">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1801">
            <paramref name="keys" />
            <see cref="T:System.Array" /> Jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1801">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="64f69-1802">- lub - <paramref name="items" /><see cref="T:System.Array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1802">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1803">
            <paramref name="items" /> nie jest <see langword="null" />, a długość <paramref name="keys" /> jest większa niż długość <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1803">
              <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="64f69-1804">- lub - wykonania <paramref name="comparer" /> spowodował błąd podczas sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1804">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="64f69-1805">Na przykład <paramref name="comparer" /> nie mogą zwracać 0, podczas porównywania elementu z samym sobą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1805">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-1806">
            <paramref name="comparer" /> jest <see langword="null" />i co najmniej jeden element w <paramref name="keys" /><see cref="T:System.Array" /> nie implementują <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1806">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="64f69-1807">
            <para>.NET Framework 4 i starszych wersji należy używać tylko algorytm Quicksort. Quicksort określa nieprawidłowy comparers w niektórych sytuacjach, w których zgłasza operacji <see cref="T:System.IndexOutOfRangeException" /> wyjątku i zgłasza <see cref="T:System.ArgumentException" /> wyjątek do obiektu wywołującego. Począwszy od [! INCLUDE[net_v45](~/includes/NET-V45-MD.MD)], istnieje możliwość, który sortowanie previouslythrew tej operacji <see cref="T:System.ArgumentException" /> nie spowoduje zgłoszenie wyjątku, ponieważ algorytmy sortowania i heapsort wstawiania nie wykrywaj nieprawidłowe porównania. W większości przypadków dotyczy tablic o mniej niż 16 elementów.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1807">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previouslythrew <see cref="T:System.ArgumentException" /> will not throw an exception, becausethe insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * int * int -&gt; unit" Usage="System.Array.Sort (array, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-1808">Jednowymiarowa <see cref="T:System.Array" /> do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1808">The one-dimensional <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-1809">Indeks początkowy zakresu do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1809">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-1810">Liczba elementów w zakresie do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1810">The number of elements in the range to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1811">Sortuje elementy w zakresie elementów w jednowymiarowa <see cref="T:System.Array" /> przy użyciu <see cref="T:System.IComparable" /> stosowania dla każdego elementu <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1811">Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1812">Każdy element określonego zakresu elementów w `array` musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdego innego elementu w `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1812">Each element within the specified range of elements in `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="64f69-1813">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1813">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-1814">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-1814">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-1815">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1815">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1816">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1816">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1817">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1817">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-1818">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1818">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-1819">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-1819">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-1820">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1820">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1821">Poniższy przykład kodu pokazuje sposób posortować wartości w <xref:System.Array> przy użyciu domyślna funkcja porównująca i niestandardowej funkcji porównującej Odwraca kolejność sortowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1821">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="64f69-1822">Należy pamiętać, że wynik mogą się różnić w zależności od bieżącej <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1822">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1823">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1823">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1824">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1824">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1825">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1825">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-1826">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1826">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1827">
            <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1827">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-1828">Co najmniej jeden element w <paramref name="array" /> nie implementują <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1828">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * Array * int * int -&gt; unit" Usage="System.Array.Sort (keys, items, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="64f69-1829">Jednowymiarowa <see cref="T:System.Array" /> zawierającą klucze ze słownika do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1829">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="64f69-1830">Jednowymiarowa <see cref="T:System.Array" /> zawiera elementy, które odpowiadają każdej z kluczy w <c>klucze</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1830">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1831">- lub - <see langword="null" /> sortowania tylko <c>klucze</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1831">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-1832">Indeks początkowy zakresu do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1832">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-1833">Liczba elementów w zakresie do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1833">The number of elements in the range to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1834">Zakres elementów w parze jednowymiarowa <see cref="T:System.Array" /> obiektów (jeden zawiera klucze, a drugi zawiera odpowiednie elementy) oparte na klucze w pierwszym <see cref="T:System.Array" /> przy użyciu <see cref="T:System.IComparable" /> stosowania dla każdego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1834">Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1835">Każdy klucz w `keys` <xref:System.Array> ma odpowiadający mu element w `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1835">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="64f69-1836">Po klucz zostaje przeniesiony podczas sortowania, odpowiadający mu element w `items` <xref:System.Array> podobnie ponownie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1836">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="64f69-1837">W związku z tym `items` <xref:System.Array> jest sortowana według rozmieszczenia odpowiadające im klucze w `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1837">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-1838">Każdy klucz określonego zakresu elementów w `keys` <xref:System.Array> musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdym innym kluczem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1838">Each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="64f69-1839">Można sortować, jeśli istnieje więcej elementów niż klucze, ale elementy, które mają nie odpowiadające im klucze nie będą sortowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1839">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="64f69-1840">Nie można sortować, jeśli istnieją kluczy więcej niż elementów. Spowoduje to zgłasza <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1840">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="64f69-1841">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1841">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-1842">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-1842">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-1843">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1843">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1844">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1844">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1845">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1845">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-1846">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1846">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-1847">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-1847">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-1848">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1848">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1849">Poniższy przykład kodu pokazuje sposób sortowania dwie tablice skojarzony, gdzie pierwszy tablica zawiera klucze, a druga tablica zawiera wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-1849">The following code example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="64f69-1850">Sortuje są wykonywane przy użyciu domyślna funkcja porównująca i niestandardowej funkcji porównującej Odwraca kolejność sortowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1850">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="64f69-1851">Należy pamiętać, że wynik mogą się różnić w zależności od bieżącej <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1851">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1852">
            <paramref name="keys" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1852">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1853">
            <paramref name="keys" />
            <see cref="T:System.Array" /> Jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1853">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="64f69-1854">- lub - <paramref name="items" /><see cref="T:System.Array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1854">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1855">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1855">
              <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          </span>
          <span data-ttu-id="64f69-1856">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1856">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1857">
            <paramref name="items" /> nie jest <see langword="null" />, a długość <paramref name="keys" /> jest większa niż długość <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1857">
              <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="64f69-1858">- lub - <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="keys" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1858">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1859">- lub - <paramref name="items" /> nie jest <see langword="null" />, i <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="items" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1859">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-1860">Co najmniej jeden element w <paramref name="keys" /><see cref="T:System.Array" /> nie implementują <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1860">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, int index, int length, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, int32 index, int32 length, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, int index, int length, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * int * int * System.Collections.IComparer -&gt; unit" Usage="System.Array.Sort (array, index, length, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="64f69-1861">Jednowymiarowa <see cref="T:System.Array" /> do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1861">The one-dimensional <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-1862">Indeks początkowy zakresu do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1862">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-1863">Liczba elementów w zakresie do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1863">The number of elements in the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-1864">
            <see cref="T:System.Collections.IComparer" /> Wdrożenia do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1864">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="64f69-1865">- lub - <see langword="null" /> do używania <see cref="T:System.IComparable" /> stosowania dla każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1865">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1866">Sortuje elementy w zakresie elementów w jednowymiarowa <see cref="T:System.Array" /> przy użyciu określonego <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1866">Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1867">Jeśli `comparer` jest `null`, każdy element określonego zakresu elementów w `array` musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdego innego elementu w `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1867">If `comparer` is `null`, each element within the specified range of elements in `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="64f69-1868">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1868">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-1869">.NET Framework zawiera wstępnie zdefiniowane <xref:System.Collections.IComparer> implementacje wymienione w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="64f69-1869">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="64f69-1870">Implementacja</span><span class="sxs-lookup"><span data-stu-id="64f69-1870">Implementation</span></span>|<span data-ttu-id="64f69-1871">Opis</span><span class="sxs-lookup"><span data-stu-id="64f69-1871">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="64f69-1872">Porównuje dowolnymi dwoma obiektami, ale wykonuje bez uwzględniania wielkości liter porównania ciągów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1872">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="64f69-1873">Porównuje dowolnymi dwoma obiektami przy użyciu konwencji sortowania bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="64f69-1873">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="64f69-1874">Porównuje dowolnymi dwoma obiektami za pomocą sortowania konwencjach Niezmienna kultura.</span><span class="sxs-lookup"><span data-stu-id="64f69-1874">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="64f69-1875">Porównuje dwa obiekty typu `T` przy użyciu sortowania domyślnego typu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1875">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="64f69-1876">Może również obsługiwać niestandardowe porównania, podając własne wystąpienie <xref:System.Collections.IComparer> wykonania `comparer` parametru.</span><span class="sxs-lookup"><span data-stu-id="64f69-1876">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="64f69-1877">Przykład robi to poprzez definiowanie `ReverseComparer` klasy, która Odwraca kolejność sortowania domyślnego wystąpienia typu i wykonuje porównania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="64f69-1877">The example does this by defining a `ReverseComparer` class that reverses the default sort order for instances of a type and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="64f69-1878">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-1878">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-1879">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1879">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1880">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1880">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1881">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1881">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-1882">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1882">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-1883">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-1883">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-1884">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1884">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1885">Poniższy przykład kodu pokazuje sposób posortować wartości w <xref:System.Array> przy użyciu domyślna funkcja porównująca i niestandardowej funkcji porównującej Odwraca kolejność sortowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1885">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="64f69-1886">Należy pamiętać, że wynik mogą się różnić w zależności od bieżącej <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1886">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1887">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1887">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1888">
            <paramref name="array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1888">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1889">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1889">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-1890">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1890">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1891">
            <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1891">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-1892">- lub - wykonania <paramref name="comparer" /> spowodował błąd podczas sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1892">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="64f69-1893">Na przykład <paramref name="comparer" /> nie mogą zwracać 0, podczas porównywania elementu z samym sobą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1893">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-1894">
            <paramref name="comparer" /> jest <see langword="null" />i co najmniej jeden element w <paramref name="array" /> nie implementują <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1894">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="64f69-1895">
            <para>.NET Framework 4 i starszych wersji należy używać tylko algorytm Quicksort. Quicksort określa nieprawidłowy comparers w niektórych sytuacjach, w których zgłasza operacji <see cref="T:System.IndexOutOfRangeException" /> wyjątku i zgłasza <see cref="T:System.ArgumentException" /> wyjątek do obiektu wywołującego. Począwszy od [! INCLUDE[net_v45](~/includes/NET-V45-MD.MD)] jest możliwe, że sortowanie operacji poprzednio zwrócił <see cref="T:System.ArgumentException" /> nie spowoduje zgłoszenie wyjątku, ponieważ algorytmy sortowania i heapsort wstawiania nie wykrywaj nieprawidłowe porównania. W większości przypadków dotyczy tablic o mniej niż 16 elementów.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1895">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, int index, int length, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, int32 index, int32 length, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, index As Integer, length As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, int index, int length, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * Array * int * int * System.Collections.IComparer -&gt; unit" Usage="System.Array.Sort (keys, items, index, length, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="64f69-1896">Jednowymiarowa <see cref="T:System.Array" /> zawierającą klucze ze słownika do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1896">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="64f69-1897">Jednowymiarowa <see cref="T:System.Array" /> zawiera elementy, które odpowiadają każdej z kluczy w <c>klucze</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1897">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1898">- lub - <see langword="null" /> sortowania tylko <c>klucze</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1898">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-1899">Indeks początkowy zakresu do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1899">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-1900">Liczba elementów w zakresie do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1900">The number of elements in the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-1901">
            <see cref="T:System.Collections.IComparer" /> Wdrożenia do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1901">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="64f69-1902">- lub - <see langword="null" /> do używania <see cref="T:System.IComparable" /> stosowania dla każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1902">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1903">Zakres elementów w parze jednowymiarowa <see cref="T:System.Array" /> obiektów (jeden zawiera klucze, a drugi zawiera odpowiednie elementy) oparte na klucze w pierwszym <see cref="T:System.Array" /> przy użyciu określonego <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1903">Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1904">Każdy klucz w `keys` <xref:System.Array> ma odpowiadający mu element w `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1904">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="64f69-1905">Po klucz zostaje przeniesiony podczas sortowania, odpowiadający mu element w `items` <xref:System.Array> podobnie ponownie.</span><span class="sxs-lookup"><span data-stu-id="64f69-1905">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="64f69-1906">W związku z tym `items` <xref:System.Array> jest sortowana według rozmieszczenia odpowiadające im klucze w `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1906">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-1907">Jeśli `comparer` jest `null`, każdy klucz określonego zakresu elementów w `keys` <xref:System.Array> musi implementować <xref:System.IComparable> interfejsu, aby umożliwiać porównania z każdym innym kluczem.</span><span class="sxs-lookup"><span data-stu-id="64f69-1907">If `comparer` is `null`, each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="64f69-1908">Można sortować, jeśli istnieje więcej elementów niż klucze, ale elementy, które mają nie odpowiadające im klucze nie będą sortowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1908">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="64f69-1909">Nie można sortować, jeśli istnieją kluczy więcej niż elementów. Spowoduje to zgłasza <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1909">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="64f69-1910">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1910">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-1911">.NET Framework zawiera wstępnie zdefiniowane <xref:System.Collections.IComparer> implementacje wymienione w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="64f69-1911">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="64f69-1912">Implementacja</span><span class="sxs-lookup"><span data-stu-id="64f69-1912">Implementation</span></span>|<span data-ttu-id="64f69-1913">Opis</span><span class="sxs-lookup"><span data-stu-id="64f69-1913">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="64f69-1914">Porównuje dowolnymi dwoma obiektami, ale wykonuje bez uwzględniania wielkości liter porównania ciągów.</span><span class="sxs-lookup"><span data-stu-id="64f69-1914">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="64f69-1915">Porównuje dowolnymi dwoma obiektami przy użyciu konwencji sortowania bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="64f69-1915">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="64f69-1916">Porównuje dowolnymi dwoma obiektami za pomocą sortowania konwencjach Niezmienna kultura.</span><span class="sxs-lookup"><span data-stu-id="64f69-1916">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="64f69-1917">Porównuje dwa obiekty typu `T` przy użyciu sortowania domyślnego typu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1917">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="64f69-1918">Może również obsługiwać niestandardowe porównania, podając własne wystąpienie <xref:System.Collections.IComparer> wykonania `comparer` parametru.</span><span class="sxs-lookup"><span data-stu-id="64f69-1918">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="64f69-1919">Przykład robi to poprzez Definiowanie niestandardowego <xref:System.Collections.IComparer> implementacji Odwraca kolejność sortowania domyślnego, który wykonuje porównania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="64f69-1919">The example does this by defining a custom <xref:System.Collections.IComparer> implementation that reverses the default sort order and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="64f69-1920">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-1920">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-1921">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1921">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1922">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1922">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1923">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1923">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-1924">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1924">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-1925">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-1925">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-1926">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1926">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1927">Poniższy przykład kodu pokazuje sposób sortowania dwie tablice skojarzony, gdzie pierwszy tablica zawiera klucze, a druga tablica zawiera wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-1927">The following code example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="64f69-1928">Sortuje są wykonywane przy użyciu domyślna funkcja porównująca i niestandardowej funkcji porównującej Odwraca kolejność sortowania.</span><span class="sxs-lookup"><span data-stu-id="64f69-1928">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="64f69-1929">Należy pamiętać, że wynik mogą się różnić w zależności od bieżącej <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="64f69-1929">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1930">
            <paramref name="keys" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1930">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="64f69-1931">
            <paramref name="keys" />
            <see cref="T:System.Array" /> Jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1931">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="64f69-1932">- lub - <paramref name="items" /><see cref="T:System.Array" /> jest wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1932">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-1933">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1933">
              <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          </span>
          <span data-ttu-id="64f69-1934">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1934">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1935">
            <paramref name="items" /> nie jest <see langword="null" />oraz dolną granicę <paramref name="keys" /> jest niezgodny z dolną granicę <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1935">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="64f69-1936">- lub - <paramref name="items" /> nie jest <see langword="null" />, a długość <paramref name="keys" /> jest większa niż długość <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1936">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="64f69-1937">- lub - <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="keys" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1937">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1938">- lub - <paramref name="items" /> nie jest <see langword="null" />, i <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="items" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1938">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-1939">- lub - wykonania <paramref name="comparer" /> spowodował błąd podczas sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1939">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="64f69-1940">Na przykład <paramref name="comparer" /> nie mogą zwracać 0, podczas porównywania elementu z samym sobą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1940">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-1941">
            <paramref name="comparer" /> jest <see langword="null" />i co najmniej jeden element w <paramref name="keys" /><see cref="T:System.Array" /> nie implementują <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1941">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="64f69-1942">
            <para>.NET Framework 4 i starszych wersji należy używać tylko algorytm Quicksort. Quicksort określa nieprawidłowy comparers w niektórych sytuacjach, w których zgłasza operacji <see cref="T:System.IndexOutOfRangeException" /> wyjątku i zgłasza <see cref="T:System.ArgumentException" /> wyjątek do obiektu wywołującego. Począwszy od [! INCLUDE[net_v45](~/includes/NET-V45-MD.MD)] jest możliwe, że sortowanie operacji poprzednio zwrócił <see cref="T:System.ArgumentException" /> nie spowoduje zgłoszenie wyjątku, ponieważ algorytmy sortowania i heapsort wstawiania nie wykrywaj nieprawidłowe porównania. W większości przypadków dotyczy tablic o mniej niż 16 elementów.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1942">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="static member Sort : 'T[] -&gt; unit" Usage="System.Array.Sort array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1943">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1943">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1944">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1944">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1945">Sortuje elementów w całej <see cref="T:System.Array" /> przy użyciu <see cref="T:System.IComparable`1" /> implementacji interfejsu ogólnego każdy element <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1945">Sorts the elements in an entire <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1946">Każdy element `array` musi implementować <xref:System.IComparable%601> ogólny interfejs umożliwiać porównania z każdego innego elementu w `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1946">Each element of `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="64f69-1947">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1947">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-1948">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-1948">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-1949">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1949">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1950">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1950">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1951">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1951">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-1952">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1952">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-1953">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-1953">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-1954">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1954">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1955">Poniższy przykład kodu pokazuje <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> przeciążenia metody rodzajowej i <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> przeciążenia metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1955">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload.</span></span> <span data-ttu-id="64f69-1956">Tablica ciągów jest tworzony w określonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="64f69-1956">An array of strings is created, in no particular order.</span></span>  
  
 <span data-ttu-id="64f69-1957">Tablica jest wyświetlana, sortowana i ponownie wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1957">The array is displayed, sorted, and displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1958">Wywołania <xref:System.Array.Sort%2A> i <xref:System.Array.BinarySearch%2A> metody rodzajowe nie wygląda inaczej z wywołań, aby ich odpowiedniki nierodzajowe, ponieważ Visual Basic, C# i C++ wnioskować o typie parametru typu ogólnego z typem pierwszego argumentu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1958">The calls to the <xref:System.Array.Sort%2A> and <xref:System.Array.BinarySearch%2A> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="64f69-1959">Jeśli używasz [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) zbadać język pośredni firmy Microsoft (MSIL), widoczny wywoływane metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-1959">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="64f69-1960"><xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> Przeciążenia metody rodzajowej jest następnie używany do wyszukiwania dwa ciągi, jest taki, który nie znajduje się w tablicy i jeden który.</span><span class="sxs-lookup"><span data-stu-id="64f69-1960">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="64f69-1961">Tablica i wartość zwracaną <xref:System.Array.BinarySearch%2A> metody są przekazywane do `ShowWhere` ogólnego metodę, która zawiera wartość indeksu, jeśli ciąg zostanie znaleziony, a w przeciwnym razie elementy ciąg wyszukiwania spadnie między gdyby w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1961">The array and the return value of the <xref:System.Array.BinarySearch%2A> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="64f69-1962">Indeks jest liczbą ujemną, jeśli ciąg nie jest n tablicy, więc `ShowWhere` metoda przyjmuje dopełnienia bitowego (~ operatora w języku C# i Visual C++ `Xor` -1 w języku Visual Basic) Aby uzyskać indeks pierwszego elementu na liście, który jest większy niż ściśle wyszukiwania NG.</span><span class="sxs-lookup"><span data-stu-id="64f69-1962">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearch/cs/source.cs#1)]
 [!code-vb[Array_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1963">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1963">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-1964">Co najmniej jeden element w <paramref name="array" /> nie implementują <see cref="T:System.IComparable`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1964">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : 'T[] * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="System.Array.Sort (array, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1965">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1965">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1966">Jednowymiarowa, zero-base <see cref="T:System.Array" /> do sortowania</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1966">The one-dimensional, zero-base <see cref="T:System.Array" /> to sort</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-1967">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Implementacji interfejsu ogólnego w celu używania przy porównywaniu elementy, lub <see langword="null" /> do używania <see cref="T:System.IComparable`1" /> implementacji interfejsu ogólnego każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1967">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1968">Sortuje elementów w <see cref="T:System.Array" /> przy użyciu określonego <see cref="T:System.Collections.Generic.IComparer`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1968">Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1969">Jeśli `comparer` jest `null`, każdy element `array` musi implementować <xref:System.IComparable%601> ogólny interfejs umożliwiać porównania z każdego innego elementu w `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1969">If `comparer` is `null`, each element of `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="64f69-1970">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1970">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-1971">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-1971">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-1972">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1972">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1973">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1973">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-1974">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1974">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-1975">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1975">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-1976">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-1976">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-1977">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-1977">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-1978">Poniższy przykład kodu pokazuje <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> przeciążenia metody rodzajowej i <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> przeciążenia metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="64f69-1978">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload.</span></span>  
  
 <span data-ttu-id="64f69-1979">Przykładowy kod definiuje alternatywny porównania ciągów o nazwie `ReverseCompare`, który implementuje `IComparer<string>` (`IComparer(Of String)` w języku Visual Basic `IComparer<String^>` w programie Visual C++) interfejs generyczny.</span><span class="sxs-lookup"><span data-stu-id="64f69-1979">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="64f69-1980">Moduł porównujący wywołania <xref:System.String.CompareTo%28System.String%29> metody odwracanie kolejności comparands, dzięki czemu ciągi sortowania dużej do minimum zamiast niskiego na wysoki.</span><span class="sxs-lookup"><span data-stu-id="64f69-1980">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="64f69-1981">Tablica jest wyświetlana, sortowana i ponownie wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="64f69-1981">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="64f69-1982">Tablice muszą być posortowane w celu użycia <xref:System.Array.BinarySearch%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-1982">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-1983">Wywołania <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> i <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> metody rodzajowe nie wygląda inaczej z wywołań, aby ich odpowiedniki nierodzajowe, ponieważ Visual Basic, C# i C++ wnioskować o typie parametru typu ogólnego z typem pierwszego argumentu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1983">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="64f69-1984">Jeśli używasz [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) zbadać język pośredni firmy Microsoft (MSIL), widoczny wywoływane metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-1984">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="64f69-1985"><xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> Przeciążenia metody rodzajowej jest następnie używany do wyszukiwania dwa ciągi, jest taki, który nie znajduje się w tablicy i jeden który.</span><span class="sxs-lookup"><span data-stu-id="64f69-1985">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="64f69-1986">Tablica i wartość zwracaną <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> metody są przekazywane do `ShowWhere` ogólnego metodę, która zawiera wartość indeksu, jeśli ciąg zostanie znaleziony, a w przeciwnym razie elementy ciąg wyszukiwania spadnie między gdyby w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-1986">The array and the return value of the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="64f69-1987">Indeks jest liczbą ujemną, jeśli ciąg nie jest n tablicy, więc `ShowWhere` metoda przyjmuje dopełnienia bitowego (~ operatora w języku C# i Visual C++ `Xor` -1 w języku Visual Basic) Aby uzyskać indeks pierwszego elementu na liście, który jest większy niż ściśle wyszukiwania NG.</span><span class="sxs-lookup"><span data-stu-id="64f69-1987">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[Array_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-1988">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1988">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-1989">
            <paramref name="comparer" /> jest <see langword="null" />i co najmniej jeden element w <paramref name="array" /> nie implementują <see cref="T:System.IComparable`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1989">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-1990">Implementacja <paramref name="comparer" /> spowodował błąd podczas sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1990">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="64f69-1991">Na przykład <paramref name="comparer" /> nie mogą zwracać 0, podczas porównywania elementu z samym sobą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1991">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="64f69-1992">
            <para>.NET Framework 4 i starszych wersji należy używać tylko algorytm Quicksort. Quicksort określa nieprawidłowy comparers w niektórych sytuacjach, w których zgłasza operacji <see cref="T:System.IndexOutOfRangeException" /> wyjątku i zgłasza <see cref="T:System.ArgumentException" /> wyjątek do obiektu wywołującego. Począwszy od [! INCLUDE[net_v45](~/includes/NET-V45-MD.MD)] jest możliwe, że sortowanie operacji poprzednio zwrócił <see cref="T:System.ArgumentException" /> nie spowoduje zgłoszenie wyjątku, ponieważ algorytmy sortowania i heapsort wstawiania nie wykrywaj nieprawidłowe porównania. W większości przypadków dotyczy tablic o mniej niż 16 elementów.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1992">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, class System.Comparison`1&lt;!!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Comparison{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="static member Sort : 'T[] * Comparison&lt;'T&gt; -&gt; unit" Usage="System.Array.Sort (array, comparison)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-1993">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1993">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-1994">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> sortowania</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1994">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="64f69-1995">
            <see cref="T:System.Comparison`1" /> Do użycia podczas porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1995">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-1996">Sortuje elementów w <see cref="T:System.Array" /> przy użyciu określonego <see cref="T:System.Comparison`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-1996">Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Comparison`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-1997">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-1997">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-1998">Ta metoda używa algorytmu introspective sortowania (introsort) w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-1998">This method uses introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-1999">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-1999">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2000">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2000">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2001">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2001">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-2002">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-2002">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-2003">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-2003">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-2004">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-2004">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-2005">Poniższy przykład kodu pokazuje <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-2005">The following code example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="64f69-2006">Przykładowy kod definiuje metodę porównywania alternatywne ciągi, o nazwie `CompareDinosByLength`.</span><span class="sxs-lookup"><span data-stu-id="64f69-2006">The code example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="64f69-2007">Ta metoda działa w następujący sposób: najpierw comparandsare sprawdzane pod kątem`null`, odwołanie o wartości null jest traktowany jako mniejsza niż inne niż null.</span><span class="sxs-lookup"><span data-stu-id="64f69-2007">This method works as follows: First, the comparandsare tested for`null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="64f69-2008">Po drugie długości ciągu zostaną porównane, a ciąg dłuższy jest uważany większa.</span><span class="sxs-lookup"><span data-stu-id="64f69-2008">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="64f69-2009">Trzecie Jeśli długości są takie same, porównania ciągów zwykłej jest używany.</span><span class="sxs-lookup"><span data-stu-id="64f69-2009">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="64f69-2010">Tablica ciągów jest tworzony i wypełniane przy użyciu czterech ciągów, w określonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="64f69-2010">A array of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="64f69-2011">Lista zawiera także pustego ciągu i odwołanie o wartości null.</span><span class="sxs-lookup"><span data-stu-id="64f69-2011">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="64f69-2012">Zostanie wyświetlona lista sortowane przy użyciu <xref:System.Comparison%601> Delegat ogólny reprezentujący `CompareDinosByLength` metody i ponownie wyświetlone.</span><span class="sxs-lookup"><span data-stu-id="64f69-2012">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[Array_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[Array_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortComparison/cs/source.cs#1)]
 [!code-vb[Array_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortComparison/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-2013">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2013">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-2014">- lub - <paramref name="comparison" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2014">-or-  <paramref name="comparison" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-2015">Implementacja <paramref name="comparison" /> spowodował błąd podczas sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2015">The implementation of <paramref name="comparison" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="64f69-2016">Na przykład <paramref name="comparison" /> nie mogą zwracać 0, podczas porównywania elementu z samym sobą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2016">For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="64f69-2017">
            <para>.NET Framework 4 i starszych wersji należy używać tylko algorytm Quicksort. Quicksort określa nieprawidłowy comparers w niektórych sytuacjach, w których zgłasza operacji <see cref="T:System.IndexOutOfRangeException" /> wyjątku i zgłasza <see cref="T:System.ArgumentException" /> wyjątek do obiektu wywołującego. Począwszy od [! INCLUDE[net_v45](~/includes/NET-V45-MD.MD)] jest możliwe, że sortowanie operacji poprzednio zwrócił <see cref="T:System.ArgumentException" /> nie spowoduje zgłoszenie wyjątku, ponieważ algorytmy sortowania i heapsort wstawiania nie wykrywaj nieprawidłowe porównania. W większości przypadków dotyczy tablic o mniej niż 16 elementów.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2017">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Comparison`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Sort : 'T[] * int * int -&gt; unit" Usage="System.Array.Sort (array, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-2018">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2018">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-2019">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> sortowania</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2019">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-2020">Indeks początkowy zakresu do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2020">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-2021">Liczba elementów w zakresie do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2021">The number of elements in the range to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2022">Sortuje elementy w zakresie elementów w <see cref="T:System.Array" /> przy użyciu <see cref="T:System.IComparable`1" /> implementacji interfejsu ogólnego każdy element <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2022">Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2023">Każdy element określonego zakresu elementów w `array` musi implementować <xref:System.IComparable%601> ogólny interfejs umożliwiać porównania z każdego innego elementu w `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-2023">Each element within the specified range of elements in `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="64f69-2024">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-2024">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-2025">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-2025">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-2026">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2026">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2027">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2027">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2028">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2028">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-2029">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-2029">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-2030">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-2030">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-2031">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-2031">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-2032">Poniższy przykład kodu pokazuje <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> przeciążenia metody rodzajowej i <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> przeciążenia metody ogólnej sortowania zakresu w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-2032">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload and the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload for sorting a range in an array.</span></span>  
  
 <span data-ttu-id="64f69-2033">Przykładowy kod definiuje alternatywny porównania ciągów o nazwie `ReverseCompare`, który implementuje `IComparer<string>` (`IComparer(Of String)` w języku Visual Basic `IComparer<String^>` w programie Visual C++) interfejs generyczny.</span><span class="sxs-lookup"><span data-stu-id="64f69-2033">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="64f69-2034">Moduł porównujący wywołania <xref:System.String.CompareTo%28System.String%29> metody odwracanie kolejności comparands, dzięki czemu ciągi sortowania dużej do minimum zamiast niskiego na wysoki.</span><span class="sxs-lookup"><span data-stu-id="64f69-2034">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="64f69-2035">Przykład kodu tworzy i wyświetla tablicę nazw kolorowanka, składające się z trzech zwierząt roślinożernych następują trzy mięsożerców (tyrannosaurids, aby była precyzyjna).</span><span class="sxs-lookup"><span data-stu-id="64f69-2035">The code example creates and displays an array of dinosaur names, consisting of three herbivores followed by three carnivores (tyrannosaurids, to be precise).</span></span> <span data-ttu-id="64f69-2036"><xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Przeciążenia metody rodzajowej jest używane do sortowania ostatnie trzy elementy tablicy, która jest następnie wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="64f69-2036">The <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload is used to sort the last three elements of the array, which is then displayed.</span></span> <span data-ttu-id="64f69-2037"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> Przeciążenia metody rodzajowej jest używany z `ReverseCompare` w odwrotnej kolejności sortowania ostatnie trzy elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-2037">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is used with `ReverseCompare` to sort the last three elements in reverse order.</span></span> <span data-ttu-id="64f69-2038">Dokładnie mylić dinozaurów są wyświetlane ponownie.</span><span class="sxs-lookup"><span data-stu-id="64f69-2038">The thoroughly confused dinosaurs are displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-2039">Wywołania <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> i <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> metody rodzajowe nie wygląda inaczej z wywołań, aby ich odpowiedniki nierodzajowe, ponieważ Visual Basic, C# i C++ wnioskować o typie parametru typu ogólnego z typem pierwszego argumentu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2039">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="64f69-2040">Jeśli używasz [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) zbadać język pośredni firmy Microsoft (MSIL), widoczny wywoływane metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-2040">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_SortIntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortIntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortIntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortIntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_SortIntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortIntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-2041">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2041">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-2042">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2042">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-2043">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2043">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-2044">
            <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2044">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-2045">Co najmniej jeden element w <paramref name="array" /> nie implementują <see cref="T:System.IComparable`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2045">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, int index, int length, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, int32 index, int32 length, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), index As Integer, length As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, int index, int length, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : 'T[] * int * int * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="System.Array.Sort (array, index, length, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-2046">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2046">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-2047">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2047">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-2048">Indeks początkowy zakresu do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2048">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-2049">Liczba elementów w zakresie do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2049">The number of elements in the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-2050">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Implementacji interfejsu ogólnego w celu używania przy porównywaniu elementy, lub <see langword="null" /> do używania <see cref="T:System.IComparable`1" /> implementacji interfejsu ogólnego każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2050">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2051">Sortuje elementy w zakresie elementów w <see cref="T:System.Array" /> przy użyciu określonego <see cref="T:System.Collections.Generic.IComparer`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2051">Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2052">Jeśli `comparer` jest `null`, każdy element określonego zakresu elementów w `array` musi implementować <xref:System.IComparable%601> ogólny interfejs umożliwiać porównania z każdego innego elementu w `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-2052">If `comparer` is `null`, each element within the specified range of elements in `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="64f69-2053">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-2053">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-2054">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-2054">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-2055">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2055">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2056">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2056">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2057">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2057">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-2058">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-2058">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-2059">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-2059">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-2060">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-2060">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-2061">Poniższy przykład kodu pokazuje <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> przeciążenia metody rodzajowej i <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> przeciążenia metody ogólnej sortowania zakresu w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-2061">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload and the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload for sorting a range in an array.</span></span>  
  
 <span data-ttu-id="64f69-2062">Przykładowy kod definiuje alternatywny porównania ciągów o nazwie `ReverseCompare`, który implementuje `IComparer<string>` (`IComparer(Of String)` w języku Visual Basic `IComparer<String^>` w programie Visual C++) interfejs generyczny.</span><span class="sxs-lookup"><span data-stu-id="64f69-2062">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="64f69-2063">Moduł porównujący wywołania <xref:System.String.CompareTo%28System.String%29> metody odwracanie kolejności comparands, dzięki czemu ciągi sortowania dużej do minimum zamiast niskiego na wysoki.</span><span class="sxs-lookup"><span data-stu-id="64f69-2063">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="64f69-2064">Przykład kodu tworzy i wyświetla tablicę nazw kolorowanka, składające się z trzech zwierząt roślinożernych następują trzy mięsożerców (tyrannosaurids, aby była precyzyjna).</span><span class="sxs-lookup"><span data-stu-id="64f69-2064">The code example creates and displays an array of dinosaur names, consisting of three herbivores followed by three carnivores (tyrannosaurids, to be precise).</span></span> <span data-ttu-id="64f69-2065"><xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Przeciążenia metody rodzajowej jest używane do sortowania ostatnie trzy elementy tablicy, która jest następnie wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="64f69-2065">The <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload is used to sort the last three elements of the array, which is then displayed.</span></span> <span data-ttu-id="64f69-2066"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> Przeciążenia metody rodzajowej jest używany z `ReverseCompare` w odwrotnej kolejności sortowania ostatnie trzy elementy.</span><span class="sxs-lookup"><span data-stu-id="64f69-2066">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is used with `ReverseCompare` to sort the last three elements in reverse order.</span></span> <span data-ttu-id="64f69-2067">Dokładnie mylić dinozaurów są wyświetlane ponownie.</span><span class="sxs-lookup"><span data-stu-id="64f69-2067">The thoroughly confused dinosaurs are displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-2068">Wywołania <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> i <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> metody rodzajowe nie wygląda inaczej z wywołań, aby ich odpowiedniki nierodzajowe, ponieważ Visual Basic, C# i C++ wnioskować o typie parametru typu ogólnego z typem pierwszego argumentu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2068">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="64f69-2069">Jeśli używasz [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) zbadać język pośredni firmy Microsoft (MSIL), widoczny wywoływane metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-2069">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_SortIntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortIntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortIntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortIntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_SortIntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortIntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-2070">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2070">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-2071">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2071">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-2072">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2072">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-2073">
            <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2073">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="64f69-2074">- lub - wykonania <paramref name="comparer" /> spowodował błąd podczas sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2074">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="64f69-2075">Na przykład <paramref name="comparer" /> nie mogą zwracać 0, podczas porównywania elementu z samym sobą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2075">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-2076">
            <paramref name="comparer" /> jest <see langword="null" />i co najmniej jeden element w <paramref name="array" /> nie implementują <see cref="T:System.IComparable`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2076">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="64f69-2077">
            <para>.NET Framework 4 i starszych wersji należy używać tylko algorytm Quicksort. Quicksort określa nieprawidłowy comparers w niektórych sytuacjach, w których zgłasza operacji <see cref="T:System.IndexOutOfRangeException" /> wyjątku i zgłasza <see cref="T:System.ArgumentException" /> wyjątek do obiektu wywołującego. Począwszy od [! INCLUDE[net_v45](~/includes/NET-V45-MD.MD)] jest możliwe, że sortowanie operacji poprzednio zwrócił <see cref="T:System.ArgumentException" /> nie spowoduje zgłoszenie wyjątku, ponieważ algorytmy sortowania i heapsort wstawiania nie wykrywaj nieprawidłowe porównania. W większości przypadków dotyczy tablic o mniej niż 16 elementów.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2077">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Sort : 'Key[] * 'Value[] -&gt; unit" Usage="System.Array.Sort (keys, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="64f69-2078">Typ elementów tablicy klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2078">The type of the elements of the key array.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="64f69-2079">Typ elementów tablicy elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2079">The type of the elements of the items array.</span>
          </span>
        </typeparam>
        <param name="keys">
          <span data-ttu-id="64f69-2080">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> zawierającą klucze ze słownika do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2080">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="64f69-2081">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> zawiera elementy, które muszą być w <c>klucze</c>, lub <see langword="null" /> sortowania tylko <c>klucze</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2081">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2082">Sortuje para <see cref="T:System.Array" /> obiektów (jeden zawiera klucze, a drugi zawiera odpowiednie elementy) oparte na klucze w pierwszym <see cref="T:System.Array" /> przy użyciu <see cref="T:System.IComparable`1" /> implementacji interfejsu ogólnego każdego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2082">Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2083">Każdy klucz w `keys` <xref:System.Array> ma odpowiadający mu element w `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-2083">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="64f69-2084">Po klucz zostaje przeniesiony podczas sortowania, odpowiadający mu element w `items` <xref:System.Array> podobnie ponownie.</span><span class="sxs-lookup"><span data-stu-id="64f69-2084">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="64f69-2085">W związku z tym `items` <xref:System.Array> jest sortowana według rozmieszczenia odpowiadające im klucze w `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-2085">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-2086">Każdy klucz w `keys` <xref:System.Array> musi implementować <xref:System.IComparable%601> ogólny interfejs umożliwiać porównania z każdym innym kluczem.</span><span class="sxs-lookup"><span data-stu-id="64f69-2086">Each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="64f69-2087">Można sortować, jeśli istnieje więcej elementów niż klucze, ale elementy, które mają nie odpowiadające im klucze nie będą sortowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-2087">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="64f69-2088">Nie można sortować, jeśli istnieją kluczy więcej niż elementów. Spowoduje to zgłasza <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-2088">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="64f69-2089">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-2089">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-2090">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-2090">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-2091">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2091">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2092">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2092">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2093">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2093">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-2094">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-2094">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-2095">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-2095">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-2096">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-2096">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-2097">Poniższy przykład kodu pokazuje <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, i <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> przeciążenia metody ogólnej, do sortowania par tablicami reprezentującymi kluczy i wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-2097">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="64f69-2098">Przykładowy kod definiuje alternatywny porównania ciągów o nazwie `ReverseCompare`, który implementuje `IComparer<string>` (`IComparer(Of String)` w języku Visual Basic `IComparer<String^>` w programie Visual C++) interfejs generyczny.</span><span class="sxs-lookup"><span data-stu-id="64f69-2098">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="64f69-2099">Moduł porównujący wywołania <xref:System.String.CompareTo%28System.String%29> metody odwracanie kolejności comparands, dzięki czemu ciągi sortowania dużej do minimum zamiast niskiego na wysoki.</span><span class="sxs-lookup"><span data-stu-id="64f69-2099">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="64f69-2100">Przykład kodu tworzy i wyświetla tablicę nazw kolorowanka (klucze) i tablica liczb całkowitych reprezentująca maksymalną długość każdej kolorowanka metry (wartości).</span><span class="sxs-lookup"><span data-stu-id="64f69-2100">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="64f69-2101">Tablice są następnie wyświetlania i sortowania kilka razy:</span><span class="sxs-lookup"><span data-stu-id="64f69-2101">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="64f69-2102"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> Przeciążenie umożliwia sortowanie tablic, zarówno w kolejności nazw kolorowanka w pierwszym tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-2102">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="64f69-2103"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> Przeciążenia i wystąpienie `ReverseCompare` służą do odwracania kolejności sortowania par tablic.</span><span class="sxs-lookup"><span data-stu-id="64f69-2103">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="64f69-2104"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Przeciążenia jest używane do sortowania ostatnie trzy elementy zarówno tablic.</span><span class="sxs-lookup"><span data-stu-id="64f69-2104">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="64f69-2105"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> Przeciążenia jest używane do sortowania ostatnie trzy elementy zarówno tablic w odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="64f69-2105">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-2106">Wywołań metody rodzajowe nie wygląda inaczej z wywołań, aby ich odpowiedniki nierodzajowe, ponieważ Visual Basic, C# i C++ wnioskować o typie parametru typu ogólnego z pierwszych dwóch argumentów typu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2106">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="64f69-2107">Jeśli używasz [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) zbadać język pośredni firmy Microsoft (MSIL), widoczny wywoływane metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-2107">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-2108">
            <paramref name="keys" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2108">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-2109">
            <paramref name="items" /> nie jest <see langword="null" />oraz dolną granicę <paramref name="keys" /> jest niezgodny z dolną granicę <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2109">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="64f69-2110">- lub - <paramref name="items" /> nie jest <see langword="null" />, a długość <paramref name="keys" /> jest większa niż długość <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2110">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-2111">Co najmniej jeden element w <paramref name="keys" /><see cref="T:System.Array" /> nie implementują <see cref="T:System.IComparable`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2111">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : 'Key[] * 'Value[] * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; unit" Usage="System.Array.Sort (keys, items, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="64f69-2112">Typ elementów tablicy klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2112">The type of the elements of the key array.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="64f69-2113">Typ elementów tablicy elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2113">The type of the elements of the items array.</span>
          </span>
        </typeparam>
        <param name="keys">
          <span data-ttu-id="64f69-2114">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> zawierającą klucze ze słownika do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2114">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="64f69-2115">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> zawiera elementy, które muszą być w <c>klucze</c>, lub <see langword="null" /> sortowania tylko <c>klucze</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2115">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-2116">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Implementacji interfejsu ogólnego w celu używania przy porównywaniu elementy, lub <see langword="null" /> do używania <see cref="T:System.IComparable`1" /> implementacji interfejsu ogólnego każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2116">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2117">Sortuje para <see cref="T:System.Array" /> obiektów (jeden zawiera klucze, a drugi zawiera odpowiednie elementy) oparte na klucze w pierwszym <see cref="T:System.Array" /> przy użyciu określonego <see cref="T:System.Collections.Generic.IComparer`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2117">Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2118">Każdy klucz w `keys` <xref:System.Array> ma odpowiadający mu element w `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-2118">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="64f69-2119">Po klucz zostaje przeniesiony podczas sortowania, odpowiadający mu element w `items` <xref:System.Array> podobnie ponownie.</span><span class="sxs-lookup"><span data-stu-id="64f69-2119">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="64f69-2120">W związku z tym `items` <xref:System.Array> jest sortowana według rozmieszczenia odpowiadające im klucze w `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-2120">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-2121">Jeśli `comparer` jest `null`, każdy klucz w `keys` <xref:System.Array> musi implementować <xref:System.IComparable%601> ogólny interfejs umożliwiać porównania z każdym innym kluczem.</span><span class="sxs-lookup"><span data-stu-id="64f69-2121">If `comparer` is `null`, each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="64f69-2122">Można sortować, jeśli istnieje więcej elementów niż klucze, ale elementy, które mają nie odpowiadające im klucze nie będą sortowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-2122">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="64f69-2123">Nie można sortować, jeśli istnieją kluczy więcej niż elementów. Spowoduje to zgłasza <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-2123">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="64f69-2124">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-2124">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-2125">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-2125">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-2126">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2126">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2127">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2127">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2128">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2128">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-2129">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-2129">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-2130">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-2130">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-2131">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-2131">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-2132">Poniższy przykład kodu pokazuje <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 >,<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, i <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> przeciążenia metody ogólnej, do sortowania par tablicami reprezentującymi kluczy i wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-2132">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>,<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="64f69-2133">Przykładowy kod definiuje alternatywny porównania ciągów o nazwie `ReverseCompare`, który implementuje `IComparer<string>` (`IComparer(Of String)` w języku Visual Basic `IComparer<String^>` w programie Visual C++) interfejs generyczny.</span><span class="sxs-lookup"><span data-stu-id="64f69-2133">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="64f69-2134">Moduł porównujący wywołania <xref:System.String.CompareTo%28System.String%29> metody odwracanie kolejności comparands, dzięki czemu ciągi sortowania dużej do minimum zamiast niskiego na wysoki.</span><span class="sxs-lookup"><span data-stu-id="64f69-2134">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="64f69-2135">Przykład kodu tworzy i wyświetla tablicę nazw kolorowanka (klucze) i tablica liczb całkowitych reprezentująca maksymalną długość każdej kolorowanka metry (wartości).</span><span class="sxs-lookup"><span data-stu-id="64f69-2135">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="64f69-2136">Tablice są następnie wyświetlania i sortowania kilka razy:</span><span class="sxs-lookup"><span data-stu-id="64f69-2136">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="64f69-2137"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> Przeciążenie umożliwia sortowanie tablic, zarówno w kolejności nazw kolorowanka w pierwszym tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-2137">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="64f69-2138">[\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > przeciążenia i wystąpienie `ReverseCompare` służą do odwracania kolejności sortowania sparowanego tablic.</span><span class="sxs-lookup"><span data-stu-id="64f69-2138">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="64f69-2139"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Przeciążenia jest używane do sortowania ostatnie trzy elementy zarówno tablic.</span><span class="sxs-lookup"><span data-stu-id="64f69-2139">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="64f69-2140"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> Przeciążenia jest używane do sortowania ostatnie trzy elementy zarówno tablic w odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="64f69-2140">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-2141">Wywołań metody rodzajowe nie wygląda inaczej z wywołań, aby ich odpowiedniki nierodzajowe, ponieważ Visual Basic, C# i C++ wnioskować o typie parametru typu ogólnego z pierwszych dwóch argumentów typu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2141">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="64f69-2142">Jeśli używasz [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) zbadać język pośredni firmy Microsoft (MSIL), widoczny wywoływane metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-2142">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-2143">
            <paramref name="keys" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2143">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-2144">
            <paramref name="items" /> nie jest <see langword="null" />oraz dolną granicę <paramref name="keys" /> jest niezgodny z dolną granicę <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2144">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="64f69-2145">- lub - <paramref name="items" /> nie jest <see langword="null" />, a długość <paramref name="keys" /> jest większa niż długość <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2145">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="64f69-2146">- lub - wykonania <paramref name="comparer" /> spowodował błąd podczas sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2146">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="64f69-2147">Na przykład <paramref name="comparer" /> nie mogą zwracać 0, podczas porównywania elementu z samym sobą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2147">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-2148">
            <paramref name="comparer" /> jest <see langword="null" />i co najmniej jeden element w <paramref name="keys" /><see cref="T:System.Array" /> nie implementują <see cref="T:System.IComparable`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2148">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="64f69-2149">
            <para>.NET Framework 4 i starszych wersji należy używać tylko algorytm Quicksort. Quicksort określa nieprawidłowy comparers w niektórych sytuacjach, w których zgłasza operacji <see cref="T:System.IndexOutOfRangeException" /> wyjątku i zgłasza <see cref="T:System.ArgumentException" /> wyjątek do obiektu wywołującego. Począwszy od [! INCLUDE[net_v45](~/includes/NET-V45-MD.MD)] jest możliwe, że sortowanie operacji poprzednio zwrócił <see cref="T:System.ArgumentException" /> nie spowoduje zgłoszenie wyjątku, ponieważ algorytmy sortowania i heapsort wstawiania nie wykrywaj nieprawidłowe porównania. W większości przypadków dotyczy tablic o mniej niż 16 elementów.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2149">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Sort : 'Key[] * 'Value[] * int * int -&gt; unit" Usage="System.Array.Sort (keys, items, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="64f69-2150">Typ elementów tablicy klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2150">The type of the elements of the key array.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="64f69-2151">Typ elementów tablicy elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2151">The type of the elements of the items array.</span>
          </span>
        </typeparam>
        <param name="keys">
          <span data-ttu-id="64f69-2152">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> zawierającą klucze ze słownika do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2152">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="64f69-2153">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> zawiera elementy, które muszą być w <c>klucze</c>, lub <see langword="null" /> sortowania tylko <c>klucze</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2153">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-2154">Indeks początkowy zakresu do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2154">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-2155">Liczba elementów w zakresie do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2155">The number of elements in the range to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2156">Zakres elementów w parze <see cref="T:System.Array" /> obiektów (jeden zawiera klucze, a drugi zawiera odpowiednie elementy) oparte na klucze w pierwszym <see cref="T:System.Array" /> przy użyciu <see cref="T:System.IComparable`1" /> implementacji interfejsu ogólnego każdego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2156">Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2157">Każdy klucz w `keys` <xref:System.Array> ma odpowiadający mu element w `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-2157">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="64f69-2158">Po klucz zostaje przeniesiony podczas sortowania, odpowiadający mu element w `items` <xref:System.Array> podobnie ponownie.</span><span class="sxs-lookup"><span data-stu-id="64f69-2158">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="64f69-2159">W związku z tym `items` <xref:System.Array> jest sortowana według rozmieszczenia odpowiadające im klucze w `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-2159">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-2160">Każdy klucz określonego zakresu elementów w `keys` <xref:System.Array> musi implementować <xref:System.IComparable%601> ogólny interfejs umożliwiać porównania z każdym innym kluczem.</span><span class="sxs-lookup"><span data-stu-id="64f69-2160">Each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="64f69-2161">Można sortować, jeśli istnieje więcej elementów niż klucze, ale elementy, które mają nie odpowiadające im klucze nie będą sortowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-2161">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="64f69-2162">Nie można sortować, jeśli istnieją kluczy więcej niż elementów. Spowoduje to zgłasza <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-2162">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="64f69-2163">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-2163">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-2164">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-2164">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-2165">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2165">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2166">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2166">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2167">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2167">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-2168">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-2168">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-2169">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-2169">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-2170">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-2170">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-2171">Poniższy przykład kodu pokazuje <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29 >, a <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> przeciążenia metody ogólnej do sortowania par tablicami reprezentującymi kluczy i wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-2171">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="64f69-2172">Przykładowy kod definiuje alternatywny porównania ciągów o nazwie `ReverseCompare`, który implementuje `IComparer<string>` (`IComparer(Of String)` w języku Visual Basic `IComparer<String^>` w programie Visual C++) interfejs generyczny.</span><span class="sxs-lookup"><span data-stu-id="64f69-2172">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="64f69-2173">Moduł porównujący wywołania <xref:System.String.CompareTo%28System.String%29> metody odwracanie kolejności comparands, dzięki czemu ciągi sortowania dużej do minimum zamiast niskiego na wysoki.</span><span class="sxs-lookup"><span data-stu-id="64f69-2173">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="64f69-2174">Przykład kodu tworzy i wyświetla tablicę nazw kolorowanka (klucze) i tablica liczb całkowitych reprezentująca maksymalną długość każdej kolorowanka metry (wartości).</span><span class="sxs-lookup"><span data-stu-id="64f69-2174">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="64f69-2175">Tablice są następnie wyświetlania i sortowania kilka razy:</span><span class="sxs-lookup"><span data-stu-id="64f69-2175">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="64f69-2176"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> Przeciążenie umożliwia sortowanie tablic, zarówno w kolejności nazw kolorowanka w pierwszym tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-2176">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="64f69-2177"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> Przeciążenia i wystąpienie `ReverseCompare` służą do odwracania kolejności sortowania par tablic.</span><span class="sxs-lookup"><span data-stu-id="64f69-2177">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="64f69-2178">[\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29 > przeciążenia jest używane do sortowania ostatnie trzy elementy zarówno tablic.</span><span class="sxs-lookup"><span data-stu-id="64f69-2178">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="64f69-2179"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> Przeciążenia jest używane do sortowania ostatnie trzy elementy zarówno tablic w odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="64f69-2179">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-2180">Wywołań metody rodzajowe nie wygląda inaczej z wywołań, aby ich odpowiedniki nierodzajowe, ponieważ Visual Basic, C# i C++ wnioskować o typie parametru typu ogólnego z pierwszych dwóch argumentów typu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2180">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="64f69-2181">Jeśli używasz [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) zbadać język pośredni firmy Microsoft (MSIL), widoczny wywoływane metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-2181">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-2182">
            <paramref name="keys" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2182">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-2183">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2183">
              <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          </span>
          <span data-ttu-id="64f69-2184">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2184">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-2185">
            <paramref name="items" /> nie jest <see langword="null" />oraz dolną granicę <paramref name="keys" /> jest niezgodny z dolną granicę <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2185">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="64f69-2186">- lub - <paramref name="items" /> nie jest <see langword="null" />, a długość <paramref name="keys" /> jest większa niż długość <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2186">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="64f69-2187">- lub - <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="keys" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2187">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-2188">- lub - <paramref name="items" /> nie jest <see langword="null" />, i <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="items" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2188">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-2189">Co najmniej jeden element w <paramref name="keys" /><see cref="T:System.Array" /> nie implementują <see cref="T:System.IComparable`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2189">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, int index, int length, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, int32 index, int32 length, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), index As Integer, length As Integer, comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, int index, int length, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : 'Key[] * 'Value[] * int * int * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; unit" Usage="System.Array.Sort (keys, items, index, length, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="64f69-2190">Typ elementów tablicy klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2190">The type of the elements of the key array.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="64f69-2191">Typ elementów tablicy elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2191">The type of the elements of the items array.</span>
          </span>
        </typeparam>
        <param name="keys">
          <span data-ttu-id="64f69-2192">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> zawierającą klucze ze słownika do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2192">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="64f69-2193">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> zawiera elementy, które muszą być w <c>klucze</c>, lub <see langword="null" /> sortowania tylko <c>klucze</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2193">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="64f69-2194">Indeks początkowy zakresu do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2194">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="64f69-2195">Liczba elementów w zakresie do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2195">The number of elements in the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-2196">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Implementacji interfejsu ogólnego w celu używania przy porównywaniu elementy, lub <see langword="null" /> do używania <see cref="T:System.IComparable`1" /> implementacji interfejsu ogólnego każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2196">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2197">Zakres elementów w parze <see cref="T:System.Array" /> obiektów (jeden zawiera klucze, a drugi zawiera odpowiednie elementy) oparte na klucze w pierwszym <see cref="T:System.Array" /> przy użyciu określonego <see cref="T:System.Collections.Generic.IComparer`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2197">Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2198">Każdy klucz w `keys` <xref:System.Array> ma odpowiadający mu element w `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-2198">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="64f69-2199">Po klucz zostaje przeniesiony podczas sortowania, odpowiadający mu element w `items` <xref:System.Array> podobnie ponownie.</span><span class="sxs-lookup"><span data-stu-id="64f69-2199">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="64f69-2200">W związku z tym `items` <xref:System.Array> jest sortowana według rozmieszczenia odpowiadające im klucze w `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="64f69-2200">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="64f69-2201">Jeśli `comparer` jest `null`, każdy klucz określonego zakresu elementów w `keys` <xref:System.Array> musi implementować <xref:System.IComparable%601> ogólny interfejs umożliwiać porównania z każdym innym kluczem.</span><span class="sxs-lookup"><span data-stu-id="64f69-2201">If `comparer` is `null`, each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="64f69-2202">Można sortować, jeśli istnieje więcej elementów niż klucze, ale elementy, które mają nie odpowiadające im klucze nie będą sortowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-2202">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="64f69-2203">Nie można sortować, jeśli istnieją kluczy więcej niż elementów. Spowoduje to zgłasza <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="64f69-2203">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="64f69-2204">Jeśli sortowanie nie zostało ukończone pomyślnie, wyniki są niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="64f69-2204">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="64f69-2205">Ta metoda używa algorytmu sortowania introspektywnego w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="64f69-2205">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="64f69-2206">Jeśli rozmiar partycji jest mniej niż 16 elementów, używa [sortowania wstawiania](https://en.wikipedia.org/wiki/Insertion_sort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2206">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2207">Jeśli liczba partycji przekracza 2 \* dziennika<sup>N</sup>, gdzie *N* jest zakresu wartości tablicy wejściowej używa [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2207">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="64f69-2208">W przeciwnym razie używa [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorytmu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2208">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="64f69-2209">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="64f69-2209">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="64f69-2210">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="64f69-2210">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="64f69-2211">Dla tablic, które są sortowane przy użyciu algorytmów Heapsort i Quicksort w najgorszym przypadku ta metoda jest O (`n` dziennika `n`) operację, której `n` jest `length`.</span><span class="sxs-lookup"><span data-stu-id="64f69-2211">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-2212">Poniższy przykład kodu pokazuje <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, a [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32% 2CSystem.Collections.Generic.IComparer%7b%60%600%7D%29 > przeciążenia metody ogólnej, do sortowania par tablicami reprezentującymi kluczy i wartości.</span><span class="sxs-lookup"><span data-stu-id="64f69-2212">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="64f69-2213">Przykładowy kod definiuje alternatywny porównania ciągów o nazwie `ReverseCompare`, który implementuje `IComparer<string>`(`IComparer(Of String)` w języku Visual Basic `IComparer<String^>` w programie Visual C++) interfejs generyczny.</span><span class="sxs-lookup"><span data-stu-id="64f69-2213">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>`(`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="64f69-2214">Moduł porównujący wywołania <xref:System.String.CompareTo%28System.String%29> metody odwracanie kolejności comparands, dzięki czemu ciągi sortowania dużej do minimum zamiast niskiego na wysoki.</span><span class="sxs-lookup"><span data-stu-id="64f69-2214">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="64f69-2215">Przykład kodu tworzy i wyświetla tablicę nazw kolorowanka (klucze) i tablica liczb całkowitych reprezentująca maksymalną długość każdej kolorowanka metry (wartości).</span><span class="sxs-lookup"><span data-stu-id="64f69-2215">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="64f69-2216">Tablice są następnie wyświetlania i sortowania kilka razy:</span><span class="sxs-lookup"><span data-stu-id="64f69-2216">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="64f69-2217"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> Przeciążenie umożliwia sortowanie tablic, zarówno w kolejności nazw kolorowanka w pierwszym tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-2217">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="64f69-2218"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> Przeciążenia i wystąpienie `ReverseCompare` służą do odwracania kolejności sortowania par tablic.</span><span class="sxs-lookup"><span data-stu-id="64f69-2218">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="64f69-2219"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Przeciążenia jest używane do sortowania ostatnie trzy elementy zarówno tablic.</span><span class="sxs-lookup"><span data-stu-id="64f69-2219">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="64f69-2220">[\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > przeciążenia jest używane do sortowania ostatnich trzech oba elementy stałych w odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="64f69-2220">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-2221">Wywołań metody rodzajowe nie wygląda inaczej z wywołań, aby ich odpowiedniki nierodzajowe, ponieważ Visual Basic, C# i C++ wnioskować o typie parametru typu ogólnego z pierwszych dwóch argumentów typu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2221">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="64f69-2222">Jeśli używasz [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) zbadać język pośredni firmy Microsoft (MSIL), widoczny wywoływane metody ogólne.</span><span class="sxs-lookup"><span data-stu-id="64f69-2222">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-2223">
            <paramref name="keys" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2223">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-2224">
            <paramref name="index" /> jest mniejsza niż dolna granica <paramref name="keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2224">
              <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          </span>
          <span data-ttu-id="64f69-2225">- lub - <paramref name="length" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2225">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-2226">
            <paramref name="items" /> nie jest <see langword="null" />oraz dolną granicę <paramref name="keys" /> jest niezgodny z dolną granicę <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2226">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="64f69-2227">- lub - <paramref name="items" /> nie jest <see langword="null" />, a długość <paramref name="keys" /> jest większa niż długość <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2227">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="64f69-2228">- lub - <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="keys" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2228">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-2229">- lub - <paramref name="items" /> nie jest <see langword="null" />, i <paramref name="index" /> i <paramref name="length" /> nie zostanie określony prawidłowy zakres w <paramref name="items" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2229">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="64f69-2230">- lub - wykonania <paramref name="comparer" /> spowodował błąd podczas sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2230">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="64f69-2231">Na przykład <paramref name="comparer" /> nie mogą zwracać 0, podczas porównywania elementu z samym sobą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2231">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64f69-2232">
            <paramref name="comparer" /> jest <see langword="null" />i co najmniej jeden element w <paramref name="keys" /><see cref="T:System.Array" /> nie implementują <see cref="T:System.IComparable`1" /> interfejs generyczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2232">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="64f69-2233">
            <para>.NET Framework 4 i starszych wersji należy używać tylko algorytm Quicksort. Quicksort określa nieprawidłowy comparers w niektórych sytuacjach, w których zgłasza operacji <see cref="T:System.IndexOutOfRangeException" /> wyjątku i zgłasza <see cref="T:System.ArgumentException" /> wyjątek do obiektu wywołującego. Począwszy od [! INCLUDE[net_v45](~/includes/NET-V45-MD.MD)] jest możliwe, że sortowanie operacji poprzednio zwrócił <see cref="T:System.ArgumentException" /> nie spowoduje zgłoszenie wyjątku, ponieważ algorytmy sortowania i heapsort wstawiania nie wykrywaj nieprawidłowe porównania. W większości przypadków dotyczy tablic o mniej niż 16 elementów.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2233">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Array.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Array.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-2234">Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2234">Gets an object that can be used to synchronize access to the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64f69-2235">Obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2235">An object that can be used to synchronize access to the <see cref="T:System.Array" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2236">Ta właściwość implementuje <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2236">This property implements the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="64f69-2237">Na podstawie klasy .NET framework <xref:System.Array> Udostępnij własnych zsynchronizowaną wersję w kolekcji przy użyciu <xref:System.Array.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="64f69-2237">.NET Framework classes based on <xref:System.Array> provide their own synchronized version of the collection using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="64f69-2238">Klasy korzystające tablice można też wdrożyć za pomocą ich własnych synchronizacji <xref:System.Array.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="64f69-2238">Classes that use arrays can also implement their own synchronization using the <xref:System.Array.SyncRoot%2A> property.</span></span> <span data-ttu-id="64f69-2239">Synchronizowanie kodu musi wykonywać operacje `SyncRoot` kolekcji, a nie bezpośrednio w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="64f69-2239">The synchronizing code must perform operations on the `SyncRoot` of the collection, not directly on the collection.</span></span> <span data-ttu-id="64f69-2240">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="64f69-2240">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="64f69-2241">W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowania kolekcji.</span><span class="sxs-lookup"><span data-stu-id="64f69-2241">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection.</span></span> <span data-ttu-id="64f69-2242">Należy pamiętać, że niektóre implementacje <xref:System.Array.SyncRoot%2A> może zwrócić <xref:System.Array> samej siebie.</span><span class="sxs-lookup"><span data-stu-id="64f69-2242">Note that some implementations of <xref:System.Array.SyncRoot%2A> might return the <xref:System.Array> itself.</span></span>  
  
 <span data-ttu-id="64f69-2243">Wyliczanie za pomocą kolekcji leżą nie jest procedurą bezpieczne wątku.</span><span class="sxs-lookup"><span data-stu-id="64f69-2243">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="64f69-2244">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="64f69-2244">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="64f69-2245">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2245">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="64f69-2246">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="64f69-2246">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-2247">Poniższy przykład kodu pokazuje, jak można zablokować tablicy podczas wyliczania całego przy użyciu <xref:System.Array.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="64f69-2247">The following code example shows how to lock an array during the entire enumeration by using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 [!code-cpp[System.Array.SyncRoot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.SyncRoot/cpp/source.cpp#1)]
 [!code-csharp[System.Array.SyncRoot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.SyncRoot/cs/source.cs#1)]
 [!code-vb[System.Array.SyncRoot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.SyncRoot/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Array.System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64f69-2248">Pobiera liczbę elementów zawartych w <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2248">Gets the number of elements contained in the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64f69-2249">Liczba elementów zawartych w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2249">The number of elements contained in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2250">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2250">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64f69-2251">Można go używać tylko wtedy, gdy <xref:System.Array> wystąpienia jest rzutowane na <xref:System.Collections.ICollection> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2251">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Array.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Array.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64f69-2252">Obiekt do dodania do <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2252">The object to be added to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2253">Wywołanie tej metody zawsze zwraca <see cref="T:System.NotSupportedException" /> wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2253">Calling this method always throws a <see cref="T:System.NotSupportedException" /> exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-2254">Dodanie wartości do tablicy nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2254">Adding a value to an array is not supported.</span>
          </span>
          <span data-ttu-id="64f69-2255">Nie jest zwracana żadna wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2255">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2256">Zwykle <xref:System.Collections.IList.Add%2A?displayProperty=nameWithType> implementacji dodaje element członkowski do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="64f69-2256">Ordinarily, an <xref:System.Collections.IList.Add%2A?displayProperty=nameWithType> implementation adds a member to a collection.</span></span> <span data-ttu-id="64f69-2257">Jednak ponieważ tablice o stałym rozmiarze ( <xref:System.Array.IsFixedSize%2A> właściwość zawsze zwraca `true`), ta metoda zawsze zwraca <xref:System.NotSupportedException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="64f69-2257">However, because arrays have a fixed size (the <xref:System.Array.IsFixedSize%2A> property always returns `true`), this method always throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 <span data-ttu-id="64f69-2258">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2258">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64f69-2259">Można go używać tylko wtedy, gdy <xref:System.Array> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2259">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64f69-2260">
            <see cref="T:System.Collections.IList" /> Ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2260">The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64f69-2261">Usuwa wszystkie elementy z <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2261">Removes all items from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2262">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2262">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64f69-2263">Można go używać tylko wtedy, gdy <xref:System.Array> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2263">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64f69-2264">
            <see cref="T:System.Collections.IList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2264">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64f69-2265">Obiekt do zlokalizowania w bieżącej listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2265">The object to locate in the current list.</span>
          </span>
          <span data-ttu-id="64f69-2266">Element, aby zlokalizować może być <see langword="null" /> dla typów odwołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2266">The element to locate can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2267">Określa, czy element jest <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2267">Determines whether an element is in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-2268">
            <see langword="true" /> Jeśli <paramref name="value" /> znajduje się w <see cref="T:System.Collections.IList" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2268">
              <see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2269">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2269">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64f69-2270">Można go używać tylko wtedy, gdy <xref:System.Array> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2270">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64f69-2271">Obiekt do zlokalizowania w bieżącej listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2271">The object to locate in the current list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2272">Określa indeks konkretny element w <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2272">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-2273">Indeks wartości Jeśli znaleziona na liście; w przeciwnym razie wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2273">The index of value if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2274">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2274">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64f69-2275">Można go używać tylko wtedy, gdy <xref:System.Array> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2275">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="64f69-2276">Indeks, w którym <c>wartość</c> powinien zostać wstawiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2276">The index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64f69-2277">Obiekt do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2277">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2278">Wstawia element do <see cref="T:System.Collections.IList" /> pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2278">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2279">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64f69-2280">Można go używać tylko wtedy, gdy <xref:System.Array> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2280">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-2281">
            <paramref name="index" /> nie jest prawidłowym indeksem w <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2281">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64f69-2282">
            <see cref="T:System.Collections.IList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2282">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="64f69-2283">- lub - <see cref="T:System.Collections.IList" /> ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2283">-or-  The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="64f69-2284">
            <paramref name="value" /> to odwołanie o wartości null w <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2284">
              <paramref name="value" /> is null reference in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Array.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Array.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Array.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="64f69-2285">Indeks elementu do pobrania lub ustawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2285">The index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2286">Pobieranie lub konfigurowanie elementów pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2286">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64f69-2287">Element pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2287">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2288">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2288">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64f69-2289">Można go używać tylko wtedy, gdy <xref:System.Array> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2289">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-2290">
            <paramref name="index" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2290">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="64f69-2291">- lub - <paramref name="index" /> jest równa lub większa niż <see cref="P:System.Collections.ICollection.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2291">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="64f69-2292">Bieżące <see cref="T:System.Array" /> nie ma dokładnie jednego wymiaru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2292">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="64f69-2293">Obiekt do usunięcia z <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2293">The object to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2294">Usuwa pierwsze wystąpienie określonego obiektu z <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2294">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2295">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2295">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64f69-2296">Można go używać tylko wtedy, gdy <xref:System.Array> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2296">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64f69-2297">
            <see cref="T:System.Collections.IList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2297">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="64f69-2298">- lub - <see cref="T:System.Collections.IList" /> ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2298">-or-  The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="64f69-2299">Indeks elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2299">The index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2300">Usuwa <see cref="T:System.Collections.IList" /> element pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2300">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2301">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2301">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64f69-2302">Można go używać tylko wtedy, gdy <xref:System.Array> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2302">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="64f69-2303">Indeks nie jest prawidłowym indeksem w <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2303">index is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="64f69-2304">
            <see cref="T:System.Collections.IList" /> Jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2304">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="64f69-2305">- lub - <see cref="T:System.Collections.IList" /> ma stały rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2305">-or-  The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="64f69-2306">Obiekt do porównania z bieżącym wystąpieniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2306">The object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-2307">Obiekt, który porównuje bieżący obiekt i <c>innych</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2307">An object that compares the current object and <c>other</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2308">Określa, czy bieżący obiekt kolekcji poprzedza, odbywa się w tym samym miejscu czy następuje z innym obiektem w kolejności sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2308">Determines whether the current collection object precedes, occurs in the same position as, or follows another object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-2309">Liczba całkowita, która wskazuje relację bieżącego obiektu kolekcji do innych, jak pokazano w poniższej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2309">An integer that indicates the relationship of the current collection object to other, as shown in the following table.</span>
          </span>
          <span data-ttu-id="64f69-2310">
            <list type="table">
              <listheader>
                <term> Wartość zwracana </term>
                <description> opis </description>
              </listheader>
              <item>
                <term> -1 </term>
                <description> poprzedza bieżącego wystąpienia <paramref name="other" />.  </description>
              </item>
              <item>
                <term> 0 </term>
                <description> bieżącego wystąpienia i <paramref name="other" /> są takie same.  </description>
              </item>
              <item>
                <term> 1 </term>
                <description> zgodny z bieżącym wystąpieniem <paramref name="other" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2310">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description> The current instance precedes <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description> The current instance and <paramref name="other" /> are equal.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> The current instance follows <paramref name="other" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2311">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2311">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64f69-2312">Można go używać tylko wtedy, gdy <xref:System.Array> wystąpienia jest rzutowane na <xref:System.Collections.IStructuralComparable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2312">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="64f69-2313">Obiekt do porównania z bieżącym wystąpieniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2313">The object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="64f69-2314">Obiekt, który określa, czy bieżące wystąpienie i <c>innych</c> są takie same.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2314">An object that determines whether the current instance and <c>other</c> are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2315">Określa, czy obiekt jest taki sam, jak bieżące wystąpienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2315">Determines whether an object is equal to the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-2316">
            <see langword="true" /> Jeśli dwa obiekty są równe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2316">
              <see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2317">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2317">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64f69-2318">Można go używać tylko wtedy, gdy <xref:System.Array> wystąpienia jest rzutowane na <xref:System.Collections.IStructuralEquatable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2318">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="64f69-2319">Obiekt, który oblicza wartość skrótu bieżącego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2319">An object that computes the hash code of the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2320">Zwraca wartość skrótu dla bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2320">Returns a hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-2321">Wartość skrótu dla bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2321">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2322">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="64f69-2322">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="64f69-2323">Można go używać tylko wtedy, gdy <xref:System.Array> wystąpienia jest rzutowane na <xref:System.Collections.IStructuralEquatable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2323">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueForAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TrueForAll&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TrueForAll&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrueForAll(Of T) (array As T(), match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TrueForAll(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member TrueForAll : 'T[] * Predicate&lt;'T&gt; -&gt; bool" Usage="System.Array.TrueForAll (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="64f69-2324">Typ elementów tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2324">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="64f69-2325">Jednowymiarowa, liczony od zera <see cref="T:System.Array" /> sprawdzania zgodności z warunkami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2325">The one-dimensional, zero-based <see cref="T:System.Array" /> to check against the conditions.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="64f69-2326">Predykat definiujący warunki sprawdzania zgodności elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2326">The predicate that defines the conditions to check against the elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64f69-2327">Określa, czy każdy element tablicy pasuje do warunków zdefiniowanych przez określony predykat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2327">Determines whether every element in the array matches the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64f69-2328">
            <see langword="true" /> Jeśli wartość każdego elementu w <paramref name="array" /> pasuje do warunków zdefiniowanych przez określony predykat; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2328">
              <see langword="true" /> if every element in <paramref name="array" /> matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="64f69-2329">Jeśli w tablicy nie ma elementów, jest zwracana wartość <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2329">If there are no elements in the array, the return value is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64f69-2330"><xref:System.Predicate%601> Jest delegowany do metody, która zwraca`true` obiekt przekazywany do jest zgodne z warunkami określonymi w delegacie.</span><span class="sxs-lookup"><span data-stu-id="64f69-2330">The <xref:System.Predicate%601> is a delegate to a method that returns`true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="64f69-2331">Elementy `array` indywidualnie są przekazywane do <xref:System.Predicate%601>, i przetwarzania jest zatrzymana, gdy zwraca delegata `false` dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2331">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and processing is stopped when the delegate returns `false` for any element.</span></span>  
  
 <span data-ttu-id="64f69-2332">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Array.Length%2A> z `array`.</span><span class="sxs-lookup"><span data-stu-id="64f69-2332">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64f69-2333">Poniższy przykład określa, czy ostatni znak każdego elementu w tablicy ciągów jest liczbą.</span><span class="sxs-lookup"><span data-stu-id="64f69-2333">The following example determines whether the last character of each element in a string array is a number.</span></span> <span data-ttu-id="64f69-2334">Tworzy dwie tablice ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2334">It creates two string arrays.</span></span> <span data-ttu-id="64f69-2335">Pierwszy arrayincludes ciągi, które kończą się alfabetu i ciągi, które kończą się cyfr. Druga tablica zawiera tylko ciągi, które kończyć się znakami liczbowych.</span><span class="sxs-lookup"><span data-stu-id="64f69-2335">The first arrayincludes both strings that end with alphabetic characters and strings that end with numeric characters.The second array consists only of strings that end with numeric characters.</span></span> <span data-ttu-id="64f69-2336">Definiuje również przykładzie `EndWithANumber` metody, których Podpis pasuje do <xref:System.Predicate%601> delegowanie.</span><span class="sxs-lookup"><span data-stu-id="64f69-2336">The example also defines an `EndWithANumber` method whose signature matches the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="64f69-2337">Przykład przekazuje każdej macierzy do <xref:System.Array.TrueForAll%2A> metody wraz z delegata, który reprezentuje `EndsWithANumber` metody.</span><span class="sxs-lookup"><span data-stu-id="64f69-2337">The example passes each array to the <xref:System.Array.TrueForAll%2A> method along with a delegate that represents the `EndsWithANumber` method.</span></span>  
  
 [!code-csharp[System.Array.TrueForAll#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.trueforall/cs/trueforall2.cs#2)]
 [!code-vb[System.Array.TrueForAll#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.trueforall/vb/trueforall2.vb#2)]  
  
 <span data-ttu-id="64f69-2338">Poniższy przykład jest podobny do pierwszej, z wyjątkiem przekazaniem do tablicy ciągów <xref:System.Array.TrueForAll%2A> metody wraz z wyrażenia lambda, określająca, czy element określonej tablicy kończy się liczbą reprezentację ciągu.</span><span class="sxs-lookup"><span data-stu-id="64f69-2338">The following example is similar to the first, except that it passes the string array to the <xref:System.Array.TrueForAll%2A> method along with  a lambda expression that determines whether a particular array element ends with the string representation of a number.</span></span>  
  
 [!code-csharp[System.Array.TrueForAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.trueforall/cs/trueforall1.cs#1)]
 [!code-vb[System.Array.TrueForAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.trueforall/vb/trueforall1.vb#1)]  
  
 <span data-ttu-id="64f69-2339">W obu przypadkach <xref:System.Array.TrueForAll%2A> metoda zwraca `false` zaraz po napotkaniu pierwszy element tablicy, która nie kończy się liczbą.</span><span class="sxs-lookup"><span data-stu-id="64f69-2339">In both cases, the <xref:System.Array.TrueForAll%2A> method returns `false` as soon as it encounters the first array element that does not end in a number.</span></span> <span data-ttu-id="64f69-2340">W przeciwnym razie zwraca `true` po Iterowanie wszystkich elementów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="64f69-2340">Otherwise, it returns `true` after iterating all the elements in the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64f69-2341">Zgodnie z obu przykładach w C# i Visual Basic nie jest konieczne tworzenie `Predicate<string>` delegować (`Predicate(Of String)` w języku Visual Basic) jawnie.</span><span class="sxs-lookup"><span data-stu-id="64f69-2341">As both examples show, in C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="64f69-2342">Te języki wnioskują o poprawnym delegacie z kontekstu, a następnie są tworzone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="64f69-2342">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="64f69-2343">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2343">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="64f69-2344">- lub - <paramref name="match" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64f69-2344">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
  </Members>
</Type>