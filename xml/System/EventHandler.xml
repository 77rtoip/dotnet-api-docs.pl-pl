<Type Name="EventHandler" FullName="System.EventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bdfad21e1dcbc95726c6071d169836083d0cda88" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37480708" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventHandler = delegate of obj * EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Źródło zdarzenia.</param>
    <param name="e">Obiekt, który nie zawiera żadnych danych zdarzenia.</param>
    <summary>Reprezentuje metodę, która obsłuży zdarzenie, które nie ma żadnych danych zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Model zdarzeń w programie .NET Framework opiera się na potrzeby delegata zdarzenia, który łączy się zdarzenie z jego obsługi. Aby wywołać zdarzenie, potrzebne są dwa elementy:  
  
-   Delegat, który identyfikuje metodę, która udostępnia odpowiedź na zdarzenie.  
  
-   Opcjonalnie klasa, która przechowuje dane zdarzenia, jeśli zdarzenie zawiera dane.  
  
 Delegat to typ, który definiuje podpis, oznacza to, typ zwracanej wartości i typy listy parametrów dla metody. Typ delegata można użyć, aby zadeklarować zmienną, która może odwoływać się do dowolnej metody z taką samą sygnaturę jak delegat.  
  
 Standardowa podpis delegata obsługi zdarzeń definiuje metodę, która nie zwraca wartości. Ta metoda pierwszy parametr jest typu <xref:System.Object> i odnosi się do wystąpienia, która wywołuje zdarzenia. Drugim parametrem jest tworzony na podstawie typu <xref:System.EventArgs> i przechowuje dane zdarzenia. Jeśli zdarzenie nie generuje dane zdarzenia, drugi parametr jest po prostu wartość <xref:System.EventArgs.Empty?displayProperty=nameWithType> pola. W przeciwnym razie drugi parametr jest typu, który pochodzi z <xref:System.EventArgs> i dostarcza żadnych pól lub właściwości niezbędne do przechowywania danych zdarzenia.  
  
 <xref:System.EventHandler> Delegat jest wstępnie zdefiniowanego delegata, który konkretnie reprezentuje metodę programu obsługi zdarzeń dla zdarzenia, które nie generuje danych. Jeśli zdarzenia generowania danych, należy użyć ogólnego <xref:System.EventHandler%601> klasa obiektu delegowanego.  
  
 Skojarzone zdarzenie w metodzie, która obsłuży zdarzenie, dodaje wystąpienie delegata zdarzenia. Program obsługi zdarzeń jest wywoływany przy każdym wystąpieniu zdarzenia, o ile nie usunięto delegata.  
  
 Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano zdarzenie o nazwie `ThresholdReached` skojarzony z <xref:System.EventHandler> delegować. Metoda przypisane do <xref:System.EventHandler> delegata jest wywoływana w `OnThresholdReached` metody.  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>