<Type Name="LocalDataStoreSlot" FullName="System.LocalDataStoreSlot">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e641c106b3852dea1c5ad702247daf66765000ef" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69405713" /></Metadata><TypeSignature Language="C#" Value="public sealed class LocalDataStoreSlot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalDataStoreSlot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.LocalDataStoreSlot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalDataStoreSlot" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalDataStoreSlot sealed" />
  <TypeSignature Language="F#" Value="type LocalDataStoreSlot = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Hermetyzuje miejsce pamięci do przechowywania danych lokalnych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework zapewnia dwa mechanizmy używania lokalnego magazynu wątków (TLS): względne dla wątku pola statyczne i gniazda danych.  
  
-   Pola statyczne względem wątku są `static` polami (`Shared` pola w Visual Basic) <xref:System.ThreadStaticAttribute> , które są oznaczone atrybutem. Zapewniają lepszą wydajność niż miejsca na danych i umożliwiają sprawdzanie typu w czasie kompilacji.  
  
-   Gniazda danych są wolniejsze i więcej niewygodna niż pola statyczne względne dla wątków. Ponadto dane są przechowywane jako typ <xref:System.Object>, dlatego należy rzutować je na poprawny typ przed użyciem. Można jednak używać miejsc danych, gdy w czasie kompilacji nie ma wystarczających informacji do przydzielenia pól statycznych.  
  
 Aby uzyskać więcej informacji o korzystaniu z [protokołu TLS, zobacz temat lokalny magazyn wątków: Pola statyczne powiązane z wątkiem i gniazda](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)danych.  
  
 Podobnie .NET Framework zapewnia dwa mechanizmy używania lokalnego magazynu kontekstowego: pól statycznych względnych dla kontekstu i miejsc danych. Pola statyczne względne dla <xref:System.ContextStaticAttribute> kontekstu są polami statycznymi, które są oznaczone atrybutem. Różnice między tymi dwoma mechanizmami są podobne do kompromisów między wykorzystaniem pól statycznych względnych dla wątków i miejsc danych.  
  
 <xref:System.LocalDataStoreSlot> Struktura służy jako mechanizm pamięci magazynu lokalnego, którego wątki i konteksty mogą używać do przechowywania odpowiednio właściwych dla wątku i danych kontekstowych. Środowisko uruchomieniowe języka wspólnego przydziela tablicę magazynów danych z obsługą wielu gniazd do każdego procesu podczas jego tworzenia. Wątek lub kontekst wywołuje różne funkcje w celu przydzielenia miejsca danych w magazynie danych, do przechowywania i pobierania wartości danych w gnieździe oraz do zwolnienia miejsca danych do ponownego użycia po wygaśnięciu wątku lub obiektu kontekstu.  
  
 Gniazda danych są unikatowe na wątek lub kontekst; ich wartości nie są współużytkowane przez obiekty wątku lub kontekstu. Miejsca na danych można alokować według nazwy lub według numeru indeksu.  
  
 Aby uzyskać więcej informacji na temat przechowywania danych lokalnych <xref:System.Threading.Thread> , <xref:System.Runtime.Remoting.Contexts.Context>Zobacz lub. <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType> <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType> <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType> <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>Klasa jest używana z metodami takimi jak,, i; nie ma własnych metod, których należy użyć. <xref:System.LocalDataStoreSlot>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LocalDataStoreSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.LocalDataStoreSlot.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LocalDataStoreSlot ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="localDataStoreSlot.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapewnia, że zasoby są zwolnione i inne operacje czyszczenia są wykonywane, gdy moduł zbierający <see cref="T:System.LocalDataStoreSlot" /> elementy bezużyteczne odzyskuje obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Moduł zbierający elementy <xref:System.LocalDataStoreSlot.Finalize%2A> bezużyteczne wywołuje, kiedy bieżący obiekt jest gotowy do sfinalizowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>
