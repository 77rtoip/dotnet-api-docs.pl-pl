<Type Name="LocalDataStoreSlot" FullName="System.LocalDataStoreSlot">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7974ac8c8629d8dee2fd8529aa09caa32f6b89e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58690842" /></Metadata><TypeSignature Language="C#" Value="public sealed class LocalDataStoreSlot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalDataStoreSlot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.LocalDataStoreSlot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalDataStoreSlot" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalDataStoreSlot sealed" />
  <TypeSignature Language="F#" Value="type LocalDataStoreSlot = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Hermetyzuje pamięci miejsca do przechowywania danych lokalnych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program .NET Framework zawiera dwa mechanizmy przy użyciu pamięci lokalnej wątku (TLS): względne wątkom pola statyczne i gniazda danych.  
  
-   Względne wątkom pola statyczne są `static` pola (`Shared` pól w języku Visual Basic), są oznaczone <xref:System.ThreadStaticAttribute> atrybutu. Zapewnić lepszą wydajność niż gniazda danych i Włącz sprawdzanie typów w czasie kompilacji.  
  
-   Gniazda danych są wolniejszy i bardziej niewygodna w użyciu niż względne wątkom pola statyczne. Ponadto dane są przechowywane jako typ <xref:System.Object>, więc należy rzutować go do poprawnego typu przed jego użyciem. Można jednak użyć gniazda danych, jeśli masz za mało informacji w czasie kompilacji, można przydzielić pola statyczne.  
  
 Aby uzyskać więcej informacji o korzystaniu z protokołu TLS, zobacz [wątku lokalnego magazynu: Względne wątkom pola statyczne i gniazda danych](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).  
  
 Podobnie, program .NET Framework zawiera dwa mechanizmy przy użyciu lokalnego magazynu kontekstu: kontekstu statycznego miejsca pól i danych. Kontekst powiązane z wątkiem pola statyczne są pola statyczne, które są oznaczone <xref:System.ContextStaticAttribute> atrybutu. Kompromis między te dwa mechanizmy są podobne do stosowania kompromisów między względne wątkom statycznego miejsca pól i danych.  
  
 <xref:System.LocalDataStoreSlot> Struktury służy jako lokalną przechowywania mechanizm pamięć, wątki i konteksty umożliwia przechowywanie danych właściwych dla wątku i kontekstowych, odpowiednio. Środowisko uruchomieniowe języka wspólnego przydziela tablicy magazynu danych wielu miejsce, do każdego procesu, podczas jego tworzenia. Wywołania wątku lub kontekstu ponownego użycia różnych funkcji do przydzielenia miejsca danych w magazynie danych, do przechowywania i pobierania wartości danych w miejscu, a aby zwolnić miejsce dla danych, po wygaśnięciu obiekt wątku lub kontekstu.  
  
 Gniazda danych są unikatowe dla wątku lub kontekstu; wartości nie są współdzielone między obiektami wątku lub kontekstu. Gniazda danych można przydzielić według nazwy lub numer indeksu.  
  
 Aby uzyskać więcej informacji na temat przechowywania danych lokalnych, zobacz <xref:System.Threading.Thread> lub <xref:System.Runtime.Remoting.Contexts.Context>. <xref:System.LocalDataStoreSlot> Klasa jest używana przy użyciu metod, takich jak <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>, i <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>; go nie ma żadnych metod swój własny, należy użyć.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LocalDataStoreSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.LocalDataStoreSlot.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LocalDataStoreSlot ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="localDataStoreSlot.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapewnia, że zasoby są zwalniane, a inne operacje oczyszczania są wykonywane, gdy moduł odśmiecania pamięci odzyskuje <see cref="T:System.LocalDataStoreSlot" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Moduł odśmiecania pamięci wywołuje <xref:System.LocalDataStoreSlot.Finalize%2A> kiedy bieżący obiekt jest gotowy do można sfinalizować.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>