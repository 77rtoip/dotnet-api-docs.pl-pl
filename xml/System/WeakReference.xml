<Type Name="WeakReference" FullName="System.WeakReference">
  <TypeSignature Language="C#" Value="public class WeakReference : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WeakReference extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.WeakReference" />
  <TypeSignature Language="VB.NET" Value="Public Class WeakReference&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WeakReference : System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5f59a-101">Reprezentuje słabego odwołania, który odwołuje się do obiektu, umożliwiając obiektowi można odzyskać przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="5f59a-101">Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f59a-102">Słabe odwołanie umożliwia modułu zbierającego elementy bezużyteczne zbierać obiektu, umożliwiając aplikacji dostępu do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-102">A weak reference allows the garbage collector to collect an object while still allowing an application to access the object.</span></span> <span data-ttu-id="5f59a-103">Obiekt, należy nadal można uzyskać silne odwołanie do niej i uniemożliwić zbieranych.</span><span class="sxs-lookup"><span data-stu-id="5f59a-103">If you need the object, you can still obtain a strong reference to it and prevent it from being collected.</span></span> <span data-ttu-id="5f59a-104">Aby uzyskać więcej informacji o sposobie użycia krótki i długi słabe odwołania, zobacz [słabe odwołania](~/docs/standard/garbage-collection/weak-references.md).</span><span class="sxs-lookup"><span data-stu-id="5f59a-104">For more information about how to use short and long weak references, see [Weak References](~/docs/standard/garbage-collection/weak-references.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f59a-105">W poniższym przykładzie pokazano, jak można użyć słabe odwołania do obsługi pamięci podręcznej obiektów jako zasób dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5f59a-105">The following example demonstrates how you can use weak references to maintain a cache of objects as a resource for an application.</span></span> <span data-ttu-id="5f59a-106">Pamięć podręczna jest tworzony przy użyciu <xref:System.Collections.Generic.IDictionary%602> z <xref:System.WeakReference> obiektów, wyznaczaną przez wartość indeksu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-106">The cache is constructed using an <xref:System.Collections.Generic.IDictionary%602> of <xref:System.WeakReference> objects keyed by an index value.</span></span> <span data-ttu-id="5f59a-107"><xref:System.WeakReference.Target%2A> Właściwość <xref:System.WeakReference> obiektów jest obiektem w tablicy bajtów, który reprezentuje dane.</span><span class="sxs-lookup"><span data-stu-id="5f59a-107">The <xref:System.WeakReference.Target%2A> property for the <xref:System.WeakReference> objects is an object in a byte array that represents data.</span></span>  
  
 <span data-ttu-id="5f59a-108">Przykład losowo uzyskuje dostęp do obiektów w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="5f59a-108">The example randomly accesses objects in the cache.</span></span> <span data-ttu-id="5f59a-109">Jeśli obiekt jest odzyskać do wyrzucanie elementów bezużytecznych, generowane jest nowy obiekt danych; w przeciwnym razie obiekt jest dostępne dla dostępu z powodu słabe odwołanie.</span><span class="sxs-lookup"><span data-stu-id="5f59a-109">If an object is reclaimed for garbage collection, a new data object is regenerated; otherwise, the object is available to access because of the weak reference.</span></span>  
  
 [!code-csharp[WeakReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#1)]
 [!code-vb[WeakReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="5f59a-110">Aby uzyskać możliwość wywoływania niezarządzanego kodu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-110">for the ability to call unmanaged code.</span></span> <span data-ttu-id="5f59a-111">Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="5f59a-111">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <altmember cref="T:System.GC" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f59a-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.WeakReference" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="5f59a-112">Initializes a new instance of the <see cref="T:System.WeakReference" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WeakReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WeakReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReference (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakReference(System::Object ^ target);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="5f59a-113">Obiekt do śledzenia lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5f59a-113">The object to track or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="5f59a-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.WeakReference" /> klasy odwołujące się do określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-114">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, referencing the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f59a-115">Ten konstruktor tworzy krótkich słabe odwołanie do `target`.</span><span class="sxs-lookup"><span data-stu-id="5f59a-115">This constructor creates a short weak reference to `target`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReference (object target, bool trackResurrection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object target, bool trackResurrection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Object, trackResurrection As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakReference(System::Object ^ target, bool trackResurrection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="trackResurrection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="5f59a-116">Obiekt do śledzenia.</span><span class="sxs-lookup"><span data-stu-id="5f59a-116">An object to track.</span></span></param>
        <param name="trackResurrection"><span data-ttu-id="5f59a-117">Wskazuje, kiedy należy zatrzymać śledzenie obiektu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-117">Indicates when to stop tracking the object.</span></span> <span data-ttu-id="5f59a-118">Jeśli <see langword="true" />, obiekt jest śledzony po zakończeniu; Jeśli <see langword="false" />, obiekt jest tylko śledzone do czasu finalizacji.</span><span class="sxs-lookup"><span data-stu-id="5f59a-118">If <see langword="true" />, the object is tracked after finalization; if <see langword="false" />, the object is only tracked until finalization.</span></span></param>
        <summary><span data-ttu-id="5f59a-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.WeakReference" /> klasy, odwołujący się do określonego obiektu i przy użyciu określonego resurrection śledzenia.</span><span class="sxs-lookup"><span data-stu-id="5f59a-119">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, referencing the specified object and using the specified resurrection tracking.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f59a-120">Jeśli `trackResurrection` jest `false`, utworzeniu krótkich słabe odwołanie.</span><span class="sxs-lookup"><span data-stu-id="5f59a-120">If `trackResurrection` is `false`, a short weak reference is created.</span></span> <span data-ttu-id="5f59a-121">Jeśli `trackResurrection` jest `true`, utworzeniu długo słabe odwołanie.</span><span class="sxs-lookup"><span data-stu-id="5f59a-121">If `trackResurrection` is `true`, a long weak reference is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f59a-122">Poniższy przykład tworzy pamięć podręczną danych obiektów z krótkim słabe odwołania.</span><span class="sxs-lookup"><span data-stu-id="5f59a-122">The following example creates a cache of data objects with short weak references.</span></span> <span data-ttu-id="5f59a-123">Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.WeakReference> klasy.</span><span class="sxs-lookup"><span data-stu-id="5f59a-123">This example is part of a larger example provided for the <xref:System.WeakReference> class.</span></span>  
  
 [!code-csharp[WeakReference#2](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#2)]
 [!code-vb[WeakReference#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WeakReference (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WeakReference(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="5f59a-124">Obiekt, który przechowuje wszystkie dane potrzebne do serializacji lub deserializacji bieżącego <see cref="T:System.WeakReference" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-124">An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="5f59a-125">(Zastrzeżone) Opisuje źródłowego i docelowego serializowanym strumieniu określony przez <c>informacji</c>.</span><span class="sxs-lookup"><span data-stu-id="5f59a-125">(Reserved) Describes the source and destination of the serialized stream specified by <c>info</c>.</span></span></param>
        <summary><span data-ttu-id="5f59a-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.WeakReference" /> przy użyciu zdeserializowany danych z określonych obiektów serializacji i strumienia.</span><span class="sxs-lookup"><span data-stu-id="5f59a-126">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, using deserialized data from the specified serialization and stream objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f59a-127">`context` Parametr jest zarezerwowany i aktualnie nie uczestniczy w tej operacji.</span><span class="sxs-lookup"><span data-stu-id="5f59a-127">The `context` parameter is reserved, and does not currently participate in this operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f59a-128"><paramref name="info" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5f59a-128"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WeakReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WeakReference ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f59a-129">Odrzuca wszystkie odwołania do obiektu docelowego reprezentowany przez bieżący <see cref="T:System.WeakReference" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-129">Discards the reference to the target represented by the current <see cref="T:System.WeakReference" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.GC" />
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="5f59a-130">Obiekt, który przechowuje wszystkie dane potrzebne do serializacji lub deserializacji bieżącego <see cref="T:System.WeakReference" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-130">An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="5f59a-131">(Zastrzeżone) Lokalizacja, w którym dane serializowane są przechowywane i pobierane.</span><span class="sxs-lookup"><span data-stu-id="5f59a-131">(Reserved) The location where serialized data is stored and retrieved.</span></span></param>
        <summary><span data-ttu-id="5f59a-132">Wypełnia <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiektu z wszystkie dane potrzebne do serializacji bieżącego <see cref="T:System.WeakReference" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-132">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with all the data needed to serialize the current <see cref="T:System.WeakReference" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f59a-133">Ta metoda przechowuje wszystkie informacje w `info` niezbędne do serializacji bieżącego <xref:System.WeakReference> obiektu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-133">This method stores all the information in `info` necessary to serialize the current <xref:System.WeakReference> object.</span></span>  
  
 <span data-ttu-id="5f59a-134">`context` Parametr jest zarezerwowany i nie jest obecnie używany podczas wykonywania tej metody.</span><span class="sxs-lookup"><span data-stu-id="5f59a-134">The `context` parameter is reserved and is not currently used in the execution of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f59a-135"><paramref name="info" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5f59a-135"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="5f59a-136">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="5f59a-136">requires full trust for the immediate caller.</span></span> <span data-ttu-id="5f59a-137">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="5f59a-137">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsAlive">
      <MemberSignature Language="C#" Value="public virtual bool IsAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlive" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.IsAlive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAlive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f59a-138">Pobiera wskazuje, czy obiekt odwołuje się bieżący <see cref="T:System.WeakReference" /> obiektu została wyrzucona jako element bezużyteczny.</span><span class="sxs-lookup"><span data-stu-id="5f59a-138">Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference" /> object has been garbage collected.</span></span></summary>
        <value>
          <span data-ttu-id="5f59a-139"><see langword="true" /> Jeśli obiekt odwołuje się bieżący <see cref="T:System.WeakReference" /> obiekt nie został bezużytecznych i jest nadal dostępny w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5f59a-139"><see langword="true" /> if the object referenced by the current <see cref="T:System.WeakReference" /> object has not been garbage collected and is still accessible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f59a-140">Ponieważ obiekt może potencjalnie można odzyskać do wyrzucanie elementów bezużytecznych natychmiast po <xref:System.WeakReference.IsAlive%2A> zwraca `true`, za pomocą tej właściwości nie jest zalecane, chyba że podczas testowania tylko w przypadku `false` zwracają wartość.</span><span class="sxs-lookup"><span data-stu-id="5f59a-140">Because an object could potentially be reclaimed for garbage collection immediately after the <xref:System.WeakReference.IsAlive%2A> property returns `true`, using this property is not recommended unless you are testing only for a `false` return value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.GC" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public virtual object Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Target" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Target As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Target { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f59a-141">Pobiera lub ustawia obiekt (docelowy) odwołuje się bieżący <see cref="T:System.WeakReference" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-141">Gets or sets the object (the target) referenced by the current <see cref="T:System.WeakReference" /> object.</span></span></summary>
        <value>
          <span data-ttu-id="5f59a-142"><see langword="null" /> Jeśli obiekt odwołuje się bieżący <see cref="T:System.WeakReference" /> obiekt został odzyskiwanie zebranych; w przeciwnym razie wartość odwołania do obiektu, do których odwołuje się przez bieżące <see cref="T:System.WeakReference" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-142"><see langword="null" /> if the object referenced by the current <see cref="T:System.WeakReference" /> object has been garbage collected; otherwise, a reference to the object referenced by the current <see cref="T:System.WeakReference" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f59a-143">Po ustawieniu tej właściwości do obiektu docelowego, upewnij się czy nie istnieją żadne silne odwołania do obiektu. w przeciwnym razie go nie będą zbierane.</span><span class="sxs-lookup"><span data-stu-id="5f59a-143">After setting this property to the target object, make sure that there are no other strong references to the object; otherwise, it will not be collected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f59a-144">Poniższy przykład próbuje uzyskać z pamięci podręcznej obiektów słabego odwołania do obiektu.</span><span class="sxs-lookup"><span data-stu-id="5f59a-144">The following example tries to obtain an object from a cache of objects with weak references.</span></span> <span data-ttu-id="5f59a-145">Jeśli obiekt została odzyskana na wyrzucanie elementów bezużytecznych, zostanie wygenerowany nowy obiekt.</span><span class="sxs-lookup"><span data-stu-id="5f59a-145">If the object was reclaimed for garbage collection, a new object is generated.</span></span> <span data-ttu-id="5f59a-146">Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.WeakReference> klasy.</span><span class="sxs-lookup"><span data-stu-id="5f59a-146">This example is part of a larger example provided for the <xref:System.WeakReference> class.</span></span>  
  
 [!code-csharp[WeakReference#3](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#3)]
 [!code-vb[WeakReference#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f59a-147">Odwołanie do obiektu docelowego jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="5f59a-147">The reference to the target object is invalid.</span></span> <span data-ttu-id="5f59a-148">Ten wyjątek może zostać wygenerowany podczas ustawiania tej właściwości, jeśli wartość jest odwołanie o wartości null lub obiekt został sfinalizowany. podczas operacji set.</span><span class="sxs-lookup"><span data-stu-id="5f59a-148">This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.GC" />
      </Docs>
    </Member>
    <Member MemberName="TrackResurrection">
      <MemberSignature Language="C#" Value="public virtual bool TrackResurrection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrackResurrection" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.TrackResurrection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TrackResurrection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TrackResurrection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f59a-149">Pobiera wskazuje, czy obiekt odwołuje się bieżący <see cref="T:System.WeakReference" /> śledzenia obiektu po jego jest zakończona.</span><span class="sxs-lookup"><span data-stu-id="5f59a-149">Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference" /> object is tracked after it is finalized.</span></span></summary>
        <value>
          <span data-ttu-id="5f59a-150"><see langword="true" /> Jeśli bieżący obiekt <see cref="T:System.WeakReference" /> obiekt odwołuje się do śledzenia po zakończeniu; lub <see langword="false" /> Jeśli obiekt jest tylko śledzone do czasu finalizacji.</span><span class="sxs-lookup"><span data-stu-id="5f59a-150"><see langword="true" /> if the object the current <see cref="T:System.WeakReference" /> object refers to is tracked after finalization; or <see langword="false" /> if the object is only tracked until finalization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f59a-151">Jeśli `true`, słabe odwołanie jest długo słabe odwołanie i `true` określono `trackResurrection` parametru w <xref:System.WeakReference> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="5f59a-151">If `true`, the weak reference is a long weak reference and `true` was specified for the `trackResurrection` parameter in the <xref:System.WeakReference> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.GC" />
      </Docs>
    </Member>
  </Members>
</Type>