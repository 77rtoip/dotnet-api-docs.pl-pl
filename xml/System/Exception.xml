<Type Name="Exception" FullName="System.Exception">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32456a5d5f1f43059c002bacf13fda738938008f" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53750546" /></Metadata><TypeSignature Language="C#" Value="public class Exception : System.Runtime.InteropServices._Exception, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit Exception extends System.Object implements class System.Runtime.InteropServices._Exception, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Exception" />
  <TypeSignature Language="VB.NET" Value="Public Class Exception&#xA;Implements _Exception, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Exception : System::Runtime::InteropServices::_Exception, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Exception = class&#xA;    interface ISerializable&#xA;    interface _Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Exception</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Exception))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cdc4f-101">Reprezentuje błędy występujące podczas wykonywania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-101">Represents errors that occur during application execution.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-102">Ta klasa jest klasą bazową dla wszystkich wyjątków.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-102">This class is the base class for all exceptions.</span></span> <span data-ttu-id="cdc4f-103">Gdy wystąpi błąd, system lub aktualnie realizowanej aplikacji zgłasza go, zostanie zgłoszony wyjątek, który zawiera informacje o tym błędzie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-103">When an error occurs, either the system or the currently executing application reports it by throwing an exception that contains information about the error.</span></span> <span data-ttu-id="cdc4f-104">Po jest zgłaszany wyjątek, jest to obsługiwane przez aplikację lub przez domyślny program obsługi wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-104">After an exception is thrown, it is handled by the application or by the default exception handler.</span></span>  
  
 <span data-ttu-id="cdc4f-105">W tej sekcji:</span><span class="sxs-lookup"><span data-stu-id="cdc4f-105">In this section:</span></span>  
  
 <span data-ttu-id="cdc4f-106">[Błędy i wyjątki](#Errors) </span><span class="sxs-lookup"><span data-stu-id="cdc4f-106">[Errors and exceptions](#Errors) </span></span>  
 <span data-ttu-id="cdc4f-107">[Bloki try/catch](#TryCatch) </span><span class="sxs-lookup"><span data-stu-id="cdc4f-107">[Try/catch blocks](#TryCatch) </span></span>  
 <span data-ttu-id="cdc4f-108">[Funkcje typu wyjątku](#Features) </span><span class="sxs-lookup"><span data-stu-id="cdc4f-108">[Exception type features](#Features) </span></span>  
 <span data-ttu-id="cdc4f-109">[Właściwości klasy wyjątku](#Properties) </span><span class="sxs-lookup"><span data-stu-id="cdc4f-109">[Exception class properties](#Properties) </span></span>  
 <span data-ttu-id="cdc4f-110">[Zagadnienia dotyczące wydajności](#Performance) </span><span class="sxs-lookup"><span data-stu-id="cdc4f-110">[Performance considerations](#Performance) </span></span>  
 <span data-ttu-id="cdc4f-111">[Ponownie zostanie zgłoszony wyjątek](#Rethrow) </span><span class="sxs-lookup"><span data-stu-id="cdc4f-111">[Re-throwing an exception](#Rethrow) </span></span>  
 <span data-ttu-id="cdc4f-112">[Wybieranie standardowych wyjątków](#Standard) </span><span class="sxs-lookup"><span data-stu-id="cdc4f-112">[Choosing standard exceptions](#Standard) </span></span>  
 [<span data-ttu-id="cdc4f-113">Implementowanie wyjątków niestandardowych</span><span class="sxs-lookup"><span data-stu-id="cdc4f-113">Implementing custom exceptions</span></span>](#Custom)  
  
<a name="Errors"></a>   
## <a name="errors-and-exceptions"></a><span data-ttu-id="cdc4f-114">Błędy i wyjątki</span><span class="sxs-lookup"><span data-stu-id="cdc4f-114">Errors and exceptions</span></span>  
 <span data-ttu-id="cdc4f-115">Błędy czasu wykonywania może wystąpić z różnych powodów.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-115">Run-time errors can occur for a variety of reasons.</span></span> <span data-ttu-id="cdc4f-116">Jednak nie wszystkie błędy powinny być traktowane jako wyjątki w kodzie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-116">However, not all errors should be handled as exceptions in your code.</span></span> <span data-ttu-id="cdc4f-117">Poniżej przedstawiono niektóre kategorie błędy, które mogą wystąpić w czasie wykonywania i odpowiednie sposoby Reaguj na nie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-117">Here are some categories of errors that can occur at run time and the appropriate ways to respond to them.</span></span>  
  
-   <span data-ttu-id="cdc4f-118">**Błędy użycia.**</span><span class="sxs-lookup"><span data-stu-id="cdc4f-118">**Usage errors.**</span></span> <span data-ttu-id="cdc4f-119">Błąd użycia reprezentuje błąd w logice programu, który może spowodować wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-119">A usage error represents an error in program logic that can result in an exception.</span></span> <span data-ttu-id="cdc4f-120">Jednak błąd powinny być kierowane nie przy użyciu obsługi wyjątków, ale modyfikując nieprawidłowy kod.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-120">However, the error should be addressed not through exception handling but by modifying the faulty code.</span></span> <span data-ttu-id="cdc4f-121">Na przykład zastępowania metody <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> metody w poniższym przykładzie założono, że `obj` argument zawsze musi być inna niż null.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-121">For example, the override of the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method in the following example assumes that the `obj` argument must always be non-null.</span></span>  
  
     [!code-csharp[System.Exception.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors1.cs#4)]
     [!code-vb[System.Exception.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors1.vb#4)]  
  
     <span data-ttu-id="cdc4f-122"><xref:System.NullReferenceException> Wyjątek, który powoduje podczas `obj` jest `null` można wyeliminować, modyfikując kod źródłowy do testowania jawne wartości null, przed wywołaniem <xref:System.Object.Equals%2A?displayProperty=nameWithType> przesłonięć i ponowną kompilację.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-122">The <xref:System.NullReferenceException> exception that results when `obj` is `null` can be eliminated by modifying the source code to explicitly test for null before calling the <xref:System.Object.Equals%2A?displayProperty=nameWithType> override and then re-compiling.</span></span> <span data-ttu-id="cdc4f-123">Poniższy przykład zawiera kod źródłowy poprawiony, która obsługuje `null` argumentu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-123">The following example contains the corrected source code that handles a `null` argument.</span></span>  
  
     [!code-csharp[System.Exception.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors2.cs#5)]
     [!code-vb[System.Exception.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors2.vb#5)]  
  
     <span data-ttu-id="cdc4f-124">Zamiast korzystać z obsługi błędów użycia wyjątków, można użyć <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metodę, aby zidentyfikować błędy użycia w kompilacjach do debugowania i <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> tworzy metodę, aby zidentyfikować błędy użycia zarówno w przypadku debugowania, jak i wydania.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-124">Instead of using exception handling for usage errors, you can use the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method to identify usage errors in debug builds, and the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method to identify usage errors in both debug and release builds.</span></span> <span data-ttu-id="cdc4f-125">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kodzie zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="cdc4f-125">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
-   <span data-ttu-id="cdc4f-126">**Błędy programu.**</span><span class="sxs-lookup"><span data-stu-id="cdc4f-126">**Program errors.**</span></span> <span data-ttu-id="cdc4f-127">Błąd programu jest błąd w czasie wykonywania, które nie zawsze można uniknąć przez napisanie kodu wolny od błędów.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-127">A program error is a run-time error that cannot necessarily be avoided by writing bug-free code.</span></span>  
  
     <span data-ttu-id="cdc4f-128">W niektórych przypadkach błąd programu mogą uwzględniać warunek błędu oczekiwanych lub procedury.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-128">In some cases, a program error may reflect an expected or routine error condition.</span></span> <span data-ttu-id="cdc4f-129">W takim przypadku można Unikaj używania wyjątków do czynienia z powodu błędu programu i zamiast tego spróbuj ponownie wykonać operację.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-129">In this case, you may want to avoid using exception handling to deal with the program error and instead retry the operation.</span></span> <span data-ttu-id="cdc4f-130">Na przykład, jeśli użytkownik jest szacowany jako danych wejściowych na datę w określonym formacie, można przeanalizować ciąg daty, wywołując <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> metody, która zwraca <xref:System.Boolean> wartość, która wskazuje, czy operacja analizy zakończyło się pomyślnie, zamiast <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>metody, która zgłasza <xref:System.FormatException> wyjątek, jeśli nie można przekonwertować ciągu daty <xref:System.DateTime> wartość.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-130">For example, if the user is expected to input a date in a particular format, you can parse the date string by calling the <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method, which returns a <xref:System.Boolean> value that indicates whether the parse operation succeeded, instead of using the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method, which throws a <xref:System.FormatException> exception if the date string cannot be converted to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="cdc4f-131">Podobnie, jeśli użytkownik próbuje otworzyć plik, który nie istnieje, można wywołać <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> metodę sprawdzania, czy plik istnieje, a jeśli nie, Monituj użytkownika, czy użytkownik chce, aby go utworzyć.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-131">Similarly, if a user tries to open a file that does not exist, you can first call the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method to check whether the file exists and, if it does not, prompt the user whether he or she wants to create it.</span></span>  
  
     <span data-ttu-id="cdc4f-132">W innych przypadkach błąd programu odzwierciedla nieoczekiwany błąd, który mogą być obsługiwane w kodzie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-132">In other cases, a program error reflects an unexpected error condition that can be handled in your code.</span></span> <span data-ttu-id="cdc4f-133">Na przykład nawet jeśli została sprawdzona, aby upewnić się, że plik istnieje, jego mogą zostać usunięte przed możesz go otworzyć, lub może on być uszkodzony.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-133">For example, even if you've checked to ensure that a file exists, it may be deleted before you can open it, or it may be corrupted.</span></span> <span data-ttu-id="cdc4f-134">W takim przypadku próby otwarcia pliku przez utworzenie wystąpienia <xref:System.IO.StreamReader> obiektu lub wywoływania <xref:System.IO.File.Open%2A> metoda może zgłaszać <xref:System.IO.FileNotFoundException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-134">In that case, trying to open the file by instantiating a <xref:System.IO.StreamReader> object or calling the <xref:System.IO.File.Open%2A> method may throw a <xref:System.IO.FileNotFoundException> exception.</span></span> <span data-ttu-id="cdc4f-135">W takich przypadkach należy użyć obsługi wyjątków, aby odzyskać sprawność po błędzie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-135">In these cases, you should use exception handling to recover from the error.</span></span>  
  
-   <span data-ttu-id="cdc4f-136">**Awarie systemu.**</span><span class="sxs-lookup"><span data-stu-id="cdc4f-136">**System failures.**</span></span> <span data-ttu-id="cdc4f-137">Awaria systemu jest błąd w czasie wykonywania, które nie mogą być obsługiwane programowo w znaczący sposób.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-137">A system failure is a run-time error that cannot be handled programmatically in a meaningful way.</span></span> <span data-ttu-id="cdc4f-138">Na przykład, każda metoda może zgłosić <xref:System.OutOfMemoryException> wyjątek, jeśli środowisko uruchomieniowe języka wspólnego nie może przydzielić więcej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-138">For example, any method can throw an <xref:System.OutOfMemoryException> exception if the common language runtime is unable to allocate additional memory.</span></span> <span data-ttu-id="cdc4f-139">Zazwyczaj awarie systemu nie są obsługiwane przy użyciu obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-139">Ordinarily, system failures are not handled by using exception handling.</span></span> <span data-ttu-id="cdc4f-140">Zamiast tego można użyć zdarzenia, takie jak <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> i wywołać <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> metodę, aby rejestrować informacje o wyjątku i powiadamia użytkownika o awarii, zanim aplikacja zakończy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-140">Instead, you may be able to use an event such as <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> and call the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to log exception information and notify the user of the failure before the application terminates.</span></span>  
  
<a name="TryCatch"></a>   
## <a name="trycatch-blocks"></a><span data-ttu-id="cdc4f-141">Bloki try/catch</span><span class="sxs-lookup"><span data-stu-id="cdc4f-141">Try/catch blocks</span></span>  
 <span data-ttu-id="cdc4f-142">Środowisko uruchomieniowe języka wspólnego udostępnia model obsługi wyjątków, który jest oparty na reprezentację wyjątki jako obiekty i oddzielenie kodu programu i kodu do obsługi wyjątków `try` bloków i `catch` bloków.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-142">The common language runtime provides an exception handling model that is based on the representation of exceptions as objects, and the separation of program code and exception handling code into `try` blocks and `catch` blocks.</span></span> <span data-ttu-id="cdc4f-143">Może istnieć jeden lub więcej `catch` blokuje każde jest zaprojektowane do obsługi określonego typu wyjątku lub jeden blok umożliwiający bardziej konkretny wyjątek niż innego bloku catch.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-143">There can be one or more `catch` blocks, each designed to handle a particular type of exception, or one block designed to catch a more specific exception than another block.</span></span>  
  
 <span data-ttu-id="cdc4f-144">Jeśli aplikacja obsługuje wyjątki, które występują podczas wykonywania bloku kodu aplikacji, kod musi być umieszczony w `try` instrukcji i jest wywoływana `try` bloku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-144">If an application handles exceptions that occur during the execution of a block of application code, the code must be placed within a `try` statement and is called a `try` block.</span></span> <span data-ttu-id="cdc4f-145">Kod aplikacji, który obsługuje wyjątki wyrzucane przez `try` bloku znajduje się w obrębie `catch` instrukcji i jest wywoływana `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-145">Application code that handles exceptions thrown by a `try` block is placed within a `catch` statement and is called a `catch` block.</span></span> <span data-ttu-id="cdc4f-146">Zero lub więcej `catch` bloki są skojarzone z `try` bloku oraz każdy `catch` blokowe operacje dołączania filtr typu, który określa typ obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-146">Zero or more `catch` blocks are associated with a `try` block, and each `catch` block includes a type filter that determines the types of exceptions it handles.</span></span>  
  
 <span data-ttu-id="cdc4f-147">Gdy wystąpi wyjątek w `try` bloku, system przeszukuje skojarzonego `catch` bloków w kolejności, są wyświetlane w kodzie aplikacji, lokalizując `catch` blok, który obsługuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-147">When an exception occurs in a `try` block, the system searches the associated `catch` blocks in the order they appear in application code, until it locates a `catch` block that handles the exception.</span></span> <span data-ttu-id="cdc4f-148">A `catch` blok obsługuje wyjątek typu `T` Jeśli filtr typu bloku catch Określa `T` lub dowolny typ, który `T` pochodzi od klasy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-148">A `catch` block handles an exception of type `T` if the type filter of the catch block specifies `T` or any type that `T` derives from.</span></span> <span data-ttu-id="cdc4f-149">Wyszukiwanie po znajdzie pierwszy zatrzymania systemu `catch` blok, który obsługuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-149">The system stops searching after it finds the first `catch` block that handles the exception.</span></span> <span data-ttu-id="cdc4f-150">Z tego powodu w kodzie aplikacji `catch` blok, który obsługuje typ muszą zostać określone przed `catch` blok, który obsługuje jej typów podstawowych, jak pokazano w przykładzie poniżej w tej sekcji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-150">For this reason, in application code, a `catch` block that handles a type must be specified before a `catch` block that handles its base types, as demonstrated in the example that follows this section.</span></span> <span data-ttu-id="cdc4f-151">W bloku catch, który obsługuje `System.Exception` jest określony jako ostatni.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-151">A catch block that handles `System.Exception` is specified last.</span></span>  
  
 <span data-ttu-id="cdc4f-152">Jeśli żadna z `catch` bloki skojarzone z bieżącym `try` bloku obsługi wyjątków i bieżący `try` bloku jest zagnieżdżony w innych `try` bloków w bieżącym wywołaniu `catch` bloki skojarzone z następnego otaczający `try` bloku są przeszukiwane.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-152">If none of the `catch` blocks associated with the current `try` block handle the exception, and the current `try` block is nested within other `try` blocks in the current call, the `catch` blocks associated with the next enclosing `try` block are searched.</span></span> <span data-ttu-id="cdc4f-153">Jeśli nie `catch` bloku, dla wyjątku zostanie znaleziony, system wyszukuje poprzednie poziomów zagnieżdżenia w bieżącym wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-153">If no `catch` block for the exception is found, the system searches previous nesting levels in the current call.</span></span> <span data-ttu-id="cdc4f-154">Jeśli nie `catch` blokowania, dla wyjątku znajduje się w bieżącym wywołaniu, wyjątek jest przekazywany w górę stosu wywołań i poprzedniej ramki stosu są wyszukiwane `catch` blok, który obsługuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-154">If no `catch` block for the exception is found in the current call, the exception is passed up the call stack, and the previous stack frame is searched for a `catch` block that handles the exception.</span></span> <span data-ttu-id="cdc4f-155">Wyszukiwanie stos wywołań jest kontynuowane aż do obsługi wyjątku lub ma więcej ramek istnieje w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-155">The search of the call stack continues until the exception is handled or until no more frames exist on the call stack.</span></span> <span data-ttu-id="cdc4f-156">W przypadku osiągnięcia góra stosu wywołań bez znajdowanie `catch` blok, który obsługuje wyjątek, domyślny program obsługi wyjątku obsługuje je i kończy działanie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-156">If the top of the call stack is reached without finding a `catch` block that handles the exception, the default exception handler handles it and the application terminates.</span></span>  
  
<a name="Features"></a>   
## <a name="exception-type-features"></a><span data-ttu-id="cdc4f-157">Funkcje typu wyjątku</span><span class="sxs-lookup"><span data-stu-id="cdc4f-157">Exception type features</span></span>  
 <span data-ttu-id="cdc4f-158">Typy wyjątków obsługuje następujące funkcje:</span><span class="sxs-lookup"><span data-stu-id="cdc4f-158">Exception types support the following features:</span></span>  
  
-   <span data-ttu-id="cdc4f-159">Czytelny dla człowieka tekst, który opisuje błąd.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-159">Human-readable text that describes the error.</span></span> <span data-ttu-id="cdc4f-160">Gdy wystąpi wyjątek, środowisko wykonawcze zapewnia dostępne, aby poinformować użytkownika charakter błędu i sugerująca akcji wiadomość SMS w celu rozwiązania problemu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-160">When an exception occurs, the runtime makes a text message available to inform the user of the nature of the error and to suggest action to resolve the problem.</span></span> <span data-ttu-id="cdc4f-161">Ta wiadomość SMS jest przechowywany w <xref:System.Exception.Message%2A> własności obiektu wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-161">This text message is held in the <xref:System.Exception.Message%2A> property of the exception object.</span></span> <span data-ttu-id="cdc4f-162">Podczas tworzenia obiektu wyjątku do konstruktora, aby opisywać szczegóły tego określonego wyjątku można przekazać ciągu tekstowego.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-162">During the creation of the exception object, you can pass a text string to the constructor to describe the details of that particular exception.</span></span> <span data-ttu-id="cdc4f-163">Jeśli nie dostarczono żadnego argumentu komunikat o błędzie do konstruktora, jest używany domyślny komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-163">If no error message argument is supplied to the constructor, the default error message is used.</span></span> <span data-ttu-id="cdc4f-164">Aby uzyskać więcej informacji, zobacz <xref:System.Exception.Message%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-164">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="cdc4f-165">Stan w stosie wywołań gdy wyjątek został zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-165">The state of the call stack when the exception was thrown.</span></span> <span data-ttu-id="cdc4f-166"><xref:System.Exception.StackTrace%2A> Właściwość niesie ze sobą ślad stosu, który może służyć do określenia, gdzie występuje błąd w kodzie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-166">The <xref:System.Exception.StackTrace%2A> property carries a stack trace that can be used to determine where the error occurs in the code.</span></span> <span data-ttu-id="cdc4f-167">Ślad stosu Wyświetla listę wszystkich wywoływanych metod i numery wierszy w pliku źródłowym, gdzie wywołań.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-167">The stack trace lists all the called methods and the line numbers in the source file where the calls are made.</span></span>  
  
<a name="Properties"></a>   
## <a name="exception-class-properties"></a><span data-ttu-id="cdc4f-168">Właściwości klasy wyjątku</span><span class="sxs-lookup"><span data-stu-id="cdc4f-168">Exception class properties</span></span>  
 <span data-ttu-id="cdc4f-169"><xref:System.Exception> Klasa zawiera wiele właściwości, które pomagają identyfikować lokalizacji kodu, typ, plik pomocy i przyczyny, dla wyjątku: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, i <xref:System.Exception.Data%2A>.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-169">The <xref:System.Exception> class includes a number of properties that help identify the code location, the type, the help file, and the reason for the exception: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, and <xref:System.Exception.Data%2A>.</span></span>  
  
 <span data-ttu-id="cdc4f-170">Gdy przyczynowego istnieje między co najmniej dwa wyjątki, <xref:System.Exception.InnerException%2A> właściwość przechowuje te informacje.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-170">When a causal relationship exists between two or more exceptions, the <xref:System.Exception.InnerException%2A> property maintains this information.</span></span> <span data-ttu-id="cdc4f-171">Wyjątek zewnętrzny jest zgłaszany w odpowiedzi na ten wyjątek wewnętrzny.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-171">The outer exception is thrown in response to this inner exception.</span></span> <span data-ttu-id="cdc4f-172">Kod, który obsługuje wyjątek zewnętrzny umożliwia obsłużenie błędu więcej informacji z wcześniej wyjątek wewnętrzny.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-172">The code that handles the outer exception can use the information from the earlier inner exception to handle the error more appropriately.</span></span> <span data-ttu-id="cdc4f-173">Dodatkowe informacje o wyjątku, mogą być przechowywane jako kolekcja par klucz/wartość w <xref:System.Exception.Data%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-173">Supplementary information about the exception can be stored as a collection of key/value pairs in the <xref:System.Exception.Data%2A> property.</span></span>  
  
 <span data-ttu-id="cdc4f-174">Ciąg komunikatu o błędzie, który jest przekazywany do konstruktora podczas tworzenia obiektu wyjątku powinien być zlokalizowany i mogą być dostarczane z pliku zasobów za pomocą <xref:System.Resources.ResourceManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-174">The error message string that is passed to the constructor during the creation of the exception object should be localized and can be supplied from a resource file by using the <xref:System.Resources.ResourceManager> class.</span></span> <span data-ttu-id="cdc4f-175">Aby uzyskać więcej informacji na temat zlokalizowane zasoby, zobacz [tworzenie zestawów satelickich](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) i [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) tematów.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-175">For more information about localized resources, see the [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) and [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) topics.</span></span>  
  
 <span data-ttu-id="cdc4f-176">Aby przyznać użytkownikowi rozbudowane informacje na temat przyczyny wystąpienia wyjątku <xref:System.Exception.HelpLink%2A> właściwość może zawierać adres URL (lub URN) do pliku pomocy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-176">To provide the user with extensive information about why the exception occurred, the <xref:System.Exception.HelpLink%2A> property can hold a URL (or URN) to a help file.</span></span>  
  
 <span data-ttu-id="cdc4f-177"><xref:System.Exception> COR_E_EXCEPTION HRESULT, która ma wartość 0x80131500 korzysta z klasy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-177">The <xref:System.Exception> class uses the HRESULT COR_E_EXCEPTION, which has the value 0x80131500.</span></span>  
  
 <span data-ttu-id="cdc4f-178">Aby uzyskać listę początkowe wartości właściwości wystąpienia <xref:System.Exception> klasy, zobacz <xref:System.Exception.%23ctor%2A> konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-178">For a list of initial property values for an instance of the <xref:System.Exception> class, see the <xref:System.Exception.%23ctor%2A> constructors.</span></span>  
  
<a name="Performance"></a>   
## <a name="performance-considerations"></a><span data-ttu-id="cdc4f-179">Zagadnienia dotyczące wydajności</span><span class="sxs-lookup"><span data-stu-id="cdc4f-179">Performance considerations</span></span>  
 <span data-ttu-id="cdc4f-180">Zgłaszanie lub Obsługa wyjątku zajmuje znaczną ilość zasobów systemowych i czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-180">Throwing or handling an exception consumes a significant amount of system resources and execution time.</span></span> <span data-ttu-id="cdc4f-181">Zgłaszają wyjątki, tylko do obsługi naprawdę nadzwyczajne warunków, aby nie obsługiwać zdarzenia przewidywalne lub Sterowanie przepływem.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-181">Throw exceptions only to handle truly extraordinary conditions, not to handle predictable events or flow control.</span></span> <span data-ttu-id="cdc4f-182">Na przykład w niektórych przypadkach, takich jak kiedy tworzysz bibliotekę klas jest uzasadnione zgłosić wyjątek, jeśli argument metody jest nieprawidłowy, ponieważ oczekujesz, że metoda wywoływana przy użyciu prawidłowych parametrów.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-182">For example, in some cases, such as when you're developing a class library, it's reasonable to throw an exception if a method argument is invalid, because you expect your method to be called with valid parameters.</span></span> <span data-ttu-id="cdc4f-183">Argument nieprawidłowa metoda, jeśli nie jest wynikiem błędu użycia, oznacza, że coś nadzwyczajne wystąpiło.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-183">An invalid method argument, if it is not the result of a usage error, means that something extraordinary has occurred.</span></span> <span data-ttu-id="cdc4f-184">Z drugiej strony nie zgłosić wyjątek, jeśli dane wejściowe użytkownika jest nieprawidłowy, ponieważ można oczekiwać, że użytkowników od czasu do czasu podania nieprawidłowych danych.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-184">Conversely, do not throw an exception if user input is invalid, because you can expect users to occasionally enter invalid data.</span></span> <span data-ttu-id="cdc4f-185">Zamiast tego zapewniają mechanizm ponawiania prób, dzięki czemu użytkownicy mogą wprowadzać prawidłowych danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-185">Instead, provide a retry mechanism so users can enter valid input.</span></span> <span data-ttu-id="cdc4f-186">Nie należy używać wyjątków do obsługi błędów użycia.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-186">Nor should you use exceptions to handle usage errors.</span></span> <span data-ttu-id="cdc4f-187">Zamiast tego należy użyć [potwierdzenia](/visualstudio/debugger/assertions-in-managed-code) Aby zidentyfikować i rozwiązać błędy użycia.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-187">Instead, use [assertions](/visualstudio/debugger/assertions-in-managed-code) to identify and correct usage errors.</span></span>  
  
 <span data-ttu-id="cdc4f-188">Ponadto zgłasza wyjątku, gdy kod powrotny jest wystarczające; Nie można konwertować kod powrotny wyjątek; i czy nie rutynowo catch wyjątku, go zignorować, a następnie kontynuować przetwarzanie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-188">In addition, do not throw an exception when a return code is sufficient; do not convert a return code to an exception; and do not routinely catch an exception, ignore it, and then continue processing.</span></span>  
  
<a name="Rethrow"></a>   
## <a name="re-throwing-an-exception"></a><span data-ttu-id="cdc4f-189">Ponownie zostanie zgłoszony wyjątek</span><span class="sxs-lookup"><span data-stu-id="cdc4f-189">Re-throwing an exception</span></span>  
 <span data-ttu-id="cdc4f-190">W wielu przypadkach program obsługi wyjątku chce po prostu przekazać wyjątek do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-190">In many cases, an exception handler simply wants to pass the exception on to the caller.</span></span> <span data-ttu-id="cdc4f-191">Najczęstszą przyczyną tego błędu w:</span><span class="sxs-lookup"><span data-stu-id="cdc4f-191">This most often occurs in:</span></span>  
  
-   <span data-ttu-id="cdc4f-192">Biblioteka klas, które z kolei opakowuje wywołania metody w bibliotece klas programu .NET Framework lub inne biblioteki klas.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-192">A class library that in turn wraps calls to methods in the .NET Framework class library or other class libraries.</span></span>  
  
-   <span data-ttu-id="cdc4f-193">Aplikacja lub bibliotekę, która napotkał wyjątek krytyczny.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-193">An application or library that encounters a fatal exception.</span></span> <span data-ttu-id="cdc4f-194">Program obsługi wyjątków można zarejestruje wyjątek i ponownie zgłosić wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-194">The exception handler can log the exception and then re-throw the exception.</span></span>  
  
 <span data-ttu-id="cdc4f-195">Zalecanym sposobem ponownie zgłosić wyjątek jest po prostu użyć [throw](~/docs/csharp/language-reference/keywords/throw.md) instrukcji w języku C# i [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) instrukcji w języku Visual Basic, bez uwzględniania wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-195">The recommended way to re-throw an exception is to simply use the [throw](~/docs/csharp/language-reference/keywords/throw.md) statement in C# and the [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) statement in Visual Basic without including an expression.</span></span> <span data-ttu-id="cdc4f-196">Daje to gwarancję, że wszystkie informacje stosu wywołań jest zachowywana, gdy wyjątek jest propagowany do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-196">This ensures that all call stack information is preserved when the exception is propagated to the caller.</span></span> <span data-ttu-id="cdc4f-197">Ilustruje to poniższy przykład.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-197">The following example illustrates this.</span></span> <span data-ttu-id="cdc4f-198">Parametry metody rozszerzenia, `FindOccurrences`, opakowuje wywołania co najmniej jeden <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> bez uprzedniego sprawdzania poprawności argumentów.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-198">A string extension method, `FindOccurrences`, wraps one or more calls to <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> without validating its arguments beforehand.</span></span>  
  
 [!code-csharp[System.Exception.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#6)]
 [!code-vb[System.Exception.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#6)]  
  
 <span data-ttu-id="cdc4f-199">Następnie wywołuje obiekt wywołujący `FindOccurrences` dwa razy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-199">A caller then calls `FindOccurrences` twice.</span></span> <span data-ttu-id="cdc4f-200">W drugim wywołaniu `FindOccurrences`, obiekt wywołujący przekazuje `null` jako ciąg wyszukiwania, które przypadki <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> metodę, aby zgłosić <xref:System.ArgumentNullException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-200">In the second call to `FindOccurrences`, the caller passes a `null` as the search string, which cases the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method to throw an <xref:System.ArgumentNullException> exception.</span></span> <span data-ttu-id="cdc4f-201">Ten wyjątek jest obsługiwany przez `FindOccurrences` metody i ponownie przekazana do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-201">This exception is handled by the `FindOccurrences` method and passed back to the caller.</span></span> <span data-ttu-id="cdc4f-202">Ponieważ instrukcji "throw" jest używana z Brak wyrażenia, wynika z przykładu pokazuje, że stos wywołań jest zachowywany.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-202">Because the throw statement is used with no expression, the output from the example shows that the call stack is preserved.</span></span>  
  
 [!code-csharp[System.Exception.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#7)]
 [!code-vb[System.Exception.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#7)]  
  
 <span data-ttu-id="cdc4f-203">Natomiast jeśli wyjątek jest ponownie zgłaszany przy użyciu</span><span class="sxs-lookup"><span data-stu-id="cdc4f-203">In contrast, if the exception is re-thrown by using the</span></span>  
  
```csharp  
throw e  
```  
  
```vb  
Throw e  
```  
  
 <span data-ttu-id="cdc4f-204">Instrukcja pełny stos wywołań nie są zachowywane, a przykład wygeneruje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="cdc4f-204">statement, the full call stack is not preserved, and the example would generate the following output:</span></span>  
  
```Output  
  
'a' occurs at the following character positions: 4, 7, 15  
  
An exception (ArgumentNullException) occurred.  
Message:  
   Value cannot be null.  
Parameter name: value  
  
Stack Trace:  
      at Library.FindOccurrences(String s, String f)  
   at Example.Main()  
  
```  
  
 <span data-ttu-id="cdc4f-205">Alternatywa nieco bardziej skomplikowane jest nowy wyjątku i zachować informacje stosu wywołań oryginalnego wyjątku w wyjątek wewnętrzny.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-205">A slightly more cumbersome alternative is to throw a new exception, and to preserve the original exception's call stack information in an inner exception.</span></span> <span data-ttu-id="cdc4f-206">Obiekt wywołujący można następnie użyć nowy wyjątek <xref:System.Exception.InnerException%2A> właściwość służąca do pobierania ramki stosu i inne informacje o oryginalnego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-206">The caller can then use the new exception's <xref:System.Exception.InnerException%2A> property to retrieve stack frame and other information about the original exception.</span></span> <span data-ttu-id="cdc4f-207">W tym przypadku jest instrukcji "throw":</span><span class="sxs-lookup"><span data-stu-id="cdc4f-207">In this case, the throw statement is:</span></span>  
  
 [!code-csharp[System.Exception.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#8)]
 [!code-vb[System.Exception.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#8)]  
  
 <span data-ttu-id="cdc4f-208">Kod użytkownika, który obsługuje wyjątek ma poinformować, że <xref:System.Exception.InnerException%2A> właściwość zawiera informacje o oryginalnego wyjątku, tak jak pokazano w poniższym obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-208">The user code that handles the exception has to know that the <xref:System.Exception.InnerException%2A> property contains information about the original exception, as the following exception handler illustrates.</span></span>  
  
 [!code-csharp[System.Exception.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#9)]
 [!code-vb[System.Exception.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#9)]  
  
<a name="Standard"></a>   
## <a name="choosing-standard-exceptions"></a><span data-ttu-id="cdc4f-209">Wybieranie standardowych wyjątków</span><span class="sxs-lookup"><span data-stu-id="cdc4f-209">Choosing standard exceptions</span></span>  
 <span data-ttu-id="cdc4f-210">Jeśli masz zgłosić wyjątek, często służy istniejącego typu wyjątku w .NET Framework, a nie Implementowanie niestandardowego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-210">When you have to throw an exception, you can often use an existing exception type in the .NET Framework instead of implementing a custom exception.</span></span> <span data-ttu-id="cdc4f-211">Należy korzystać z typu Standardowy wyjątek w ramach tych dwóch warunków:</span><span class="sxs-lookup"><span data-stu-id="cdc4f-211">You should use a standard exception type under these two conditions:</span></span>  
  
-   <span data-ttu-id="cdc4f-212">Czy zostanie zgłoszony wyjątek, który jest spowodowany przez błąd użycia (oznacza to błąd w logice programu przez dewelopera, który wywołuje metodę).</span><span class="sxs-lookup"><span data-stu-id="cdc4f-212">You are throwing an exception that is caused by a usage error (that is, by an error in program logic made by the developer who is calling your method).</span></span> <span data-ttu-id="cdc4f-213">Zazwyczaj spowoduje zgłoszenie wyjątku takich jak <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, lub <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-213">Typically, you would throw an exception such as <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, or <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="cdc4f-214">Ciąg, który podasz konstruktora obiektu wyjątku, podczas tworzenia wystąpienia obiektu wyjątku powinna opisywać błąd, dzięki czemu deweloper może go naprawić.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-214">The string you supply to the exception object's constructor when instantiating the exception object should describe the error so that the developer can fix it.</span></span> <span data-ttu-id="cdc4f-215">Aby uzyskać więcej informacji, zobacz <xref:System.Exception.Message%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-215">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="cdc4f-216">Czy obsługa błąd, który może być przekazywane do obiektu wywołującego, z wyjątkiem istniejących .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-216">You are handling an error that can be communicated to the caller with an existing .NET Framework exception.</span></span> <span data-ttu-id="cdc4f-217">Należy zgłosić wyjątek najbardziej pochodnej, która jest możliwe.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-217">You should throw the most derived exception possible.</span></span> <span data-ttu-id="cdc4f-218">Na przykład, jeśli metoda wymaga argumentu jest prawidłowym elementem członkowskim typu wyliczeniowego, powinien zgłaszać <xref:System.ComponentModel.InvalidEnumArgumentException> (najbardziej pochodnej klasy), a nie <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-218">For example, if a method requires an argument to be a valid member of an enumeration type, you should throw an <xref:System.ComponentModel.InvalidEnumArgumentException> (the most derived class) rather than an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="cdc4f-219">W poniższej tabeli wymieniono typowe typy wyjątków i warunki, na których będzie zgłaszają je.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-219">The following table lists common exception types and the conditions under which you would throw them.</span></span>  
  
|<span data-ttu-id="cdc4f-220">Wyjątek</span><span class="sxs-lookup"><span data-stu-id="cdc4f-220">Exception</span></span>|<span data-ttu-id="cdc4f-221">Warunek</span><span class="sxs-lookup"><span data-stu-id="cdc4f-221">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.ArgumentException>|<span data-ttu-id="cdc4f-222">Argument inną niż null, który jest przekazywany do metody jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-222">A non-null argument that is passed to a method is invalid.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="cdc4f-223">Argument, który jest przekazywany do metody jest `null`.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-223">An argument that is passed to a method is `null`.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="cdc4f-224">Argument jest poza zakresem prawidłowych wartości.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-224">An argument is outside the range of valid values.</span></span>|  
|<xref:System.IO.DirectoryNotFoundException>|<span data-ttu-id="cdc4f-225">Część ścieżki katalogu jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-225">Part of a directory path is not valid.</span></span>|  
|<xref:System.DivideByZeroException>|<span data-ttu-id="cdc4f-226">Denominator w liczbą całkowitą lub <xref:System.Decimal> operacji dzielenia wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-226">The denominator in an integer or <xref:System.Decimal> division operation is zero.</span></span>|  
|<xref:System.IO.DriveNotFoundException>|<span data-ttu-id="cdc4f-227">Dysk jest niedostępny lub nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-227">A drive is unavailable or does not exist.</span></span>|  
|<xref:System.IO.FileNotFoundException>|<span data-ttu-id="cdc4f-228">Plik nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-228">A file does not exist.</span></span>|  
|<xref:System.FormatException>|<span data-ttu-id="cdc4f-229">Wartość nie jest w odpowiednim formacie, który ma zostać przekonwertowany z ciągu za pomocą metody konwersji, takie jak `Parse`.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-229">A value is not in an appropriate format to be converted from a string by a conversion method such as `Parse`.</span></span>|  
|<xref:System.IndexOutOfRangeException>|<span data-ttu-id="cdc4f-230">Indeks jest poza granicami tablicy lub kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-230">An index is outside the bounds of an array or collection.</span></span>|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="cdc4f-231">Wywołanie metody jest nieprawidłowy w bieżącym stanie obiektu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-231">A method call is invalid in an object's current state.</span></span>|  
|<xref:System.Collections.Generic.KeyNotFoundException>|<span data-ttu-id="cdc4f-232">Nie można odnaleźć określonego klucza do uzyskiwania dostępu do elementu członkowskiego w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-232">The specified key for accessing a member in a collection cannot be found.</span></span>|  
|<xref:System.NotImplementedException>|<span data-ttu-id="cdc4f-233">Metoda lub operacja nie jest zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-233">A method or operation is not implemented.</span></span>|  
|<xref:System.NotSupportedException>|<span data-ttu-id="cdc4f-234">Metoda lub operacja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-234">A method or operation is not supported.</span></span>|  
|<xref:System.ObjectDisposedException>|<span data-ttu-id="cdc4f-235">Operacja jest wykonywana na obiekt, który został usunięty.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-235">An operation is performed on an object that has been disposed.</span></span>|  
|<xref:System.OverflowException>|<span data-ttu-id="cdc4f-236">Operacje arytmetyczne, rzutowania lub konwersji operacja powoduje przepełnienie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-236">An arithmetic, casting, or conversion operation results in an overflow.</span></span>|  
|<xref:System.IO.PathTooLongException>|<span data-ttu-id="cdc4f-237">Nazwa pliku lub ścieżki przekracza maksymalną długość zdefiniowaną przez system.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-237">A path or file name exceeds the maximum system-defined length.</span></span>|  
|<xref:System.PlatformNotSupportedException>|<span data-ttu-id="cdc4f-238">Operacja nie jest obsługiwana na bieżącej platformie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-238">The operation is not supported on the current platform.</span></span>|  
|<xref:System.RankException>|<span data-ttu-id="cdc4f-239">Tablica z nieprawidłową liczbą wymiarów jest przekazywany do metody.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-239">An array with the wrong number of dimensions is passed to a method.</span></span>|  
|<xref:System.TimeoutException>|<span data-ttu-id="cdc4f-240">Przedział czasu przydzielony na wykonanie operacji wygasł.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-240">The time interval allotted to an operation has expired.</span></span>|  
|<xref:System.UriFormatException>|<span data-ttu-id="cdc4f-241">Nieprawidłowy identyfikator (URI) jest używany.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-241">An invalid Uniform Resource Identifier (URI) is used.</span></span>|  
  
<a name="Custom"></a>   
## <a name="implementing-custom-exceptions"></a><span data-ttu-id="cdc4f-242">Implementowanie wyjątków niestandardowych</span><span class="sxs-lookup"><span data-stu-id="cdc4f-242">Implementing custom exceptions</span></span>  
 <span data-ttu-id="cdc4f-243">Przy użyciu istniejących wyjątek .NET Framework do obsługi warunek błędu nie jest w następujących przypadkach odpowiednia:</span><span class="sxs-lookup"><span data-stu-id="cdc4f-243">In the following cases, using an existing .NET Framework exception to handle an error condition is not adequate:</span></span>  
  
-   <span data-ttu-id="cdc4f-244">Gdy wyjątek odzwierciedla błąd unikatowy program, który nie może być mapowana na istniejące wyjątek .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-244">When the exception reflects a unique program error that cannot be mapped to an existing .NET Framework exception.</span></span>  
  
-   <span data-ttu-id="cdc4f-245">Gdy wyjątek wymaga obsługi, który różni się od obsługi, który jest odpowiedni dla istniejących wyjątek .NET Framework lub wyjątku, musi rozróżniane z podobnych wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-245">When the exception requires handling that is different from the handling that is appropriate for an existing .NET Framework exception, or the exception must be disambiguated from a similar exception.</span></span> <span data-ttu-id="cdc4f-246">Na przykład, jeśli Generowanie <xref:System.ArgumentOutOfRangeException> wyjątek podczas analizowania reprezentację liczbową ciąg, który znajduje się poza zakresem typu całkowitego docelowej, nie chcesz używać ten sam wyjątek wystąpił błąd powstały na skutek obiekt wywołujący nie podano odpowiednie wartości ograniczone podczas wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-246">For example, if you throw an <xref:System.ArgumentOutOfRangeException> exception when parsing the numeric representation of a string that is out of range of the target integral type, you would not want to use the same exception for an error that results from the caller not supplying the appropriate constrained values when calling the method.</span></span>  
  
 <span data-ttu-id="cdc4f-247"><xref:System.Exception> Klasa jest klasą bazową wszystkich wyjątków w programie .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-247">The <xref:System.Exception> class is the base class of all exceptions in the .NET Framework.</span></span> <span data-ttu-id="cdc4f-248">Wiele klas pochodnych opierają się na zachowaniu dziedziczonych członków <xref:System.Exception> klasy; nie zastępowały one członkowie <xref:System.Exception>, ani nie mogą określać żadnych unikatowych elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-248">Many derived classes rely on the inherited behavior of the members of the <xref:System.Exception> class; they do not override the members of <xref:System.Exception>, nor do they define any unique members.</span></span>  
  
 <span data-ttu-id="cdc4f-249">Aby zdefiniować własne klasy wyjątku:</span><span class="sxs-lookup"><span data-stu-id="cdc4f-249">To define your own exception class:</span></span>  
  
1.  <span data-ttu-id="cdc4f-250">Definiowanie klasy, która dziedziczy po elemencie <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-250">Define a class that inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="cdc4f-251">Jeśli to konieczne, należy zdefiniować żadnych unikatowych elementów członkowskich wymagane przez klasy, aby podać dodatkowe informacje o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-251">If necessary, define any unique members needed by your class to provide additional information about the exception.</span></span> <span data-ttu-id="cdc4f-252">Na przykład <xref:System.ArgumentException> klasa zawiera <xref:System.ArgumentException.ParamName%2A> właściwość, która określa nazwę parametru, którego argument spowodował wyjątek, a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> zawiera właściwość <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> właściwość, która określa interwał limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-252">For example, the <xref:System.ArgumentException> class includes a <xref:System.ArgumentException.ParamName%2A> property that specifies the name of the parameter whose argument caused the exception, and the <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> property includes a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> property that indicates the time-out interval.</span></span>  
  
2.  <span data-ttu-id="cdc4f-253">Jeśli to konieczne, należy zastąpić wszystkie dziedziczone elementy członkowskie funkcji, których chcesz zmieniać ani modyfikować.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-253">If necessary, override any inherited members whose functionality you want to change or modify.</span></span> <span data-ttu-id="cdc4f-254">Należy pamiętać, że większość istniejących pochodne klasy <xref:System.Exception> nie zastępują zachowanie dziedziczone elementy członkowskie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-254">Note that most existing derived classes of <xref:System.Exception> do not override the behavior of inherited members.</span></span>  
  
3.  <span data-ttu-id="cdc4f-255">Ustal, czy obiekt niestandardowy wyjątek jest możliwy do serializacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-255">Determine whether your custom exception object is serializable.</span></span> <span data-ttu-id="cdc4f-256">Serializacja umożliwia zapisanie informacji o wyjątku i pozwala na informacje o wyjątku współdzielonych przez pracowników i serwera proxy klienta w kontekście usług zdalnych.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-256">Serialization enables you to save information about the exception and permits exception information to be shared by a server and a client proxy in a remoting context.</span></span> <span data-ttu-id="cdc4f-257">Aby obiekt wyjątku serializacji, oznacz go za pomocą <xref:System.SerializableAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-257">To make the exception object serializable, mark it with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
4.  <span data-ttu-id="cdc4f-258">Zdefiniuj Konstruktory klasy wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-258">Define the constructors of your exception class.</span></span> <span data-ttu-id="cdc4f-259">Zazwyczaj klasy wyjątków mają co najmniej jedną z następujących konstruktorów:</span><span class="sxs-lookup"><span data-stu-id="cdc4f-259">Typically, exception classes have one or more of the following constructors:</span></span>  
  
    -   <span data-ttu-id="cdc4f-260"><xref:System.Exception.%23ctor>, który używa domyślnych wartości do zainicjowania właściwości nowy obiekt wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-260"><xref:System.Exception.%23ctor>, which uses default values to initialize the properties of a new exception object.</span></span>  
  
    -   <span data-ttu-id="cdc4f-261"><xref:System.Exception.%23ctor%28System.String%29>, która inicjuje nowy obiekt wyjątku z określonym komunikatem o błędzie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-261"><xref:System.Exception.%23ctor%28System.String%29>, which initializes a new exception object with a specified error message.</span></span>  
  
    -   <span data-ttu-id="cdc4f-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, która inicjuje nowy obiekt wyjątku z określonego błędu wiadomości i wewnętrzny wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, which initializes a new exception object with a specified error message and inner exception.</span></span>  
  
    -   <span data-ttu-id="cdc4f-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, która jest `protected` danych serializowanych na fragmenty Konstruktor, który inicjuje nowy obiekt wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, which is a `protected` constructor that initializes a new exception object from serialized data.</span></span> <span data-ttu-id="cdc4f-264">Ten konstruktor powinien implementować, jeśli wybrano możliwy do serializacji obiektu wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-264">You should implement this constructor if you've chosen to make your exception object serializable.</span></span>  
  
 <span data-ttu-id="cdc4f-265">Poniższy przykład ilustruje użycie klasy niestandardowy wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-265">The following example illustrates the use of a custom exception class.</span></span> <span data-ttu-id="cdc4f-266">Definiuje `NotPrimeException` wyjątek, który jest zgłaszany, gdy klient próbuje pobrać sekwencję liczb pierwszych, określając początkowy numer, który nie jest podstawowym.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-266">It defines a `NotPrimeException` exception that is thrown when a client tries to retrieve a sequence of prime numbers by specifying a starting number that is not prime.</span></span> <span data-ttu-id="cdc4f-267">Wyjątek definiuje nową właściwość `NonPrime`, która zwraca innych niż prime numer który spowodował wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-267">The exception defines a new property, `NonPrime`, that returns the non-prime number that caused the exception.</span></span> <span data-ttu-id="cdc4f-268">Oprócz wykonania chroniony konstruktor bez parametrów i konstruktora z <xref:System.Runtime.Serialization.SerializationInfo> i <xref:System.Runtime.Serialization.StreamingContext> parametry w celu serializacji, `NotPrimeException` klasa definiuje trzy konstruktory dodatkowe do obsługi `NonPrime` właściwości.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-268">Besides implementing a protected parameterless constructor and a constructor with <xref:System.Runtime.Serialization.SerializationInfo> and <xref:System.Runtime.Serialization.StreamingContext> parameters for serialization, the `NotPrimeException` class defines three additional constructors to support the `NonPrime` property.</span></span>  <span data-ttu-id="cdc4f-269">Każdy Konstruktor wywołuje konstruktora klasy bazowej, oprócz zachowania wartości z innych niż liczba pierwsza.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-269">Each constructor calls a base class constructor in addition to preserving the value of the non-prime number.</span></span> <span data-ttu-id="cdc4f-270">`NotPrimeException` Klasy, również jest oznaczona za pomocą <xref:System.SerializableAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-270">The `NotPrimeException` class is also marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Exception.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/notprimeexception.cs#1)]
 [!code-vb[System.Exception.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/notprimeexception.vb#1)]  
  
 <span data-ttu-id="cdc4f-271">`PrimeNumberGenerator` Pokazano w poniższym przykładzie klasa używa nazwanego sitem Eratostenesa do obliczania sekwencji liczb pierwszych od 2 do limitu określonego przez klienta w wywołaniu do jej konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-271">The `PrimeNumberGenerator` class shown in the following example uses the Sieve of Eratosthenes to calculate the sequence of prime numbers from 2 to a limit specified by the client in the call to its class constructor.</span></span> <span data-ttu-id="cdc4f-272">`GetPrimesFrom` Metoda zwraca wszystkie liczby pierwsze, które są większe niż lub równa określonej dolną granicę, ale zgłasza `NotPrimeException` Jeśli tego dolną granicę nie jest liczba pierwsza.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-272">The `GetPrimesFrom` method returns all prime numbers that are greater than or equal to a specified lower limit, but throws a `NotPrimeException` if that lower limit is not a prime number.</span></span>  
  
 [!code-csharp[System.Exception.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/primenumbergenerator.cs#2)]
 [!code-vb[System.Exception.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/primenumbergenerator.vb#2)]  
  
 <span data-ttu-id="cdc4f-273">Poniższy przykład wykonuje dwa wywołania `GetPrimesFrom` metody przy użyciu innego niż liczb pierwszych, z których jedna przekracza granice domen aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-273">The following example makes two calls to the `GetPrimesFrom` method with non-prime numbers, one of which crosses application domain boundaries.</span></span> <span data-ttu-id="cdc4f-274">W obu przypadkach wyjątek jest generowany i pomyślnie obsłużony w kodzie klienta.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-274">In both cases, the exception is thrown and successfully handled in client code.</span></span>  
  
 [!code-csharp[System.Exception.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/example.cs#3)]
 [!code-vb[System.Exception.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/example.vb#3)]  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="cdc4f-275">Windows Runtime i [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="cdc4f-275">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="cdc4f-276">W [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] dla [!INCLUDE[win8](~/includes/win8-md.md)], niektóre informacje o wyjątku jest zazwyczaj utracone w przypadku, gdy wyjątek jest propagowany przez ramek stosu — .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-276">In [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] for [!INCLUDE[win8](~/includes/win8-md.md)], some exception information is typically lost when an exception is propagated through non-.NET Framework stack frames.</span></span> <span data-ttu-id="cdc4f-277">Począwszy od [!INCLUDE[net_v451](~/includes/net-v451-md.md)] i [!INCLUDE[win81](~/includes/win81-md.md)], środowisko uruchomieniowe języka wspólnego w dalszym ciągu używa oryginalny <xref:System.Exception> obiektu, który został zgłoszony, chyba że ten wyjątek został zmodyfikowany w ramce stosu — .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-277">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the common language runtime continues to use the original <xref:System.Exception> object that was thrown unless that exception was modified in a non-.NET Framework stack frame.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-278">W poniższym przykładzie pokazano `catch` blok, który jest zdefiniowany w celu obsługi <xref:System.ArithmeticException> błędy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-278">The following example demonstrates a `catch` block that is defined to handle <xref:System.ArithmeticException> errors.</span></span> <span data-ttu-id="cdc4f-279">To `catch` również zablokować połowy <xref:System.DivideByZeroException> błędy, ponieważ <xref:System.DivideByZeroException> pochodzi od klasy <xref:System.ArithmeticException> i ma nie `catch` jawnie określony dla bloku <xref:System.DivideByZeroException> błędy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-279">This `catch` block also catches <xref:System.DivideByZeroException> errors, because <xref:System.DivideByZeroException> derives from <xref:System.ArithmeticException> and there is no `catch` block explicitly defined for <xref:System.DivideByZeroException> errors.</span></span>  
  
 [!code-cpp[CatchException#1](~/samples/snippets/cpp/VS_Snippets_CLR/CatchException/CPP/catchexception.cpp#1)]
 [!code-csharp[CatchException#1](~/samples/snippets/csharp/VS_Snippets_CLR/CatchException/CS/catchexception.cs#1)]
 [!code-vb[CatchException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CatchException/VB/catchexception.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="cdc4f-280">Obsługa i zgłaszanie wyjątków</span><span class="sxs-lookup"><span data-stu-id="cdc4f-280">Handling and Throwing Exceptions</span></span></related>
    <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md"><span data-ttu-id="cdc4f-281">Opakowanie i wdrażanie zasobów w aplikacjach klasycznych</span><span class="sxs-lookup"><span data-stu-id="cdc4f-281">Packaging and Deploying Resources in Desktop Apps</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1"><span data-ttu-id="cdc4f-282">Potwierdzenia w zarządzanym kodzie</span><span class="sxs-lookup"><span data-stu-id="cdc4f-282">Assertions in Managed Code</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cdc4f-283">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-283">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cdc4f-284">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-284">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-285">Ten konstruktor inicjuje <xref:System.Exception.Message%2A> właściwości nowego wystąpienia dostarczane przez system komunikatu, opisujący błąd i uwzględnia bieżącej kultury systemu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-285">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error and takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="cdc4f-286">Wszystkie klasy pochodne powinny dostarczyć ten konstruktor domyślny.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-286">All the derived classes should provide this default constructor.</span></span> <span data-ttu-id="cdc4f-287">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-287">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="cdc4f-288">Właściwość</span><span class="sxs-lookup"><span data-stu-id="cdc4f-288">Property</span></span>|<span data-ttu-id="cdc4f-289">Wartość</span><span class="sxs-lookup"><span data-stu-id="cdc4f-289">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="cdc4f-290">Odwołanie o wartości null (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="cdc4f-290">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="cdc4f-291">Zlokalizowany opis dostarczany przez system.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-291">A system-supplied localized description.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-292">Poniższy przykładowy kod pochodzi `Exception` , który używa wstępnie zdefiniowaną wiadomość.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-292">The following code example derives an `Exception` that uses a predefined message.</span></span> <span data-ttu-id="cdc4f-293">Demonstruje użycie konstruktora bez parametrów dla klasy pochodnej, a podstawą `Exception` klasy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-293">The code demonstrates the use of the parameterless constructor for the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/new.cpp#1)]
 [!code-csharp[System.Exception.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/new.cs#1)]
 [!code-vb[System.Exception.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/new.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new Exception : string -&gt; Exception" Usage="new System.Exception message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="cdc4f-294">Komunikat, który opisuje błąd.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-294">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="cdc4f-295">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy przy użyciu określonego komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-295">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-296">Ten konstruktor inicjuje <xref:System.Exception.Message%2A> właściwości nowego wystąpienia przy użyciu `message` parametru.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-296">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance by using the `message` parameter.</span></span> <span data-ttu-id="cdc4f-297">Jeśli `message` parametr jest `null`, to jest taka sama, co wywołanie metody <xref:System.Exception.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-297">If the `message` parameter is `null`, this is the same as calling the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="cdc4f-298">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-298">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="cdc4f-299">Właściwość</span><span class="sxs-lookup"><span data-stu-id="cdc4f-299">Property</span></span>|<span data-ttu-id="cdc4f-300">Wartość</span><span class="sxs-lookup"><span data-stu-id="cdc4f-300">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="cdc4f-301">Odwołanie o wartości null (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="cdc4f-301">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="cdc4f-302">Ciąg komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-302">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-303">Poniższy przykładowy kod pochodzi `Exception` dla określonego warunku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-303">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="cdc4f-304">Przykład demonstruje użycie konstruktora przyjmującego komunikat określony przez obiekt wywołujący jako parametru, zarówno w klasie pochodnej, jak i w bazie `Exception` klasy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-304">The code demonstrates the use of the constructor that takes a caller-specified message as a parameter, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/news.cpp#2)]
 [!code-csharp[System.Exception.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/news.cs#2)]
 [!code-vb[System.Exception.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/news.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Exception (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new Exception : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; Exception" Usage="new System.Exception (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="cdc4f-305"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Zawierający dane zserializowanego obiektu dotyczące zgłaszanego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-305">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="cdc4f-306"><see cref="T:System.Runtime.Serialization.StreamingContext" /> Zawierający informacje kontekstowe o źródle lub miejscu docelowym.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-306">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="cdc4f-307">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy z serializowanych danych.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-307">Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-308">Ten konstruktor jest wywoływana podczas deserializacji do odtworzenia obiektu wyjątku przesyłanego za pomocą strumienia.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-308">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="cdc4f-309">Aby uzyskać więcej informacji, zobacz [XML oraz serializacji protokołu SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="cdc4f-309">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-310">Poniższy kod definiuje pochodnej serializacji `Exception` klasy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-310">The following code example defines a derived serializable `Exception` class.</span></span> <span data-ttu-id="cdc4f-311">Kod wymusza błąd dzielenie przez 0, a następnie tworzy wystąpienie klasy pochodnej wyjątków za pomocą (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-311">The code forces a divide-by-0 error and then creates an instance of the derived exception using the (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) constructor.</span></span> <span data-ttu-id="cdc4f-312">Kod wykonuje serializację wystąpień z plikiem, deserializuje pliku do nowy wyjątek wyniku weryfikacji zgłasza wyjątek, a następnie przechwytuje i wyświetla dane o wyjątkach.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-312">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cdc4f-313"><paramref name="info" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-313"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="cdc4f-314">Nazwa klasy jest <see langword="null" /> lub <see cref="P:System.Exception.HResult" /> wynosi zero (0).</span><span class="sxs-lookup"><span data-stu-id="cdc4f-314">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="cdc4f-315">Serializacja XML i SOAP</span><span class="sxs-lookup"><span data-stu-id="cdc4f-315">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new Exception : string * Exception -&gt; Exception" Usage="new System.Exception (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="cdc4f-316">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-316">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="cdc4f-317">Wyjątek będący przyczyną bieżącego wyjątku lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), jeśli jest określony żaden wyjątek wewnętrzny.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-317">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</span></span></param>
        <summary><span data-ttu-id="cdc4f-318">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy przy użyciu określonego komunikatu o błędzie i odwołania do wewnętrznego wyjątku, który jest przyczyną tego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-318">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-319">Wyjątek generowany jako bezpośredni wynik poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-319">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="cdc4f-320"><xref:System.Exception.InnerException%2A> Właściwość zwraca taką samą wartość, która jest przekazywana do konstruktora, lub odwołanie o wartości null (`Nothing` w języku Visual Basic) jeżeli <xref:System.Exception.InnerException%2A> nie dostarcza wartości wewnętrznego wyjątku do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-320">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="cdc4f-321">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-321">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="cdc4f-322">Właściwość</span><span class="sxs-lookup"><span data-stu-id="cdc4f-322">Property</span></span>|<span data-ttu-id="cdc4f-323">Wartość</span><span class="sxs-lookup"><span data-stu-id="cdc4f-323">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="cdc4f-324">Odwołanie do wewnętrznego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-324">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="cdc4f-325">Ciąg komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-325">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-326">Poniższy przykładowy kod pochodzi `Exception` dla określonego warunku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-326">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="cdc4f-327">Przykład demonstruje użycie konstruktora przyjmującego komunikat i wyjątek wewnętrzny, jako parametry, zarówno w klasie pochodnej, jak i w bazie `Exception` klasy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-327">The code demonstrates the use of the constructor that takes a message and an inner exception as parameters, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/newsi.cpp#3)]
 [!code-csharp[System.Exception.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/newsi.cs#3)]
 [!code-vb[System.Exception.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/newsi.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Data" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Data { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Collections.IDictionary" Usage="System.Exception.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdc4f-328">Pobiera kolekcję par klucz/wartość, które zawierają dodatkowe informacje zdefiniowane przez użytkownika o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-328">Gets a collection of key/value pairs that provide additional user-defined information about the exception.</span></span></summary>
        <value><span data-ttu-id="cdc4f-329">Obiekt, który implementuje <see cref="T:System.Collections.IDictionary" /> interfejs i zawiera kolekcję par klucz/wartość zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-329">An object that implements the <see cref="T:System.Collections.IDictionary" /> interface and contains a collection of user-defined key/value pairs.</span></span> <span data-ttu-id="cdc4f-330">Wartością domyślną jest pusta kolekcja.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-330">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-331">Użyj <xref:System.Collections.IDictionary?displayProperty=nameWithType> obiektu zwróconego przez <xref:System.Exception.Data%2A> właściwość, aby przechowywać i pobierać informacje dodatkowe, które są odpowiednie do wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-331">Use the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object returned by the <xref:System.Exception.Data%2A> property to store and retrieve supplementary information relevant to the exception.</span></span> <span data-ttu-id="cdc4f-332">Informacje są w formularzu dowolną liczbę par klucz/wartość zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-332">The information is in the form of an arbitrary number of user-defined key/value pairs.</span></span> <span data-ttu-id="cdc4f-333">Kluczowym elementem każdej pary klucz/wartość jest zazwyczaj ciąg identyfikujący składnik wartości pary mogą być dowolnego typu obiektu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-333">The key component of each key/value pair is typically an identifying string, whereas the value component of the pair can be any type of object.</span></span>  
  
## <a name="keyvalue-pair-security"></a><span data-ttu-id="cdc4f-334">Zabezpieczenia pary klucz/wartość</span><span class="sxs-lookup"><span data-stu-id="cdc4f-334">Key/Value Pair Security</span></span>  
 <span data-ttu-id="cdc4f-335">Pary klucz/wartość przechowywana w kolekcji zwróconej przez <xref:System.Exception.Data%2A> właściwości nie są bezpieczne.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-335">The key/value pairs stored in the collection returned by the <xref:System.Exception.Data%2A> property are not secure.</span></span> <span data-ttu-id="cdc4f-336">Jeśli Twoja aplikacja wywołuje szereg zagnieżdżonych procedury, a każda procedura zawiera obsługi wyjątków, wynikowy stos wywołań zawiera hierarchię tych programów obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-336">If your application calls a nested series of routines, and each routine contains exception handlers, the resulting call stack contains a hierarchy of those exception handlers.</span></span> <span data-ttu-id="cdc4f-337">Jeśli procedura niższego poziomu zgłasza wyjątek, wszystkie obsługi wyjątków wyższego poziomu w hierarchii stos wywołań może odczytywać i/lub zmodyfikować pary klucz/wartość przechowywanych w kolekcji przez inne obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-337">If a lower-level routine throws an exception, any upper-level exception handler in the call stack hierarchy can read and/or modify the key/value pairs stored in the collection by any other exception handler.</span></span> <span data-ttu-id="cdc4f-338">Oznacza to, że musisz gwarantować, że informacje zawarte w pary klucz/wartość nie jest poufne i że aplikacja będzie działać prawidłowo Jeśli informacje zawarte w pary klucz/wartość jest uszkodzony.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-338">This means you must guarantee that the information in the key/value pairs is not confidential and that your application will operate correctly if the information in the key/value pairs is corrupted.</span></span>  
  
## <a name="key-conflicts"></a><span data-ttu-id="cdc4f-339">Konflikty klucza</span><span class="sxs-lookup"><span data-stu-id="cdc4f-339">Key Conflicts</span></span>  
 <span data-ttu-id="cdc4f-340">Konflikt klucza występuje, gdy programy obsługi wyjątków różnych określić ten sam klucz dostępu jest parą klucz/wartość do.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-340">A key conflict occurs when different exception handlers specify the same key to access a key/value pair.</span></span> <span data-ttu-id="cdc4f-341">Tworzenie aplikacji, ponieważ konsekwencją konflikt klucza jest, że programy obsługi wyjątków niższego poziomu przypadkowo mogą komunikować się z wyższego poziomu obsługi wyjątków, a ta komunikacja może spowodować błędy subtelne programu, należy zachować ostrożność.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-341">Use caution when developing your application because the consequence of a key conflict is that lower-level exception handlers can inadvertently communicate with higher-level exception handlers, and this communication might cause subtle program errors.</span></span> <span data-ttu-id="cdc4f-342">Jednak w przypadku należy zachować ostrożność umożliwia konfliktów klucza ulepszanie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-342">However, if you are cautious you can use key conflicts to enhance your application.</span></span>  
  
## <a name="avoiding-key-conflicts"></a><span data-ttu-id="cdc4f-343">Unikanie konfliktów klucza</span><span class="sxs-lookup"><span data-stu-id="cdc4f-343">Avoiding Key Conflicts</span></span>  
 <span data-ttu-id="cdc4f-344">Przyjęcie konwencji nazewnictwa do generowania unikatowego klucza dla pary klucz/wartość, aby uniknąć konfliktów klucza.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-344">Avoid key conflicts by adopting a naming convention to generate unique keys for key/value pairs.</span></span> <span data-ttu-id="cdc4f-345">Na przykład konwencji nazewnictwa może przynieść klucza, który składa się z nazwą rozdzielanego kropką aplikacji, metody, która zawiera dodatkowe informacje dotyczące pary i unikatowy identyfikator.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-345">For example, a naming convention might yield a key that consists of the period-delimited name of your application, the method that provides supplementary information for the pair, and a unique identifier.</span></span>  
  
 <span data-ttu-id="cdc4f-346">Załóżmy, że dwie aplikacje o nazwie produktów i dostawców, każda ma metodę o nazwie sprzedaży.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-346">Suppose two applications, named Products and Suppliers, each has a method named Sales.</span></span> <span data-ttu-id="cdc4f-347">Metoda sprzedaży w aplikacji produktów zawiera numer identyfikacyjny (magazynową lub jednostki SKU) produktu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-347">The Sales method in the Products application provides the identification number (the stock keeping unit or SKU) of a product.</span></span> <span data-ttu-id="cdc4f-348">Metoda sprzedaży w aplikacji dostawcy zawiera numer identyfikacyjny lub identyfikator SID dostawcy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-348">The Sales method in the Suppliers application provides the identification number, or SID, of a supplier.</span></span> <span data-ttu-id="cdc4f-349">W związku z tym konwencji nazewnictwa, w tym przykładzie daje kluczy "Products.Sales.SKU" i "Suppliers.Sales.SID".</span><span class="sxs-lookup"><span data-stu-id="cdc4f-349">Consequently, the naming convention for this example yields the keys, "Products.Sales.SKU" and "Suppliers.Sales.SID".</span></span>  
  
## <a name="exploiting-key-conflicts"></a><span data-ttu-id="cdc4f-350">Wykorzystanie konfliktów klucza</span><span class="sxs-lookup"><span data-stu-id="cdc4f-350">Exploiting Key Conflicts</span></span>  
 <span data-ttu-id="cdc4f-351">Wykorzystanie konfliktów klucza przy użyciu obecności co najmniej jeden klucz specjalną, wstępnie ustalane do kontrolowania przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-351">Exploit key conflicts by using the presence of one or more special, prearranged keys to control processing.</span></span> <span data-ttu-id="cdc4f-352">Załóżmy scenariusz, najwyższego poziomu obsługi wyjątków w hierarchii stosu wywołań przechwytuje wszystkie wyjątki generowane przez programy obsługi wyjątków niższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-352">Suppose, in one scenario, the highest level exception handler in the call stack hierarchy catches all exceptions thrown by lower-level exception handlers.</span></span> <span data-ttu-id="cdc4f-353">Jeśli istnieje para klucza i wartości, przy użyciu specjalnego klucza, program obsługi wyjątków wyższego poziomu formatuje pozostałe pary klucz/wartość w <xref:System.Collections.IDictionary> obiektu w jakiś sposób niestandardowych; w przeciwnym razie pozostałe pary klucz/wartość są formatowane w normalny sposób.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-353">If a key/value pair with a special key exists, the high-level exception handler formats the remaining key/value pairs in the <xref:System.Collections.IDictionary> object in some nonstandard way; otherwise, the remaining key/value pairs are formatted in some normal manner.</span></span>  
  
 <span data-ttu-id="cdc4f-354">Teraz załóżmy, w innym scenariuszu program obsługi wyjątków, na każdym poziomie hierarchii stosu wywołań przechwytuje wyjątek zgłoszony przez kolejna procedura obsługi wyjątków niższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-354">Now suppose, in another scenario, the exception handler at each level of the call stack hierarchy catches the exception thrown by the next lower-level exception handler.</span></span> <span data-ttu-id="cdc4f-355">Ponadto każdy program obsługi wyjątków zna zbiorze zwróconym przez <xref:System.Exception.Data%2A> właściwość zawiera zestaw pary klucz/wartość, które mogą być udostępniane za pomocą wstępnie ustalane zestawu kluczy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-355">In addition, each exception handler knows the collection returned by the <xref:System.Exception.Data%2A> property contains a set of key/value pairs that can be accessed with a prearranged set of keys.</span></span>  
  
 <span data-ttu-id="cdc4f-356">Każdy program obsługi wyjątków używa wstępnie ustalane zestawu kluczy do aktualizacji składnik wartości w odpowiednich pary klucz/wartość przy użyciu informacji specyficznych dla tego programu obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-356">Each exception handler uses the prearranged set of keys to update the value component of the corresponding key/value pair with information unique to that exception handler.</span></span> <span data-ttu-id="cdc4f-357">Po zakończeniu procesu aktualizacji program obsługi wyjątków zgłasza wyjątek do następnego wyższego poziomu obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-357">After the update process is complete, the exception handler throws the exception to the next higher-level exception handler.</span></span> <span data-ttu-id="cdc4f-358">Na koniec najwyższego poziomu obsługi wyjątków uzyskuje dostęp do pary klucz/wartość i wyświetla informacje o aktualizacji skonsolidowanego z całej obsługi wyjątku z niższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-358">Finally, the highest level exception handler accesses the key/value pairs and displays the consolidated update information from all the lower-level exception handlers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-359">Poniższy przykład pokazuje, jak dodawanie i pobieranie informacji za pomocą <xref:System.Exception.Data%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-359">The following example demonstrates how to add and retrieve information using the <xref:System.Exception.Data%2A> property.</span></span>  
  
 [!code-cpp[exception.data#1](~/samples/snippets/cpp/VS_Snippets_CLR/exception.data/CPP/data.cpp#1)]
 [!code-csharp[exception.data#1](~/samples/snippets/csharp/VS_Snippets_CLR/exception.data/CS/data.cs#1)]
 [!code-vb[exception.data#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/exception.data/VB/data.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.DictionaryEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public virtual Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Exception ^ GetBaseException();" />
      <MemberSignature Language="F#" Value="abstract member GetBaseException : unit -&gt; Exception&#xA;override this.GetBaseException : unit -&gt; Exception" Usage="exception.GetBaseException " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetBaseException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cdc4f-360">Po przesłonięciu w klasie pochodnej zwraca <see cref="T:System.Exception" /> czyli główną przyczynę jeden lub kilka kolejnych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-360">When overridden in a derived class, returns the <see cref="T:System.Exception" /> that is the root cause of one or more subsequent exceptions.</span></span></summary>
        <returns><span data-ttu-id="cdc4f-361">Pierwszy wyjątek w łańcuchu wyjątków.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-361">The first exception thrown in a chain of exceptions.</span></span> <span data-ttu-id="cdc4f-362">Jeśli <see cref="P:System.Exception.InnerException" /> właściwość bieżący wyjątek jest odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), ta właściwość zwraca bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-362">If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (<see langword="Nothing" /> in Visual Basic), this property returns the current exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-363">Łańcuch wyjątków zawiera zestaw wyjątków tak, aby każdy w łańcuchu wyjątek bezpośrednio z powodu wyjątku, do którego odwołuje się jego `InnerException` właściwości.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-363">A chain of exceptions consists of a set of exceptions such that each exception in the chain was thrown as a direct result of the exception referenced in its `InnerException` property.</span></span> <span data-ttu-id="cdc4f-364">Dla danego łańcucha może istnieć dokładnie jeden wyjątek, który jest główną przyczynę wszystkie wyjątki w łańcuchu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-364">For a given chain, there can be exactly one exception that is the root cause of all other exceptions in the chain.</span></span> <span data-ttu-id="cdc4f-365">Wyjątek ten jest nazywany wyjątek podstawowy i jego `InnerException` właściwość zawsze zawiera odwołanie o wartości null.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-365">This exception is called the base exception and its `InnerException` property always contains a null reference.</span></span>  
  
 <span data-ttu-id="cdc4f-366">Dla wszystkich wyjątków w łańcuchu wyjątków `GetBaseException` metoda musi zwracać ten sam obiekt (podstawowy wyjątek).</span><span class="sxs-lookup"><span data-stu-id="cdc4f-366">For all exceptions in a chain of exceptions, the `GetBaseException` method must return the same object (the base exception).</span></span>  
  
 <span data-ttu-id="cdc4f-367">Użyj `GetBaseException` metody, gdy chcesz znaleźć przyczynę wyjątku, ale nie potrzebujących informacji dotyczących wyjątków, które mogły wystąpić między bieżący wyjątek i pierwszy wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-367">Use the `GetBaseException` method when you want to find the root cause of an exception but do not need information about exceptions that may have occurred between the current exception and the first exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-368">Poniższy kod definiuje dwa pochodne `Exception` klasy.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-368">The following code example defines two derived `Exception` classes.</span></span> <span data-ttu-id="cdc4f-369">Jego wymusza wyjątek, a następnie go generuje ponownie z każdą z klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-369">It forces an exception and then throws it again with each of the derived classes.</span></span> <span data-ttu-id="cdc4f-370">Kod pokazuje użycie klasy `GetBaseException` metodę, aby pobrać oryginalnego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-370">The code shows the use of the `GetBaseException` method to retrieve the original exception.</span></span>  
  
 [!code-cpp[System.Exception.GetBaseException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CPP/getbaseexc.cpp#1)]
 [!code-csharp[System.Exception.GetBaseException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CS/getbaseexc.cs#1)]
 [!code-vb[System.Exception.GetBaseException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetBaseException/VB/getbaseexc.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="cdc4f-371"><see langword="GetBaseException" /> Metoda zostanie przesłonięta w klasach, które wymagają kontroli nad wyjątek zawartość lub format.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-371">The <see langword="GetBaseException" /> method is overridden in classes that require control over the exception content or format.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="exception.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="cdc4f-372"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Zawierający dane zserializowanego obiektu dotyczące zgłaszanego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-372">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="cdc4f-373"><see cref="T:System.Runtime.Serialization.StreamingContext" /> Zawierający informacje kontekstowe o źródle lub miejscu docelowym.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-373">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="cdc4f-374">W przypadku przesłonięcia w klasie pochodnej, ustawia <see cref="T:System.Runtime.Serialization.SerializationInfo" /> przy użyciu informacji o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-374">When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-375">`GetObjectData` Ustawia <xref:System.Runtime.Serialization.SerializationInfo> ze wszystkimi danymi obiekt wyjątku, przeznaczony dla serializacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-375">`GetObjectData` sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="cdc4f-376">Podczas deserializacji, wyjątek jest odtworzonych z `SerializationInfo` przesyłanego w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-376">During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-377">Poniższy kod definiuje pochodnej serializacji `Exception` klasę, która implementuje `GetObjectData`, co sprawia, że drobne zmiany do dwie właściwości, a następnie wywołania, klasy bazowej, aby wykonać serializacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-377">The following code example defines a derived serializable `Exception` class that implements `GetObjectData`, which makes minor changes to two properties and then calls the base class to perform the serialization.</span></span> <span data-ttu-id="cdc4f-378">Przykład wymusza błąd dzielenie przez 0, a następnie tworzy wystąpienie klasy pochodnej wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-378">The example forces a divide-by-0 error and then creates an instance of the derived exception.</span></span> <span data-ttu-id="cdc4f-379">Kod wykonuje serializację wystąpień z plikiem, deserializuje pliku do nowy wyjątek wyniku weryfikacji zgłasza wyjątek, a następnie przechwytuje i wyświetla dane o wyjątkach.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-379">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cdc4f-380"><paramref name="info" /> Parametr to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="cdc4f-380">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="cdc4f-381">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-381">requires full trust for the immediate caller.</span></span> <span data-ttu-id="cdc4f-382">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-382">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="exception.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cdc4f-383">Pobiera typ środowiska uruchomieniowego bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-383">Gets the runtime type of the current instance.</span></span></summary>
        <returns><span data-ttu-id="cdc4f-384">Element <see cref="T:System.Type" /> obiektu, który reprezentuje typ dokładnego czasu wykonywania bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-384">A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-385"><xref:System.Exception.GetType%2A> Metoda istnieje obsługuje infrastrukturę .NET Framework i wewnętrznie wywołuje metodę podstawową, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-385">The <xref:System.Exception.GetType%2A> method exists to support the .NET Framework infrastructure, and internally invokes the fundamental method, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public virtual string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpLink : string with get, set" Usage="System.Exception.HelpLink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.HelpLink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdc4f-386">Pobiera lub ustawia łącze, aby plik pomocy skojarzony z tym wyjątkiem.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-386">Gets or sets a link to the help file associated with this exception.</span></span></summary>
        <value><span data-ttu-id="cdc4f-387">Nazwa zasobu jednolite (URN) lub adres URL (adres URL).</span><span class="sxs-lookup"><span data-stu-id="cdc4f-387">The Uniform Resource Name (URN) or Uniform Resource Locator (URL).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-388">Wartość zwracana, który reprezentuje plik pomocy, jest adres URL lub URN.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-388">The return value, which represents a help file, is a URN or URL.</span></span> <span data-ttu-id="cdc4f-389">Na przykład `HelpLink` może to być:</span><span class="sxs-lookup"><span data-stu-id="cdc4f-389">For example, the `HelpLink` value could be:</span></span>  
  
 <span data-ttu-id="cdc4f-390">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span><span class="sxs-lookup"><span data-stu-id="cdc4f-390">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-391">Poniższy kod zgłasza przykład `Exception` określająca `HelpLink` właściwości w jego konstruktorze, a następnie połowy wyjątek i wyświetla `HelpLink`.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-391">The following code example throws an `Exception` that sets the `HelpLink` property in its constructor and then catches the exception and displays `HelpLink`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HResult">
      <MemberSignature Language="C#" Value="public int HResult { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HResult" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HResult" />
      <MemberSignature Language="VB.NET" Value="Public Property HResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:  property int HResult {  public:&#xA;int get(); protected:&#xA; void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HResult : int with get, set" Usage="System.Exception.HResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdc4f-392">Pobiera lub ustawia wartość HRESULT, kodowane wartość liczbową, która jest przypisana do określonego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-392">Gets or sets HRESULT, a coded numerical value that is assigned to a specific exception.</span></span></summary>
        <value><span data-ttu-id="cdc4f-393">Wartość HRESULT.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-393">The HRESULT value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-394">Wartość HRESULT jest 32-bitową wartość podzielone na trzy różne pola: kod ważność, kod funkcji i kod błędu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-394">HRESULT is a 32-bit value, divided into three different fields: a severity code, a facility code, and an error code.</span></span> <span data-ttu-id="cdc4f-395">Kod ważności Określa, czy zwracana wartość reprezentuje informacje, ostrzeżenia lub błędu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-395">The severity code indicates whether the return value represents information, warning, or error.</span></span> <span data-ttu-id="cdc4f-396">Kod funkcji identyfikuje obszaru systemem odpowiedzialnym za błąd.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-396">The facility code identifies the area of the system responsible for the error.</span></span> <span data-ttu-id="cdc4f-397">Kod błędu to unikatowy numer, który jest przypisany do reprezentowania wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-397">The error code is a unique number that is assigned to represent the exception.</span></span> <span data-ttu-id="cdc4f-398">Każdy wyjątek jest zamapowana na różne HRESULT.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-398">Each exception is mapped to a distinct HRESULT.</span></span> <span data-ttu-id="cdc4f-399">Gdy zarządzany kod zgłasza wyjątek, środowisko uruchomieniowe przekazuje HRESULT do klient modelu COM.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-399">When managed code throws an exception, the runtime passes the HRESULT to the COM client.</span></span> <span data-ttu-id="cdc4f-400">Po powrocie z kodem niezarządzanym błąd HRESULT jest konwertowana na wyjątek, który następnie jest generowany w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-400">When unmanaged code returns an error, the HRESULT is converted to an exception, which is then thrown by the runtime.</span></span> <span data-ttu-id="cdc4f-401">Aby uzyskać informacje o wartości HRESULT i ich odpowiednie wyjątki .NET Framework, zobacz [jak: Mapowanie wyników HRESULT i wyjątków](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="cdc4f-401">For information about HRESULT values and their corresponding .NET Framework exceptions, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span> <span data-ttu-id="cdc4f-402">Zobacz [typowe wartości HRESULT](https://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) w dokumentacji programu Windows listę wartości, możesz z największym prawdopodobieństwem mogą wystąpić.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-402">See [Common HRESULT Values](https://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) in the Windows documentation for a list of the values you are most likely to encounter.</span></span>  
  
 <span data-ttu-id="cdc4f-403">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Exception.HResult%2A> właściwości metody ustawiającej są chronione, natomiast pobierającej nie jest publiczny.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-403">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Exception.HResult%2A> property's setter is protected, whereas its getter is public.</span></span>  <span data-ttu-id="cdc4f-404">W poprzednich wersjach programu .NET Framework zarówno metodę getter i setter są chronione.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-404">In previous versions of the .NET Framework, both getter and setter are protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-405">Poniższy kod definiuje pochodnej `Exception` klasy, która ustawia `HResult` właściwości niestandardowej wartości w jego konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-405">The following code example defines a derived `Exception` class that sets the `HResult` property to a custom value in its constructor.</span></span>  
  
 [!code-cpp[System.Exception.HResult#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.HResult/CPP/hresult.cpp#1)]
 [!code-csharp[System.Exception.HResult#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.HResult/CS/hresult.cs#1)]
 [!code-vb[System.Exception.HResult#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.HResult/VB/hresult.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/610b364b-2761-429d-9c4a-afbc3e66f1b9"><span data-ttu-id="cdc4f-406">Instrukcje: Mapa wyników HRESULT i wyjątków</span><span class="sxs-lookup"><span data-stu-id="cdc4f-406">How to: Map HRESULTs and Exceptions</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/windows/desktop/aa378137.aspx"><span data-ttu-id="cdc4f-407">Typowe wartości HRESULT</span><span class="sxs-lookup"><span data-stu-id="cdc4f-407">Common HRESULT Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerException : Exception" Usage="System.Exception.InnerException" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.InnerException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdc4f-408">Pobiera <see cref="T:System.Exception" /> wystąpienia, który spowodował bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-408">Gets the <see cref="T:System.Exception" /> instance that caused the current exception.</span></span></summary>
        <value><span data-ttu-id="cdc4f-409">Obiekt, który opisuje błąd, który spowodował bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-409">An object that describes the error that caused the current exception.</span></span> <span data-ttu-id="cdc4f-410"><see cref="P:System.Exception.InnerException" /> Właściwość zwraca taką samą wartość jak została przekazana do <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> konstruktora, lub <see langword="null" /> Jeśli nie podano wartości wewnętrznego wyjątku do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-410">The <see cref="P:System.Exception.InnerException" /> property returns the same value as was passed into the <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> constructor, or <see langword="null" /> if the inner exception value was not supplied to the constructor.</span></span> <span data-ttu-id="cdc4f-411">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-411">This property is read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-412">Gdy wyjątek `X` jest generowany jako bezpośredni wynik poprzedniego wyjątku `Y`, <xref:System.Exception.InnerException%2A> właściwość `X` powinien zawierać odwołanie do `Y`.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-412">When an exception `X` is thrown as a direct result of a previous exception `Y`, the <xref:System.Exception.InnerException%2A> property of `X` should contain a reference to `Y`.</span></span>  
  
 <span data-ttu-id="cdc4f-413">Użyj <xref:System.Exception.InnerException%2A> właściwości, aby uzyskać zestaw wyjątków, które doprowadziły do bieżącego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-413">Use the <xref:System.Exception.InnerException%2A> property to obtain the set of exceptions that led to the current exception.</span></span>  
  
 <span data-ttu-id="cdc4f-414">Możesz utworzyć nowy wyjątek, który wyłapuje wyjątek wcześniej.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-414">You can create a new exception that catches an earlier exception.</span></span> <span data-ttu-id="cdc4f-415">Kod, że uchwyty, wprowadzić drugi wyjątek umożliwia dodatkowych informacji z wcześniejszych wyjątek bardziej odpowiednio obsłużyć błąd.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-415">The code that handles the second exception can make use of the additional information from the earlier exception to handle the error more appropriately.</span></span>  
  
 <span data-ttu-id="cdc4f-416">Załóżmy, że funkcja, która odczytuje plik i formatuje dane z tego pliku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-416">Suppose that there is a function that reads a file and formats the data from that file.</span></span> <span data-ttu-id="cdc4f-417">W tym przykładzie jako kod próbuje odczytać pliku <xref:System.IO.IOException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-417">In this example, as the code tries to read the file, an <xref:System.IO.IOException> is thrown.</span></span> <span data-ttu-id="cdc4f-418">Funkcja przechwytuje <xref:System.IO.IOException> i zgłasza <xref:System.IO.FileNotFoundException>.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-418">The function catches the <xref:System.IO.IOException> and throws a <xref:System.IO.FileNotFoundException>.</span></span> <span data-ttu-id="cdc4f-419"><xref:System.IO.IOException> Mogły zostać zapisane w <xref:System.Exception.InnerException%2A> właściwość <xref:System.IO.FileNotFoundException>, umożliwiając kod, który przechwytuje <xref:System.IO.FileNotFoundException> zbadać przyczynę błędu początkowej.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-419">The <xref:System.IO.IOException> could be saved in the <xref:System.Exception.InnerException%2A> property of the <xref:System.IO.FileNotFoundException>, enabling the code that catches the <xref:System.IO.FileNotFoundException> to examine the cause of the initial error.</span></span>  
  
 <span data-ttu-id="cdc4f-420"><xref:System.Exception.InnerException%2A> Ustawiono właściwość, która zawiera odwołanie do wewnętrznego wyjątku, po zainicjowaniu obiektu wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-420">The <xref:System.Exception.InnerException%2A> property, which holds a reference to the inner exception, is set upon initialization of the exception object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-421">Poniższy przykład ilustruje zgłaszania i przechwytywania wyjątek, który odwołuje się do wyjątku wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-421">The following example demonstrates throwing and catching an exception that references an inner exception.</span></span>  
  
 [!code-cpp[InnerEx#1](~/samples/snippets/cpp/VS_Snippets_CLR/InnerEx/CPP/innerex.cpp#1)]
 [!code-csharp[InnerEx#1](~/samples/snippets/csharp/VS_Snippets_CLR/InnerEx/CS/innerex.cs#1)]
 [!code-vb[InnerEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InnerEx/VB/innerex.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public virtual string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Exception.Message" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Message</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdc4f-422">Pobiera komunikat, który opisuje bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-422">Gets a message that describes the current exception.</span></span></summary>
        <value><span data-ttu-id="cdc4f-423">Komunikat o błędzie wyjaśniający przyczynę wyjątku lub ciąg pusty ("").</span><span class="sxs-lookup"><span data-stu-id="cdc4f-423">The error message that explains the reason for the exception, or an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-424">Komunikaty o błędach przeznaczone dla deweloperów, który jest obsługa wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-424">Error messages target the developer who is handling the exception.</span></span> <span data-ttu-id="cdc4f-425">Tekst <xref:System.Exception.Message%2A> właściwość całkowicie powinna opisywać błąd i, jeśli to możliwe, należy również wyjaśniają, jak do naprawienia błędu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-425">The text of the <xref:System.Exception.Message%2A> property should completely describe the error and, when possible, should also explain how to correct the error.</span></span> <span data-ttu-id="cdc4f-426">Programy obsługi wyjątków najwyższego poziomu mogą być wyświetlane komunikat do użytkowników końcowych, dlatego należy upewnić się, że jest poprawnych gramatycznie i że każde zdanie wiadomości kończy się kropką.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-426">Top-level exception handlers may display the message to end-users, so you should ensure that it is grammatically correct and that each sentence of the message ends with a period.</span></span> <span data-ttu-id="cdc4f-427">Nie należy używać znaków zapytania lub wykrzykniki.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-427">Do not use question marks or exclamation points.</span></span> <span data-ttu-id="cdc4f-428">Jeśli aplikacja używa komunikaty o wyjątkach zlokalizowane, należy upewnić się, że dokładnie translacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-428">If your application uses localized exception messages, you should ensure that they are accurately translated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cdc4f-429">Nie ujawniaj poufnych informacji w komunikaty o wyjątkach bez sprawdzania pod kątem odpowiednich uprawnień.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-429">Do not disclose sensitive information in exception messages without checking for the appropriate permissions.</span></span>  
  
 <span data-ttu-id="cdc4f-430">Wartość <xref:System.Exception.Message%2A> uwzględniono informacje zwrócone przez właściwość <xref:System.Exception.ToString%2A>. <xref:System.Exception.Message%2A> Właściwość jest ustawiona tylko wtedy, gdy tworzenie <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-430">The value of the <xref:System.Exception.Message%2A> property is included in the information returned by <xref:System.Exception.ToString%2A>.The <xref:System.Exception.Message%2A> property is set only when creating an <xref:System.Exception>.</span></span> <span data-ttu-id="cdc4f-431">Jeśli żaden komunikat nie został dostarczony do konstruktora dla bieżącego wystąpienia, system zawiera wiadomość domyślną, która jest formatowana przy użyciu bieżącej kultury systemu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-431">If no message was supplied to the constructor for the current instance, the system supplies a default message that is formatted using the current system culture.</span></span>  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="cdc4f-432">Windows Runtime i [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="cdc4f-432">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="cdc4f-433">Począwszy od [!INCLUDE[net_v451](~/includes/net-v451-md.md)] i [!INCLUDE[win81](~/includes/win81-md.md)], Lepsza wierności komunikaty o błędach z wyjątków, które zostały przeniesione z typami środowiska wykonawczego Windows i elementów członkowskich, które nie są częścią programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-433">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the fidelity of error messages from exceptions that are propagated from Windows Runtime types and members that are not part of the .NET Framework is improved.</span></span> <span data-ttu-id="cdc4f-434">W szczególności wyjątek komunikaty z rozszerzeniami składnika środowiska Visual C++ (C + +/ CX) są teraz propagowane do .NET Framework <xref:System.Exception> obiektów.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-434">In particular, exception messages from Visual C++ component extensions (C++/CX) are now propagated back into .NET Framework <xref:System.Exception> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-435">Poniższy kod zgłasza wyjątek, a następnie przechwytuje <xref:System.Exception> wyjątek i wyświetla tekst wyjątku komunikat przy użyciu <xref:System.Exception.Message%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-435">The following code example throws and then catches an <xref:System.Exception> exception and displays the exception's text message using the <xref:System.Exception.Message%2A> property.</span></span>
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="cdc4f-436">Jeśli zgłoszenie wyjątku z właściwością, a także musisz odwołać się w tekście <see cref="P:System.Exception.Message" /> właściwości argumentu, który set lub get, użyj "value" jako nazwy właściwości argumentu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-436">If you throw an exception from a property, and you need to refer in the text of <see cref="P:System.Exception.Message" /> to the property argument that you set or get, use "value" as the name of the property argument.</span></span></para></block>
        <block subset="none" type="overrides"><para><span data-ttu-id="cdc4f-437"><see cref="P:System.Exception.Message" /> Właściwość nie zostanie zastąpiona w klasach, które wymagają kontroli nad format lub zawartość komunikatu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-437">The <see cref="P:System.Exception.Message" /> property is overridden in classes that require control over message content or format.</span></span> <span data-ttu-id="cdc4f-438">Kod aplikacji zwykle uzyskuje dostęp do tej właściwości kiedy zachodzi potrzeba wyświetlenia informacji na temat wyjątek, który został przechwycony.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-438">Application code typically accesses this property when it needs to display information about an exception that has been caught.</span></span>  
  
<span data-ttu-id="cdc4f-439">Komunikat o błędzie powinien być zlokalizowany.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-439">The error message should be localized.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SerializeObjectState">
      <MemberSignature Language="C#" Value="protected event EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState" />
      <MemberSignature Language="DocId" Value="E:System.Exception.SerializeObjectState" />
      <MemberSignature Language="VB.NET" Value="Protected Custom Event SerializeObjectState As EventHandler(Of SafeSerializationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; event EventHandler&lt;System::Runtime::Serialization::SafeSerializationEventArgs ^&gt; ^ SerializeObjectState;" />
      <MemberSignature Language="F#" Value="member this.SerializeObjectState : EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; " Usage="member this.SerializeObjectState : System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdc4f-440">Występuje, gdy wyjątek jest serializowana. Aby utworzyć obiekt stan wyjątku, który zawiera serializowane dane o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-440">Occurs when an exception is serialized to create an exception state object that contains serialized data about the exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-441">Obiekt stanu wyjątek implementuje <xref:System.Runtime.Serialization.ISafeSerializationData> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-441">The exception state object implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 <span data-ttu-id="cdc4f-442">Gdy <xref:System.Exception.SerializeObjectState> subskrybuje zdarzenia, wyjątek jest przeprowadzona i utworzony jako pusty wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-442">When the <xref:System.Exception.SerializeObjectState> event is subscribed to, the exception is deserialized and created as an empty exception.</span></span> <span data-ttu-id="cdc4f-443">Konstruktor tego wyjątku nie jest uruchamiane, a stan wyjątku jest również przeprowadzona.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-443">The exception's constructor is not run, and the exception state is also deserialized.</span></span> <span data-ttu-id="cdc4f-444"><xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> Metody wywołania zwrotnego stanu obiektu wyjątku następnie zostanie powiadomiony, tak, aby go można wypchnąć danych zdeserializowany do pustego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-444">The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> callback method of the exception state object is then notified so that it can push deserialized data into the empty exception.</span></span>  
  
 <span data-ttu-id="cdc4f-445"><xref:System.Exception.SerializeObjectState> Zdarzeń umożliwia typów wyjątków przezroczyste do serializacji i deserializacji danych wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-445">The <xref:System.Exception.SerializeObjectState> event enables transparent exception types to serialize and deserialize exception data.</span></span> <span data-ttu-id="cdc4f-446">Kod o przezroczystym można wykonywać polecenia w granicach zestawu uprawnień, który działa wewnątrz, ale nie można wykonać, wywołania, pochodzi od lub zawierać kodu krytycznego.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-446">Transparent code can execute commands within the bounds of the permission set it is operating within, but cannot execute, call, derive from, or contain critical code.</span></span>  
  
 <span data-ttu-id="cdc4f-447">Jeśli <xref:System.Exception.SerializeObjectState> zdarzeń nie jest subskrybentem, deserializacji występuje w zwykły sposób przy użyciu <xref:System.Exception.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-447">If the <xref:System.Exception.SerializeObjectState> event is not subscribed to, deserialization occurs as usual using the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="cdc4f-448">Zazwyczaj procedury obsługi dla <xref:System.Exception.SerializeObjectState> zdarzenie zostanie dodany do konstruktora wyjątków w celu zapewnienia jego serializacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-448">Typically, a handler for the <xref:System.Exception.SerializeObjectState> event is added in the exception's constructor to provide for its serialization.</span></span> <span data-ttu-id="cdc4f-449">Ale ponieważ Konstruktor nie jest wykonana przy <xref:System.Exception.SerializeObjectState> wykonuje procedury obsługi zdarzeń, serializowania zdeserializowana wyjątek może zgłosić <xref:System.Runtime.Serialization.SerializationException> wyjątek podczas próby deserializacji wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-449">But because the constructor is not executed when the <xref:System.Exception.SerializeObjectState> event handler executes, serializing a deserialized exception can throw a <xref:System.Runtime.Serialization.SerializationException> exception when you try to deserialize the exception.</span></span> <span data-ttu-id="cdc4f-450">Aby tego uniknąć, należy również dodać program obsługi dla <xref:System.Exception.SerializeObjectState> zdarzenia w <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-450">To avoid this, you should also add the handler for the <xref:System.Exception.SerializeObjectState> event in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cdc4f-451">Zobacz sekcję przykłady ilustrację.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-451">See the Examples section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-452">W poniższym przykładzie zdefiniowano `BadDivisionException` obsługująca <xref:System.Exception.SerializeObjectState> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-452">The following example defines a `BadDivisionException` that handles the <xref:System.Exception.SerializeObjectState> event.</span></span> <span data-ttu-id="cdc4f-453">Zawiera również obiekt stanu, który jest zagnieżdżoną struktury o nazwie `BadDivisionExceptionState` implementującej <xref:System.Runtime.Serialization.ISafeSerializationData> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-453">It also contains a state object, which is a nested structure named `BadDivisionExceptionState` that implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 [!code-csharp[System.Exception.SerializeObjectState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.serializeobjectstate/cs/example2.cs#1)]
 [!code-vb[System.Exception.SerializeObjectState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.serializeobjectstate/vb/example2.vb#1)]  
  
 <span data-ttu-id="cdc4f-454">`BadDivisionException` Wyjątek jest zgłaszany, gdy występuje Zmiennoprzecinkowe dzielenie przez zero.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-454">The `BadDivisionException` exception is thrown when a floating-point division by zero occurs.</span></span> <span data-ttu-id="cdc4f-455">Podczas pierwszego dzielenie przez zero, tworzy przykład `BadDivisionException` obiektu serializuje go i zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-455">During the first division by zero, the example instantiates a `BadDivisionException` object, serializes it, and throws the exception.</span></span> <span data-ttu-id="cdc4f-456">Po wystąpieniu kolejnych podziałów przez zero, przykład deserializuje wcześniej Zserializowany obiekt reserializes go i zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-456">When subsequent divisions by zero occur, the example deserializes the  previously serialized object, reserializes it, and throws the exception.</span></span> <span data-ttu-id="cdc4f-457">Aby zapewnić odpowiedzialność za serializację obiektu, deserializacji, reserialization i deserializacji, w przykładzie dodano <xref:System.Exception.SerializeObjectState> programu obsługi zdarzeń zarówno w `BadDivisionException` konstruktora klasy i w <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-457">To provide for object serialization, deserialization, reserialization, and deserialization, the example adds the <xref:System.Exception.SerializeObjectState> event handler both in the `BadDivisionException` class constructor and in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="cdc4f-458">Jeśli to zdarzenie jest subskrybowania i używania, wszystkie typy pochodne, które należy wykonać w hierarchii dziedziczenia musi implementować ten sam mechanizm serializacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-458">If this event is subscribed to and used, all derived types that follow in the inheritance hierarchy must implement the same serialization mechanism.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public virtual string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Exception.Source" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdc4f-459">Pobiera lub ustawia nazwę aplikacji lub obiekt, który powoduje błąd.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-459">Gets or sets the name of the application or the object that causes the error.</span></span></summary>
        <value><span data-ttu-id="cdc4f-460">Nazwa aplikacji lub obiekt, który powoduje błąd.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-460">The name of the application or the object that causes the error.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-461">Jeśli <xref:System.Exception.Source%2A> właściwość nie została jawnie ustawiona, środowisko wykonawcze automatycznie ustawia jego nazwa zestawu, w którym wyjątek pochodzi.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-461">If the <xref:System.Exception.Source%2A> property is not set explicitly, the runtime automatically sets it to the name of the assembly in which the exception originated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-462">Poniższy przykład generuje `Exception` określająca `Source` właściwości w jego konstruktorze, a następnie połowy wyjątek i wyświetla `Source`.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-462">The following example throws an `Exception` that sets the `Source` property in its constructor and then catches the exception and displays `Source`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cdc4f-463">Obiekt musi być środowisko uruchomieniowe <see cref="N:System.Reflection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-463">The object must be a runtime <see cref="N:System.Reflection" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public virtual string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="System.Exception.StackTrace" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.StackTrace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdc4f-464">Pobiera reprezentację ciągu natychmiastowego ramek na stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-464">Gets a string representation of the immediate frames on the call stack.</span></span></summary>
        <value><span data-ttu-id="cdc4f-465">Ciąg, który opisuje natychmiastowego ramki stosu wywołań.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-465">A string that describes the immediate frames of the call stack.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-466">Stos wykonywania przechowuje informacje o wszystkich metod, które są wykonywane w danej chwili.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-466">The execution stack keeps track of all the methods that are in execution at a given instant.</span></span> <span data-ttu-id="cdc4f-467">Śledzenie wywołań metody jest wywoływana ślad stosu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-467">A trace of the method calls is called a stack trace.</span></span> <span data-ttu-id="cdc4f-468">Lista śledzenia stosu zapewnia sposób wykonaj stos wywołań do numeru wiersza w metodzie, gdzie występuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-468">The stack trace listing provides a way to follow the call stack to the line number in the method where the exception occurs.</span></span>  
  
 <span data-ttu-id="cdc4f-469"><xref:System.Exception.StackTrace%2A> Właściwość zwraca ramki stosu wywołań, które pochodzi z lokalizacji, w którym został zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-469">The <xref:System.Exception.StackTrace%2A> property returns the frames of the call stack that originate at the location where the exception was thrown.</span></span> <span data-ttu-id="cdc4f-470">Możesz uzyskać informacje na temat dodatkowych ramek na stosie wywołań, tworząc nowe wystąpienie klasy <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> klasy i używanie jej <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-470">You can obtain information about additional frames in the call stack by creating a new instance of the <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> class and using its <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cdc4f-471">Środowisko uruchomieniowe języka wspólnego (CLR) aktualizuje ślad stosu, zawsze wtedy, gdy wyjątek jest zgłaszany w kodzie aplikacji (przy użyciu `throw` — słowo kluczowe).</span><span class="sxs-lookup"><span data-stu-id="cdc4f-471">The common language runtime (CLR) updates the stack trace whenever an exception is thrown in application code (by using the `throw` keyword).</span></span> <span data-ttu-id="cdc4f-472">Jeśli wyjątek był zgłaszany ponownie w metodzie, która jest inna niż metody, gdzie pierwotnie został zgłoszony, ślad stosu zawiera zarówno w metodzie w lokalizacji, w którym pierwotnie został zgłoszony wyjątek, jak i w metodzie w lokalizacji, w którym wyjątek zgłaszany ponownie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-472">If the exception was rethrown in a method that is different than the method where it was originally thrown, the stack trace contains both the location in the method where the exception was originally thrown, and the location in the method where the exception was rethrown.</span></span> <span data-ttu-id="cdc4f-473">Jeśli wyjątek jest generowany i później ponownie zgłaszany, w tej samej metody, ślad stosu zawiera tylko lokalizacji, w którym wyjątek był zgłaszany ponownie i nie ma lokalizacji, w którym pierwotnie został zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-473">If the exception is thrown, and later rethrown, in the same method, the stack trace only contains the location where the exception was rethrown and does not include the location where the exception was originally thrown.</span></span>  
  
 <span data-ttu-id="cdc4f-474"><xref:System.Exception.StackTrace%2A> Właściwości mogą nie zgłaszać dowolną liczbę wywołań metod, zgodnie z oczekiwaniami z powodu kodu transformacji, takie jak wbudowanie, które występują podczas tej optymalizacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-474">The <xref:System.Exception.StackTrace%2A> property may not report as many method calls as expected because of code transformations, such as inlining, that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-475">Poniższy kod zgłasza przykład `Exception` go przechwycił i wyświetla ślad stosu przy użyciu `StackTrace` właściwości.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-475">The following code example throws an `Exception` and then catches it and displays a stack trace using the `StackTrace` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="cdc4f-476"><see langword="StackTrace" /> Właściwość nie zostanie zastąpiona w klasach, które wymagają kontroli nad stosu śledzenia zawartość lub format.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-476">The <see langword="StackTrace" /> property is overridden in classes that require control over the stack trace content or format.</span></span>  
  
<span data-ttu-id="cdc4f-477">Domyślnie ślad stosu są przechwytywane natychmiast, zanim zostanie zgłoszony obiekt wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-477">By default, the stack trace is captured immediately before an exception object is thrown.</span></span> <span data-ttu-id="cdc4f-478">Użyj <see cref="P:System.Environment.StackTrace" /> Aby uzyskać informacje o śladzie stosu, gdy jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-478">Use <see cref="P:System.Environment.StackTrace" /> to get stack trace information when no exception is being thrown.</span></span></para></block>
        <altmember cref="P:System.Environment.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSite : System.Reflection.MethodBase" Usage="System.Exception.TargetSite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.TargetSite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdc4f-479">Pobiera metodę, która bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-479">Gets the method that throws the current exception.</span></span></summary>
        <value><span data-ttu-id="cdc4f-480"><see cref="T:System.Reflection.MethodBase" /> Zgłosił, bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-480">The <see cref="T:System.Reflection.MethodBase" /> that threw the current exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-481">Jeśli metoda, która zgłasza ten wyjątek nie jest dostępny i ślad stosu nie jest odwołanie o wartości null (`Nothing` w języku Visual Basic), <xref:System.Exception.TargetSite%2A> uzyskuje metody ślad stosu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-481">If the method that throws this exception is not available and the stack trace is not a null reference (`Nothing` in Visual Basic), <xref:System.Exception.TargetSite%2A> obtains the method from the stack trace.</span></span> <span data-ttu-id="cdc4f-482">Jeśli ślad stosu jest odwołanie o wartości null, <xref:System.Exception.TargetSite%2A> również zwraca odwołanie o wartości null.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-482">If the stack trace is a null reference, <xref:System.Exception.TargetSite%2A> also returns a null reference.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cdc4f-483"><xref:System.Exception.TargetSite%2A> Właściwość nie może precyzyjnie nazwę metody, w którym został zgłoszony wyjątek, jeśli program obsługi wyjątku obsługuje wyjątek poza granice domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-483">The <xref:System.Exception.TargetSite%2A> property may not accurately report the name of the method in which an exception was thrown if the exception handler handles an exception across application domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-484">Poniższy kod zgłasza przykład `Exception` go przechwycił i Wyświetla źródłowy przy użyciu metody `TargetSite` właściwości.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-484">The following code example throws an `Exception` and then catches it and displays the originating method using the `TargetSite` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="exception.ToString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cdc4f-485">Tworzy i zwraca reprezentację ciągu bieżącego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-485">Creates and returns a string representation of the current exception.</span></span></summary>
        <returns><span data-ttu-id="cdc4f-486">Reprezentacja ciągu bieżącego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-486">A string representation of the current exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdc4f-487"><xref:System.Exception.ToString%2A> Zwraca reprezentację bieżącego wyjątku, który ma być zrozumiała dla ludzi.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-487"><xref:System.Exception.ToString%2A> returns a representation of the current exception that is intended to be understood by humans.</span></span> <span data-ttu-id="cdc4f-488">W przypadku, gdy wyjątek zawiera dane wrażliwe na ustawienia kulturowe, reprezentacja ciągu zwracane przez `ToString` jest wymagany do uwzględnienia bieżącej kultury systemu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-488">Where the exception contains culture-sensitive data, the string representation returned by `ToString` is required to take into account the current system culture.</span></span> <span data-ttu-id="cdc4f-489">Mimo że nie istnieją wymagania dokładny format zwracanego ciągu, należy próbować odzwierciedlać wartość obiektu jako postrzegany przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-489">Although there are no exact requirements for the format of the returned string, it should attempt to reflect the value of the object as perceived by the user.</span></span>  
  
 <span data-ttu-id="cdc4f-490">Domyślna implementacja klasy <xref:System.Exception.ToString%2A> uzyskuje nazwę klasy, która zgłosiła bieżącego wyjątku, wiadomość, w wyniku wywołania metody <xref:System.Exception.ToString%2A> na wewnętrzny wyjątek, a w wyniku wywołania metody <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-490">The default implementation of <xref:System.Exception.ToString%2A> obtains the name of the class that threw the current exception, the message, the result of calling <xref:System.Exception.ToString%2A> on the inner exception, and the result of calling <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cdc4f-491">W przypadku spełnienia któregoś z tych elementów członkowskich `null`, jego wartość nie jest uwzględniona w zwracanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-491">If any of these members is `null`, its value is not included in the returned string.</span></span>  
  
 <span data-ttu-id="cdc4f-492">Jeśli nie ma błędów lub jest pustym ciągiem (""), zwracana jest bez komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-492">If there is no error message or if it is an empty string (""), then no error message is returned.</span></span> <span data-ttu-id="cdc4f-493">Nazwa wewnętrznego wyjątku i ślad stosu są zwracane tylko wtedy, gdy nie są one `null`.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-493">The name of the inner exception and the stack trace are returned only if they are not `null`.</span></span>  
  
 <span data-ttu-id="cdc4f-494">Ta metoda zastępuje <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-494">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdc4f-495">Poniższy przykład powoduje wyjątek i wyświetla wynik wywołania metody <xref:System.Exception.ToString%2A> na ten wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-495">The following example causes an exception and displays the result of calling <xref:System.Exception.ToString%2A> on that exception.</span></span> <span data-ttu-id="cdc4f-496">Należy pamiętać, że <xref:System.Exception.ToString%2A?displayProperty=nameWithType> metoda jest wywoływana niejawnie, gdy wystąpienie klasy wyjątku pojawi się na liście argumentów <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="cdc4f-496">Note that the <xref:System.Exception.ToString%2A?displayProperty=nameWithType> method is called implicitly when the Exception class instance appears in the argument list of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Exception.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.exception.tostring/cpp/ToStringEx1.cpp#1)]
 [!code-csharp[System.Exception.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.tostring/cs/ToStringEx1.cs#1)]
 [!code-vb[System.Exception.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.tostring/vb/ToStringEx1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>