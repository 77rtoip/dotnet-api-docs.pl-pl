<Type Name="Exception" FullName="System.Exception">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3e876a1482a23c73451498e9a529b706c17f38a0" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Exception : System.Runtime.InteropServices._Exception, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit Exception extends System.Object implements class System.Runtime.InteropServices._Exception, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Exception" />
  <TypeSignature Language="VB.NET" Value="Public Class Exception&#xA;Implements _Exception, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Exception : System::Runtime::InteropServices::_Exception, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Exception</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Exception))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="dfccc-101">Reprezentuje błędów występujących podczas wykonywania aplikacji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dfccc-101">Represents errors that occur during application execution.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-102">Ta klasa jest klasą bazową dla wszystkich wyjątków.</span><span class="sxs-lookup"><span data-stu-id="dfccc-102">This class is the base class for all exceptions.</span></span> <span data-ttu-id="dfccc-103">Gdy wystąpi błąd, system lub aktualnie realizowanej aplikacji zgłasza przez Zgłaszanie wyjątku, który zawiera informacje o tym błędzie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-103">When an error occurs, either the system or the currently executing application reports it by throwing an exception that contains information about the error.</span></span> <span data-ttu-id="dfccc-104">Po jest zgłaszany wyjątek, jest to obsługiwane przez aplikację lub przez domyślną procedurę obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="dfccc-104">After an exception is thrown, it is handled by the application or by the default exception handler.</span></span>  
  
 <span data-ttu-id="dfccc-105">W tej sekcji:</span><span class="sxs-lookup"><span data-stu-id="dfccc-105">In this section:</span></span>  
  
 <span data-ttu-id="dfccc-106">[Błędy i wyjątki](#Errors) </span><span class="sxs-lookup"><span data-stu-id="dfccc-106">[Errors and exceptions](#Errors) </span></span>  
 <span data-ttu-id="dfccc-107">[Bloki try/catch](#TryCatch) </span><span class="sxs-lookup"><span data-stu-id="dfccc-107">[Try/catch blocks](#TryCatch) </span></span>  
 <span data-ttu-id="dfccc-108">[Wyjątek typu funkcji](#Features) </span><span class="sxs-lookup"><span data-stu-id="dfccc-108">[Exception type features](#Features) </span></span>  
 <span data-ttu-id="dfccc-109">[Właściwości klasy wyjątków](#Properties) </span><span class="sxs-lookup"><span data-stu-id="dfccc-109">[Exception class properties](#Properties) </span></span>  
 <span data-ttu-id="dfccc-110">[Zagadnienia dotyczące wydajności](#Performance) </span><span class="sxs-lookup"><span data-stu-id="dfccc-110">[Performance considerations](#Performance) </span></span>  
 <span data-ttu-id="dfccc-111">[Ponownego generowania wyjątku](#Rethrow) </span><span class="sxs-lookup"><span data-stu-id="dfccc-111">[Re-throwing an exception](#Rethrow) </span></span>  
 <span data-ttu-id="dfccc-112">[Wybieranie standardowe wyjątków](#Standard) </span><span class="sxs-lookup"><span data-stu-id="dfccc-112">[Choosing standard exceptions](#Standard) </span></span>  
 [<span data-ttu-id="dfccc-113">Implementowanie niestandardowymi wyjątkami</span><span class="sxs-lookup"><span data-stu-id="dfccc-113">Implementing custom exceptions</span></span>](#Custom)  
  
<a name="Errors"></a>   
## <a name="errors-and-exceptions"></a><span data-ttu-id="dfccc-114">Błędy i wyjątki</span><span class="sxs-lookup"><span data-stu-id="dfccc-114">Errors and exceptions</span></span>  
 <span data-ttu-id="dfccc-115">Z różnych powodów, mogą wystąpić błędy czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="dfccc-115">Run-time errors can occur for a variety of reasons.</span></span> <span data-ttu-id="dfccc-116">Jednak nie wszystkie błędy powinny być traktowane jako wyjątki w kodzie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-116">However, not all errors should be handled as exceptions in your code.</span></span> <span data-ttu-id="dfccc-117">Poniżej przedstawiono niektóre kategorie błędy, które mogą wystąpić w czasie wykonywania i odpowiednie sposoby nie odpowiadają.</span><span class="sxs-lookup"><span data-stu-id="dfccc-117">Here are some categories of errors that can occur at run time and the appropriate ways to respond to them.</span></span>  
  
-   <span data-ttu-id="dfccc-118">**Błędy użycia.**</span><span class="sxs-lookup"><span data-stu-id="dfccc-118">**Usage errors.**</span></span> <span data-ttu-id="dfccc-119">Błąd użycia reprezentuje błąd w logice programu, który może spowodować wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-119">A usage error represents an error in program logic that can result in an exception.</span></span> <span data-ttu-id="dfccc-120">Jednak powinny być kierowane błąd, nie za pomocą obsługi wyjątków, ale modyfikując nieprawidłowy kod.</span><span class="sxs-lookup"><span data-stu-id="dfccc-120">However, the error should be addressed not through exception handling but by modifying the faulty code.</span></span> <span data-ttu-id="dfccc-121">Na przykład zastępowania <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> metody w następującym przykładzie zakłada się, że `obj` argumentu musi zawsze mieć wartości null.</span><span class="sxs-lookup"><span data-stu-id="dfccc-121">For example, the override of the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method in the following example assumes that the `obj` argument must always be non-null.</span></span>  
  
     [!code-csharp[System.Exception.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors1.cs#4)]
     [!code-vb[System.Exception.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors1.vb#4)]  
  
     <span data-ttu-id="dfccc-122"><xref:System.NullReferenceException> Wyjątek, który powoduje podczas `obj` jest `null` mogą zostać usunięte przez zmodyfikowanie kodu źródłowego próba jawnie na wartość null przed wywołaniem <xref:System.Object.Equals%2A?displayProperty=nameWithType> zastępowania i ponowną kompilację.</span><span class="sxs-lookup"><span data-stu-id="dfccc-122">The <xref:System.NullReferenceException> exception that results when `obj` is `null` can be eliminated by modifying the source code to explicitly test for null before calling the <xref:System.Object.Equals%2A?displayProperty=nameWithType> override and then re-compiling.</span></span> <span data-ttu-id="dfccc-123">Poniżej przedstawiono przykład zawierający kod źródłowy poprawiony, który obsługuje `null` argumentu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-123">The following example contains the corrected source code that handles a `null` argument.</span></span>  
  
     [!code-csharp[System.Exception.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors2.cs#5)]
     [!code-vb[System.Exception.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors2.vb#5)]  
  
     <span data-ttu-id="dfccc-124">Zamiast korzystać z obsługi błędów użycia wyjątków, można użyć <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metodę identyfikowania błędów użycia w kompilacjach do debugowania i <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> kompilacje metoda do użycia w wykrywaniu błędów zarówno debug i release.</span><span class="sxs-lookup"><span data-stu-id="dfccc-124">Instead of using exception handling for usage errors, you can use the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method to identify usage errors in debug builds, and the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method to identify usage errors in both debug and release builds.</span></span> <span data-ttu-id="dfccc-125">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kod zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="dfccc-125">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
-   <span data-ttu-id="dfccc-126">**Błędy programu.**</span><span class="sxs-lookup"><span data-stu-id="dfccc-126">**Program errors.**</span></span> <span data-ttu-id="dfccc-127">Błąd programu jest błąd w czasie wykonywania, którego nie można uniknąć niekoniecznie pisanie kodu bez błędów.</span><span class="sxs-lookup"><span data-stu-id="dfccc-127">A program error is a run-time error that cannot necessarily be avoided by writing bug-free code.</span></span>  
  
     <span data-ttu-id="dfccc-128">W niektórych przypadkach błąd programu mogą uwzględniać warunek błędu oczekiwanych lub procedury.</span><span class="sxs-lookup"><span data-stu-id="dfccc-128">In some cases, a program error may reflect an expected or routine error condition.</span></span> <span data-ttu-id="dfccc-129">W takim przypadku można uniknąć, za pomocą obsługi wyjątków biznesowych w radzeniu sobie z powodu błędu programu, a zamiast tego spróbuj ponownie wykonać operację.</span><span class="sxs-lookup"><span data-stu-id="dfccc-129">In this case, you may want to avoid using exception handling to deal with the program error and instead retry the operation.</span></span> <span data-ttu-id="dfccc-130">Na przykład, jeśli użytkownik ma wprowadź datę w określonym formacie, można przeanalizować ciągu daty wywołując <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> metody, która zwraca <xref:System.Boolean> wartość, która wskazuje, czy operacja analizy zakończyło się pomyślnie, zamiast <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>— metoda, która zgłasza <xref:System.FormatException> wyjątek, jeśli nie można przekonwertować ciągu daty <xref:System.DateTime> wartość.</span><span class="sxs-lookup"><span data-stu-id="dfccc-130">For example, if the user is expected to input a date in a particular format, you can parse the date string by calling the <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method, which returns a <xref:System.Boolean> value that indicates whether the parse operation succeeded, instead of using the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method, which throws a <xref:System.FormatException> exception if the date string cannot be converted to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="dfccc-131">Podobnie, jeśli użytkownik podejmuje próbę otwarcia pliku, który nie istnieje, można wywołać <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> , aby sprawdzić, czy plik istnieje i, jeśli nie, Monituj użytkownika, czy użytkownik chce go utworzyć.</span><span class="sxs-lookup"><span data-stu-id="dfccc-131">Similarly, if a user tries to open a file that does not exist, you can first call the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method to check whether the file exists and, if it does not, prompt the user whether he or she wants to create it.</span></span>  
  
     <span data-ttu-id="dfccc-132">W pozostałych przypadkach błąd programu odzwierciedla nieoczekiwany błąd, które mogą być obsługiwane w kodzie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-132">In other cases, a program error reflects an unexpected error condition that can be handled in your code.</span></span> <span data-ttu-id="dfccc-133">Na przykład nawet jeśli została sprawdzona, aby upewnić się, że plik istnieje, jej mogą zostać usunięte przed, możesz otworzyć go lub jest uszkodzony.</span><span class="sxs-lookup"><span data-stu-id="dfccc-133">For example, even if you've checked to ensure that a file exists, it may be deleted before you can open it, or it may be corrupted.</span></span> <span data-ttu-id="dfccc-134">W takim przypadku próby otwarcia pliku przez utworzenie wystąpienia <xref:System.IO.StreamReader> obiektu lub wywoływania <xref:System.IO.File.Open%2A> metoda może generować <xref:System.IO.FileNotFoundException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-134">In that case, trying to open the file by instantiating a <xref:System.IO.StreamReader> object or calling the <xref:System.IO.File.Open%2A> method may throw a <xref:System.IO.FileNotFoundException> exception.</span></span> <span data-ttu-id="dfccc-135">W takich sytuacjach należy użyć obsługi wyjątków, aby odzyskać sprawność po błędzie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-135">In these cases, you should use exception handling to recover from the error.</span></span>  
  
-   <span data-ttu-id="dfccc-136">**Awarie systemu.**</span><span class="sxs-lookup"><span data-stu-id="dfccc-136">**System failures.**</span></span> <span data-ttu-id="dfccc-137">Awarii systemu jest błąd w czasie wykonywania, które nie mogą być obsługiwane programowo w znaczący sposób.</span><span class="sxs-lookup"><span data-stu-id="dfccc-137">A system failure is a run-time error that cannot be handled programmatically in a meaningful way.</span></span> <span data-ttu-id="dfccc-138">Na przykład może zgłosić dowolnej metody <xref:System.OutOfMemoryException> wyjątek, jeśli nie można przydzielić pamięć jest środowisko uruchomieniowe języka wspólnego.</span><span class="sxs-lookup"><span data-stu-id="dfccc-138">For example, any method can throw an <xref:System.OutOfMemoryException> exception if the common language runtime is unable to allocate additional memory.</span></span> <span data-ttu-id="dfccc-139">Zwykle awarii systemu nie są obsługiwane przy użyciu obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="dfccc-139">Ordinarily, system failures are not handled by using exception handling.</span></span> <span data-ttu-id="dfccc-140">Zamiast tego można użyć zdarzenia, takie jak <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> i Wywołaj <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> metody do rejestrowania informacji o wyjątku i powiadamia użytkownika o awarii, zanim aplikacja zakończy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-140">Instead, you may be able to use an event such as <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> and call the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to log exception information and notify the user of the failure before the application terminates.</span></span>  
  
<a name="TryCatch"></a>   
## <a name="trycatch-blocks"></a><span data-ttu-id="dfccc-141">Bloki try/catch</span><span class="sxs-lookup"><span data-stu-id="dfccc-141">Try/catch blocks</span></span>  
 <span data-ttu-id="dfccc-142">Środowisko uruchomieniowe języka wspólnego udostępnia model obsługi wyjątku, który jest oparta na reprezentację wyjątki jako obiekty i oddzielenie kodu programu i kodu do obsługi wyjątków `try` bloków i `catch` bloków.</span><span class="sxs-lookup"><span data-stu-id="dfccc-142">The common language runtime provides an exception handling model that is based on the representation of exceptions as objects, and the separation of program code and exception handling code into `try` blocks and `catch` blocks.</span></span> <span data-ttu-id="dfccc-143">Może istnieć co najmniej jeden `catch` blokuje każdego przeznaczone do obsługi określonego typu wyjątku lub jeden blok wychwytywania bardziej konkretny wyjątek niż inny blok.</span><span class="sxs-lookup"><span data-stu-id="dfccc-143">There can be one or more `catch` blocks, each designed to handle a particular type of exception, or one block designed to catch a more specific exception than another block.</span></span>  
  
 <span data-ttu-id="dfccc-144">Jeśli aplikacja obsługuje wyjątków występujących podczas wykonywania blok kodu aplikacji, kodu musi zostać umieszczony w `try` instrukcji i nosi nazwę `try` bloku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-144">If an application handles exceptions that occur during the execution of a block of application code, the code must be placed within a `try` statement and is called a `try` block.</span></span> <span data-ttu-id="dfccc-145">Kod aplikacji, które obsługuje wyjątków zgłaszanych przez `try` blok jest umieszczony w obrębie `catch` instrukcji i nosi nazwę `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-145">Application code that handles exceptions thrown by a `try` block is placed within a `catch` statement and is called a `catch` block.</span></span> <span data-ttu-id="dfccc-146">Zero lub więcej `catch` bloki są skojarzone z `try` bloku oraz każdy `catch` bloku obejmuje filtr typu, który określa typy obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="dfccc-146">Zero or more `catch` blocks are associated with a `try` block, and each `catch` block includes a type filter that determines the types of exceptions it handles.</span></span>  
  
 <span data-ttu-id="dfccc-147">Gdy wystąpi wyjątek w `try` bloku, system wyszukuje skojarzony `catch` blokuje w kolejności ich występowania w kodzie aplikacji, lokalizując `catch` bloku, który obsługuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-147">When an exception occurs in a `try` block, the system searches the associated `catch` blocks in the order they appear in application code, until it locates a `catch` block that handles the exception.</span></span> <span data-ttu-id="dfccc-148">A `catch` blok obsługuje wyjątek typu `T` Jeśli Określa filtr typu bloku catch `T` lub dowolny typ `T` pochodną.</span><span class="sxs-lookup"><span data-stu-id="dfccc-148">A `catch` block handles an exception of type `T` if the type filter of the catch block specifies `T` or any type that `T` derives from.</span></span> <span data-ttu-id="dfccc-149">Wyszukiwanie po znalezieniu pierwszy zatrzymania systemu `catch` bloku, który obsługuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-149">The system stops searching after it finds the first `catch` block that handles the exception.</span></span> <span data-ttu-id="dfccc-150">Z tego powodu w kodzie aplikacji `catch` bloku, który obsługuje typ muszą zostać określone przed `catch` bloku obsługująca jego typów podstawowych, jak pokazano w następującym przykładzie w tej sekcji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-150">For this reason, in application code, a `catch` block that handles a type must be specified before a `catch` block that handles its base types, as demonstrated in the example that follows this section.</span></span> <span data-ttu-id="dfccc-151">Blok catch, która obsługuje `System.Exception` jest określony jako ostatni.</span><span class="sxs-lookup"><span data-stu-id="dfccc-151">A catch block that handles `System.Exception` is specified last.</span></span>  
  
 <span data-ttu-id="dfccc-152">Jeśli żadna z `catch` bloki skojarzone z bieżącym `try` bloku obsługi wyjątków, a bieżący `try` bloku jest zagnieżdżone w innych `try` blokuje w bieżącym wywołaniu `catch` bloki skojarzone z następnej otaczającej `try` bloku są przeszukiwane.</span><span class="sxs-lookup"><span data-stu-id="dfccc-152">If none of the `catch` blocks associated with the current `try` block handle the exception, and the current `try` block is nested within other `try` blocks in the current call, the `catch` blocks associated with the next enclosing `try` block are searched.</span></span> <span data-ttu-id="dfccc-153">Jeśli nie `catch` bloku wyjątek zostanie znaleziony, system wyszukuje poprzednie poziomów zagnieżdżenia w bieżącym wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-153">If no `catch` block for the exception is found, the system searches previous nesting levels in the current call.</span></span> <span data-ttu-id="dfccc-154">Jeśli nie `catch` zablokować dla wyjątek znajduje się w bieżącym wywołaniu wyjątek jest przekazywany w górę stosu wywołań i poprzedniej ramki stosu jest wyszukiwany `catch` bloku, który obsługuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-154">If no `catch` block for the exception is found in the current call, the exception is passed up the call stack, and the previous stack frame is searched for a `catch` block that handles the exception.</span></span> <span data-ttu-id="dfccc-155">Wyszukiwanie stos wywołań będzie kontynuowane aż do obsługi wyjątku lub istnieje ma więcej ramek na stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="dfccc-155">The search of the call stack continues until the exception is handled or until no more frames exist on the call stack.</span></span> <span data-ttu-id="dfccc-156">Po osiągnięciu górnej części stosu wywołań nie `catch` blok, który obsługuje wyjątek domyślny program obsługi wyjątku obsługuje go i zakończy aplikacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-156">If the top of the call stack is reached without finding a `catch` block that handles the exception, the default exception handler handles it and the application terminates.</span></span>  
  
<a name="Features"></a>   
## <a name="exception-type-features"></a><span data-ttu-id="dfccc-157">Funkcje typu wyjątku</span><span class="sxs-lookup"><span data-stu-id="dfccc-157">Exception type features</span></span>  
 <span data-ttu-id="dfccc-158">Typy wyjątków obsługuje następujące funkcje:</span><span class="sxs-lookup"><span data-stu-id="dfccc-158">Exception types support the following features:</span></span>  
  
-   <span data-ttu-id="dfccc-159">Czytelny dla człowieka tekst, który opisuje błąd.</span><span class="sxs-lookup"><span data-stu-id="dfccc-159">Human-readable text that describes the error.</span></span> <span data-ttu-id="dfccc-160">Po wystąpieniu wyjątku, środowisko uruchomieniowe sprawia, że wiadomość SMS poinformować użytkownika charakteru błędu i zasugerować akcji do rozwiązania problemu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-160">When an exception occurs, the runtime makes a text message available to inform the user of the nature of the error and to suggest action to resolve the problem.</span></span> <span data-ttu-id="dfccc-161">Ta wiadomość tekstowa jest przechowywana w <xref:System.Exception.Message%2A> właściwości obiekt wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-161">This text message is held in the <xref:System.Exception.Message%2A> property of the exception object.</span></span> <span data-ttu-id="dfccc-162">Podczas tworzenia obiektu wyjątku można przekazać ciąg tekstowy do konstruktora opisujący szczegóły tego określonego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-162">During the creation of the exception object, you can pass a text string to the constructor to describe the details of that particular exception.</span></span> <span data-ttu-id="dfccc-163">Jeśli nie błąd komunikat podano argumentu do konstruktora, używany jest domyślny komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-163">If no error message argument is supplied to the constructor, the default error message is used.</span></span> <span data-ttu-id="dfccc-164">Aby uzyskać więcej informacji, zobacz <xref:System.Exception.Message%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="dfccc-164">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="dfccc-165">Stan stos wywołań, gdy wyjątek został zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="dfccc-165">The state of the call stack when the exception was thrown.</span></span> <span data-ttu-id="dfccc-166"><xref:System.Exception.StackTrace%2A> Właściwość niesie ślad stosu, który może służyć do określenia, gdzie występuje błąd w kodzie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-166">The <xref:System.Exception.StackTrace%2A> property carries a stack trace that can be used to determine where the error occurs in the code.</span></span> <span data-ttu-id="dfccc-167">Ślad stosu wymieniono wywoływane metody i numery wierszy w pliku źródłowym, w którym wywołań.</span><span class="sxs-lookup"><span data-stu-id="dfccc-167">The stack trace lists all the called methods and the line numbers in the source file where the calls are made.</span></span>  
  
<a name="Properties"></a>   
## <a name="exception-class-properties"></a><span data-ttu-id="dfccc-168">Właściwości klasy wyjątku</span><span class="sxs-lookup"><span data-stu-id="dfccc-168">Exception class properties</span></span>  
 <span data-ttu-id="dfccc-169"><xref:System.Exception> Klasy zawiera wiele właściwości, które ułatwia identyfikację lokalizacji kodu, typ pliku pomocy i przyczynę wyjątek: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, i <xref:System.Exception.Data%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfccc-169">The <xref:System.Exception> class includes a number of properties that help identify the code location, the type, the help file, and the reason for the exception: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, and <xref:System.Exception.Data%2A>.</span></span>  
  
 <span data-ttu-id="dfccc-170">Gdy istnieje przyczynowego między co najmniej dwa wyjątki, <xref:System.Exception.InnerException%2A> właściwość przechowuje te informacje.</span><span class="sxs-lookup"><span data-stu-id="dfccc-170">When a causal relationship exists between two or more exceptions, the <xref:System.Exception.InnerException%2A> property maintains this information.</span></span> <span data-ttu-id="dfccc-171">Wyjątek zewnętrzny jest generowany w odpowiedzi na ten wyjątek wewnętrzny.</span><span class="sxs-lookup"><span data-stu-id="dfccc-171">The outer exception is thrown in response to this inner exception.</span></span> <span data-ttu-id="dfccc-172">Kod obsługujący Wyjątek zewnętrzny umożliwia bardziej odpowiednią obsługę błąd informacji z wcześniej wyjątek wewnętrzny.</span><span class="sxs-lookup"><span data-stu-id="dfccc-172">The code that handles the outer exception can use the information from the earlier inner exception to handle the error more appropriately.</span></span> <span data-ttu-id="dfccc-173">Dodatkowe informacje o wyjątku mogą być przechowywane jako kolekcja par klucz/wartość w <xref:System.Exception.Data%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="dfccc-173">Supplementary information about the exception can be stored as a collection of key/value pairs in the <xref:System.Exception.Data%2A> property.</span></span>  
  
 <span data-ttu-id="dfccc-174">Ciąg z komunikatem o przekazywany do konstruktora podczas tworzenia obiektu wyjątku powinien być zlokalizowany i plik zasobów mogą być dostarczane za pomocą <xref:System.Resources.ResourceManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-174">The error message string that is passed to the constructor during the creation of the exception object should be localized and can be supplied from a resource file by using the <xref:System.Resources.ResourceManager> class.</span></span> <span data-ttu-id="dfccc-175">Aby uzyskać więcej informacji na temat zlokalizowanych zasobów, zobacz [tworzenie zestawów satelickich](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) i [pakowanie i wdrażanie zasobów](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) tematów.</span><span class="sxs-lookup"><span data-stu-id="dfccc-175">For more information about localized resources, see the [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) and [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) topics.</span></span>  
  
 <span data-ttu-id="dfccc-176">Aby przyznać użytkownikowi o dodatkowe informacje o dlaczego wystąpił wyjątek <xref:System.Exception.HelpLink%2A> właściwości może zawierać adres URL (lub URN) do pliku pomocy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-176">To provide the user with extensive information about why the exception occurred, the <xref:System.Exception.HelpLink%2A> property can hold a URL (or URN) to a help file.</span></span>  
  
 <span data-ttu-id="dfccc-177"><xref:System.Exception> COR_E_EXCEPTION HRESULT, która ma wartość 0x80131500 używa klasy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-177">The <xref:System.Exception> class uses the HRESULT COR_E_EXCEPTION, which has the value 0x80131500.</span></span>  
  
 <span data-ttu-id="dfccc-178">Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.Exception> , zobacz <xref:System.Exception.%23ctor%2A> konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="dfccc-178">For a list of initial property values for an instance of the <xref:System.Exception> class, see the <xref:System.Exception.%23ctor%2A> constructors.</span></span>  
  
<a name="Performance"></a>   
## <a name="performance-considerations"></a><span data-ttu-id="dfccc-179">Zagadnienia dotyczące wydajności</span><span class="sxs-lookup"><span data-stu-id="dfccc-179">Performance considerations</span></span>  
 <span data-ttu-id="dfccc-180">Wyrzucanie lub Obsługa wyjątku zużywa znaczną ilość zasobów systemowych i czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="dfccc-180">Throwing or handling an exception consumes a significant amount of system resources and execution time.</span></span> <span data-ttu-id="dfccc-181">Zgłaszanie wyjątków tylko do obsługi naprawdę nadzwyczajne warunki, nie obsługi zdarzeń przewidywalne lub Sterowanie przepływem.</span><span class="sxs-lookup"><span data-stu-id="dfccc-181">Throw exceptions only to handle truly extraordinary conditions, not to handle predictable events or flow control.</span></span> <span data-ttu-id="dfccc-182">Na przykład w niektórych przypadkach, takich jak Jeśli projektujesz biblioteki klas, jest uzasadnione zgłosić wyjątek, jeśli argument metody jest nieprawidłowy, ponieważ oczekuje metodę można wywołać z prawidłowe parametry.</span><span class="sxs-lookup"><span data-stu-id="dfccc-182">For example, in some cases, such as when you're developing a class library, it's reasonable to throw an exception if a method argument is invalid, because you expect your method to be called with valid parameters.</span></span> <span data-ttu-id="dfccc-183">Argument nieprawidłową metodę, jeśli nie jest wynikiem błędu użycia oznacza, że coś nadzwyczajne wystąpił.</span><span class="sxs-lookup"><span data-stu-id="dfccc-183">An invalid method argument, if it is not the result of a usage error, means that something extraordinary has occurred.</span></span> <span data-ttu-id="dfccc-184">Z drugiej strony nie zgłosić wyjątek, jeśli dane wejściowe użytkownika jest nieprawidłowy, ponieważ można oczekiwać, że od czasu do czasu wprowadzenia nieprawidłowe dane.</span><span class="sxs-lookup"><span data-stu-id="dfccc-184">Conversely, do not throw an exception if user input is invalid, because you can expect users to occasionally enter invalid data.</span></span> <span data-ttu-id="dfccc-185">Zamiast tego udostępniają mechanizm ponawiania, więc użytkownik może wprowadzić prawidłowe wartości wejściowe.</span><span class="sxs-lookup"><span data-stu-id="dfccc-185">Instead, provide a retry mechanism so users can enter valid input.</span></span> <span data-ttu-id="dfccc-186">Nie należy używać wyjątków do obsługi błędów użycia.</span><span class="sxs-lookup"><span data-stu-id="dfccc-186">Nor should you use exceptions to handle usage errors.</span></span> <span data-ttu-id="dfccc-187">Zamiast tego należy użyć [potwierdzenia](/visualstudio/debugger/assertions-in-managed-code) Aby zidentyfikować i poprawić błędy użycia.</span><span class="sxs-lookup"><span data-stu-id="dfccc-187">Instead, use [assertions](/visualstudio/debugger/assertions-in-managed-code) to identify and correct usage errors.</span></span>  
  
 <span data-ttu-id="dfccc-188">Ponadto nie zgłosić wyjątek, gdy kod powrotu jest wystarczające; Nie można konwertować kod powrotny wyjątek; czy nie rutynowo catch wyjątku, ją zignorować i następnie kontynuować przetwarzanie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-188">In addition, do not throw an exception when a return code is sufficient; do not convert a return code to an exception; and do not routinely catch an exception, ignore it, and then continue processing.</span></span>  
  
<a name="Rethrow"></a>   
## <a name="re-throwing-an-exception"></a><span data-ttu-id="dfccc-189">Ponownego generowania wyjątku</span><span class="sxs-lookup"><span data-stu-id="dfccc-189">Re-throwing an exception</span></span>  
 <span data-ttu-id="dfccc-190">W wielu przypadkach program obsługi wyjątku po prostu chce przekazać wyjątek do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="dfccc-190">In many cases, an exception handler simply wants to pass the exception on to the caller.</span></span> <span data-ttu-id="dfccc-191">Najczęstszą przyczyną tego błędu w:</span><span class="sxs-lookup"><span data-stu-id="dfccc-191">This most often occurs in:</span></span>  
  
-   <span data-ttu-id="dfccc-192">Biblioteka klas, który z kolei powoduje błąd wywołania metody w bibliotece klas programu .NET Framework lub innych bibliotek klas.</span><span class="sxs-lookup"><span data-stu-id="dfccc-192">A class library that in turn wraps calls to methods in the .NET Framework class library or other class libraries.</span></span>  
  
-   <span data-ttu-id="dfccc-193">Aplikacja lub biblioteki, który napotkał wyjątek krytyczny.</span><span class="sxs-lookup"><span data-stu-id="dfccc-193">An application or library that encounters a fatal exception.</span></span> <span data-ttu-id="dfccc-194">Obsługa wyjątków zalogować wyjątek i ponowne zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-194">The exception handler can log the exception and then re-throw the exception.</span></span>  
  
 <span data-ttu-id="dfccc-195">Zalecanym sposobem do ponownego zgłoszenia wyjątku jest po prostu użyć [throw](~/docs/csharp/language-reference/keywords/throw.md) instrukcji w języku C# i [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) instrukcji w języku Visual Basic bez uwzględniania wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="dfccc-195">The recommended way to re-throw an exception is to simply use the [throw](~/docs/csharp/language-reference/keywords/throw.md) statement in C# and the [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) statement in Visual Basic without including an expression.</span></span> <span data-ttu-id="dfccc-196">Dzięki temu zachowywanie wszystkie informacje stosu wywołań, jeśli wyjątek jest propagowana do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="dfccc-196">This ensures that all call stack information is preserved when the exception is propagated to the caller.</span></span> <span data-ttu-id="dfccc-197">Ilustruje to poniższy przykład.</span><span class="sxs-lookup"><span data-stu-id="dfccc-197">The following example illustrates this.</span></span> <span data-ttu-id="dfccc-198">Metodę rozszerzenie ciąg `FindOccurrences`, opakowuje co najmniej jednego wywołania <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> bez weryfikowania jej argumenty wcześniej.</span><span class="sxs-lookup"><span data-stu-id="dfccc-198">A string extension method, `FindOccurrences`, wraps one or more calls to <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> without validating its arguments beforehand.</span></span>  
  
 [!code-csharp[System.Exception.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#6)]
 [!code-vb[System.Exception.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#6)]  
  
 <span data-ttu-id="dfccc-199">Obiekt wywołujący wywołuje `FindOccurrences` dwa razy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-199">A caller then calls `FindOccurrences` twice.</span></span> <span data-ttu-id="dfccc-200">W wywołaniu drugi `FindOccurrences`, przekazuje obiekt wywołujący `null` jako ciąg wyszukiwania, które przypadków <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> metodę, aby zgłosić <xref:System.ArgumentNullException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-200">In the second call to `FindOccurrences`, the caller passes a `null` as the search string, which cases the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method to throw an <xref:System.ArgumentNullException> exception.</span></span> <span data-ttu-id="dfccc-201">Ten wyjątek jest obsługiwany przez `FindOccurrences` — metoda i z powrotem przekazany do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="dfccc-201">This exception is handled by the `FindOccurrences` method and passed back to the caller.</span></span> <span data-ttu-id="dfccc-202">Ponieważ instrukcji throw jest używana z Brak wyrażenia, dane wyjściowe w przykładzie przedstawiono zachowywanie stosu wywołań.</span><span class="sxs-lookup"><span data-stu-id="dfccc-202">Because the throw statement is used with no expression, the output from the example shows that the call stack is preserved.</span></span>  
  
 [!code-csharp[System.Exception.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#7)]
 [!code-vb[System.Exception.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#7)]  
  
 <span data-ttu-id="dfccc-203">Natomiast jeśli ponownie wyjątku używając</span><span class="sxs-lookup"><span data-stu-id="dfccc-203">In contrast, if the exception is re-thrown by using the</span></span>  
  
```csharp  
throw e  
```  
  
```vb  
Throw e  
```  
  
 <span data-ttu-id="dfccc-204">Instrukcja, stos wywołań pełne nie są zachowywane i przykładzie powoduje wygenerowanie następujących danych wyjściowych:</span><span class="sxs-lookup"><span data-stu-id="dfccc-204">statement, the full call stack is not preserved, and the example would generate the following output:</span></span>  
  
```Output  
  
'a' occurs at the following character positions: 4, 7, 15  
  
An exception (ArgumentNullException) occurred.  
Message:  
   Value cannot be null.  
Parameter name: value  
  
Stack Trace:  
      at Library.FindOccurrences(String s, String f)  
   at Example.Main()  
  
```  
  
 <span data-ttu-id="dfccc-205">Nieco bardziej skomplikowane alternatywą jest zgłoszenie wyjątku nowy i zachować informacje stosu wywołań pierwotny wyjątek w wyjątku wewnętrznym.</span><span class="sxs-lookup"><span data-stu-id="dfccc-205">A slightly more cumbersome alternative is to throw a new exception, and to preserve the original exception's call stack information in an inner exception.</span></span> <span data-ttu-id="dfccc-206">Obiekt wywołujący można użyć nowego wyjątek <xref:System.Exception.InnerException%2A> właściwości do pobrania ramki stosu i inne informacje o pierwotny wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-206">The caller can then use the new exception's <xref:System.Exception.InnerException%2A> property to retrieve stack frame and other information about the original exception.</span></span> <span data-ttu-id="dfccc-207">W takim przypadku instrukcji throw jest:</span><span class="sxs-lookup"><span data-stu-id="dfccc-207">In this case, the throw statement is:</span></span>  
  
 [!code-csharp[System.Exception.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#8)]
 [!code-vb[System.Exception.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#8)]  
  
 <span data-ttu-id="dfccc-208">Kod użytkownika, który obsługuje wyjątek ma pamiętać, że <xref:System.Exception.InnerException%2A> właściwość zawiera informacje o pierwotny wyjątek, jak pokazano w poniższych obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="dfccc-208">The user code that handles the exception has to know that the <xref:System.Exception.InnerException%2A> property contains information about the original exception, as the following exception handler illustrates.</span></span>  
  
 [!code-csharp[System.Exception.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#9)]
 [!code-vb[System.Exception.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#9)]  
  
<a name="Standard"></a>   
## <a name="choosing-standard-exceptions"></a><span data-ttu-id="dfccc-209">Wybieranie standardowych wyjątków</span><span class="sxs-lookup"><span data-stu-id="dfccc-209">Choosing standard exceptions</span></span>  
 <span data-ttu-id="dfccc-210">Jeśli ma zostać zgłoszony wyjątek, można jej użyć istniejącego typu wyjątku w programie .NET Framework zamiast Implementowanie niestandardowego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-210">When you have to throw an exception, you can often use an existing exception type in the .NET Framework instead of implementing a custom exception.</span></span> <span data-ttu-id="dfccc-211">Należy używać typu wyjątku standardowe tych dwóch warunkach:</span><span class="sxs-lookup"><span data-stu-id="dfccc-211">You should use a standard exception type under these two conditions:</span></span>  
  
-   <span data-ttu-id="dfccc-212">Są Zgłaszanie wyjątku, który jest spowodowany przez błąd użycia (oznacza to błąd w logice programu wprowadzone przez projektanta, który wywołuje metodę).</span><span class="sxs-lookup"><span data-stu-id="dfccc-212">You are throwing an exception that is caused by a usage error (that is, by an error in program logic made by the developer who is calling your method).</span></span> <span data-ttu-id="dfccc-213">Zazwyczaj należy spowoduje zgłoszenie wyjątku takich jak <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, lub <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="dfccc-213">Typically, you would throw an exception such as <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, or <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="dfccc-214">Ciąg, który podasz do konstruktora obiektu wyjątek podczas tworzenia wystąpienia obiektu wyjątek powinien opisano błąd, dzięki czemu deweloper może go rozwiązać.</span><span class="sxs-lookup"><span data-stu-id="dfccc-214">The string you supply to the exception object's constructor when instantiating the exception object should describe the error so that the developer can fix it.</span></span> <span data-ttu-id="dfccc-215">Aby uzyskać więcej informacji, zobacz <xref:System.Exception.Message%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="dfccc-215">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="dfccc-216">Czy obsługa błędu, który można przekazane do elementu wywołującego z istniejących wyjątek .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="dfccc-216">You are handling an error that can be communicated to the caller with an existing .NET Framework exception.</span></span> <span data-ttu-id="dfccc-217">Powinien zgłosić wyjątek najdalszych pochodnych możliwe.</span><span class="sxs-lookup"><span data-stu-id="dfccc-217">You should throw the most derived exception possible.</span></span> <span data-ttu-id="dfccc-218">Na przykład, jeśli metoda wymaga argumentu być prawidłowym elementem członkowskim typu wyliczeniowego, powinien zgłosić <xref:System.ComponentModel.InvalidEnumArgumentException> (najbardziej pochodnej klasy) zamiast <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="dfccc-218">For example, if a method requires an argument to be a valid member of an enumeration type, you should throw an <xref:System.ComponentModel.InvalidEnumArgumentException> (the most derived class) rather than an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="dfccc-219">W poniższej tabeli wymieniono typowe typów wyjątków i warunków, w których spowoduje zgłoszenie je.</span><span class="sxs-lookup"><span data-stu-id="dfccc-219">The following table lists common exception types and the conditions under which you would throw them.</span></span>  
  
|<span data-ttu-id="dfccc-220">Wyjątek</span><span class="sxs-lookup"><span data-stu-id="dfccc-220">Exception</span></span>|<span data-ttu-id="dfccc-221">Warunek</span><span class="sxs-lookup"><span data-stu-id="dfccc-221">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.ArgumentException>|<span data-ttu-id="dfccc-222">Argument inną niż null, która została przekazana do metody jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-222">A non-null argument that is passed to a method is invalid.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="dfccc-223">Argument przekazywany do metody jest `null`.</span><span class="sxs-lookup"><span data-stu-id="dfccc-223">An argument that is passed to a method is `null`.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="dfccc-224">Argument jest spoza zakresu prawidłowych wartości.</span><span class="sxs-lookup"><span data-stu-id="dfccc-224">An argument is outside the range of valid values.</span></span>|  
|<xref:System.IO.DirectoryNotFoundException>|<span data-ttu-id="dfccc-225">Część ścieżki katalogu jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-225">Part of a directory path is not valid.</span></span>|  
|<xref:System.DivideByZeroException>|<span data-ttu-id="dfccc-226">Mianownik w całkowitą lub <xref:System.Decimal> operacji dzielenia wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="dfccc-226">The denominator in an integer or <xref:System.Decimal> division operation is zero.</span></span>|  
|<xref:System.IO.DriveNotFoundException>|<span data-ttu-id="dfccc-227">Dysk jest niedostępny lub nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="dfccc-227">A drive is unavailable or does not exist.</span></span>|  
|<xref:System.IO.FileNotFoundException>|<span data-ttu-id="dfccc-228">Plik nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="dfccc-228">A file does not exist.</span></span>|  
|<xref:System.FormatException>|<span data-ttu-id="dfccc-229">Wartość nie jest w odpowiednim formacie, który ma zostać przekonwertowany z ciągu za pomocą metody konwersji, takich jak `Parse`.</span><span class="sxs-lookup"><span data-stu-id="dfccc-229">A value is not in an appropriate format to be converted from a string by a conversion method such as `Parse`.</span></span>|  
|<xref:System.IndexOutOfRangeException>|<span data-ttu-id="dfccc-230">Indeks jest poza granicami tablicą lub kolekcją.</span><span class="sxs-lookup"><span data-stu-id="dfccc-230">An index is outside the bounds of an array or collection.</span></span>|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="dfccc-231">Wywołanie metody jest nieprawidłowy w bieżącym stanie obiektu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-231">A method call is invalid in an object's current state.</span></span>|  
|<xref:System.Collections.Generic.KeyNotFoundException>|<span data-ttu-id="dfccc-232">Nie można odnaleźć określonego klucza do uzyskiwania dostępu do elementu członkowskiego w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-232">The specified key for accessing a member in a collection cannot be found.</span></span>|  
|<xref:System.NotImplementedException>|<span data-ttu-id="dfccc-233">Metoda lub operacja nie jest zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="dfccc-233">A method or operation is not implemented.</span></span>|  
|<xref:System.NotSupportedException>|<span data-ttu-id="dfccc-234">Metoda lub operacja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="dfccc-234">A method or operation is not supported.</span></span>|  
|<xref:System.ObjectDisposedException>|<span data-ttu-id="dfccc-235">Operacja jest wykonywana na obiekcie, który został usunięty.</span><span class="sxs-lookup"><span data-stu-id="dfccc-235">An operation is performed on an object that has been disposed.</span></span>|  
|<xref:System.OverflowException>|<span data-ttu-id="dfccc-236">Działania arytmetyczne, rzutowania lub konwersji spowodowało przepełnienie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-236">An arithmetic, casting, or conversion operation results in an overflow.</span></span>|  
|<xref:System.IO.PathTooLongException>|<span data-ttu-id="dfccc-237">Ścieżka lub nazwa pliku przekracza maksymalną długość zdefiniowana w systemie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-237">A path or file name exceeds the maximum system-defined length.</span></span>|  
|<xref:System.PlatformNotSupportedException>|<span data-ttu-id="dfccc-238">Operacja nie jest obsługiwana na bieżącej platformie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-238">The operation is not supported on the current platform.</span></span>|  
|<xref:System.RankException>|<span data-ttu-id="dfccc-239">Ze złą liczbę wymiarów tablicy jest przekazywany do metody.</span><span class="sxs-lookup"><span data-stu-id="dfccc-239">An array with the wrong number of dimensions is passed to a method.</span></span>|  
|<xref:System.TimeoutException>|<span data-ttu-id="dfccc-240">Upłynął czas przydzielony na wykonanie operacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-240">The time interval allotted to an operation has expired.</span></span>|  
|<xref:System.UriFormatException>|<span data-ttu-id="dfccc-241">Nieprawidłowy identyfikator URI (Uniform Resource) jest używany.</span><span class="sxs-lookup"><span data-stu-id="dfccc-241">An invalid Uniform Resource Identifier (URI) is used.</span></span>|  
  
<a name="Custom"></a>   
## <a name="implementing-custom-exceptions"></a><span data-ttu-id="dfccc-242">Implementowanie wyjątków niestandardowych</span><span class="sxs-lookup"><span data-stu-id="dfccc-242">Implementing custom exceptions</span></span>  
 <span data-ttu-id="dfccc-243">Używanie istniejącej wyjątek .NET Framework do obsługi warunek błędu nie jest w następujących przypadkach odpowiednie:</span><span class="sxs-lookup"><span data-stu-id="dfccc-243">In the following cases, using an existing .NET Framework exception to handle an error condition is not adequate:</span></span>  
  
-   <span data-ttu-id="dfccc-244">Jeśli wyjątek odzwierciedla błąd unikatowy programu, które nie może być mapowane na istniejące wyjątek .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="dfccc-244">When the exception reflects a unique program error that cannot be mapped to an existing .NET Framework exception.</span></span>  
  
-   <span data-ttu-id="dfccc-245">Jeśli wyjątek wymaga obsługi, który różni się od obsługi, który jest odpowiedni dla istniejącego wyjątek .NET Framework lub wyjątek musi rozróżniane z podobnych wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-245">When the exception requires handling that is different from the handling that is appropriate for an existing .NET Framework exception, or the exception must be disambiguated from a similar exception.</span></span> <span data-ttu-id="dfccc-246">Na przykład, jeśli Generowanie <xref:System.ArgumentOutOfRangeException> wyjątek podczas analizowania reprezentację liczbową ciąg, który jest poza zakresem typu całkowitego docelowej, czy nie ma być używany ten sam wyjątek dla błędu, który powoduje wywołujący nie podano odpowiednie wartości ograniczeniami podczas wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="dfccc-246">For example, if you throw an <xref:System.ArgumentOutOfRangeException> exception when parsing the numeric representation of a string that is out of range of the target integral type, you would not want to use the same exception for an error that results from the caller not supplying the appropriate constrained values when calling the method.</span></span>  
  
 <span data-ttu-id="dfccc-247"><xref:System.Exception> Klasa jest klasą bazową dla wszystkich wyjątków w programie .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="dfccc-247">The <xref:System.Exception> class is the base class of all exceptions in the .NET Framework.</span></span> <span data-ttu-id="dfccc-248">Wiele klas pochodnych polegać na zachowanie dziedziczone elementy członkowskie <xref:System.Exception> klasy; nie zastępuj członków <xref:System.Exception>, ani czy definiują żadnych unikatowych elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="dfccc-248">Many derived classes rely on the inherited behavior of the members of the <xref:System.Exception> class; they do not override the members of <xref:System.Exception>, nor do they define any unique members.</span></span>  
  
 <span data-ttu-id="dfccc-249">Aby zdefiniować klasy wyjątku:</span><span class="sxs-lookup"><span data-stu-id="dfccc-249">To define your own exception class:</span></span>  
  
1.  <span data-ttu-id="dfccc-250">Definiowanie klasy, która dziedziczy <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="dfccc-250">Define a class that inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="dfccc-251">Jeśli to konieczne, zdefiniuj żadnych unikatowych elementów członkowskich klasy potrzebne dodatkowe informacje o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-251">If necessary, define any unique members needed by your class to provide additional information about the exception.</span></span> <span data-ttu-id="dfccc-252">Na przykład <xref:System.ArgumentException> klasa zawiera <xref:System.ArgumentException.ParamName%2A> właściwość, która określa nazwę parametru, którego argument spowodował wyjątek, i <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> zawiera właściwość <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> właściwość, która wskazuje interwał limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-252">For example, the <xref:System.ArgumentException> class includes a <xref:System.ArgumentException.ParamName%2A> property that specifies the name of the parameter whose argument caused the exception, and the <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> property includes a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> property that indicates the time-out interval.</span></span>  
  
2.  <span data-ttu-id="dfccc-253">W razie potrzeby należy zastąpić wszystkie dziedziczone elementy członkowskie funkcje, których chcesz zmieniać ani modyfikować.</span><span class="sxs-lookup"><span data-stu-id="dfccc-253">If necessary, override any inherited members whose functionality you want to change or modify.</span></span> <span data-ttu-id="dfccc-254">Należy pamiętać, że większość istniejących pochodnej klasy <xref:System.Exception> nie zastępują zachowanie dziedziczone elementy członkowskie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-254">Note that most existing derived classes of <xref:System.Exception> do not override the behavior of inherited members.</span></span>  
  
3.  <span data-ttu-id="dfccc-255">Określić, czy obiekt niestandardowego wyjątku jest możliwy do serializacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-255">Determine whether your custom exception object is serializable.</span></span> <span data-ttu-id="dfccc-256">Serializacja umożliwia zapisanie informacji o wyjątku i pozwala na informacje o wyjątku być współużytkowane przez serwer i klienta serwera proxy w kontekście usług zdalnych.</span><span class="sxs-lookup"><span data-stu-id="dfccc-256">Serialization enables you to save information about the exception and permits exception information to be shared by a server and a client proxy in a remoting context.</span></span> <span data-ttu-id="dfccc-257">Aby obiekt wyjątku do serializacji, oznacz go z <xref:System.SerializableAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-257">To make the exception object serializable, mark it with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
4.  <span data-ttu-id="dfccc-258">Definiowanie konstruktora klasy wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-258">Define the constructors of your exception class.</span></span> <span data-ttu-id="dfccc-259">Zazwyczaj klasy wyjątków mają co najmniej jeden z następujących konstruktorów:</span><span class="sxs-lookup"><span data-stu-id="dfccc-259">Typically, exception classes have one or more of the following constructors:</span></span>  
  
    -   <span data-ttu-id="dfccc-260"><xref:System.Exception.%23ctor>, które są używane wartości domyślne można zainicjować właściwości nowy obiekt wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-260"><xref:System.Exception.%23ctor>, which uses default values to initialize the properties of a new exception object.</span></span>  
  
    -   <span data-ttu-id="dfccc-261"><xref:System.Exception.%23ctor%28System.String%29>, która inicjuje nowy obiekt wyjątku z powodu określonego błędu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-261"><xref:System.Exception.%23ctor%28System.String%29>, which initializes a new exception object with a specified error message.</span></span>  
  
    -   <span data-ttu-id="dfccc-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, która inicjuje nowy obiekt wyjątku z komunikatu i wewnętrzny wyjątek określonego błędu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, which initializes a new exception object with a specified error message and inner exception.</span></span>  
  
    -   <span data-ttu-id="dfccc-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, która jest `protected` Konstruktor, który inicjuje nowy obiekt wyjątku z serializacji danych.</span><span class="sxs-lookup"><span data-stu-id="dfccc-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, which is a `protected` constructor that initializes a new exception object from serialized data.</span></span> <span data-ttu-id="dfccc-264">Ten konstruktor powinien implementować Jeśli wybrano możliwy do serializacji obiektu wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-264">You should implement this constructor if you've chosen to make your exception object serializable.</span></span>  
  
 <span data-ttu-id="dfccc-265">Poniższy przykład przedstawia użycie klasy niestandardowej wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-265">The following example illustrates the use of a custom exception class.</span></span> <span data-ttu-id="dfccc-266">Definiuje `NotPrimeException` wyjątek zgłaszany, gdy klient próbuje pobrać sekwencji liczb pierwszych określając początkowy numer, który nie jest podstawowym.</span><span class="sxs-lookup"><span data-stu-id="dfccc-266">It defines a `NotPrimeException` exception that is thrown when a client tries to retrieve a sequence of prime numbers by specifying a starting number that is not prime.</span></span> <span data-ttu-id="dfccc-267">Wyjątek definiuje nową właściwość `NonPrime`, która zwraca z systemem innym niż — pierwsze numer, który spowodował wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-267">The exception defines a new property, `NonPrime`, that returns the non-prime number that caused the exception.</span></span> <span data-ttu-id="dfccc-268">Oprócz wykonania chronionych konstruktora ani konstruktora z <xref:System.Runtime.Serialization.SerializationInfo> i <xref:System.Runtime.Serialization.StreamingContext> parametry w celu serializacji, `NotPrimeException` klasa definiuje trzy dodatkowe konstruktorów do obsługi `NonPrime` właściwości.</span><span class="sxs-lookup"><span data-stu-id="dfccc-268">Besides implementing a protected parameterless constructor and a constructor with <xref:System.Runtime.Serialization.SerializationInfo> and <xref:System.Runtime.Serialization.StreamingContext> parameters for serialization, the `NotPrimeException` class defines three additional constructors to support the `NonPrime` property.</span></span>  <span data-ttu-id="dfccc-269">Każdy Konstruktor wywołuje konstruktor klasy podstawowej, oprócz zachowania programu liczba firmy z systemem innym niż pierwsza wartość.</span><span class="sxs-lookup"><span data-stu-id="dfccc-269">Each constructor calls a base class constructor in addition to preserving the value of the non-prime number.</span></span> <span data-ttu-id="dfccc-270">`NotPrimeException` Klasy również jest oznaczony atrybutem <xref:System.SerializableAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-270">The `NotPrimeException` class is also marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Exception.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/notprimeexception.cs#1)]
 [!code-vb[System.Exception.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/notprimeexception.vb#1)]  
  
 <span data-ttu-id="dfccc-271">`PrimeNumberGenerator` Pokazano w poniższym przykładzie klasa używa sito Eratosthenes do obliczenia sekwencji liczb pierwszych od 2 do limitu określonego przez klienta w wywołaniu dla jego konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-271">The `PrimeNumberGenerator` class shown in the following example uses the Sieve of Eratosthenes to calculate the sequence of prime numbers from 2 to a limit specified by the client in the call to its class constructor.</span></span> <span data-ttu-id="dfccc-272">`GetPrimesFrom` Metoda zwraca wszystkie liczb pierwszych, które są większe niż lub równa określonej dolną granicę, ale zgłasza `NotPrimeException` jeśli że dolna granica nie jest liczba pierwsza.</span><span class="sxs-lookup"><span data-stu-id="dfccc-272">The `GetPrimesFrom` method returns all prime numbers that are greater than or equal to a specified lower limit, but throws a `NotPrimeException` if that lower limit is not a prime number.</span></span>  
  
 [!code-csharp[System.Exception.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/primenumbergenerator.cs#2)]
 [!code-vb[System.Exception.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/primenumbergenerator.vb#2)]  
  
 <span data-ttu-id="dfccc-273">Poniższy przykład powoduje, że dwa wywołań `GetPrimesFrom` metody z nie liczby pierwsze, z których jedna przecina granice domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-273">The following example makes two calls to the `GetPrimesFrom` method with non-prime numbers, one of which crosses application domain boundaries.</span></span> <span data-ttu-id="dfccc-274">W obu przypadkach wyjątek jest generowany i pomyślnie obsługiwane kodu klienta.</span><span class="sxs-lookup"><span data-stu-id="dfccc-274">In both cases, the exception is thrown and successfully handled in client code.</span></span>  
  
 [!code-csharp[System.Exception.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/example.cs#3)]
 [!code-vb[System.Exception.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/example.vb#3)]  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="dfccc-275">Środowisko wykonawcze systemu Windows i [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="dfccc-275">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="dfccc-276">W [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] dla [!INCLUDE[win8](~/includes/win8-md.md)], niektóre informacje o wyjątku jest zwykle utracone w przypadku, gdy wyjątek zostanie przekazane za pomocą ramki stosu platformy .NET.</span><span class="sxs-lookup"><span data-stu-id="dfccc-276">In [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] for [!INCLUDE[win8](~/includes/win8-md.md)], some exception information is typically lost when an exception is propagated through non-.NET Framework stack frames.</span></span> <span data-ttu-id="dfccc-277">Począwszy od [!INCLUDE[net_v451](~/includes/net-v451-md.md)] i [!INCLUDE[win81](~/includes/win81-md.md)], środowisko uruchomieniowe języka wspólnego w dalszym ciągu używa oryginalnej <xref:System.Exception> obiekt, który został zgłoszony, chyba że ten wyjątek został zmodyfikowany w ramce stosu platformy .NET.</span><span class="sxs-lookup"><span data-stu-id="dfccc-277">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the common language runtime continues to use the original <xref:System.Exception> object that was thrown unless that exception was modified in a non-.NET Framework stack frame.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-278">W poniższym przykładzie pokazano `catch` bloku, który jest zdefiniowany w celu obsługi <xref:System.ArithmeticException> błędy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-278">The following example demonstrates a `catch` block that is defined to handle <xref:System.ArithmeticException> errors.</span></span> <span data-ttu-id="dfccc-279">To `catch` również zablokować połowy <xref:System.DivideByZeroException> błędy, ponieważ <xref:System.DivideByZeroException> pochodzi z <xref:System.ArithmeticException> i ma nie `catch` bloku jawnie zdefiniowany dla <xref:System.DivideByZeroException> błędy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-279">This `catch` block also catches <xref:System.DivideByZeroException> errors, because <xref:System.DivideByZeroException> derives from <xref:System.ArithmeticException> and there is no `catch` block explicitly defined for <xref:System.DivideByZeroException> errors.</span></span>  
  
 [!code-cpp[CatchException#1](~/samples/snippets/cpp/VS_Snippets_CLR/CatchException/CPP/catchexception.cpp#1)]
 [!code-csharp[CatchException#1](~/samples/snippets/csharp/VS_Snippets_CLR/CatchException/CS/catchexception.cs#1)]
 [!code-vb[CatchException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CatchException/VB/catchexception.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-280">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-280">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-281">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-281">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-282">Ten konstruktor inicjuje <xref:System.Exception.Message%2A> właściwość nowego wystąpienia dostarczony przez system komunikatu opisem błędu bierze pod uwagę bieżące ustawienia kulturowe systemu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-282">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error and takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="dfccc-283">Klasy pochodne powinien zapewnić tym domyślnego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="dfccc-283">All the derived classes should provide this default constructor.</span></span> <span data-ttu-id="dfccc-284">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="dfccc-284">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="dfccc-285">Właściwość</span><span class="sxs-lookup"><span data-stu-id="dfccc-285">Property</span></span>|<span data-ttu-id="dfccc-286">Wartość</span><span class="sxs-lookup"><span data-stu-id="dfccc-286">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="dfccc-287">Odwołanie o wartości null (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="dfccc-287">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="dfccc-288">Zlokalizowany opis dostarczany przez system.</span><span class="sxs-lookup"><span data-stu-id="dfccc-288">A system-supplied localized description.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-289">Poniższy przykład kodu pochodzi `Exception` używającą wstępnie zdefiniowanych wiadomości.</span><span class="sxs-lookup"><span data-stu-id="dfccc-289">The following code example derives an `Exception` that uses a predefined message.</span></span> <span data-ttu-id="dfccc-290">Kod przedstawia użycie konstruktora bez parametrów dla klasy pochodnej i podstawowym `Exception` klasy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-290">The code demonstrates the use of the parameterless constructor for the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/new.cpp#1)]
 [!code-csharp[System.Exception.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/new.cs#1)]
 [!code-vb[System.Exception.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/new.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="dfccc-291">Komunikat, który opisuje błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-291">The message that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfccc-292">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy z powodu określonego błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-292">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-293">Ten konstruktor inicjuje <xref:System.Exception.Message%2A> właściwość nowego wystąpienia przy użyciu `message` parametru.</span><span class="sxs-lookup"><span data-stu-id="dfccc-293">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance by using the `message` parameter.</span></span> <span data-ttu-id="dfccc-294">Jeśli `message` parametr jest `null`, jest taka sama jak wywołanie <xref:System.Exception.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="dfccc-294">If the `message` parameter is `null`, this is the same as calling the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="dfccc-295">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="dfccc-295">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="dfccc-296">Właściwość</span><span class="sxs-lookup"><span data-stu-id="dfccc-296">Property</span></span>|<span data-ttu-id="dfccc-297">Wartość</span><span class="sxs-lookup"><span data-stu-id="dfccc-297">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="dfccc-298">Odwołanie o wartości null (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="dfccc-298">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="dfccc-299">Ciąg komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-299">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-300">Poniższy przykład kodu pochodzi `Exception` dla określonego warunku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-300">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="dfccc-301">Kod przedstawia użycie Konstruktor, który pobiera komunikat określonym funkcję wywołującą jako parametr, dla klasy pochodnej i podstawowym `Exception` klasy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-301">The code demonstrates the use of the constructor that takes a caller-specified message as a parameter, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/news.cpp#2)]
 [!code-csharp[System.Exception.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/news.cs#2)]
 [!code-vb[System.Exception.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/news.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Exception (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="dfccc-302">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Zawierający dane zserializowanego obiektu dotyczące zgłaszanego wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-302">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="dfccc-303">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> Zawierający informacje kontekstowe dotyczące źródła lub miejsca docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-303">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfccc-304">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> z zserializowanymi danymi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-304">Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-305">Ten konstruktor jest wywoływana podczas deserializacji do odtworzenia obiektu wyjątku przesyłanego za pomocą strumienia.</span><span class="sxs-lookup"><span data-stu-id="dfccc-305">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="dfccc-306">Aby uzyskać więcej informacji, zobacz [XML i serializacji SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="dfccc-306">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-307">Poniższy przykładowy kod definiuje pochodnego serializacji `Exception` klasy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-307">The following code example defines a derived serializable `Exception` class.</span></span> <span data-ttu-id="dfccc-308">Kod wymusza błąd dzielenia przez 0, a następnie tworzy wystąpienie klasy pochodnej wyjątków za pomocą (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) konstruktora.</span><span class="sxs-lookup"><span data-stu-id="dfccc-308">The code forces a divide-by-0 error and then creates an instance of the derived exception using the (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) constructor.</span></span> <span data-ttu-id="dfccc-309">Kod serializuje wystąpienie do pliku, deserializuje plik do nowego wyjątek, który zgłasza, a następnie przechwytuje i wyświetla dane wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-309">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfccc-310">
            <paramref name="info" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-310">The <paramref name="info" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="dfccc-311">Nazwa klasy jest <see langword="null" /> lub <see cref="P:System.Exception.HResult" /> wynosi zero (0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-311">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="dfccc-312">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-312">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="dfccc-313">Wyjątek będący przyczyną bieżącego wyjątku lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), jeśli jest określony żaden wyjątek wewnętrzny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-313">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfccc-314">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> z określonego komunikatu o błędzie i odwołania do wyjątek wewnętrzny będący przyczyną tego wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-314">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-315">Wyjątek zgłaszany bezpośrednio w wyniku poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="dfccc-315">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="dfccc-316"><xref:System.Exception.InnerException%2A> Właściwość zwraca tę samą wartość, która została przekazana do konstruktora lub odwołanie o wartości null (`Nothing` w języku Visual Basic) Jeśli <xref:System.Exception.InnerException%2A> właściwości nie dostarcza do konstruktora wartości wyjątku wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="dfccc-316">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="dfccc-317">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="dfccc-317">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="dfccc-318">Właściwość</span><span class="sxs-lookup"><span data-stu-id="dfccc-318">Property</span></span>|<span data-ttu-id="dfccc-319">Wartość</span><span class="sxs-lookup"><span data-stu-id="dfccc-319">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="dfccc-320">Odwołanie do wewnętrznego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-320">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="dfccc-321">Ciąg komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-321">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-322">Poniższy przykład kodu pochodzi `Exception` dla określonego warunku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-322">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="dfccc-323">Kod przedstawia użycie konstruktora, który przyjmuje wiadomości i wyjątek wewnętrzny jako parametry dla klasy pochodnej i podstawowym `Exception` klasy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-323">The code demonstrates the use of the constructor that takes a message and an inner exception as parameters, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/newsi.cpp#3)]
 [!code-csharp[System.Exception.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/newsi.cs#3)]
 [!code-vb[System.Exception.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/newsi.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Data" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Data { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-324">Pobiera kolekcję par klucz/wartość, które znajdują się dodatkowe zdefiniowane przez użytkownika informacje o wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-324">Gets a collection of key/value pairs that provide additional user-defined information about the exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dfccc-325">Obiekt, który implementuje <see cref="T:System.Collections.IDictionary" /> interfejsu i zawiera kolekcję par klucz/wartość zdefiniowane przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-325">An object that implements the <see cref="T:System.Collections.IDictionary" /> interface and contains a collection of user-defined key/value pairs.</span>
          </span>
          <span data-ttu-id="dfccc-326">Wartością domyślną jest pusta kolekcja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-326">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-327">Użyj <xref:System.Collections.IDictionary?displayProperty=nameWithType> obiektu zwróconego przez <xref:System.Exception.Data%2A> właściwości do przechowywania i pobierania dodatkowe informacje dotyczące wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-327">Use the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object returned by the <xref:System.Exception.Data%2A> property to store and retrieve supplementary information relevant to the exception.</span></span> <span data-ttu-id="dfccc-328">Informacje znajdują się w formie dowolnej liczby pary klucz wartość zdefiniowana przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="dfccc-328">The information is in the form of an arbitrary number of user-defined key/value pairs.</span></span> <span data-ttu-id="dfccc-329">Najważniejszym aspektem każdego pary klucza/wartości jest zwykle ciąg identyfikujący część wartości pary mogą być obiekty dowolnego typu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-329">The key component of each key/value pair is typically an identifying string, whereas the value component of the pair can be any type of object.</span></span>  
  
## <a name="keyvalue-pair-security"></a><span data-ttu-id="dfccc-330">Zabezpieczenia pary klucz/wartość</span><span class="sxs-lookup"><span data-stu-id="dfccc-330">Key/Value Pair Security</span></span>  
 <span data-ttu-id="dfccc-331">Pary klucz/wartość przechowywanych w kolekcji zwróconej przez <xref:System.Exception.Data%2A> właściwości nie są bezpieczne.</span><span class="sxs-lookup"><span data-stu-id="dfccc-331">The key/value pairs stored in the collection returned by the <xref:System.Exception.Data%2A> property are not secure.</span></span> <span data-ttu-id="dfccc-332">Jeśli aplikacja wywołuje szereg zagnieżdżonych procedury, a każda procedura zawiera programy obsługi wyjątków, wynikowy stosu wywołań zawiera hierarchię te programy obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="dfccc-332">If your application calls a nested series of routines, and each routine contains exception handlers, the resulting call stack contains a hierarchy of those exception handlers.</span></span> <span data-ttu-id="dfccc-333">Jeśli procedura niższego poziomu zgłasza wyjątek, wszelkie obsługi wyjątków wyższego poziomu w hierarchii stosu wywołań można odczytać i/lub zmodyfikować pary klucz/wartość przechowywanych w kolekcji przez inne obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="dfccc-333">If a lower-level routine throws an exception, any upper-level exception handler in the call stack hierarchy can read and/or modify the key/value pairs stored in the collection by any other exception handler.</span></span> <span data-ttu-id="dfccc-334">Oznacza to, że należy zagwarantować dane w pary klucz wartość nie jest poufne i że aplikacja będzie działać prawidłowo, jeśli informacje w pary klucz wartość są uszkodzone.</span><span class="sxs-lookup"><span data-stu-id="dfccc-334">This means you must guarantee that the information in the key/value pairs is not confidential and that your application will operate correctly if the information in the key/value pairs is corrupted.</span></span>  
  
## <a name="key-conflicts"></a><span data-ttu-id="dfccc-335">Konflikty klucza</span><span class="sxs-lookup"><span data-stu-id="dfccc-335">Key Conflicts</span></span>  
 <span data-ttu-id="dfccc-336">Konflikt klucza występuje, gdy programy obsługi wyjątków różnych określić ten sam klucz dostępu parę klucza i wartości do.</span><span class="sxs-lookup"><span data-stu-id="dfccc-336">A key conflict occurs when different exception handlers specify the same key to access a key/value pair.</span></span> <span data-ttu-id="dfccc-337">Tworzenie aplikacji, ponieważ konsekwencją konflikt klucza jest programy obsługi wyjątków niższego poziomu mogą przypadkowo może komunikować się z wyższego poziomu obsługi wyjątków, czy ta komunikacja może spowodować błędy niewielkie program, należy zachować ostrożność.</span><span class="sxs-lookup"><span data-stu-id="dfccc-337">Use caution when developing your application because the consequence of a key conflict is that lower-level exception handlers can inadvertently communicate with higher-level exception handlers, and this communication might cause subtle program errors.</span></span> <span data-ttu-id="dfccc-338">Jednak w przypadku ostrożność służy konfliktów kluczy w celu zwiększenia aplikacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-338">However, if you are cautious you can use key conflicts to enhance your application.</span></span>  
  
## <a name="avoiding-key-conflicts"></a><span data-ttu-id="dfccc-339">Unikanie konfliktów klucza</span><span class="sxs-lookup"><span data-stu-id="dfccc-339">Avoiding Key Conflicts</span></span>  
 <span data-ttu-id="dfccc-340">Aby uniknąć konfliktów kluczy przyjmowanie konwencji nazewnictwa do wygenerowania unikatowy kluczy dla pary klucz wartość.</span><span class="sxs-lookup"><span data-stu-id="dfccc-340">Avoid key conflicts by adopting a naming convention to generate unique keys for key/value pairs.</span></span> <span data-ttu-id="dfccc-341">Na przykład konwencji nazewnictwa może dać klucz, który składa się z nazwy rozdzielonym aplikacji, metody, która zawiera dodatkowe informacje dotyczące pary i unikatowy identyfikator.</span><span class="sxs-lookup"><span data-stu-id="dfccc-341">For example, a naming convention might yield a key that consists of the period-delimited name of your application, the method that provides supplementary information for the pair, and a unique identifier.</span></span>  
  
 <span data-ttu-id="dfccc-342">Załóżmy, że dwóch aplikacji o nazwie produktów i dostawców, każda ma metodę o nazwie sprzedaży.</span><span class="sxs-lookup"><span data-stu-id="dfccc-342">Suppose two applications, named Products and Suppliers, each has a method named Sales.</span></span> <span data-ttu-id="dfccc-343">Metoda sprzedaży w aplikacji produktów zawiera numeru identyfikacyjnego (magazynową jednostki lub jednostki SKU) produktu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-343">The Sales method in the Products application provides the identification number (the stock keeping unit or SKU) of a product.</span></span> <span data-ttu-id="dfccc-344">Metoda sprzedaży w aplikacji dostawcy udostępnia numer identyfikacyjny lub identyfikator SID dostawcy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-344">The Sales method in the Suppliers application provides the identification number, or SID, of a supplier.</span></span> <span data-ttu-id="dfccc-345">W rezultacie konwencji nazewnictwa w tym przykładzie daje klucze, "Products.Sales.SKU" i "Suppliers.Sales.SID".</span><span class="sxs-lookup"><span data-stu-id="dfccc-345">Consequently, the naming convention for this example yields the keys, "Products.Sales.SKU" and "Suppliers.Sales.SID".</span></span>  
  
## <a name="exploiting-key-conflicts"></a><span data-ttu-id="dfccc-346">Wykorzystanie konfliktów klucza</span><span class="sxs-lookup"><span data-stu-id="dfccc-346">Exploiting Key Conflicts</span></span>  
 <span data-ttu-id="dfccc-347">Wykorzystać konfliktów kluczy przy użyciu obecności co najmniej jeden klucz specjalnych, wstępnie ustalane do kontrolowania przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="dfccc-347">Exploit key conflicts by using the presence of one or more special, prearranged keys to control processing.</span></span> <span data-ttu-id="dfccc-348">Załóżmy scenariusz, najwyższy program obsługi wyjątku poziomu w hierarchii stosu wywołań przechwytuje wszystkie wyjątki zgłaszane przez programy obsługi wyjątków niższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-348">Suppose, in one scenario, the highest level exception handler in the call stack hierarchy catches all exceptions thrown by lower-level exception handlers.</span></span> <span data-ttu-id="dfccc-349">Jeśli para klucza i wartości, przy użyciu specjalnego klucza istnieje, obsługa wyjątków ogólnych formatuje pozostałych pary klucz wartość w <xref:System.Collections.IDictionary> obiektu w jakiś sposób niestandardowych; w przeciwnym razie pozostałych pary klucz wartość są sformatowane w normalnym sposób.</span><span class="sxs-lookup"><span data-stu-id="dfccc-349">If a key/value pair with a special key exists, the high-level exception handler formats the remaining key/value pairs in the <xref:System.Collections.IDictionary> object in some nonstandard way; otherwise, the remaining key/value pairs are formatted in some normal manner.</span></span>  
  
 <span data-ttu-id="dfccc-350">Teraz załóżmy, w innym scenariuszu obsługi wyjątków na każdym poziomie hierarchii stosu wywołań przechwytuje wyjątków zgłaszanych przez dalej obsługi wyjątków niższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-350">Now suppose, in another scenario, the exception handler at each level of the call stack hierarchy catches the exception thrown by the next lower-level exception handler.</span></span> <span data-ttu-id="dfccc-351">Ponadto każdy program obsługi wyjątku zna kolekcji zwróconej przez <xref:System.Exception.Data%2A> właściwość zawiera zbiór pary klucz wartość, które są dostępne z wstępnie ustalane zestawu kluczy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-351">In addition, each exception handler knows the collection returned by the <xref:System.Exception.Data%2A> property contains a set of key/value pairs that can be accessed with a prearranged set of keys.</span></span>  
  
 <span data-ttu-id="dfccc-352">Każdy program obsługi wyjątku używa wstępnie ustalane zestaw kluczy zaktualizować składnik wartości odpowiednich pary klucz wartość z użyciem informacji specyficznych dla programu obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="dfccc-352">Each exception handler uses the prearranged set of keys to update the value component of the corresponding key/value pair with information unique to that exception handler.</span></span> <span data-ttu-id="dfccc-353">Po zakończeniu procesu aktualizacji program obsługi wyjątku zgłasza wyjątek do następnego wyższego poziomu obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="dfccc-353">After the update process is complete, the exception handler throws the exception to the next higher-level exception handler.</span></span> <span data-ttu-id="dfccc-354">Ponadto obsługa najwyższego poziomu wyjątków uzyskuje dostęp do pary klucz wartość i wyświetla informacje skonsolidowanych aktualizacji z obsługi wyjątków niższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-354">Finally, the highest level exception handler accesses the key/value pairs and displays the consolidated update information from all the lower-level exception handlers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-355">W poniższym przykładzie pokazano, jak dodać i pobrać za pomocą informacji <xref:System.Exception.Data%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="dfccc-355">The following example demonstrates how to add and retrieve information using the <xref:System.Exception.Data%2A> property.</span></span>  
  
 [!code-cpp[exception.data#1](~/samples/snippets/cpp/VS_Snippets_CLR/exception.data/CPP/data.cpp#1)]
 [!code-csharp[exception.data#1](~/samples/snippets/csharp/VS_Snippets_CLR/exception.data/CS/data.cs#1)]
 [!code-vb[exception.data#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/exception.data/VB/data.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.DictionaryEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public virtual Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Exception ^ GetBaseException();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetBaseException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-356">Po przesłonięciu w klasie pochodnej zwraca <see cref="T:System.Exception" /> czyli przyczynę jeden lub więcej kolejnych wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-356">When overridden in a derived class, returns the <see cref="T:System.Exception" /> that is the root cause of one or more subsequent exceptions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dfccc-357">Pierwszy wyjątek w łańcuchu wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-357">The first exception thrown in a chain of exceptions.</span>
          </span>
          <span data-ttu-id="dfccc-358">Jeśli <see cref="P:System.Exception.InnerException" /> właściwości bieżącego wyjątku jest odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), ta właściwość zwraca bieżącego wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-358">If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (<see langword="Nothing" /> in Visual Basic), this property returns the current exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-359">Łańcuch wyjątków zawiera zestaw wyjątków tak, aby każdy w łańcuchu wyjątek bezpośrednio z powodu wyjątku, do którego odwołuje się jego `InnerException` właściwości.</span><span class="sxs-lookup"><span data-stu-id="dfccc-359">A chain of exceptions consists of a set of exceptions such that each exception in the chain was thrown as a direct result of the exception referenced in its `InnerException` property.</span></span> <span data-ttu-id="dfccc-360">Dla danego łańcucha może istnieć dokładnie jeden wyjątek, który jest główną przyczynę wszystkie wyjątki w łańcuchu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-360">For a given chain, there can be exactly one exception that is the root cause of all other exceptions in the chain.</span></span> <span data-ttu-id="dfccc-361">Ten wyjątek nosi nazwę podstawową wyjątek i jego `InnerException` właściwość zawsze zawiera odwołanie o wartości null.</span><span class="sxs-lookup"><span data-stu-id="dfccc-361">This exception is called the base exception and its `InnerException` property always contains a null reference.</span></span>  
  
 <span data-ttu-id="dfccc-362">Wszystkie wyjątki w łańcuchu wyjątków `GetBaseException` metoda musi zwracać ten sam obiekt (wyjątek podstawowej).</span><span class="sxs-lookup"><span data-stu-id="dfccc-362">For all exceptions in a chain of exceptions, the `GetBaseException` method must return the same object (the base exception).</span></span>  
  
 <span data-ttu-id="dfccc-363">Użyj `GetBaseException` metody, aby znaleźć przyczynę wyjątek, ale nie są informacje dotyczące wyjątków, które mogły wystąpić między bieżący wyjątek i pierwszy wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-363">Use the `GetBaseException` method when you want to find the root cause of an exception but do not need information about exceptions that may have occurred between the current exception and the first exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-364">Poniższy przykład kodu definiuje dwie pochodnych `Exception` klasy.</span><span class="sxs-lookup"><span data-stu-id="dfccc-364">The following code example defines two derived `Exception` classes.</span></span> <span data-ttu-id="dfccc-365">Wymusza wyjątek, a następnie generuje go ponownie z każdym z klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="dfccc-365">It forces an exception and then throws it again with each of the derived classes.</span></span> <span data-ttu-id="dfccc-366">Kod pokazano sposób użycia `GetBaseException` metoda pobierania pierwotny wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-366">The code shows the use of the `GetBaseException` method to retrieve the original exception.</span></span>  
  
 [!code-cpp[System.Exception.GetBaseException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CPP/getbaseexc.cpp#1)]
 [!code-csharp[System.Exception.GetBaseException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CS/getbaseexc.cs#1)]
 [!code-vb[System.Exception.GetBaseException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetBaseException/VB/getbaseexc.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dfccc-367">
              <see langword="GetBaseException" /> Metoda zostanie przesłonięta w klasach, które wymagają kontrolę nad zawartością wyjątku lub format.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dfccc-367">The <see langword="GetBaseException" /> method is overridden in classes that require control over the exception content or format.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="dfccc-368">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Zawierający dane zserializowanego obiektu dotyczące zgłaszanego wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-368">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="dfccc-369">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> Zawierający informacje kontekstowe dotyczące źródła lub miejsca docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-369">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfccc-370">W przypadku przesłonięcia w klasie pochodnej, ustawia <see cref="T:System.Runtime.Serialization.SerializationInfo" /> informacje o wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-370">When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-371">`GetObjectData` Ustawia <xref:System.Runtime.Serialization.SerializationInfo> ze wszystkimi danymi obiektu wyjątków przeznaczone do serializacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-371">`GetObjectData` sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="dfccc-372">Podczas deserializacji, wyjątek jest odtworzonych z `SerializationInfo` przesyłane przez strumień.</span><span class="sxs-lookup"><span data-stu-id="dfccc-372">During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-373">Poniższy przykładowy kod definiuje pochodnego serializacji `Exception` klasa implementująca `GetObjectData`, co czyni drobne zmiany do dwóch właściwości i następnie wywołania podstawowym klasy do wykonywania serializacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-373">The following code example defines a derived serializable `Exception` class that implements `GetObjectData`, which makes minor changes to two properties and then calls the base class to perform the serialization.</span></span> <span data-ttu-id="dfccc-374">Przykład wymusza błąd dzielenia przez 0, a następnie tworzy wystąpienia pochodne wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-374">The example forces a divide-by-0 error and then creates an instance of the derived exception.</span></span> <span data-ttu-id="dfccc-375">Kod serializuje wystąpienie do pliku, deserializuje plik do nowego wyjątek, który zgłasza, a następnie przechwytuje i wyświetla dane wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-375">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfccc-376">
            <paramref name="info" /> Parametr jest odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-376">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="dfccc-377">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-377">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="dfccc-378">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-378">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-379">Pobiera typ środowiska uruchomieniowego bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-379">Gets the runtime type of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dfccc-380">A <see cref="T:System.Type" /> obiekt, który reprezentuje typ środowiska uruchomieniowego dokładne bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-380">A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-381"><xref:System.Exception.GetType%2A> Metoda istnieje obsługuje infrastrukturę programu .NET Framework i wewnętrznie wywołuje metodę podstawową, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfccc-381">The <xref:System.Exception.GetType%2A> method exists to support the .NET Framework infrastructure, and internally invokes the fundamental method, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public virtual string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.HelpLink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-382">Pobiera lub ustawia łącze do pliku Pomocy skojarzonych z tym wyjątkiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-382">Gets or sets a link to the help file associated with this exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dfccc-383">Nazwa Uniform Resource URN lub adres URL (adres URL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-383">The Uniform Resource Name (URN) or Uniform Resource Locator (URL).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-384">Wartość zwracana, reprezentujący plik pomocy jest URN lub adresem URL.</span><span class="sxs-lookup"><span data-stu-id="dfccc-384">The return value, which represents a help file, is a URN or URL.</span></span> <span data-ttu-id="dfccc-385">Na przykład `HelpLink` wartość może być:</span><span class="sxs-lookup"><span data-stu-id="dfccc-385">For example, the `HelpLink` value could be:</span></span>  
  
 <span data-ttu-id="dfccc-386">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span><span class="sxs-lookup"><span data-stu-id="dfccc-386">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-387">Poniższy kod przykładowy zgłasza `Exception` stanowiąca `HelpLink` właściwości w jego konstruktora, a następnie połowy wyjątek i wyświetla `HelpLink`.</span><span class="sxs-lookup"><span data-stu-id="dfccc-387">The following code example throws an `Exception` that sets the `HelpLink` property in its constructor and then catches the exception and displays `HelpLink`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HResult">
      <MemberSignature Language="C#" Value="public int HResult { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HResult" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HResult" />
      <MemberSignature Language="VB.NET" Value="Public Property HResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:  property int HResult {  public:&#xA;int get(); protected:&#xA; void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-388">Pobiera lub ustawia HRESULT, wartość liczbową kodowane, przypisane do określonego wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-388">Gets or sets HRESULT, a coded numerical value that is assigned to a specific exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dfccc-389">Wartość HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-389">The HRESULT value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-390">HRESULT jest 32-bitową wartość podzielone na trzy różne pola: kod ważność, kod zakładzie i kod błędu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-390">HRESULT is a 32-bit value, divided into three different fields: a severity code, a facility code, and an error code.</span></span> <span data-ttu-id="dfccc-391">Kod ważność wskazuje, czy zwracana wartość reprezentuje informacje, ostrzeżenia lub błędu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-391">The severity code indicates whether the return value represents information, warning, or error.</span></span> <span data-ttu-id="dfccc-392">Kod obiektu identyfikuje obszar systemem odpowiedzialnym za błąd.</span><span class="sxs-lookup"><span data-stu-id="dfccc-392">The facility code identifies the area of the system responsible for the error.</span></span> <span data-ttu-id="dfccc-393">Kod błędu to unikatowy numer przypisany do reprezentowania wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-393">The error code is a unique number that is assigned to represent the exception.</span></span> <span data-ttu-id="dfccc-394">Każdy wyjątek jest zamapowana na różne HRESULT.</span><span class="sxs-lookup"><span data-stu-id="dfccc-394">Each exception is mapped to a distinct HRESULT.</span></span> <span data-ttu-id="dfccc-395">Gdy kod zarządzany zgłasza wyjątek, środowisko uruchomieniowe przekazuje HRESULT do klient modelu COM.</span><span class="sxs-lookup"><span data-stu-id="dfccc-395">When managed code throws an exception, the runtime passes the HRESULT to the COM client.</span></span> <span data-ttu-id="dfccc-396">Po powrocie z kodem niezarządzanym błąd HRESULT jest konwertowana na wyjątek, który następnie jest generowany przez środowisko uruchomieniowe.</span><span class="sxs-lookup"><span data-stu-id="dfccc-396">When unmanaged code returns an error, the HRESULT is converted to an exception, which is then thrown by the runtime.</span></span> <span data-ttu-id="dfccc-397">Aby uzyskać informacje o wartości HRESULT i ich odpowiednich wyjątków .NET Framework, zobacz [porady: mapy wyników HRESULT i wyjątków](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="dfccc-397">For information about HRESULT values and their corresponding .NET Framework exceptions, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span> <span data-ttu-id="dfccc-398">Zobacz [wspólne wartości HRESULT](http://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) w dokumentacji systemu Windows lista wartości jest najczęściej spotykane.</span><span class="sxs-lookup"><span data-stu-id="dfccc-398">See [Common HRESULT Values](http://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) in the Windows documentation for a list of the values you are most likely to encounter.</span></span>  
  
 <span data-ttu-id="dfccc-399">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Exception.HResult%2A> metody ustawiającej właściwości jest chroniony, jest publicznej metody pobierającej.</span><span class="sxs-lookup"><span data-stu-id="dfccc-399">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Exception.HResult%2A> property's setter is protected, whereas its getter is public.</span></span>  <span data-ttu-id="dfccc-400">W poprzednich wersjach programu .NET Framework metody pobierającej i ustawiającej są chronione.</span><span class="sxs-lookup"><span data-stu-id="dfccc-400">In previous versions of the .NET Framework, both getter and setter are protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-401">Poniższy przykładowy kod definiuje pochodnego `Exception` klasy, która ustawia `HResult` właściwości niestandardowej wartości w jego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="dfccc-401">The following code example defines a derived `Exception` class that sets the `HResult` property to a custom value in its constructor.</span></span>  
  
 [!code-cpp[System.Exception.HResult#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.HResult/CPP/hresult.cpp#1)]
 [!code-csharp[System.Exception.HResult#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.HResult/CS/hresult.cs#1)]
 [!code-vb[System.Exception.HResult#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.HResult/VB/hresult.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.InnerException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-402">Pobiera <see cref="T:System.Exception" /> wystąpienia, który spowodował bieżącego wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-402">Gets the <see cref="T:System.Exception" /> instance that caused the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dfccc-403">Obiekt, który opisuje błąd, który spowodował bieżącego wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-403">An object that describes the error that caused the current exception.</span>
          </span>
          <span data-ttu-id="dfccc-404">
            <see cref="P:System.Exception.InnerException" /> Właściwość zwraca tę samą wartość, ponieważ został przekazany <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> konstruktora, lub <see langword="null" /> Jeśli wartości wyjątku wewnętrznego nie został dostarczony do konstruktora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-404">The <see cref="P:System.Exception.InnerException" /> property returns the same value as was passed into the <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> constructor, or <see langword="null" /> if the inner exception value was not supplied to the constructor.</span>
          </span>
          <span data-ttu-id="dfccc-405">Ta właściwość jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-405">This property is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-406">Jeśli wyjątek `X` jest zgłaszany jako bezpośrednio w wyniku poprzedniego wyjątku `Y`, <xref:System.Exception.InnerException%2A> właściwość `X` powinien zawierać odwołanie do `Y`.</span><span class="sxs-lookup"><span data-stu-id="dfccc-406">When an exception `X` is thrown as a direct result of a previous exception `Y`, the <xref:System.Exception.InnerException%2A> property of `X` should contain a reference to `Y`.</span></span>  
  
 <span data-ttu-id="dfccc-407">Użyj <xref:System.Exception.InnerException%2A> właściwości, aby uzyskać zestaw wyjątki, które doprowadziły do bieżącego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-407">Use the <xref:System.Exception.InnerException%2A> property to obtain the set of exceptions that led to the current exception.</span></span>  
  
 <span data-ttu-id="dfccc-408">Możesz utworzyć nowy wyjątek, który przechwytuje wcześniej wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-408">You can create a new exception that catches an earlier exception.</span></span> <span data-ttu-id="dfccc-409">Kod obsługi można wprowadzać drugi wyjątek użyć do obsługi błędu odpowiedniej dodatkowych informacji z wcześniejszych wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-409">The code that handles the second exception can make use of the additional information from the earlier exception to handle the error more appropriately.</span></span>  
  
 <span data-ttu-id="dfccc-410">Załóżmy, że funkcja, która odczytuje plik i formatuje dane z tego pliku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-410">Suppose that there is a function that reads a file and formats the data from that file.</span></span> <span data-ttu-id="dfccc-411">W tym przykładzie, jako kod próbuje odczytać pliku <xref:System.IO.IOException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="dfccc-411">In this example, as the code tries to read the file, an <xref:System.IO.IOException> is thrown.</span></span> <span data-ttu-id="dfccc-412">Funkcja przechwytuje <xref:System.IO.IOException> i zgłasza <xref:System.IO.FileNotFoundException>.</span><span class="sxs-lookup"><span data-stu-id="dfccc-412">The function catches the <xref:System.IO.IOException> and throws a <xref:System.IO.FileNotFoundException>.</span></span> <span data-ttu-id="dfccc-413"><xref:System.IO.IOException> Mogły zostać zapisane w <xref:System.Exception.InnerException%2A> właściwość <xref:System.IO.FileNotFoundException>, włączanie kod, który przechwytuje <xref:System.IO.FileNotFoundException> zbadać przyczynę błędu początkowej.</span><span class="sxs-lookup"><span data-stu-id="dfccc-413">The <xref:System.IO.IOException> could be saved in the <xref:System.Exception.InnerException%2A> property of the <xref:System.IO.FileNotFoundException>, enabling the code that catches the <xref:System.IO.FileNotFoundException> to examine the cause of the initial error.</span></span>  
  
 <span data-ttu-id="dfccc-414"><xref:System.Exception.InnerException%2A> Ustawiono właściwość, która zawiera odwołanie do wyjątek wewnętrzny, po zainicjowaniu obiektu wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-414">The <xref:System.Exception.InnerException%2A> property, which holds a reference to the inner exception, is set upon initialization of the exception object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-415">W poniższym przykładzie pokazano zgłaszanie i przechwytywanie wyjątku, który odwołuje się do wyjątek wewnętrzny.</span><span class="sxs-lookup"><span data-stu-id="dfccc-415">The following example demonstrates throwing and catching an exception that references an inner exception.</span></span>  
  
 [!code-cpp[InnerEx#1](~/samples/snippets/cpp/VS_Snippets_CLR/InnerEx/CPP/innerex.cpp#1)]
 [!code-csharp[InnerEx#1](~/samples/snippets/csharp/VS_Snippets_CLR/InnerEx/CS/innerex.cs#1)]
 [!code-vb[InnerEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InnerEx/VB/innerex.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public virtual string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Message</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-416">Pobiera komunikat opisujący bieżący wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-416">Gets a message that describes the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dfccc-417">Komunikat o błędzie opisujący przyczynę wyjątek lub ciąg pusty ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-417">The error message that explains the reason for the exception, or an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-418">Komunikaty o błędach docelowe projektanta, który obsługuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-418">Error messages target the developer who is handling the exception.</span></span> <span data-ttu-id="dfccc-419">Tekst <xref:System.Exception.Message%2A> właściwości należy całkowicie opisu błędu i, jeśli to możliwe, należy również wyjaśniono, jak poprawić ten błąd.</span><span class="sxs-lookup"><span data-stu-id="dfccc-419">The text of the <xref:System.Exception.Message%2A> property should completely describe the error and, when possible, should also explain how to correct the error.</span></span> <span data-ttu-id="dfccc-420">Programy obsługi wyjątków najwyższego poziomu mogą być wyświetlane wiadomości dla użytkowników końcowych, dlatego należy upewnić się, czy jest gramatycznie poprawny i czy każdego zdania wiadomości kończy się kropką.</span><span class="sxs-lookup"><span data-stu-id="dfccc-420">Top-level exception handlers may display the message to end-users, so you should ensure that it is grammatically correct and that each sentence of the message ends with a period.</span></span> <span data-ttu-id="dfccc-421">Nie używaj znaków zapytania lub wykrzykniki.</span><span class="sxs-lookup"><span data-stu-id="dfccc-421">Do not use question marks or exclamation points.</span></span> <span data-ttu-id="dfccc-422">Jeśli aplikacja używa komunikaty o wyjątkach zlokalizowanego, należy upewnić się, że dokładnie translacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-422">If your application uses localized exception messages, you should ensure that they are accurately translated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dfccc-423">Nie wyjawiać poufnych informacji w komunikatach wyjątek bez sprawdzania pod kątem odpowiednich uprawnień.</span><span class="sxs-lookup"><span data-stu-id="dfccc-423">Do not disclose sensitive information in exception messages without checking for the appropriate permissions.</span></span>  
  
 <span data-ttu-id="dfccc-424">Wartość <xref:System.Exception.Message%2A> właściwość jest dołączona informacje zwracane przez <xref:System.Exception.ToString%2A>. <xref:System.Exception.Message%2A> Właściwość jest ustawiona tylko wtedy, gdy tworzenie <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="dfccc-424">The value of the <xref:System.Exception.Message%2A> property is included in the information returned by <xref:System.Exception.ToString%2A>.The <xref:System.Exception.Message%2A> property is set only when creating an <xref:System.Exception>.</span></span> <span data-ttu-id="dfccc-425">Jeśli żaden komunikat nie podano konstruktora dla bieżącego wystąpienia, system udostępnia wiadomość domyślną sformatowany przy użyciu bieżącego ustawienia kulturowego systemu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-425">If no message was supplied to the constructor for the current instance, the system supplies a default message that is formatted using the current system culture.</span></span>  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="dfccc-426">Środowisko wykonawcze systemu Windows i [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="dfccc-426">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="dfccc-427">Począwszy od [!INCLUDE[net_v451](~/includes/net-v451-md.md)] i [!INCLUDE[win81](~/includes/win81-md.md)], Lepsza dokładność komunikaty o błędach z wyjątków, które zostały przeniesione z typów środowiska wykonawczego systemu Windows i elementów członkowskich, które nie są częścią programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="dfccc-427">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the fidelity of error messages from exceptions that are propagated from Windows Runtime types and members that are not part of the .NET Framework is improved.</span></span> <span data-ttu-id="dfccc-428">W szczególności komunikaty wyjątku z rozszerzenia składników dla programu Visual C++ (C + +/ CX) są teraz propagowane do .NET Framework <xref:System.Exception> obiektów.</span><span class="sxs-lookup"><span data-stu-id="dfccc-428">In particular, exception messages from Visual C++ component extensions (C++/CX) are now propagated back into .NET Framework <xref:System.Exception> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-429">Poniższy przykład kodu zgłasza wyjątek, a następnie przechwytuje <xref:System.Exception> wyjątek i wyświetla tekst wyjątku komunikatów przy użyciu <xref:System.Exception.Message%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="dfccc-429">The following code example throws and then catches an <xref:System.Exception> exception and displays the exception's text message using the <xref:System.Exception.Message%2A> property.</span></span>
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dfccc-430">Jeśli zgłoszenie wyjątku z właściwością i trzeba odwoływać się w tekście <see cref="P:System.Exception.Message" /> do argumentu właściwość, która ustawiać ani pobierać, użyj "value" jako nazwa argumentu właściwości.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dfccc-430">If you throw an exception from a property, and you need to refer in the text of <see cref="P:System.Exception.Message" /> to the property argument that you set or get, use "value" as the name of the property argument.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dfccc-431">
              <see cref="P:System.Exception.Message" /> Właściwość nie zostanie zastąpiona klas, które wymagają kontroli nad formatu lub zawartość komunikatu.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dfccc-431">The <see cref="P:System.Exception.Message" /> property is overridden in classes that require control over message content or format.</span>
            </span>
            <span data-ttu-id="dfccc-432">Kod aplikacji zwykle uzyskuje dostęp do tej właściwości kiedy zachodzi potrzeba wyświetlać informacje na temat wyjątek został przechwycony.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dfccc-432">Application code typically accesses this property when it needs to display information about an exception that has been caught.</span>
            </span>
            <span data-ttu-id="dfccc-433">Komunikat o błędzie powinien być zlokalizowany.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dfccc-433">The error message should be localized.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SerializeObjectState">
      <MemberSignature Language="C#" Value="protected event EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState" />
      <MemberSignature Language="DocId" Value="E:System.Exception.SerializeObjectState" />
      <MemberSignature Language="VB.NET" Value="Protected Custom Event SerializeObjectState As EventHandler(Of SafeSerializationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; event EventHandler&lt;System::Runtime::Serialization::SafeSerializationEventArgs ^&gt; ^ SerializeObjectState;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-434">Występuje, gdy wyjątek jest serializowany można utworzyć obiektu stanu wyjątek, który zawiera seryjnych danych o wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-434">Occurs when an exception is serialized to create an exception state object that contains serialized data about the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-435">Obiekt stanu wyjątek implementuje <xref:System.Runtime.Serialization.ISafeSerializationData> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-435">The exception state object implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 <span data-ttu-id="dfccc-436">Gdy <xref:System.Exception.SerializeObjectState> zdarzeń jest subskrybowana w usłudze, wyjątek jest deserializacji i utworzone jako wyjątek puste.</span><span class="sxs-lookup"><span data-stu-id="dfccc-436">When the <xref:System.Exception.SerializeObjectState> event is subscribed to, the exception is deserialized and created as an empty exception.</span></span> <span data-ttu-id="dfccc-437">Konstruktor wyjątku nie jest uruchamiane, a stan wyjątku jest również deserializacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-437">The exception's constructor is not run, and the exception state is also deserialized.</span></span> <span data-ttu-id="dfccc-438"><xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> Metody wywołania zwrotnego obiektu stanu wyjątek następnie powiadomienie, aby go umieścić zdeserializowany danych do pustego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-438">The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> callback method of the exception state object is then notified so that it can push deserialized data into the empty exception.</span></span>  
  
 <span data-ttu-id="dfccc-439"><xref:System.Exception.SerializeObjectState> Zdarzeń umożliwia typów wyjątków przezroczysty do serializacji i deserializacji wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-439">The <xref:System.Exception.SerializeObjectState> event enables transparent exception types to serialize and deserialize exception data.</span></span> <span data-ttu-id="dfccc-440">Kod o przezroczystym można wykonywać polecenia w granicach zestaw uprawnień, który działa wewnątrz, ale nie może wykonać, wywołania, pochodzi z ani zawierać kodu krytycznego.</span><span class="sxs-lookup"><span data-stu-id="dfccc-440">Transparent code can execute commands within the bounds of the permission set it is operating within, but cannot execute, call, derive from, or contain critical code.</span></span>  
  
 <span data-ttu-id="dfccc-441">Jeśli <xref:System.Exception.SerializeObjectState> zdarzeń nie ma subskrypcji, deserializacji występuje w zwykły sposób za pomocą <xref:System.Exception.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="dfccc-441">If the <xref:System.Exception.SerializeObjectState> event is not subscribed to, deserialization occurs as usual using the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="dfccc-442">Zazwyczaj obsługi dla <xref:System.Exception.SerializeObjectState> zdarzeń jest dodawany w Konstruktorze wyjątek, aby zapewnić jego serializacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-442">Typically, a handler for the <xref:System.Exception.SerializeObjectState> event is added in the exception's constructor to provide for its serialization.</span></span> <span data-ttu-id="dfccc-443">Ale ponieważ konstruktora nie jest wykonywane, kiedy <xref:System.Exception.SerializeObjectState> wykonuje program obsługi zdarzeń, serializacji zdeserializowany wyjątku może zgłosić <xref:System.Runtime.Serialization.SerializationException> wyjątek podczas próby deserializacji wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-443">But because the constructor is not executed when the <xref:System.Exception.SerializeObjectState> event handler executes, serializing a deserialized exception can throw a <xref:System.Runtime.Serialization.SerializationException> exception when you try to deserialize the exception.</span></span> <span data-ttu-id="dfccc-444">Aby tego uniknąć, należy również dodać obsługę programu <xref:System.Exception.SerializeObjectState> zdarzenia w <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="dfccc-444">To avoid this, you should also add the handler for the <xref:System.Exception.SerializeObjectState> event in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="dfccc-445">W sekcji Przykłady ilustracji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-445">See the Examples section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-446">W poniższym przykładzie zdefiniowano `BadDivisionException` obsługująca <xref:System.Exception.SerializeObjectState> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dfccc-446">The following example defines a `BadDivisionException` that handles the <xref:System.Exception.SerializeObjectState> event.</span></span> <span data-ttu-id="dfccc-447">Zawiera także obiektu stanu, który jest zagnieżdżoną struktury o nazwie `BadDivisionExceptionState` implementującej <xref:System.Runtime.Serialization.ISafeSerializationData> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-447">It also contains a state object, which is a nested structure named `BadDivisionExceptionState` that implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 [!code-csharp[System.Exception.SerializeObjectState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.serializeobjectstate/cs/example2.cs#1)]
 [!code-vb[System.Exception.SerializeObjectState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.serializeobjectstate/vb/example2.vb#1)]  
  
 <span data-ttu-id="dfccc-448">`BadDivisionException` Wyjątek po wystąpieniu Zmiennoprzecinkowe dzielenie przez zero.</span><span class="sxs-lookup"><span data-stu-id="dfccc-448">The `BadDivisionException` exception is thrown when a floating-point division by zero occurs.</span></span> <span data-ttu-id="dfccc-449">Podczas pierwszego dzielenie przez zero, tworzy przykładzie `BadDivisionException` obiekt, jego serializuje i zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-449">During the first division by zero, the example instantiates a `BadDivisionException` object, serializes it, and throws the exception.</span></span> <span data-ttu-id="dfccc-450">Gdy występują kolejnych podziałów przez zero, przykładzie deserializuje wcześniej Zserializowany obiekt, reserializes go i zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-450">When subsequent divisions by zero occur, the example deserializes the  previously serialized object, reserializes it, and throws the exception.</span></span> <span data-ttu-id="dfccc-451">Aby zapewnić serializacji obiektu, deserializacji reserialization i deserializacji, w przykładzie dodano <xref:System.Exception.SerializeObjectState> obsługi zdarzeń zarówno w `BadDivisionException` konstruktora klasy i w <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-451">To provide for object serialization, deserialization, reserialization, and deserialization, the example adds the <xref:System.Exception.SerializeObjectState> event handler both in the `BadDivisionException` class constructor and in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dfccc-452">Jeśli to zdarzenie jest subskrybowana i używany, wszystkie typy pochodne, które należy wykonać w hierarchii dziedziczenia musi implementować ten sam mechanizm serializacji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dfccc-452">If this event is subscribed to and used, all derived types that follow in the inheritance hierarchy must implement the same serialization mechanism.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public virtual string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-453">Pobiera lub ustawia nazwę aplikacji lub obiekt, który powoduje błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-453">Gets or sets the name of the application or the object that causes the error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dfccc-454">Nazwa aplikacji lub obiekt, który powoduje błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-454">The name of the application or the object that causes the error.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-455">Jeśli <xref:System.Exception.Source%2A> właściwość nie jest jawnie ustawiona, środowisko uruchomieniowe automatycznie ustawia ją na nazwę zestawu, w którym wyjątek pochodzi.</span><span class="sxs-lookup"><span data-stu-id="dfccc-455">If the <xref:System.Exception.Source%2A> property is not set explicitly, the runtime automatically sets it to the name of the assembly in which the exception originated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-456">Poniższy przykład zwraca `Exception` stanowiąca `Source` właściwości w jego konstruktora, a następnie połowy wyjątek i wyświetla `Source`.</span><span class="sxs-lookup"><span data-stu-id="dfccc-456">The following example throws an `Exception` that sets the `Source` property in its constructor and then catches the exception and displays `Source`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dfccc-457">Obiekt musi być środowisko uruchomieniowe <see cref="N:System.Reflection" /> obiektu</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-457">The object must be a runtime <see cref="N:System.Reflection" /> object</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public virtual string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.StackTrace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-458">Pobiera reprezentację ciągu natychmiastowego ramek na stosie wywołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-458">Gets a string representation of the immediate frames on the call stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dfccc-459">Ciąg opisujący natychmiastowego ramki stosu wywołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-459">A string that describes the immediate frames of the call stack.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-460">Stos wykonywania przechowuje informacje o wszystkie metody, które są w danej chwili podczas wykonywania.</span><span class="sxs-lookup"><span data-stu-id="dfccc-460">The execution stack keeps track of all the methods that are in execution at a given instant.</span></span> <span data-ttu-id="dfccc-461">Śledzenia wywołań metoda jest wywoływana ślad stosu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-461">A trace of the method calls is called a stack trace.</span></span> <span data-ttu-id="dfccc-462">Lista śledzenia stosu umożliwia wykonaj stosu wywołań do numeru wiersza w metodzie, gdzie występuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-462">The stack trace listing provides a way to follow the call stack to the line number in the method where the exception occurs.</span></span>  
  
 <span data-ttu-id="dfccc-463"><xref:System.Exception.StackTrace%2A> Właściwość zwraca ramki stosu wywołań, które pochodzi z lokalizacji, w której wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-463">The <xref:System.Exception.StackTrace%2A> property returns the frames of the call stack that originate at the location where the exception was thrown.</span></span> <span data-ttu-id="dfccc-464">Informacje na temat dodatkowych ramek na stosie wywołań można uzyskać, tworząc nowe wystąpienie klasy <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> klasy i przy użyciu jego <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="dfccc-464">You can obtain information about additional frames in the call stack by creating a new instance of the <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> class and using its <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="dfccc-465">Środowisko uruchomieniowe języka wspólnego (CLR) aktualizuje ślad stosu zawsze, gdy wyjątek w kodzie aplikacji (przy użyciu `throw` — słowo kluczowe).</span><span class="sxs-lookup"><span data-stu-id="dfccc-465">The common language runtime (CLR) updates the stack trace whenever an exception is thrown in application code (by using the `throw` keyword).</span></span> <span data-ttu-id="dfccc-466">Jeśli wyjątek został zgłoszony w metodzie, który jest inny niż metody, gdzie został początkowo zgłoszony, ślad stosu zawiera zarówno w metodzie w lokalizacji, w którym pierwotnie został zgłoszony wyjątek, jak i w metodzie w lokalizacji, w którym wyjątek zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="dfccc-466">If the exception was rethrown in a method that is different than the method where it was originally thrown, the stack trace contains both the location in the method where the exception was originally thrown, and the location in the method where the exception was rethrown.</span></span> <span data-ttu-id="dfccc-467">Jeśli zgłoszony wyjątek i później zgłoszony w tej samej metody, ślad stosu zawiera tylko lokalizacji, w którym wyjątek został zgłoszony i nie ma lokalizacji, w którym pierwotnie został zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dfccc-467">If the exception is thrown, and later rethrown, in the same method, the stack trace only contains the location where the exception was rethrown and does not include the location where the exception was originally thrown.</span></span>  
  
 <span data-ttu-id="dfccc-468"><xref:System.Exception.StackTrace%2A> Właściwości nie może zgłaszać dowolną liczbę wywołań metody zgodnie z oczekiwaniami ze względu na kod przekształcenia, takie jak ze śródwierszowaniem, która występuje podczas optymalizacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-468">The <xref:System.Exception.StackTrace%2A> property may not report as many method calls as expected because of code transformations, such as inlining, that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-469">Poniższy kod przykładowy zgłasza `Exception` przechwytuje go i wyświetla śledzenia stosu przy użyciu `StackTrace` właściwości.</span><span class="sxs-lookup"><span data-stu-id="dfccc-469">The following code example throws an `Exception` and then catches it and displays a stack trace using the `StackTrace` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dfccc-470">
              <see langword="StackTrace" /> Właściwość nie zostanie zastąpiona klas, które wymagają kontroli nad zawartości śledzenia stosu lub format.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dfccc-470">The <see langword="StackTrace" /> property is overridden in classes that require control over the stack trace content or format.</span>
            </span>
            <span data-ttu-id="dfccc-471">Domyślnie ślad stosu jest przechwytywany natychmiast, zanim zostanie zgłoszony wyjątek obiektu.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dfccc-471">By default, the stack trace is captured immediately before an exception object is thrown.</span>
            </span>
            <span data-ttu-id="dfccc-472">Użyj <see cref="P:System.Environment.StackTrace" /> Aby uzyskać informacje śledzenia stosu, gdy żaden wyjątek został zgłoszony.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dfccc-472">Use <see cref="P:System.Environment.StackTrace" /> to get stack trace information when no exception is being thrown.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Environment.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.TargetSite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-473">Pobiera metodę bieżący wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-473">Gets the method that throws the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dfccc-474">
            <see cref="T:System.Reflection.MethodBase" /> Który zwrócił bieżącego wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-474">The <see cref="T:System.Reflection.MethodBase" /> that threw the current exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-475">Jeśli metoda, która zgłasza wyjątek nie jest dostępny i śledzenie stosu nie jest odwołanie o wartości null (`Nothing` w języku Visual Basic), <xref:System.Exception.TargetSite%2A> uzyskuje dostęp do metody z ślad stosu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-475">If the method that throws this exception is not available and the stack trace is not a null reference (`Nothing` in Visual Basic), <xref:System.Exception.TargetSite%2A> obtains the method from the stack trace.</span></span> <span data-ttu-id="dfccc-476">Jeśli ślad stosu jest odwołanie o wartości null, <xref:System.Exception.TargetSite%2A> również zwraca odwołanie o wartości null.</span><span class="sxs-lookup"><span data-stu-id="dfccc-476">If the stack trace is a null reference, <xref:System.Exception.TargetSite%2A> also returns a null reference.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dfccc-477"><xref:System.Exception.TargetSite%2A> Właściwości nie może zgłaszać dokładnie nazwę metody, w którym został zgłoszony wyjątek, jeśli program obsługi wyjątku obsługuje wyjątek poza granice domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="dfccc-477">The <xref:System.Exception.TargetSite%2A> property may not accurately report the name of the method in which an exception was thrown if the exception handler handles an exception across application domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-478">Poniższy kod przykładowy zgłasza `Exception` przechwytuje go i wyświetla źródłowego przy użyciu metody `TargetSite` właściwości.</span><span class="sxs-lookup"><span data-stu-id="dfccc-478">The following code example throws an `Exception` and then catches it and displays the originating method using the `TargetSite` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dfccc-479">Tworzy i zwraca reprezentację ciągu bieżącego wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-479">Creates and returns a string representation of the current exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dfccc-480">Reprezentacja ciągu bieżącego wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfccc-480">A string representation of the current exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfccc-481"><xref:System.Exception.ToString%2A> Zwraca reprezentację bieżący wyjątek, który ma być rozpoznawany przez człowieka.</span><span class="sxs-lookup"><span data-stu-id="dfccc-481"><xref:System.Exception.ToString%2A> returns a representation of the current exception that is intended to be understood by humans.</span></span> <span data-ttu-id="dfccc-482">W przypadku, gdy wyjątek zawiera dane zależne od kultury, reprezentacja ciągu zwrócony przez `ToString` należy wziąć pod uwagę bieżące ustawienia kulturowe systemu.</span><span class="sxs-lookup"><span data-stu-id="dfccc-482">Where the exception contains culture-sensitive data, the string representation returned by `ToString` is required to take into account the current system culture.</span></span> <span data-ttu-id="dfccc-483">Mimo że nie istnieją dokładne wymagania formatu ciągu zwróconego, należy próbować odzwierciedlają wartość obiektu jako postrzegana przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="dfccc-483">Although there are no exact requirements for the format of the returned string, it should attempt to reflect the value of the object as perceived by the user.</span></span>  
  
 <span data-ttu-id="dfccc-484">Domyślna implementacja <xref:System.Exception.ToString%2A> uzyskuje nazwę klasy, która zgłosiła bieżącego wyjątku, komunikat, w wyniku wywołania metody <xref:System.Exception.ToString%2A> na wyjątek wewnętrzny, a w wyniku wywołania metody <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfccc-484">The default implementation of <xref:System.Exception.ToString%2A> obtains the name of the class that threw the current exception, the message, the result of calling <xref:System.Exception.ToString%2A> on the inner exception, and the result of calling <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dfccc-485">Jeśli dowolny z tych elementów członkowskich jest `null`, jego wartość nie jest uwzględniona w zwracany ciąg.</span><span class="sxs-lookup"><span data-stu-id="dfccc-485">If any of these members is `null`, its value is not included in the returned string.</span></span>  
  
 <span data-ttu-id="dfccc-486">Jeśli nie ma błędów lub jest pustym ciągiem (""), zwracana jest żaden komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="dfccc-486">If there is no error message or if it is an empty string (""), then no error message is returned.</span></span> <span data-ttu-id="dfccc-487">Nazwa wyjątek wewnętrzny i ślad stosu są zwracane tylko wtedy, gdy nie są one `null`.</span><span class="sxs-lookup"><span data-stu-id="dfccc-487">The name of the inner exception and the stack trace are returned only if they are not `null`.</span></span>  
  
 <span data-ttu-id="dfccc-488">Ta metoda zastępuje <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfccc-488">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfccc-489">Poniższy przykład powoduje zgłoszenie wyjątku i wyświetla wyniku wywołania metody <xref:System.Exception.ToString%2A> na tym wyjątku.</span><span class="sxs-lookup"><span data-stu-id="dfccc-489">The following example causes an exception and displays the result of calling <xref:System.Exception.ToString%2A> on that exception.</span></span> <span data-ttu-id="dfccc-490">Należy pamiętać, że <xref:System.Exception.ToString%2A?displayProperty=nameWithType> metoda jest wywoływana niejawnie, gdy wystąpienie klasy wyjątku pojawi się na liście argumentów <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="dfccc-490">Note that the <xref:System.Exception.ToString%2A?displayProperty=nameWithType> method is called implicitly when the Exception class instance appears in the argument list of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Exception.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.exception.tostring/cpp/ToStringEx1.cpp#1)]
 [!code-csharp[System.Exception.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.tostring/cs/ToStringEx1.cs#1)]
 [!code-vb[System.Exception.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.tostring/vb/ToStringEx1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>