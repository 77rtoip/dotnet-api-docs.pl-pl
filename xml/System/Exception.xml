<Type Name="Exception" FullName="System.Exception">
  <Metadata><Meta Name="ms.openlocfilehash" Value="982c48cb4df4baf1eb52eafe07c62c028e3863a6" /><Meta Name="ms.sourcegitcommit" Value="5c332e8417c001736f7e2f33a84791feebba2cd7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/30/2019" /><Meta Name="ms.locfileid" Value="68632591" /></Metadata><TypeSignature Language="C#" Value="public class Exception : System.Runtime.InteropServices._Exception, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit Exception extends System.Object implements class System.Runtime.InteropServices._Exception, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Exception" />
  <TypeSignature Language="VB.NET" Value="Public Class Exception&#xA;Implements _Exception, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Exception : System::Runtime::InteropServices::_Exception, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Exception = class&#xA;    interface ISerializable&#xA;    interface _Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Exception</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Exception))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ecb92-101">Reprezentuje błędy występujące podczas wykonywania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-101">Represents errors that occur during application execution.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-102">Ta klasa jest klasą bazową dla wszystkich wyjątków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-102">This class is the base class for all exceptions.</span></span> <span data-ttu-id="ecb92-103">Gdy wystąpi błąd, system lub aktualnie wykonywana aplikacja zgłosi go, zgłaszając wyjątek zawierający informacje o błędzie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-103">When an error occurs, either the system or the currently executing application reports it by throwing an exception that contains information about the error.</span></span> <span data-ttu-id="ecb92-104">Gdy wyjątek jest zgłaszany, jest obsługiwany przez aplikację lub przez domyślną procedurę obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-104">After an exception is thrown, it is handled by the application or by the default exception handler.</span></span>  
  
 <span data-ttu-id="ecb92-105">W tej sekcji:</span><span class="sxs-lookup"><span data-stu-id="ecb92-105">In this section:</span></span>  
  
 <span data-ttu-id="ecb92-106">[Błędy i wyjątki](#Errors) </span><span class="sxs-lookup"><span data-stu-id="ecb92-106">[Errors and exceptions](#Errors) </span></span>  
 <span data-ttu-id="ecb92-107">[Bloki try/catch](#TryCatch) </span><span class="sxs-lookup"><span data-stu-id="ecb92-107">[Try/catch blocks](#TryCatch) </span></span>  
 <span data-ttu-id="ecb92-108">[Funkcje typu wyjątku](#Features) </span><span class="sxs-lookup"><span data-stu-id="ecb92-108">[Exception type features](#Features) </span></span>  
 <span data-ttu-id="ecb92-109">[Właściwości klasy wyjątku](#Properties) </span><span class="sxs-lookup"><span data-stu-id="ecb92-109">[Exception class properties](#Properties) </span></span>  
 <span data-ttu-id="ecb92-110">[Zagadnienia dotyczące wydajności](#Performance) </span><span class="sxs-lookup"><span data-stu-id="ecb92-110">[Performance considerations](#Performance) </span></span>  
 <span data-ttu-id="ecb92-111">[Ponowne zgłaszanie wyjątku](#Rethrow) </span><span class="sxs-lookup"><span data-stu-id="ecb92-111">[Re-throwing an exception](#Rethrow) </span></span>  
 <span data-ttu-id="ecb92-112">[Wybieranie standardowych wyjątków](#Standard) </span><span class="sxs-lookup"><span data-stu-id="ecb92-112">[Choosing standard exceptions](#Standard) </span></span>  
 [<span data-ttu-id="ecb92-113">Implementowanie wyjątków niestandardowych</span><span class="sxs-lookup"><span data-stu-id="ecb92-113">Implementing custom exceptions</span></span>](#Custom)  
  
<a name="Errors"></a>   
## <a name="errors-and-exceptions"></a><span data-ttu-id="ecb92-114">Błędy i wyjątki</span><span class="sxs-lookup"><span data-stu-id="ecb92-114">Errors and exceptions</span></span>  
 <span data-ttu-id="ecb92-115">Błędy w czasie wykonywania mogą wystąpić z różnych powodów.</span><span class="sxs-lookup"><span data-stu-id="ecb92-115">Run-time errors can occur for a variety of reasons.</span></span> <span data-ttu-id="ecb92-116">Nie wszystkie błędy powinny jednak być obsługiwane jako wyjątki w kodzie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-116">However, not all errors should be handled as exceptions in your code.</span></span> <span data-ttu-id="ecb92-117">Poniżej wymieniono niektóre kategorie błędów, które mogą wystąpić w czasie wykonywania, oraz odpowiednie sposoby reagowania na nie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-117">Here are some categories of errors that can occur at run time and the appropriate ways to respond to them.</span></span>  
  
-   <span data-ttu-id="ecb92-118">**Błędy użycia.**</span><span class="sxs-lookup"><span data-stu-id="ecb92-118">**Usage errors.**</span></span> <span data-ttu-id="ecb92-119">Błąd użycia reprezentuje błąd w logice programu, który może spowodować wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-119">A usage error represents an error in program logic that can result in an exception.</span></span> <span data-ttu-id="ecb92-120">Jednak błąd powinien zostać rozkierowany do obsługi wyjątków, ale przez modyfikację błędnego kodu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-120">However, the error should be addressed not through exception handling but by modifying the faulty code.</span></span> <span data-ttu-id="ecb92-121">Na przykład przesłonięcie <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> metody w poniższym przykładzie zakłada `obj` , że argument musi być zawsze inny niż null.</span><span class="sxs-lookup"><span data-stu-id="ecb92-121">For example, the override of the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method in the following example assumes that the `obj` argument must always be non-null.</span></span>  
  
     [!code-csharp[System.Exception.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors1.cs#4)]
     [!code-vb[System.Exception.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors1.vb#4)]  
  
     <span data-ttu-id="ecb92-122">Wyjątek, który `obj` powoduje <xref:System.Object.Equals%2A?displayProperty=nameWithType> , że można wyeliminować, modyfikując kod źródłowy do jawnego testowania dla wartości null przed wywołaniem zastąpienia, a następnie ponownie skompilować. `null` <xref:System.NullReferenceException></span><span class="sxs-lookup"><span data-stu-id="ecb92-122">The <xref:System.NullReferenceException> exception that results when `obj` is `null` can be eliminated by modifying the source code to explicitly test for null before calling the <xref:System.Object.Equals%2A?displayProperty=nameWithType> override and then re-compiling.</span></span> <span data-ttu-id="ecb92-123">Poniższy przykład zawiera poprawiony kod źródłowy, który obsługuje `null` argument.</span><span class="sxs-lookup"><span data-stu-id="ecb92-123">The following example contains the corrected source code that handles a `null` argument.</span></span>  
  
     [!code-csharp[System.Exception.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors2.cs#5)]
     [!code-vb[System.Exception.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors2.vb#5)]  
  
     <span data-ttu-id="ecb92-124">Zamiast korzystać z obsługi wyjątków w przypadku błędów użycia, można użyć <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metody do identyfikowania błędów użycia w kompilacjach debugowania, a także <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metody identyfikowania błędów użycia w kompilacjach i wersjach.</span><span class="sxs-lookup"><span data-stu-id="ecb92-124">Instead of using exception handling for usage errors, you can use the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method to identify usage errors in debug builds, and the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method to identify usage errors in both debug and release builds.</span></span> <span data-ttu-id="ecb92-125">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kodzie zarządzanym](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="ecb92-125">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
-   <span data-ttu-id="ecb92-126">**Błędy programu.**</span><span class="sxs-lookup"><span data-stu-id="ecb92-126">**Program errors.**</span></span> <span data-ttu-id="ecb92-127">Błąd programu to błąd czasu wykonywania, którego nie można koniecznie uniknąć, pisząc kod bez błędów.</span><span class="sxs-lookup"><span data-stu-id="ecb92-127">A program error is a run-time error that cannot necessarily be avoided by writing bug-free code.</span></span>  
  
     <span data-ttu-id="ecb92-128">W niektórych przypadkach błąd programu może odzwierciedlać oczekiwany lub rutynowy warunek błędu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-128">In some cases, a program error may reflect an expected or routine error condition.</span></span> <span data-ttu-id="ecb92-129">W takim przypadku można uniknąć korzystania z obsługi wyjątków w celu postępowania z błędem programu, a zamiast tego ponownie wykonać operację.</span><span class="sxs-lookup"><span data-stu-id="ecb92-129">In this case, you may want to avoid using exception handling to deal with the program error and instead retry the operation.</span></span> <span data-ttu-id="ecb92-130">Na przykład, jeśli użytkownik chce wprowadzić datę w określonym formacie, można przeanalizować ciąg daty przez wywołanie <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> metody, która <xref:System.Boolean> zwraca wartość wskazującą, czy operacja analizy zakończyła się powodzeniem, zamiast używać <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>Metoda, która zgłasza <xref:System.FormatException> wyjątek, jeśli nie można <xref:System.DateTime> przekonwertować ciągu daty na wartość.</span><span class="sxs-lookup"><span data-stu-id="ecb92-130">For example, if the user is expected to input a date in a particular format, you can parse the date string by calling the <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method, which returns a <xref:System.Boolean> value that indicates whether the parse operation succeeded, instead of using the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method, which throws a <xref:System.FormatException> exception if the date string cannot be converted to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="ecb92-131">Podobnie, jeśli użytkownik próbuje otworzyć plik, który nie istnieje, można najpierw wywołać <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> metodę, aby sprawdzić, czy plik istnieje i, jeśli nie, monitować użytkownika, czy chce go utworzyć.</span><span class="sxs-lookup"><span data-stu-id="ecb92-131">Similarly, if a user tries to open a file that does not exist, you can first call the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method to check whether the file exists and, if it does not, prompt the user whether he or she wants to create it.</span></span>  
  
     <span data-ttu-id="ecb92-132">W innych przypadkach błąd programu odzwierciedla Nieoczekiwany warunek błędu, który można obsłużyć w kodzie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-132">In other cases, a program error reflects an unexpected error condition that can be handled in your code.</span></span> <span data-ttu-id="ecb92-133">Na przykład, nawet jeśli sprawdzono, że plik istnieje, można go usunąć, aby można było go otworzyć, lub może być uszkodzony.</span><span class="sxs-lookup"><span data-stu-id="ecb92-133">For example, even if you've checked to ensure that a file exists, it may be deleted before you can open it, or it may be corrupted.</span></span> <span data-ttu-id="ecb92-134">W takim przypadku próba otwarcia pliku przez utworzenie wystąpienia <xref:System.IO.StreamReader> obiektu lub <xref:System.IO.File.Open%2A> wywołanie metody może zgłosić <xref:System.IO.FileNotFoundException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-134">In that case, trying to open the file by instantiating a <xref:System.IO.StreamReader> object or calling the <xref:System.IO.File.Open%2A> method may throw a <xref:System.IO.FileNotFoundException> exception.</span></span> <span data-ttu-id="ecb92-135">W takich przypadkach należy użyć obsługi wyjątków, aby odzyskać sprawność po błędzie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-135">In these cases, you should use exception handling to recover from the error.</span></span>  
  
-   <span data-ttu-id="ecb92-136">**Awarie systemu.**</span><span class="sxs-lookup"><span data-stu-id="ecb92-136">**System failures.**</span></span> <span data-ttu-id="ecb92-137">Awaria systemu to błąd czasu wykonywania, którego nie można programowo obsługiwać w zrozumiały sposób.</span><span class="sxs-lookup"><span data-stu-id="ecb92-137">A system failure is a run-time error that cannot be handled programmatically in a meaningful way.</span></span> <span data-ttu-id="ecb92-138">Na przykład każda metoda może zgłosić <xref:System.OutOfMemoryException> wyjątek, jeśli środowisko uruchomieniowe języka wspólnego nie może przydzielić dodatkowej pamięci.</span><span class="sxs-lookup"><span data-stu-id="ecb92-138">For example, any method can throw an <xref:System.OutOfMemoryException> exception if the common language runtime is unable to allocate additional memory.</span></span> <span data-ttu-id="ecb92-139">Zwykle błędy systemu nie są obsługiwane przy użyciu obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-139">Ordinarily, system failures are not handled by using exception handling.</span></span> <span data-ttu-id="ecb92-140">Zamiast tego można użyć zdarzenia, takiego jak <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> i <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> wywołać metodę, aby zarejestrować informacje o wyjątku i powiadomić użytkownika o awarii przed zakończeniem działania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-140">Instead, you may be able to use an event such as <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> and call the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to log exception information and notify the user of the failure before the application terminates.</span></span>  
  
<a name="TryCatch"></a>   
## <a name="trycatch-blocks"></a><span data-ttu-id="ecb92-141">Bloki try/catch</span><span class="sxs-lookup"><span data-stu-id="ecb92-141">Try/catch blocks</span></span>  
 <span data-ttu-id="ecb92-142">Środowisko uruchomieniowe języka wspólnego udostępnia model obsługi wyjątków, który jest oparty na reprezentacji wyjątków jako obiektów i oddziela kod programu i kod obsługi wyjątków do `try` bloków i `catch` bloków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-142">The common language runtime provides an exception handling model that is based on the representation of exceptions as objects, and the separation of program code and exception handling code into `try` blocks and `catch` blocks.</span></span> <span data-ttu-id="ecb92-143">Może istnieć jeden lub więcej `catch` bloków, z których każdy jest przeznaczony do obsługi określonego typu wyjątku lub jeden blok zaprojektowany w celu przechwycenia bardziej szczegółowego wyjątku niż inny blok.</span><span class="sxs-lookup"><span data-stu-id="ecb92-143">There can be one or more `catch` blocks, each designed to handle a particular type of exception, or one block designed to catch a more specific exception than another block.</span></span>  
  
 <span data-ttu-id="ecb92-144">Jeśli aplikacja obsługuje wyjątki, które występują podczas wykonywania bloku kodu aplikacji, kod musi być umieszczony wewnątrz `try` instrukcji i nosi `try` nazwę bloku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-144">If an application handles exceptions that occur during the execution of a block of application code, the code must be placed within a `try` statement and is called a `try` block.</span></span> <span data-ttu-id="ecb92-145">Kod aplikacji obsługujący wyjątki zgłoszone przez `try` blok jest umieszczany `catch` w `catch` instrukcji i jest nazywany blokiem.</span><span class="sxs-lookup"><span data-stu-id="ecb92-145">Application code that handles exceptions thrown by a `try` block is placed within a `catch` statement and is called a `catch` block.</span></span> <span data-ttu-id="ecb92-146">Co najmniej `catch` zero bloków jest skojarzonych `try` z blokiem, a każdy `catch` blok zawiera filtr typu, który określa typy wyjątków, które obsługuje.</span><span class="sxs-lookup"><span data-stu-id="ecb92-146">Zero or more `catch` blocks are associated with a `try` block, and each `catch` block includes a type filter that determines the types of exceptions it handles.</span></span>  
  
 <span data-ttu-id="ecb92-147">Gdy w `try` bloku występuje wyjątek, system przeszukuje skojarzone `catch` bloki w kolejności, w jakiej występują w kodzie aplikacji, `catch` dopóki nie zostanie znaleziony blok obsługujący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-147">When an exception occurs in a `try` block, the system searches the associated `catch` blocks in the order they appear in application code, until it locates a `catch` block that handles the exception.</span></span> <span data-ttu-id="ecb92-148">Blok obsługuje wyjątek typu `T` , jeśli filtr typu bloku catch `T` określa `T` lub dowolny typ pochodzący z. `catch`</span><span class="sxs-lookup"><span data-stu-id="ecb92-148">A `catch` block handles an exception of type `T` if the type filter of the catch block specifies `T` or any type that `T` derives from.</span></span> <span data-ttu-id="ecb92-149">System przestaje wyszukiwać po znalezieniu pierwszego `catch` bloku, który obsługuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-149">The system stops searching after it finds the first `catch` block that handles the exception.</span></span> <span data-ttu-id="ecb92-150">Z tego powodu w kodzie `catch` aplikacji blok obsługujący typ musi być określony `catch` przed blokiem, który obsługuje jego typy podstawowe, jak pokazano w przykładzie opisanym w tej sekcji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-150">For this reason, in application code, a `catch` block that handles a type must be specified before a `catch` block that handles its base types, as demonstrated in the example that follows this section.</span></span> <span data-ttu-id="ecb92-151">Blok catch, który obsługuje `System.Exception` , jest określany jako ostatni.</span><span class="sxs-lookup"><span data-stu-id="ecb92-151">A catch block that handles `System.Exception` is specified last.</span></span>  
  
 <span data-ttu-id="ecb92-152">Jeśli `catch` żaden z bloków skojarzonych z bieżącym `try` `try` blokiem nie obsługuje wyjątku, a bieżący blok jest zagnieżdżony w `catch` innych `try` blokach w bieżącym wywołaniu, bloki skojarzone z następnym przeszukiwany jest otaczający blok. `try`</span><span class="sxs-lookup"><span data-stu-id="ecb92-152">If none of the `catch` blocks associated with the current `try` block handle the exception, and the current `try` block is nested within other `try` blocks in the current call, the `catch` blocks associated with the next enclosing `try` block are searched.</span></span> <span data-ttu-id="ecb92-153">Jeśli nie `catch` zostanie znaleziony żaden blok dla wyjątku, system przeszuka poprzednie poziomy zagnieżdżenia w bieżącym wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-153">If no `catch` block for the exception is found, the system searches previous nesting levels in the current call.</span></span> <span data-ttu-id="ecb92-154">Jeśli żaden `catch` blok dla wyjątku nie zostanie znaleziony w bieżącym wywołaniu, zostanie przeszukany stos wywołań, a w poprzedniej klatce stosu jest wyszukiwany `catch` blok obsługujący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-154">If no `catch` block for the exception is found in the current call, the exception is passed up the call stack, and the previous stack frame is searched for a `catch` block that handles the exception.</span></span> <span data-ttu-id="ecb92-155">Wyszukiwanie stosu wywołań jest kontynuowane do momentu obsługi wyjątku lub do momentu, gdy w stosie wywołań nie ma więcej ramek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-155">The search of the call stack continues until the exception is handled or until no more frames exist on the call stack.</span></span> <span data-ttu-id="ecb92-156">Jeśli Góra stosu wywołań zostanie osiągnięta bez znajdowania `catch` bloku, który obsługuje wyjątek, zostanie ona prześwietlona przez domyślny program obsługi wyjątków, a aplikacja zostanie przerwana.</span><span class="sxs-lookup"><span data-stu-id="ecb92-156">If the top of the call stack is reached without finding a `catch` block that handles the exception, the default exception handler handles it and the application terminates.</span></span>  
  
<a name="Features"></a>   
## <a name="exception-type-features"></a><span data-ttu-id="ecb92-157">Funkcje typu wyjątku</span><span class="sxs-lookup"><span data-stu-id="ecb92-157">Exception type features</span></span>  
 <span data-ttu-id="ecb92-158">Typy wyjątków obsługują następujące funkcje:</span><span class="sxs-lookup"><span data-stu-id="ecb92-158">Exception types support the following features:</span></span>  
  
-   <span data-ttu-id="ecb92-159">Czytelny dla człowieka tekst opisujący błąd.</span><span class="sxs-lookup"><span data-stu-id="ecb92-159">Human-readable text that describes the error.</span></span> <span data-ttu-id="ecb92-160">Gdy wystąpi wyjątek, środowisko uruchomieniowe udostępnia wiadomość tekstową, aby poinformować użytkownika o charakterze błędu i zasugerować akcję w celu rozwiązania problemu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-160">When an exception occurs, the runtime makes a text message available to inform the user of the nature of the error and to suggest action to resolve the problem.</span></span> <span data-ttu-id="ecb92-161">Ten komunikat tekstowy jest przechowywany we <xref:System.Exception.Message%2A> właściwości obiektu wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-161">This text message is held in the <xref:System.Exception.Message%2A> property of the exception object.</span></span> <span data-ttu-id="ecb92-162">Podczas tworzenia obiektu wyjątku można przekazać ciąg tekstowy do konstruktora, aby opisać szczegóły tego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-162">During the creation of the exception object, you can pass a text string to the constructor to describe the details of that particular exception.</span></span> <span data-ttu-id="ecb92-163">Jeśli do konstruktora nie zostanie dostarczony argument komunikatu o błędzie, zostanie użyty domyślny komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-163">If no error message argument is supplied to the constructor, the default error message is used.</span></span> <span data-ttu-id="ecb92-164">Aby uzyskać więcej informacji, zobacz <xref:System.Exception.Message%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="ecb92-164">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="ecb92-165">Stan stosu wywołań, gdy wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-165">The state of the call stack when the exception was thrown.</span></span> <span data-ttu-id="ecb92-166"><xref:System.Exception.StackTrace%2A> Właściwość przenosi ślad stosu, którego można użyć do określenia miejsca wystąpienia błędu w kodzie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-166">The <xref:System.Exception.StackTrace%2A> property carries a stack trace that can be used to determine where the error occurs in the code.</span></span> <span data-ttu-id="ecb92-167">Ślad stosu wyświetla wszystkie wywoływane metody i numery wierszy w pliku źródłowym, w którym są wykonywane wywołania.</span><span class="sxs-lookup"><span data-stu-id="ecb92-167">The stack trace lists all the called methods and the line numbers in the source file where the calls are made.</span></span>  
  
<a name="Properties"></a>   
## <a name="exception-class-properties"></a><span data-ttu-id="ecb92-168">Właściwości klasy wyjątku</span><span class="sxs-lookup"><span data-stu-id="ecb92-168">Exception class properties</span></span>  
 <span data-ttu-id="ecb92-169"><xref:System.Exception.Message%2A> <xref:System.Exception.Source%2A> <xref:System.Exception.HResult%2A> <xref:System.Exception.StackTrace%2A> <xref:System.Exception.HelpLink%2A> <xref:System.Exception.InnerException%2A>Klasa zawiera wiele właściwości, które ułatwiają identyfikację lokalizacji kodu, typu, pliku pomocy i przyczyny wyjątku:,,,,,, <xref:System.Exception> <xref:System.Exception.TargetSite%2A>i .<xref:System.Exception.Data%2A></span><span class="sxs-lookup"><span data-stu-id="ecb92-169">The <xref:System.Exception> class includes a number of properties that help identify the code location, the type, the help file, and the reason for the exception: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, and <xref:System.Exception.Data%2A>.</span></span>  
  
 <span data-ttu-id="ecb92-170">Gdy istnieje związek przyczynowy między dwoma lub więcej wyjątkami, <xref:System.Exception.InnerException%2A> Właściwość utrzymuje te informacje.</span><span class="sxs-lookup"><span data-stu-id="ecb92-170">When a causal relationship exists between two or more exceptions, the <xref:System.Exception.InnerException%2A> property maintains this information.</span></span> <span data-ttu-id="ecb92-171">Wyjątek zewnętrzny jest zgłaszany w odpowiedzi na ten wyjątek wewnętrzny.</span><span class="sxs-lookup"><span data-stu-id="ecb92-171">The outer exception is thrown in response to this inner exception.</span></span> <span data-ttu-id="ecb92-172">Kod, który obsługuje wyjątek zewnętrzny, może użyć informacji z wcześniejszego wyjątku wewnętrznego, aby bardziej odpowiednio obsłużyć błąd.</span><span class="sxs-lookup"><span data-stu-id="ecb92-172">The code that handles the outer exception can use the information from the earlier inner exception to handle the error more appropriately.</span></span> <span data-ttu-id="ecb92-173">Dodatkowe informacje o wyjątku mogą być przechowywane jako kolekcja par klucz/wartość we <xref:System.Exception.Data%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ecb92-173">Supplementary information about the exception can be stored as a collection of key/value pairs in the <xref:System.Exception.Data%2A> property.</span></span>  
  
 <span data-ttu-id="ecb92-174">Ciąg komunikatu o błędzie, który jest przekazywany do konstruktora podczas tworzenia obiektu wyjątku powinien być zlokalizowany i może być dostarczony z pliku zasobów przy użyciu <xref:System.Resources.ResourceManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="ecb92-174">The error message string that is passed to the constructor during the creation of the exception object should be localized and can be supplied from a resource file by using the <xref:System.Resources.ResourceManager> class.</span></span> <span data-ttu-id="ecb92-175">Aby uzyskać więcej informacji o zlokalizowanych zasobach, zobacz temat [Tworzenie zestawów satelickich](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) i [pakowanie i wdrażanie zasobów](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) .</span><span class="sxs-lookup"><span data-stu-id="ecb92-175">For more information about localized resources, see the [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) and [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) topics.</span></span>  
  
 <span data-ttu-id="ecb92-176">Aby zapewnić użytkownikowi wyczerpujące informacje na temat przyczyny wystąpienia wyjątku, <xref:System.Exception.HelpLink%2A> właściwość może zawierać adres URL (lub nazwę URN) do pliku pomocy.</span><span class="sxs-lookup"><span data-stu-id="ecb92-176">To provide the user with extensive information about why the exception occurred, the <xref:System.Exception.HelpLink%2A> property can hold a URL (or URN) to a help file.</span></span>  
  
 <span data-ttu-id="ecb92-177"><xref:System.Exception> Klasa używa HRESULT COR_E_EXCEPTION, która ma wartość 0x80131500.</span><span class="sxs-lookup"><span data-stu-id="ecb92-177">The <xref:System.Exception> class uses the HRESULT COR_E_EXCEPTION, which has the value 0x80131500.</span></span>  
  
 <span data-ttu-id="ecb92-178">Aby uzyskać listę początkowych wartości właściwości dla wystąpienia <xref:System.Exception> klasy, <xref:System.Exception.%23ctor%2A> Zobacz konstruktory.</span><span class="sxs-lookup"><span data-stu-id="ecb92-178">For a list of initial property values for an instance of the <xref:System.Exception> class, see the <xref:System.Exception.%23ctor%2A> constructors.</span></span>  
  
<a name="Performance"></a>   
## <a name="performance-considerations"></a><span data-ttu-id="ecb92-179">Zagadnienia dotyczące wydajności</span><span class="sxs-lookup"><span data-stu-id="ecb92-179">Performance considerations</span></span>  
 <span data-ttu-id="ecb92-180">Wyrzucanie lub obsługa wyjątku zużywa znaczną ilość zasobów systemowych i czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="ecb92-180">Throwing or handling an exception consumes a significant amount of system resources and execution time.</span></span> <span data-ttu-id="ecb92-181">Zgłaszaj wyjątki tylko w celu obsługi prawdziwie nieprawidłowych warunków, nie obsługują przewidywalnych zdarzeń lub sterowanie przepływem.</span><span class="sxs-lookup"><span data-stu-id="ecb92-181">Throw exceptions only to handle truly extraordinary conditions, not to handle predictable events or flow control.</span></span> <span data-ttu-id="ecb92-182">Na przykład w niektórych przypadkach, na przykład podczas tworzenia biblioteki klas, należy zgłosić wyjątek, jeśli argument metody jest nieprawidłowy, ponieważ oczekuje się, że metoda zostanie wywołana z prawidłowymi parametrami.</span><span class="sxs-lookup"><span data-stu-id="ecb92-182">For example, in some cases, such as when you're developing a class library, it's reasonable to throw an exception if a method argument is invalid, because you expect your method to be called with valid parameters.</span></span> <span data-ttu-id="ecb92-183">Nieprawidłowy argument metody, jeśli nie jest wynikiem błędu użycia, oznacza to, że wystąpił coś nadzwyczajowego.</span><span class="sxs-lookup"><span data-stu-id="ecb92-183">An invalid method argument, if it is not the result of a usage error, means that something extraordinary has occurred.</span></span> <span data-ttu-id="ecb92-184">Z drugiej strony nie należy zgłaszać wyjątku, jeśli dane wejściowe użytkownika są nieprawidłowe, ponieważ można oczekiwać, że użytkownicy sporadycznie wprowadzają nieprawidłowe dane.</span><span class="sxs-lookup"><span data-stu-id="ecb92-184">Conversely, do not throw an exception if user input is invalid, because you can expect users to occasionally enter invalid data.</span></span> <span data-ttu-id="ecb92-185">Zamiast tego należy zapewnić mechanizm ponawiania prób, aby umożliwić użytkownikom wprowadzanie prawidłowych danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="ecb92-185">Instead, provide a retry mechanism so users can enter valid input.</span></span> <span data-ttu-id="ecb92-186">Nie należy używać wyjątków do obsługi błędów użycia.</span><span class="sxs-lookup"><span data-stu-id="ecb92-186">Nor should you use exceptions to handle usage errors.</span></span> <span data-ttu-id="ecb92-187">Zamiast tego należy [](/visualstudio/debugger/assertions-in-managed-code) użyć potwierdzeń, aby identyfikować i poprawiać błędy użycia.</span><span class="sxs-lookup"><span data-stu-id="ecb92-187">Instead, use [assertions](/visualstudio/debugger/assertions-in-managed-code) to identify and correct usage errors.</span></span>  
  
 <span data-ttu-id="ecb92-188">Ponadto nie należy zgłaszać wyjątku, gdy kod powrotny jest wystarczający; nie Konwertuj kodu powrotu na wyjątek; i nie przeprowadzaj rutynowo przechwytywania wyjątku, zignoruj go, a następnie kontynuuj przetwarzanie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-188">In addition, do not throw an exception when a return code is sufficient; do not convert a return code to an exception; and do not routinely catch an exception, ignore it, and then continue processing.</span></span>  
  
<a name="Rethrow"></a>   
## <a name="re-throwing-an-exception"></a><span data-ttu-id="ecb92-189">Ponowne zgłaszanie wyjątku</span><span class="sxs-lookup"><span data-stu-id="ecb92-189">Re-throwing an exception</span></span>  
 <span data-ttu-id="ecb92-190">W wielu przypadkach procedura obsługi wyjątków po prostu chce przekazać wyjątek do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="ecb92-190">In many cases, an exception handler simply wants to pass the exception on to the caller.</span></span> <span data-ttu-id="ecb92-191">Najczęściej występuje w programie:</span><span class="sxs-lookup"><span data-stu-id="ecb92-191">This most often occurs in:</span></span>  
  
-   <span data-ttu-id="ecb92-192">Biblioteka klas, która z kolei zawija wywołania metod w bibliotece klas .NET Framework lub innych bibliotekach klas.</span><span class="sxs-lookup"><span data-stu-id="ecb92-192">A class library that in turn wraps calls to methods in the .NET Framework class library or other class libraries.</span></span>  
  
-   <span data-ttu-id="ecb92-193">Aplikacja lub biblioteka, która napotyka wyjątek krytyczny.</span><span class="sxs-lookup"><span data-stu-id="ecb92-193">An application or library that encounters a fatal exception.</span></span> <span data-ttu-id="ecb92-194">Procedura obsługi wyjątków może rejestrować wyjątek, a następnie ponownie zgłosić wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-194">The exception handler can log the exception and then re-throw the exception.</span></span>  
  
 <span data-ttu-id="ecb92-195">Zalecanym sposobem ponownego wygenerowania wyjątku jest po prostu użycie instrukcji [throw](~/docs/csharp/language-reference/keywords/throw.md) w C# i instrukcji [throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) w Visual Basic bez uwzględnienia wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="ecb92-195">The recommended way to re-throw an exception is to simply use the [throw](~/docs/csharp/language-reference/keywords/throw.md) statement in C# and the [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) statement in Visual Basic without including an expression.</span></span> <span data-ttu-id="ecb92-196">Dzięki temu wszystkie informacje stosu wywołań są zachowywane, gdy wyjątek jest propagowany do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="ecb92-196">This ensures that all call stack information is preserved when the exception is propagated to the caller.</span></span> <span data-ttu-id="ecb92-197">Ilustruje to poniższy przykład.</span><span class="sxs-lookup"><span data-stu-id="ecb92-197">The following example illustrates this.</span></span> <span data-ttu-id="ecb92-198">Metoda `FindOccurrences`rozszerzenia ciągu, zawija jedno lub więcej wywołań do <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> bez weryfikowania wcześniej argumentów.</span><span class="sxs-lookup"><span data-stu-id="ecb92-198">A string extension method, `FindOccurrences`, wraps one or more calls to <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> without validating its arguments beforehand.</span></span>  
  
 [!code-csharp[System.Exception.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#6)]
 [!code-vb[System.Exception.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#6)]  
  
 <span data-ttu-id="ecb92-199">Wywołujący następnie wywołuje `FindOccurrences` dwa razy.</span><span class="sxs-lookup"><span data-stu-id="ecb92-199">A caller then calls `FindOccurrences` twice.</span></span> <span data-ttu-id="ecb92-200">W drugim wywołaniu `FindOccurrences`, obiekt wywołujący `null` przekazuje jako <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> ciąg wyszukiwania, w którym występują metody <xref:System.ArgumentNullException> zgłaszania wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-200">In the second call to `FindOccurrences`, the caller passes a `null` as the search string, which cases the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method to throw an <xref:System.ArgumentNullException> exception.</span></span> <span data-ttu-id="ecb92-201">Ten wyjątek jest obsługiwany przez `FindOccurrences` metodę i przeszedł z powrotem do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="ecb92-201">This exception is handled by the `FindOccurrences` method and passed back to the caller.</span></span> <span data-ttu-id="ecb92-202">Ponieważ Instrukcja throw jest używana bez wyrażenia, dane wyjściowe z przykładu pokazują, że stos wywołań jest zachowywany.</span><span class="sxs-lookup"><span data-stu-id="ecb92-202">Because the throw statement is used with no expression, the output from the example shows that the call stack is preserved.</span></span>  
  
 [!code-csharp[System.Exception.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#7)]
 [!code-vb[System.Exception.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#7)]  
  
 <span data-ttu-id="ecb92-203">Z drugiej strony, jeśli wyjątek jest ponownie zgłaszany przy użyciu</span><span class="sxs-lookup"><span data-stu-id="ecb92-203">In contrast, if the exception is re-thrown by using the</span></span>  
  
```csharp
throw e;
```  
  
```vb  
Throw e  
```  
  
 <span data-ttu-id="ecb92-204">instrukcji, pełny stos wywołań nie jest zachowywany, a przykład generuje następujące dane wyjściowe:</span><span class="sxs-lookup"><span data-stu-id="ecb92-204">statement, the full call stack is not preserved, and the example would generate the following output:</span></span>  
  
```Output  
  
'a' occurs at the following character positions: 4, 7, 15  
  
An exception (ArgumentNullException) occurred.  
Message:  
   Value cannot be null.  
Parameter name: value  
  
Stack Trace:  
      at Library.FindOccurrences(String s, String f)  
   at Example.Main()  
  
```  
  
 <span data-ttu-id="ecb92-205">Nieco bardziej nieskomplikowaną alternatywą jest wygenerowanie nowego wyjątku i zachowanie informacji o stosie wywołań oryginalnego wyjątku w wyjątku wewnętrznym.</span><span class="sxs-lookup"><span data-stu-id="ecb92-205">A slightly more cumbersome alternative is to throw a new exception, and to preserve the original exception's call stack information in an inner exception.</span></span> <span data-ttu-id="ecb92-206">Obiekt wywołujący może następnie użyć <xref:System.Exception.InnerException%2A> właściwości nowego wyjątku, aby pobrać ramkę stosu i inne informacje na temat oryginalnego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-206">The caller can then use the new exception's <xref:System.Exception.InnerException%2A> property to retrieve stack frame and other information about the original exception.</span></span> <span data-ttu-id="ecb92-207">W tym przypadku Instrukcja throw jest:</span><span class="sxs-lookup"><span data-stu-id="ecb92-207">In this case, the throw statement is:</span></span>  
  
 [!code-csharp[System.Exception.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#8)]
 [!code-vb[System.Exception.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#8)]  
  
 <span data-ttu-id="ecb92-208">Kod użytkownika, który obsługuje wyjątek, musi wiedzieć, że <xref:System.Exception.InnerException%2A> Właściwość zawiera informacje o oryginalnym wyjątku, ponieważ ilustruje poniższy program obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-208">The user code that handles the exception has to know that the <xref:System.Exception.InnerException%2A> property contains information about the original exception, as the following exception handler illustrates.</span></span>  
  
 [!code-csharp[System.Exception.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#9)]
 [!code-vb[System.Exception.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#9)]  
  
<a name="Standard"></a>   
## <a name="choosing-standard-exceptions"></a><span data-ttu-id="ecb92-209">Wybieranie standardowych wyjątków</span><span class="sxs-lookup"><span data-stu-id="ecb92-209">Choosing standard exceptions</span></span>  
 <span data-ttu-id="ecb92-210">Jeśli trzeba zgłosić wyjątek, często można użyć istniejącego typu wyjątku w .NET Framework zamiast implementowania niestandardowego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-210">When you have to throw an exception, you can often use an existing exception type in the .NET Framework instead of implementing a custom exception.</span></span> <span data-ttu-id="ecb92-211">Należy używać standardowego typu wyjątku w następujących dwóch warunkach:</span><span class="sxs-lookup"><span data-stu-id="ecb92-211">You should use a standard exception type under these two conditions:</span></span>  
  
-   <span data-ttu-id="ecb92-212">Zgłaszasz wyjątek, który jest spowodowany przez błąd użycia (to oznacza, że wystąpił błąd w logice programu wykonany przez dewelopera, który wywołuje metodę).</span><span class="sxs-lookup"><span data-stu-id="ecb92-212">You are throwing an exception that is caused by a usage error (that is, by an error in program logic made by the developer who is calling your method).</span></span> <span data-ttu-id="ecb92-213"><xref:System.ArgumentException>Zazwyczaj należy zgłosić wyjątek <xref:System.ArgumentNullException> <xref:System.NotSupportedException>, taki jak,, ,lub.<xref:System.InvalidOperationException></span><span class="sxs-lookup"><span data-stu-id="ecb92-213">Typically, you would throw an exception such as <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, or <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="ecb92-214">Ciąg, który jest dostarczany do konstruktora obiektu wyjątku podczas tworzenia wystąpienia obiektu wyjątku powinien opisać błąd, aby umożliwić deweloperowi rozwiązanie tego problemu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-214">The string you supply to the exception object's constructor when instantiating the exception object should describe the error so that the developer can fix it.</span></span> <span data-ttu-id="ecb92-215">Aby uzyskać więcej informacji, zobacz <xref:System.Exception.Message%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="ecb92-215">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="ecb92-216">Obsłużysz błąd, który może być przekazywany do obiektu wywołującego z istniejącym wyjątkiem .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="ecb92-216">You are handling an error that can be communicated to the caller with an existing .NET Framework exception.</span></span> <span data-ttu-id="ecb92-217">Należy zgłosić najbardziej pochodny wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-217">You should throw the most derived exception possible.</span></span> <span data-ttu-id="ecb92-218">Na przykład jeśli metoda wymaga, aby argument był prawidłowym elementem członkowskim typu wyliczenia, należy zgłosić <xref:System.ComponentModel.InvalidEnumArgumentException> (najbardziej pochodną klasę), a nie. <xref:System.ArgumentException></span><span class="sxs-lookup"><span data-stu-id="ecb92-218">For example, if a method requires an argument to be a valid member of an enumeration type, you should throw an <xref:System.ComponentModel.InvalidEnumArgumentException> (the most derived class) rather than an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="ecb92-219">W poniższej tabeli wymieniono typowe typy wyjątków i warunki, w których zostałyby one wyrzucane.</span><span class="sxs-lookup"><span data-stu-id="ecb92-219">The following table lists common exception types and the conditions under which you would throw them.</span></span>  
  
|<span data-ttu-id="ecb92-220">Wyjątek</span><span class="sxs-lookup"><span data-stu-id="ecb92-220">Exception</span></span>|<span data-ttu-id="ecb92-221">Warunek</span><span class="sxs-lookup"><span data-stu-id="ecb92-221">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.ArgumentException>|<span data-ttu-id="ecb92-222">Argument o wartości innej niż null, który jest przesyłany do metody jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="ecb92-222">A non-null argument that is passed to a method is invalid.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="ecb92-223">Argument, który jest przekazaniem do metody `null`, to.</span><span class="sxs-lookup"><span data-stu-id="ecb92-223">An argument that is passed to a method is `null`.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="ecb92-224">Argument znajduje się poza zakresem prawidłowych wartości.</span><span class="sxs-lookup"><span data-stu-id="ecb92-224">An argument is outside the range of valid values.</span></span>|  
|<xref:System.IO.DirectoryNotFoundException>|<span data-ttu-id="ecb92-225">Część ścieżki katalogu jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="ecb92-225">Part of a directory path is not valid.</span></span>|  
|<xref:System.DivideByZeroException>|<span data-ttu-id="ecb92-226">Mianownik w operacji typu Integer lub <xref:System.Decimal> dzielenie ma wartość zero.</span><span class="sxs-lookup"><span data-stu-id="ecb92-226">The denominator in an integer or <xref:System.Decimal> division operation is zero.</span></span>|  
|<xref:System.IO.DriveNotFoundException>|<span data-ttu-id="ecb92-227">Dysk jest niedostępny lub nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="ecb92-227">A drive is unavailable or does not exist.</span></span>|  
|<xref:System.IO.FileNotFoundException>|<span data-ttu-id="ecb92-228">Plik nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="ecb92-228">A file does not exist.</span></span>|  
|<xref:System.FormatException>|<span data-ttu-id="ecb92-229">Wartość nie jest w odpowiednim formacie do przekonwertowania z ciągu przez metodę konwersji taką jak `Parse`.</span><span class="sxs-lookup"><span data-stu-id="ecb92-229">A value is not in an appropriate format to be converted from a string by a conversion method such as `Parse`.</span></span>|  
|<xref:System.IndexOutOfRangeException>|<span data-ttu-id="ecb92-230">Indeks znajduje się poza granicami tablicy lub kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-230">An index is outside the bounds of an array or collection.</span></span>|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="ecb92-231">Wywołanie metody jest nieprawidłowe w bieżącym stanie obiektu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-231">A method call is invalid in an object's current state.</span></span>|  
|<xref:System.Collections.Generic.KeyNotFoundException>|<span data-ttu-id="ecb92-232">Nie można znaleźć określonego klucza do uzyskania dostępu do elementu członkowskiego w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-232">The specified key for accessing a member in a collection cannot be found.</span></span>|  
|<xref:System.NotImplementedException>|<span data-ttu-id="ecb92-233">Metoda lub operacja nie jest zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="ecb92-233">A method or operation is not implemented.</span></span>|  
|<xref:System.NotSupportedException>|<span data-ttu-id="ecb92-234">Metoda lub operacja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="ecb92-234">A method or operation is not supported.</span></span>|  
|<xref:System.ObjectDisposedException>|<span data-ttu-id="ecb92-235">Operacja jest wykonywana na obiekcie, który został usunięty.</span><span class="sxs-lookup"><span data-stu-id="ecb92-235">An operation is performed on an object that has been disposed.</span></span>|  
|<xref:System.OverflowException>|<span data-ttu-id="ecb92-236">Operacja arytmetyczna, rzutowania lub konwersji powoduje przepełnienie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-236">An arithmetic, casting, or conversion operation results in an overflow.</span></span>|  
|<xref:System.IO.PathTooLongException>|<span data-ttu-id="ecb92-237">Ścieżka lub nazwa pliku przekracza maksymalną długość zdefiniowaną przez system.</span><span class="sxs-lookup"><span data-stu-id="ecb92-237">A path or file name exceeds the maximum system-defined length.</span></span>|  
|<xref:System.PlatformNotSupportedException>|<span data-ttu-id="ecb92-238">Operacja nie jest obsługiwana na bieżącej platformie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-238">The operation is not supported on the current platform.</span></span>|  
|<xref:System.RankException>|<span data-ttu-id="ecb92-239">Tablica o nieprawidłowej liczbie wymiarów jest przenoszona do metody.</span><span class="sxs-lookup"><span data-stu-id="ecb92-239">An array with the wrong number of dimensions is passed to a method.</span></span>|  
|<xref:System.TimeoutException>|<span data-ttu-id="ecb92-240">Przedział czasu przypisany do operacji wygasł.</span><span class="sxs-lookup"><span data-stu-id="ecb92-240">The time interval allotted to an operation has expired.</span></span>|  
|<xref:System.UriFormatException>|<span data-ttu-id="ecb92-241">Użyto nieprawidłowego Uniform Resource Identifier (URI).</span><span class="sxs-lookup"><span data-stu-id="ecb92-241">An invalid Uniform Resource Identifier (URI) is used.</span></span>|  
  
<a name="Custom"></a>   
## <a name="implementing-custom-exceptions"></a><span data-ttu-id="ecb92-242">Implementowanie wyjątków niestandardowych</span><span class="sxs-lookup"><span data-stu-id="ecb92-242">Implementing custom exceptions</span></span>  
 <span data-ttu-id="ecb92-243">W następujących przypadkach użycie istniejącego wyjątku .NET Framework w celu obsłużenia warunku błędu nie jest wystarczające:</span><span class="sxs-lookup"><span data-stu-id="ecb92-243">In the following cases, using an existing .NET Framework exception to handle an error condition is not adequate:</span></span>  
  
-   <span data-ttu-id="ecb92-244">Gdy wyjątek odzwierciedla unikatowy błąd programu, którego nie można zamapować na istniejący wyjątek .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="ecb92-244">When the exception reflects a unique program error that cannot be mapped to an existing .NET Framework exception.</span></span>  
  
-   <span data-ttu-id="ecb92-245">Gdy wyjątek wymaga obsługi, która różni się od obsługi, która jest odpowiednia dla istniejącego wyjątku .NET Framework, lub wyjątek należy odróżnić od podobnego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-245">When the exception requires handling that is different from the handling that is appropriate for an existing .NET Framework exception, or the exception must be disambiguated from a similar exception.</span></span> <span data-ttu-id="ecb92-246">Na przykład jeśli <xref:System.ArgumentOutOfRangeException> zgłaszasz wyjątek podczas analizowania liczbowej reprezentacji ciągu, który jest poza zakresem docelowego typu całkowitego, nie chcesz używać tego samego wyjątku w przypadku błędu, który wynika z wywołującego niedostarczającego odpowiednie ograniczone wartości podczas wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="ecb92-246">For example, if you throw an <xref:System.ArgumentOutOfRangeException> exception when parsing the numeric representation of a string that is out of range of the target integral type, you would not want to use the same exception for an error that results from the caller not supplying the appropriate constrained values when calling the method.</span></span>  
  
 <span data-ttu-id="ecb92-247"><xref:System.Exception> Klasa jest klasą bazową wszystkich wyjątków w .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="ecb92-247">The <xref:System.Exception> class is the base class of all exceptions in the .NET Framework.</span></span> <span data-ttu-id="ecb92-248">Wiele klas pochodnych opiera się na dziedziczonym zachowaniu elementów członkowskich <xref:System.Exception> klasy; nie przesłaniają oni <xref:System.Exception>elementów członkowskich ani nie definiują żadnych unikatowych elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="ecb92-248">Many derived classes rely on the inherited behavior of the members of the <xref:System.Exception> class; they do not override the members of <xref:System.Exception>, nor do they define any unique members.</span></span>  
  
 <span data-ttu-id="ecb92-249">Aby zdefiniować własną klasę wyjątku:</span><span class="sxs-lookup"><span data-stu-id="ecb92-249">To define your own exception class:</span></span>  
  
1.  <span data-ttu-id="ecb92-250">Zdefiniuj klasę, która dziedziczy z <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="ecb92-250">Define a class that inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="ecb92-251">W razie potrzeby Zdefiniuj wszelkich unikatowych członków wymaganych przez klasę, aby podać dodatkowe informacje o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-251">If necessary, define any unique members needed by your class to provide additional information about the exception.</span></span> <span data-ttu-id="ecb92-252">Na przykład <xref:System.ArgumentException> Klasa <xref:System.ArgumentException.ParamName%2A> zawiera właściwość, która określa nazwę parametru, którego argument spowodował wyjątek, <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> Właściwość zawiera właściwość, która wskazuje interwał limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-252">For example, the <xref:System.ArgumentException> class includes a <xref:System.ArgumentException.ParamName%2A> property that specifies the name of the parameter whose argument caused the exception, and the <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> property includes a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> property that indicates the time-out interval.</span></span>  
  
2.  <span data-ttu-id="ecb92-253">W razie potrzeby Zastąp wszystkie Odziedziczone elementy członkowskie, których funkcjonalność chcesz zmienić lub zmodyfikować.</span><span class="sxs-lookup"><span data-stu-id="ecb92-253">If necessary, override any inherited members whose functionality you want to change or modify.</span></span> <span data-ttu-id="ecb92-254">Należy zauważyć, że większość istniejących klas <xref:System.Exception> pochodnych nie przesłania zachowania dziedziczonych elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="ecb92-254">Note that most existing derived classes of <xref:System.Exception> do not override the behavior of inherited members.</span></span>  
  
3.  <span data-ttu-id="ecb92-255">Ustal, czy obiekt wyjątku niestandardowego jest możliwy do serializacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-255">Determine whether your custom exception object is serializable.</span></span> <span data-ttu-id="ecb92-256">Serializacja umożliwia zapisywanie informacji o wyjątku i Zezwalanie na udostępnianie informacji o wyjątku przez serwer i serwer proxy klienta w kontekście komunikacji zdalnej.</span><span class="sxs-lookup"><span data-stu-id="ecb92-256">Serialization enables you to save information about the exception and permits exception information to be shared by a server and a client proxy in a remoting context.</span></span> <span data-ttu-id="ecb92-257">Aby można było serializować obiekt wyjątku, oznacz go <xref:System.SerializableAttribute> atrybutem.</span><span class="sxs-lookup"><span data-stu-id="ecb92-257">To make the exception object serializable, mark it with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
4.  <span data-ttu-id="ecb92-258">Zdefiniuj konstruktory klasy wyjątków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-258">Define the constructors of your exception class.</span></span> <span data-ttu-id="ecb92-259">Zazwyczaj klasy wyjątków mają jeden lub więcej z następujących konstruktorów:</span><span class="sxs-lookup"><span data-stu-id="ecb92-259">Typically, exception classes have one or more of the following constructors:</span></span>  
  
    -   <span data-ttu-id="ecb92-260"><xref:System.Exception.%23ctor>, który używa wartości domyślnych do inicjowania właściwości nowego obiektu wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-260"><xref:System.Exception.%23ctor>, which uses default values to initialize the properties of a new exception object.</span></span>  
  
    -   <span data-ttu-id="ecb92-261"><xref:System.Exception.%23ctor%28System.String%29>, który inicjuje nowy obiekt wyjątku z określonym komunikatem o błędzie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-261"><xref:System.Exception.%23ctor%28System.String%29>, which initializes a new exception object with a specified error message.</span></span>  
  
    -   <span data-ttu-id="ecb92-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, który inicjuje nowy obiekt wyjątku z określonym komunikatem o błędzie i wyjątkiem wewnętrznym.</span><span class="sxs-lookup"><span data-stu-id="ecb92-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, which initializes a new exception object with a specified error message and inner exception.</span></span>  
  
    -   <span data-ttu-id="ecb92-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, który jest `protected` konstruktorem, który inicjuje nowy obiekt wyjątku z danych serializowanych.</span><span class="sxs-lookup"><span data-stu-id="ecb92-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, which is a `protected` constructor that initializes a new exception object from serialized data.</span></span> <span data-ttu-id="ecb92-264">Należy zaimplementować ten Konstruktor, jeśli wybrano opcję, aby obiekt wyjątku był możliwy do serializacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-264">You should implement this constructor if you've chosen to make your exception object serializable.</span></span>  
  
 <span data-ttu-id="ecb92-265">Poniższy przykład ilustruje użycie niestandardowej klasy wyjątków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-265">The following example illustrates the use of a custom exception class.</span></span> <span data-ttu-id="ecb92-266">Definiuje `NotPrimeException` wyjątek, który jest generowany, gdy klient próbuje pobrać sekwencję numerów początkowych przez określenie początkowego numeru, który nie jest podstawowy.</span><span class="sxs-lookup"><span data-stu-id="ecb92-266">It defines a `NotPrimeException` exception that is thrown when a client tries to retrieve a sequence of prime numbers by specifying a starting number that is not prime.</span></span> <span data-ttu-id="ecb92-267">Wyjątek definiuje nową właściwość `NonPrime`, która zwraca liczbę niewskazującą, która spowodowała wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-267">The exception defines a new property, `NonPrime`, that returns the non-prime number that caused the exception.</span></span> <span data-ttu-id="ecb92-268">Oprócz implementacji <xref:System.Runtime.Serialization.SerializationInfo> chronionego konstruktora bez parametrów i konstruktora z <xref:System.Runtime.Serialization.StreamingContext> `NotPrimeException` parametrami dla serializacji, `NonPrime` Klasa definiuje trzy dodatkowe konstruktory do obsługi właściwości.</span><span class="sxs-lookup"><span data-stu-id="ecb92-268">Besides implementing a protected parameterless constructor and a constructor with <xref:System.Runtime.Serialization.SerializationInfo> and <xref:System.Runtime.Serialization.StreamingContext> parameters for serialization, the `NotPrimeException` class defines three additional constructors to support the `NonPrime` property.</span></span>  <span data-ttu-id="ecb92-269">Każdy Konstruktor wywołuje konstruktora klasy bazowej oprócz zachowania wartości numeru niebędącego znakiem.</span><span class="sxs-lookup"><span data-stu-id="ecb92-269">Each constructor calls a base class constructor in addition to preserving the value of the non-prime number.</span></span> <span data-ttu-id="ecb92-270">Klasa jest również oznaczona <xref:System.SerializableAttribute> przy użyciu atrybutu. `NotPrimeException`</span><span class="sxs-lookup"><span data-stu-id="ecb92-270">The `NotPrimeException` class is also marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Exception.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/notprimeexception.cs#1)]
 [!code-vb[System.Exception.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/notprimeexception.vb#1)]  
  
 <span data-ttu-id="ecb92-271">`PrimeNumberGenerator` Klasa pokazana w poniższym przykładzie używa sita Eratostenesa, aby obliczyć sekwencję liczb pierwszych z 2 do limitu określonego przez klienta w wywołaniu jego konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="ecb92-271">The `PrimeNumberGenerator` class shown in the following example uses the Sieve of Eratosthenes to calculate the sequence of prime numbers from 2 to a limit specified by the client in the call to its class constructor.</span></span> <span data-ttu-id="ecb92-272">Metoda zwraca wszystkie liczby podstawowe, które są większe niż lub równe określonemu dolnemu limitowi, ale `NotPrimeException` zgłasza, jeśli ten dolny limit nie jest liczbą najmniejszą. `GetPrimesFrom`</span><span class="sxs-lookup"><span data-stu-id="ecb92-272">The `GetPrimesFrom` method returns all prime numbers that are greater than or equal to a specified lower limit, but throws a `NotPrimeException` if that lower limit is not a prime number.</span></span>  
  
 [!code-csharp[System.Exception.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/primenumbergenerator.cs#2)]
 [!code-vb[System.Exception.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/primenumbergenerator.vb#2)]  
  
 <span data-ttu-id="ecb92-273">Poniższy przykład tworzy dwa wywołania `GetPrimesFrom` metody z liczbami niepodstawowymi, z których jedna przecina granice domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-273">The following example makes two calls to the `GetPrimesFrom` method with non-prime numbers, one of which crosses application domain boundaries.</span></span> <span data-ttu-id="ecb92-274">W obu przypadkach wyjątek jest zgłaszany i pomyślnie obsłużony w kodzie klienta.</span><span class="sxs-lookup"><span data-stu-id="ecb92-274">In both cases, the exception is thrown and successfully handled in client code.</span></span>  
  
 [!code-csharp[System.Exception.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/example.cs#3)]
 [!code-vb[System.Exception.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/example.vb#3)]  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="ecb92-275">środowisko wykonawcze systemu Windows i[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="ecb92-275">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="ecb92-276">W [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] przypadku [!INCLUDE[win8](~/includes/win8-md.md)]programu niektóre informacje o wyjątkach są zazwyczaj tracone, gdy wyjątek jest propagowany przez ramki stosu non-.NET Framework.</span><span class="sxs-lookup"><span data-stu-id="ecb92-276">In [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] for [!INCLUDE[win8](~/includes/win8-md.md)], some exception information is typically lost when an exception is propagated through non-.NET Framework stack frames.</span></span> <span data-ttu-id="ecb92-277">Począwszy od [!INCLUDE[win81](~/includes/win81-md.md)] <xref:System.Exception> i, środowisko uruchomieniowe języka wspólnego nadal używa oryginalnego obiektu, który został wygenerowany, chyba że ten wyjątek został zmodyfikowany w ramce stosu non-.NET Framework. [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="ecb92-277">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the common language runtime continues to use the original <xref:System.Exception> object that was thrown unless that exception was modified in a non-.NET Framework stack frame.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-278">Poniższy przykład ilustruje `catch` blok, który jest zdefiniowany do obsługi <xref:System.ArithmeticException> błędów.</span><span class="sxs-lookup"><span data-stu-id="ecb92-278">The following example demonstrates a `catch` block that is defined to handle <xref:System.ArithmeticException> errors.</span></span> <span data-ttu-id="ecb92-279">Ten `catch` blok również <xref:System.DivideByZeroException> przechwytuje błędy, <xref:System.DivideByZeroException> ponieważ pochodzi <xref:System.ArithmeticException> od i nie `catch` istnieje blok jawnie zdefiniowany dla <xref:System.DivideByZeroException> błędów.</span><span class="sxs-lookup"><span data-stu-id="ecb92-279">This `catch` block also catches <xref:System.DivideByZeroException> errors, because <xref:System.DivideByZeroException> derives from <xref:System.ArithmeticException> and there is no `catch` block explicitly defined for <xref:System.DivideByZeroException> errors.</span></span>  
  
 [!code-cpp[CatchException#1](~/samples/snippets/cpp/VS_Snippets_CLR/CatchException/CPP/catchexception.cpp#1)]
 [!code-csharp[CatchException#1](~/samples/snippets/csharp/VS_Snippets_CLR/CatchException/CS/catchexception.cs#1)]
 [!code-vb[CatchException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CatchException/VB/catchexception.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="ecb92-280">Obsługa i zgłaszanie wyjątków</span><span class="sxs-lookup"><span data-stu-id="ecb92-280">Handling and Throwing Exceptions</span></span></related>
    <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md"><span data-ttu-id="ecb92-281">Opakowanie i wdrażanie zasobów w aplikacjach klasycznych</span><span class="sxs-lookup"><span data-stu-id="ecb92-281">Packaging and Deploying Resources in Desktop Apps</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1"><span data-ttu-id="ecb92-282">Potwierdzenia w zarządzanym kodzie</span><span class="sxs-lookup"><span data-stu-id="ecb92-282">Assertions in Managed Code</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ecb92-283">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="ecb92-283">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecb92-284">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="ecb92-284">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-285">Ten konstruktor inicjuje <xref:System.Exception.Message%2A> właściwość nowego wystąpienia do komunikatu dostarczonego przez system, który opisuje błąd i bierze pod uwagę bieżącą kulturę systemu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-285">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error and takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="ecb92-286">Wszystkie klasy pochodne powinny udostępniać ten konstruktor bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="ecb92-286">All the derived classes should provide this parameterless constructor.</span></span> <span data-ttu-id="ecb92-287">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="ecb92-287">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="ecb92-288">Właściwość</span><span class="sxs-lookup"><span data-stu-id="ecb92-288">Property</span></span>|<span data-ttu-id="ecb92-289">Wartość</span><span class="sxs-lookup"><span data-stu-id="ecb92-289">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ecb92-290">Odwołanie o wartości null (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ecb92-290">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="ecb92-291">Zlokalizowany opis dostarczany przez system.</span><span class="sxs-lookup"><span data-stu-id="ecb92-291">A system-supplied localized description.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-292">Poniższy przykład kodu pochodzi `Exception` , który używa wstępnie zdefiniowanego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-292">The following code example derives an `Exception` that uses a predefined message.</span></span> <span data-ttu-id="ecb92-293">Kod demonstruje użycie konstruktora bez parametrów dla klasy pochodnej i klasy bazowej `Exception` .</span><span class="sxs-lookup"><span data-stu-id="ecb92-293">The code demonstrates the use of the parameterless constructor for the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/new.cpp#1)]
 [!code-csharp[System.Exception.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/new.cs#1)]
 [!code-vb[System.Exception.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/new.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new Exception : string -&gt; Exception" Usage="new System.Exception message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ecb92-294">Komunikat, który opisuje błąd.</span><span class="sxs-lookup"><span data-stu-id="ecb92-294">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="ecb92-295">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy przy użyciu określonego komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-295">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-296">Ten konstruktor inicjuje <xref:System.Exception.Message%2A> właściwość nowego wystąpienia przy `message` użyciu parametru.</span><span class="sxs-lookup"><span data-stu-id="ecb92-296">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance by using the `message` parameter.</span></span> <span data-ttu-id="ecb92-297">Jeśli parametr ma `null`wartość, jest to taka sama jak wywołanie <xref:System.Exception.%23ctor%2A> konstruktora. `message`</span><span class="sxs-lookup"><span data-stu-id="ecb92-297">If the `message` parameter is `null`, this is the same as calling the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="ecb92-298">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="ecb92-298">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="ecb92-299">Właściwość</span><span class="sxs-lookup"><span data-stu-id="ecb92-299">Property</span></span>|<span data-ttu-id="ecb92-300">Wartość</span><span class="sxs-lookup"><span data-stu-id="ecb92-300">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ecb92-301">Odwołanie o wartości null (`Nothing` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ecb92-301">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="ecb92-302">Ciąg komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-302">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-303">Poniższy przykład kodu dziedziczy `Exception` dla określonego warunku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-303">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="ecb92-304">Kod demonstruje użycie konstruktora, który przyjmuje komunikat określony przez obiekt wywołujący jako parametr, dla klasy pochodnej i klasy bazowej `Exception` .</span><span class="sxs-lookup"><span data-stu-id="ecb92-304">The code demonstrates the use of the constructor that takes a caller-specified message as a parameter, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/news.cpp#2)]
 [!code-csharp[System.Exception.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/news.cs#2)]
 [!code-vb[System.Exception.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/news.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Exception (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new Exception : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; Exception" Usage="new System.Exception (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="ecb92-305"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Przechowujący dane serializowanego obiektu o generowanym wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-305">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="ecb92-306"><see cref="T:System.Runtime.Serialization.StreamingContext" /> Zawiera informacje kontekstowe o źródle lub miejscu docelowym.</span><span class="sxs-lookup"><span data-stu-id="ecb92-306">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="ecb92-307">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy z serializowanych danych.</span><span class="sxs-lookup"><span data-stu-id="ecb92-307">Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-308">Ten konstruktor jest wywoływana podczas deserializacji do odtworzenia obiektu wyjątku przesyłanego za pomocą strumienia.</span><span class="sxs-lookup"><span data-stu-id="ecb92-308">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="ecb92-309">Aby uzyskać więcej informacji, zobacz [XML oraz serializacji protokołu SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="ecb92-309">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-310">Poniższy przykład kodu definiuje pochodną klasę, `Exception` której można serializować.</span><span class="sxs-lookup"><span data-stu-id="ecb92-310">The following code example defines a derived serializable `Exception` class.</span></span> <span data-ttu-id="ecb92-311">Kod wymusza błąd dzielenia przez 0, a następnie tworzy wystąpienie wyjątku pochodnego przy użyciu konstruktora (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>).</span><span class="sxs-lookup"><span data-stu-id="ecb92-311">The code forces a divide-by-0 error and then creates an instance of the derived exception using the (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) constructor.</span></span> <span data-ttu-id="ecb92-312">Kod serializować wystąpienie do pliku, deserializacji pliku do nowego wyjątku, który zgłasza, a następnie przechwytuje i wyświetla dane wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-312">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ecb92-313"><paramref name="info" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ecb92-313"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="ecb92-314">Nazwa klasy ma <see langword="null" /> wartość lub <see cref="P:System.Exception.HResult" /> jest równa zero (0).</span><span class="sxs-lookup"><span data-stu-id="ecb92-314">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="ecb92-315">Serializacja XML i SOAP</span><span class="sxs-lookup"><span data-stu-id="ecb92-315">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new Exception : string * Exception -&gt; Exception" Usage="new System.Exception (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ecb92-316">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-316">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="ecb92-317">Wyjątek, który jest przyczyną bieżącego wyjątku lub odwołaniem null (<see langword="Nothing" /> w Visual Basic), jeśli nie określono wyjątku wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="ecb92-317">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</span></span></param>
        <summary><span data-ttu-id="ecb92-318">Inicjuje nowe wystąpienie klasy <see cref="T:System.Exception" /> klasy przy użyciu określonego komunikatu o błędzie i odwołania do wewnętrznego wyjątku, który jest przyczyną tego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-318">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-319">Wyjątek generowany jako bezpośredni wynik poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ecb92-319">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="ecb92-320">Właściwość zwraca tę samą wartość, która jest przenoszona do konstruktora lub odwołanie o wartości null (`Nothing` <xref:System.Exception.InnerException%2A> w Visual Basic), jeśli właściwość nie poda wewnętrznej wartości wyjątku do konstruktora. <xref:System.Exception.InnerException%2A></span><span class="sxs-lookup"><span data-stu-id="ecb92-320">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="ecb92-321">W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="ecb92-321">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="ecb92-322">Właściwość</span><span class="sxs-lookup"><span data-stu-id="ecb92-322">Property</span></span>|<span data-ttu-id="ecb92-323">Wartość</span><span class="sxs-lookup"><span data-stu-id="ecb92-323">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ecb92-324">Odwołanie do wewnętrznego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-324">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="ecb92-325">Ciąg komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-325">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-326">Poniższy przykład kodu dziedziczy `Exception` dla określonego warunku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-326">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="ecb92-327">Kod demonstruje użycie konstruktora, który przyjmuje komunikat i wyjątek wewnętrzny jako parametry, dla klasy pochodnej i klasy bazowej `Exception` .</span><span class="sxs-lookup"><span data-stu-id="ecb92-327">The code demonstrates the use of the constructor that takes a message and an inner exception as parameters, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/newsi.cpp#3)]
 [!code-csharp[System.Exception.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/newsi.cs#3)]
 [!code-vb[System.Exception.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/newsi.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Data" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Data { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Collections.IDictionary" Usage="System.Exception.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecb92-328">Pobiera kolekcję par klucz/wartość, które zawierają dodatkowe informacje zdefiniowane przez użytkownika dotyczące wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-328">Gets a collection of key/value pairs that provide additional user-defined information about the exception.</span></span></summary>
        <value><span data-ttu-id="ecb92-329">Obiekt, który implementuje <see cref="T:System.Collections.IDictionary" /> interfejs i zawiera kolekcję par klucz/wartość zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ecb92-329">An object that implements the <see cref="T:System.Collections.IDictionary" /> interface and contains a collection of user-defined key/value pairs.</span></span> <span data-ttu-id="ecb92-330">Wartością domyślną jest pusta kolekcja.</span><span class="sxs-lookup"><span data-stu-id="ecb92-330">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-331">Użyj obiektu zwróconego przez właściwość w celu przechowywania i pobierania informacji dodatkowych dotyczących wyjątku. <xref:System.Exception.Data%2A> <xref:System.Collections.IDictionary?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ecb92-331">Use the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object returned by the <xref:System.Exception.Data%2A> property to store and retrieve supplementary information relevant to the exception.</span></span> <span data-ttu-id="ecb92-332">Informacje są w postaci dowolnej liczby par klucz-wartość zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ecb92-332">The information is in the form of an arbitrary number of user-defined key/value pairs.</span></span> <span data-ttu-id="ecb92-333">Najważniejszym składnikiem pary klucz/wartość jest zazwyczaj ciąg identyfikacyjny, natomiast składnik wartości pary może być dowolnym typem obiektu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-333">The key component of each key/value pair is typically an identifying string, whereas the value component of the pair can be any type of object.</span></span>  
  
## <a name="keyvalue-pair-security"></a><span data-ttu-id="ecb92-334">Zabezpieczenia pary klucz/wartość</span><span class="sxs-lookup"><span data-stu-id="ecb92-334">Key/Value Pair Security</span></span>  
 <span data-ttu-id="ecb92-335">Pary klucz/wartość przechowywane w kolekcji zwróconej przez <xref:System.Exception.Data%2A> właściwość nie są bezpieczne.</span><span class="sxs-lookup"><span data-stu-id="ecb92-335">The key/value pairs stored in the collection returned by the <xref:System.Exception.Data%2A> property are not secure.</span></span> <span data-ttu-id="ecb92-336">Jeśli aplikacja wywołuje zagnieżdżoną serię procedur, a każda procedura zawiera obsługę wyjątków, powstaje stos wywołań zawiera hierarchię programów obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-336">If your application calls a nested series of routines, and each routine contains exception handlers, the resulting call stack contains a hierarchy of those exception handlers.</span></span> <span data-ttu-id="ecb92-337">Jeśli procedura niższego poziomu zgłasza wyjątek, każdy program obsługi wyjątków najwyższego poziomu w hierarchii stosu wywołań może odczytać i/lub zmodyfikować pary klucz/wartość przechowywane w kolekcji przez dowolną inną procedurę obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-337">If a lower-level routine throws an exception, any upper-level exception handler in the call stack hierarchy can read and/or modify the key/value pairs stored in the collection by any other exception handler.</span></span> <span data-ttu-id="ecb92-338">Oznacza to, że należy zagwarantować, że informacje w parach klucz/wartość nie są poufne i że aplikacja będzie działać prawidłowo, jeśli informacje w parach klucz/wartość są uszkodzone.</span><span class="sxs-lookup"><span data-stu-id="ecb92-338">This means you must guarantee that the information in the key/value pairs is not confidential and that your application will operate correctly if the information in the key/value pairs is corrupted.</span></span>  
  
## <a name="key-conflicts"></a><span data-ttu-id="ecb92-339">Konflikty klucza</span><span class="sxs-lookup"><span data-stu-id="ecb92-339">Key Conflicts</span></span>  
 <span data-ttu-id="ecb92-340">Konflikt klucza występuje, gdy różne programy obsługi wyjątków określają ten sam klucz, aby uzyskać dostęp do pary klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="ecb92-340">A key conflict occurs when different exception handlers specify the same key to access a key/value pair.</span></span> <span data-ttu-id="ecb92-341">Należy zachować ostrożność podczas opracowywania aplikacji, ponieważ występuje konflikt klucza, że programy obsługi wyjątków niższego poziomu mogą przypadkowo komunikować się z obsługą wyjątków wyższego poziomu, a ta komunikacja może spowodować drobne błędy programu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-341">Use caution when developing your application because the consequence of a key conflict is that lower-level exception handlers can inadvertently communicate with higher-level exception handlers, and this communication might cause subtle program errors.</span></span> <span data-ttu-id="ecb92-342">Jednak jeśli jest to ostrożne, można użyć konfliktów kluczy do udoskonalenia aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-342">However, if you are cautious you can use key conflicts to enhance your application.</span></span>  
  
## <a name="avoiding-key-conflicts"></a><span data-ttu-id="ecb92-343">Unikanie konfliktów klucza</span><span class="sxs-lookup"><span data-stu-id="ecb92-343">Avoiding Key Conflicts</span></span>  
 <span data-ttu-id="ecb92-344">Unikaj konfliktów kluczowych przez przyjęcie konwencji nazewnictwa w celu wygenerowania unikatowych kluczy dla par klucz/wartość.</span><span class="sxs-lookup"><span data-stu-id="ecb92-344">Avoid key conflicts by adopting a naming convention to generate unique keys for key/value pairs.</span></span> <span data-ttu-id="ecb92-345">Na przykład Konwencja nazewnictwa może dać klucz, który składa się z rozdzielanej kropką nazwy aplikacji, metody, która zawiera dodatkowe informacje dla pary i unikatowy identyfikator.</span><span class="sxs-lookup"><span data-stu-id="ecb92-345">For example, a naming convention might yield a key that consists of the period-delimited name of your application, the method that provides supplementary information for the pair, and a unique identifier.</span></span>  
  
 <span data-ttu-id="ecb92-346">Załóżmy, że dwie aplikacje, nazwane produkty i dostawcy, mają metodę o nazwie Sales.</span><span class="sxs-lookup"><span data-stu-id="ecb92-346">Suppose two applications, named Products and Suppliers, each has a method named Sales.</span></span> <span data-ttu-id="ecb92-347">Metoda Sales w aplikacji Products zawiera numer identyfikacyjny (jednostka magazynowa lub SKU) produktu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-347">The Sales method in the Products application provides the identification number (the stock keeping unit or SKU) of a product.</span></span> <span data-ttu-id="ecb92-348">Metoda Sales w aplikacji dostawcy udostępnia numer identyfikacyjny lub identyfikator SID dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ecb92-348">The Sales method in the Suppliers application provides the identification number, or SID, of a supplier.</span></span> <span data-ttu-id="ecb92-349">W związku z tym, Konwencja nazewnictwa dla tego przykładu daje klucze "Products. Sales. SKU" i "dostawcy. Sales. SID".</span><span class="sxs-lookup"><span data-stu-id="ecb92-349">Consequently, the naming convention for this example yields the keys, "Products.Sales.SKU" and "Suppliers.Sales.SID".</span></span>  
  
## <a name="exploiting-key-conflicts"></a><span data-ttu-id="ecb92-350">Wykorzystanie konfliktów klucza</span><span class="sxs-lookup"><span data-stu-id="ecb92-350">Exploiting Key Conflicts</span></span>  
 <span data-ttu-id="ecb92-351">Luki w zabezpieczeniach z wykorzystaniem klucza wykorzystującego jeden lub więcej specjalnych, nastawianych kluczy do sterowania przetwarzaniem.</span><span class="sxs-lookup"><span data-stu-id="ecb92-351">Exploit key conflicts by using the presence of one or more special, prearranged keys to control processing.</span></span> <span data-ttu-id="ecb92-352">Załóżmy, że w jednym scenariuszu program obsługi wyjątków najwyższego poziomu w hierarchii stosu wywołań przechwytuje wszystkie wyjątki zgłoszone przez programy obsługi wyjątków niższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-352">Suppose, in one scenario, the highest level exception handler in the call stack hierarchy catches all exceptions thrown by lower-level exception handlers.</span></span> <span data-ttu-id="ecb92-353">Jeśli istnieje para klucz/wartość z kluczem specjalnym, program obsługi wyjątków wysokiego poziomu formatuje pozostałe pary klucz/wartość w <xref:System.Collections.IDictionary> obiekcie w niestandardowym trybie; w przeciwnym razie pozostałe pary klucz/wartość są sformatowane w zwykły sposób.</span><span class="sxs-lookup"><span data-stu-id="ecb92-353">If a key/value pair with a special key exists, the high-level exception handler formats the remaining key/value pairs in the <xref:System.Collections.IDictionary> object in some nonstandard way; otherwise, the remaining key/value pairs are formatted in some normal manner.</span></span>  
  
 <span data-ttu-id="ecb92-354">Teraz Załóżmy, że w innym scenariuszu program obsługi wyjątków na każdym poziomie hierarchii stosu wywołań przechwytuje wyjątek zgłoszony przez następną procedurę obsługi wyjątków niższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-354">Now suppose, in another scenario, the exception handler at each level of the call stack hierarchy catches the exception thrown by the next lower-level exception handler.</span></span> <span data-ttu-id="ecb92-355">Ponadto każdy program obsługi wyjątków wie, że Kolekcja zwracana przez <xref:System.Exception.Data%2A> Właściwość zawiera zestaw par klucz/wartość, do których można uzyskać dostęp przy użyciu premieszczonego zestawu kluczy.</span><span class="sxs-lookup"><span data-stu-id="ecb92-355">In addition, each exception handler knows the collection returned by the <xref:System.Exception.Data%2A> property contains a set of key/value pairs that can be accessed with a prearranged set of keys.</span></span>  
  
 <span data-ttu-id="ecb92-356">Każdy program obsługi wyjątków używa wstępnie utworzonego zestawu kluczy, aby zaktualizować składnik wartości odpowiedniej pary klucz/wartość z informacjami unikatowymi dla tego programu obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-356">Each exception handler uses the prearranged set of keys to update the value component of the corresponding key/value pair with information unique to that exception handler.</span></span> <span data-ttu-id="ecb92-357">Po zakończeniu procesu aktualizacji procedura obsługi wyjątków zgłasza wyjątek do następnego programu obsługi wyjątków wyższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-357">After the update process is complete, the exception handler throws the exception to the next higher-level exception handler.</span></span> <span data-ttu-id="ecb92-358">Na koniec program obsługi wyjątków najwyższego poziomu uzyskuje dostęp do par klucz/wartość i wyświetla skonsolidowane informacje o aktualizacji ze wszystkich programów obsługi wyjątków niższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-358">Finally, the highest level exception handler accesses the key/value pairs and displays the consolidated update information from all the lower-level exception handlers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-359">Poniższy przykład ilustruje sposób dodawania i pobierania informacji przy użyciu <xref:System.Exception.Data%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ecb92-359">The following example demonstrates how to add and retrieve information using the <xref:System.Exception.Data%2A> property.</span></span>  
  
 [!code-cpp[exception.data#1](~/samples/snippets/cpp/VS_Snippets_CLR/exception.data/CPP/data.cpp#1)]
 [!code-csharp[exception.data#1](~/samples/snippets/csharp/VS_Snippets_CLR/exception.data/CS/data.cs#1)]
 [!code-vb[exception.data#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/exception.data/VB/data.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.DictionaryEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public virtual Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Exception ^ GetBaseException();" />
      <MemberSignature Language="F#" Value="abstract member GetBaseException : unit -&gt; Exception&#xA;override this.GetBaseException : unit -&gt; Exception" Usage="exception.GetBaseException " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetBaseException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecb92-360">Gdy jest zastępowany w klasie pochodnej, zwraca <see cref="T:System.Exception" /> wartość będącą główną przyczyną jednego lub kilku kolejnych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-360">When overridden in a derived class, returns the <see cref="T:System.Exception" /> that is the root cause of one or more subsequent exceptions.</span></span></summary>
        <returns><span data-ttu-id="ecb92-361">Pierwszy wyjątek zgłoszony w łańcuchu wyjątków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-361">The first exception thrown in a chain of exceptions.</span></span> <span data-ttu-id="ecb92-362">Jeśli właściwość bieżącego wyjątku jest odwołaniem null (<see langword="Nothing" /> w Visual Basic), ta właściwość zwraca bieżący wyjątek. <see cref="P:System.Exception.InnerException" /></span><span class="sxs-lookup"><span data-stu-id="ecb92-362">If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (<see langword="Nothing" /> in Visual Basic), this property returns the current exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-363">Łańcuch wyjątków składa się z zestawu wyjątków, w taki sposób, że każdy wyjątek w łańcuchu został zgłoszony jako bezpośredni wynik wyjątku, do którego istnieje `InnerException` odwołanie w jego właściwości.</span><span class="sxs-lookup"><span data-stu-id="ecb92-363">A chain of exceptions consists of a set of exceptions such that each exception in the chain was thrown as a direct result of the exception referenced in its `InnerException` property.</span></span> <span data-ttu-id="ecb92-364">Dla danego łańcucha może istnieć tylko jeden wyjątek, który jest główną przyczyną wszystkich innych wyjątków w łańcuchu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-364">For a given chain, there can be exactly one exception that is the root cause of all other exceptions in the chain.</span></span> <span data-ttu-id="ecb92-365">Ten wyjątek nosi nazwę wyjątku podstawowego, a jego `InnerException` Właściwość zawsze zawiera odwołanie o wartości null.</span><span class="sxs-lookup"><span data-stu-id="ecb92-365">This exception is called the base exception and its `InnerException` property always contains a null reference.</span></span>  
  
 <span data-ttu-id="ecb92-366">Dla wszystkich wyjątków w łańcuchu wyjątków `GetBaseException` Metoda musi zwracać ten sam obiekt (wyjątek podstawowy).</span><span class="sxs-lookup"><span data-stu-id="ecb92-366">For all exceptions in a chain of exceptions, the `GetBaseException` method must return the same object (the base exception).</span></span>  
  
 <span data-ttu-id="ecb92-367">Użyj metody `GetBaseException` , jeśli chcesz znaleźć główną przyczynę wyjątku, ale nie potrzebujesz informacji o wyjątkach, które mogły wystąpić między bieżącym wyjątkiem a pierwszym wyjątkiem.</span><span class="sxs-lookup"><span data-stu-id="ecb92-367">Use the `GetBaseException` method when you want to find the root cause of an exception but do not need information about exceptions that may have occurred between the current exception and the first exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-368">Poniższy przykład kodu definiuje dwie klasy pochodne `Exception` .</span><span class="sxs-lookup"><span data-stu-id="ecb92-368">The following code example defines two derived `Exception` classes.</span></span> <span data-ttu-id="ecb92-369">Wymusza wyjątek, a następnie generuje go ponownie z każdą klasą pochodną.</span><span class="sxs-lookup"><span data-stu-id="ecb92-369">It forces an exception and then throws it again with each of the derived classes.</span></span> <span data-ttu-id="ecb92-370">Kod pokazuje użycie `GetBaseException` metody do pobrania oryginalnego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-370">The code shows the use of the `GetBaseException` method to retrieve the original exception.</span></span>  
  
 [!code-cpp[System.Exception.GetBaseException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CPP/getbaseexc.cpp#1)]
 [!code-csharp[System.Exception.GetBaseException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CS/getbaseexc.cs#1)]
 [!code-vb[System.Exception.GetBaseException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetBaseException/VB/getbaseexc.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecb92-371"><see langword="GetBaseException" /> Metoda jest zastępowana w klasach, które wymagają kontroli nad zawartością lub formatem wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-371">The <see langword="GetBaseException" /> method is overridden in classes that require control over the exception content or format.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="exception.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="ecb92-372"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Przechowujący dane serializowanego obiektu o generowanym wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-372">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="ecb92-373"><see cref="T:System.Runtime.Serialization.StreamingContext" /> Zawiera informacje kontekstowe o źródle lub miejscu docelowym.</span><span class="sxs-lookup"><span data-stu-id="ecb92-373">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="ecb92-374">Gdy jest zastępowany w klasie pochodnej, ustawia <see cref="T:System.Runtime.Serialization.SerializationInfo" /> informacje o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-374">When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-375">`GetObjectData`<xref:System.Runtime.Serialization.SerializationInfo> ustawia wszystkie dane obiektu wyjątku przeznaczone do serializacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-375">`GetObjectData` sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="ecb92-376">Podczas deserializacji wyjątek zostaje odtworzony od `SerializationInfo` przekazanego strumienia.</span><span class="sxs-lookup"><span data-stu-id="ecb92-376">During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-377">Poniższy przykład kodu definiuje pochodną klasę do `Exception` serializacji, która `GetObjectData`implementuje, która wprowadza drobne zmiany do dwóch właściwości, a następnie wywołuje klasę bazową w celu wykonania serializacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-377">The following code example defines a derived serializable `Exception` class that implements `GetObjectData`, which makes minor changes to two properties and then calls the base class to perform the serialization.</span></span> <span data-ttu-id="ecb92-378">Przykład wymusza błąd dzielenia przez 0, a następnie tworzy wystąpienie wyjątku pochodnego.</span><span class="sxs-lookup"><span data-stu-id="ecb92-378">The example forces a divide-by-0 error and then creates an instance of the derived exception.</span></span> <span data-ttu-id="ecb92-379">Kod serializować wystąpienie do pliku, deserializacji pliku do nowego wyjątku, który zgłasza, a następnie przechwytuje i wyświetla dane wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-379">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ecb92-380">Parametr jest odwołaniem o wartości null<see langword="Nothing" /> (w Visual Basic). <paramref name="info" /></span><span class="sxs-lookup"><span data-stu-id="ecb92-380">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ecb92-381">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="ecb92-381">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ecb92-382">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="ecb92-382">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="exception.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecb92-383">Pobiera typ środowiska uruchomieniowego bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ecb92-383">Gets the runtime type of the current instance.</span></span></summary>
        <returns><span data-ttu-id="ecb92-384"><see cref="T:System.Type" /> Obiekt, który reprezentuje dokładny typ środowiska uruchomieniowego bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ecb92-384">A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-385">Metoda istnieje do obsługi infrastruktury .NET Framework i wewnętrznie wywołuje metodę podstawową, <xref:System.Object.GetType%2A?displayProperty=nameWithType>. <xref:System.Exception.GetType%2A></span><span class="sxs-lookup"><span data-stu-id="ecb92-385">The <xref:System.Exception.GetType%2A> method exists to support the .NET Framework infrastructure, and internally invokes the fundamental method, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public virtual string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpLink : string with get, set" Usage="System.Exception.HelpLink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.HelpLink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecb92-386">Pobiera lub ustawia link do pliku pomocy skojarzonego z tym wyjątkiem.</span><span class="sxs-lookup"><span data-stu-id="ecb92-386">Gets or sets a link to the help file associated with this exception.</span></span></summary>
        <value><span data-ttu-id="ecb92-387">Jednolita nazwa zasobu (URN) lub adres URL (Uniform Resource Locator).</span><span class="sxs-lookup"><span data-stu-id="ecb92-387">The Uniform Resource Name (URN) or Uniform Resource Locator (URL).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-388">Wartość zwracana, która reprezentuje plik pomocy, jest URN lub adresem URL.</span><span class="sxs-lookup"><span data-stu-id="ecb92-388">The return value, which represents a help file, is a URN or URL.</span></span> <span data-ttu-id="ecb92-389">Na przykład może to `HelpLink` być:</span><span class="sxs-lookup"><span data-stu-id="ecb92-389">For example, the `HelpLink` value could be:</span></span>  
  
 <span data-ttu-id="ecb92-390">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span><span class="sxs-lookup"><span data-stu-id="ecb92-390">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-391">Poniższy przykład kodu zgłasza `Exception` , że `HelpLink` właściwość w jego konstruktorze, a następnie przechwytuje wyjątek i wyświetla `HelpLink`.</span><span class="sxs-lookup"><span data-stu-id="ecb92-391">The following code example throws an `Exception` that sets the `HelpLink` property in its constructor and then catches the exception and displays `HelpLink`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HResult">
      <MemberSignature Language="C#" Value="public int HResult { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HResult" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HResult" />
      <MemberSignature Language="VB.NET" Value="Public Property HResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:  property int HResult {  public:&#xA;int get(); protected:&#xA; void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HResult : int with get, set" Usage="System.Exception.HResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecb92-392">Pobiera lub ustawia wartość HRESULT, kodowane wartości liczbowe przypisane do określonego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-392">Gets or sets HRESULT, a coded numerical value that is assigned to a specific exception.</span></span></summary>
        <value><span data-ttu-id="ecb92-393">Wartość HRESULT.</span><span class="sxs-lookup"><span data-stu-id="ecb92-393">The HRESULT value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-394">HRESULT jest wartością 32-bitową podzieloną na trzy różne pola: kod ważności, kod obiektu i kod błędu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-394">HRESULT is a 32-bit value, divided into three different fields: a severity code, a facility code, and an error code.</span></span> <span data-ttu-id="ecb92-395">Kod ważności wskazuje, czy wartość zwracana reprezentuje informacje, ostrzeżenie lub błąd.</span><span class="sxs-lookup"><span data-stu-id="ecb92-395">The severity code indicates whether the return value represents information, warning, or error.</span></span> <span data-ttu-id="ecb92-396">Kod obiektu służy do identyfikowania obszaru systemu odpowiedzialnego za błąd.</span><span class="sxs-lookup"><span data-stu-id="ecb92-396">The facility code identifies the area of the system responsible for the error.</span></span> <span data-ttu-id="ecb92-397">Kod błędu jest unikatowym numerem, który jest przypisywany do reprezentowania wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-397">The error code is a unique number that is assigned to represent the exception.</span></span> <span data-ttu-id="ecb92-398">Każdy wyjątek jest mapowany na oddzielny wynik HRESULT.</span><span class="sxs-lookup"><span data-stu-id="ecb92-398">Each exception is mapped to a distinct HRESULT.</span></span> <span data-ttu-id="ecb92-399">Gdy kod zarządzany zgłasza wyjątek, środowisko uruchomieniowe przekazuje wynik HRESULT do klienta COM.</span><span class="sxs-lookup"><span data-stu-id="ecb92-399">When managed code throws an exception, the runtime passes the HRESULT to the COM client.</span></span> <span data-ttu-id="ecb92-400">Gdy kod niezarządzany zwraca błąd, wynik HRESULT jest konwertowany na wyjątek, który jest następnie generowany przez środowisko uruchomieniowe.</span><span class="sxs-lookup"><span data-stu-id="ecb92-400">When unmanaged code returns an error, the HRESULT is converted to an exception, which is then thrown by the runtime.</span></span> <span data-ttu-id="ecb92-401">Aby uzyskać informacje na temat wartości HRESULT i ich odpowiednich wyjątków .NET Framework [, zobacz How to: Mapuj HRESULTs i Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="ecb92-401">For information about HRESULT values and their corresponding .NET Framework exceptions, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span> <span data-ttu-id="ecb92-402">Zobacz [typowe wartości HRESULT](https://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) w dokumentacji systemu Windows, aby zapoznać się z listą wartości, które najprawdopodobniej napotkasz.</span><span class="sxs-lookup"><span data-stu-id="ecb92-402">See [Common HRESULT Values](https://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) in the Windows documentation for a list of the values you are most likely to encounter.</span></span>  
  
 <span data-ttu-id="ecb92-403">Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)] <xref:System.Exception.HResult%2A> , Metoda ustawiająca właściwości jest chroniona, podczas gdy jej metoda pobierająca jest publiczna.</span><span class="sxs-lookup"><span data-stu-id="ecb92-403">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Exception.HResult%2A> property's setter is protected, whereas its getter is public.</span></span>  <span data-ttu-id="ecb92-404">W poprzednich wersjach .NET Framework są chronione metody pobierające i setter.</span><span class="sxs-lookup"><span data-stu-id="ecb92-404">In previous versions of the .NET Framework, both getter and setter are protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-405">Poniższy przykład kodu definiuje klasę pochodną `Exception` , która `HResult` ustawia właściwość na wartość niestandardową w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="ecb92-405">The following code example defines a derived `Exception` class that sets the `HResult` property to a custom value in its constructor.</span></span>  
  
 [!code-cpp[System.Exception.HResult#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.HResult/CPP/hresult.cpp#1)]
 [!code-csharp[System.Exception.HResult#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.HResult/CS/hresult.cs#1)]
 [!code-vb[System.Exception.HResult#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.HResult/VB/hresult.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/610b364b-2761-429d-9c4a-afbc3e66f1b9"><span data-ttu-id="ecb92-406">Instrukcje: Mapowanie wyników HRESULT i wyjątków</span><span class="sxs-lookup"><span data-stu-id="ecb92-406">How to: Map HRESULTs and Exceptions</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/windows/desktop/aa378137.aspx"><span data-ttu-id="ecb92-407">Typowe wartości HRESULT</span><span class="sxs-lookup"><span data-stu-id="ecb92-407">Common HRESULT Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerException : Exception" Usage="System.Exception.InnerException" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.InnerException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecb92-408"><see cref="T:System.Exception" /> Pobiera wystąpienie, które spowodowało bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-408">Gets the <see cref="T:System.Exception" /> instance that caused the current exception.</span></span></summary>
        <value><span data-ttu-id="ecb92-409">Obiekt, który opisuje błąd, który spowodował bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-409">An object that describes the error that caused the current exception.</span></span> <span data-ttu-id="ecb92-410">Właściwość zwraca tę samą wartość, która została przekazana <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> do konstruktora, lub <see langword="null" /> Jeśli wewnętrzna wartość wyjątku nie została dostarczona do konstruktora. <see cref="P:System.Exception.InnerException" /></span><span class="sxs-lookup"><span data-stu-id="ecb92-410">The <see cref="P:System.Exception.InnerException" /> property returns the same value as was passed into the <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> constructor, or <see langword="null" /> if the inner exception value was not supplied to the constructor.</span></span> <span data-ttu-id="ecb92-411">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-411">This property is read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-412">Gdy `X` wyjątek jest zgłaszany jako bezpośredni wynik poprzedniego wyjątku <xref:System.Exception.InnerException%2A> `Y`, właściwość `X` powinna zawierać odwołanie do `Y`.</span><span class="sxs-lookup"><span data-stu-id="ecb92-412">When an exception `X` is thrown as a direct result of a previous exception `Y`, the <xref:System.Exception.InnerException%2A> property of `X` should contain a reference to `Y`.</span></span>  
  
 <span data-ttu-id="ecb92-413"><xref:System.Exception.InnerException%2A> Użyj właściwości, aby uzyskać zestaw wyjątków, które doprowadziły do bieżącego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-413">Use the <xref:System.Exception.InnerException%2A> property to obtain the set of exceptions that led to the current exception.</span></span>  
  
 <span data-ttu-id="ecb92-414">Można utworzyć nowy wyjątek, który przechwytuje wcześniejszy wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-414">You can create a new exception that catches an earlier exception.</span></span> <span data-ttu-id="ecb92-415">Kod, który obsługuje drugi wyjątek, może używać dodatkowych informacji z wcześniejszego wyjątku, aby bardziej odpowiednio obsłużyć błąd.</span><span class="sxs-lookup"><span data-stu-id="ecb92-415">The code that handles the second exception can make use of the additional information from the earlier exception to handle the error more appropriately.</span></span>  
  
 <span data-ttu-id="ecb92-416">Załóżmy, że istnieje funkcja, która odczytuje plik i formatuje dane z tego pliku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-416">Suppose that there is a function that reads a file and formats the data from that file.</span></span> <span data-ttu-id="ecb92-417">W tym przykładzie, ponieważ kod próbuje odczytać plik, <xref:System.IO.IOException> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ecb92-417">In this example, as the code tries to read the file, an <xref:System.IO.IOException> is thrown.</span></span> <span data-ttu-id="ecb92-418">Funkcja przechwytuje <xref:System.IO.IOException> i <xref:System.IO.FileNotFoundException>zgłasza.</span><span class="sxs-lookup"><span data-stu-id="ecb92-418">The function catches the <xref:System.IO.IOException> and throws a <xref:System.IO.FileNotFoundException>.</span></span> <span data-ttu-id="ecb92-419">Może być zapisany <xref:System.Exception.InnerException%2A> we właściwości <xref:System.IO.FileNotFoundException>, co umożliwia kod, który przechwytuje, <xref:System.IO.FileNotFoundException> aby poznać przyczynę błędu początkowego. <xref:System.IO.IOException></span><span class="sxs-lookup"><span data-stu-id="ecb92-419">The <xref:System.IO.IOException> could be saved in the <xref:System.Exception.InnerException%2A> property of the <xref:System.IO.FileNotFoundException>, enabling the code that catches the <xref:System.IO.FileNotFoundException> to examine the cause of the initial error.</span></span>  
  
 <span data-ttu-id="ecb92-420"><xref:System.Exception.InnerException%2A> Właściwość, która przechowuje odwołanie do wewnętrznego wyjątku, jest ustawiana podczas inicjowania obiektu Exception.</span><span class="sxs-lookup"><span data-stu-id="ecb92-420">The <xref:System.Exception.InnerException%2A> property, which holds a reference to the inner exception, is set upon initialization of the exception object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-421">Poniższy przykład demonstruje generowanie i przechwytywanie wyjątku, który odwołuje się do wyjątku wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="ecb92-421">The following example demonstrates throwing and catching an exception that references an inner exception.</span></span>  
  
 [!code-cpp[InnerEx#1](~/samples/snippets/cpp/VS_Snippets_CLR/InnerEx/CPP/innerex.cpp#1)]
 [!code-csharp[InnerEx#1](~/samples/snippets/csharp/VS_Snippets_CLR/InnerEx/CS/innerex.cs#1)]
 [!code-vb[InnerEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InnerEx/VB/innerex.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public virtual string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Exception.Message" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Message</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecb92-422">Pobiera komunikat, który opisuje bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-422">Gets a message that describes the current exception.</span></span></summary>
        <value><span data-ttu-id="ecb92-423">Komunikat o błędzie objaśniający przyczynę wyjątku lub pusty ciąg ("").</span><span class="sxs-lookup"><span data-stu-id="ecb92-423">The error message that explains the reason for the exception, or an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-424">Komunikaty o błędach są przeznaczone dla deweloperów, którzy obsługują wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-424">Error messages target the developer who is handling the exception.</span></span> <span data-ttu-id="ecb92-425">Tekst <xref:System.Exception.Message%2A> właściwości powinien całkowicie opisać błąd i, jeśli to możliwe, powinien również wyjaśnić, jak naprawić błąd.</span><span class="sxs-lookup"><span data-stu-id="ecb92-425">The text of the <xref:System.Exception.Message%2A> property should completely describe the error and, when possible, should also explain how to correct the error.</span></span> <span data-ttu-id="ecb92-426">Programy obsługi wyjątków najwyższego poziomu mogą wyświetlać komunikat dla użytkowników końcowych, dlatego należy upewnić się, że jest on poprawny gramatycznie i że każde zdanie komunikatu kończy się kropką.</span><span class="sxs-lookup"><span data-stu-id="ecb92-426">Top-level exception handlers may display the message to end-users, so you should ensure that it is grammatically correct and that each sentence of the message ends with a period.</span></span> <span data-ttu-id="ecb92-427">Nie należy używać znaków zapytania ani wykrzykników.</span><span class="sxs-lookup"><span data-stu-id="ecb92-427">Do not use question marks or exclamation points.</span></span> <span data-ttu-id="ecb92-428">Jeśli aplikacja używa zlokalizowanych komunikatów o wyjątkach, należy się upewnić, że są one dokładnie tłumaczone.</span><span class="sxs-lookup"><span data-stu-id="ecb92-428">If your application uses localized exception messages, you should ensure that they are accurately translated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ecb92-429">Nie ujawniaj poufnych informacji w komunikatach o wyjątku bez sprawdzania odpowiednich uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ecb92-429">Do not disclose sensitive information in exception messages without checking for the appropriate permissions.</span></span>  
  
 <span data-ttu-id="ecb92-430">Wartość <xref:System.Exception.Message%2A> właściwości jest uwzględniona w informacjach zwracanych przez <xref:System.Exception.ToString%2A>. Właściwość jest ustawiana tylko podczas <xref:System.Exception>tworzenia. <xref:System.Exception.Message%2A></span><span class="sxs-lookup"><span data-stu-id="ecb92-430">The value of the <xref:System.Exception.Message%2A> property is included in the information returned by <xref:System.Exception.ToString%2A>.The <xref:System.Exception.Message%2A> property is set only when creating an <xref:System.Exception>.</span></span> <span data-ttu-id="ecb92-431">Jeśli żaden komunikat nie został dostarczony do konstruktora dla bieżącego wystąpienia, system poda komunikat domyślny sformatowany przy użyciu bieżącej kultury systemowej.</span><span class="sxs-lookup"><span data-stu-id="ecb92-431">If no message was supplied to the constructor for the current instance, the system supplies a default message that is formatted using the current system culture.</span></span>  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="ecb92-432">środowisko wykonawcze systemu Windows i[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="ecb92-432">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="ecb92-433">Poczynając od [!INCLUDE[net_v451](~/includes/net-v451-md.md)] programu [!INCLUDE[win81](~/includes/win81-md.md)]i, wierność komunikatów o błędach z wyjątków, które są propagowane z typów środowisko wykonawcze systemu Windows i elementów członkowskich, które nie są częścią .NET Framework, jest ulepszona.</span><span class="sxs-lookup"><span data-stu-id="ecb92-433">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the fidelity of error messages from exceptions that are propagated from Windows Runtime types and members that are not part of the .NET Framework is improved.</span></span> <span data-ttu-id="ecb92-434">W szczególności komunikaty o wyjątkach z C++ rozszerzeń składników wizualnych (C++/CX) są teraz propagowane z <xref:System.Exception> powrotem do .NET Framework obiektów.</span><span class="sxs-lookup"><span data-stu-id="ecb92-434">In particular, exception messages from Visual C++ component extensions (C++/CX) are now propagated back into .NET Framework <xref:System.Exception> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-435">Poniższy przykład kodu zgłasza, a następnie przechwytuje <xref:System.Exception> wyjątek i wyświetla komunikat tekstowy wyjątku <xref:System.Exception.Message%2A> przy użyciu właściwości.</span><span class="sxs-lookup"><span data-stu-id="ecb92-435">The following code example throws and then catches an <xref:System.Exception> exception and displays the exception's text message using the <xref:System.Exception.Message%2A> property.</span></span>
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecb92-436">Jeśli zgłaszasz wyjątek z właściwości i musisz odwołać się w tekście <see cref="P:System.Exception.Message" /> do argumentu właściwości, który został ustawiony lub pobrany, użyj "value" jako nazwy argumentu właściwości.</span><span class="sxs-lookup"><span data-stu-id="ecb92-436">If you throw an exception from a property, and you need to refer in the text of <see cref="P:System.Exception.Message" /> to the property argument that you set or get, use "value" as the name of the property argument.</span></span></para></block>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecb92-437"><see cref="P:System.Exception.Message" /> Właściwość jest zastępowana w klasach, które wymagają kontroli nad zawartością lub formatem wiadomości.</span><span class="sxs-lookup"><span data-stu-id="ecb92-437">The <see cref="P:System.Exception.Message" /> property is overridden in classes that require control over message content or format.</span></span> <span data-ttu-id="ecb92-438">Kod aplikacji zwykle uzyskuje dostęp do tej właściwości, gdy musi wyświetlić informacje o wychwyconym wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-438">Application code typically accesses this property when it needs to display information about an exception that has been caught.</span></span>  
  
<span data-ttu-id="ecb92-439">Komunikat o błędzie powinien być zlokalizowany.</span><span class="sxs-lookup"><span data-stu-id="ecb92-439">The error message should be localized.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SerializeObjectState">
      <MemberSignature Language="C#" Value="protected event EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState" />
      <MemberSignature Language="DocId" Value="E:System.Exception.SerializeObjectState" />
      <MemberSignature Language="VB.NET" Value="Protected Custom Event SerializeObjectState As EventHandler(Of SafeSerializationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; event EventHandler&lt;System::Runtime::Serialization::SafeSerializationEventArgs ^&gt; ^ SerializeObjectState;" />
      <MemberSignature Language="F#" Value="member this.SerializeObjectState : EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; " Usage="member this.SerializeObjectState : System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecb92-440">Występuje, gdy wyjątek jest serializowany w celu utworzenia obiektu stanu wyjątku, który zawiera serializowane dane dotyczące wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-440">Occurs when an exception is serialized to create an exception state object that contains serialized data about the exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-441">Obiekt stanu wyjątku implementuje <xref:System.Runtime.Serialization.ISafeSerializationData> interfejs.</span><span class="sxs-lookup"><span data-stu-id="ecb92-441">The exception state object implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 <span data-ttu-id="ecb92-442">Po zasubskrybowaniu <xref:System.Exception.SerializeObjectState> zdarzenia wyjątek jest deserializowany i tworzony jako pusty wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-442">When the <xref:System.Exception.SerializeObjectState> event is subscribed to, the exception is deserialized and created as an empty exception.</span></span> <span data-ttu-id="ecb92-443">Konstruktor wyjątku nie jest uruchomiony, a stan wyjątku jest również deserializowany.</span><span class="sxs-lookup"><span data-stu-id="ecb92-443">The exception's constructor is not run, and the exception state is also deserialized.</span></span> <span data-ttu-id="ecb92-444">Metoda <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> wywołania zwrotnego obiektu stanu wyjątku jest następnie powiadamiana, aby można było wypchnąć deserializowane dane do pustego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-444">The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> callback method of the exception state object is then notified so that it can push deserialized data into the empty exception.</span></span>  
  
 <span data-ttu-id="ecb92-445"><xref:System.Exception.SerializeObjectState> Zdarzenie włącza przezroczyste typy wyjątków do serializacji i deserializacji danych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="ecb92-445">The <xref:System.Exception.SerializeObjectState> event enables transparent exception types to serialize and deserialize exception data.</span></span> <span data-ttu-id="ecb92-446">Kod przezroczysty może wykonywać polecenia w granicach zestawu uprawnień, który działa w ramach, ale nie może wykonać wywołania, wywołać, pochodzić z lub zawierać kod krytyczny.</span><span class="sxs-lookup"><span data-stu-id="ecb92-446">Transparent code can execute commands within the bounds of the permission set it is operating within, but cannot execute, call, derive from, or contain critical code.</span></span>  
  
 <span data-ttu-id="ecb92-447">Jeśli zdarzenie nie jest subskrybowane, deserializacja odbywa się w zwykły sposób <xref:System.Exception.%23ctor%2A> przy użyciu konstruktora. <xref:System.Exception.SerializeObjectState></span><span class="sxs-lookup"><span data-stu-id="ecb92-447">If the <xref:System.Exception.SerializeObjectState> event is not subscribed to, deserialization occurs as usual using the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="ecb92-448">Zazwyczaj procedura obsługi <xref:System.Exception.SerializeObjectState> zdarzenia jest dodawana w konstruktorze wyjątku w celu zapewnienia serializacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-448">Typically, a handler for the <xref:System.Exception.SerializeObjectState> event is added in the exception's constructor to provide for its serialization.</span></span> <span data-ttu-id="ecb92-449">Jednak, ponieważ Konstruktor nie jest wykonywany, gdy <xref:System.Exception.SerializeObjectState> program obsługi zdarzeń jest wykonywany, Serializowanie wyjątku deserializowanego może <xref:System.Runtime.Serialization.SerializationException> zgłosić wyjątek podczas próby deserializacji wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-449">But because the constructor is not executed when the <xref:System.Exception.SerializeObjectState> event handler executes, serializing a deserialized exception can throw a <xref:System.Runtime.Serialization.SerializationException> exception when you try to deserialize the exception.</span></span> <span data-ttu-id="ecb92-450">Aby tego uniknąć, należy również dodać procedurę obsługi dla <xref:System.Exception.SerializeObjectState> zdarzenia <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> w metodzie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-450">To avoid this, you should also add the handler for the <xref:System.Exception.SerializeObjectState> event in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ecb92-451">Zobacz sekcję przykłady, aby zapoznać się z ilustracją.</span><span class="sxs-lookup"><span data-stu-id="ecb92-451">See the Examples section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-452">W poniższym przykładzie zdefiniowano `BadDivisionException` , który <xref:System.Exception.SerializeObjectState> obsługuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-452">The following example defines a `BadDivisionException` that handles the <xref:System.Exception.SerializeObjectState> event.</span></span> <span data-ttu-id="ecb92-453">Zawiera również obiekt stanu, który jest zagnieżdżoną strukturą o nazwie `BadDivisionExceptionState` <xref:System.Runtime.Serialization.ISafeSerializationData> implementującej interfejs.</span><span class="sxs-lookup"><span data-stu-id="ecb92-453">It also contains a state object, which is a nested structure named `BadDivisionExceptionState` that implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 [!code-csharp[System.Exception.SerializeObjectState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.serializeobjectstate/cs/example2.cs#1)]
 [!code-vb[System.Exception.SerializeObjectState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.serializeobjectstate/vb/example2.vb#1)]  
  
 <span data-ttu-id="ecb92-454">`BadDivisionException` Wyjątek jest zgłaszany, gdy występuje dzielenie zmiennoprzecinkowe przez zero.</span><span class="sxs-lookup"><span data-stu-id="ecb92-454">The `BadDivisionException` exception is thrown when a floating-point division by zero occurs.</span></span> <span data-ttu-id="ecb92-455">Podczas pierwszego dzielenia przez zero, przykład tworzy `BadDivisionException` obiekt, serializować go i zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-455">During the first division by zero, the example instantiates a `BadDivisionException` object, serializes it, and throws the exception.</span></span> <span data-ttu-id="ecb92-456">Gdy występują kolejne podziały przez zero, przykład deserializacji poprzednio serializowanego obiektu, deserializacji go i zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-456">When subsequent divisions by zero occur, the example deserializes the  previously serialized object, reserializes it, and throws the exception.</span></span> <span data-ttu-id="ecb92-457">W celu zapewnienia serializacji obiektu, deserializacji, deserializacji i deserializacji, przykład dodaje <xref:System.Exception.SerializeObjectState> procedurę obsługi zdarzeń zarówno `BadDivisionException` w konstruktorze <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> klasy, jak i w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-457">To provide for object serialization, deserialization, reserialization, and deserialization, the example adds the <xref:System.Exception.SerializeObjectState> event handler both in the `BadDivisionException` class constructor and in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecb92-458">Jeśli to zdarzenie jest subskrybowane i używane, wszystkie typy pochodne, które są zgodne w hierarchii dziedziczenia, muszą implementować ten sam mechanizm serializacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-458">If this event is subscribed to and used, all derived types that follow in the inheritance hierarchy must implement the same serialization mechanism.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public virtual string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Exception.Source" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecb92-459">Pobiera lub ustawia nazwę aplikacji lub obiekt, który powoduje błąd.</span><span class="sxs-lookup"><span data-stu-id="ecb92-459">Gets or sets the name of the application or the object that causes the error.</span></span></summary>
        <value><span data-ttu-id="ecb92-460">Nazwa aplikacji lub obiektu, który powoduje błąd.</span><span class="sxs-lookup"><span data-stu-id="ecb92-460">The name of the application or the object that causes the error.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-461"><xref:System.Exception.Source%2A> Jeśli właściwość nie zostanie ustawiona jawnie, środowisko uruchomieniowe automatycznie ustawi ją na nazwę zestawu, z którego pochodzi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-461">If the <xref:System.Exception.Source%2A> property is not set explicitly, the runtime automatically sets it to the name of the assembly in which the exception originated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-462">Poniższy przykład zgłasza `Exception` , że `Source` ustawia właściwość w jego konstruktorze, a następnie przechwytuje wyjątek i wyświetla `Source`.</span><span class="sxs-lookup"><span data-stu-id="ecb92-462">The following example throws an `Exception` that sets the `Source` property in its constructor and then catches the exception and displays `Source`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ecb92-463">Obiekt musi być obiektem środowiska <see cref="N:System.Reflection" /> uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="ecb92-463">The object must be a runtime <see cref="N:System.Reflection" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public virtual string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="System.Exception.StackTrace" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.StackTrace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecb92-464">Pobiera ciąg reprezentujący bezpośrednie ramki w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="ecb92-464">Gets a string representation of the immediate frames on the call stack.</span></span></summary>
        <value><span data-ttu-id="ecb92-465">Ciąg, który opisuje bezpośrednie klatki stosu wywołań.</span><span class="sxs-lookup"><span data-stu-id="ecb92-465">A string that describes the immediate frames of the call stack.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-466">Stos wykonywania śledzi wszystkie metody, które są wykonywane w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-466">The execution stack keeps track of all the methods that are in execution at a given instant.</span></span> <span data-ttu-id="ecb92-467">Śledzenie wywołań metod jest nazywane śladem stosu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-467">A trace of the method calls is called a stack trace.</span></span> <span data-ttu-id="ecb92-468">Lista śladów stosu zapewnia sposób, aby postępować zgodnie ze stosem wywołań do numeru wiersza w metodzie, w której występuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-468">The stack trace listing provides a way to follow the call stack to the line number in the method where the exception occurs.</span></span>  
  
 <span data-ttu-id="ecb92-469"><xref:System.Exception.StackTrace%2A> Właściwość zwraca ramki stosu wywołań, które pochodzą z lokalizacji, w której został zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-469">The <xref:System.Exception.StackTrace%2A> property returns the frames of the call stack that originate at the location where the exception was thrown.</span></span> <span data-ttu-id="ecb92-470">Możesz uzyskać informacje o dodatkowych klatkach w stosie wywołań, tworząc nowe wystąpienie <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> klasy i używając jej <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ecb92-470">You can obtain information about additional frames in the call stack by creating a new instance of the <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> class and using its <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ecb92-471">Środowisko uruchomieniowe języka wspólnego (CLR) aktualizuje ślad stosu za każdym razem, gdy wyjątek jest zgłaszany w kodzie aplikacji `throw` (za pomocą słowa kluczowego).</span><span class="sxs-lookup"><span data-stu-id="ecb92-471">The common language runtime (CLR) updates the stack trace whenever an exception is thrown in application code (by using the `throw` keyword).</span></span> <span data-ttu-id="ecb92-472">Jeśli wyjątek został ponownie zgłoszony w metodzie, która jest inna niż metoda, w której został pierwotnie zgłoszony, ślad stosu zawiera zarówno lokalizację w metodzie, w której został wygenerowany wyjątek, jak i lokalizację w metodzie, w której wystąpił wyjątek zgłaszany ponownie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-472">If the exception was rethrown in a method that is different than the method where it was originally thrown, the stack trace contains both the location in the method where the exception was originally thrown, and the location in the method where the exception was rethrown.</span></span> <span data-ttu-id="ecb92-473">Jeśli wyjątek jest zgłaszany, a później ponownie zgłaszany, w tej samej metodzie ślad stosu zawiera tylko lokalizację, w której wyjątek został ponownie zgłoszony i nie zawiera lokalizacji, w której pierwotnie został zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-473">If the exception is thrown, and later rethrown, in the same method, the stack trace only contains the location where the exception was rethrown and does not include the location where the exception was originally thrown.</span></span>  
  
 <span data-ttu-id="ecb92-474"><xref:System.Exception.StackTrace%2A> Właściwość może nie raportować tylu wywołań metod zgodnie z oczekiwaniami, ponieważ przekształcenia kodu, takie jak derysowanie, występują podczas optymalizacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-474">The <xref:System.Exception.StackTrace%2A> property may not report as many method calls as expected because of code transformations, such as inlining, that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-475">Poniższy przykład kodu zgłasza `Exception` , a następnie przechwytuje i wyświetla ślad stosu `StackTrace` przy użyciu właściwości.</span><span class="sxs-lookup"><span data-stu-id="ecb92-475">The following code example throws an `Exception` and then catches it and displays a stack trace using the `StackTrace` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecb92-476"><see langword="StackTrace" /> Właściwość jest zastępowana w klasach, które wymagają kontroli nad zawartością lub formatem śladu stosu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-476">The <see langword="StackTrace" /> property is overridden in classes that require control over the stack trace content or format.</span></span>  
  
<span data-ttu-id="ecb92-477">Domyślnie ślad stosu jest przechwytywany bezpośrednio przed zgłoszeniem obiektu wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-477">By default, the stack trace is captured immediately before an exception object is thrown.</span></span> <span data-ttu-id="ecb92-478">Użyj <see cref="P:System.Environment.StackTrace" /> , aby uzyskać informacje o śledzeniu stosu, gdy żaden wyjątek nie jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="ecb92-478">Use <see cref="P:System.Environment.StackTrace" /> to get stack trace information when no exception is being thrown.</span></span></para></block>
        <altmember cref="P:System.Environment.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSite : System.Reflection.MethodBase" Usage="System.Exception.TargetSite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.TargetSite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecb92-479">Pobiera metodę, która zgłasza bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-479">Gets the method that throws the current exception.</span></span></summary>
        <value><span data-ttu-id="ecb92-480"><see cref="T:System.Reflection.MethodBase" /> , Który wywołał bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-480">The <see cref="T:System.Reflection.MethodBase" /> that threw the current exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-481">Jeśli metoda zwracająca ten wyjątek jest niedostępna, a ślad stosu nie jest odwołaniem null (`Nothing` w Visual Basic), <xref:System.Exception.TargetSite%2A> uzyskuje metodę z śladu stosu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-481">If the method that throws this exception is not available and the stack trace is not a null reference (`Nothing` in Visual Basic), <xref:System.Exception.TargetSite%2A> obtains the method from the stack trace.</span></span> <span data-ttu-id="ecb92-482">Jeśli ślad stosu jest odwołaniem o wartości null <xref:System.Exception.TargetSite%2A> , zwraca również odwołanie o wartości null.</span><span class="sxs-lookup"><span data-stu-id="ecb92-482">If the stack trace is a null reference, <xref:System.Exception.TargetSite%2A> also returns a null reference.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ecb92-483"><xref:System.Exception.TargetSite%2A> Właściwość może nieprawidłowo zgłosić nazwę metody, w której wystąpił wyjątek, jeśli procedura obsługi wyjątków obsługuje wyjątek między domeną aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ecb92-483">The <xref:System.Exception.TargetSite%2A> property may not accurately report the name of the method in which an exception was thrown if the exception handler handles an exception across application domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-484">Poniższy przykład kodu zgłasza `Exception` , a następnie przechwytuje i wyświetla metodę źródłową `TargetSite` przy użyciu właściwości.</span><span class="sxs-lookup"><span data-stu-id="ecb92-484">The following code example throws an `Exception` and then catches it and displays the originating method using the `TargetSite` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="exception.ToString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecb92-485">Tworzy i zwraca reprezentację ciągu bieżącego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-485">Creates and returns a string representation of the current exception.</span></span></summary>
        <returns><span data-ttu-id="ecb92-486">Ciąg reprezentujący bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ecb92-486">A string representation of the current exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecb92-487"><xref:System.Exception.ToString%2A>Zwraca reprezentację bieżącego wyjątku, która ma być zrozumiała dla ludzi.</span><span class="sxs-lookup"><span data-stu-id="ecb92-487"><xref:System.Exception.ToString%2A> returns a representation of the current exception that is intended to be understood by humans.</span></span> <span data-ttu-id="ecb92-488">W przypadku, gdy wyjątek zawiera dane zależne od kultury, reprezentacja `ToString` ciągu zwracanego przez jest wymagana do uwzględnienia bieżącej kultury systemowej.</span><span class="sxs-lookup"><span data-stu-id="ecb92-488">Where the exception contains culture-sensitive data, the string representation returned by `ToString` is required to take into account the current system culture.</span></span> <span data-ttu-id="ecb92-489">Chociaż nie ma dokładnych wymagań dotyczących formatu zwracanego ciągu, powinien on próbować odzwierciedlić wartość obiektu, tak jak zostało to postrzegane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ecb92-489">Although there are no exact requirements for the format of the returned string, it should attempt to reflect the value of the object as perceived by the user.</span></span>  
  
 <span data-ttu-id="ecb92-490">Domyślna implementacja programu <xref:System.Exception.ToString%2A> uzyskuje nazwę klasy, która wywołała bieżący wyjątek, komunikat, wynik wywołania <xref:System.Exception.ToString%2A> wyjątku wewnętrznego i wynik wywołania <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ecb92-490">The default implementation of <xref:System.Exception.ToString%2A> obtains the name of the class that threw the current exception, the message, the result of calling <xref:System.Exception.ToString%2A> on the inner exception, and the result of calling <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ecb92-491">Jeśli którykolwiek z tych elementów członkowskich `null`jest, jego wartość nie jest uwzględniona w zwracanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="ecb92-491">If any of these members is `null`, its value is not included in the returned string.</span></span>  
  
 <span data-ttu-id="ecb92-492">Jeśli nie ma komunikatu o błędzie lub jeśli jest to ciąg pusty (""), nie zostanie zwrócony żaden komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="ecb92-492">If there is no error message or if it is an empty string (""), then no error message is returned.</span></span> <span data-ttu-id="ecb92-493">Nazwa wewnętrznego wyjątku i ślad stosu są zwracane tylko wtedy, gdy nie `null`są.</span><span class="sxs-lookup"><span data-stu-id="ecb92-493">The name of the inner exception and the stack trace are returned only if they are not `null`.</span></span>  
  
 <span data-ttu-id="ecb92-494">Ta metoda przesłania <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ecb92-494">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecb92-495">Poniższy przykład powoduje wystąpienie wyjątku i wyświetla wynik wywołania <xref:System.Exception.ToString%2A> tego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ecb92-495">The following example causes an exception and displays the result of calling <xref:System.Exception.ToString%2A> on that exception.</span></span> <span data-ttu-id="ecb92-496">Należy zauważyć, <xref:System.Exception.ToString%2A?displayProperty=nameWithType> że metoda jest wywoływana niejawnie, gdy wystąpienie klasy wyjątku pojawia się na liście <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> argumentów metody.</span><span class="sxs-lookup"><span data-stu-id="ecb92-496">Note that the <xref:System.Exception.ToString%2A?displayProperty=nameWithType> method is called implicitly when the Exception class instance appears in the argument list of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Exception.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.exception.tostring/cpp/ToStringEx1.cpp#1)]
 [!code-csharp[System.Exception.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.tostring/cs/ToStringEx1.cs#1)]
 [!code-vb[System.Exception.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.tostring/vb/ToStringEx1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
