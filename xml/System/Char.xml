<Type Name="Char" FullName="System.Char">
  <TypeSignature Language="C#" Value="public struct Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit char extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Char" />
  <TypeSignature Language="VB.NET" Value="Public Structure Char&#xA;Implements IComparable, IComparable(Of Char), IConvertible, IEquatable(Of Char)" />
  <TypeSignature Language="C++ CLI" Value="public value class Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c4456-101">Reprezentuje znak jako jednostka kodu UTF-16.</span><span class="sxs-lookup"><span data-stu-id="c4456-101">Represents a character as a UTF-16 code unit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-102">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Używa <xref:System.Char> struktury do reprezentowania znak Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-102">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character.</span></span> <span data-ttu-id="c4456-103">Unicode Standard identyfikuje każdego znaku Unicode o unikatowy numer skalarne 21-bitowe o nazwie punkt kodu i definiuje formularzu kodowania UTF-16, który określa, jak punkt kodu jest zakodowany w sekwencji jedną lub więcej wartości 16-bitowych.</span><span class="sxs-lookup"><span data-stu-id="c4456-103">The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</span></span> <span data-ttu-id="c4456-104">Każda wartość 16-bitowych zakresów z szesnastkowe 0x0000 do 0xFFFF i są przechowywane w <xref:System.Char> struktury.</span><span class="sxs-lookup"><span data-stu-id="c4456-104">Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.</span></span>  <span data-ttu-id="c4456-105">Wartość <xref:System.Char> obiektu jest jego wartość numeryczną 16-bitowych (numer).</span><span class="sxs-lookup"><span data-stu-id="c4456-105">The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.</span></span>  
  
 <span data-ttu-id="c4456-106">Poniższe sekcje bada związek między <xref:System.Char> obiekt i znak oraz omówimy niektóre typowe zadania wykonywane z <xref:System.Char> wystąpień.</span><span class="sxs-lookup"><span data-stu-id="c4456-106">The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.</span></span>  
  
 <span data-ttu-id="c4456-107">[Obiekty char, znaków Unicode i ciągi](#Relationship) </span><span class="sxs-lookup"><span data-stu-id="c4456-107">[Char objects, Unicode characters, and strings](#Relationship) </span></span>  
 <span data-ttu-id="c4456-108">[Znaki i kategorie znaków](#Categories) </span><span class="sxs-lookup"><span data-stu-id="c4456-108">[Characters and character categories](#Categories) </span></span>  
 <span data-ttu-id="c4456-109">[Znaki i tekstowych elementów](#Elements) </span><span class="sxs-lookup"><span data-stu-id="c4456-109">[Characters and text elements](#Elements) </span></span>  
 <span data-ttu-id="c4456-110">[Typowe operacje](#Operations) </span><span class="sxs-lookup"><span data-stu-id="c4456-110">[Common operations](#Operations) </span></span>  
 [<span data-ttu-id="c4456-111">Wartości CHAR i międzyoperacyjne</span><span class="sxs-lookup"><span data-stu-id="c4456-111">Char values and interop</span></span>](#Interop)  
  
<a name="Relationship"></a>   
## <a name="char-objects-unicode-characters-and-strings"></a><span data-ttu-id="c4456-112">Obiekty char, znaków Unicode i ciągi</span><span class="sxs-lookup"><span data-stu-id="c4456-112">Char objects, Unicode characters, and strings</span></span>  
 <span data-ttu-id="c4456-113">A <xref:System.String> obiektu jest kolekcją sekwencyjnych <xref:System.Char> struktur, które reprezentuje ciągu tekstowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-113">A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text.</span></span> <span data-ttu-id="c4456-114">Znaki Unicode mogą być reprezentowane przez jeden <xref:System.Char> obiektu, ale znak, który został zakodowany jako znaku podstawowego para zastępcza i/lub łączenie sekwencja znaków jest reprezentowany przez wiele <xref:System.Char> obiektów.</span><span class="sxs-lookup"><span data-stu-id="c4456-114">Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="c4456-115">Z tego powodu <xref:System.Char> struktury w <xref:System.String> obiekt nie jest odpowiednikiem niekoniecznie pojedynczy znak Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-115">For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.</span></span>  
  
 <span data-ttu-id="c4456-116">Wiele jednostek 16-bitowego kodu są używane do reprezentowania pojedynczy znaki Unicode w następujących przypadkach:</span><span class="sxs-lookup"><span data-stu-id="c4456-116">Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</span></span>  
  
-   <span data-ttu-id="c4456-117">Symbole, które mogą składać się z jednego znaku lub znaku podstawowego następuje co najmniej jeden znak łączenie.</span><span class="sxs-lookup"><span data-stu-id="c4456-117">Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</span></span> <span data-ttu-id="c4456-118">Na przykład znak ä jest reprezentowany przez a <xref:System.Char> obiektu kod, którego jednostka to U + 0061 następuje a <xref:System.Char> obiektu, którego jednostka kodu jest U + 0308.</span><span class="sxs-lookup"><span data-stu-id="c4456-118">For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308.</span></span> <span data-ttu-id="c4456-119">(Ä znak może być także definiowane przez pojedynczy a <xref:System.Char> obiektu, który ma jednostki kodu a U + 00E4.) Poniższy przykład pokazuje, że znaku ä składa się z dwóch <xref:System.Char> obiektów.</span><span class="sxs-lookup"><span data-stu-id="c4456-119">(The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.</span></span>  
  
     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]
     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  
  
-   <span data-ttu-id="c4456-120">Znaki poza płaszczyzny wielojęzyczny Unicode Basic (BMP).</span><span class="sxs-lookup"><span data-stu-id="c4456-120">Characters outside the Unicode Basic Multilingual Plane (BMP).</span></span> <span data-ttu-id="c4456-121">Unicode obsługuje szesnastu płaszczyzn oprócz BMP, który reprezentuje płaszczyzny 0.</span><span class="sxs-lookup"><span data-stu-id="c4456-121">Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</span></span> <span data-ttu-id="c4456-122">Wartość 21-bitowego, która obejmuje płaszczyzny odpowiada punkt kodu Unicode w UTF-32.</span><span class="sxs-lookup"><span data-stu-id="c4456-122">A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</span></span> <span data-ttu-id="c4456-123">Na przykład U + 1D160 reprezentuje znak ÓSEMKA symbolu.</span><span class="sxs-lookup"><span data-stu-id="c4456-123">For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</span></span> <span data-ttu-id="c4456-124">Ponieważ kodowania UTF-16 ma tylko 16 bitów, znaki spoza BMP są reprezentowane przez znaki dwuskładnikowe UTF-16.</span><span class="sxs-lookup"><span data-stu-id="c4456-124">Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</span></span> <span data-ttu-id="c4456-125">Poniższy przykład przedstawia, to U + D834 U + DD60 odpowiednikiem U + 1D160, znak symbolu ÓSEMKA UTF-32.</span><span class="sxs-lookup"><span data-stu-id="c4456-125">The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</span></span> <span data-ttu-id="c4456-126">U + D834 jest znakiem zastępczym wysokiego poziomu; Wysoka surogatów z zakresu od U + D800 za pośrednictwem U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="c4456-126">U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</span></span> <span data-ttu-id="c4456-127">U + DD60 jest dwuskładnikowego; niski surogatów z zakresu od U + DC00 za pośrednictwem U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="c4456-127">U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</span></span>  
  
     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]
     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  
  
<a name="Categories"></a>   
## <a name="characters-and-character-categories"></a><span data-ttu-id="c4456-128">Znaki i kategorie znaków</span><span class="sxs-lookup"><span data-stu-id="c4456-128">Characters and character categories</span></span>  
 <span data-ttu-id="c4456-129">Każdy znak Unicode, lub para zastępcza prawidłowy należy do kategorii Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-129">Each Unicode character or valid surrogate pair belongs to a Unicode category.</span></span> <span data-ttu-id="c4456-130">W programie .NET Framework, kodowania Unicode z kategorii są reprezentowane przez członków <xref:System.Globalization.UnicodeCategory> wyliczenie i obejmują takie jak wartości <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, i <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, na przykład.</span><span class="sxs-lookup"><span data-stu-id="c4456-130">In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, and <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, for example.</span></span>  
  
 <span data-ttu-id="c4456-131">Aby określić kategorię znak Unicode, należy wywołać <xref:System.Char.GetUnicodeCategory%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-131">To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method.</span></span> <span data-ttu-id="c4456-132">Na przykład poniższy przykład wywołuje <xref:System.Char.GetUnicodeCategory%2A> do wyświetlenia kategorii Unicode każdego znaku w ciągu.</span><span class="sxs-lookup"><span data-stu-id="c4456-132">For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.</span></span>  
  
 [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]
 [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  
  
 <span data-ttu-id="c4456-133">Wewnętrznie dla znaki spoza zakresu ASCII (U + 0000 za pomocą U + 00FF) <xref:System.Char.GetUnicodeCategory%2A> metoda zależy od kodowania Unicode z kategorii zgłoszone przez <xref:System.Globalization.CharUnicodeInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="c4456-133">Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class.</span></span> <span data-ttu-id="c4456-134">Począwszy od [!INCLUDE[net_v462](~/includes/net-v462-md.md)], znaków Unicode są klasyfikowane na podstawie [Unicode Standard, wersja 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="c4456-134">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="c4456-135">W wersjach programu .NET Framework z [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] do [!INCLUDE[net_v461](~/includes/net-v461-md.md)], są klasyfikowane na podstawie [Unicode Standard, wersja 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="c4456-135">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
<a name="Elements"></a>   
## <a name="characters-and-text-elements"></a><span data-ttu-id="c4456-136">Znaki i tekstowych elementów</span><span class="sxs-lookup"><span data-stu-id="c4456-136">Characters and text elements</span></span>  
 <span data-ttu-id="c4456-137">Ponieważ pojedynczy znak może być reprezentowany przez wiele <xref:System.Char> obiektów, nie zawsze jest przydatne do pracy z poszczególnymi <xref:System.Char> obiektów.</span><span class="sxs-lookup"><span data-stu-id="c4456-137">Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects.</span></span> <span data-ttu-id="c4456-138">Na przykład poniższy przykład konwertuje punktów kodowych Unicode reprezentujących Morza Egejskiego cyfry 0 do 9 jednostek kodu UTF-16 zakodowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-138">For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</span></span> <span data-ttu-id="c4456-139">Ponieważ błędnego oznacza <xref:System.Char> obiekty z znaków, niepoprawnie zgłasza, że wynikowy ciąg ma 20 znaków.</span><span class="sxs-lookup"><span data-stu-id="c4456-139">Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.</span></span>  
  
 [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]
 [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  
  
 <span data-ttu-id="c4456-140">Można wykonać następujące polecenie, aby uniknąć przy założeniu który <xref:System.Char> obiekt reprezentuje pojedynczy znak.</span><span class="sxs-lookup"><span data-stu-id="c4456-140">You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.</span></span>  
  
-   <span data-ttu-id="c4456-141">Możesz pracować z <xref:System.String> obiektu w całości, a nie Praca z jego znaki do reprezentowania i analizowania zawartości językowe.</span><span class="sxs-lookup"><span data-stu-id="c4456-141">You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</span></span>  
  
-   <span data-ttu-id="c4456-142">Można użyć <xref:System.Globalization.StringInfo> klasy do pracy z elementami tekstu zamiast poszczególnych <xref:System.Char> obiektów.</span><span class="sxs-lookup"><span data-stu-id="c4456-142">You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects.</span></span> <span data-ttu-id="c4456-143">W poniższym przykładzie użyto <xref:System.Globalization.StringInfo> obiekt, aby określić liczbę elementów tekst w ciągu, który składa się z Egejskiego liczby zero do 9.</span><span class="sxs-lookup"><span data-stu-id="c4456-143">The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</span></span> <span data-ttu-id="c4456-144">Ponieważ para zastępcza traktuje pojedynczym znakiem, poprawnie raporty czy ciąg zawiera 10 znaków.</span><span class="sxs-lookup"><span data-stu-id="c4456-144">Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</span></span>  
  
     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]
     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  
  
-   <span data-ttu-id="c4456-145">Jeśli ciąg zawiera znak podstawowy, który ma co najmniej jeden znak łączenie, należy wywołać <xref:System.String.Normalize%2A?displayProperty=nameWithType> metodę, aby przekonwertować podciąg do pojedynczej jednostki zakodowanego kodu UTF-16.</span><span class="sxs-lookup"><span data-stu-id="c4456-145">If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the substring to a single UTF-16 encoded code unit.</span></span> <span data-ttu-id="c4456-146">Następujące przykładowe wywołania <xref:System.String.Normalize%2A?displayProperty=nameWithType> metodę, aby przekonwertować znak podstawowy U + 0061 (ŁACIŃSKI MAŁA litera A) i znaku U + 0308 (łączenie DIAEREZĄ) do U + 00E4 (ŁACIŃSKI MAŁA litera A z DIAEREZĄ).</span><span class="sxs-lookup"><span data-stu-id="c4456-146">The following example calls the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</span></span>  
  
     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]
     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="c4456-147">Typowe operacje</span><span class="sxs-lookup"><span data-stu-id="c4456-147">Common operations</span></span>  
 <span data-ttu-id="c4456-148"><xref:System.Char> Struktury udostępnia metody do porównania <xref:System.Char> obiektów, przekonwertować tę wartość bieżącego <xref:System.Char> obiektu do obiektu innego typu i określić kategorię Unicode <xref:System.Char> obiektu:</span><span class="sxs-lookup"><span data-stu-id="c4456-148">The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:</span></span>  
  
|<span data-ttu-id="c4456-149">Wymagana czynność</span><span class="sxs-lookup"><span data-stu-id="c4456-149">To do this</span></span>|<span data-ttu-id="c4456-150">Użyj tych `System.Char` metod</span><span class="sxs-lookup"><span data-stu-id="c4456-150">Use these `System.Char` methods</span></span>|  
|----------------|-------------------------------------|  
|<span data-ttu-id="c4456-151">Porównaj <xref:System.Char> obiektów</span><span class="sxs-lookup"><span data-stu-id="c4456-151">Compare <xref:System.Char> objects</span></span>|<span data-ttu-id="c4456-152"><xref:System.Char.CompareTo%2A> I <xref:System.Char.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="c4456-152"><xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A></span></span>|  
|<span data-ttu-id="c4456-153">Konwertuj punkt kodu na ciąg</span><span class="sxs-lookup"><span data-stu-id="c4456-153">Convert a code point to a string</span></span>|<xref:System.Char.ConvertFromUtf32%2A>|  
|<span data-ttu-id="c4456-154">Konwertuj <xref:System.Char> obiektu dysków lub para zastępcza <xref:System.Char> obiekty do punktu kodu</span><span class="sxs-lookup"><span data-stu-id="c4456-154">Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point</span></span>|<span data-ttu-id="c4456-155">Dla pojedynczego znaku: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c4456-155">For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span></span><br /><br /> <span data-ttu-id="c4456-156">Para zastępcza lub znak w ciągu: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c4456-156">For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="c4456-157">Pobierz kategorii Unicode znaku</span><span class="sxs-lookup"><span data-stu-id="c4456-157">Get the Unicode category of a character</span></span>|<xref:System.Char.GetUnicodeCategory%2A>|  
|<span data-ttu-id="c4456-158">Określić, czy znak jest w określonej kategorii Unicode, takich jak cyfry, litery, znaki interpunkcyjne, kontrolować znak i tak dalej</span><span class="sxs-lookup"><span data-stu-id="c4456-158">Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</span></span>|<span data-ttu-id="c4456-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, i <xref:System.Char.IsWhiteSpace%2A></span><span class="sxs-lookup"><span data-stu-id="c4456-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A></span></span>|  
|<span data-ttu-id="c4456-160">Konwertuj <xref:System.Char> obiekt reprezentujący liczbę na typ wartości liczbowe</span><span class="sxs-lookup"><span data-stu-id="c4456-160">Convert a <xref:System.Char> object that represents a number to a numeric value type</span></span>|<xref:System.Char.GetNumericValue%2A>|  
|<span data-ttu-id="c4456-161">Konwertuj znaku w ciągu do <xref:System.Char> obiektu</span><span class="sxs-lookup"><span data-stu-id="c4456-161">Convert a character in a string into a <xref:System.Char> object</span></span>|<span data-ttu-id="c4456-162"><xref:System.Char.Parse%2A> I <xref:System.Char.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="c4456-162"><xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A></span></span>|  
|<span data-ttu-id="c4456-163">Konwertuj <xref:System.Char> do obiektu <xref:System.String> obiektu</span><span class="sxs-lookup"><span data-stu-id="c4456-163">Convert a <xref:System.Char> object to a <xref:System.String> object</span></span>|<xref:System.Char.ToString%2A>|  
|<span data-ttu-id="c4456-164">Zmień wielkość liter <xref:System.Char> obiektu</span><span class="sxs-lookup"><span data-stu-id="c4456-164">Change the case of a <xref:System.Char> object</span></span>|<span data-ttu-id="c4456-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, i <xref:System.Char.ToUpperInvariant%2A></span><span class="sxs-lookup"><span data-stu-id="c4456-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A></span></span>|  
  
<a name="Interop"></a>   
## <a name="char-values-and-interop"></a><span data-ttu-id="c4456-166">Wartości CHAR i międzyoperacyjne</span><span class="sxs-lookup"><span data-stu-id="c4456-166">Char values and interop</span></span>  
<span data-ttu-id="c4456-167">Gdy zarządzanego <xref:System.Char> typu, który jest reprezentowany jako jednostka kodu Unicode UTF-16 zakodowane, są przekazywane do kodu niezarządzanego, międzyoperacyjnego organizatora konwertuje znak domyślnie ustawiany na ANSI.</span><span class="sxs-lookup"><span data-stu-id="c4456-167">When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</span></span> <span data-ttu-id="c4456-168">Można zastosować <xref:System.Runtime.InteropServices.DllImportAttribute> atrybutu dla platformy wywołania deklaracje i <xref:System.Runtime.InteropServices.StructLayoutAttribute> atrybutu deklaracji międzyoperacyjnego COM do formantu organizowane zestawu znaków <xref:System.Char> wpisz zastosowań.</span><span class="sxs-lookup"><span data-stu-id="c4456-168">You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-169">Poniższy przykład kodu pokazuje pewnych metod w <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="c4456-169">The following code example demonstrates some of the methods in <xref:System.Char>.</span></span>  
  
 [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]
 [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]
 [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="c4456-170">Wszystkie elementy członkowskie tego typu są bezpieczne wątkowo.</span><span class="sxs-lookup"><span data-stu-id="c4456-170">All members of this type are thread safe.</span></span> <span data-ttu-id="c4456-171">Elementy członkowskie, które na pierwszy rzut oka modyfikują stan wystąpienia, w rzeczywistości zwracają nowe wystąpienie zainicjowane z nową wartością.</span><span class="sxs-lookup"><span data-stu-id="c4456-171">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="c4456-172">Podobnie jak w przypadku innych typów odczytywanie i zapisywanie w udostępnionej zmiennej, która zawiera wystąpienie tego typu, musi być chronione przez blokadę w celu zagwarantowania bezpieczeństwa wątków.</span><span class="sxs-lookup"><span data-stu-id="c4456-172">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-173">Porównuje to wystąpienie określonego obiektu lub typu wartości i wskazuje, czy to wystąpienie poprzedza, następuje czy pojawia się w tym samym miejscu porządku określonego typu obiektu lub wartości.</span><span class="sxs-lookup"><span data-stu-id="c4456-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c4456-174">A <see cref="T:System.Char" /> obiekt do porównania.</span><span class="sxs-lookup"><span data-stu-id="c4456-174">A <see cref="T:System.Char" /> object to compare.</span></span></param>
        <summary><span data-ttu-id="c4456-175">Porównuje tego wystąpienia określonej <see cref="T:System.Char" /> obiektu i wskazuje, czy to wystąpienie poprzedza, następuje czy pojawia się w tej samej pozycji w porządek sortowania określonych <see cref="T:System.Char" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span></span></summary>
        <returns><span data-ttu-id="c4456-176">Podpisem liczbę wskazującą położenie tego wystąpienia w kolejności sortowania w odniesieniu do <paramref name="value" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="c4456-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span></span>  
  
 <span data-ttu-id="c4456-177"><list type="table"><listheader><term> Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="c4456-177"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="c4456-178"></term><description> Opis elementu</span><span class="sxs-lookup"><span data-stu-id="c4456-178"></term><description> Description</span></span>  
  
 <span data-ttu-id="c4456-179"></description></listheader><item><term> Mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-179"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="c4456-180"></term><description> To wystąpienie poprzedza <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-180"></term><description> This instance precedes <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="c4456-181"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="c4456-181"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="c4456-182"></term><description> To wystąpienie ma taką samą pozycję w kolejności sortowania jako <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-182"></term><description> This instance has the same position in the sort order as <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="c4456-183"></description></item><item><term> Większa niż zero</span><span class="sxs-lookup"><span data-stu-id="c4456-183"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="c4456-184"></term><description> Następuje to wystąpienie <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-184"></term><description> This instance follows <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-185">Ta metoda implementuje <xref:System.IComparable%601?displayProperty=nameWithType> interfejsu i wykonuje nieco lepsza niż <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> — metoda, ponieważ nie muszą być konwertowane `value` parametru do obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-185">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="c4456-186">Porównanie wykonywane przez tę metodę jest oparta na wartości zakodowanej tego wystąpienia i `value`, nie ich lexicographical właściwości.</span><span class="sxs-lookup"><span data-stu-id="c4456-186">The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.</span></span>  
  
 <span data-ttu-id="c4456-187">Jeśli <xref:System.Char.CompareTo%2A> typ parametru metody ma mniejszą liczbę bitów (mniejszą niż jest) niż typ wystąpienia niektóre języki programowania wykonać niejawną konwersję rozszerzającą przekształcenia wartości parametru na wartość więcej bitów.</span><span class="sxs-lookup"><span data-stu-id="c4456-187">If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="c4456-188">Na przykład, załóżmy, że typ wystąpienia <xref:System.Int32> i typ parametru jest <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="c4456-188">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="c4456-189">Kompilator języka Microsoft C# generuje instrukcje do reprezentowania wartości parametru jako <xref:System.Int32> obiekt, a następnie generuje <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> metodę, która porównuje wartości <xref:System.Int32> wystąpienia i <xref:System.Int32> parametru reprezentacja wartości.</span><span class="sxs-lookup"><span data-stu-id="c4456-189">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="c4456-190">Zazwyczaj niejawną konwersję rozszerzającą są wykonywane na typy liczbowe.</span><span class="sxs-lookup"><span data-stu-id="c4456-190">Typically, implicit widening conversions are performed on numeric types.</span></span> <span data-ttu-id="c4456-191">Dokumentacja języka programowania do ustalenia, czy jego kompilatora pełni poszerzanie konwersji.</span><span class="sxs-lookup"><span data-stu-id="c4456-191">Consult your programming language's documentation to determine if its compiler performs widening conversions.</span></span> <span data-ttu-id="c4456-192">Jeśli niezgodność typów wystąpień i parametru i odpowiednie konwersja nie jest dostępna, kompilator generuje instrukcje polu parametru i wywoływać <xref:System.Char.CompareTo%2A> przeciążenia, które przyjmuje <xref:System.Object> parametru.</span><span class="sxs-lookup"><span data-stu-id="c4456-192">If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-193">W poniższym przykładzie kodu pokazano wersje ogólne i inny niż ogólny `CompareTo` metody dla kilku typów wartości i odwołania.</span><span class="sxs-lookup"><span data-stu-id="c4456-193">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c4456-194">Obiekt do porównania z tym wystąpieniem, lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-194">An object to compare this instance to, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c4456-195">Porównuje tego wystąpienia określonego obiektu i wskazuje, czy to wystąpienie poprzedza, następuje czy pojawia się w tej samej pozycji w porządek sortowania określonych <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-195">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-196">Podpisem liczbę wskazującą położenie tego wystąpienia w kolejności sortowania w odniesieniu do <paramref name="value" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="c4456-196">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span></span>  
  
 <span data-ttu-id="c4456-197"><list type="table"><listheader><term> Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="c4456-197"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="c4456-198"></term><description> Opis elementu</span><span class="sxs-lookup"><span data-stu-id="c4456-198"></term><description> Description</span></span>  
  
 <span data-ttu-id="c4456-199"></description></listheader><item><term> Mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-199"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="c4456-200"></term><description> To wystąpienie poprzedza <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-200"></term><description> This instance precedes <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="c4456-201"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="c4456-201"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="c4456-202"></term><description> To wystąpienie ma taką samą pozycję w kolejności sortowania jako <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-202"></term><description> This instance has the same position in the sort order as <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="c4456-203"></description></item><item><term> Większa niż zero</span><span class="sxs-lookup"><span data-stu-id="c4456-203"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="c4456-204"></term><description> Następuje to wystąpienie <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-204"></term><description> This instance follows <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="c4456-205">—lub—</span><span class="sxs-lookup"><span data-stu-id="c4456-205">-or-</span></span>  
  
 <span data-ttu-id="c4456-206"><paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-206"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-207"><xref:System.Char.CompareTo%2A> Implementuje metody <xref:System.IComparable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c4456-207">The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="c4456-208">`value` Parametr musi być `null` lub wystąpienie <xref:System.Char>; w przeciwnym razie jest zwracany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c4456-208">The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="c4456-209">Porównanie wykonywane przez tę metodę jest oparta na wartości zakodowanej tego wystąpienia i `value`, niekoniecznie ich lexicographical właściwości.</span><span class="sxs-lookup"><span data-stu-id="c4456-209">The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics.</span></span> <span data-ttu-id="c4456-210">Wszystkie wystąpienia <xref:System.Char>, niezależnie od jego wartość jest uznawany za większy niż `null`.</span><span class="sxs-lookup"><span data-stu-id="c4456-210">Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-211">Poniższy przykład kodu pokazuje <xref:System.Char.CompareTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-211">The following code example demonstrates <xref:System.Char.CompareTo%2A>.</span></span>  
  
 [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]
 [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]
 [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4456-212"><paramref name="value" /> nie jest <see cref="T:System.Char" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-212"><paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromUtf32">
      <MemberSignature Language="C#" Value="public static string ConvertFromUtf32 (int utf32);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertFromUtf32(int32 utf32) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertFromUtf32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertFromUtf32 (utf32 As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertFromUtf32(int utf32);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf32" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf32"><span data-ttu-id="c4456-213">Punkt kodu Unicode 21-bitowych.</span><span class="sxs-lookup"><span data-stu-id="c4456-213">A 21-bit Unicode code point.</span></span></param>
        <summary><span data-ttu-id="c4456-214">Konwertuje określony punkt kodu Unicode na ciąg kodowany w UTF-16.</span><span class="sxs-lookup"><span data-stu-id="c4456-214">Converts the specified Unicode code point into a UTF-16 encoded string.</span></span></summary>
        <returns><span data-ttu-id="c4456-215">Ciąg składający się z jednego <see cref="T:System.Char" /> obiektu dysków lub para zastępcza <see cref="T:System.Char" /> obiekty równoważne określony przez punkt kodu <paramref name="utf32" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="c4456-215">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-216">Ta metoda umożliwia przekonwertować na ciąg kodowany UTF-16 punkt kodu Unicode 21-bitowych przed testowaniem ciągu za pomocą metod, takich jak <xref:System.Char.IsLowSurrogate%28System.Char%29> i <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span><span class="sxs-lookup"><span data-stu-id="c4456-216">Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span></span>  
  
 <span data-ttu-id="c4456-217">Prawidłowy punkt kodu poza podstawowe płaszczyzny wielojęzyczne (BMP) zawsze daje para zastępcza prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="c4456-217">A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</span></span> <span data-ttu-id="c4456-218">Jednak prawidłowy punkt kodu w ramach BMP nie może dać prawidłowego wyniku zgodnie ze standardem Unicode, ponieważ brak językowe przetwarzania jest używana w konwersji.</span><span class="sxs-lookup"><span data-stu-id="c4456-218">However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</span></span> <span data-ttu-id="c4456-219">Z tego powodu, użyj <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> klasy w celu przekonwertowania zbiorcze danych UTF-32 do zbiorczego danych UTF-16.</span><span class="sxs-lookup"><span data-stu-id="c4456-219">For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class to convert bulk UTF-32 data into bulk UTF-16 data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-220">Poniższy przykład kodu pokazuje <xref:System.Char.ConvertToUtf32%2A> i <xref:System.Char.ConvertFromUtf32%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-220">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-221"><paramref name="utf32" /> jest nie prawidłowy 21-bitowy kod znaku Unicode, począwszy od U + 0 do U + 10FFFF, z wyjątkiem zakresu para zastępcza z U + D800 za pośrednictwem U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="c4456-221"><paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span></span></exception>
        <altmember cref="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToUtf32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-222">Konwertuje wartość para zastępcza UTF-16 zakodowane punkt kodu Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-222">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (highSurrogate As Char, lowSurrogate As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(char highSurrogate, char lowSurrogate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="c4456-223">Jednostka kodu zastępczym wysokiego poziomu (to znaczy kodu jednostka od U + D800 za pośrednictwem U + DBFF).</span><span class="sxs-lookup"><span data-stu-id="c4456-223">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="c4456-224">Jednostka kodu dwuskładnikowego (to znaczy kodu jednostka od U + DC00 za pośrednictwem U + DFFF).</span><span class="sxs-lookup"><span data-stu-id="c4456-224">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span></span></param>
        <summary><span data-ttu-id="c4456-225">Konwertuje wartość para zastępcza UTF-16 zakodowane punkt kodu Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-225">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span></span></summary>
        <returns><span data-ttu-id="c4456-226">Punkt kodu Unicode 21-bitowy, reprezentowany przez <paramref name="highSurrogate" /> i <paramref name="lowSurrogate" /> parametrów.</span><span class="sxs-lookup"><span data-stu-id="c4456-226">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-227">Użyj tej metody, aby przekonwertować para zastępcza punkt kodu Unicode 21-bitowych.</span><span class="sxs-lookup"><span data-stu-id="c4456-227">Use this method to convert a surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="c4456-228">Aby przekonwertować danych UTF-16 UTF-32 danych, należy użyć <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="c4456-228">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="c4456-229">Zwykle kodowania UTF-16 reprezentuje pojedynczy znak Unicode jako jednostka 16-bitowego kodu.</span><span class="sxs-lookup"><span data-stu-id="c4456-229">Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</span></span> <span data-ttu-id="c4456-230">Jednak obsługuje ona również znaki dwuskładnikowe, umożliwiających pojedynczy znak abstrakcyjny może być reprezentowana jako dwie jednostki 16-bitowego kodu.</span><span class="sxs-lookup"><span data-stu-id="c4456-230">However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</span></span> <span data-ttu-id="c4456-231">Te dwa <xref:System.Char> obiekty muszą mieć jednostek kodu zakresu z U + D800 do U + DBFF dla pierwszego surogatu (wysoka) i U + DC00 do U + DFFF dla drugiego surogatu (niski).</span><span class="sxs-lookup"><span data-stu-id="c4456-231">These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</span></span> <span data-ttu-id="c4456-232">Znaki dwuskładnikowe są obsługiwane tylko przez UTF-16 kodowania.</span><span class="sxs-lookup"><span data-stu-id="c4456-232">Surrogate pairs are supported only by UTF-16 encoding.</span></span> <span data-ttu-id="c4456-233">Ta metoda umożliwia znak reprezentowany przez para zastępcza UTF-16 ma zostać przekonwertowane na znak, przy użyciu kodowania UTF-32.</span><span class="sxs-lookup"><span data-stu-id="c4456-233">This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-234">Poniższy przykład kodu pokazuje <xref:System.Char.ConvertToUtf32%2A> i <xref:System.Char.ConvertFromUtf32%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-234">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-235"><paramref name="highSurrogate" /> nie jest w zasięgu U + D800 za pośrednictwem U + DBFF lub <paramref name="lowSurrogate" /> nie znajduje się w zakresie U + DC00 między U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="c4456-235"><paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span></span></exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-236">Ciąg, który zawiera pary znaków lub dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-236">A string that contains a character or surrogate pair.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-237">Indeks pary znaków lub zastępczego w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-237">The index position of the character or surrogate pair in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-238">Konwertuje wartość UTF-16 zakodowane pary znaków lub Surogat na określonej pozycji w ciągu w punkt kodu Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-238">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span></span></summary>
        <returns><span data-ttu-id="c4456-239">Punkt kodu Unicode 21-bitowy, reprezentowany przez znak lub Surogat pary w pozycji w <paramref name="s" /> określony przez parametr <paramref name="index" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="c4456-239">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-240">Użyj tej metody, aby przekonwertować pary znaków lub Surogat punkt kodu Unicode 21-bitowych.</span><span class="sxs-lookup"><span data-stu-id="c4456-240">Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="c4456-241">Aby przekonwertować danych UTF-16 UTF-32 danych, należy użyć <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="c4456-241">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-242">Poniższy przykład kodu pokazuje <xref:System.Char.ConvertToUtf32%2A> i <xref:System.Char.ConvertFromUtf32%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-242">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-243"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-243"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-244"><paramref name="index" /> nie jest w stanie <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-244"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4456-245">Określony indeks zawiera para zastępcza i pierwszy znak w parze nie jest prawidłowym znakiem zastępczym wysokiego poziomu lub znak pary nie jest prawidłową dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-245">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span></span></exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-246">Zwraca wartość wskazującą, czy to wystąpienie jest taki sam jak określony obiekt lub <see cref="T:System.Char" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="c4456-246">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c4456-247">Obiekt, który ma zostać porównany z tym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="c4456-247">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="c4456-248">Zwraca wartość wskazującą, czy to wystąpienie jest równe określonej <see cref="T:System.Char" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-248">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-249"><see langword="true" /> Jeśli <paramref name="obj" /> parametr ma wartość wartość tego wystąpienia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-249"><see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-250">Ta metoda implementuje <xref:System.IEquatable%601?displayProperty=nameWithType> interfejsu i wykonuje nieco lepsza niż <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> , ponieważ nie trzeba unbox — `obj` parametru.</span><span class="sxs-lookup"><span data-stu-id="c4456-250">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> because it does not need to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c4456-251">Obiekt do porównania z tym wystąpieniem lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-251">An object to compare with this instance or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c4456-252">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</span><span class="sxs-lookup"><span data-stu-id="c4456-252">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-253"><see langword="true" /> Jeśli <paramref name="obj" /> jest wystąpieniem <see cref="T:System.Char" /> i wartość tego wystąpienia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-253"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-254">Porównanie wykonywane przez tę metodę jest oparta na wartości zakodowanej tego wystąpienia i `obj`, niekoniecznie ich lexicographical właściwości.</span><span class="sxs-lookup"><span data-stu-id="c4456-254">The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-255">Poniższy przykład kodu pokazuje <xref:System.Char.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-255">The following code example demonstrates <xref:System.Char.Equals%2A>.</span></span>  
  
 [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]
 [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]
 [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4456-256">Zwraca kod skrótu dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="c4456-256">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="c4456-257">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="c4456-257">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-258">Konwertuje określony znak Unicode liczbowych liczbie zmiennoprzecinkowej podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="c4456-258">Converts a specified numeric Unicode character to a double-precision floating-point number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (c As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-259">Znak Unicode, który ma zostać przekształcony.</span><span class="sxs-lookup"><span data-stu-id="c4456-259">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="c4456-260">Konwertuje określony znak Unicode liczbowych podwójnej precyzji liczba zmiennoprzecinkowa.</span><span class="sxs-lookup"><span data-stu-id="c4456-260">Converts the specified numeric Unicode character to a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="c4456-261">Wartość numeryczna <paramref name="c" /> Jeśli ten znak reprezentuje liczbę; w przeciwnym razie -1,0.</span><span class="sxs-lookup"><span data-stu-id="c4456-261">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-262">`c` Parametr musi być <xref:System.Char> reprezentację liczbową wartości.</span><span class="sxs-lookup"><span data-stu-id="c4456-262">The `c` parameter must be the <xref:System.Char> representation of a numeric value.</span></span> <span data-ttu-id="c4456-263">Na przykład jeśli `c` "5", jest zwracana wartość 5.</span><span class="sxs-lookup"><span data-stu-id="c4456-263">For example, if `c` is "5", the return value is 5.</span></span> <span data-ttu-id="c4456-264">Jednak jeśli `c` "z", jest zwracana wartość jest -1,0.</span><span class="sxs-lookup"><span data-stu-id="c4456-264">However, if `c` is "z", the return value is -1.0.</span></span>  
  
 <span data-ttu-id="c4456-265">Znak ma skojarzoną wartość liczbową tylko wtedy, gdy jest on członkiem jednej z następujących <xref:System.Globalization.UnicodeCategory> kategorii: `DecimalDigitNumber`, `LetterNumber`, lub `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="c4456-265">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="c4456-266"><xref:System.Char.GetNumericValue%2A> Metody, przy założeniu, że `c` odpowiada pojedynczy znak językowe i sprawdza, czy ten znak może być konwertowane na dziesiętną wartością cyfrową.</span><span class="sxs-lookup"><span data-stu-id="c4456-266">The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="c4456-267">Jednak niektóre numery w standardzie Unicode są reprezentowane przez dwa <xref:System.Char> obiektów, które tworzą para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="c4456-267">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="c4456-268">Na przykład system numeracji Morza Egejskiego składa się z kodów znaku U+10107 do U+10133.</span><span class="sxs-lookup"><span data-stu-id="c4456-268">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="c4456-269">W poniższym przykładzie użyto <xref:System.Char.ConvertFromUtf32%2A> metody tworzenia wystąpienia ciąg reprezentujący Morza EGEJSKIEGO liczby jeden.</span><span class="sxs-lookup"><span data-stu-id="c4456-269">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="c4456-270">Jako dane wyjściowe w przykładzie pokazano <xref:System.Char.GetNumericValue%28System.Char%29> metoda zwraca wartość -1, jeśli został przekazany zastępczym wysokiego poziomu lub dwuskładnikowego tego znaku.</span><span class="sxs-lookup"><span data-stu-id="c4456-270">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]
 [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="c4456-271">W poniższym przykładzie pokazano <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-271">The following example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-272">A <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-272">A <see cref="T:System.String" />.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-273">Pozycja znaku w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-273">The character position in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-274">Konwertuje znaku numerycznego Unicode w określonej pozycji w ciągu określonej podwójnej precyzji liczba zmiennoprzecinkowa.</span><span class="sxs-lookup"><span data-stu-id="c4456-274">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="c4456-275">Wartość numeryczna znak na pozycji <paramref name="index" /> w <paramref name="s" /> Jeśli ten znak reprezentuje liczbę; w przeciwnym razie wartość -1.</span><span class="sxs-lookup"><span data-stu-id="c4456-275">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-276">`s` Parametr musi być reprezentację ciągu wartość liczbową.</span><span class="sxs-lookup"><span data-stu-id="c4456-276">The `s` parameter must be the string representation of a numeric value.</span></span> <span data-ttu-id="c4456-277">Na przykład jeśli znak na pozycji `index` w `s` "5", jest zwracana wartość 5.</span><span class="sxs-lookup"><span data-stu-id="c4456-277">For example, if the character at position `index` in `s` is "5", the return value is 5.</span></span> <span data-ttu-id="c4456-278">Jednak jeśli znak na pozycji `index` w `s` jest "z", wartość zwracana jest wartość -1.</span><span class="sxs-lookup"><span data-stu-id="c4456-278">However, if the character at position `index` in `s` is "z", the return value is -1.</span></span>  
  
 <span data-ttu-id="c4456-279">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-279">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-280">Znak ma skojarzoną wartość liczbową tylko wtedy, gdy jest on członkiem jednej z następujących <xref:System.Globalization.UnicodeCategory> kategorii: `DecimalDigitNumber`, `LetterNumber`, lub `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="c4456-280">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="c4456-281">Jeśli <xref:System.Char> obiektu na pozycji `index` to pierwszy znak para zastępcza prawidłową <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> Metoda określa, czy para zastępcza formularzy cyfrę.</span><span class="sxs-lookup"><span data-stu-id="c4456-281">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="c4456-282">Na przykład system numeracji Morza Egejskiego składa się z kodów znaku U+10107 do U+10133.</span><span class="sxs-lookup"><span data-stu-id="c4456-282">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="c4456-283">W poniższym przykładzie użyto <xref:System.Char.ConvertFromUtf32%2A> metody tworzenia wystąpienia ciąg reprezentujący każdą liczbę Morza Egejskiego.</span><span class="sxs-lookup"><span data-stu-id="c4456-283">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="c4456-284">Jako dane wyjściowe w przykładzie pokazano <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> , jeśli został przekazany liczby Morza Egejskiego znakiem zastępczym wysokiego poziomu, metoda zwraca prawidłową wartość liczbową.</span><span class="sxs-lookup"><span data-stu-id="c4456-284">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="c4456-285">Jednak jeśli dwuskładnikowego został przekazany, traktuje dwuskładnikowego tylko izolacji i zwraca wartość -1.</span><span class="sxs-lookup"><span data-stu-id="c4456-285">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]
 [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="c4456-286">Poniższy przykład kodu pokazuje <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-286">The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-287"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-287"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-288"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-288"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4456-289">Zwraca <see cref="T:System.TypeCode" /> dla typu wartości <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-289">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-290">Stała wyliczeniowa <see cref="F:System.TypeCode.Char" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-290">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-291">Kategoryzuje znaku Unicode w grupie identyfikowane za pomocą jednej z <see cref="T:System.Globalization.UnicodeCategory" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="c4456-291">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span></span></summary>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (c As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-292">Znak Unicode do przeprowadzania kategoryzacji.</span><span class="sxs-lookup"><span data-stu-id="c4456-292">The Unicode character to categorize.</span></span></param>
        <summary><span data-ttu-id="c4456-293">Kategoryzuje określony znak Unicode w grupie identyfikowane za pomocą jednej z <see cref="T:System.Globalization.UnicodeCategory" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="c4456-293">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span></span></summary>
        <returns><span data-ttu-id="c4456-294">A <see cref="T:System.Globalization.UnicodeCategory" /> wartość, która identyfikuje grupę, która zawiera <paramref name="c" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-294">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-295"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> Metoda nie zawsze zwraca takie same <xref:System.Globalization.UnicodeCategory> wartość jako <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> metody określonego znaku przekazywana jako parametr.</span><span class="sxs-lookup"><span data-stu-id="c4456-295">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="c4456-296"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> Metodę zaprojektowano w celu odzwierciedlenia bieżącej wersji Unicode standard.</span><span class="sxs-lookup"><span data-stu-id="c4456-296">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="c4456-297">Z kolei mimo że <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> metoda zazwyczaj odzwierciedla bieżącą wersję Unicode standard, może zwrócić kategorii znaków na podstawie poprzedniej wersji standard lub może zwrócić kategorię, która różni się od bieżącej standard w kolejności w celu zachowania zgodności z poprzednimi wersjami.</span><span class="sxs-lookup"><span data-stu-id="c4456-297">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="c4456-298">W związku z tym zaleca się używanie <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> zamiast metody <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c4456-298">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c4456-299">Począwszy od [!INCLUDE[net_v462](~/includes/net-v462-md.md)], znaków Unicode są klasyfikowane na podstawie [standardowe Unix, wersja 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="c4456-299">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="c4456-300">W wersjach programu .NET Framework z [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] do [!INCLUDE[net_v461](~/includes/net-v461-md.md)], są klasyfikowane na podstawie [standardowe Unix, wersja 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="c4456-300">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-301">Poniższy przykład kodu pokazuje <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-301">The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-302">A <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-302">A <see cref="T:System.String" />.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-303">Pozycja znaku w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-303">The character position in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-304">Kategoryzuje znak na określonej pozycji w ciągu określonej w grupie identyfikowane za pomocą jednej z <see cref="T:System.Globalization.UnicodeCategory" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="c4456-304">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span></span></summary>
        <returns><span data-ttu-id="c4456-305">A <see cref="T:System.Globalization.UnicodeCategory" /> wyliczany stałą, której identyfikuje grupę, która zawiera znak na pozycji <paramref name="index" /> w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-305">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-306">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-306">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-307"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> Metoda nie zawsze zwraca takie same <xref:System.Globalization.UnicodeCategory> wartość jako <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> metody określonego znaku przekazywana jako parametr.</span><span class="sxs-lookup"><span data-stu-id="c4456-307">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="c4456-308"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> Metodę zaprojektowano w celu odzwierciedlenia bieżącej wersji Unicode standard.</span><span class="sxs-lookup"><span data-stu-id="c4456-308">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="c4456-309">Z kolei mimo że <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> metoda zazwyczaj odzwierciedla bieżącą wersję Unicode standard, może zwrócić kategorii znaków na podstawie poprzedniej wersji standard lub może zwrócić kategorię, która różni się od bieżącej standard w kolejności w celu zachowania zgodności z poprzednimi wersjami.</span><span class="sxs-lookup"><span data-stu-id="c4456-309">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="c4456-310">W związku z tym zaleca się używanie <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> zamiast metody <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c4456-310">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c4456-311">Począwszy od [!INCLUDE[net_v462](~/includes/net-v462-md.md)], znaków Unicode są klasyfikowane na podstawie [standardowe Unix, wersja 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="c4456-311">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="c4456-312">W wersjach programu .NET Framework z [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] do [!INCLUDE[net_v461](~/includes/net-v461-md.md)], są klasyfikowane na podstawie [standardowe Unix, wersja 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="c4456-312">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-313">W poniższym przykładzie pokazano <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-313">The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-314"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-314"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-315"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-315"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsControl">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-316">Wskazuje, czy określony znak Unicode jest skategoryzowany jako znak kontrolny.</span><span class="sxs-lookup"><span data-stu-id="c4456-316">Indicates whether a specified Unicode character is categorized as a control character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-317">Znaki kontrolne są formatowanie i inne niedrukowalne znaki, takie jak potwierdzenia, ETYKIETĘ CR, FF, LF i VT.</span><span class="sxs-lookup"><span data-stu-id="c4456-317">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="c4456-318">Standardu Unicode przypisuje punktów kodowych z \U0000 do \U001F, \U007F i \U0080 do \U009F do znaków kontrolnych.</span><span class="sxs-lookup"><span data-stu-id="c4456-318">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="c4456-319">Zgodnie ze standardem Unicode te wartości są interpretowane jako znaki kontrolne, chyba że ich użycia w przeciwnym razie jest zdefiniowane przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="c4456-319">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="c4456-320">Znaki kontrolne prawidłowe są członkami <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-320">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-321">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-321">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-322">Wskazuje, czy określony znak Unicode jest skategoryzowany jako znak kontrolny.</span><span class="sxs-lookup"><span data-stu-id="c4456-322">Indicates whether the specified Unicode character is categorized as a control character.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-323"><see langword="true" /> Jeśli <paramref name="c" /> jest formantem znaku; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-323"><see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-324">Znaki kontrolne są formatowanie i inne niedrukowalne znaki, takie jak potwierdzenia, ETYKIETĘ CR, FF, LF i VT.</span><span class="sxs-lookup"><span data-stu-id="c4456-324">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="c4456-325">Standardu Unicode T przypisuje punktów kodowych z \U0000 do \U001F, \U007F i \U0080 do \U009F do znaków kontrolnych.</span><span class="sxs-lookup"><span data-stu-id="c4456-325">T The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="c4456-326">Zgodnie ze standardem Unicode te wartości są interpretowane jako znaki kontrolne, chyba że ich użycia w przeciwnym razie jest zdefiniowane przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="c4456-326">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="c4456-327">Znaki kontrolne prawidłowe są członkami <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-327">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-328">Poniższy przykład zawiera punkt kodu Unicode każdego znaków kontrolnych.</span><span class="sxs-lookup"><span data-stu-id="c4456-328">The following example lists the Unicode code point of each of the control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]
 [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]
 [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-329">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-329">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-330">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-330">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-331">Wskazuje, czy znak na określonej pozycji w ciągu określonej jest skategoryzowany jako znak kontrolny.</span><span class="sxs-lookup"><span data-stu-id="c4456-331">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-332"><see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest formantem znaku; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-332"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-333">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-333">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-334">Znaki kontrolne są formatowanie i inne niedrukowalne znaki, takie jak potwierdzenia, ETYKIETĘ CR, FF, LF i VT.</span><span class="sxs-lookup"><span data-stu-id="c4456-334">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="c4456-335">Standardu Unicode przypisuje punktów kodowych z \U0000 do \U001F, \U007F i \U0080 do \U009F do znaków kontrolnych.</span><span class="sxs-lookup"><span data-stu-id="c4456-335">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="c4456-336">Zgodnie ze standardem Unicode te wartości są interpretowane jako znaki kontrolne, chyba że ich użycia w przeciwnym razie jest zdefiniowane przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="c4456-336">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="c4456-337">Znaki kontrolne prawidłowe są członkami <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-337">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-338">W poniższym przykładzie wylicza znaków w ciągu i określa, czy są znaki kontrolne.</span><span class="sxs-lookup"><span data-stu-id="c4456-338">The following example enumerates the characters in a string and determines whether any are control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]
 [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]
 [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-339"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-339"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-340"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-340"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-341">Wskazuje, czy znak Unicode jest skategoryzowany jako dziesiętną wartością cyfrową.</span><span class="sxs-lookup"><span data-stu-id="c4456-341">Indicates whether a Unicode character is categorized as a decimal digit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-342">Prawidłowych cyfr są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-342">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-343">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-343">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-344">Wskazuje, czy określony znak Unicode jest skategoryzowany jako dziesiętną wartością cyfrową.</span><span class="sxs-lookup"><span data-stu-id="c4456-344">Indicates whether the specified Unicode character is categorized as a decimal digit.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-345"><see langword="true" /> Jeśli <paramref name="c" /> jest dziesiętną wartością cyfrową; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-345"><see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-346">Ta metoda określa, czy <xref:System.Char> jest cyfrą podstawa 10.</span><span class="sxs-lookup"><span data-stu-id="c4456-346">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="c4456-347">To zachowanie różni się od <xref:System.Char.IsNumber%2A>, który określa, czy `Char` żadnych liczbowych kategorii Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-347">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category.</span></span> <span data-ttu-id="c4456-348">Numery zawierają znaki, takie jak ułamków, indeksy dolne indeksów górnych, łacińskich cyfry, łącznik waluty, numery otoczony i cyfr specyficzne dla skryptu.</span><span class="sxs-lookup"><span data-stu-id="c4456-348">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="c4456-349">Prawidłowych cyfr są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-349">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-350">Poniższy przykład kodu pokazuje <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-350">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-351">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-351">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-352">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-352">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-353">Wskazuje, czy znak na określonej pozycji w ciągu określonej kategorii jest dziesiętną wartością cyfrową.</span><span class="sxs-lookup"><span data-stu-id="c4456-353">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-354"><see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest dziesiętną wartością cyfrową; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-354"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-355">Ta metoda określa, czy <xref:System.Char> jest cyfrą podstawa 10.</span><span class="sxs-lookup"><span data-stu-id="c4456-355">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="c4456-356">To zachowanie różni się od <xref:System.Char.IsNumber%2A>, który określa, czy <xref:System.Char> żadnych liczbowych kategorii Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-356">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="c4456-357">Numery zawierają znaki, takie jak ułamków, indeksy dolne indeksów górnych, łacińskich cyfry, łącznik waluty, numery otoczony i cyfr specyficzne dla skryptu.</span><span class="sxs-lookup"><span data-stu-id="c4456-357">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="c4456-358">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-358">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-359">Prawidłowych cyfr są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-359">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-360">Poniższy przykład kodu pokazuje <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-360">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-361"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-361"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-362"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-362"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsHighSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-363">Wskazuje, czy określony <see cref="T:System.Char" /> obiekt jest zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="c4456-363">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-364">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-364">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-365">Wskazuje, czy określony <see cref="T:System.Char" /> obiekt jest zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="c4456-365">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-366"><see langword="true" /> Jeśli wartość liczbową <paramref name="c" /> parametru może się wahać od U + D800 za pośrednictwem U + DBFF; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-366"><see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-367">Oprócz reprezentowania pojedynczych znaków przy użyciu 16-bitowego kodu znaku, kodowanie UTF-16 pozwala na przedstawianie znaków abstrakcyjnych za pomocą dwóch 16-bitowych kodów znaku, znanych jako para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="c4456-367">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="c4456-368">Pierwszy element w tej pary jest znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="c4456-368">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="c4456-369">Punktu kodu może należeć do zakresu od U + D800 do U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="c4456-369">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="c4456-370">Indywidualny znak zastępczy ma nie interpretacji własnych; jest istotny tylko wtedy, gdy jest używany jako część pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="c4456-370">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-371">Poniższy przykład kodu pokazuje <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, i <xref:System.Char.IsSurrogatePair%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-371">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-372">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-372">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-373">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-373">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-374">Wskazuje, czy <see cref="T:System.Char" /> obiekt na określonej pozycji w ciągu jest znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="c4456-374">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-375"><see langword="true" /> Jeśli określony znak w wartość liczbową <paramref name="s" /> parametru może się wahać od U + D800 za pośrednictwem U + DBFF; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-375"><see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-376">`index` Parametr jest liczony od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-376">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="c4456-377">Oprócz reprezentowania pojedynczych znaków przy użyciu 16-bitowego kodu znaku, kodowanie UTF-16 pozwala na przedstawianie znaków abstrakcyjnych za pomocą dwóch 16-bitowych kodów znaku, znanych jako para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="c4456-377">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="c4456-378">Pierwszy element w tej pary jest znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="c4456-378">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="c4456-379">Punktu kodu może należeć do zakresu od U + D800 do U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="c4456-379">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="c4456-380">Indywidualny znak zastępczy ma nie interpretacji własnych; jest istotny tylko wtedy, gdy jest używany jako część pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="c4456-380">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-381">Poniższy przykład kodu pokazuje <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, i <xref:System.Char.IsSurrogatePair%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-381">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-382"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-382"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-383"><paramref name="index" /> nie jest w stanie <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-383"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-384">Wskazuje, czy znak Unicode jest skategoryzowany jako list Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-384">Indicates whether a Unicode character is categorized as a Unicode letter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-385">Ta metoda określa, czy <xref:System.Char> jest członkiem żadnych kategorii litery Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-385">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="c4456-386">Litery Unicode są następujące:</span><span class="sxs-lookup"><span data-stu-id="c4456-386">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="c4456-387">Wielkie litery, np. U + 0041 (ŁACIŃSKI litera A) za pośrednictwem U + 005A (ŁACIŃSKI litera Z) lub U + 0400 (CYRYLICY litera programu Internet Explorer z DIAKRYTYCZNY) za pośrednictwem U + 042F (CYRYLICY litera YA).</span><span class="sxs-lookup"><span data-stu-id="c4456-387">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="c4456-388">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-388">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="c4456-389">Małe litery, np. U + 0061 (A MAŁA litera ŁACIŃSKA) za pośrednictwem U + 007A (ŁACIŃSKI małe litery Z), lub U + 03AC (GRECKIEGO MAŁA litera ALFA z AKCENTEM) za pośrednictwem U + 03CE (GRECKIEGO MAŁA litera OMEGA z AKCENTEM).</span><span class="sxs-lookup"><span data-stu-id="c4456-389">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="c4456-390">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-390">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="c4456-391">Tytuł wielkość liter, np. U + 01 C 5 (ŁACIŃSKI litera D z małej litery Z z CARON) lub U + 1FFC (GRECKIEGO litera OMEGA z PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="c4456-391">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="c4456-392">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-392">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="c4456-393">Modyfikatory, np. U + 02B0 (H MAŁA litera MODYFIKATOR) za pośrednictwem 02C U + 1 (MODYFIKATOR litery ODWRÓCONE GLOTTAL STOP), lub U + 1D2C (A kapitału litera MODYFIKATORA) za pośrednictwem U + 1 d 61 (MODYFIKATOR CHI małe litery).</span><span class="sxs-lookup"><span data-stu-id="c4456-393">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="c4456-394">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-394">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="c4456-395">Inne litery, np. U + 05 D 0 (HEBRAJSKI litery ALEF) za pośrednictwem U + 05EA (HEBRAJSKI TAV litery), U + 0621 (ARABIC litery HAMZA) za pośrednictwem U + 063A (ARABIC GHAIN litery), lub U + 4E00 (\<ideogramów CJK, pierwsza >) za pośrednictwem U + 9 FC 3 (\<ideogramów CJK, ostatnie >).</span><span class="sxs-lookup"><span data-stu-id="c4456-395">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="c4456-396">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-396">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-397">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-397">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-398">Wskazuje, czy określony znak Unicode jest skategoryzowany jako list Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-398">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-399"><see langword="true" /> Jeśli <paramref name="c" /> jest literą; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-399"><see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-400">Ta metoda określa, czy <xref:System.Char> jest członkiem żadnych kategorii litery Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-400">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="c4456-401">Litery Unicode są następujące:</span><span class="sxs-lookup"><span data-stu-id="c4456-401">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="c4456-402">Wielkie litery, np. U + 0041 (ŁACIŃSKI litera A) za pośrednictwem U + 005A (ŁACIŃSKI litera Z) lub U + 0400 (CYRYLICY litera programu Internet Explorer z DIAKRYTYCZNY) za pośrednictwem U + 042F (CYRYLICY litera YA).</span><span class="sxs-lookup"><span data-stu-id="c4456-402">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="c4456-403">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-403">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="c4456-404">Małe litery, np. U + 0061 (A MAŁA litera ŁACIŃSKA) za pośrednictwem U + 007A (ŁACIŃSKI małe litery Z), lub U + 03AC (GRECKIEGO MAŁA litera ALFA z AKCENTEM) za pośrednictwem U + 03CE (GRECKIEGO MAŁA litera OMEGA z AKCENTEM).</span><span class="sxs-lookup"><span data-stu-id="c4456-404">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="c4456-405">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-405">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="c4456-406">Tytuł wielkość liter, np. U + 01 C 5 (ŁACIŃSKI litera D z małej litery Z z CARON) lub U + 1FFC (GRECKIEGO litera OMEGA z PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="c4456-406">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="c4456-407">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-407">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="c4456-408">Modyfikatory, np. U + 02B0 (H MAŁA litera MODYFIKATOR) za pośrednictwem 02C U + 1 (MODYFIKATOR litery ODWRÓCONE GLOTTAL STOP), lub U + 1D2C (A kapitału litera MODYFIKATORA) za pośrednictwem U + 1 d 61 (MODYFIKATOR CHI małe litery).</span><span class="sxs-lookup"><span data-stu-id="c4456-408">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="c4456-409">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-409">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="c4456-410">Inne litery, np. U + 05 D 0 (HEBRAJSKI litery ALEF) za pośrednictwem U + 05EA (HEBRAJSKI TAV litery), U + 0621 (ARABIC litery HAMZA) za pośrednictwem U + 063A (ARABIC GHAIN litery), lub U + 4E00 (\<ideogramów CJK, pierwsza >) za pośrednictwem U + 9 FC 3 (\<ideogramów CJK, ostatnie >).</span><span class="sxs-lookup"><span data-stu-id="c4456-410">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="c4456-411">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-411">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-412">Poniższy przykład kodu pokazuje <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-412">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-413">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-413">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-414">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-414">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-415">Wskazuje, czy znak na określonej pozycji w ciągu określonej jest skategoryzowany jako list Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-415">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-416"><see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest literą; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-416"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-417">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-417">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-418">Ta metoda określa, czy znak na pozycji indeksu określonego w ciągu jest członkiem żadnych kategorii litery Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-418">This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</span></span> <span data-ttu-id="c4456-419">Litery Unicode są następujące:</span><span class="sxs-lookup"><span data-stu-id="c4456-419">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="c4456-420">Wielkie litery, np. U + 0041 (ŁACIŃSKI litera A) za pośrednictwem U + 005A (ŁACIŃSKI litera Z) lub U + 0400 (CYRYLICY litera programu Internet Explorer z DIAKRYTYCZNY) za pośrednictwem U + 042F (CYRYLICY litera YA).</span><span class="sxs-lookup"><span data-stu-id="c4456-420">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="c4456-421">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-421">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="c4456-422">Małe litery, np. U + 0061 (A MAŁA litera ŁACIŃSKA) za pośrednictwem U + 007A (ŁACIŃSKI małe litery Z), lub U + 03AC (GRECKIEGO MAŁA litera ALFA z AKCENTEM) za pośrednictwem U + 03CE (GRECKIEGO MAŁA litera OMEGA z AKCENTEM).</span><span class="sxs-lookup"><span data-stu-id="c4456-422">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="c4456-423">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-423">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="c4456-424">Tytuł wielkość liter, np. U + 01 C 5 (ŁACIŃSKI litera D z małej litery Z z CARON) lub U + 1FFC (GRECKIEGO litera OMEGA z PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="c4456-424">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="c4456-425">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-425">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="c4456-426">Modyfikatory, np. U + 02B0 (H MAŁA litera MODYFIKATOR) za pośrednictwem 02C U + 1 (MODYFIKATOR litery ODWRÓCONE GLOTTAL STOP), lub U + 1D2C (A kapitału litera MODYFIKATORA) za pośrednictwem U + 1 d 61 (MODYFIKATOR CHI małe litery).</span><span class="sxs-lookup"><span data-stu-id="c4456-426">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="c4456-427">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-427">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="c4456-428">Inne litery, np. U + 05 D 0 (HEBRAJSKI litery ALEF) za pośrednictwem U + 05EA (HEBRAJSKI TAV litery), U + 0621 (ARABIC litery HAMZA) za pośrednictwem U + 063A (ARABIC GHAIN litery), lub U + 4E00 (\<ideogramów CJK, pierwsza >) za pośrednictwem U + 9 FC 3 (\<ideogramów CJK, ostatnie >).</span><span class="sxs-lookup"><span data-stu-id="c4456-428">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="c4456-429">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-429">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-430">Poniższy przykład kodu pokazuje <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-430">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-431"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-431"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-432"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-432"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetterOrDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-433">Wskazuje, czy znak Unicode jest skategoryzowany jako literą lub dziesiętną wartością cyfrową.</span><span class="sxs-lookup"><span data-stu-id="c4456-433">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-434">Prawidłowe litery i cyfry dziesiętne są członkami następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, lub `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="c4456-434">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-435">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-435">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-436">Wskazuje, czy określony znak Unicode jest skategoryzowany jako literą lub dziesiętną wartością cyfrową.</span><span class="sxs-lookup"><span data-stu-id="c4456-436">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-437"><see langword="true" /> Jeśli <paramref name="c" /> jest literą lub dziesiętną wartością cyfrową; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-437"><see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-438">Prawidłowe litery i cyfry dziesiętne są członkami następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, lub `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="c4456-438">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-439">Poniższy przykład kodu pokazuje <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-439">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-440">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-440">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-441">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-441">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-442">Wskazuje, czy znak na określonej pozycji w ciągu określonej jest skategoryzowany jako literą lub dziesiętną wartością cyfrową.</span><span class="sxs-lookup"><span data-stu-id="c4456-442">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-443"><see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest literą lub dziesiętną wartością cyfrową; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-443"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-444">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-444">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-445">Prawidłowe litery i cyfry dziesiętne są członkami następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, lub `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="c4456-445">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-446">Poniższy przykład kodu pokazuje <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-446">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-447"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-447"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-448"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-448"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-449">Wskazuje, czy znak Unicode jest skategoryzowany jako się małą literą.</span><span class="sxs-lookup"><span data-stu-id="c4456-449">Indicates whether a Unicode character is categorized as a lowercase letter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-450">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-450">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-451">Wskazuje, czy określony znak Unicode jest skategoryzowany jako się małą literą.</span><span class="sxs-lookup"><span data-stu-id="c4456-451">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-452"><see langword="true" /> Jeśli <paramref name="c" /> jest małą literę; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-452"><see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-453">Nieprawidłowa małe litery należą do następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="c4456-453">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-454">Poniższy przykład kodu pokazuje <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-454">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-455">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-455">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-456">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-456">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-457">Wskazuje, czy znak na określonej pozycji w ciągu określonej jest skategoryzowany jako się małą literą.</span><span class="sxs-lookup"><span data-stu-id="c4456-457">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-458"><see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest małą literę; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-458"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-459">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-459">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-460">Nieprawidłowa małe litery należą do następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="c4456-460">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-461">Poniższy przykład kodu pokazuje <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-461">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-462"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-462"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-463"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-463"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLowSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-464">Wskazuje, czy określony <see cref="T:System.Char" /> obiekt jest dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-464">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-465">Znak do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-465">The character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-466">Wskazuje, czy określony <see cref="T:System.Char" /> obiekt jest dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-466">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-467"><see langword="true" /> Jeśli wartość liczbową <paramref name="c" /> parametru może się wahać od U + DC00 za pośrednictwem U + DFFF; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-467"><see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-468">Oprócz reprezentowania pojedynczych znaków przy użyciu 16-bitowego kodu znaku, kodowanie UTF-16 pozwala na przedstawianie znaków abstrakcyjnych za pomocą dwóch 16-bitowych kodów znaku, znanych jako para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="c4456-468">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="c4456-469">Drugi element w tej pary jest dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-469">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="c4456-470">Punktu kodu może należeć do zakresu od U + DC00 do U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="c4456-470">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="c4456-471">Indywidualny znak zastępczy ma nie interpretacji własnych; jest istotny tylko wtedy, gdy jest używany jako część pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="c4456-471">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-472">Poniższy przykład kodu pokazuje <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, i <xref:System.Char.IsSurrogatePair%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-472">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-473">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-473">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-474">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-474">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-475">Wskazuje, czy <see cref="T:System.Char" /> obiekt na określonej pozycji w ciągu jest dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-475">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-476"><see langword="true" /> Jeśli określony znak w wartość liczbową <paramref name="s" /> parametru może się wahać od U + DC00 za pośrednictwem U + DFFF; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-476"><see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-477">`index` Parametr jest liczony od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-477">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="c4456-478">Oprócz reprezentowania pojedynczych znaków przy użyciu 16-bitowego kodu znaku, kodowanie UTF-16 pozwala na przedstawianie znaków abstrakcyjnych za pomocą dwóch 16-bitowych kodów znaku, znanych jako para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="c4456-478">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="c4456-479">Drugi element w tej pary jest dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-479">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="c4456-480">Punktu kodu może należeć do zakresu od U + DC00 do U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="c4456-480">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="c4456-481">Indywidualny znak zastępczy ma nie interpretacji własnych; jest istotny tylko wtedy, gdy jest używany jako część pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="c4456-481">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-482">Poniższy przykład kodu pokazuje <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, i <xref:System.Char.IsSurrogatePair%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-482">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-483"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-483"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-484"><paramref name="index" /> nie jest w stanie <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-484"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNumber">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-485">Wskazuje, czy znak Unicode jest skategoryzowany jako liczby.</span><span class="sxs-lookup"><span data-stu-id="c4456-485">Indicates whether a Unicode character is categorized as a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-486">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-486">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-487">Wskazuje, czy określony znak Unicode jest skategoryzowany jako liczby.</span><span class="sxs-lookup"><span data-stu-id="c4456-487">Indicates whether the specified Unicode character is categorized as a number.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-488"><see langword="true" /> Jeśli <paramref name="c" /> jest liczbą; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-488"><see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-489">Ta metoda określa, czy <xref:System.Char> żadnych liczbowych kategorii Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-489">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="c4456-490">Poza tym cyfr, liczby to między innymi znaków, ułamków indeksy dolne, indeksów górnych, łacińskich cyfry, łącznik waluty i otoczony cyfry.</span><span class="sxs-lookup"><span data-stu-id="c4456-490">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="c4456-491">Ta metoda różni się znacząco od <xref:System.Char.IsDigit%2A> metodę, która określa, czy <xref:System.Char> jest cyfrą podstawa 10.</span><span class="sxs-lookup"><span data-stu-id="c4456-491">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c4456-492"><xref:System.Char.IsNumber%28System.Char%29> — Metoda nie jest przeznaczona do określenia, czy ciąg składa się z cyfr (na przykład, wywołując metodę dla każdego znaku w ciągu).</span><span class="sxs-lookup"><span data-stu-id="c4456-492">The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="c4456-493">Aby ustalić, czy ciąg składa się z cyfr, wywoływanie jednego z przeciążeń `TryParse` — metoda (takich jak <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> lub <xref:System.Double.TryParse%2A?displayProperty=nameWithType> typu całkowitą lub zmiennoprzecinkową.</span><span class="sxs-lookup"><span data-stu-id="c4456-493">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="c4456-494">Prawidłowe numery są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, lub <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-494">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="c4456-495"><xref:System.Char.IsNumber%28System.Char%29> Metody, przy założeniu, że `c` odpowiada pojedynczy znak językowe i sprawdza, czy ten znak reprezentuje liczbę.</span><span class="sxs-lookup"><span data-stu-id="c4456-495">The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number.</span></span> <span data-ttu-id="c4456-496">Jednak niektóre numery w standardzie Unicode są reprezentowane przez dwa <xref:System.Char> obiektów, które tworzą para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="c4456-496">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="c4456-497">Na przykład system numeracji Morza Egejskiego składa się z kodów znaku U+10107 do U+10133.</span><span class="sxs-lookup"><span data-stu-id="c4456-497">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="c4456-498">W poniższym przykładzie użyto <xref:System.Char.ConvertFromUtf32%2A> metody tworzenia wystąpienia ciąg reprezentujący Morza EGEJSKIEGO liczby jeden.</span><span class="sxs-lookup"><span data-stu-id="c4456-498">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="c4456-499">Jako dane wyjściowe w przykładzie pokazano <xref:System.Char.IsNumber%28System.Char%29> metoda zwraca `false` Jeśli przekazaniem zastępczym wysokiego poziomu lub dwuskładnikowego tego znaku.</span><span class="sxs-lookup"><span data-stu-id="c4456-499">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]
 [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="c4456-500">W poniższym przykładzie pokazano <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-500">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-501">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-501">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-502">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-502">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-503">Wskazuje, czy znak na określonej pozycji w ciągu określonej jest skategoryzowany jako liczby.</span><span class="sxs-lookup"><span data-stu-id="c4456-503">Indicates whether the character at the specified position in a specified string is categorized as a number.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-504"><see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest liczbą; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-504"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-505">Ta metoda określa, czy <xref:System.Char> żadnych liczbowych kategorii Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-505">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="c4456-506">Poza tym cyfr, liczby to między innymi znaków, ułamków indeksy dolne, indeksów górnych, łacińskich cyfry, łącznik waluty i otoczony cyfry.</span><span class="sxs-lookup"><span data-stu-id="c4456-506">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="c4456-507">Ta metoda różni się znacząco od <xref:System.Char.IsDigit%2A> metodę, która określa, czy <xref:System.Char> jest cyfrą podstawa 10.</span><span class="sxs-lookup"><span data-stu-id="c4456-507">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
 <span data-ttu-id="c4456-508">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-508">Character positions in a string are indexed starting from zero.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c4456-509"><xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> — Metoda nie jest przeznaczona do określenia, czy ciąg składa się z cyfr (na przykład, wywołując metodę dla każdego znaku w ciągu).</span><span class="sxs-lookup"><span data-stu-id="c4456-509">The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="c4456-510">Aby ustalić, czy ciąg składa się z cyfr, wywoływanie jednego z przeciążeń `TryParse` — metoda (takich jak <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> lub <xref:System.Double.TryParse%2A?displayProperty=nameWithType> typu całkowitą lub zmiennoprzecinkową.</span><span class="sxs-lookup"><span data-stu-id="c4456-510">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="c4456-511">Prawidłowe numery są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, lub <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-511">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="c4456-512">Jeśli <xref:System.Char> obiektu na pozycji `index` to pierwszy znak para zastępcza prawidłową <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> Metoda określa, czy para zastępcza formularzy cyfrę.</span><span class="sxs-lookup"><span data-stu-id="c4456-512">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="c4456-513">Na przykład system numeracji Morza Egejskiego składa się z kodów znaku U+10107 do U+10133.</span><span class="sxs-lookup"><span data-stu-id="c4456-513">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="c4456-514">W poniższym przykładzie użyto <xref:System.Char.ConvertFromUtf32%2A> metody tworzenia wystąpienia ciąg reprezentujący Morza EGEJSKIEGO liczby jeden.</span><span class="sxs-lookup"><span data-stu-id="c4456-514">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="c4456-515">Jako dane wyjściowe w przykładzie pokazano <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> metoda zwraca `true` , jeśli został przekazany znakiem zastępczym wysokiego poziomu o Morza EGEJSKIEGO liczby jeden.</span><span class="sxs-lookup"><span data-stu-id="c4456-515">As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="c4456-516">Jednak jeśli dwuskładnikowego został przekazany, uwzględnia tylko kategorii dwuskładnikowego i zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="c4456-516">However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]
 [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="c4456-517">W poniższym przykładzie pokazano <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-517">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-518"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-518"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-519"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-519"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPunctuation">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-520">Wskazuje, czy znak Unicode jest skategoryzowany jako znak interpunkcyjny.</span><span class="sxs-lookup"><span data-stu-id="c4456-520">Indicates whether a Unicode character is categorized as a punctuation mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-521">Prawidłowe znaki interpunkcyjne są członkami następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, lub `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="c4456-521">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="c4456-522">Obejmują one znaków punktów kodowych Unicode, które są wymienione w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="c4456-522">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="c4456-523">U+0021 to U+0023</span><span class="sxs-lookup"><span data-stu-id="c4456-523">U+0021 to U+0023</span></span>|<span data-ttu-id="c4456-524">U + 060C i U + 060D</span><span class="sxs-lookup"><span data-stu-id="c4456-524">U+060C and U+060D</span></span>|<span data-ttu-id="c4456-525">U + 1800 do U + 180A</span><span class="sxs-lookup"><span data-stu-id="c4456-525">U+1800 to U+180A</span></span>|<span data-ttu-id="c4456-526">3014 U + do U + 301F</span><span class="sxs-lookup"><span data-stu-id="c4456-526">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="c4456-527">U + 0025 do U + 002A</span><span class="sxs-lookup"><span data-stu-id="c4456-527">U+0025 to U+002A</span></span>|<span data-ttu-id="c4456-528">U+061B</span><span class="sxs-lookup"><span data-stu-id="c4456-528">U+061B</span></span>|<span data-ttu-id="c4456-529">U + 1944 i U + 1945</span><span class="sxs-lookup"><span data-stu-id="c4456-529">U+1944 and U+1945</span></span>|<span data-ttu-id="c4456-530">U+3030</span><span class="sxs-lookup"><span data-stu-id="c4456-530">U+3030</span></span>|  
|<span data-ttu-id="c4456-531">U + 002C, aby U + 002F</span><span class="sxs-lookup"><span data-stu-id="c4456-531">U+002C to U+002F</span></span>|<span data-ttu-id="c4456-532">U + 061E i U + 061F</span><span class="sxs-lookup"><span data-stu-id="c4456-532">U+061E and U+061F</span></span>|<span data-ttu-id="c4456-533">U + 19DE i U + 19DF</span><span class="sxs-lookup"><span data-stu-id="c4456-533">U+19DE and U+19DF</span></span>|<span data-ttu-id="c4456-534">U+303D</span><span class="sxs-lookup"><span data-stu-id="c4456-534">U+303D</span></span>|  
|<span data-ttu-id="c4456-535">U + 003a Notebook i U + 003B</span><span class="sxs-lookup"><span data-stu-id="c4456-535">U+003A and U+003B</span></span>|<span data-ttu-id="c4456-536">066A U + U + 066 d</span><span class="sxs-lookup"><span data-stu-id="c4456-536">U+066A to U+066D</span></span>|<span data-ttu-id="c4456-537">U + 1A1E i U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="c4456-537">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="c4456-538">U+30A0</span><span class="sxs-lookup"><span data-stu-id="c4456-538">U+30A0</span></span>|  
|<span data-ttu-id="c4456-539">U + 003F i U + 0040</span><span class="sxs-lookup"><span data-stu-id="c4456-539">U+003F and U+0040</span></span>|<span data-ttu-id="c4456-540">U+06D4</span><span class="sxs-lookup"><span data-stu-id="c4456-540">U+06D4</span></span>|<span data-ttu-id="c4456-541">U + 1B5A do U + 1B60</span><span class="sxs-lookup"><span data-stu-id="c4456-541">U+1B5A to U+1B60</span></span>|<span data-ttu-id="c4456-542">U+30FB</span><span class="sxs-lookup"><span data-stu-id="c4456-542">U+30FB</span></span>|  
|<span data-ttu-id="c4456-543">005B U + U + 005 d</span><span class="sxs-lookup"><span data-stu-id="c4456-543">U+005B to U+005D</span></span>|<span data-ttu-id="c4456-544">0700 U + U + 070 d</span><span class="sxs-lookup"><span data-stu-id="c4456-544">U+0700 to U+070D</span></span>|<span data-ttu-id="c4456-545">U + 2010 2027 U +</span><span class="sxs-lookup"><span data-stu-id="c4456-545">U+2010 to U+2027</span></span>|<span data-ttu-id="c4456-546">U + A874 do U + A877</span><span class="sxs-lookup"><span data-stu-id="c4456-546">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="c4456-547">U+005F</span><span class="sxs-lookup"><span data-stu-id="c4456-547">U+005F</span></span>|<span data-ttu-id="c4456-548">U + 07F7 do U + 07F9</span><span class="sxs-lookup"><span data-stu-id="c4456-548">U+07F7 to U+07F9</span></span>|<span data-ttu-id="c4456-549">U + 2030 do U + 2043</span><span class="sxs-lookup"><span data-stu-id="c4456-549">U+2030 to U+2043</span></span>|<span data-ttu-id="c4456-550">U + FD3E i U + FD3F</span><span class="sxs-lookup"><span data-stu-id="c4456-550">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="c4456-551">U+007B</span><span class="sxs-lookup"><span data-stu-id="c4456-551">U+007B</span></span>|<span data-ttu-id="c4456-552">U + 0964 i U + 0965</span><span class="sxs-lookup"><span data-stu-id="c4456-552">U+0964 and U+0965</span></span>|<span data-ttu-id="c4456-553">U + 2045 do U + 2051</span><span class="sxs-lookup"><span data-stu-id="c4456-553">U+2045 to U+2051</span></span>|<span data-ttu-id="c4456-554">U + FE10 do U + FE19</span><span class="sxs-lookup"><span data-stu-id="c4456-554">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="c4456-555">U+007D</span><span class="sxs-lookup"><span data-stu-id="c4456-555">U+007D</span></span>|<span data-ttu-id="c4456-556">U+0970</span><span class="sxs-lookup"><span data-stu-id="c4456-556">U+0970</span></span>|<span data-ttu-id="c4456-557">2053 U + do U + 205E</span><span class="sxs-lookup"><span data-stu-id="c4456-557">U+2053 to U+205E</span></span>|<span data-ttu-id="c4456-558">U + FE30 do U + FE52</span><span class="sxs-lookup"><span data-stu-id="c4456-558">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="c4456-559">U+00A1</span><span class="sxs-lookup"><span data-stu-id="c4456-559">U+00A1</span></span>|<span data-ttu-id="c4456-560">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="c4456-560">U+0DF4</span></span>|<span data-ttu-id="c4456-561">U + 207D i U + 207E</span><span class="sxs-lookup"><span data-stu-id="c4456-561">U+207D and  U+207E</span></span>|<span data-ttu-id="c4456-562">U + FE54 do U + FE61</span><span class="sxs-lookup"><span data-stu-id="c4456-562">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="c4456-563">U+00AB</span><span class="sxs-lookup"><span data-stu-id="c4456-563">U+00AB</span></span>|<span data-ttu-id="c4456-564">U + 0E4F do U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="c4456-564">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="c4456-565">U + 208D i U + 208E</span><span class="sxs-lookup"><span data-stu-id="c4456-565">U+208D and U+208E</span></span>|<span data-ttu-id="c4456-566">U+FE63</span><span class="sxs-lookup"><span data-stu-id="c4456-566">U+FE63</span></span>|  
|<span data-ttu-id="c4456-567">U+00AD</span><span class="sxs-lookup"><span data-stu-id="c4456-567">U+00AD</span></span>|<span data-ttu-id="c4456-568">U + 0F04 do U + 0F12</span><span class="sxs-lookup"><span data-stu-id="c4456-568">U+0F04 to U+0F12</span></span>|<span data-ttu-id="c4456-569">U + 2329 i U + 232A</span><span class="sxs-lookup"><span data-stu-id="c4456-569">U+2329 and U+232A</span></span>|<span data-ttu-id="c4456-570">U+FE68</span><span class="sxs-lookup"><span data-stu-id="c4456-570">U+FE68</span></span>|  
|<span data-ttu-id="c4456-571">U+00B7</span><span class="sxs-lookup"><span data-stu-id="c4456-571">U+00B7</span></span>|<span data-ttu-id="c4456-572">U + 0F3A do U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="c4456-572">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="c4456-573">U + 2768 do U + 2775</span><span class="sxs-lookup"><span data-stu-id="c4456-573">U+2768 to U+2775</span></span>|<span data-ttu-id="c4456-574">U + FE6A i U + FE6B</span><span class="sxs-lookup"><span data-stu-id="c4456-574">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="c4456-575">U+00BB</span><span class="sxs-lookup"><span data-stu-id="c4456-575">U+00BB</span></span>|<span data-ttu-id="c4456-576">U+0F85</span><span class="sxs-lookup"><span data-stu-id="c4456-576">U+0F85</span></span>|<span data-ttu-id="c4456-577">27 c 5 U + U + 6 27 c</span><span class="sxs-lookup"><span data-stu-id="c4456-577">U+27C5 to U+27C6</span></span>|<span data-ttu-id="c4456-578">U + FF01 do U + FF03</span><span class="sxs-lookup"><span data-stu-id="c4456-578">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="c4456-579">U+00BF</span><span class="sxs-lookup"><span data-stu-id="c4456-579">U+00BF</span></span>|<span data-ttu-id="c4456-580">U + 0FD0 i U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="c4456-580">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="c4456-581">U + 27E6 do U + 27EB</span><span class="sxs-lookup"><span data-stu-id="c4456-581">U+27E6 to U+27EB</span></span>|<span data-ttu-id="c4456-582">U + FF05 do U + FF0A</span><span class="sxs-lookup"><span data-stu-id="c4456-582">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="c4456-583">U+037E</span><span class="sxs-lookup"><span data-stu-id="c4456-583">U+037E</span></span>|<span data-ttu-id="c4456-584">104 a U + – U + 104F</span><span class="sxs-lookup"><span data-stu-id="c4456-584">U+104A to U+104F</span></span>|<span data-ttu-id="c4456-585">U + 2983 do U + 2998</span><span class="sxs-lookup"><span data-stu-id="c4456-585">U+2983 to U+2998</span></span>|<span data-ttu-id="c4456-586">U + FF0C do U + FF0F</span><span class="sxs-lookup"><span data-stu-id="c4456-586">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="c4456-587">U+0387</span><span class="sxs-lookup"><span data-stu-id="c4456-587">U+0387</span></span>|<span data-ttu-id="c4456-588">U+10FB</span><span class="sxs-lookup"><span data-stu-id="c4456-588">U+10FB</span></span>|<span data-ttu-id="c4456-589">U + 29D 8 U + 29DB</span><span class="sxs-lookup"><span data-stu-id="c4456-589">U+29D8 to U+29DB</span></span>|<span data-ttu-id="c4456-590">U + FF1A i U + FF1B</span><span class="sxs-lookup"><span data-stu-id="c4456-590">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="c4456-591">U + 055A do U + 055F</span><span class="sxs-lookup"><span data-stu-id="c4456-591">U+055A to U+055F</span></span>|<span data-ttu-id="c4456-592">U + 1361 do U + 1368</span><span class="sxs-lookup"><span data-stu-id="c4456-592">U+1361 to U+1368</span></span>|<span data-ttu-id="c4456-593">U + 29FC i U + 29FD</span><span class="sxs-lookup"><span data-stu-id="c4456-593">U+29FC and U+29FD</span></span>|<span data-ttu-id="c4456-594">U + FF1F i U + FF20</span><span class="sxs-lookup"><span data-stu-id="c4456-594">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="c4456-595">U + 0589 i U + 058A</span><span class="sxs-lookup"><span data-stu-id="c4456-595">U+0589 and U+058A</span></span>|<span data-ttu-id="c4456-596">U + 166D i U + 166E</span><span class="sxs-lookup"><span data-stu-id="c4456-596">U+166D and U+166E</span></span>|<span data-ttu-id="c4456-597">U + 2CF9 do U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="c4456-597">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="c4456-598">U + FF3B do U + FF3D</span><span class="sxs-lookup"><span data-stu-id="c4456-598">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="c4456-599">U+05BE</span><span class="sxs-lookup"><span data-stu-id="c4456-599">U+05BE</span></span>|<span data-ttu-id="c4456-600">U + 169B i U + 169C</span><span class="sxs-lookup"><span data-stu-id="c4456-600">U+169B and U+169C</span></span>|<span data-ttu-id="c4456-601">U + 2CFE i U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="c4456-601">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="c4456-602">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="c4456-602">U+FF3F</span></span>|  
|<span data-ttu-id="c4456-603">U+05C0</span><span class="sxs-lookup"><span data-stu-id="c4456-603">U+05C0</span></span>|<span data-ttu-id="c4456-604">U + 16EB do U + 16ED</span><span class="sxs-lookup"><span data-stu-id="c4456-604">U+16EB to U+16ED</span></span>|<span data-ttu-id="c4456-605">U + 2E00 do U + 2E17</span><span class="sxs-lookup"><span data-stu-id="c4456-605">U+2E00 to U+2E17</span></span>|<span data-ttu-id="c4456-606">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="c4456-606">U+FF5B</span></span>|  
|<span data-ttu-id="c4456-607">U+05C3</span><span class="sxs-lookup"><span data-stu-id="c4456-607">U+05C3</span></span>|<span data-ttu-id="c4456-608">U + 1735 i U + 1736</span><span class="sxs-lookup"><span data-stu-id="c4456-608">U+1735 and U+1736</span></span>|<span data-ttu-id="c4456-609">U + 2E1C i U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="c4456-609">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="c4456-610">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="c4456-610">U+FF5D</span></span>|  
|<span data-ttu-id="c4456-611">U+05C6</span><span class="sxs-lookup"><span data-stu-id="c4456-611">U+05C6</span></span>|<span data-ttu-id="c4456-612">4 17D U + U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="c4456-612">U+17D4 to U+17D6</span></span>|<span data-ttu-id="c4456-613">3001 U + do U + 3003</span><span class="sxs-lookup"><span data-stu-id="c4456-613">U+3001 to U+3003</span></span>|<span data-ttu-id="c4456-614">U + FF5F do U + FF65</span><span class="sxs-lookup"><span data-stu-id="c4456-614">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="c4456-615">U + 05F3 i U + 05F4</span><span class="sxs-lookup"><span data-stu-id="c4456-615">U+05F3 and U+05F4</span></span>|<span data-ttu-id="c4456-616">U + 17D 8 U + 17DA</span><span class="sxs-lookup"><span data-stu-id="c4456-616">U+17D8 to U+17DA</span></span>|<span data-ttu-id="c4456-617">3008 U + do U + 3011</span><span class="sxs-lookup"><span data-stu-id="c4456-617">U+3008 to U+3011</span></span>||  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-618">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-618">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-619">Wskazuje, czy określony znak Unicode jest skategoryzowany jako znak interpunkcyjny.</span><span class="sxs-lookup"><span data-stu-id="c4456-619">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-620"><see langword="true" /> Jeśli <paramref name="c" /> jest znak interpunkcyjny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-620"><see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-621">Prawidłowe znaki interpunkcyjne są członkami następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, lub `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="c4456-621">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="c4456-622">Obejmują one znaków punktów kodowych Unicode, które są wymienione w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="c4456-622">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="c4456-623">U+0021 to U+0023</span><span class="sxs-lookup"><span data-stu-id="c4456-623">U+0021 to U+0023</span></span>|<span data-ttu-id="c4456-624">U + 060C i U + 060D</span><span class="sxs-lookup"><span data-stu-id="c4456-624">U+060C and U+060D</span></span>|<span data-ttu-id="c4456-625">U + 1800 do U + 180A</span><span class="sxs-lookup"><span data-stu-id="c4456-625">U+1800 to U+180A</span></span>|<span data-ttu-id="c4456-626">3014 U + do U + 301F</span><span class="sxs-lookup"><span data-stu-id="c4456-626">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="c4456-627">U + 0025 do U + 002A</span><span class="sxs-lookup"><span data-stu-id="c4456-627">U+0025 to U+002A</span></span>|<span data-ttu-id="c4456-628">U+061B</span><span class="sxs-lookup"><span data-stu-id="c4456-628">U+061B</span></span>|<span data-ttu-id="c4456-629">U + 1944 i U + 1945</span><span class="sxs-lookup"><span data-stu-id="c4456-629">U+1944 and U+1945</span></span>|<span data-ttu-id="c4456-630">U+3030</span><span class="sxs-lookup"><span data-stu-id="c4456-630">U+3030</span></span>|  
|<span data-ttu-id="c4456-631">U + 002C, aby U + 002F</span><span class="sxs-lookup"><span data-stu-id="c4456-631">U+002C to U+002F</span></span>|<span data-ttu-id="c4456-632">U + 061E i U + 061F</span><span class="sxs-lookup"><span data-stu-id="c4456-632">U+061E and U+061F</span></span>|<span data-ttu-id="c4456-633">U + 19DE i U + 19DF</span><span class="sxs-lookup"><span data-stu-id="c4456-633">U+19DE and U+19DF</span></span>|<span data-ttu-id="c4456-634">U+303D</span><span class="sxs-lookup"><span data-stu-id="c4456-634">U+303D</span></span>|  
|<span data-ttu-id="c4456-635">U + 003a Notebook i U + 003B</span><span class="sxs-lookup"><span data-stu-id="c4456-635">U+003A and U+003B</span></span>|<span data-ttu-id="c4456-636">066A U + U + 066 d</span><span class="sxs-lookup"><span data-stu-id="c4456-636">U+066A to U+066D</span></span>|<span data-ttu-id="c4456-637">U + 1A1E i U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="c4456-637">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="c4456-638">U+30A0</span><span class="sxs-lookup"><span data-stu-id="c4456-638">U+30A0</span></span>|  
|<span data-ttu-id="c4456-639">U + 003F i U + 0040</span><span class="sxs-lookup"><span data-stu-id="c4456-639">U+003F and U+0040</span></span>|<span data-ttu-id="c4456-640">U+06D4</span><span class="sxs-lookup"><span data-stu-id="c4456-640">U+06D4</span></span>|<span data-ttu-id="c4456-641">U + 1B5A do U + 1B60</span><span class="sxs-lookup"><span data-stu-id="c4456-641">U+1B5A to U+1B60</span></span>|<span data-ttu-id="c4456-642">U+30FB</span><span class="sxs-lookup"><span data-stu-id="c4456-642">U+30FB</span></span>|  
|<span data-ttu-id="c4456-643">005B U + U + 005 d</span><span class="sxs-lookup"><span data-stu-id="c4456-643">U+005B to U+005D</span></span>|<span data-ttu-id="c4456-644">0700 U + U + 070 d</span><span class="sxs-lookup"><span data-stu-id="c4456-644">U+0700 to U+070D</span></span>|<span data-ttu-id="c4456-645">U + 2010 2027 U +</span><span class="sxs-lookup"><span data-stu-id="c4456-645">U+2010 to U+2027</span></span>|<span data-ttu-id="c4456-646">U + A874 do U + A877</span><span class="sxs-lookup"><span data-stu-id="c4456-646">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="c4456-647">U+005F</span><span class="sxs-lookup"><span data-stu-id="c4456-647">U+005F</span></span>|<span data-ttu-id="c4456-648">U + 07F7 do U + 07F9</span><span class="sxs-lookup"><span data-stu-id="c4456-648">U+07F7 to U+07F9</span></span>|<span data-ttu-id="c4456-649">U + 2030 do U + 2043</span><span class="sxs-lookup"><span data-stu-id="c4456-649">U+2030 to U+2043</span></span>|<span data-ttu-id="c4456-650">U + FD3E i U + FD3F</span><span class="sxs-lookup"><span data-stu-id="c4456-650">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="c4456-651">U+007B</span><span class="sxs-lookup"><span data-stu-id="c4456-651">U+007B</span></span>|<span data-ttu-id="c4456-652">U + 0964 i U + 0965</span><span class="sxs-lookup"><span data-stu-id="c4456-652">U+0964 and U+0965</span></span>|<span data-ttu-id="c4456-653">U + 2045 do U + 2051</span><span class="sxs-lookup"><span data-stu-id="c4456-653">U+2045 to U+2051</span></span>|<span data-ttu-id="c4456-654">U + FE10 do U + FE19</span><span class="sxs-lookup"><span data-stu-id="c4456-654">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="c4456-655">U+007D</span><span class="sxs-lookup"><span data-stu-id="c4456-655">U+007D</span></span>|<span data-ttu-id="c4456-656">U+0970</span><span class="sxs-lookup"><span data-stu-id="c4456-656">U+0970</span></span>|<span data-ttu-id="c4456-657">2053 U + do U + 205E</span><span class="sxs-lookup"><span data-stu-id="c4456-657">U+2053 to U+205E</span></span>|<span data-ttu-id="c4456-658">U + FE30 do U + FE52</span><span class="sxs-lookup"><span data-stu-id="c4456-658">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="c4456-659">U+00A1</span><span class="sxs-lookup"><span data-stu-id="c4456-659">U+00A1</span></span>|<span data-ttu-id="c4456-660">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="c4456-660">U+0DF4</span></span>|<span data-ttu-id="c4456-661">U + 207D i U + 207E</span><span class="sxs-lookup"><span data-stu-id="c4456-661">U+207D and  U+207E</span></span>|<span data-ttu-id="c4456-662">U + FE54 do U + FE61</span><span class="sxs-lookup"><span data-stu-id="c4456-662">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="c4456-663">U+00AB</span><span class="sxs-lookup"><span data-stu-id="c4456-663">U+00AB</span></span>|<span data-ttu-id="c4456-664">U + 0E4F do U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="c4456-664">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="c4456-665">U + 208D i U + 208E</span><span class="sxs-lookup"><span data-stu-id="c4456-665">U+208D and U+208E</span></span>|<span data-ttu-id="c4456-666">U+FE63</span><span class="sxs-lookup"><span data-stu-id="c4456-666">U+FE63</span></span>|  
|<span data-ttu-id="c4456-667">U+00AD</span><span class="sxs-lookup"><span data-stu-id="c4456-667">U+00AD</span></span>|<span data-ttu-id="c4456-668">U + 0F04 do U + 0F12</span><span class="sxs-lookup"><span data-stu-id="c4456-668">U+0F04 to U+0F12</span></span>|<span data-ttu-id="c4456-669">U + 2329 i U + 232A</span><span class="sxs-lookup"><span data-stu-id="c4456-669">U+2329 and U+232A</span></span>|<span data-ttu-id="c4456-670">U+FE68</span><span class="sxs-lookup"><span data-stu-id="c4456-670">U+FE68</span></span>|  
|<span data-ttu-id="c4456-671">U+00B7</span><span class="sxs-lookup"><span data-stu-id="c4456-671">U+00B7</span></span>|<span data-ttu-id="c4456-672">U + 0F3A do U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="c4456-672">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="c4456-673">U + 2768 do U + 2775</span><span class="sxs-lookup"><span data-stu-id="c4456-673">U+2768 to U+2775</span></span>|<span data-ttu-id="c4456-674">U + FE6A i U + FE6B</span><span class="sxs-lookup"><span data-stu-id="c4456-674">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="c4456-675">U+00BB</span><span class="sxs-lookup"><span data-stu-id="c4456-675">U+00BB</span></span>|<span data-ttu-id="c4456-676">U+0F85</span><span class="sxs-lookup"><span data-stu-id="c4456-676">U+0F85</span></span>|<span data-ttu-id="c4456-677">27 c 5 U + U + 6 27 c</span><span class="sxs-lookup"><span data-stu-id="c4456-677">U+27C5 to U+27C6</span></span>|<span data-ttu-id="c4456-678">U + FF01 do U + FF03</span><span class="sxs-lookup"><span data-stu-id="c4456-678">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="c4456-679">U+00BF</span><span class="sxs-lookup"><span data-stu-id="c4456-679">U+00BF</span></span>|<span data-ttu-id="c4456-680">U + 0FD0 i U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="c4456-680">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="c4456-681">U + 27E6 do U + 27EB</span><span class="sxs-lookup"><span data-stu-id="c4456-681">U+27E6 to U+27EB</span></span>|<span data-ttu-id="c4456-682">U + FF05 do U + FF0A</span><span class="sxs-lookup"><span data-stu-id="c4456-682">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="c4456-683">U+037E</span><span class="sxs-lookup"><span data-stu-id="c4456-683">U+037E</span></span>|<span data-ttu-id="c4456-684">104 a U + – U + 104F</span><span class="sxs-lookup"><span data-stu-id="c4456-684">U+104A to U+104F</span></span>|<span data-ttu-id="c4456-685">U + 2983 do U + 2998</span><span class="sxs-lookup"><span data-stu-id="c4456-685">U+2983 to U+2998</span></span>|<span data-ttu-id="c4456-686">U + FF0C do U + FF0F</span><span class="sxs-lookup"><span data-stu-id="c4456-686">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="c4456-687">U+0387</span><span class="sxs-lookup"><span data-stu-id="c4456-687">U+0387</span></span>|<span data-ttu-id="c4456-688">U+10FB</span><span class="sxs-lookup"><span data-stu-id="c4456-688">U+10FB</span></span>|<span data-ttu-id="c4456-689">U + 29D 8 U + 29DB</span><span class="sxs-lookup"><span data-stu-id="c4456-689">U+29D8 to U+29DB</span></span>|<span data-ttu-id="c4456-690">U + FF1A i U + FF1B</span><span class="sxs-lookup"><span data-stu-id="c4456-690">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="c4456-691">U + 055A do U + 055F</span><span class="sxs-lookup"><span data-stu-id="c4456-691">U+055A to U+055F</span></span>|<span data-ttu-id="c4456-692">U + 1361 do U + 1368</span><span class="sxs-lookup"><span data-stu-id="c4456-692">U+1361 to U+1368</span></span>|<span data-ttu-id="c4456-693">U + 29FC i U + 29FD</span><span class="sxs-lookup"><span data-stu-id="c4456-693">U+29FC and U+29FD</span></span>|<span data-ttu-id="c4456-694">U + FF1F i U + FF20</span><span class="sxs-lookup"><span data-stu-id="c4456-694">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="c4456-695">U + 0589 i U + 058A</span><span class="sxs-lookup"><span data-stu-id="c4456-695">U+0589 and U+058A</span></span>|<span data-ttu-id="c4456-696">U + 166D i U + 166E</span><span class="sxs-lookup"><span data-stu-id="c4456-696">U+166D and U+166E</span></span>|<span data-ttu-id="c4456-697">U + 2CF9 do U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="c4456-697">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="c4456-698">U + FF3B do U + FF3D</span><span class="sxs-lookup"><span data-stu-id="c4456-698">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="c4456-699">U+05BE</span><span class="sxs-lookup"><span data-stu-id="c4456-699">U+05BE</span></span>|<span data-ttu-id="c4456-700">U + 169B i U + 169C</span><span class="sxs-lookup"><span data-stu-id="c4456-700">U+169B and U+169C</span></span>|<span data-ttu-id="c4456-701">U + 2CFE i U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="c4456-701">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="c4456-702">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="c4456-702">U+FF3F</span></span>|  
|<span data-ttu-id="c4456-703">U+05C0</span><span class="sxs-lookup"><span data-stu-id="c4456-703">U+05C0</span></span>|<span data-ttu-id="c4456-704">U + 16EB do U + 16ED</span><span class="sxs-lookup"><span data-stu-id="c4456-704">U+16EB to U+16ED</span></span>|<span data-ttu-id="c4456-705">U + 2E00 do U + 2E17</span><span class="sxs-lookup"><span data-stu-id="c4456-705">U+2E00 to U+2E17</span></span>|<span data-ttu-id="c4456-706">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="c4456-706">U+FF5B</span></span>|  
|<span data-ttu-id="c4456-707">U+05C3</span><span class="sxs-lookup"><span data-stu-id="c4456-707">U+05C3</span></span>|<span data-ttu-id="c4456-708">U + 1735 i U + 1736</span><span class="sxs-lookup"><span data-stu-id="c4456-708">U+1735 and U+1736</span></span>|<span data-ttu-id="c4456-709">U + 2E1C i U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="c4456-709">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="c4456-710">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="c4456-710">U+FF5D</span></span>|  
|<span data-ttu-id="c4456-711">U+05C6</span><span class="sxs-lookup"><span data-stu-id="c4456-711">U+05C6</span></span>|<span data-ttu-id="c4456-712">4 17D U + U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="c4456-712">U+17D4 to U+17D6</span></span>|<span data-ttu-id="c4456-713">3001 U + do U + 3003</span><span class="sxs-lookup"><span data-stu-id="c4456-713">U+3001 to U+3003</span></span>|<span data-ttu-id="c4456-714">U + FF5F do U + FF65</span><span class="sxs-lookup"><span data-stu-id="c4456-714">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="c4456-715">U + 05F3 i U + 05F4</span><span class="sxs-lookup"><span data-stu-id="c4456-715">U+05F3 and U+05F4</span></span>|<span data-ttu-id="c4456-716">U + 17D 8 U + 17DA</span><span class="sxs-lookup"><span data-stu-id="c4456-716">U+17D8 to U+17DA</span></span>|<span data-ttu-id="c4456-717">3008 U + do U + 3011</span><span class="sxs-lookup"><span data-stu-id="c4456-717">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="c4456-718">Poniższy przykład kodu pokazuje <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-718">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-719">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-719">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-720">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-720">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-721">Wskazuje, czy znak na określonej pozycji w ciągu określonej jest skategoryzowany jako znak interpunkcyjny.</span><span class="sxs-lookup"><span data-stu-id="c4456-721">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-722"><see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest znak interpunkcyjny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-722"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-723">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-723">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-724">Prawidłowe znaki interpunkcyjne są członkami następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, lub `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="c4456-724">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="c4456-725">Obejmują one znaków punktów kodowych Unicode, które są wymienione w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="c4456-725">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="c4456-726">U+0021 to U+0023</span><span class="sxs-lookup"><span data-stu-id="c4456-726">U+0021 to U+0023</span></span>|<span data-ttu-id="c4456-727">U + 060C i U + 060D</span><span class="sxs-lookup"><span data-stu-id="c4456-727">U+060C and U+060D</span></span>|<span data-ttu-id="c4456-728">U + 1800 do U + 180A</span><span class="sxs-lookup"><span data-stu-id="c4456-728">U+1800 to U+180A</span></span>|<span data-ttu-id="c4456-729">3014 U + do U + 301F</span><span class="sxs-lookup"><span data-stu-id="c4456-729">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="c4456-730">U + 0025 do U + 002A</span><span class="sxs-lookup"><span data-stu-id="c4456-730">U+0025 to U+002A</span></span>|<span data-ttu-id="c4456-731">U+061B</span><span class="sxs-lookup"><span data-stu-id="c4456-731">U+061B</span></span>|<span data-ttu-id="c4456-732">U + 1944 i U + 1945</span><span class="sxs-lookup"><span data-stu-id="c4456-732">U+1944 and U+1945</span></span>|<span data-ttu-id="c4456-733">U+3030</span><span class="sxs-lookup"><span data-stu-id="c4456-733">U+3030</span></span>|  
|<span data-ttu-id="c4456-734">U + 002C, aby U + 002F</span><span class="sxs-lookup"><span data-stu-id="c4456-734">U+002C to U+002F</span></span>|<span data-ttu-id="c4456-735">U + 061E i U + 061F</span><span class="sxs-lookup"><span data-stu-id="c4456-735">U+061E and U+061F</span></span>|<span data-ttu-id="c4456-736">U + 19DE i U + 19DF</span><span class="sxs-lookup"><span data-stu-id="c4456-736">U+19DE and U+19DF</span></span>|<span data-ttu-id="c4456-737">U+303D</span><span class="sxs-lookup"><span data-stu-id="c4456-737">U+303D</span></span>|  
|<span data-ttu-id="c4456-738">U + 003a Notebook i U + 003B</span><span class="sxs-lookup"><span data-stu-id="c4456-738">U+003A and U+003B</span></span>|<span data-ttu-id="c4456-739">066A U + U + 066 d</span><span class="sxs-lookup"><span data-stu-id="c4456-739">U+066A to U+066D</span></span>|<span data-ttu-id="c4456-740">U + 1A1E i U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="c4456-740">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="c4456-741">U+30A0</span><span class="sxs-lookup"><span data-stu-id="c4456-741">U+30A0</span></span>|  
|<span data-ttu-id="c4456-742">U + 003F i U + 0040</span><span class="sxs-lookup"><span data-stu-id="c4456-742">U+003F and U+0040</span></span>|<span data-ttu-id="c4456-743">U+06D4</span><span class="sxs-lookup"><span data-stu-id="c4456-743">U+06D4</span></span>|<span data-ttu-id="c4456-744">U + 1B5A do U + 1B60</span><span class="sxs-lookup"><span data-stu-id="c4456-744">U+1B5A to U+1B60</span></span>|<span data-ttu-id="c4456-745">U+30FB</span><span class="sxs-lookup"><span data-stu-id="c4456-745">U+30FB</span></span>|  
|<span data-ttu-id="c4456-746">005B U + U + 005 d</span><span class="sxs-lookup"><span data-stu-id="c4456-746">U+005B to U+005D</span></span>|<span data-ttu-id="c4456-747">0700 U + U + 070 d</span><span class="sxs-lookup"><span data-stu-id="c4456-747">U+0700 to U+070D</span></span>|<span data-ttu-id="c4456-748">U + 2010 2027 U +</span><span class="sxs-lookup"><span data-stu-id="c4456-748">U+2010 to U+2027</span></span>|<span data-ttu-id="c4456-749">U + A874 do U + A877</span><span class="sxs-lookup"><span data-stu-id="c4456-749">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="c4456-750">U+005F</span><span class="sxs-lookup"><span data-stu-id="c4456-750">U+005F</span></span>|<span data-ttu-id="c4456-751">U + 07F7 do U + 07F9</span><span class="sxs-lookup"><span data-stu-id="c4456-751">U+07F7 to U+07F9</span></span>|<span data-ttu-id="c4456-752">U + 2030 do U + 2043</span><span class="sxs-lookup"><span data-stu-id="c4456-752">U+2030 to U+2043</span></span>|<span data-ttu-id="c4456-753">U + FD3E i U + FD3F</span><span class="sxs-lookup"><span data-stu-id="c4456-753">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="c4456-754">U+007B</span><span class="sxs-lookup"><span data-stu-id="c4456-754">U+007B</span></span>|<span data-ttu-id="c4456-755">U + 0964 i U + 0965</span><span class="sxs-lookup"><span data-stu-id="c4456-755">U+0964 and U+0965</span></span>|<span data-ttu-id="c4456-756">U + 2045 do U + 2051</span><span class="sxs-lookup"><span data-stu-id="c4456-756">U+2045 to U+2051</span></span>|<span data-ttu-id="c4456-757">U + FE10 do U + FE19</span><span class="sxs-lookup"><span data-stu-id="c4456-757">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="c4456-758">U+007D</span><span class="sxs-lookup"><span data-stu-id="c4456-758">U+007D</span></span>|<span data-ttu-id="c4456-759">U+0970</span><span class="sxs-lookup"><span data-stu-id="c4456-759">U+0970</span></span>|<span data-ttu-id="c4456-760">2053 U + do U + 205E</span><span class="sxs-lookup"><span data-stu-id="c4456-760">U+2053 to U+205E</span></span>|<span data-ttu-id="c4456-761">U + FE30 do U + FE52</span><span class="sxs-lookup"><span data-stu-id="c4456-761">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="c4456-762">U+00A1</span><span class="sxs-lookup"><span data-stu-id="c4456-762">U+00A1</span></span>|<span data-ttu-id="c4456-763">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="c4456-763">U+0DF4</span></span>|<span data-ttu-id="c4456-764">U + 207D i U + 207E</span><span class="sxs-lookup"><span data-stu-id="c4456-764">U+207D and  U+207E</span></span>|<span data-ttu-id="c4456-765">U + FE54 do U + FE61</span><span class="sxs-lookup"><span data-stu-id="c4456-765">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="c4456-766">U+00AB</span><span class="sxs-lookup"><span data-stu-id="c4456-766">U+00AB</span></span>|<span data-ttu-id="c4456-767">U + 0E4F do U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="c4456-767">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="c4456-768">U + 208D i U + 208E</span><span class="sxs-lookup"><span data-stu-id="c4456-768">U+208D and U+208E</span></span>|<span data-ttu-id="c4456-769">U+FE63</span><span class="sxs-lookup"><span data-stu-id="c4456-769">U+FE63</span></span>|  
|<span data-ttu-id="c4456-770">U+00AD</span><span class="sxs-lookup"><span data-stu-id="c4456-770">U+00AD</span></span>|<span data-ttu-id="c4456-771">U + 0F04 do U + 0F12</span><span class="sxs-lookup"><span data-stu-id="c4456-771">U+0F04 to U+0F12</span></span>|<span data-ttu-id="c4456-772">U + 2329 i U + 232A</span><span class="sxs-lookup"><span data-stu-id="c4456-772">U+2329 and U+232A</span></span>|<span data-ttu-id="c4456-773">U+FE68</span><span class="sxs-lookup"><span data-stu-id="c4456-773">U+FE68</span></span>|  
|<span data-ttu-id="c4456-774">U+00B7</span><span class="sxs-lookup"><span data-stu-id="c4456-774">U+00B7</span></span>|<span data-ttu-id="c4456-775">U + 0F3A do U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="c4456-775">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="c4456-776">U + 2768 do U + 2775</span><span class="sxs-lookup"><span data-stu-id="c4456-776">U+2768 to U+2775</span></span>|<span data-ttu-id="c4456-777">U + FE6A i U + FE6B</span><span class="sxs-lookup"><span data-stu-id="c4456-777">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="c4456-778">U+00BB</span><span class="sxs-lookup"><span data-stu-id="c4456-778">U+00BB</span></span>|<span data-ttu-id="c4456-779">U+0F85</span><span class="sxs-lookup"><span data-stu-id="c4456-779">U+0F85</span></span>|<span data-ttu-id="c4456-780">27 c 5 U + U + 6 27 c</span><span class="sxs-lookup"><span data-stu-id="c4456-780">U+27C5 to U+27C6</span></span>|<span data-ttu-id="c4456-781">U + FF01 do U + FF03</span><span class="sxs-lookup"><span data-stu-id="c4456-781">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="c4456-782">U+00BF</span><span class="sxs-lookup"><span data-stu-id="c4456-782">U+00BF</span></span>|<span data-ttu-id="c4456-783">U + 0FD0 i U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="c4456-783">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="c4456-784">U + 27E6 do U + 27EB</span><span class="sxs-lookup"><span data-stu-id="c4456-784">U+27E6 to U+27EB</span></span>|<span data-ttu-id="c4456-785">U + FF05 do U + FF0A</span><span class="sxs-lookup"><span data-stu-id="c4456-785">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="c4456-786">U+037E</span><span class="sxs-lookup"><span data-stu-id="c4456-786">U+037E</span></span>|<span data-ttu-id="c4456-787">104 a U + – U + 104F</span><span class="sxs-lookup"><span data-stu-id="c4456-787">U+104A to U+104F</span></span>|<span data-ttu-id="c4456-788">U + 2983 do U + 2998</span><span class="sxs-lookup"><span data-stu-id="c4456-788">U+2983 to U+2998</span></span>|<span data-ttu-id="c4456-789">U + FF0C do U + FF0F</span><span class="sxs-lookup"><span data-stu-id="c4456-789">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="c4456-790">U+0387</span><span class="sxs-lookup"><span data-stu-id="c4456-790">U+0387</span></span>|<span data-ttu-id="c4456-791">U+10FB</span><span class="sxs-lookup"><span data-stu-id="c4456-791">U+10FB</span></span>|<span data-ttu-id="c4456-792">U + 29D 8 U + 29DB</span><span class="sxs-lookup"><span data-stu-id="c4456-792">U+29D8 to U+29DB</span></span>|<span data-ttu-id="c4456-793">U + FF1A i U + FF1B</span><span class="sxs-lookup"><span data-stu-id="c4456-793">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="c4456-794">U + 055A do U + 055F</span><span class="sxs-lookup"><span data-stu-id="c4456-794">U+055A to U+055F</span></span>|<span data-ttu-id="c4456-795">U + 1361 do U + 1368</span><span class="sxs-lookup"><span data-stu-id="c4456-795">U+1361 to U+1368</span></span>|<span data-ttu-id="c4456-796">U + 29FC i U + 29FD</span><span class="sxs-lookup"><span data-stu-id="c4456-796">U+29FC and U+29FD</span></span>|<span data-ttu-id="c4456-797">U + FF1F i U + FF20</span><span class="sxs-lookup"><span data-stu-id="c4456-797">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="c4456-798">U + 0589 i U + 058A</span><span class="sxs-lookup"><span data-stu-id="c4456-798">U+0589 and U+058A</span></span>|<span data-ttu-id="c4456-799">U + 166D i U + 166E</span><span class="sxs-lookup"><span data-stu-id="c4456-799">U+166D and U+166E</span></span>|<span data-ttu-id="c4456-800">U + 2CF9 do U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="c4456-800">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="c4456-801">U + FF3B do U + FF3D</span><span class="sxs-lookup"><span data-stu-id="c4456-801">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="c4456-802">U+05BE</span><span class="sxs-lookup"><span data-stu-id="c4456-802">U+05BE</span></span>|<span data-ttu-id="c4456-803">U + 169B i U + 169C</span><span class="sxs-lookup"><span data-stu-id="c4456-803">U+169B and U+169C</span></span>|<span data-ttu-id="c4456-804">U + 2CFE i U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="c4456-804">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="c4456-805">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="c4456-805">U+FF3F</span></span>|  
|<span data-ttu-id="c4456-806">U+05C0</span><span class="sxs-lookup"><span data-stu-id="c4456-806">U+05C0</span></span>|<span data-ttu-id="c4456-807">U + 16EB do U + 16ED</span><span class="sxs-lookup"><span data-stu-id="c4456-807">U+16EB to U+16ED</span></span>|<span data-ttu-id="c4456-808">U + 2E00 do U + 2E17</span><span class="sxs-lookup"><span data-stu-id="c4456-808">U+2E00 to U+2E17</span></span>|<span data-ttu-id="c4456-809">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="c4456-809">U+FF5B</span></span>|  
|<span data-ttu-id="c4456-810">U+05C3</span><span class="sxs-lookup"><span data-stu-id="c4456-810">U+05C3</span></span>|<span data-ttu-id="c4456-811">U + 1735 i U + 1736</span><span class="sxs-lookup"><span data-stu-id="c4456-811">U+1735 and U+1736</span></span>|<span data-ttu-id="c4456-812">U + 2E1C i U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="c4456-812">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="c4456-813">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="c4456-813">U+FF5D</span></span>|  
|<span data-ttu-id="c4456-814">U+05C6</span><span class="sxs-lookup"><span data-stu-id="c4456-814">U+05C6</span></span>|<span data-ttu-id="c4456-815">4 17D U + U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="c4456-815">U+17D4 to U+17D6</span></span>|<span data-ttu-id="c4456-816">3001 U + do U + 3003</span><span class="sxs-lookup"><span data-stu-id="c4456-816">U+3001 to U+3003</span></span>|<span data-ttu-id="c4456-817">U + FF5F do U + FF65</span><span class="sxs-lookup"><span data-stu-id="c4456-817">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="c4456-818">U + 05F3 i U + 05F4</span><span class="sxs-lookup"><span data-stu-id="c4456-818">U+05F3 and U+05F4</span></span>|<span data-ttu-id="c4456-819">U + 17D 8 U + 17DA</span><span class="sxs-lookup"><span data-stu-id="c4456-819">U+17D8 to U+17DA</span></span>|<span data-ttu-id="c4456-820">3008 U + do U + 3011</span><span class="sxs-lookup"><span data-stu-id="c4456-820">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="c4456-821">Poniższy przykład kodu pokazuje <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-821">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-822"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-822"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-823"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-823"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSeparator">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-824">Wskazuje, czy znak Unicode jest skategoryzowany jako znak separatora.</span><span class="sxs-lookup"><span data-stu-id="c4456-824">Indicates whether a Unicode character is categorized as a separator character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-825">Standardu Unicode rozpoznaje trzech podkategorii separatorów:</span><span class="sxs-lookup"><span data-stu-id="c4456-825">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="c4456-826">Miejsce separatorów ( <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> kategorii), który zawiera znaki, takie jak \u0020.</span><span class="sxs-lookup"><span data-stu-id="c4456-826">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="c4456-827">Wiersz separatorów ( <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> kategorii), która obejmuje \u2028.</span><span class="sxs-lookup"><span data-stu-id="c4456-827">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="c4456-828">Akapit separatory ( <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> kategorii), która obejmuje \u2029.</span><span class="sxs-lookup"><span data-stu-id="c4456-828">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4456-829">Unicode standard klasyfikuje \u000A znaków (LF), \u000C (FF) i \u000D (CR) jako znaki kontrolne (członkami <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> kategorii), a nie jako znaków separatora.</span><span class="sxs-lookup"><span data-stu-id="c4456-829">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-830">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-830">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-831">Wskazuje, czy określony znak Unicode jest skategoryzowany jako znak separatora.</span><span class="sxs-lookup"><span data-stu-id="c4456-831">Indicates whether the specified Unicode character is categorized as a separator character.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-832"><see langword="true" /> Jeśli <paramref name="c" /> jest separatorem znaku; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-832"><see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-833">Standardu Unicode rozpoznaje trzech podkategorii separatorów:</span><span class="sxs-lookup"><span data-stu-id="c4456-833">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="c4456-834">Miejsce separatorów ( <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> kategorii), który zawiera znaki, takie jak \u0020.</span><span class="sxs-lookup"><span data-stu-id="c4456-834">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="c4456-835">Wiersz separatorów ( <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> kategorii), która obejmuje \u2028.</span><span class="sxs-lookup"><span data-stu-id="c4456-835">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="c4456-836">Akapit separatory ( <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> kategorii), która obejmuje \u2029.</span><span class="sxs-lookup"><span data-stu-id="c4456-836">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4456-837">Unicode standard klasyfikuje \u000A znaków (LF), \u000C (FF) i \u000D (CR) jako znaki kontrolne (członkami <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> kategorii), a nie jako znaków separatora.</span><span class="sxs-lookup"><span data-stu-id="c4456-837">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-838">Na poniższych listach przykład <xref:System.Char> obiektów, które są sklasyfikowane jako znaków separatora.</span><span class="sxs-lookup"><span data-stu-id="c4456-838">The following example lists the <xref:System.Char> objects that are classified as separator characters.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]
 [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]
 [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-839">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-839">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-840">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-840">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-841">Wskazuje, czy znak na określonej pozycji w ciągu określonej jest skategoryzowany jako znak separatora.</span><span class="sxs-lookup"><span data-stu-id="c4456-841">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-842"><see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest separatorem znaku; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-842"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-843">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-843">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-844">Standardu Unicode rozpoznaje trzech podkategorii separatorów:</span><span class="sxs-lookup"><span data-stu-id="c4456-844">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="c4456-845">Miejsce separatorów ( <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> kategorii), który zawiera znaki, takie jak \u0020.</span><span class="sxs-lookup"><span data-stu-id="c4456-845">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="c4456-846">Wiersz separatorów ( <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> kategorii), która obejmuje \u2028.</span><span class="sxs-lookup"><span data-stu-id="c4456-846">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="c4456-847">Akapit separatory ( <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> kategorii), która obejmuje \u2029.</span><span class="sxs-lookup"><span data-stu-id="c4456-847">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4456-848">Unicode standard klasyfikuje \u000A znaków (LF), \u000C (FF) i \u000D (CR) jako znaki kontrolne (członkami <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> kategorii), a nie jako znaków separatora.</span><span class="sxs-lookup"><span data-stu-id="c4456-848">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-849">W poniższym przykładzie pokazano <xref:System.Char.IsSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-849">The following example demonstrates <xref:System.Char.IsSeparator%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]
 [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]
 [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-850"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-850"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-851"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-851"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-852">Wskazuje, czy znak jednostki kodu dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-852">Indicates whether a character has a surrogate code unit.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-853">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-853">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-854">Wskazuje, czy określony znak jednostki kodu dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-854">Indicates whether the specified character has a surrogate code unit.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-855"><see langword="true" /> Jeśli <paramref name="c" /> zastępczym wysokiego poziomu lub dwuskładnikowego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-855"><see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-856">Jest surogatu <xref:System.Char> obiektu z zakresu od U + D800 do U + DFFF jednostki kodu UTF-16.</span><span class="sxs-lookup"><span data-stu-id="c4456-856">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="c4456-857">Każdy znak z jednostek kodu, w tym zakresie należy <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-857">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="c4456-858">Jednostka kodu poszczególnych Surogat ma nie interpretacji własnych, ale ma znaczenie tylko wtedy, gdy jest używany jako część para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="c4456-858">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="c4456-859">Aby uzyskać więcej informacji na temat Znaki dwuskładnikowe, zobacz Unicode Standard na [strony głównej Unicode](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="c4456-859">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-860">W poniższym przykładzie pokazano <xref:System.Char.IsSurrogate%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-860">The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-861">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-861">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-862">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-862">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-863">Wskazuje, czy znak na określonej pozycji w ciągu określonej jednostki kodu dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-863">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-864"><see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> może mieć zastępczym wysokiego poziomu lub dwuskładnikowego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-864"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-865">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-865">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-866">Jest surogatu <xref:System.Char> obiektu z zakresu od U + D800 do U + DFFF jednostki kodu UTF-16.</span><span class="sxs-lookup"><span data-stu-id="c4456-866">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="c4456-867">Każdy znak z jednostek kodu, w tym zakresie należy <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="c4456-867">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="c4456-868">Jednostka kodu poszczególnych Surogat ma nie interpretacji własnych, ale ma znaczenie tylko wtedy, gdy jest używany jako część para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="c4456-868">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="c4456-869">Aby uzyskać więcej informacji na temat Znaki dwuskładnikowe, zobacz Unicode Standard na [strony głównej Unicode](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="c4456-869">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-870">Poniższy przykład kodu pokazuje <xref:System.Char.IsSurrogate%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-870">The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-871"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-871"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-872"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-872"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogatePair">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-873">Wskazuje, czy dwa określone <see cref="T:System.Char" /> para zastępcza tworzą obiektów.</span><span class="sxs-lookup"><span data-stu-id="c4456-873">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (highSurrogate As Char, lowSurrogate As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char highSurrogate, char lowSurrogate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="c4456-874">Znak do oceny jako pary Surogat znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="c4456-874">The character to evaluate as the high surrogate of a surrogate pair.</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="c4456-875">Znak do oceny jako dwuskładnikowego para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="c4456-875">The character to evaluate as the low surrogate of a surrogate pair.</span></span></param>
        <summary><span data-ttu-id="c4456-876">Wskazuje, czy dwa określone <see cref="T:System.Char" /> para zastępcza tworzą obiektów.</span><span class="sxs-lookup"><span data-stu-id="c4456-876">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-877"><see langword="true" /> Jeśli wartość liczbową <paramref name="highSurrogate" /> może się wahać od U + D800 za pośrednictwem U + DBFF parametr i wartość liczbową <paramref name="lowSurrogate" /> parametru może się wahać od U + DC00 za pośrednictwem U + DFFF; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-877"><see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-878">Zwykle pojedynczy znak jest reprezentowany przez pojedynczą jednostkę kodu Unicode 16-bitowych.</span><span class="sxs-lookup"><span data-stu-id="c4456-878">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="c4456-879">Kodowanie UTF-16 obsługuje również znaki dwuskładnikowe, umożliwiających pojedynczy znak abstrakcyjny może być reprezentowana przez dwie jednostki 16-bitowego kodu.</span><span class="sxs-lookup"><span data-stu-id="c4456-879">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="c4456-880">Pierwszy jednostki kodu, którego wartość może należeć do zakresu od U + D800 do U + DBFF, jest znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="c4456-880">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="c4456-881">Drugi jednostki kodu, którego wartość może należeć do zakresu od U + DC00 do U + DFFF, jest dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-881">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="c4456-882">Surogat poszczególne punkty kodu mają nie interpretacji we własnym.</span><span class="sxs-lookup"><span data-stu-id="c4456-882">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="c4456-883">Aby uzyskać więcej informacji na temat surogatów i Unicode Standard, zobacz [strony głównej Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="c4456-883">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-884">Poniższy przykład kodu pokazuje <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, i <xref:System.Char.IsSurrogatePair%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-884">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-885">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-885">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-886">Pozycja początkowa pary znaków do oceny w ramach <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-886">The starting position of the pair of characters to evaluate within <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-887">Wskazuje, czy dwóch sąsiadujących ze sobą <see cref="T:System.Char" /> para zastępcza tworzą obiekty w określonej pozycji w ciągu.</span><span class="sxs-lookup"><span data-stu-id="c4456-887">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-888"><see langword="true" /> Jeśli <paramref name="s" /> parametr zawiera znaki przylegające w miejscach <paramref name="index" /> i <paramref name="index" /> + 1, a wartość liczbową znaku na pozycji <paramref name="index" /> może się wahać od U + D800 za pośrednictwem U + DBFF i wartość numeryczna znak na pozycji pozycja <paramref name="index" />+ 1 zakresów z U + DC00 za pośrednictwem U + DFFF; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-888"><see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-889">Zwykle pojedynczy znak jest reprezentowany przez pojedynczą jednostkę kodu Unicode 16-bitowych.</span><span class="sxs-lookup"><span data-stu-id="c4456-889">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="c4456-890">Kodowanie UTF-16 obsługuje również znaki dwuskładnikowe, umożliwiających pojedynczy znak abstrakcyjny może być reprezentowana przez dwie jednostki 16-bitowego kodu.</span><span class="sxs-lookup"><span data-stu-id="c4456-890">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="c4456-891">Pierwszy jednostki kodu, którego wartość może należeć do zakresu od U + D800 do U + DBFF, jest znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="c4456-891">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="c4456-892">Drugi jednostki kodu, którego wartość może należeć do zakresu od U + DC00 do U + DFFF, jest dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="c4456-892">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="c4456-893">Surogat poszczególne punkty kodu mają nie interpretacji we własnym.</span><span class="sxs-lookup"><span data-stu-id="c4456-893">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="c4456-894">Aby uzyskać więcej informacji na temat surogatów i Unicode Standard, zobacz [strony głównej Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="c4456-894">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-895">Poniższy przykład kodu pokazuje <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, i <xref:System.Char.IsSurrogatePair%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-895">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-896"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-896"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-897"><paramref name="index" /> nie jest w stanie <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-897"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSymbol">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-898">Wskazuje, czy znak Unicode jest skategoryzowany jako znak symbolu.</span><span class="sxs-lookup"><span data-stu-id="c4456-898">Indicates whether a Unicode character is categorized as a symbol character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-899">Prawidłowe symbole są członkami następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, i `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="c4456-899">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="c4456-900">Symbole w standardzie Unicode są luźno zdefiniowanego zestawu znaków, które obejmują następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="c4456-900">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="c4456-901">Symbole waluty.</span><span class="sxs-lookup"><span data-stu-id="c4456-901">Currency symbols.</span></span>  
  
-   <span data-ttu-id="c4456-902">Symbole literopodobne, które obejmują zestaw symboli alfanumeryczne matematycznych, a także symbole, takie jak ℅, nr, i™.</span><span class="sxs-lookup"><span data-stu-id="c4456-902">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="c4456-903">Liczba formularzy, takich jak indeksy dolne i górne.</span><span class="sxs-lookup"><span data-stu-id="c4456-903">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="c4456-904">Operatory matematyczne i strzałki.</span><span class="sxs-lookup"><span data-stu-id="c4456-904">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="c4456-905">Symbole geometrycznej.</span><span class="sxs-lookup"><span data-stu-id="c4456-905">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="c4456-906">Symbole technicznych.</span><span class="sxs-lookup"><span data-stu-id="c4456-906">Technical symbols.</span></span>  
  
-   <span data-ttu-id="c4456-907">Wzorce Braille'a.</span><span class="sxs-lookup"><span data-stu-id="c4456-907">Braille patterns.</span></span>  
  
-   <span data-ttu-id="c4456-908">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="c4456-908">Dingbats.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-909">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-909">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-910">Wskazuje, czy określony znak Unicode jest skategoryzowany jako znak symbolu.</span><span class="sxs-lookup"><span data-stu-id="c4456-910">Indicates whether the specified Unicode character is categorized as a symbol character.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-911"><see langword="true" /> Jeśli <paramref name="c" /> to symbol znaku; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-911"><see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-912">Prawidłowe symbole są członkami następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, i `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="c4456-912">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="c4456-913">Symbole w standardzie Unicode są luźno zdefiniowanego zestawu znaków, które obejmują następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="c4456-913">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="c4456-914">Symbole waluty.</span><span class="sxs-lookup"><span data-stu-id="c4456-914">Currency symbols.</span></span>  
  
-   <span data-ttu-id="c4456-915">Symbole literopodobne, które obejmują zestaw symboli alfanumeryczne matematycznych, a także symbole, takie jak ℅, nr, i™.</span><span class="sxs-lookup"><span data-stu-id="c4456-915">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="c4456-916">Liczba formularzy, takich jak indeksy dolne i górne.</span><span class="sxs-lookup"><span data-stu-id="c4456-916">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="c4456-917">Operatory matematyczne i strzałki.</span><span class="sxs-lookup"><span data-stu-id="c4456-917">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="c4456-918">Symbole geometrycznej.</span><span class="sxs-lookup"><span data-stu-id="c4456-918">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="c4456-919">Symbole technicznych.</span><span class="sxs-lookup"><span data-stu-id="c4456-919">Technical symbols.</span></span>  
  
-   <span data-ttu-id="c4456-920">Wzorce Braille'a.</span><span class="sxs-lookup"><span data-stu-id="c4456-920">Braille patterns.</span></span>  
  
-   <span data-ttu-id="c4456-921">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="c4456-921">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-922">Poniższy przykład kodu pokazuje <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-922">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-923">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-923">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-924">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-924">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-925">Wskazuje, czy znak na określonej pozycji w ciągu określonej jest skategoryzowany jako znak symbolu.</span><span class="sxs-lookup"><span data-stu-id="c4456-925">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-926"><see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> to symbol znaku; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-926"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-927">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-927">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-928">Prawidłowe symbole są członkami następujących kategorii w <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, i `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="c4456-928">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="c4456-929">Symbole w standardzie Unicode są luźno zdefiniowanego zestawu znaków, które obejmują następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="c4456-929">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="c4456-930">Symbole waluty.</span><span class="sxs-lookup"><span data-stu-id="c4456-930">Currency symbols.</span></span>  
  
-   <span data-ttu-id="c4456-931">Symbole literopodobne, które obejmują zestaw symboli alfanumeryczne matematycznych, a także symbole, takie jak ℅, nr, i™.</span><span class="sxs-lookup"><span data-stu-id="c4456-931">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="c4456-932">Liczba formularzy, takich jak indeksy dolne i górne.</span><span class="sxs-lookup"><span data-stu-id="c4456-932">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="c4456-933">Operatory matematyczne i strzałki.</span><span class="sxs-lookup"><span data-stu-id="c4456-933">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="c4456-934">Symbole geometrycznej.</span><span class="sxs-lookup"><span data-stu-id="c4456-934">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="c4456-935">Symbole technicznych.</span><span class="sxs-lookup"><span data-stu-id="c4456-935">Technical symbols.</span></span>  
  
-   <span data-ttu-id="c4456-936">Wzorce Braille'a.</span><span class="sxs-lookup"><span data-stu-id="c4456-936">Braille patterns.</span></span>  
  
-   <span data-ttu-id="c4456-937">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="c4456-937">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-938">Poniższy przykład kodu pokazuje <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-938">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-939"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-939"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-940"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-940"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-941">Wskazuje, czy znak Unicode jest podzielone na wielką literę.</span><span class="sxs-lookup"><span data-stu-id="c4456-941">Indicates whether a Unicode character is categorized as an uppercase letter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-942">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-942">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-943">Wskazuje, czy określony znak Unicode jest podzielone na wielką literę.</span><span class="sxs-lookup"><span data-stu-id="c4456-943">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-944"><see langword="true" /> Jeśli <paramref name="c" /> jest wielką literę; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-944"><see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-945">Nieprawidłowa wielkie litery należą do następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="c4456-945">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsLower(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-946">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-946">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-947">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-947">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-948">Wskazuje, czy znak na określonej pozycji w ciągu określonej jest podzielone na wielką literę.</span><span class="sxs-lookup"><span data-stu-id="c4456-948">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-949"><see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest wielką literę; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-949"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-950">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-950">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-951">Nieprawidłowa wielkie litery należą do następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="c4456-951">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-952"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-952"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-953"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-953"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWhiteSpace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-954">Wskazuje, czy znak Unicode jest skategoryzowany jako biały znak.</span><span class="sxs-lookup"><span data-stu-id="c4456-954">Indicates whether a Unicode character is categorized as white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-955">Białe znaki są następujące znaki Unicode:</span><span class="sxs-lookup"><span data-stu-id="c4456-955">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="c4456-956">Członkami <xref:System.Globalization.UnicodeCategory.SpaceSeparator> kategorię, która zawiera znaki miejsce (U + 0020), miejsca OGHAM oznaczyć (U + 1680), EN QUAD (U + 2000), EM QUAD (U + 2001), EN miejsce (U + 2002), EM PRZESTRZENIE (U + 2003), trzech na Długiej spacji (U + 2004), czterech na Długiej spacji (U + 2005), SZEŚCIU na EM MIEJSCE (U + 2006), rysunek miejsca (U + 2007), znaki INTERPUNKCYJNE (U + 2008), miejsce CIENKI miejsce (U + 2009), włosów miejsca (U + 200A), WĄSKIE miejsca nie-BREAK (U + 202F), średni miejsca MATEMATYCZNE (U + 205F) i ODSTĘPÓW IDEOGRAFICZNYCH (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="c4456-956">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="c4456-957">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.LineSeparator> kategorię, która obejmuje tylko znak SEPARATORA linii (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="c4456-957">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="c4456-958">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> kategorię, która obejmuje tylko znak SEPARATORA AKAPITU (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="c4456-958">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="c4456-959">Znaki TABULACJA znaków (U + 0009) WYSUWU wiersza (U + 000A), TABULACJA w wierszu (U + 000B), wysuw (U + 000C), powrotu KARETKI (U + 000D), OBOK wiersza (U + 0085) i nie-BREAK miejsca (U + 00A0).</span><span class="sxs-lookup"><span data-stu-id="c4456-959">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), NEXT LINE (U+0085), and NO-BREAK SPACE (U+00A0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-960">Znak Unicode do oceny.</span><span class="sxs-lookup"><span data-stu-id="c4456-960">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="c4456-961">Wskazuje, czy określony znak Unicode jest skategoryzowany jako biały znak.</span><span class="sxs-lookup"><span data-stu-id="c4456-961">Indicates whether the specified Unicode character is categorized as white space.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-962"><see langword="true" /> Jeśli <paramref name="c" /> jest białe; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-962"><see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-963">Białe znaki są następujące znaki Unicode:</span><span class="sxs-lookup"><span data-stu-id="c4456-963">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="c4456-964">Członkowie <xref:System.Globalization.UnicodeCategory.SpaceSeparator> Kategoria, która zawiera znaki miejsca (U + 0020), spacja nie-BREAK (U + 00A0), OZNACZ miejsca OGHAM (U + 1680), EN QUAD (U + 2000), EM QUAD (U + 2001), EN miejsce (U + 2002), EM PRZESTRZENIE (U + 2003), trzech na Długiej spacji (U + 2004), (cztery na EM miejsca U+ 2005), SZEŚCIU na Długiej spacji (U + 2006), spacja (U + 2007), znaki INTERPUNKCYJNE (U + 2008), miejsce CIENKI miejsce (U + 2009), włosów miejsca (U + 200A), WĄSKIE miejsca nie-BREAK (U + 202F), średni miejsca MATEMATYCZNE (U + 205F) i ODSTĘPÓW IDEOGRAFICZNYCH (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="c4456-964">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="c4456-965">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.LineSeparator> kategorię, która obejmuje tylko znak SEPARATORA linii (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="c4456-965">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="c4456-966">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> kategorię, która obejmuje tylko znak SEPARATORA AKAPITU (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="c4456-966">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="c4456-967">Znaki TABULACJA znaków (U + 0009), wiersz źródła danych (U + 000A), TABULACJA w wierszu (U + 000B), wysuw (U + 000C), powrotu KARETKI (U + 000D), a następnie wiersza (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="c4456-967">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-968">W poniższym przykładzie pokazano <xref:System.Char.IsWhiteSpace%28System.Char%29> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-968">The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-969">Ciąg.</span><span class="sxs-lookup"><span data-stu-id="c4456-969">A string.</span></span></param>
        <param name="index"><span data-ttu-id="c4456-970">Pozycja znaku w celu oceny w <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="c4456-970">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="c4456-971">Wskazuje, czy znak na określonej pozycji w ciągu określonej jest skategoryzowany jako biały znak.</span><span class="sxs-lookup"><span data-stu-id="c4456-971">Indicates whether the character at the specified position in a specified string is categorized as white space.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-972"><see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest białe; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-972"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-973">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="c4456-973">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="c4456-974">Białe znaki są następujące znaki Unicode:</span><span class="sxs-lookup"><span data-stu-id="c4456-974">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="c4456-975">Członkowie <xref:System.Globalization.UnicodeCategory.SpaceSeparator> Kategoria, która zawiera znaki miejsca (U + 0020), spacja nie-BREAK (U + 00A0), OZNACZ miejsca OGHAM (U + 1680), EN QUAD (U + 2000), EM QUAD (U + 2001), EN miejsce (U + 2002), EM PRZESTRZENIE (U + 2003), trzech na Długiej spacji (U + 2004), (cztery na EM miejsca U+ 2005), SZEŚCIU na Długiej spacji (U + 2006), spacja (U + 2007), znaki INTERPUNKCYJNE (U + 2008), miejsce CIENKI miejsce (U + 2009), włosów miejsca (U + 200A), WĄSKIE miejsca nie-BREAK (U + 202F), średni miejsca MATEMATYCZNE (U + 205F) i ODSTĘPÓW IDEOGRAFICZNYCH (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="c4456-975">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="c4456-976">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.LineSeparator> kategorię, która obejmuje tylko znak SEPARATORA linii (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="c4456-976">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="c4456-977">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> kategorię, która obejmuje tylko znak SEPARATORA AKAPITU (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="c4456-977">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="c4456-978">Znaki TABULACJA znaków (U + 0009), wiersz źródła danych (U + 000A), TABULACJA w wierszu (U + 000B), wysuw (U + 000C), powrotu KARETKI (U + 000D), a następnie wiersza (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="c4456-978">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-979">Poniższy przykład kodu pokazuje <xref:System.Char.IsWhiteSpace%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-979">The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-980"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-980"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4456-981"><paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-981"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4456-982">Reprezentuje największa możliwa wartość z <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-982">Represents the largest possible value of a <see cref="T:System.Char" />.</span></span> <span data-ttu-id="c4456-983">To pole jest stałe.</span><span class="sxs-lookup"><span data-stu-id="c4456-983">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-984">Wartość tej stałej jest szesnastkową 0xFFFF.</span><span class="sxs-lookup"><span data-stu-id="c4456-984">The value of this constant is hexadecimal 0xFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4456-985">Reprezentuje najniższą możliwą wartość elementu <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-985">Represents the smallest possible value of a <see cref="T:System.Char" />.</span></span> <span data-ttu-id="c4456-986">To pole jest stałe.</span><span class="sxs-lookup"><span data-stu-id="c4456-986">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-987">Wartość tej stałej jest 0x00 szesnastkową.</span><span class="sxs-lookup"><span data-stu-id="c4456-987">The value of this constant is hexadecimal 0x00.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static char Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-988">Ciąg zawierający pojedynczy znak lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-988">A string that contains a single character, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c4456-989">Konwertuje wartość określonego ciągu na jej odpowiednik znaku Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-989">Converts the value of the specified string to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="c4456-990">Odpowiednikiem wyłącznie znak w znaku Unicode <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-990">A Unicode character equivalent to the sole character in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4456-991">Poniższy przykład kodu pokazuje <xref:System.Char.Parse%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-991">The following code example demonstrates <xref:System.Char.Parse%2A>.</span></span>  
  
 [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]
 [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]
 [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-992"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-992"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="c4456-993">Długość <paramref name="s" /> nie jest 1.</span><span class="sxs-lookup"><span data-stu-id="c4456-993">The length of <paramref name="s" /> is not 1.</span></span></exception>
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-994">Ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-994">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c4456-995">**Uwaga** ta konwersja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="c4456-995">**Note** This conversion is not supported.</span></span> <span data-ttu-id="c4456-996">Próby zgłasza tak <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-996">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-997">Ta konwersja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="c4456-997">This conversion is not supported.</span></span> <span data-ttu-id="c4456-998">Nie jest zwracana żadna wartość.</span><span class="sxs-lookup"><span data-stu-id="c4456-998">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c4456-999">Ta konwersja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="c4456-999">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1000">Ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-1000">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c4456-1001">Opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1001">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1002">Wartość przekonwertowanego bieżącego <see cref="T:System.Char" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1002">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1003">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="c4456-1003">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4456-1004">Można go używać tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowane na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1004">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c4456-1005">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="c4456-1005">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1006">Ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-1006">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c4456-1007">Opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1007">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1008">Wartość bieżącego <see cref="T:System.Char" /> obiektu bez zmian.</span><span class="sxs-lookup"><span data-stu-id="c4456-1008">The value of the current <see cref="T:System.Char" /> object unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1009">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="c4456-1009">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4456-1010">Można go używać tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowane na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1010">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1011">Ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-1011">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c4456-1012">**Uwaga** ta konwersja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="c4456-1012">**Note** This conversion is not supported.</span></span> <span data-ttu-id="c4456-1013">Próby zgłasza tak <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1013">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1014">Nie jest zwracana żadna wartość.</span><span class="sxs-lookup"><span data-stu-id="c4456-1014">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c4456-1015">Ta konwersja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="c4456-1015">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1016">Ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-1016">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c4456-1017">**Uwaga** ta konwersja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="c4456-1017">**Note** This conversion is not supported.</span></span> <span data-ttu-id="c4456-1018">Próby zgłasza tak <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1018">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1019">Nie jest zwracana żadna wartość.</span><span class="sxs-lookup"><span data-stu-id="c4456-1019">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c4456-1020">Ta konwersja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="c4456-1020">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1021">Ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-1021">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c4456-1022">**Uwaga** ta konwersja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="c4456-1022">**Note** This conversion is not supported.</span></span> <span data-ttu-id="c4456-1023">Próby zgłasza tak <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1023">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1024">Nie jest zwracana żadna wartość.</span><span class="sxs-lookup"><span data-stu-id="c4456-1024">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c4456-1025">Ta konwersja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="c4456-1025">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1026">Ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-1026">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c4456-1027">Opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1027">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1028">Wartość przekonwertowanego bieżącego <see cref="T:System.Char" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1028">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1029">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="c4456-1029">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4456-1030">Można go używać tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowane na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1030">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c4456-1031">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="c4456-1031">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1032">Ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-1032">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c4456-1033">Opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1033">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1034">Wartość przekonwertowanego bieżącego <see cref="T:System.Char" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1034">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1035">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="c4456-1035">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4456-1036">Można go używać tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowane na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1036">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c4456-1037">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="c4456-1037">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1038">Ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-1038">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c4456-1039">Opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1039">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1040">Wartość przekonwertowanego bieżącego <see cref="T:System.Char" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1040">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1041">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="c4456-1041">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4456-1042">Można go używać tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowane na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1042">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c4456-1043">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="c4456-1043">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1044">Ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-1044">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c4456-1045">Opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1045">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1046">Wartość przekonwertowanego bieżącego <see cref="T:System.Char" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1046">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1047">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="c4456-1047">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4456-1048">Można go używać tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowane na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1048">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c4456-1049">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="c4456-1049">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1050">Ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-1050">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c4456-1051">**Uwaga** ta konwersja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="c4456-1051">**Note** This conversion is not supported.</span></span> <span data-ttu-id="c4456-1052">Próby zgłasza tak <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1052">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1053">Nie jest zwracana żadna wartość.</span><span class="sxs-lookup"><span data-stu-id="c4456-1053">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c4456-1054">Ta konwersja nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="c4456-1054">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c4456-1055">A <see cref="T:System.Type" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1055">A <see cref="T:System.Type" /> object.</span></span></param>
        <param name="provider"><span data-ttu-id="c4456-1056"><see cref="T:System.IFormatProvider" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1056">An <see cref="T:System.IFormatProvider" /> object.</span></span></param>
        <summary><span data-ttu-id="c4456-1057">Opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1057">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1058">Obiekt określonego typu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1058">An object of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1059">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="c4456-1059">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4456-1060">Można go używać tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowane na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1060">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c4456-1061">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="c4456-1061">The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-1062"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1062"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c4456-1063">Wartość bieżącego <see cref="T:System.Char" /> obiektu nie można przekonwertować na typ określony przez <paramref name="type" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="c4456-1063">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1064"><see cref="T:System.IFormatProvider" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1064">An <see cref="T:System.IFormatProvider" /> object.</span></span> <span data-ttu-id="c4456-1065">(Określ <see langword="null" /> ponieważ <c>dostawcy</c> parametru jest ignorowana.)</span><span class="sxs-lookup"><span data-stu-id="c4456-1065">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span></span></param>
        <summary><span data-ttu-id="c4456-1066">Opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1066">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1067">Wartość przekonwertowanego bieżącego <see cref="T:System.Char" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1067">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1068">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="c4456-1068">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4456-1069">Można go używać tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowane na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1069">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c4456-1070">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="c4456-1070">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1071"><see cref="T:System.IFormatProvider" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1071">An <see cref="T:System.IFormatProvider" /> object.</span></span> <span data-ttu-id="c4456-1072">(Określ <see langword="null" /> ponieważ <c>dostawcy</c> parametru jest ignorowana.)</span><span class="sxs-lookup"><span data-stu-id="c4456-1072">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span></span></param>
        <summary><span data-ttu-id="c4456-1073">Opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1073">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1074">Wartość przekonwertowanego bieżącego <see cref="T:System.Char" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1074">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1075">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="c4456-1075">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4456-1076">Można go używać tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowane na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1076">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c4456-1077">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="c4456-1077">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1078"><see cref="T:System.IFormatProvider" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1078">An <see cref="T:System.IFormatProvider" /> object.</span></span> <span data-ttu-id="c4456-1079">(Określ <see langword="null" /> ponieważ <c>dostawcy</c> parametru jest ignorowana.)</span><span class="sxs-lookup"><span data-stu-id="c4456-1079">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span></span></param>
        <summary><span data-ttu-id="c4456-1080">Opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1080">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c4456-1081">Wartość przekonwertowanego bieżącego <see cref="T:System.Char" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1081">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1082">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="c4456-1082">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4456-1083">Można go używać tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowane na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1083">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c4456-1084">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="c4456-1084">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-1085">Konwertuje wartość znaku Unicode na jej odpowiednik małe litery.</span><span class="sxs-lookup"><span data-stu-id="c4456-1085">Converts the value of a Unicode character to its lowercase equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-1086">Znak Unicode, który ma zostać przekształcony.</span><span class="sxs-lookup"><span data-stu-id="c4456-1086">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="c4456-1087">Konwertuje wartość znaku Unicode na jej odpowiednik małe litery.</span><span class="sxs-lookup"><span data-stu-id="c4456-1087">Converts the value of a Unicode character to its lowercase equivalent.</span></span></summary>
        <returns><span data-ttu-id="c4456-1088">Małe litery odpowiednikiem <paramref name="c" />, wartości bez zmian lub <paramref name="c" />, jeśli <paramref name="c" /> jest już małe lub nie alfabetu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1088">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1089">Wielkość liter reguły są uzyskiwane z bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="c4456-1089">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="c4456-1090">Użyj <xref:System.String.ToLower%2A?displayProperty=nameWithType> do przekonwertowania ciągu na małe litery.</span><span class="sxs-lookup"><span data-stu-id="c4456-1090">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-1091">W poniższym przykładzie pokazano <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-1091">The following example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="c4456-1092">Zgodnie z objaśnieniem w [najlepsze rozwiązania dotyczące ciągów za pomocą](~/docs/standard/base-types/best-practices-strings.md), zaleca się unikać wywoływania metod wielkości liter na znak i wielkości ciąg znaków, które zastępuje wartości domyślne.</span><span class="sxs-lookup"><span data-stu-id="c4456-1092">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values.</span></span> <span data-ttu-id="c4456-1093">Zamiast tego należy wywołać metody, które są wymagane parametry, aby być jawnie określona.</span><span class="sxs-lookup"><span data-stu-id="c4456-1093">Instead, you should call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="c4456-1094">Aby dokonać konwersji znaków na małe litery przy użyciu konwencji wielkość liter w bieżącej kultury, należy wywołać <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> przeciążenie metody o wartości <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> dla jego <paramref name="culture" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="c4456-1094">To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</span></span></para>
        </block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-1095">Znak Unicode, który ma zostać przekształcony.</span><span class="sxs-lookup"><span data-stu-id="c4456-1095">The Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="c4456-1096">Obiekt, który dostarcza reguły dotyczące wielkości znaków z uwzględnieniem ustawień kulturowych.</span><span class="sxs-lookup"><span data-stu-id="c4456-1096">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="c4456-1097">Konwertuje wartość określonego znaku Unicode na jej odpowiednik małe przy użyciu określonego informacje dotyczące formatowania specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="c4456-1097">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="c4456-1098">Małe litery odpowiednikiem <paramref name="c" />, zmodyfikowane zgodnie z <paramref name="culture" />, wartości bez zmian lub <paramref name="c" />, jeśli <paramref name="c" /> jest już małe lub nie alfabetu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1098">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1099">Użyj <xref:System.String.ToLower%2A?displayProperty=nameWithType> do przekonwertowania ciągu na małe litery.</span><span class="sxs-lookup"><span data-stu-id="c4456-1099">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-1100">Poniższy przykład kodu pokazuje <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-1100">The following code example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-1101"><paramref name="culture" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1101"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static char ToLowerInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLowerInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerInvariant(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-1102">Znak Unicode, który ma zostać przekształcony.</span><span class="sxs-lookup"><span data-stu-id="c4456-1102">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="c4456-1103">Konwertuje wartość znaku Unicode na jej odpowiednik małe przy użyciu reguł wielkości liter Niezmienna kultura.</span><span class="sxs-lookup"><span data-stu-id="c4456-1103">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="c4456-1104">Małe litery odpowiednikiem <paramref name="c" /> parametrów lub wartości bez zmian <paramref name="c" />, jeśli <paramref name="c" /> jest już małe lub nie alfabetu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1104">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1105">Jeśli aplikacja jest niezależna od bieżącej kultury i zależy od przypadku znak zmienianie w sposób przewidywalne, użyj <xref:System.Char.ToLowerInvariant%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-1105">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="c4456-1106"><xref:System.Char.ToLowerInvariant%2A> Metoda jest odpowiednikiem `ToLower(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="c4456-1106">The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="c4456-1107">Użyj <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> do przekonwertowania ciągu na małe litery.</span><span class="sxs-lookup"><span data-stu-id="c4456-1107">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-1108">Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1108">Converts the value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4456-1109">Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1109">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="c4456-1110">Ciąg reprezentujący wartość tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="c4456-1110">The string representation of the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4456-1111">Poniższy przykład kodu pokazuje <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-1111">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-1112">Znak Unicode, który ma zostać przekształcony.</span><span class="sxs-lookup"><span data-stu-id="c4456-1112">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="c4456-1113">Konwertuje określony znak Unicode do reprezentacji ciągu równoważne.</span><span class="sxs-lookup"><span data-stu-id="c4456-1113">Converts the specified Unicode character to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="c4456-1114">Reprezentacja ciągu wartości <paramref name="c" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1114">The string representation of the value of <paramref name="c" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4456-1115">Poniższy przykład kodu pokazuje <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-1115">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c4456-1116">(Parametr zarezerwowany) Obiekt dostarczający informacji o formatowaniu specyficznych dla kultury.</span><span class="sxs-lookup"><span data-stu-id="c4456-1116">(Reserved) An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="c4456-1117">Konwertuje wartość tego wystąpienia reprezentacji ciągu równoważny, korzystając z informacji zawartych w określonym formacie specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="c4456-1117">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="c4456-1118">Reprezentacja ciągu wartość tego wystąpienia, określony przez <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1118">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1119">`provider` Parametr jest ignorowany; nie uczestniczy w tej operacji.</span><span class="sxs-lookup"><span data-stu-id="c4456-1119">The `provider` parameter is ignored; it does not participate in this operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-1120">Poniższy przykład kodu pokazuje przeciążenia <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4456-1120">The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4456-1121">Konwertuje wartość znaku Unicode na jej odpowiednik wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="c4456-1121">Converts the value of a Unicode character to its uppercase equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-1122">Znak Unicode, który ma zostać przekształcony.</span><span class="sxs-lookup"><span data-stu-id="c4456-1122">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="c4456-1123">Konwertuje wartość znaku Unicode na jej odpowiednik wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="c4456-1123">Converts the value of a Unicode character to its uppercase equivalent.</span></span></summary>
        <returns><span data-ttu-id="c4456-1124">Wielkie litery odpowiednikiem <paramref name="c" />, wartości bez zmian lub <paramref name="c" /> Jeśli <paramref name="c" /> jest już wielkie litery, nie zawiera wielkie odpowiednika lub nie jest od litery alfabetu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1124">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1125">Wielkość liter reguły są uzyskiwane z bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="c4456-1125">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="c4456-1126">Użyj <xref:System.String.ToUpper%2A?displayProperty=nameWithType> do przekonwertowania ciągu na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="c4456-1126">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-1127">Poniższy przykład konwertuje każdego znaku w tablicy na jej odpowiednik wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="c4456-1127">The following example converts each character in an array to its uppercase equivalent.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]
 [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="c4456-1128">Zgodnie z objaśnieniem w [najlepsze rozwiązania dotyczące ciągów za pomocą](~/docs/standard/base-types/best-practices-strings.md), zaleca się unikać wywoływania metod wielkości liter na znak i wielkości ciąg znaków, które zastępuje wartości domyślne.</span><span class="sxs-lookup"><span data-stu-id="c4456-1128">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values.</span></span> <span data-ttu-id="c4456-1129">Zamiast tego należy wywołać metody, które są wymagane parametry, aby być jawnie określona.</span><span class="sxs-lookup"><span data-stu-id="c4456-1129">Instead, you should call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="c4456-1130">Aby dokonać konwersji znaków na wielkie litery przy użyciu konwencji wielkość liter w bieżącej kultury, należy wywołać <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> przeciążenie metody o wartości <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> dla jego <paramref name="culture" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="c4456-1130">To convert a character to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</span></span></para>
        </block>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-1131">Znak Unicode, który ma zostać przekształcony.</span><span class="sxs-lookup"><span data-stu-id="c4456-1131">The Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="c4456-1132">Obiekt, który dostarcza reguły dotyczące wielkości znaków z uwzględnieniem ustawień kulturowych.</span><span class="sxs-lookup"><span data-stu-id="c4456-1132">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="c4456-1133">Konwertuje wartość określonego znaku Unicode na jej odpowiednik wielkie przy użyciu określonego informacje dotyczące formatowania specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="c4456-1133">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="c4456-1134">Wielkie litery odpowiednikiem <paramref name="c" />, zmodyfikowane zgodnie z <paramref name="culture" />, wartości bez zmian lub <paramref name="c" /> Jeśli <paramref name="c" /> jest już wielkie litery, nie zawiera wielkie odpowiednika lub nie jest od litery alfabetu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1134">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1135">Użyj <xref:System.String.ToUpper%2A?displayProperty=nameWithType> do przekonwertowania ciągu na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="c4456-1135">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-1136">Poniższy przykład konwertuje każdego znaku w tablicy na jej odpowiednik wielkie dla kultury en US, niezmienna kultura i kultury tr-TR.</span><span class="sxs-lookup"><span data-stu-id="c4456-1136">The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</span></span> <span data-ttu-id="c4456-1137">W tym przykładzie identyczne dla wszystkich języków, z wyjątkiem jeden przypadek jest odpowiednikiem wielkie litery każdego małą literę.</span><span class="sxs-lookup"><span data-stu-id="c4456-1137">In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</span></span> <span data-ttu-id="c4456-1138">Małe "litery i" znak (U + 0069) skonwertować "I" (U + 0049) w en US i kultur niezmienna, ale do "İ" (U + 0130) w tr-TR kultury.</span><span class="sxs-lookup"><span data-stu-id="c4456-1138">The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]
 [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4456-1139"><paramref name="culture" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1139"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static char ToUpperInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpperInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperInvariant(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c4456-1140">Znak Unicode, który ma zostać przekształcony.</span><span class="sxs-lookup"><span data-stu-id="c4456-1140">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="c4456-1141">Konwertuje wartość znaku Unicode na jej odpowiednik wielkie przy użyciu reguł wielkości liter Niezmienna kultura.</span><span class="sxs-lookup"><span data-stu-id="c4456-1141">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="c4456-1142">Wielkie litery odpowiednikiem <paramref name="c" /> parametrów lub wartości bez zmian <paramref name="c" />, jeśli <paramref name="c" /> jest już wielkie lub nie alfabetu.</span><span class="sxs-lookup"><span data-stu-id="c4456-1142">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1143">Jeśli aplikacja jest niezależna od bieżącej kultury i zależy od przypadku znak zmienianie w sposób przewidywalne, użyj <xref:System.Char.ToUpperInvariant%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c4456-1143">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.</span></span>  <span data-ttu-id="c4456-1144"><xref:System.Char.ToUpperInvariant%2A> Metoda jest odpowiednikiem `ToUpper(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="c4456-1144">The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="c4456-1145">Użyj <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> do przekonwertowania ciągu na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="c4456-1145">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out char result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] char&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.TryParse(System.String,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] char % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Char&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c4456-1146">Ciąg zawierający pojedynczy znak lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1146">A string that contains a single character, or <see langword="null" />.</span></span></param>
        <param name="result"><span data-ttu-id="c4456-1147">Po powrocie z tej metody zawiera równoważne wyłącznie znak w znaku Unicode <c>s</c>, jeśli konwersja powiodła się, lub niezdefiniowaną wartość, jeśli konwersja nie powiodła się.</span><span class="sxs-lookup"><span data-stu-id="c4456-1147">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span></span> <span data-ttu-id="c4456-1148">Konwersja nie powiedzie się, jeśli <c>s</c> parametr jest <see langword="null" /> lub długość <c>s</c> nie jest 1.</span><span class="sxs-lookup"><span data-stu-id="c4456-1148">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span></span> <span data-ttu-id="c4456-1149">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="c4456-1149">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="c4456-1150">Konwertuje wartość określonego ciągu na jej odpowiednik znaku Unicode.</span><span class="sxs-lookup"><span data-stu-id="c4456-1150">Converts the value of the specified string to its equivalent Unicode character.</span></span> <span data-ttu-id="c4456-1151">Kod powrotu wskazuje, czy konwersja powiodła się czy nie.</span><span class="sxs-lookup"><span data-stu-id="c4456-1151">A return code indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="c4456-1152"><see langword="true" /> Jeśli <paramref name="s" /> parametr został przekonwertowany pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4456-1152"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4456-1153"><xref:System.Char.TryParse%2A> Metody przypomina <xref:System.Char.Parse%2A> metody, z wyjątkiem <xref:System.Char.TryParse%2A> — metoda nie zgłosić wyjątek, jeśli konwersja nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="c4456-1153">The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4456-1154">Poniższy przykład kodu pokazuje przeciążeń <xref:System.Char.TryParse%2A> metodę kilka typów podstawowych i <xref:System.DateTime.TryParseExact%2A> metodę <xref:System.DateTime> typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="c4456-1154">The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.</span></span>  
  
 [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]
 [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]
 [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>