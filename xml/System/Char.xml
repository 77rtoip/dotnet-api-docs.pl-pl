<Type Name="Char" FullName="System.Char">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="713c7250466801b610e5770b85eea596a73aee9d" />
    <Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/27/2018" />
    <Meta Name="ms.locfileid" Value="42965763" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit char extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Char" />
  <TypeSignature Language="VB.NET" Value="Public Structure Char&#xA;Implements IComparable, IComparable(Of Char), IConvertible, IEquatable(Of Char)" />
  <TypeSignature Language="C++ CLI" Value="public value class Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="F#" Value="type char = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6fdc5-101">Reprezentuje znak jako jednostkę kodu UTF-16.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6fdc5-101">Represents a character as a UTF-16 code unit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-102">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Używa <xref:System.Char> struktury do reprezentowania znaku Unicode.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-102">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character.</span></span> <span data-ttu-id="6fdc5-103">Unicode Standard identyfikuje każdy znak Unicode zwierające unikatowy numer skalarne 21-bitowa, o nazwie punkt kodu i definiuje formularza kodowania UTF-16, który określa, jak punkt kodu jest zakodowany sekwencję co najmniej jednej wartości 16-bitowych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-103">The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</span></span> <span data-ttu-id="6fdc5-104">Każda wartość 16-bitowych od 0x0000 szesnastkowe 0xFFFF i są przechowywane w <xref:System.Char> struktury.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-104">Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.</span></span>  <span data-ttu-id="6fdc5-105">Wartość <xref:System.Char> obiektu jest jego wartość liczbowa 16-bitowych (numer).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-105">The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.</span></span>  
  
 <span data-ttu-id="6fdc5-106">Poniższe sekcje opisują relację między <xref:System.Char> obiektu i znak i omówiono niektóre typowe zadania przeprowadzane przy użyciu <xref:System.Char> wystąpień.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-106">The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.</span></span>  
  
 <span data-ttu-id="6fdc5-107">[Obiekty char, znaki Unicode i ciągi](#Relationship) </span><span class="sxs-lookup"><span data-stu-id="6fdc5-107">[Char objects, Unicode characters, and strings](#Relationship) </span></span>  
 <span data-ttu-id="6fdc5-108">[Znaki i kategorii znaków](#Categories) </span><span class="sxs-lookup"><span data-stu-id="6fdc5-108">[Characters and character categories](#Categories) </span></span>  
 <span data-ttu-id="6fdc5-109">[Znaki i elementy tekstowe](#Elements) </span><span class="sxs-lookup"><span data-stu-id="6fdc5-109">[Characters and text elements](#Elements) </span></span>  
 <span data-ttu-id="6fdc5-110">[Typowe operacje](#Operations) </span><span class="sxs-lookup"><span data-stu-id="6fdc5-110">[Common operations](#Operations) </span></span>  
 [<span data-ttu-id="6fdc5-111">Wartości CHAR i współdziałanie</span><span class="sxs-lookup"><span data-stu-id="6fdc5-111">Char values and interop</span></span>](#Interop)  
  
<a name="Relationship"></a>   
## <a name="char-objects-unicode-characters-and-strings"></a><span data-ttu-id="6fdc5-112">Obiekty char, znaki Unicode i ciągi</span><span class="sxs-lookup"><span data-stu-id="6fdc5-112">Char objects, Unicode characters, and strings</span></span>  
 <span data-ttu-id="6fdc5-113">A <xref:System.String> obiektu to kolejny zbiór <xref:System.Char> struktur, które reprezentuje ciągu tekstowego.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-113">A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text.</span></span> <span data-ttu-id="6fdc5-114">Znaki Unicode mogą być reprezentowane przez jeden <xref:System.Char> obiektu, ale znak, który jest kodowany jako podstawowego znak Para dwuskładnikowa i/lub łącząc sekwencja znaków jest reprezentowany przez wiele <xref:System.Char> obiektów.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-114">Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="6fdc5-115">Z tego powodu <xref:System.Char> struktury w <xref:System.String> obiekt nie jest odpowiednikiem musi być pojedynczy znak Unicode.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-115">For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.</span></span>  
  
 <span data-ttu-id="6fdc5-116">Wiele jednostek 16-bitowego kodu są używane do reprezentowania pojedynczych znaków Unicode w następujących przypadkach:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-116">Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</span></span>  
  
-   <span data-ttu-id="6fdc5-117">Symbole, które może obejmować jeden znak lub podstawowego znak następuje jeden lub więcej znaków łączenie.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-117">Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</span></span> <span data-ttu-id="6fdc5-118">Na przykład znak ä jest reprezentowany przez element <xref:System.Char> obiektu kod, którego jednostka to U + 0061 następuje a <xref:System.Char> obiektu, którego jednostka kodu jest 0308 U +.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-118">For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308.</span></span> <span data-ttu-id="6fdc5-119">(Można także definiować znaku ä przez pojedynczy element <xref:System.Char> obiekt, który ma element kodu jednostki 00E4 U +.) W poniższym przykładzie pokazano, że znaku ä składa się z dwóch <xref:System.Char> obiektów.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-119">(The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.</span></span>  
  
     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]
     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  
  
-   <span data-ttu-id="6fdc5-120">Znaki spoza płaszczyzny wielojęzyczny podstawowy Unicode (BMP).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-120">Characters outside the Unicode Basic Multilingual Plane (BMP).</span></span> <span data-ttu-id="6fdc5-121">Unicode obsługuje szesnastu płaszczyzn oprócz BMP, który reprezentuje warstwy 0.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-121">Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</span></span> <span data-ttu-id="6fdc5-122">Punkt kodu Unicode jest reprezentowany w UTF-32 według wartości 21-bitowa, która obejmuje płaszczyznę.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-122">A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</span></span> <span data-ttu-id="6fdc5-123">Na przykład U + 1D160 reprezentuje znak KOMPOZYCJĄ Uwaga ÓSMEGO symboli.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-123">For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</span></span> <span data-ttu-id="6fdc5-124">Kodowanie UTF-16 jest tylko 16 bitów, dlatego znaki spoza BMP są reprezentowane przez znaki dwuskładnikowe UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-124">Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</span></span> <span data-ttu-id="6fdc5-125">W poniższym przykładzie pokazano, UTF-32 wielokrotność U + 1D160, w KOMPOZYCJĄ Uwaga ÓSMEGO SYMBOL znaku, to U + D834 U + DD60.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-125">The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</span></span> <span data-ttu-id="6fdc5-126">U + D834 jest znakiem zastępczym wysokiego poziomu; Wysoka surogatów z zakresu od U + D800 za pośrednictwem U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-126">U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</span></span> <span data-ttu-id="6fdc5-127">U + DD60 jest dwuskładnikowego; niski surogatów z zakresu od U + DC00 za pośrednictwem U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-127">U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</span></span>  
  
     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]
     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  
  
<a name="Categories"></a>   
## <a name="characters-and-character-categories"></a><span data-ttu-id="6fdc5-128">Znaki i kategorii znaków</span><span class="sxs-lookup"><span data-stu-id="6fdc5-128">Characters and character categories</span></span>  
 <span data-ttu-id="6fdc5-129">Każdy znak Unicode, lub para zastępcza prawidłowe należy do kategorii Unicode.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-129">Each Unicode character or valid surrogate pair belongs to a Unicode category.</span></span> <span data-ttu-id="6fdc5-130">W .NET Framework, kategorii Unicode są reprezentowane przez członków <xref:System.Globalization.UnicodeCategory> wyliczenie i obejmują wartości, takie jak <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, i <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, na przykład.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-130">In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, and <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, for example.</span></span>  
  
 <span data-ttu-id="6fdc5-131">Aby określić kategorię Unicode znak, należy wywołać <xref:System.Char.GetUnicodeCategory%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-131">To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method.</span></span> <span data-ttu-id="6fdc5-132">Na przykład, poniższy przykład wywołuje <xref:System.Char.GetUnicodeCategory%2A> do wyświetlania kategorii Unicode każdego znaku w ciągu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-132">For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.</span></span>  
  
 [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]
 [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  
  
 <span data-ttu-id="6fdc5-133">Wewnętrznie, aby uzyskać znaki spoza zakresu ASCII (U + 0000 do U + 00FF) <xref:System.Char.GetUnicodeCategory%2A> metoda zależy od kategorii Unicode zgłoszone przez <xref:System.Globalization.CharUnicodeInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-133">Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class.</span></span> <span data-ttu-id="6fdc5-134">Począwszy od [!INCLUDE[net_v462](~/includes/net-v462-md.md)], znaki Unicode są klasyfikowane na podstawie [Unicode Standard, wersja 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-134">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="6fdc5-135">W wersjach programu .NET Framework z [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] do [!INCLUDE[net_v461](~/includes/net-v461-md.md)], są klasyfikowane na podstawie [Unicode Standard, wersja wersji 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-135">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
<a name="Elements"></a>   
## <a name="characters-and-text-elements"></a><span data-ttu-id="6fdc5-136">Znaki i elementy tekstowe</span><span class="sxs-lookup"><span data-stu-id="6fdc5-136">Characters and text elements</span></span>  
 <span data-ttu-id="6fdc5-137">Ponieważ pojedynczy znak może być reprezentowany za pomocą wielu <xref:System.Char> obiektów, nie zawsze jest istotne, aby pracować z poszczególnymi <xref:System.Char> obiektów.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-137">Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects.</span></span> <span data-ttu-id="6fdc5-138">Na przykład poniższy przykład konwertuje punkty kodowe Unicode, które reprezentują Morza Egejskiego cyfry 0 do 9 jednostek kodu zakodowane UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-138">For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</span></span> <span data-ttu-id="6fdc5-139">Ponieważ błędnie bazom <xref:System.Char> obiektów ze znakami, niepoprawnie zgłasza, że wynikowy ciąg ma 20 znaków.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-139">Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.</span></span>  
  
 [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]
 [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  
  
 <span data-ttu-id="6fdc5-140">Można wykonać następujące polecenie, aby uniknąć przy założeniu, <xref:System.Char> obiekt reprezentuje pojedynczy znak.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-140">You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.</span></span>  
  
-   <span data-ttu-id="6fdc5-141">Możesz pracować z <xref:System.String> obiektu w całości, a nie Praca z jego pojedynczych znaków do reprezentowania i analizy językowej zawartości.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-141">You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</span></span>  
  
-   <span data-ttu-id="6fdc5-142">Możesz użyć <xref:System.Globalization.StringInfo> klasy, aby pracować z elementami tekstu, zamiast poszczególnych <xref:System.Char> obiektów.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-142">You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects.</span></span> <span data-ttu-id="6fdc5-143">W poniższym przykładzie użyto <xref:System.Globalization.StringInfo> obiekt, aby określić liczbę elementów tekstu w ciąg, który składa się z Morza Egejskiego liczby zero do 9.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-143">The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</span></span> <span data-ttu-id="6fdc5-144">Ponieważ para zastępcza traktuje pojedynczy znak, poprawnie raportów to, czy ciąg zawiera znaki dziesięć.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-144">Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</span></span>  
  
     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]
     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  
  
-   <span data-ttu-id="6fdc5-145">Jeśli ciąg zawiera podstawowego znak, który ma co najmniej jeden znak łączenie, można wywołać <xref:System.String.Normalize%2A?displayProperty=nameWithType> metodę, aby przekonwertować podciąg do pojedynczej jednostki zakodowany kodu UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-145">If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the substring to a single UTF-16 encoded code unit.</span></span> <span data-ttu-id="6fdc5-146">Poniższy przykład wywołuje <xref:System.String.Normalize%2A?displayProperty=nameWithType> metodę, aby przekonwertować podstawowego znak U + 0061 (ŁACIŃSKI, MAŁA litera A) i znaku U + 0308 (łączenie DIAEREZĄ) do U + 00E4 (ŁACIŃSKI małe litery z DIAEREZĄ).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-146">The following example calls the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</span></span>  
  
     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]
     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="6fdc5-147">Typowe operacje</span><span class="sxs-lookup"><span data-stu-id="6fdc5-147">Common operations</span></span>  
 <span data-ttu-id="6fdc5-148"><xref:System.Char> Struktura zapewnia metody do porównania <xref:System.Char> obiektów, konwertuje wartość bieżącego <xref:System.Char> obiekt do obiektu innego typu, a następnie określić kategorię Unicode <xref:System.Char> obiektu:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-148">The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:</span></span>  
  
|<span data-ttu-id="6fdc5-149">Wymagana czynność</span><span class="sxs-lookup"><span data-stu-id="6fdc5-149">To do this</span></span>|<span data-ttu-id="6fdc5-150">Te `System.Char` metody</span><span class="sxs-lookup"><span data-stu-id="6fdc5-150">Use these `System.Char` methods</span></span>|  
|----------------|-------------------------------------|  
|<span data-ttu-id="6fdc5-151">Porównaj <xref:System.Char> obiektów</span><span class="sxs-lookup"><span data-stu-id="6fdc5-151">Compare <xref:System.Char> objects</span></span>|<span data-ttu-id="6fdc5-152"><xref:System.Char.CompareTo%2A> i <xref:System.Char.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="6fdc5-152"><xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A></span></span>|  
|<span data-ttu-id="6fdc5-153">Konwertuj na ciąg punkt kodowy</span><span class="sxs-lookup"><span data-stu-id="6fdc5-153">Convert a code point to a string</span></span>|<xref:System.Char.ConvertFromUtf32%2A>|  
|<span data-ttu-id="6fdc5-154">Konwertuj <xref:System.Char> obiektu lub para zastępcza <xref:System.Char> obiektów punkt kodowy</span><span class="sxs-lookup"><span data-stu-id="6fdc5-154">Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point</span></span>|<span data-ttu-id="6fdc5-155">Dla pojedynczego znaku: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="6fdc5-155">For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span></span><br /><br /> <span data-ttu-id="6fdc5-156">Para zastępcza lub znak w ciągu: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="6fdc5-156">For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="6fdc5-157">Pobierz kategorii Unicode znaku</span><span class="sxs-lookup"><span data-stu-id="6fdc5-157">Get the Unicode category of a character</span></span>|<xref:System.Char.GetUnicodeCategory%2A>|  
|<span data-ttu-id="6fdc5-158">Określić, czy znak jest w określonej kategorii Unicode, takich jak cyfry, litery, znaki interpunkcyjne, znak sterujący i tak dalej</span><span class="sxs-lookup"><span data-stu-id="6fdc5-158">Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</span></span>|<span data-ttu-id="6fdc5-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, i <xref:System.Char.IsWhiteSpace%2A></span><span class="sxs-lookup"><span data-stu-id="6fdc5-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A></span></span>|  
|<span data-ttu-id="6fdc5-160">Konwertuj <xref:System.Char> obiekt, który reprezentuje liczbę, typ wartości liczbowych</span><span class="sxs-lookup"><span data-stu-id="6fdc5-160">Convert a <xref:System.Char> object that represents a number to a numeric value type</span></span>|<xref:System.Char.GetNumericValue%2A>|  
|<span data-ttu-id="6fdc5-161">Konwertuj znak w ciągu do <xref:System.Char> obiektu</span><span class="sxs-lookup"><span data-stu-id="6fdc5-161">Convert a character in a string into a <xref:System.Char> object</span></span>|<span data-ttu-id="6fdc5-162"><xref:System.Char.Parse%2A> i <xref:System.Char.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="6fdc5-162"><xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A></span></span>|  
|<span data-ttu-id="6fdc5-163">Konwertuj <xref:System.Char> obiekt <xref:System.String> obiektu</span><span class="sxs-lookup"><span data-stu-id="6fdc5-163">Convert a <xref:System.Char> object to a <xref:System.String> object</span></span>|<xref:System.Char.ToString%2A>|  
|<span data-ttu-id="6fdc5-164">Zmień wielkość liter <xref:System.Char> obiektu</span><span class="sxs-lookup"><span data-stu-id="6fdc5-164">Change the case of a <xref:System.Char> object</span></span>|<span data-ttu-id="6fdc5-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, i <xref:System.Char.ToUpperInvariant%2A></span><span class="sxs-lookup"><span data-stu-id="6fdc5-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A></span></span>|  
  
<a name="Interop"></a>   
## <a name="char-values-and-interop"></a><span data-ttu-id="6fdc5-166">Wartości CHAR i współdziałanie</span><span class="sxs-lookup"><span data-stu-id="6fdc5-166">Char values and interop</span></span>  
<span data-ttu-id="6fdc5-167">W przypadku zarządzanych <xref:System.Char> typ, który jest reprezentowany jako jednostka kodu zakodowana Unicode UTF-16, jest przekazywany do kodu niezarządzanego, organizator międzyoperacyjny konwertuje znak domyślnie ustawiany na ANSI.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-167">When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</span></span> <span data-ttu-id="6fdc5-168">Można zastosować <xref:System.Runtime.InteropServices.DllImportAttribute> atrybut platformę wywołania deklaracje i <xref:System.Runtime.InteropServices.StructLayoutAttribute> atrybutu deklaracji międzyoperacyjnego modelu COM do kontroli zorganizowanej zestawu znaków <xref:System.Char> typu używa.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-168">You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-169">W poniższym przykładzie kodu pokazano niektóre z metod opisanych w <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-169">The following code example demonstrates some of the methods in <xref:System.Char>.</span></span>  
  
 [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]
 [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]
 [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="6fdc5-170">Wszystkie elementy członkowskie tego typu są bezpieczne wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6fdc5-170">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="6fdc5-171">Elementy członkowskie, które na pierwszy rzut oka modyfikują stan wystąpienia, w rzeczywistości zwracają nowe wystąpienie zainicjowane z nową wartością.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6fdc5-171">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="6fdc5-172">Podobnie jak w przypadku innych typów odczytywanie i zapisywanie w udostępnionej zmiennej, która zawiera wystąpienie tego typu, musi być chronione przez blokadę w celu zagwarantowania bezpieczeństwa wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6fdc5-172">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-173">Porównuje to wystąpienie określonego obiektu lub typu wartości i wskazuje, czy to wystąpienie poprzedza, następuje po lub pojawia się w tym samym miejscu w kolejności sortowania określonego typu obiektu lub wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : char -&gt; int&#xA;override this.CompareTo : char -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6fdc5-174">A <see cref="T:System.Char" /> obiekt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-174">A <see cref="T:System.Char" /> object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-175">Porównuje to wystąpienie określonej <see cref="T:System.Char" /> obiektu i wskazuje, czy to wystąpienie poprzedza, następuje po lub pojawia się w tej samej pozycji w porządku sortowania określonych <see cref="T:System.Char" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-176">Liczba ze znakiem wskazującą położenie tego wystąpienia w porządku sortowania w odniesieniu do <paramref name="value" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="6fdc5-177">
            <list type="table">
              <listheader>
                <term> Wartość zwracana </term>
                <description> opis </description>
              </listheader>
              <item>
                <term> mniejsza niż zero </term>
                <description> to wystąpienie poprzedza <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zero </term>
                <description> to wystąpienie ma tej samej pozycji w kolejności sortowania, co <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Większa od zera </term>
                <description> to wystąpienie następuje po <paramref name="value" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-177">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-178">Ta metoda implementuje <xref:System.IComparable%601?displayProperty=nameWithType> interfejs i wykonuje nieco lepiej niż <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> metody, ponieważ nie trzeba przekonwertować `value` parametr do obiektu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-178">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="6fdc5-179">Porównanie wykonana przez tę metodę jest oparty na zakodowanych wartości tego wystąpienia i `value`, nie ich lexicographical właściwości.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-179">The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.</span></span>  
  
 <span data-ttu-id="6fdc5-180">Jeśli <xref:System.Char.CompareTo%2A> typ parametru metody ma mniejszą liczbę bitów (jest mniejsza) niż typ wystąpienia niektórych językach programowania jest wykonywana niejawna konwersja poszerzająca, która przekształca wartości parametru na wartość z bitami więcej.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-180">If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="6fdc5-181">Załóżmy, że typem wystąpienia jest <xref:System.Int32> i typ parametru jest <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-181">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="6fdc5-182">Kompilator Microsoft C# generuje instrukcje do reprezentowania wartości jako parametr <xref:System.Int32> obiektu, a następnie generuje <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> metodę, która porównuje wartości wystąpienia <xref:System.Int32> wystąpienia i <xref:System.Int32> parametru Reprezentacja.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-182">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="6fdc5-183">Zazwyczaj niejawne konwersje rozszerzające są wykonywane na typach liczbowych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-183">Typically, implicit widening conversions are performed on numeric types.</span></span> <span data-ttu-id="6fdc5-184">Zapoznaj się z dokumentacją języka programowania, aby ustalić, czy jego kompilator wykonuje konwersje rozszerzające.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-184">Consult your programming language's documentation to determine if its compiler performs widening conversions.</span></span> <span data-ttu-id="6fdc5-185">W przypadku niezgodności typów wystąpienia i parametru i odpowiedniej konwersji nie jest dostępna, kompilator generuje instrukcje, aby pole parametru, a następnie wywołaj <xref:System.Char.CompareTo%2A> przeciążenia przyjmującego <xref:System.Object> parametru.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-185">If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-186">Poniższy przykład kodu demonstruje ogólnych i nieogólnych wersje `CompareTo` metody dla kilku typów wartości i odwołań.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-186">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6fdc5-187">Obiekt do porównania z tym wystąpieniem, lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-187">An object to compare this instance to, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-188">Porównuje to wystąpienie określonego obiektu i wskazuje, czy to wystąpienie poprzedza, następuje po lub pojawia się w tej samej pozycji w porządku sortowania określonych <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-188">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-189">Liczba ze znakiem wskazującą położenie tego wystąpienia w porządku sortowania w odniesieniu do <paramref name="value" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-189">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="6fdc5-190">
            <list type="table">
              <listheader>
                <term> Wartość zwracana </term>
                <description> opis </description>
              </listheader>
              <item>
                <term> mniejsza niż zero </term>
                <description> to wystąpienie poprzedza <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zero </term>
                <description> to wystąpienie ma tej samej pozycji w kolejności sortowania, co <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Większa od zera </term>
                <description> to wystąpienie następuje po <paramref name="value" />.  - lub - <paramref name="value" /> jest <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-190">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-191"><xref:System.Char.CompareTo%2A> Implementuje metodę <xref:System.IComparable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-191">The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="6fdc5-192">`value` Parametr musi być `null` lub wystąpienie <xref:System.Char>; w przeciwnym razie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-192">The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="6fdc5-193">Porównanie wykonana przez tę metodę jest oparty na zakodowanych wartości tego wystąpienia i `value`, niekoniecznie ich lexicographical właściwości.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-193">The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics.</span></span> <span data-ttu-id="6fdc5-194">Dowolne wystąpienie <xref:System.Char>, niezależnie od jej wartość jest uznawany za większy niż `null`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-194">Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-195">Poniższy przykład kodu demonstruje <xref:System.Char.CompareTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-195">The following code example demonstrates <xref:System.Char.CompareTo%2A>.</span></span>  
  
 [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]
 [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]
 [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fdc5-196">
            <paramref name="value" /> nie jest <see cref="T:System.Char" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-196">
              <paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromUtf32">
      <MemberSignature Language="C#" Value="public static string ConvertFromUtf32 (int utf32);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertFromUtf32(int32 utf32) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertFromUtf32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertFromUtf32 (utf32 As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertFromUtf32(int utf32);" />
      <MemberSignature Language="F#" Value="static member ConvertFromUtf32 : int -&gt; string" Usage="System.char.ConvertFromUtf32 utf32" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf32" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf32">
          <span data-ttu-id="6fdc5-197">Punkt kodu Unicode 21-bitowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-197">A 21-bit Unicode code point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-198">Konwertuje określony punkt kodu Unicode na ciąg UTF-16 zakodowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-198">Converts the specified Unicode code point into a UTF-16 encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-199">Ciąg składający się z jednego <see cref="T:System.Char" /> obiektu lub Para dwuskładnikowa <see cref="T:System.Char" /> obiekty równoważne punkt kodu określonego przez <paramref name="utf32" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-199">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-200">Ta metoda umożliwia konwertowanie punkt kodu Unicode 21-bitowa na ciąg UTF-16 zakodowane przed testowaniem ciągu za pomocą metod, takich jak <xref:System.Char.IsLowSurrogate%28System.Char%29> i <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-200">Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span></span>  
  
 <span data-ttu-id="6fdc5-201">Prawidłowy punkt kodu poza Basic Multilingual Plane (BMP) zawsze daje para zastępcza prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-201">A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</span></span> <span data-ttu-id="6fdc5-202">Jednak prawidłowy punkt kodu w ramach BMP może nie przynieść prawidłowy wynik zgodnie ze standardem Unicode, ponieważ żadne językowej przetwarzanie jest używana podczas konwersji.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-202">However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</span></span> <span data-ttu-id="6fdc5-203">Z tego powodu należy użyć <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> klasy w celu przekonwertowania zbiorczo danych UTF-32 do zbiorczego danych UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-203">For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class to convert bulk UTF-32 data into bulk UTF-16 data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-204">Poniższy przykład kodu demonstruje <xref:System.Char.ConvertToUtf32%2A> i <xref:System.Char.ConvertFromUtf32%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-204">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-205">
            <paramref name="utf32" /> jest nie prawidłowy 21-bitowa punkt kodu Unicode w zakresie od U + od 0 do U + 10FFFF, z wyjątkiem zakresu para zastępcza od U + D800 za pośrednictwem U + DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-205">
              <paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToUtf32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-206">Konwertuje wartość pary zastępczej UTF-16 zakodowane punkt kodu Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-206">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (highSurrogate As Char, lowSurrogate As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : char * char -&gt; int" Usage="System.char.ConvertToUtf32 (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="6fdc5-207">Jednostka kodu znakiem zastępczym wysokiego poziomu (czyli jednostka kodu od U + D800 za pośrednictwem U + DBFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-207">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="6fdc5-208">Jednostka kodu znak zastępczy niskiego poziomu (czyli jednostka kodu od U + DC00 za pośrednictwem U + DFFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-208">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-209">Konwertuje wartość pary zastępczej UTF-16 zakodowane punkt kodu Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-209">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-210">Punkt kodowy Unicode 21-bitowa, reprezentowane przez <paramref name="highSurrogate" /> i <paramref name="lowSurrogate" /> parametrów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-210">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-211">Ta metoda umożliwia konwertowanie para zastępcza punkt kodu Unicode 21-bitowa.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-211">Use this method to convert a surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="6fdc5-212">Aby przekonwertować danych UTF-16, UTF-32 danych, użyj <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-212">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="6fdc5-213">Jako jednostki 16-bitowego kodu zwykle kodowanie UTF-16 reprezentuje pojedynczy znak Unicode.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-213">Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</span></span> <span data-ttu-id="6fdc5-214">Jednak obsługuje ona również par zastępczych, umożliwiających abstrakcyjne pojedynczy znak może być reprezentowana jako dwie jednostki 16-bitowego kodu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-214">However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</span></span> <span data-ttu-id="6fdc5-215">Te dwa <xref:System.Char> obiekty muszą mieć jednostki kodu tego zakresu od U + D800 do U + DBFF dla pierwszego zastępczy (wysoka) oraz od U + DC00 do U + DFFF dla drugiego zastępczy (niska).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-215">These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</span></span> <span data-ttu-id="6fdc5-216">Pary zastępcze są obsługiwane tylko przez UTF-16 kodowania.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-216">Surrogate pairs are supported only by UTF-16 encoding.</span></span> <span data-ttu-id="6fdc5-217">Ta metoda umożliwia znaku, reprezentowane przez para zastępcza UTF-16 są konwertowane na znak, przy użyciu kodowania UTF-32.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-217">This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-218">Poniższy przykład kodu demonstruje <xref:System.Char.ConvertToUtf32%2A> i <xref:System.Char.ConvertFromUtf32%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-218">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-219">
            <paramref name="highSurrogate" /> nie jest z zakresu od U + D800 do U + DBFF lub <paramref name="lowSurrogate" /> nie znajduje się w zakresie od U + DC00 do U + DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-219">
              <paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : string * int -&gt; int" Usage="System.char.ConvertToUtf32 (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-220">Ciąg, który zawiera parę znak lub zastępcze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-220">A string that contains a character or surrogate pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-221">Indeks pary znaków lub zastępcze w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-221">The index position of the character or surrogate pair in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-222">Konwertuje wartość UTF-16 zakodowanych znaków lub zastępcze pary na określonej pozycji w ciągu w punkt kodu Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-222">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-223">Punkt kodowy Unicode 21-bitowa, reprezentowany przez znak lub zastępcze pary w pozycji w <paramref name="s" /> określony przez parametr <paramref name="index" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-223">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-224">Ta metoda umożliwia konwertowanie pary znaków lub zastępcze punkt kodu Unicode 21-bitowa.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-224">Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="6fdc5-225">Aby przekonwertować danych UTF-16, UTF-32 danych, użyj <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> klasy.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-225">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-226">Poniższy przykład kodu demonstruje <xref:System.Char.ConvertToUtf32%2A> i <xref:System.Char.ConvertFromUtf32%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-226">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-227">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-227">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-228">
            <paramref name="index" /> nie jest pozycją w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-228">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fdc5-229">Określony indeks zawiera pary zastępczej i pierwszy znak w parę nie jest prawidłowym znakiem zastępczym wysokiego poziomu lub drugim znakiem w parę nie jest prawidłowy znak zastępczy niskiego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-229">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-230">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi lub <see cref="T:System.Char" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-230">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : char -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="6fdc5-231">Obiekt, który ma zostać porównany z tym wystąpieniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-231">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-232">Zwraca wartość wskazującą, czy to wystąpienie jest równe określonej <see cref="T:System.Char" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-232">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-233">
            <see langword="true" /> Jeśli <paramref name="obj" /> parametr ma wartość wartość tego wystąpienia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-233">
              <see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-234">Ta metoda implementuje <xref:System.IEquatable%601?displayProperty=nameWithType> interfejs i wykonuje nieco lepiej niż <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> , ponieważ nie trzeba rozpakowania `obj` parametru.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-234">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> because it does not need to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="6fdc5-235">Obiekt do porównania z tym wystąpieniem lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-235">An object to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-236">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-236">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-237">
            <see langword="true" /> Jeśli <paramref name="obj" /> jest wystąpieniem <see cref="T:System.Char" /> i równości wartość tego wystąpienia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-237">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-238">Porównanie wykonana przez tę metodę jest oparty na zakodowanych wartości tego wystąpienia i `obj`, niekoniecznie ich lexicographical właściwości.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-238">The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-239">Poniższy przykład kodu demonstruje <xref:System.Char.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-239">The following code example demonstrates <xref:System.Char.Equals%2A>.</span></span>  
  
 [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]
 [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]
 [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="char.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-240">Zwraca kod skrótu dla tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-240">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-241">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-241">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-242">Konwertuje określony znak Unicode liczbowych na liczbę zmiennoprzecinkową podwójnej precyzji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-242">Converts a specified numeric Unicode character to a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (c As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char c);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.char.GetNumericValue c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-243">Znak Unicode, który ma zostać przekształcony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-243">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-244">Konwertuje określony znak Unicode liczbowe o podwójnej dokładności liczba zmiennoprzecinkowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-244">Converts the specified numeric Unicode character to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-245">Wartość liczbową <paramref name="c" /> Jeśli ten znak przedstawia liczbę; w przeciwnym razie, od – 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-245">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-246">`c` Parametr musi być <xref:System.Char> reprezentacja wartości liczbowej.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-246">The `c` parameter must be the <xref:System.Char> representation of a numeric value.</span></span> <span data-ttu-id="6fdc5-247">Na przykład jeśli `c` "5", wartość zwracana wynosi 5.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-247">For example, if `c` is "5", the return value is 5.</span></span> <span data-ttu-id="6fdc5-248">Jednak jeśli `c` jest "z", wartość zwracana wynosi od – 1,0.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-248">However, if `c` is "z", the return value is -1.0.</span></span>  
  
 <span data-ttu-id="6fdc5-249">Znak ma skojarzoną wartość liczbową, tylko wtedy, gdy jest on członkiem jednej z następujących <xref:System.Globalization.UnicodeCategory> kategorie: `DecimalDigitNumber`, `LetterNumber`, lub `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-249">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="6fdc5-250"><xref:System.Char.GetNumericValue%2A> Metoda zakłada, że `c` odnosi się do pojedynczego znaku językowej i sprawdza, czy ten znak może być konwertowane na cyfrę dziesiętną.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-250">The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="6fdc5-251">Jednak niektóre numery w standardzie Unicode są reprezentowane przez dwa <xref:System.Char> obiekty, które tworzą pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-251">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="6fdc5-252">Na przykład system numeracji Morza Egejskiego składa się z kodów znaku U+10107 do U+10133.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-252">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="6fdc5-253">W poniższym przykładzie użyto <xref:System.Char.ConvertFromUtf32%2A> metodę, aby utworzyć wystąpienie ciąg reprezentujący Morza EGEJSKIEGO jeden numer.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-253">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="6fdc5-254">Jak wynika z w przykładzie pokazano <xref:System.Char.GetNumericValue%28System.Char%29> metoda zwraca wartość -1, jeśli zostanie przekazana, znakiem zastępczym wysokiego poziomu lub znak zastępczy niskiego poziomu tego znaku.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-254">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]
 [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-255">W poniższym przykładzie pokazano <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-255">The following example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.char.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-256">A <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-256">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-257">Pozycja znaku w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-257">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-258">Konwertuje znak Unicode numeryczne w określonej pozycji w ciągu określonej podwójnej precyzji liczb zmiennoprzecinkowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-258">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-259">Wartość liczbową znak na pozycji <paramref name="index" /> w <paramref name="s" /> Jeśli ten znak przedstawia liczbę; w przeciwnym razie, wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-259">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-260">`s` Parametr musi być ciąg reprezentujący wartość liczbową.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-260">The `s` parameter must be the string representation of a numeric value.</span></span> <span data-ttu-id="6fdc5-261">Na przykład jeśli znak na pozycji `index` w `s` "5", wartość zwracana wynosi 5.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-261">For example, if the character at position `index` in `s` is "5", the return value is 5.</span></span> <span data-ttu-id="6fdc5-262">Jednakże jeśli znak na pozycji `index` w `s` jest "z", wartość zwracana jest wartość -1.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-262">However, if the character at position `index` in `s` is "z", the return value is -1.</span></span>  
  
 <span data-ttu-id="6fdc5-263">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-263">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-264">Znak ma skojarzoną wartość liczbową, tylko wtedy, gdy jest on członkiem jednej z następujących <xref:System.Globalization.UnicodeCategory> kategorie: `DecimalDigitNumber`, `LetterNumber`, lub `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-264">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="6fdc5-265">Jeśli <xref:System.Char> obiektu w położeniu `index` jest pierwszym znakiem para zastępcza prawidłowe <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> Metoda określa, czy para zastępcza formularzy zawierać cyfrę.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-265">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="6fdc5-266">Na przykład system numeracji Morza Egejskiego składa się z kodów znaku U+10107 do U+10133.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-266">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="6fdc5-267">W poniższym przykładzie użyto <xref:System.Char.ConvertFromUtf32%2A> metody do utworzenia wystąpienia ciąg reprezentujący każdą liczbę Morza Egejskiego.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-267">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="6fdc5-268">Jak wynika z w przykładzie pokazano <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> metoda zwraca prawidłową wartość liczbową, jeśli został przekazany znakiem zastępczym wysokiego poziomu liczbą Morza Egejskiego.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-268">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="6fdc5-269">Jednakże, jeśli został przekazany znak zastępczy niskiego poziomu, uwzględnia tylko znak zastępczy niskiego poziomu w izolacji i zwraca wartość -1.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-269">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]
 [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-270">Poniższy przykład kodu demonstruje <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-270">The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-271">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-271">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-272">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-272">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="char.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-273">Zwraca <see cref="T:System.TypeCode" /> dla typu wartości <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-273">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-274">Stała wyliczeniowa <see cref="F:System.TypeCode.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-274">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-275">Klasyfikuje znak Unicode do grupy identyfikowane za pomocą jednej z <see cref="T:System.Globalization.UnicodeCategory" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-275">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (c As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char c);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-276">Znak Unicode kategoryzacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-276">The Unicode character to categorize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-277">Klasyfikuje określony znak Unicode do grupy identyfikowane za pomocą jednej z <see cref="T:System.Globalization.UnicodeCategory" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-277">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-278">A <see cref="T:System.Globalization.UnicodeCategory" /> wartość, która identyfikuje grupę, która zawiera <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-278">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-279"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> Metody nie zawsze zwracają takie same <xref:System.Globalization.UnicodeCategory> wartość jako <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> metody, jeśli określony znak jest przekazywana jako parametr.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-279">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="6fdc5-280"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> Metodę zaprojektowano w celu odzwierciedlenia bieżącej wersji standardu Unicode.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-280">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="6fdc5-281">W odróżnieniu od nich mimo że <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> metoda zazwyczaj odzwierciedla bieżącą wersję Unicode standard, może on zwrócić kategorii znaków na podstawie poprzednich wersji standard lub zwracają kategorię, która różni się od bieżącego planu standard w kolejności Aby zachować zgodność z poprzednimi wersjami.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-281">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="6fdc5-282">W rezultacie firma Microsoft zaleca użycie <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> zamiast metody <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-282">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6fdc5-283">Począwszy od [!INCLUDE[net_v462](~/includes/net-v462-md.md)], znaki Unicode są klasyfikowane na podstawie [standardowa systemu Unix, wersja 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-283">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="6fdc5-284">W wersjach programu .NET Framework z [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] do [!INCLUDE[net_v461](~/includes/net-v461-md.md)], są klasyfikowane na podstawie [standardowa systemu Unix, wersja wersji 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-284">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-285">Poniższy przykład kodu demonstruje <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-285">The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-286">A <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-286">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-287">Pozycja znaku w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-287">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-288">Klasyfikuje znak w określonej pozycji w ciągu określonego w grupie identyfikowane za pomocą jednej z <see cref="T:System.Globalization.UnicodeCategory" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-288">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-289">A <see cref="T:System.Globalization.UnicodeCategory" /> Stała wyliczeniowa, która identyfikuje grupę, która zawiera znak na pozycji <paramref name="index" /> w <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-289">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-290">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-290">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-291"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> Metody nie zawsze zwracają takie same <xref:System.Globalization.UnicodeCategory> wartość jako <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> metody, jeśli określony znak jest przekazywana jako parametr.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-291">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="6fdc5-292"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> Metodę zaprojektowano w celu odzwierciedlenia bieżącej wersji standardu Unicode.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-292">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="6fdc5-293">W odróżnieniu od nich mimo że <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> metoda zazwyczaj odzwierciedla bieżącą wersję Unicode standard, może on zwrócić kategorii znaków na podstawie poprzednich wersji standard lub zwracają kategorię, która różni się od bieżącego planu standard w kolejności Aby zachować zgodność z poprzednimi wersjami.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-293">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="6fdc5-294">W rezultacie firma Microsoft zaleca użycie <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> zamiast metody <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-294">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6fdc5-295">Począwszy od [!INCLUDE[net_v462](~/includes/net-v462-md.md)], znaki Unicode są klasyfikowane na podstawie [standardowa systemu Unix, wersja 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-295">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="6fdc5-296">W wersjach programu .NET Framework z [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] do [!INCLUDE[net_v461](~/includes/net-v461-md.md)], są klasyfikowane na podstawie [standardowa systemu Unix, wersja wersji 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-296">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-297">W poniższym przykładzie pokazano <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-297">The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-298">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-298">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-299">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-299">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsControl">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-300">Wskazuje, czy określony znak Unicode jest dzielony na kategorie jako znak kontrolny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-300">Indicates whether a specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-301">Znaki kontrolne są formatowania i inne niedrukowalne znaki, takie jak potwierdzenia, etykiety, CR, FF, LF i VT.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-301">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="6fdc5-302">W standardzie Unicode przypisuje punkty kodowe od \U0000 do \U001F, \U007F i z \U0080 do \U009F do znaków kontrolnych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-302">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="6fdc5-303">Zgodnie ze standardem Unicode te wartości są interpretowane jako znaki kontrolne, chyba że ich użycie w przeciwnym razie jest zdefiniowany przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-303">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="6fdc5-304">Znaki kontrolne prawidłowe są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-304">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(char c);" />
      <MemberSignature Language="F#" Value="static member IsControl : char -&gt; bool" Usage="System.char.IsControl c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-305">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-305">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-306">Wskazuje, czy określony znak Unicode jest dzielony na kategorie jako znak kontrolny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-306">Indicates whether the specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-307">
            <see langword="true" /> Jeśli <paramref name="c" /> jest formantem znaku; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-307">
              <see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-308">Znaki kontrolne są formatowania i inne niedrukowalne znaki, takie jak potwierdzenia, etykiety, CR, FF, LF i VT.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-308">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="6fdc5-309">Standardu Unicode T przypisuje punkty kodowe od \U0000 do \U001F, \U007F i z \U0080 do \U009F do znaków kontrolnych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-309">T The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="6fdc5-310">Zgodnie ze standardem Unicode te wartości są interpretowane jako znaki kontrolne, chyba że ich użycie w przeciwnym razie jest zdefiniowany przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-310">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="6fdc5-311">Znaki kontrolne prawidłowe są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-311">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-312">Poniższy przykład wyświetla punkt kodu Unicode poszczególnych znaków kontrolnych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-312">The following example lists the Unicode code point of each of the control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]
 [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]
 [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsControl : string * int -&gt; bool" Usage="System.char.IsControl (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-313">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-313">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-314">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-314">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-315">Wskazuje, czy znak w określonej pozycji w określony ciąg jest dzielony na kategorie jako znak kontrolny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-315">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-316">
            <see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest formantem znaku; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-316">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-317">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-317">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-318">Znaki kontrolne są formatowania i inne niedrukowalne znaki, takie jak potwierdzenia, etykiety, CR, FF, LF i VT.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-318">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="6fdc5-319">W standardzie Unicode przypisuje punkty kodowe od \U0000 do \U001F, \U007F i z \U0080 do \U009F do znaków kontrolnych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-319">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="6fdc5-320">Zgodnie ze standardem Unicode te wartości są interpretowane jako znaki kontrolne, chyba że ich użycie w przeciwnym razie jest zdefiniowany przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-320">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="6fdc5-321">Znaki kontrolne prawidłowe są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-321">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-322">Poniższy przykład wylicza znaków w ciągu i określa, czy są dowolne znaki kontrolne.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-322">The following example enumerates the characters in a string and determines whether any are control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]
 [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]
 [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-323">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-323">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-324">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-324">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-325">Wskazuje, czy znak Unicode jest dzielony na kategorie, wyświetlaną cyfrą dziesiętną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-325">Indicates whether a Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-326">Prawidłowych cyfr są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-326">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsDigit : char -&gt; bool" Usage="System.char.IsDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-327">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-327">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-328">Wskazuje, czy określony znak Unicode jest dzielony na kategorie, wyświetlaną cyfrą dziesiętną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-328">Indicates whether the specified Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-329">
            <see langword="true" /> Jeśli <paramref name="c" /> jest dziesiętną wartością cyfrową; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-329">
              <see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-330">Ta metoda określa, czy <xref:System.Char> jest cyfrą podstawa 10.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-330">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="6fdc5-331">To zachowanie różni się od <xref:System.Char.IsNumber%2A>, która określa, czy `Char` jest dowolnej kategorii Unicode, liczbowych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-331">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category.</span></span> <span data-ttu-id="6fdc5-332">Numery zawierają znaki, takie jak ułamki, indeksy dolne, indeksów górnych, rzymskie, łącznik waluty, otoczony liczb i cyfr specyficzne dla skryptu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-332">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="6fdc5-333">Prawidłowych cyfr są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-333">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-334">Poniższy przykład kodu demonstruje <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-334">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsDigit : string * int -&gt; bool" Usage="System.char.IsDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-335">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-335">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-336">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-336">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-337">Wskazuje, czy znak w określonej pozycji w określony ciąg jest dzielony na kategorie, wyświetlaną cyfrą dziesiętną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-337">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-338">
            <see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest dziesiętną wartością cyfrową; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-338">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-339">Ta metoda określa, czy <xref:System.Char> jest cyfrą podstawa 10.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-339">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="6fdc5-340">To zachowanie różni się od <xref:System.Char.IsNumber%2A>, która określa, czy <xref:System.Char> jest dowolnej kategorii Unicode, liczbowych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-340">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="6fdc5-341">Numery zawierają znaki, takie jak ułamki, indeksy dolne, indeksów górnych, rzymskie, łącznik waluty, otoczony liczb i cyfr specyficzne dla skryptu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-341">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="6fdc5-342">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-342">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-343">Prawidłowych cyfr są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-343">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-344">Poniższy przykład kodu demonstruje <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-344">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-345">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-345">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-346">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-346">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsHighSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-347">Wskazuje, czy określony <see cref="T:System.Char" /> obiekt jest znakiem zastępczym wysokiego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-347">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : char -&gt; bool" Usage="System.char.IsHighSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-348">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-348">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-349">Wskazuje, czy określony <see cref="T:System.Char" /> obiekt jest znakiem zastępczym wysokiego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-349">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-350">
            <see langword="true" /> Jeśli wartość liczbową <paramref name="c" /> parametru z zakresu od U + D800 za pośrednictwem U + DBFF; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-350">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-351">Oprócz reprezentowania pojedynczych znaków przy użyciu 16-bitowego kodu znaku, kodowanie UTF-16 pozwala na przedstawianie znaków abstrakcyjnych za pomocą dwóch 16-bitowych kodów znaku, znanych jako para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-351">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="6fdc5-352">Pierwszy element z tej pary jest znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-352">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="6fdc5-353">Jego punkt kodowy należą do zakresu od U + D800 do U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-353">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="6fdc5-354">Indywidualny znak zastępczy ma nie interpretacji własnych; jest istotny tylko wtedy, gdy jest używany jako część pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-354">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-355">Poniższy przykład kodu demonstruje <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, i <xref:System.Char.IsSurrogatePair%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-355">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : string * int -&gt; bool" Usage="System.char.IsHighSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-356">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-356">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-357">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-357">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-358">Wskazuje, czy <see cref="T:System.Char" /> obiektu w określonej pozycji w ciągu jest znakiem zastępczym wysokiego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-358">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-359">
            <see langword="true" /> Jeśli określony znak w wartości liczbowej <paramref name="s" /> parametru z zakresu od U + D800 za pośrednictwem U + DBFF; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-359">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-360">`index` Parametr jest liczony od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-360">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="6fdc5-361">Oprócz reprezentowania pojedynczych znaków przy użyciu 16-bitowego kodu znaku, kodowanie UTF-16 pozwala na przedstawianie znaków abstrakcyjnych za pomocą dwóch 16-bitowych kodów znaku, znanych jako para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-361">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="6fdc5-362">Pierwszy element z tej pary jest znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-362">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="6fdc5-363">Jego punkt kodowy należą do zakresu od U + D800 do U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-363">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="6fdc5-364">Indywidualny znak zastępczy ma nie interpretacji własnych; jest istotny tylko wtedy, gdy jest używany jako część pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-364">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-365">Poniższy przykład kodu demonstruje <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, i <xref:System.Char.IsSurrogatePair%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-365">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-366">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-366">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-367">
            <paramref name="index" /> nie jest pozycją w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-367">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-368">Wskazuje, czy znak Unicode jest dzielony na kategorie litery Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-368">Indicates whether a Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-369">Ta metoda określa, czy <xref:System.Char> jest członkiem dowolnej kategorii Unicode literę.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-369">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="6fdc5-370">Litery Unicode są następujące:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-370">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="6fdc5-371">Wielkie litery, np. U + 0041 (LATIN CAPITAL LETTER A) za pośrednictwem U + 005A (LATIN CAPITAL LETTER Z) lub U + 0400 (CYRYLICA litera IE WITH GRAVE) za pośrednictwem U + 042F (CYRYLICA litera YA).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-371">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="6fdc5-372">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-372">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="6fdc5-373">Małe litery, np. U + 0061 (ŁACIŃSKI, MAŁA litera A) za pośrednictwem U + 007A (ŁACIŃSKI małe litery Z), lub U + 03AC (GRECKI małej litery ALFA z AKCENTEM) za pośrednictwem U + 03CE (GRECKI MAŁA litera OMEGA z AKCENTEM).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-373">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="6fdc5-374">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-374">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="6fdc5-375">Tytuł wielkość liter, takich jak U + 01 C 5 (ŁACIŃSKI wielkiej litery D z małej litery Z z odwróconym DASZKIEM) lub U + 1FFC (GRECKI litera OMEGA z PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-375">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="6fdc5-376">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-376">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="6fdc5-377">Modyfikatory, np. U + 02B0 (H małej litery MODYFIKATOR) za pośrednictwem U + 02C 1 (MODYFIKATOR LITERĘ ODWRÓCONE GLOTTAL STOP), lub U + 1D2C (MODYFIKATOR litery A kapitału) za pośrednictwem U + 1 d 61 (MODYFIKATOR CHI małe litery).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-377">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="6fdc5-378">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-378">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="6fdc5-379">Pozostałe litery, np. U + 05 D 0 (ALEF LITERĘ HEBRAJSKI) za pośrednictwem U + 05EA (TAV litery HEBRAJSKI), U + 0621 (ARABSKI HAMZA LITERĄ) za pośrednictwem U + 063A (ARABSKI GHAIN litery), lub U + 4E00 (\<ideogramów CJK, pierwsza >) za pośrednictwem U + 9 FC 3 (\<ideogramów CJK, ostatni >).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-379">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="6fdc5-380">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-380">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetter : char -&gt; bool" Usage="System.char.IsLetter c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-381">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-381">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-382">Wskazuje, czy określony znak Unicode jest dzielony na kategorie litery Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-382">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-383">
            <see langword="true" /> Jeśli <paramref name="c" /> jest literą; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-383">
              <see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-384">Ta metoda określa, czy <xref:System.Char> jest członkiem dowolnej kategorii Unicode literę.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-384">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="6fdc5-385">Litery Unicode są następujące:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-385">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="6fdc5-386">Wielkie litery, np. U + 0041 (LATIN CAPITAL LETTER A) za pośrednictwem U + 005A (LATIN CAPITAL LETTER Z) lub U + 0400 (CYRYLICA litera IE WITH GRAVE) za pośrednictwem U + 042F (CYRYLICA litera YA).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-386">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="6fdc5-387">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-387">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="6fdc5-388">Małe litery, np. U + 0061 (ŁACIŃSKI, MAŁA litera A) za pośrednictwem U + 007A (ŁACIŃSKI małe litery Z), lub U + 03AC (GRECKI małej litery ALFA z AKCENTEM) za pośrednictwem U + 03CE (GRECKI MAŁA litera OMEGA z AKCENTEM).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-388">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="6fdc5-389">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-389">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="6fdc5-390">Tytuł wielkość liter, takich jak U + 01 C 5 (ŁACIŃSKI wielkiej litery D z małej litery Z z odwróconym DASZKIEM) lub U + 1FFC (GRECKI litera OMEGA z PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-390">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="6fdc5-391">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-391">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="6fdc5-392">Modyfikatory, np. U + 02B0 (H małej litery MODYFIKATOR) za pośrednictwem U + 02C 1 (MODYFIKATOR LITERĘ ODWRÓCONE GLOTTAL STOP), lub U + 1D2C (MODYFIKATOR litery A kapitału) za pośrednictwem U + 1 d 61 (MODYFIKATOR CHI małe litery).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-392">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="6fdc5-393">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-393">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="6fdc5-394">Pozostałe litery, np. U + 05 D 0 (ALEF LITERĘ HEBRAJSKI) za pośrednictwem U + 05EA (TAV litery HEBRAJSKI), U + 0621 (ARABSKI HAMZA LITERĄ) za pośrednictwem U + 063A (ARABSKI GHAIN litery), lub U + 4E00 (\<ideogramów CJK, pierwsza >) za pośrednictwem U + 9 FC 3 (\<ideogramów CJK, ostatni >).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-394">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="6fdc5-395">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-395">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-396">Poniższy przykład kodu demonstruje <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-396">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetter : string * int -&gt; bool" Usage="System.char.IsLetter (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-397">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-397">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-398">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-398">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-399">Wskazuje, czy znak w określonej pozycji w określony ciąg jest dzielony na kategorie litery Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-399">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-400">
            <see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest literą; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-400">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-401">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-401">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-402">Ta metoda określa, czy znak na pozycji indeksu określonego w ciągu jest członkiem dowolnej kategorii Unicode literę.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-402">This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</span></span> <span data-ttu-id="6fdc5-403">Litery Unicode są następujące:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-403">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="6fdc5-404">Wielkie litery, np. U + 0041 (LATIN CAPITAL LETTER A) za pośrednictwem U + 005A (LATIN CAPITAL LETTER Z) lub U + 0400 (CYRYLICA litera IE WITH GRAVE) za pośrednictwem U + 042F (CYRYLICA litera YA).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-404">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="6fdc5-405">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-405">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="6fdc5-406">Małe litery, np. U + 0061 (ŁACIŃSKI, MAŁA litera A) za pośrednictwem U + 007A (ŁACIŃSKI małe litery Z), lub U + 03AC (GRECKI małej litery ALFA z AKCENTEM) za pośrednictwem U + 03CE (GRECKI MAŁA litera OMEGA z AKCENTEM).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-406">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="6fdc5-407">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-407">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="6fdc5-408">Tytuł wielkość liter, takich jak U + 01 C 5 (ŁACIŃSKI wielkiej litery D z małej litery Z z odwróconym DASZKIEM) lub U + 1FFC (GRECKI litera OMEGA z PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-408">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="6fdc5-409">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-409">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="6fdc5-410">Modyfikatory, np. U + 02B0 (H małej litery MODYFIKATOR) za pośrednictwem U + 02C 1 (MODYFIKATOR LITERĘ ODWRÓCONE GLOTTAL STOP), lub U + 1D2C (MODYFIKATOR litery A kapitału) za pośrednictwem U + 1 d 61 (MODYFIKATOR CHI małe litery).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-410">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="6fdc5-411">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-411">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="6fdc5-412">Pozostałe litery, np. U + 05 D 0 (ALEF LITERĘ HEBRAJSKI) za pośrednictwem U + 05EA (TAV litery HEBRAJSKI), U + 0621 (ARABSKI HAMZA LITERĄ) za pośrednictwem U + 063A (ARABSKI GHAIN litery), lub U + 4E00 (\<ideogramów CJK, pierwsza >) za pośrednictwem U + 9 FC 3 (\<ideogramów CJK, ostatni >).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-412">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="6fdc5-413">Następujące znaki są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-413">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-414">Poniższy przykład kodu demonstruje <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-414">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-415">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-415">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-416">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-416">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetterOrDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-417">Wskazuje, czy znak Unicode jest dzielony na kategorie się literą lub dziesiętną wartością cyfrową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-417">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-418">Prawidłowe litery i cyfry dziesiętne należą następujące kategorie w <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, lub `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-418">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : char -&gt; bool" Usage="System.char.IsLetterOrDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-419">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-419">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-420">Wskazuje, czy określony znak Unicode jest dzielony na kategorie się literą lub dziesiętną wartością cyfrową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-420">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-421">
            <see langword="true" /> Jeśli <paramref name="c" /> jest literą lub dziesiętną wartością cyfrową; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-421">
              <see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-422">Prawidłowe litery i cyfry dziesiętne należą następujące kategorie w <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, lub `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-422">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-423">Poniższy przykład kodu demonstruje <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-423">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : string * int -&gt; bool" Usage="System.char.IsLetterOrDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-424">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-424">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-425">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-425">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-426">Wskazuje, czy znak w określonej pozycji w określony ciąg jest dzielony na kategorie się literą lub dziesiętną wartością cyfrową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-426">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-427">
            <see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest literą lub dziesiętną wartością cyfrową; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-427">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-428">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-428">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-429">Prawidłowe litery i cyfry dziesiętne należą następujące kategorie w <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, lub `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-429">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-430">Poniższy przykład kodu demonstruje <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-430">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-431">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-431">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-432">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-432">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-433">Wskazuje, czy znak Unicode jest dzielony na kategorie małe litery.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-433">Indicates whether a Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(char c);" />
      <MemberSignature Language="F#" Value="static member IsLower : char -&gt; bool" Usage="System.char.IsLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-434">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-434">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-435">Wskazuje, czy określony znak Unicode jest dzielony na kategorie małe litery.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-435">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-436">
            <see langword="true" /> Jeśli <paramref name="c" /> jest mała litera; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-436">
              <see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-437">Nieprawidłowa małe litery należą do następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-437">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-438">Poniższy przykład kodu demonstruje <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-438">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLower : string * int -&gt; bool" Usage="System.char.IsLower (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-439">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-439">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-440">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-440">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-441">Wskazuje, czy znak w określonej pozycji w określony ciąg jest dzielony na kategorie małe litery.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-441">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-442">
            <see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest mała litera; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-442">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-443">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-443">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-444">Nieprawidłowa małe litery należą do następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-444">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-445">Poniższy przykład kodu demonstruje <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-445">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-446">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-446">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-447">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-447">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLowSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-448">Wskazuje, czy określony <see cref="T:System.Char" /> obiekt jest znak zastępczy niskiego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-448">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : char -&gt; bool" Usage="System.char.IsLowSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-449">Znak do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-449">The character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-450">Wskazuje, czy określony <see cref="T:System.Char" /> obiekt jest znak zastępczy niskiego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-450">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-451">
            <see langword="true" /> Jeśli wartość liczbową <paramref name="c" /> parametru z zakresu od U + DC00 za pośrednictwem U + DFFF; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-451">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-452">Oprócz reprezentowania pojedynczych znaków przy użyciu 16-bitowego kodu znaku, kodowanie UTF-16 pozwala na przedstawianie znaków abstrakcyjnych za pomocą dwóch 16-bitowych kodów znaku, znanych jako para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-452">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="6fdc5-453">Drugi element Ta para jest znak zastępczy niskiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-453">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="6fdc5-454">Jego punkt kodowy należą do zakresu od U + DC00 do U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-454">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="6fdc5-455">Indywidualny znak zastępczy ma nie interpretacji własnych; jest istotny tylko wtedy, gdy jest używany jako część pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-455">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-456">Poniższy przykład kodu demonstruje <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, i <xref:System.Char.IsSurrogatePair%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-456">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : string * int -&gt; bool" Usage="System.char.IsLowSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-457">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-457">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-458">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-458">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-459">Wskazuje, czy <see cref="T:System.Char" /> obiektu w określonej pozycji w ciągu jest znak zastępczy niskiego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-459">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-460">
            <see langword="true" /> Jeśli określony znak w wartości liczbowej <paramref name="s" /> parametru z zakresu od U + DC00 za pośrednictwem U + DFFF; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-460">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-461">`index` Parametr jest liczony od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-461">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="6fdc5-462">Oprócz reprezentowania pojedynczych znaków przy użyciu 16-bitowego kodu znaku, kodowanie UTF-16 pozwala na przedstawianie znaków abstrakcyjnych za pomocą dwóch 16-bitowych kodów znaku, znanych jako para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-462">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="6fdc5-463">Drugi element Ta para jest znak zastępczy niskiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-463">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="6fdc5-464">Jego punkt kodowy należą do zakresu od U + DC00 do U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-464">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="6fdc5-465">Indywidualny znak zastępczy ma nie interpretacji własnych; jest istotny tylko wtedy, gdy jest używany jako część pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-465">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-466">Poniższy przykład kodu demonstruje <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, i <xref:System.Char.IsSurrogatePair%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-466">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-467">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-467">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-468">
            <paramref name="index" /> nie jest pozycją w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-468">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNumber">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-469">Wskazuje, czy znak Unicode jest dzielony na kategorie jako liczby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-469">Indicates whether a Unicode character is categorized as a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(char c);" />
      <MemberSignature Language="F#" Value="static member IsNumber : char -&gt; bool" Usage="System.char.IsNumber c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-470">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-470">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-471">Wskazuje, czy określony znak Unicode jest dzielony na kategorie jako liczby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-471">Indicates whether the specified Unicode character is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-472">
            <see langword="true" /> Jeśli <paramref name="c" /> jest liczbą; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-472">
              <see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-473">Ta metoda określa, czy <xref:System.Char> jest dowolnej kategorii Unicode, liczbowych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-473">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="6fdc5-474">Oprócz cyfr, numery obejmują znaków, ułamki, indeksy dolne, indeksów górnych, rzymskie, łącznik waluty i otoczony liczb.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-474">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="6fdc5-475">Ta metoda różni się znacząco od <xref:System.Char.IsDigit%2A> metody, która określa, czy <xref:System.Char> jest cyfrą podstawa 10.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-475">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6fdc5-476"><xref:System.Char.IsNumber%28System.Char%29> Metoda nie jest przeznaczona do określenia, czy ciąg zawiera znaki numeryczne (na przykład, wywołując metodę dla każdego znaku w ciągu).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-476">The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="6fdc5-477">Aby ustalić, czy ciąg zawiera znaki numeryczne, wywoływanie jednego z przeciążeń `TryParse` — metoda (takie jak <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> lub <xref:System.Double.TryParse%2A?displayProperty=nameWithType> typu całkowitą lub zmiennoprzecinkową.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-477">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="6fdc5-478">Prawidłowe numery są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, lub <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-478">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="6fdc5-479"><xref:System.Char.IsNumber%28System.Char%29> Metoda zakłada, że `c` odnosi się do pojedynczego znaku językowej i sprawdza, czy ten znak reprezentuje liczbę.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-479">The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number.</span></span> <span data-ttu-id="6fdc5-480">Jednak niektóre numery w standardzie Unicode są reprezentowane przez dwa <xref:System.Char> obiekty, które tworzą pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-480">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="6fdc5-481">Na przykład system numeracji Morza Egejskiego składa się z kodów znaku U+10107 do U+10133.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-481">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="6fdc5-482">W poniższym przykładzie użyto <xref:System.Char.ConvertFromUtf32%2A> metodę, aby utworzyć wystąpienie ciąg reprezentujący Morza EGEJSKIEGO jeden numer.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-482">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="6fdc5-483">Jak wynika z w przykładzie pokazano <xref:System.Char.IsNumber%28System.Char%29> metoda zwraca `false` Jeśli jest przekazywana znakiem zastępczym wysokiego poziomu lub znak zastępczy niskiego poziomu tego znaku.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-483">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]
 [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-484">W poniższym przykładzie pokazano <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-484">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsNumber : string * int -&gt; bool" Usage="System.char.IsNumber (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-485">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-485">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-486">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-486">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-487">Wskazuje, czy znak w określonej pozycji w określony ciąg jest dzielony na kategorie jako liczby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-487">Indicates whether the character at the specified position in a specified string is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-488">
            <see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest liczbą; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-488">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-489">Ta metoda określa, czy <xref:System.Char> jest dowolnej kategorii Unicode, liczbowych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-489">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="6fdc5-490">Oprócz cyfr, numery obejmują znaków, ułamki, indeksy dolne, indeksów górnych, rzymskie, łącznik waluty i otoczony liczb.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-490">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="6fdc5-491">Ta metoda różni się znacząco od <xref:System.Char.IsDigit%2A> metody, która określa, czy <xref:System.Char> jest cyfrą podstawa 10.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-491">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
 <span data-ttu-id="6fdc5-492">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-492">Character positions in a string are indexed starting from zero.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6fdc5-493"><xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> Metoda nie jest przeznaczona do określenia, czy ciąg zawiera znaki numeryczne (na przykład, wywołując metodę dla każdego znaku w ciągu).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-493">The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="6fdc5-494">Aby ustalić, czy ciąg zawiera znaki numeryczne, wywoływanie jednego z przeciążeń `TryParse` — metoda (takie jak <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> lub <xref:System.Double.TryParse%2A?displayProperty=nameWithType> typu całkowitą lub zmiennoprzecinkową.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-494">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="6fdc5-495">Prawidłowe numery są elementami członkowskimi <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, lub <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-495">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="6fdc5-496">Jeśli <xref:System.Char> obiektu w położeniu `index` jest pierwszym znakiem para zastępcza prawidłowe <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> Metoda określa, czy para zastępcza formularzy zawierać cyfrę.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-496">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="6fdc5-497">Na przykład system numeracji Morza Egejskiego składa się z kodów znaku U+10107 do U+10133.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-497">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="6fdc5-498">W poniższym przykładzie użyto <xref:System.Char.ConvertFromUtf32%2A> metodę, aby utworzyć wystąpienie ciąg reprezentujący Morza EGEJSKIEGO jeden numer.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-498">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="6fdc5-499">Jak wynika z w przykładzie pokazano <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> metoda zwraca `true` , jeśli został przekazany znakiem zastępczym wysokiego poziomu o jeden liczbę Morza EGEJSKIEGO.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-499">As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="6fdc5-500">Jednakże, jeśli został przekazany znak zastępczy niskiego poziomu, uwzględnia tylko kategorii znak zastępczy niskiego poziomu i zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-500">However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]
 [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-501">W poniższym przykładzie pokazano <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-501">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-502">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-502">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-503">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-503">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPunctuation">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-504">Wskazuje, czy znak Unicode jest dzielony na kategorie jako znak interpunkcyjny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-504">Indicates whether a Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-505">Prawidłowe znaki interpunkcyjne należą następujące kategorie w <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, lub `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-505">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="6fdc5-506">Obejmują one znaków punkty kodowe Unicode, które są wymienione w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-506">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="6fdc5-507">U + 0021 do U + 0023</span><span class="sxs-lookup"><span data-stu-id="6fdc5-507">U+0021 to U+0023</span></span>|<span data-ttu-id="6fdc5-508">U + 060C i D 060 U +</span><span class="sxs-lookup"><span data-stu-id="6fdc5-508">U+060C and U+060D</span></span>|<span data-ttu-id="6fdc5-509">1800 U + do U + 180A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-509">U+1800 to U+180A</span></span>|<span data-ttu-id="6fdc5-510">3014 U + do U + 301F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-510">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="6fdc5-511">U + 0025 do U + 002A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-511">U+0025 to U+002A</span></span>|<span data-ttu-id="6fdc5-512">U+061B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-512">U+061B</span></span>|<span data-ttu-id="6fdc5-513">U + 1944 i U + 1945</span><span class="sxs-lookup"><span data-stu-id="6fdc5-513">U+1944 and U+1945</span></span>|<span data-ttu-id="6fdc5-514">U+3030</span><span class="sxs-lookup"><span data-stu-id="6fdc5-514">U+3030</span></span>|  
|<span data-ttu-id="6fdc5-515">U + 002C do U + 002F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-515">U+002C to U+002F</span></span>|<span data-ttu-id="6fdc5-516">U + 061E i U + 061F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-516">U+061E and U+061F</span></span>|<span data-ttu-id="6fdc5-517">U + 19DE i U + 19DF</span><span class="sxs-lookup"><span data-stu-id="6fdc5-517">U+19DE and U+19DF</span></span>|<span data-ttu-id="6fdc5-518">U+303D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-518">U+303D</span></span>|  
|<span data-ttu-id="6fdc5-519">U + 003a Notebook i U + 003B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-519">U+003A and U+003B</span></span>|<span data-ttu-id="6fdc5-520">U + 066A do U + 066D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-520">U+066A to U+066D</span></span>|<span data-ttu-id="6fdc5-521">U + 1A1E i U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-521">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="6fdc5-522">U+30A0</span><span class="sxs-lookup"><span data-stu-id="6fdc5-522">U+30A0</span></span>|  
|<span data-ttu-id="6fdc5-523">U + 003F i U + 0040</span><span class="sxs-lookup"><span data-stu-id="6fdc5-523">U+003F and U+0040</span></span>|<span data-ttu-id="6fdc5-524">U+06D4</span><span class="sxs-lookup"><span data-stu-id="6fdc5-524">U+06D4</span></span>|<span data-ttu-id="6fdc5-525">U + 1B5A do U + 1B60</span><span class="sxs-lookup"><span data-stu-id="6fdc5-525">U+1B5A to U+1B60</span></span>|<span data-ttu-id="6fdc5-526">U+30FB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-526">U+30FB</span></span>|  
|<span data-ttu-id="6fdc5-527">U + 005B do U + 005D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-527">U+005B to U+005D</span></span>|<span data-ttu-id="6fdc5-528">U + 0700 do U + 070D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-528">U+0700 to U+070D</span></span>|<span data-ttu-id="6fdc5-529">U + 2010 do U + 2027</span><span class="sxs-lookup"><span data-stu-id="6fdc5-529">U+2010 to U+2027</span></span>|<span data-ttu-id="6fdc5-530">U + A874 do U + A877</span><span class="sxs-lookup"><span data-stu-id="6fdc5-530">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="6fdc5-531">U+005F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-531">U+005F</span></span>|<span data-ttu-id="6fdc5-532">U + 07F7 do U + 07F9</span><span class="sxs-lookup"><span data-stu-id="6fdc5-532">U+07F7 to U+07F9</span></span>|<span data-ttu-id="6fdc5-533">2030 U + do U + 2043</span><span class="sxs-lookup"><span data-stu-id="6fdc5-533">U+2030 to U+2043</span></span>|<span data-ttu-id="6fdc5-534">U + FD3E i U + FD3F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-534">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="6fdc5-535">U+007B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-535">U+007B</span></span>|<span data-ttu-id="6fdc5-536">U + 0964 i U + 0965</span><span class="sxs-lookup"><span data-stu-id="6fdc5-536">U+0964 and U+0965</span></span>|<span data-ttu-id="6fdc5-537">U + 2045 do U + 2051</span><span class="sxs-lookup"><span data-stu-id="6fdc5-537">U+2045 to U+2051</span></span>|<span data-ttu-id="6fdc5-538">U + FE10 do U + FE19</span><span class="sxs-lookup"><span data-stu-id="6fdc5-538">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="6fdc5-539">U+007D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-539">U+007D</span></span>|<span data-ttu-id="6fdc5-540">U+0970</span><span class="sxs-lookup"><span data-stu-id="6fdc5-540">U+0970</span></span>|<span data-ttu-id="6fdc5-541">2053 U + do U + 205E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-541">U+2053 to U+205E</span></span>|<span data-ttu-id="6fdc5-542">U + FE30 do U + FE52</span><span class="sxs-lookup"><span data-stu-id="6fdc5-542">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="6fdc5-543">U+00A1</span><span class="sxs-lookup"><span data-stu-id="6fdc5-543">U+00A1</span></span>|<span data-ttu-id="6fdc5-544">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="6fdc5-544">U+0DF4</span></span>|<span data-ttu-id="6fdc5-545">U + 207D i U + 207E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-545">U+207D and  U+207E</span></span>|<span data-ttu-id="6fdc5-546">U + FE54 do U + FE61</span><span class="sxs-lookup"><span data-stu-id="6fdc5-546">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="6fdc5-547">U+00AB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-547">U+00AB</span></span>|<span data-ttu-id="6fdc5-548">U + 0E4F do U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-548">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="6fdc5-549">U + 208D i U + 208E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-549">U+208D and U+208E</span></span>|<span data-ttu-id="6fdc5-550">U+FE63</span><span class="sxs-lookup"><span data-stu-id="6fdc5-550">U+FE63</span></span>|  
|<span data-ttu-id="6fdc5-551">U+00AD</span><span class="sxs-lookup"><span data-stu-id="6fdc5-551">U+00AD</span></span>|<span data-ttu-id="6fdc5-552">U + 0F04 do U + 0F12</span><span class="sxs-lookup"><span data-stu-id="6fdc5-552">U+0F04 to U+0F12</span></span>|<span data-ttu-id="6fdc5-553">U + 2329 i U + 232A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-553">U+2329 and U+232A</span></span>|<span data-ttu-id="6fdc5-554">U+FE68</span><span class="sxs-lookup"><span data-stu-id="6fdc5-554">U+FE68</span></span>|  
|<span data-ttu-id="6fdc5-555">U+00B7</span><span class="sxs-lookup"><span data-stu-id="6fdc5-555">U+00B7</span></span>|<span data-ttu-id="6fdc5-556">U + 0F3A do U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-556">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="6fdc5-557">U + 2768 do U + 2775</span><span class="sxs-lookup"><span data-stu-id="6fdc5-557">U+2768 to U+2775</span></span>|<span data-ttu-id="6fdc5-558">U + FE6A i U + FE6B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-558">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="6fdc5-559">U+00BB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-559">U+00BB</span></span>|<span data-ttu-id="6fdc5-560">U+0F85</span><span class="sxs-lookup"><span data-stu-id="6fdc5-560">U+0F85</span></span>|<span data-ttu-id="6fdc5-561">U + 5 27 c do U + 27 c 6</span><span class="sxs-lookup"><span data-stu-id="6fdc5-561">U+27C5 to U+27C6</span></span>|<span data-ttu-id="6fdc5-562">U + FF01 do U + FF03</span><span class="sxs-lookup"><span data-stu-id="6fdc5-562">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="6fdc5-563">U+00BF</span><span class="sxs-lookup"><span data-stu-id="6fdc5-563">U+00BF</span></span>|<span data-ttu-id="6fdc5-564">U + 0FD0 i U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="6fdc5-564">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="6fdc5-565">U + 27E6 do U + 27EB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-565">U+27E6 to U+27EB</span></span>|<span data-ttu-id="6fdc5-566">U + FF05 do U + FF0A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-566">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="6fdc5-567">U+037E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-567">U+037E</span></span>|<span data-ttu-id="6fdc5-568">104 a U + – U + 104F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-568">U+104A to U+104F</span></span>|<span data-ttu-id="6fdc5-569">U + 2983 do U + 2998</span><span class="sxs-lookup"><span data-stu-id="6fdc5-569">U+2983 to U+2998</span></span>|<span data-ttu-id="6fdc5-570">U + FF0C do U + FF0F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-570">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="6fdc5-571">U+0387</span><span class="sxs-lookup"><span data-stu-id="6fdc5-571">U+0387</span></span>|<span data-ttu-id="6fdc5-572">U+10FB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-572">U+10FB</span></span>|<span data-ttu-id="6fdc5-573">U + 8 29D do U + 29DB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-573">U+29D8 to U+29DB</span></span>|<span data-ttu-id="6fdc5-574">U + FF1A i U + FF1B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-574">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="6fdc5-575">U + 055A do U + 055F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-575">U+055A to U+055F</span></span>|<span data-ttu-id="6fdc5-576">U + 1361 do U + 1368</span><span class="sxs-lookup"><span data-stu-id="6fdc5-576">U+1361 to U+1368</span></span>|<span data-ttu-id="6fdc5-577">U + 29FC i U + 29FD</span><span class="sxs-lookup"><span data-stu-id="6fdc5-577">U+29FC and U+29FD</span></span>|<span data-ttu-id="6fdc5-578">U + FF1F i U + FF20</span><span class="sxs-lookup"><span data-stu-id="6fdc5-578">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="6fdc5-579">U + 0589 i U + 058A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-579">U+0589 and U+058A</span></span>|<span data-ttu-id="6fdc5-580">U + 166D i U + 166E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-580">U+166D and U+166E</span></span>|<span data-ttu-id="6fdc5-581">U + 2CF9 do U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="6fdc5-581">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="6fdc5-582">U + FF3B do U + FF3D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-582">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="6fdc5-583">U+05BE</span><span class="sxs-lookup"><span data-stu-id="6fdc5-583">U+05BE</span></span>|<span data-ttu-id="6fdc5-584">U + 169B i U + 169C</span><span class="sxs-lookup"><span data-stu-id="6fdc5-584">U+169B and U+169C</span></span>|<span data-ttu-id="6fdc5-585">U + 2CFE i U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="6fdc5-585">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="6fdc5-586">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-586">U+FF3F</span></span>|  
|<span data-ttu-id="6fdc5-587">U+05C0</span><span class="sxs-lookup"><span data-stu-id="6fdc5-587">U+05C0</span></span>|<span data-ttu-id="6fdc5-588">U + 16EB do U + 16ED</span><span class="sxs-lookup"><span data-stu-id="6fdc5-588">U+16EB to U+16ED</span></span>|<span data-ttu-id="6fdc5-589">U + 2E00 do U + 2E17</span><span class="sxs-lookup"><span data-stu-id="6fdc5-589">U+2E00 to U+2E17</span></span>|<span data-ttu-id="6fdc5-590">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-590">U+FF5B</span></span>|  
|<span data-ttu-id="6fdc5-591">U+05C3</span><span class="sxs-lookup"><span data-stu-id="6fdc5-591">U+05C3</span></span>|<span data-ttu-id="6fdc5-592">U + 1735 i U + 1736</span><span class="sxs-lookup"><span data-stu-id="6fdc5-592">U+1735 and U+1736</span></span>|<span data-ttu-id="6fdc5-593">U + 2E1C i U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-593">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="6fdc5-594">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-594">U+FF5D</span></span>|  
|<span data-ttu-id="6fdc5-595">U+05C6</span><span class="sxs-lookup"><span data-stu-id="6fdc5-595">U+05C6</span></span>|<span data-ttu-id="6fdc5-596">U + 4 17D do U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="6fdc5-596">U+17D4 to U+17D6</span></span>|<span data-ttu-id="6fdc5-597">3001 U + do U + 3003</span><span class="sxs-lookup"><span data-stu-id="6fdc5-597">U+3001 to U+3003</span></span>|<span data-ttu-id="6fdc5-598">U + FF5F do U + FF65</span><span class="sxs-lookup"><span data-stu-id="6fdc5-598">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="6fdc5-599">U + 05F3 i U + 05F4</span><span class="sxs-lookup"><span data-stu-id="6fdc5-599">U+05F3 and U+05F4</span></span>|<span data-ttu-id="6fdc5-600">U + 8 17D do U + 17DA</span><span class="sxs-lookup"><span data-stu-id="6fdc5-600">U+17D8 to U+17DA</span></span>|<span data-ttu-id="6fdc5-601">3008 U + do U + 3011</span><span class="sxs-lookup"><span data-stu-id="6fdc5-601">U+3008 to U+3011</span></span>||  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(char c);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : char -&gt; bool" Usage="System.char.IsPunctuation c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-602">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-602">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-603">Wskazuje, czy określony znak Unicode jest dzielony na kategorie jako znak interpunkcyjny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-603">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-604">
            <see langword="true" /> Jeśli <paramref name="c" /> jest znak interpunkcyjny; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-604">
              <see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-605">Prawidłowe znaki interpunkcyjne należą następujące kategorie w <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, lub `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-605">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="6fdc5-606">Obejmują one znaków punkty kodowe Unicode, które są wymienione w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-606">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="6fdc5-607">U + 0021 do U + 0023</span><span class="sxs-lookup"><span data-stu-id="6fdc5-607">U+0021 to U+0023</span></span>|<span data-ttu-id="6fdc5-608">U + 060C i D 060 U +</span><span class="sxs-lookup"><span data-stu-id="6fdc5-608">U+060C and U+060D</span></span>|<span data-ttu-id="6fdc5-609">1800 U + do U + 180A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-609">U+1800 to U+180A</span></span>|<span data-ttu-id="6fdc5-610">3014 U + do U + 301F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-610">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="6fdc5-611">U + 0025 do U + 002A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-611">U+0025 to U+002A</span></span>|<span data-ttu-id="6fdc5-612">U+061B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-612">U+061B</span></span>|<span data-ttu-id="6fdc5-613">U + 1944 i U + 1945</span><span class="sxs-lookup"><span data-stu-id="6fdc5-613">U+1944 and U+1945</span></span>|<span data-ttu-id="6fdc5-614">U+3030</span><span class="sxs-lookup"><span data-stu-id="6fdc5-614">U+3030</span></span>|  
|<span data-ttu-id="6fdc5-615">U + 002C do U + 002F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-615">U+002C to U+002F</span></span>|<span data-ttu-id="6fdc5-616">U + 061E i U + 061F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-616">U+061E and U+061F</span></span>|<span data-ttu-id="6fdc5-617">U + 19DE i U + 19DF</span><span class="sxs-lookup"><span data-stu-id="6fdc5-617">U+19DE and U+19DF</span></span>|<span data-ttu-id="6fdc5-618">U+303D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-618">U+303D</span></span>|  
|<span data-ttu-id="6fdc5-619">U + 003a Notebook i U + 003B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-619">U+003A and U+003B</span></span>|<span data-ttu-id="6fdc5-620">U + 066A do U + 066D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-620">U+066A to U+066D</span></span>|<span data-ttu-id="6fdc5-621">U + 1A1E i U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-621">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="6fdc5-622">U+30A0</span><span class="sxs-lookup"><span data-stu-id="6fdc5-622">U+30A0</span></span>|  
|<span data-ttu-id="6fdc5-623">U + 003F i U + 0040</span><span class="sxs-lookup"><span data-stu-id="6fdc5-623">U+003F and U+0040</span></span>|<span data-ttu-id="6fdc5-624">U+06D4</span><span class="sxs-lookup"><span data-stu-id="6fdc5-624">U+06D4</span></span>|<span data-ttu-id="6fdc5-625">U + 1B5A do U + 1B60</span><span class="sxs-lookup"><span data-stu-id="6fdc5-625">U+1B5A to U+1B60</span></span>|<span data-ttu-id="6fdc5-626">U+30FB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-626">U+30FB</span></span>|  
|<span data-ttu-id="6fdc5-627">U + 005B do U + 005D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-627">U+005B to U+005D</span></span>|<span data-ttu-id="6fdc5-628">U + 0700 do U + 070D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-628">U+0700 to U+070D</span></span>|<span data-ttu-id="6fdc5-629">U + 2010 do U + 2027</span><span class="sxs-lookup"><span data-stu-id="6fdc5-629">U+2010 to U+2027</span></span>|<span data-ttu-id="6fdc5-630">U + A874 do U + A877</span><span class="sxs-lookup"><span data-stu-id="6fdc5-630">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="6fdc5-631">U+005F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-631">U+005F</span></span>|<span data-ttu-id="6fdc5-632">U + 07F7 do U + 07F9</span><span class="sxs-lookup"><span data-stu-id="6fdc5-632">U+07F7 to U+07F9</span></span>|<span data-ttu-id="6fdc5-633">2030 U + do U + 2043</span><span class="sxs-lookup"><span data-stu-id="6fdc5-633">U+2030 to U+2043</span></span>|<span data-ttu-id="6fdc5-634">U + FD3E i U + FD3F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-634">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="6fdc5-635">U+007B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-635">U+007B</span></span>|<span data-ttu-id="6fdc5-636">U + 0964 i U + 0965</span><span class="sxs-lookup"><span data-stu-id="6fdc5-636">U+0964 and U+0965</span></span>|<span data-ttu-id="6fdc5-637">U + 2045 do U + 2051</span><span class="sxs-lookup"><span data-stu-id="6fdc5-637">U+2045 to U+2051</span></span>|<span data-ttu-id="6fdc5-638">U + FE10 do U + FE19</span><span class="sxs-lookup"><span data-stu-id="6fdc5-638">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="6fdc5-639">U+007D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-639">U+007D</span></span>|<span data-ttu-id="6fdc5-640">U+0970</span><span class="sxs-lookup"><span data-stu-id="6fdc5-640">U+0970</span></span>|<span data-ttu-id="6fdc5-641">2053 U + do U + 205E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-641">U+2053 to U+205E</span></span>|<span data-ttu-id="6fdc5-642">U + FE30 do U + FE52</span><span class="sxs-lookup"><span data-stu-id="6fdc5-642">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="6fdc5-643">U+00A1</span><span class="sxs-lookup"><span data-stu-id="6fdc5-643">U+00A1</span></span>|<span data-ttu-id="6fdc5-644">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="6fdc5-644">U+0DF4</span></span>|<span data-ttu-id="6fdc5-645">U + 207D i U + 207E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-645">U+207D and  U+207E</span></span>|<span data-ttu-id="6fdc5-646">U + FE54 do U + FE61</span><span class="sxs-lookup"><span data-stu-id="6fdc5-646">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="6fdc5-647">U+00AB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-647">U+00AB</span></span>|<span data-ttu-id="6fdc5-648">U + 0E4F do U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-648">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="6fdc5-649">U + 208D i U + 208E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-649">U+208D and U+208E</span></span>|<span data-ttu-id="6fdc5-650">U+FE63</span><span class="sxs-lookup"><span data-stu-id="6fdc5-650">U+FE63</span></span>|  
|<span data-ttu-id="6fdc5-651">U+00AD</span><span class="sxs-lookup"><span data-stu-id="6fdc5-651">U+00AD</span></span>|<span data-ttu-id="6fdc5-652">U + 0F04 do U + 0F12</span><span class="sxs-lookup"><span data-stu-id="6fdc5-652">U+0F04 to U+0F12</span></span>|<span data-ttu-id="6fdc5-653">U + 2329 i U + 232A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-653">U+2329 and U+232A</span></span>|<span data-ttu-id="6fdc5-654">U+FE68</span><span class="sxs-lookup"><span data-stu-id="6fdc5-654">U+FE68</span></span>|  
|<span data-ttu-id="6fdc5-655">U+00B7</span><span class="sxs-lookup"><span data-stu-id="6fdc5-655">U+00B7</span></span>|<span data-ttu-id="6fdc5-656">U + 0F3A do U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-656">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="6fdc5-657">U + 2768 do U + 2775</span><span class="sxs-lookup"><span data-stu-id="6fdc5-657">U+2768 to U+2775</span></span>|<span data-ttu-id="6fdc5-658">U + FE6A i U + FE6B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-658">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="6fdc5-659">U+00BB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-659">U+00BB</span></span>|<span data-ttu-id="6fdc5-660">U+0F85</span><span class="sxs-lookup"><span data-stu-id="6fdc5-660">U+0F85</span></span>|<span data-ttu-id="6fdc5-661">U + 5 27 c do U + 27 c 6</span><span class="sxs-lookup"><span data-stu-id="6fdc5-661">U+27C5 to U+27C6</span></span>|<span data-ttu-id="6fdc5-662">U + FF01 do U + FF03</span><span class="sxs-lookup"><span data-stu-id="6fdc5-662">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="6fdc5-663">U+00BF</span><span class="sxs-lookup"><span data-stu-id="6fdc5-663">U+00BF</span></span>|<span data-ttu-id="6fdc5-664">U + 0FD0 i U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="6fdc5-664">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="6fdc5-665">U + 27E6 do U + 27EB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-665">U+27E6 to U+27EB</span></span>|<span data-ttu-id="6fdc5-666">U + FF05 do U + FF0A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-666">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="6fdc5-667">U+037E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-667">U+037E</span></span>|<span data-ttu-id="6fdc5-668">104 a U + – U + 104F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-668">U+104A to U+104F</span></span>|<span data-ttu-id="6fdc5-669">U + 2983 do U + 2998</span><span class="sxs-lookup"><span data-stu-id="6fdc5-669">U+2983 to U+2998</span></span>|<span data-ttu-id="6fdc5-670">U + FF0C do U + FF0F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-670">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="6fdc5-671">U+0387</span><span class="sxs-lookup"><span data-stu-id="6fdc5-671">U+0387</span></span>|<span data-ttu-id="6fdc5-672">U+10FB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-672">U+10FB</span></span>|<span data-ttu-id="6fdc5-673">U + 8 29D do U + 29DB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-673">U+29D8 to U+29DB</span></span>|<span data-ttu-id="6fdc5-674">U + FF1A i U + FF1B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-674">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="6fdc5-675">U + 055A do U + 055F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-675">U+055A to U+055F</span></span>|<span data-ttu-id="6fdc5-676">U + 1361 do U + 1368</span><span class="sxs-lookup"><span data-stu-id="6fdc5-676">U+1361 to U+1368</span></span>|<span data-ttu-id="6fdc5-677">U + 29FC i U + 29FD</span><span class="sxs-lookup"><span data-stu-id="6fdc5-677">U+29FC and U+29FD</span></span>|<span data-ttu-id="6fdc5-678">U + FF1F i U + FF20</span><span class="sxs-lookup"><span data-stu-id="6fdc5-678">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="6fdc5-679">U + 0589 i U + 058A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-679">U+0589 and U+058A</span></span>|<span data-ttu-id="6fdc5-680">U + 166D i U + 166E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-680">U+166D and U+166E</span></span>|<span data-ttu-id="6fdc5-681">U + 2CF9 do U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="6fdc5-681">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="6fdc5-682">U + FF3B do U + FF3D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-682">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="6fdc5-683">U+05BE</span><span class="sxs-lookup"><span data-stu-id="6fdc5-683">U+05BE</span></span>|<span data-ttu-id="6fdc5-684">U + 169B i U + 169C</span><span class="sxs-lookup"><span data-stu-id="6fdc5-684">U+169B and U+169C</span></span>|<span data-ttu-id="6fdc5-685">U + 2CFE i U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="6fdc5-685">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="6fdc5-686">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-686">U+FF3F</span></span>|  
|<span data-ttu-id="6fdc5-687">U+05C0</span><span class="sxs-lookup"><span data-stu-id="6fdc5-687">U+05C0</span></span>|<span data-ttu-id="6fdc5-688">U + 16EB do U + 16ED</span><span class="sxs-lookup"><span data-stu-id="6fdc5-688">U+16EB to U+16ED</span></span>|<span data-ttu-id="6fdc5-689">U + 2E00 do U + 2E17</span><span class="sxs-lookup"><span data-stu-id="6fdc5-689">U+2E00 to U+2E17</span></span>|<span data-ttu-id="6fdc5-690">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-690">U+FF5B</span></span>|  
|<span data-ttu-id="6fdc5-691">U+05C3</span><span class="sxs-lookup"><span data-stu-id="6fdc5-691">U+05C3</span></span>|<span data-ttu-id="6fdc5-692">U + 1735 i U + 1736</span><span class="sxs-lookup"><span data-stu-id="6fdc5-692">U+1735 and U+1736</span></span>|<span data-ttu-id="6fdc5-693">U + 2E1C i U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-693">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="6fdc5-694">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-694">U+FF5D</span></span>|  
|<span data-ttu-id="6fdc5-695">U+05C6</span><span class="sxs-lookup"><span data-stu-id="6fdc5-695">U+05C6</span></span>|<span data-ttu-id="6fdc5-696">U + 4 17D do U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="6fdc5-696">U+17D4 to U+17D6</span></span>|<span data-ttu-id="6fdc5-697">3001 U + do U + 3003</span><span class="sxs-lookup"><span data-stu-id="6fdc5-697">U+3001 to U+3003</span></span>|<span data-ttu-id="6fdc5-698">U + FF5F do U + FF65</span><span class="sxs-lookup"><span data-stu-id="6fdc5-698">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="6fdc5-699">U + 05F3 i U + 05F4</span><span class="sxs-lookup"><span data-stu-id="6fdc5-699">U+05F3 and U+05F4</span></span>|<span data-ttu-id="6fdc5-700">U + 8 17D do U + 17DA</span><span class="sxs-lookup"><span data-stu-id="6fdc5-700">U+17D8 to U+17DA</span></span>|<span data-ttu-id="6fdc5-701">3008 U + do U + 3011</span><span class="sxs-lookup"><span data-stu-id="6fdc5-701">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-702">Poniższy przykład kodu demonstruje <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-702">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : string * int -&gt; bool" Usage="System.char.IsPunctuation (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-703">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-703">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-704">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-704">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-705">Wskazuje, czy znak w określonej pozycji w określony ciąg jest dzielony na kategorie jako znak interpunkcyjny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-705">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-706">
            <see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest znak interpunkcyjny; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-706">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-707">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-707">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-708">Prawidłowe znaki interpunkcyjne należą następujące kategorie w <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, lub `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-708">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="6fdc5-709">Obejmują one znaków punkty kodowe Unicode, które są wymienione w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-709">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="6fdc5-710">U + 0021 do U + 0023</span><span class="sxs-lookup"><span data-stu-id="6fdc5-710">U+0021 to U+0023</span></span>|<span data-ttu-id="6fdc5-711">U + 060C i D 060 U +</span><span class="sxs-lookup"><span data-stu-id="6fdc5-711">U+060C and U+060D</span></span>|<span data-ttu-id="6fdc5-712">1800 U + do U + 180A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-712">U+1800 to U+180A</span></span>|<span data-ttu-id="6fdc5-713">3014 U + do U + 301F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-713">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="6fdc5-714">U + 0025 do U + 002A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-714">U+0025 to U+002A</span></span>|<span data-ttu-id="6fdc5-715">U+061B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-715">U+061B</span></span>|<span data-ttu-id="6fdc5-716">U + 1944 i U + 1945</span><span class="sxs-lookup"><span data-stu-id="6fdc5-716">U+1944 and U+1945</span></span>|<span data-ttu-id="6fdc5-717">U+3030</span><span class="sxs-lookup"><span data-stu-id="6fdc5-717">U+3030</span></span>|  
|<span data-ttu-id="6fdc5-718">U + 002C do U + 002F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-718">U+002C to U+002F</span></span>|<span data-ttu-id="6fdc5-719">U + 061E i U + 061F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-719">U+061E and U+061F</span></span>|<span data-ttu-id="6fdc5-720">U + 19DE i U + 19DF</span><span class="sxs-lookup"><span data-stu-id="6fdc5-720">U+19DE and U+19DF</span></span>|<span data-ttu-id="6fdc5-721">U+303D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-721">U+303D</span></span>|  
|<span data-ttu-id="6fdc5-722">U + 003a Notebook i U + 003B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-722">U+003A and U+003B</span></span>|<span data-ttu-id="6fdc5-723">U + 066A do U + 066D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-723">U+066A to U+066D</span></span>|<span data-ttu-id="6fdc5-724">U + 1A1E i U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-724">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="6fdc5-725">U+30A0</span><span class="sxs-lookup"><span data-stu-id="6fdc5-725">U+30A0</span></span>|  
|<span data-ttu-id="6fdc5-726">U + 003F i U + 0040</span><span class="sxs-lookup"><span data-stu-id="6fdc5-726">U+003F and U+0040</span></span>|<span data-ttu-id="6fdc5-727">U+06D4</span><span class="sxs-lookup"><span data-stu-id="6fdc5-727">U+06D4</span></span>|<span data-ttu-id="6fdc5-728">U + 1B5A do U + 1B60</span><span class="sxs-lookup"><span data-stu-id="6fdc5-728">U+1B5A to U+1B60</span></span>|<span data-ttu-id="6fdc5-729">U+30FB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-729">U+30FB</span></span>|  
|<span data-ttu-id="6fdc5-730">U + 005B do U + 005D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-730">U+005B to U+005D</span></span>|<span data-ttu-id="6fdc5-731">U + 0700 do U + 070D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-731">U+0700 to U+070D</span></span>|<span data-ttu-id="6fdc5-732">U + 2010 do U + 2027</span><span class="sxs-lookup"><span data-stu-id="6fdc5-732">U+2010 to U+2027</span></span>|<span data-ttu-id="6fdc5-733">U + A874 do U + A877</span><span class="sxs-lookup"><span data-stu-id="6fdc5-733">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="6fdc5-734">U+005F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-734">U+005F</span></span>|<span data-ttu-id="6fdc5-735">U + 07F7 do U + 07F9</span><span class="sxs-lookup"><span data-stu-id="6fdc5-735">U+07F7 to U+07F9</span></span>|<span data-ttu-id="6fdc5-736">2030 U + do U + 2043</span><span class="sxs-lookup"><span data-stu-id="6fdc5-736">U+2030 to U+2043</span></span>|<span data-ttu-id="6fdc5-737">U + FD3E i U + FD3F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-737">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="6fdc5-738">U+007B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-738">U+007B</span></span>|<span data-ttu-id="6fdc5-739">U + 0964 i U + 0965</span><span class="sxs-lookup"><span data-stu-id="6fdc5-739">U+0964 and U+0965</span></span>|<span data-ttu-id="6fdc5-740">U + 2045 do U + 2051</span><span class="sxs-lookup"><span data-stu-id="6fdc5-740">U+2045 to U+2051</span></span>|<span data-ttu-id="6fdc5-741">U + FE10 do U + FE19</span><span class="sxs-lookup"><span data-stu-id="6fdc5-741">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="6fdc5-742">U+007D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-742">U+007D</span></span>|<span data-ttu-id="6fdc5-743">U+0970</span><span class="sxs-lookup"><span data-stu-id="6fdc5-743">U+0970</span></span>|<span data-ttu-id="6fdc5-744">2053 U + do U + 205E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-744">U+2053 to U+205E</span></span>|<span data-ttu-id="6fdc5-745">U + FE30 do U + FE52</span><span class="sxs-lookup"><span data-stu-id="6fdc5-745">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="6fdc5-746">U+00A1</span><span class="sxs-lookup"><span data-stu-id="6fdc5-746">U+00A1</span></span>|<span data-ttu-id="6fdc5-747">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="6fdc5-747">U+0DF4</span></span>|<span data-ttu-id="6fdc5-748">U + 207D i U + 207E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-748">U+207D and  U+207E</span></span>|<span data-ttu-id="6fdc5-749">U + FE54 do U + FE61</span><span class="sxs-lookup"><span data-stu-id="6fdc5-749">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="6fdc5-750">U+00AB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-750">U+00AB</span></span>|<span data-ttu-id="6fdc5-751">U + 0E4F do U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-751">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="6fdc5-752">U + 208D i U + 208E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-752">U+208D and U+208E</span></span>|<span data-ttu-id="6fdc5-753">U+FE63</span><span class="sxs-lookup"><span data-stu-id="6fdc5-753">U+FE63</span></span>|  
|<span data-ttu-id="6fdc5-754">U+00AD</span><span class="sxs-lookup"><span data-stu-id="6fdc5-754">U+00AD</span></span>|<span data-ttu-id="6fdc5-755">U + 0F04 do U + 0F12</span><span class="sxs-lookup"><span data-stu-id="6fdc5-755">U+0F04 to U+0F12</span></span>|<span data-ttu-id="6fdc5-756">U + 2329 i U + 232A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-756">U+2329 and U+232A</span></span>|<span data-ttu-id="6fdc5-757">U+FE68</span><span class="sxs-lookup"><span data-stu-id="6fdc5-757">U+FE68</span></span>|  
|<span data-ttu-id="6fdc5-758">U+00B7</span><span class="sxs-lookup"><span data-stu-id="6fdc5-758">U+00B7</span></span>|<span data-ttu-id="6fdc5-759">U + 0F3A do U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-759">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="6fdc5-760">U + 2768 do U + 2775</span><span class="sxs-lookup"><span data-stu-id="6fdc5-760">U+2768 to U+2775</span></span>|<span data-ttu-id="6fdc5-761">U + FE6A i U + FE6B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-761">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="6fdc5-762">U+00BB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-762">U+00BB</span></span>|<span data-ttu-id="6fdc5-763">U+0F85</span><span class="sxs-lookup"><span data-stu-id="6fdc5-763">U+0F85</span></span>|<span data-ttu-id="6fdc5-764">U + 5 27 c do U + 27 c 6</span><span class="sxs-lookup"><span data-stu-id="6fdc5-764">U+27C5 to U+27C6</span></span>|<span data-ttu-id="6fdc5-765">U + FF01 do U + FF03</span><span class="sxs-lookup"><span data-stu-id="6fdc5-765">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="6fdc5-766">U+00BF</span><span class="sxs-lookup"><span data-stu-id="6fdc5-766">U+00BF</span></span>|<span data-ttu-id="6fdc5-767">U + 0FD0 i U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="6fdc5-767">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="6fdc5-768">U + 27E6 do U + 27EB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-768">U+27E6 to U+27EB</span></span>|<span data-ttu-id="6fdc5-769">U + FF05 do U + FF0A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-769">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="6fdc5-770">U+037E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-770">U+037E</span></span>|<span data-ttu-id="6fdc5-771">104 a U + – U + 104F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-771">U+104A to U+104F</span></span>|<span data-ttu-id="6fdc5-772">U + 2983 do U + 2998</span><span class="sxs-lookup"><span data-stu-id="6fdc5-772">U+2983 to U+2998</span></span>|<span data-ttu-id="6fdc5-773">U + FF0C do U + FF0F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-773">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="6fdc5-774">U+0387</span><span class="sxs-lookup"><span data-stu-id="6fdc5-774">U+0387</span></span>|<span data-ttu-id="6fdc5-775">U+10FB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-775">U+10FB</span></span>|<span data-ttu-id="6fdc5-776">U + 8 29D do U + 29DB</span><span class="sxs-lookup"><span data-stu-id="6fdc5-776">U+29D8 to U+29DB</span></span>|<span data-ttu-id="6fdc5-777">U + FF1A i U + FF1B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-777">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="6fdc5-778">U + 055A do U + 055F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-778">U+055A to U+055F</span></span>|<span data-ttu-id="6fdc5-779">U + 1361 do U + 1368</span><span class="sxs-lookup"><span data-stu-id="6fdc5-779">U+1361 to U+1368</span></span>|<span data-ttu-id="6fdc5-780">U + 29FC i U + 29FD</span><span class="sxs-lookup"><span data-stu-id="6fdc5-780">U+29FC and U+29FD</span></span>|<span data-ttu-id="6fdc5-781">U + FF1F i U + FF20</span><span class="sxs-lookup"><span data-stu-id="6fdc5-781">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="6fdc5-782">U + 0589 i U + 058A</span><span class="sxs-lookup"><span data-stu-id="6fdc5-782">U+0589 and U+058A</span></span>|<span data-ttu-id="6fdc5-783">U + 166D i U + 166E</span><span class="sxs-lookup"><span data-stu-id="6fdc5-783">U+166D and U+166E</span></span>|<span data-ttu-id="6fdc5-784">U + 2CF9 do U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="6fdc5-784">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="6fdc5-785">U + FF3B do U + FF3D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-785">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="6fdc5-786">U+05BE</span><span class="sxs-lookup"><span data-stu-id="6fdc5-786">U+05BE</span></span>|<span data-ttu-id="6fdc5-787">U + 169B i U + 169C</span><span class="sxs-lookup"><span data-stu-id="6fdc5-787">U+169B and U+169C</span></span>|<span data-ttu-id="6fdc5-788">U + 2CFE i U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="6fdc5-788">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="6fdc5-789">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="6fdc5-789">U+FF3F</span></span>|  
|<span data-ttu-id="6fdc5-790">U+05C0</span><span class="sxs-lookup"><span data-stu-id="6fdc5-790">U+05C0</span></span>|<span data-ttu-id="6fdc5-791">U + 16EB do U + 16ED</span><span class="sxs-lookup"><span data-stu-id="6fdc5-791">U+16EB to U+16ED</span></span>|<span data-ttu-id="6fdc5-792">U + 2E00 do U + 2E17</span><span class="sxs-lookup"><span data-stu-id="6fdc5-792">U+2E00 to U+2E17</span></span>|<span data-ttu-id="6fdc5-793">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="6fdc5-793">U+FF5B</span></span>|  
|<span data-ttu-id="6fdc5-794">U+05C3</span><span class="sxs-lookup"><span data-stu-id="6fdc5-794">U+05C3</span></span>|<span data-ttu-id="6fdc5-795">U + 1735 i U + 1736</span><span class="sxs-lookup"><span data-stu-id="6fdc5-795">U+1735 and U+1736</span></span>|<span data-ttu-id="6fdc5-796">U + 2E1C i U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-796">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="6fdc5-797">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="6fdc5-797">U+FF5D</span></span>|  
|<span data-ttu-id="6fdc5-798">U+05C6</span><span class="sxs-lookup"><span data-stu-id="6fdc5-798">U+05C6</span></span>|<span data-ttu-id="6fdc5-799">U + 4 17D do U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="6fdc5-799">U+17D4 to U+17D6</span></span>|<span data-ttu-id="6fdc5-800">3001 U + do U + 3003</span><span class="sxs-lookup"><span data-stu-id="6fdc5-800">U+3001 to U+3003</span></span>|<span data-ttu-id="6fdc5-801">U + FF5F do U + FF65</span><span class="sxs-lookup"><span data-stu-id="6fdc5-801">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="6fdc5-802">U + 05F3 i U + 05F4</span><span class="sxs-lookup"><span data-stu-id="6fdc5-802">U+05F3 and U+05F4</span></span>|<span data-ttu-id="6fdc5-803">U + 8 17D do U + 17DA</span><span class="sxs-lookup"><span data-stu-id="6fdc5-803">U+17D8 to U+17DA</span></span>|<span data-ttu-id="6fdc5-804">3008 U + do U + 3011</span><span class="sxs-lookup"><span data-stu-id="6fdc5-804">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-805">Poniższy przykład kodu demonstruje <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-805">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-806">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-806">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-807">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-807">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSeparator">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-808">Wskazuje, czy znak Unicode jest dzielony na kategorie jako znak separatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-808">Indicates whether a Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-809">W standardzie Unicode rozpoznaje trzy podkategorie separatorów:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-809">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="6fdc5-810">Miejsce separatora ( <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> kategorii), który zawiera znaki, takie jak \u0020.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-810">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="6fdc5-811">Separatory wierszy ( <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> kategorii), która obejmuje \u2028.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-811">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="6fdc5-812">Akapitu separatorów ( <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> kategorii), która obejmuje \u2029.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-812">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fdc5-813">Unicode standard klasyfikuje \u000A znaków (LF), \u000C (FF) i \u000D (CR) jako znaki kontrolne (elementy członkowskie <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> kategorii), a nie jako znaki separatora.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-813">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(char c);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : char -&gt; bool" Usage="System.char.IsSeparator c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-814">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-814">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-815">Wskazuje, czy określony znak Unicode jest dzielony na kategorie jako znak separatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-815">Indicates whether the specified Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-816">
            <see langword="true" /> Jeśli <paramref name="c" /> jest separatorem znaku; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-816">
              <see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-817">W standardzie Unicode rozpoznaje trzy podkategorie separatorów:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-817">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="6fdc5-818">Miejsce separatora ( <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> kategorii), który zawiera znaki, takie jak \u0020.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-818">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="6fdc5-819">Separatory wierszy ( <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> kategorii), która obejmuje \u2028.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-819">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="6fdc5-820">Akapitu separatorów ( <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> kategorii), która obejmuje \u2029.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-820">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fdc5-821">Unicode standard klasyfikuje \u000A znaków (LF), \u000C (FF) i \u000D (CR) jako znaki kontrolne (elementy członkowskie <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> kategorii), a nie jako znaki separatora.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-821">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-822">Na poniższych listach przykład <xref:System.Char> obiektów, które są klasyfikowane jako znaki separatora.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-822">The following example lists the <xref:System.Char> objects that are classified as separator characters.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]
 [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]
 [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : string * int -&gt; bool" Usage="System.char.IsSeparator (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-823">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-823">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-824">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-824">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-825">Wskazuje, czy znak w określonej pozycji w określony ciąg jest dzielony na kategorie jako znak separatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-825">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-826">
            <see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest separatorem znaku; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-826">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-827">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-827">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-828">W standardzie Unicode rozpoznaje trzy podkategorie separatorów:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-828">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="6fdc5-829">Miejsce separatora ( <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> kategorii), który zawiera znaki, takie jak \u0020.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-829">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="6fdc5-830">Separatory wierszy ( <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> kategorii), która obejmuje \u2028.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-830">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="6fdc5-831">Akapitu separatorów ( <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> kategorii), która obejmuje \u2029.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-831">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fdc5-832">Unicode standard klasyfikuje \u000A znaków (LF), \u000C (FF) i \u000D (CR) jako znaki kontrolne (elementy członkowskie <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> kategorii), a nie jako znaki separatora.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-832">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-833">W poniższym przykładzie pokazano <xref:System.Char.IsSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-833">The following example demonstrates <xref:System.Char.IsSeparator%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]
 [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]
 [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-834">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-834">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-835">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-835">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-836">Wskazuje, czy znak ma jednostki kodu zastępczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-836">Indicates whether a character has a surrogate code unit.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : char -&gt; bool" Usage="System.char.IsSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-837">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-837">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-838">Wskazuje, czy określony znak ma jednostki kodu zastępczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-838">Indicates whether the specified character has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-839">
            <see langword="true" /> Jeśli <paramref name="c" /> jest znakiem zastępczym wysokiego poziomu lub dwuskładnikowego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-839">
              <see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-840">Zastępczy jest <xref:System.Char> obiektu o jednostkę kodu UTF-16 z zakresu od U + D800 do U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-840">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="6fdc5-841">Każdy znak w ramach jednostki kodu, w tym zakresie, o których należy <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-841">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="6fdc5-842">Jednostka kodu indywidualny znak zastępczy ma nie interpretacji własnych, ale ma znaczenie tylko wtedy, gdy jest używana jako część pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-842">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="6fdc5-843">Aby uzyskać więcej informacji dotyczących par zastępczych, zobacz Unicode Standard na [strony głównej Unicode](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-843">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-844">W poniższym przykładzie pokazano <xref:System.Char.IsSurrogate%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-844">The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : string * int -&gt; bool" Usage="System.char.IsSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-845">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-845">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-846">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-846">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-847">Wskazuje, czy znak w określonej pozycji w określonym ciągu ma jednostki kodu zastępczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-847">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-848">
            <see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest znakiem zastępczym wysokiego poziomu lub dwuskładnikowego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-848">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-849">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-849">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-850">Zastępczy jest <xref:System.Char> obiektu o jednostkę kodu UTF-16 z zakresu od U + D800 do U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-850">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="6fdc5-851">Każdy znak w ramach jednostki kodu, w tym zakresie, o których należy <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> kategorii.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-851">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="6fdc5-852">Jednostka kodu indywidualny znak zastępczy ma nie interpretacji własnych, ale ma znaczenie tylko wtedy, gdy jest używana jako część pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-852">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="6fdc5-853">Aby uzyskać więcej informacji dotyczących par zastępczych, zobacz Unicode Standard na [strony głównej Unicode](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-853">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-854">Poniższy przykład kodu demonstruje <xref:System.Char.IsSurrogate%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-854">The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-855">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-855">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-856">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-856">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogatePair">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-857">Wskazuje, czy dwa określone <see cref="T:System.Char" /> obiekty tworzą pary zastępczej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-857">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (highSurrogate As Char, lowSurrogate As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : char * char -&gt; bool" Usage="System.char.IsSurrogatePair (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="6fdc5-858">Znak do oceny jako znakiem zastępczym wysokiego poziomu para zastępcza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-858">The character to evaluate as the high surrogate of a surrogate pair.</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="6fdc5-859">Znak do oceny jako znak zastępczy niskiego poziomu para zastępcza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-859">The character to evaluate as the low surrogate of a surrogate pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-860">Wskazuje, czy dwa określone <see cref="T:System.Char" /> obiekty tworzą pary zastępczej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-860">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-861">
            <see langword="true" /> Jeśli wartość liczbową <paramref name="highSurrogate" /> parametru z zakresu od U + D800 za pośrednictwem U + DBFF i wartości liczbowej <paramref name="lowSurrogate" /> parametru z zakresu od U + DC00 za pośrednictwem U + DFFF; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-861">
              <see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-862">Zazwyczaj pojedynczy znak jest reprezentowany przez pojedynczą jednostkę kodu Unicode 16-bitowych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-862">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="6fdc5-863">Kodowanie UTF-16 obsługuje również par zastępczych, umożliwiających abstrakcyjne pojedynczy znak może być reprezentowana przez dwie jednostki 16-bitowego kodu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-863">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="6fdc5-864">Pierwszy jednostki kodu, którego wartość może należeć do zakresu od U + D800 do U + DBFF, jest znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-864">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="6fdc5-865">Drugi jednostki kodu, którego wartość może należeć do zakresu od U + DC00 do U + DFFF, jest znak zastępczy niskiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-865">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="6fdc5-866">Punkty kodowe indywidualny znak zastępczy ma nie interpretacji własnych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-866">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="6fdc5-867">Aby uzyskać więcej informacji na temat surogaty i Unicode Standard, zobacz [strony głównej Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-867">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-868">Poniższy przykład kodu demonstruje <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, i <xref:System.Char.IsSurrogatePair%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-868">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : string * int -&gt; bool" Usage="System.char.IsSurrogatePair (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-869">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-869">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-870">Pozycja początkowa pary znaków do oceny, w ramach <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-870">The starting position of the pair of characters to evaluate within <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-871">Wskazuje, czy dwa sąsiadujące <see cref="T:System.Char" /> obiekty na określonej pozycji w ciągu tworzą pary zastępczej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-871">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-872">
            <see langword="true" /> Jeśli <paramref name="s" /> parametr zawiera znaki przylegające w pozycjach <paramref name="index" /> i <paramref name="index" /> + 1, a wartość liczbową znak na pozycji <paramref name="index" /> z zakresu od U + D800 poprzez U + DBFF i wartość liczbową znak na pozycji pozycja <paramref name="index" />+ 1 zakresu od U + DC00 za pośrednictwem U + DFFF; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-872">
              <see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-873">Zazwyczaj pojedynczy znak jest reprezentowany przez pojedynczą jednostkę kodu Unicode 16-bitowych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-873">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="6fdc5-874">Kodowanie UTF-16 obsługuje również par zastępczych, umożliwiających abstrakcyjne pojedynczy znak może być reprezentowana przez dwie jednostki 16-bitowego kodu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-874">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="6fdc5-875">Pierwszy jednostki kodu, którego wartość może należeć do zakresu od U + D800 do U + DBFF, jest znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-875">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="6fdc5-876">Drugi jednostki kodu, którego wartość może należeć do zakresu od U + DC00 do U + DFFF, jest znak zastępczy niskiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-876">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="6fdc5-877">Punkty kodowe indywidualny znak zastępczy ma nie interpretacji własnych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-877">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="6fdc5-878">Aby uzyskać więcej informacji na temat surogaty i Unicode Standard, zobacz [strony głównej Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-878">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-879">Poniższy przykład kodu demonstruje <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, i <xref:System.Char.IsSurrogatePair%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-879">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-880">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-880">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-881">
            <paramref name="index" /> nie jest pozycją w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-881">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSymbol">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-882">Wskazuje, czy znak Unicode jest dzielony na kategorie jako znak symbolu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-882">Indicates whether a Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-883">Prawidłowe symbole są członkami następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, i `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-883">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="6fdc5-884">Symbole w standardzie Unicode są luźno zdefiniowanego zestawu znaków, które obejmują następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-884">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="6fdc5-885">Symbole walut.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-885">Currency symbols.</span></span>  
  
-   <span data-ttu-id="6fdc5-886">Literopodobne symboli, które zawierają zestaw symbole matematyczne alfanumeryczne oraz symbole, takie jak ℅, nr, i rozwojowych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-886">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="6fdc5-887">Liczba formularzy, takich jak indeksy dolne i górne.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-887">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="6fdc5-888">Operatory matematyczne i strzałki.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-888">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="6fdc5-889">Symbole geometrycznych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-889">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="6fdc5-890">Symbole Technical Preview.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-890">Technical symbols.</span></span>  
  
-   <span data-ttu-id="6fdc5-891">Braille'a wzorców.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-891">Braille patterns.</span></span>  
  
-   <span data-ttu-id="6fdc5-892">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-892">Dingbats.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(char c);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : char -&gt; bool" Usage="System.char.IsSymbol c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-893">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-893">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-894">Wskazuje, czy określony znak Unicode jest dzielony na kategorie jako znak symbolu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-894">Indicates whether the specified Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-895">
            <see langword="true" /> Jeśli <paramref name="c" /> to symbol znaku; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-895">
              <see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-896">Prawidłowe symbole są członkami następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, i `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-896">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="6fdc5-897">Symbole w standardzie Unicode są luźno zdefiniowanego zestawu znaków, które obejmują następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-897">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="6fdc5-898">Symbole walut.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-898">Currency symbols.</span></span>  
  
-   <span data-ttu-id="6fdc5-899">Literopodobne symboli, które zawierają zestaw symbole matematyczne alfanumeryczne oraz symbole, takie jak ℅, nr, i rozwojowych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-899">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="6fdc5-900">Liczba formularzy, takich jak indeksy dolne i górne.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-900">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="6fdc5-901">Operatory matematyczne i strzałki.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-901">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="6fdc5-902">Symbole geometrycznych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-902">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="6fdc5-903">Symbole Technical Preview.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-903">Technical symbols.</span></span>  
  
-   <span data-ttu-id="6fdc5-904">Braille'a wzorców.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-904">Braille patterns.</span></span>  
  
-   <span data-ttu-id="6fdc5-905">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-905">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-906">Poniższy przykład kodu demonstruje <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-906">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : string * int -&gt; bool" Usage="System.char.IsSymbol (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-907">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-907">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-908">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-908">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-909">Wskazuje, czy znak w określonej pozycji w określony ciąg jest dzielony na kategorie jako znak symbolu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-909">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-910">
            <see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> to symbol znaku; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-910">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-911">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-911">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-912">Prawidłowe symbole są członkami następujących kategorii w <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, i `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-912">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="6fdc5-913">Symbole w standardzie Unicode są luźno zdefiniowanego zestawu znaków, które obejmują następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-913">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="6fdc5-914">Symbole walut.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-914">Currency symbols.</span></span>  
  
-   <span data-ttu-id="6fdc5-915">Literopodobne symboli, które zawierają zestaw symbole matematyczne alfanumeryczne oraz symbole, takie jak ℅, nr, i rozwojowych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-915">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="6fdc5-916">Liczba formularzy, takich jak indeksy dolne i górne.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-916">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="6fdc5-917">Operatory matematyczne i strzałki.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-917">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="6fdc5-918">Symbole geometrycznych.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-918">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="6fdc5-919">Symbole Technical Preview.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-919">Technical symbols.</span></span>  
  
-   <span data-ttu-id="6fdc5-920">Braille'a wzorców.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-920">Braille patterns.</span></span>  
  
-   <span data-ttu-id="6fdc5-921">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-921">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-922">Poniższy przykład kodu demonstruje <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-922">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-923">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-923">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-924">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-924">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-925">Wskazuje, czy znak Unicode jest dzielony na kategorie jako wielką literą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-925">Indicates whether a Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(char c);" />
      <MemberSignature Language="F#" Value="static member IsUpper : char -&gt; bool" Usage="System.char.IsUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-926">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-926">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-927">Wskazuje, czy określony znak Unicode jest dzielony na kategorie jako wielką literą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-927">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-928">
            <see langword="true" /> Jeśli <paramref name="c" /> jest wielką literę; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-928">
              <see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-929">Nieprawidłowa wielkie litery należą do następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-929">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsLower(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsUpper : string * int -&gt; bool" Usage="System.char.IsUpper (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-930">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-930">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-931">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-931">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-932">Wskazuje, czy znak w określonej pozycji w określony ciąg jest dzielony na kategorie jako wielką literą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-932">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-933">
            <see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest wielką literę; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-933">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-934">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-934">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-935">Nieprawidłowa wielkie litery należą do następujących kategorii w <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-935">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-936">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-936">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-937">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-937">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWhiteSpace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-938">Wskazuje, czy znak Unicode jest dzielony na kategorie jako biały znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-938">Indicates whether a Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-939">Znaki odstępu są następujące znaki Unicode:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-939">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="6fdc5-940">Członkowie <xref:System.Globalization.UnicodeCategory.SpaceSeparator> kategorii, która zawiera znaki spację (U + 0020), miejsca OGHAM oznaczyć (U + 1680), cztery EN (U + 2000), cztery EM (U + 2001), EN spację (U + 2002), EM miejsca (U + 2003), trzech na Długiej spacji (U + 2004), cztery na Długiej spacji (U + 2005), 6 na EM SPACJĘ (U + 2006), rysunek miejsca (U + 2007), znaki INTERPUNKCYJNE wiele do zrobienia miejsca (U + 2008), miejsca (U + 2009), miejsca włosów (U + 200A), WĄSKIE spacja NIEROZDZIELAJĄCA (U + 202F), średnie miejsce MATEMATYCZNE (U + 205F) i IDEOGRAFICZNYCH (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-940">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="6fdc5-941">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.LineSeparator> kategorii, która obejmuje tylko znak SEPARATORA linii (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-941">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="6fdc5-942">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> kategorię, która składa się wyłącznie ze znaków SEPARATOR AKAPITÓW (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-942">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="6fdc5-943">Znaki TABULACJA znak (U + 0009) spacji (U + 000A) WYSUWU wiersza, TABULACJA w wierszu (U + 000B), wysuw (U + 000C), powrotu KARETKI (U + 000D), OBOK wiersza (U + 0085) i spacja NIEROZDZIELAJĄCA (U + 00A0).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-943">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), NEXT LINE (U+0085), and NO-BREAK SPACE (U+00A0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(char c);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : char -&gt; bool" Usage="System.char.IsWhiteSpace c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-944">Znak Unicode do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-944">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-945">Wskazuje, czy określony znak Unicode jest dzielony na kategorie jako biały znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-945">Indicates whether the specified Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-946">
            <see langword="true" /> Jeśli <paramref name="c" /> jest białe miejsca; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-946">
              <see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-947">Znaki odstępu są następujące znaki Unicode:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-947">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="6fdc5-948">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.SpaceSeparator> kategorii, która zawiera znaki miejsca (U + 0020), spacja NIEROZDZIELAJĄCA (U + 00A0), OZNACZ miejsca OGHAM (U + 1680), cztery EN (U + 2000), cztery EM (U + 2001), EN spację (U + 2002), EM miejsca (U + 2003), trzech na Długiej spacji (U + 2004), (cztery na Długiej spacji U+ 2005), 6 na Długiej spacji (U + 2006), spacja (U + 2007), znaki INTERPUNKCYJNE wiele do zrobienia miejsca (U + 2008), miejsca (U + 2009), włosów miejsca (U + 200A), spacja NIEROZDZIELAJĄCA WĄSKIEGO (U + 202F), średnie miejsce MATEMATYCZNE (U + 205F) i IDEOGRAFICZNYCH (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-948">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="6fdc5-949">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.LineSeparator> kategorii, która obejmuje tylko znak SEPARATORA linii (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-949">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="6fdc5-950">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> kategorię, która składa się wyłącznie ze znaków SEPARATOR AKAPITÓW (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-950">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="6fdc5-951">Znaki TABULACJA znak (U + 0009), wiersz źródła danych (U + 000A), TABULACJA w wierszu (U + 000B), wysuw (U + 000C), powrotu KARETKI (U + 000D), a następnie wiersza (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-951">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-952">W poniższym przykładzie pokazano <xref:System.Char.IsWhiteSpace%28System.Char%29> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-952">The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : string * int -&gt; bool" Usage="System.char.IsWhiteSpace (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-953">Ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-953">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fdc5-954">Pozycja znaku umożliwia ocenę w <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-954">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-955">Wskazuje, czy znak w określonej pozycji w określony ciąg jest dzielony na kategorie jako biały znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-955">Indicates whether the character at the specified position in a specified string is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-956">
            <see langword="true" /> Jeśli znak na pozycji <paramref name="index" /> w <paramref name="s" /> jest białe miejsca; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-956">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-957">Pozycje znaku w ciągu są indeksowane począwszy od zera.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-957">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="6fdc5-958">Znaki odstępu są następujące znaki Unicode:</span><span class="sxs-lookup"><span data-stu-id="6fdc5-958">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="6fdc5-959">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.SpaceSeparator> kategorii, która zawiera znaki miejsca (U + 0020), spacja NIEROZDZIELAJĄCA (U + 00A0), OZNACZ miejsca OGHAM (U + 1680), cztery EN (U + 2000), cztery EM (U + 2001), EN spację (U + 2002), EM miejsca (U + 2003), trzech na Długiej spacji (U + 2004), (cztery na Długiej spacji U+ 2005), 6 na Długiej spacji (U + 2006), spacja (U + 2007), znaki INTERPUNKCYJNE wiele do zrobienia miejsca (U + 2008), miejsca (U + 2009), włosów miejsca (U + 200A), spacja NIEROZDZIELAJĄCA WĄSKIEGO (U + 202F), średnie miejsce MATEMATYCZNE (U + 205F) i IDEOGRAFICZNYCH (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-959">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="6fdc5-960">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.LineSeparator> kategorii, która obejmuje tylko znak SEPARATORA linii (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-960">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="6fdc5-961">Elementy członkowskie <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> kategorię, która składa się wyłącznie ze znaków SEPARATOR AKAPITÓW (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-961">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="6fdc5-962">Znaki TABULACJA znak (U + 0009), wiersz źródła danych (U + 000A), TABULACJA w wierszu (U + 000B), wysuw (U + 000C), powrotu KARETKI (U + 000D), a następnie wiersza (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="6fdc5-962">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-963">Poniższy przykład kodu demonstruje <xref:System.Char.IsWhiteSpace%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-963">The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-964">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-964">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fdc5-965">
            <paramref name="index" /> jest mniejsza od zera lub większa od ostatniej pozycji w parametrze <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-965">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : char" Usage="System.char.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-966">Reprezentuje największa możliwa wartość z <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-966">Represents the largest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="6fdc5-967">To pole jest stałe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-967">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-968">Wartość tej stałej jest szesnastkowe 0xFFFF.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-968">The value of this constant is hexadecimal 0xFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : char" Usage="System.char.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-969">Reprezentuje najniższą możliwą wartość elementu <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-969">Represents the smallest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="6fdc5-970">To pole jest stałe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-970">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-971">Wartość tej stałej jest 0x00 szesnastkowe.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-971">The value of this constant is hexadecimal 0x00.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static char Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; char" Usage="System.char.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-972">Ciąg, który zawiera pojedynczy znak lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-972">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-973">Konwertuje wartość określonego ciągu na jego odpowiadające znaki Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-973">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-974">Znak Unicode, które jest odpowiednikiem znaku wyłącznie w <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-974">A Unicode character equivalent to the sole character in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fdc5-975">Poniższy przykład kodu demonstruje <xref:System.Char.Parse%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-975">The following code example demonstrates <xref:System.Char.Parse%2A>.</span></span>  
  
 [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]
 [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]
 [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-976">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-976">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="6fdc5-977">Długość <paramref name="s" /> nie jest 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-977">The length of <paramref name="s" /> is not 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-978">Ten parametr jest ignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-978">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-979">**Uwaga** ta konwersja nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-979">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="6fdc5-980">Podjęto próbę wykonania powoduje zgłoszenie <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-980">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-981">Ta konwersja nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-981">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="6fdc5-982">Nie jest zwracana żadna wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-982">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="6fdc5-983">Ta konwersja nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-983">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-984">Ten parametr jest ignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-984">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-985">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-985">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-986">Przekonwertowane wartości bieżącego <see cref="T:System.Char" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-986">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-987">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-987">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6fdc5-988">Mogą być używane tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowany na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-988">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6fdc5-989">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-989">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-990">Ten parametr jest ignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-990">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-991">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-991">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-992">Wartość bieżącego <see cref="T:System.Char" /> obiektu bez zmian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-992">The value of the current <see cref="T:System.Char" /> object unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-993">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-993">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6fdc5-994">Mogą być używane tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowany na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-994">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-995">Ten parametr jest ignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-995">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-996">**Uwaga** ta konwersja nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-996">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="6fdc5-997">Podjęto próbę wykonania powoduje zgłoszenie <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-997">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-998">Nie jest zwracana żadna wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-998">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="6fdc5-999">Ta konwersja nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-999">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-1000">Ten parametr jest ignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1000">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1001">**Uwaga** ta konwersja nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1001">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="6fdc5-1002">Podjęto próbę wykonania powoduje zgłoszenie <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1002">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1003">Nie jest zwracana żadna wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1003">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="6fdc5-1004">Ta konwersja nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1004">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-1005">Ten parametr jest ignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1005">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1006">**Uwaga** ta konwersja nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1006">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="6fdc5-1007">Podjęto próbę wykonania powoduje zgłoszenie <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1007">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1008">Nie jest zwracana żadna wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1008">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="6fdc5-1009">Ta konwersja nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1009">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-1010">Ten parametr jest ignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1010">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1011">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1011">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1012">Przekonwertowane wartości bieżącego <see cref="T:System.Char" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1012">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1013">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1013">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6fdc5-1014">Mogą być używane tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowany na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1014">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6fdc5-1015">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1015">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-1016">Ten parametr jest ignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1016">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1017">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1017">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1018">Przekonwertowane wartości bieżącego <see cref="T:System.Char" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1018">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1019">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1019">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6fdc5-1020">Mogą być używane tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowany na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1020">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6fdc5-1021">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1021">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-1022">Ten parametr jest ignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1022">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1023">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1023">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1024">Przekonwertowane wartości bieżącego <see cref="T:System.Char" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1024">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1025">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1025">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6fdc5-1026">Mogą być używane tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowany na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1026">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6fdc5-1027">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1027">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-1028">Ten parametr jest ignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1028">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1029">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1029">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1030">Przekonwertowane wartości bieżącego <see cref="T:System.Char" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1030">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1031">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1031">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6fdc5-1032">Mogą być używane tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowany na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1032">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6fdc5-1033">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1033">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-1034">Ten parametr jest ignorowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1034">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1035">**Uwaga** ta konwersja nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1035">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="6fdc5-1036">Podjęto próbę wykonania powoduje zgłoszenie <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1036">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1037">Nie jest zwracana żadna wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1037">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="6fdc5-1038">Ta konwersja nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1038">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="6fdc5-1039">Element <see cref="T:System.Type" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1039">A <see cref="T:System.Type" /> object.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="6fdc5-1040">
            <see cref="T:System.IFormatProvider" /> Obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1040">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1041">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1041">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1042">Obiekt określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1042">An object of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1043">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1043">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6fdc5-1044">Mogą być używane tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowany na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1044">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6fdc5-1045">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1045">The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-1046">
            <paramref name="type" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1046">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="6fdc5-1047">Wartość bieżącego <see cref="T:System.Char" /> obiektu nie można przekonwertować na typ określony przez <paramref name="type" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1047">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-1048">
            <see cref="T:System.IFormatProvider" /> Obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1048">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="6fdc5-1049">(Określ <see langword="null" /> ponieważ <c>dostawcy</c> parametr jest ignorowany.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1049">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1050">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1050">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1051">Przekonwertowane wartości bieżącego <see cref="T:System.Char" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1051">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1052">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1052">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6fdc5-1053">Mogą być używane tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowany na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1053">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6fdc5-1054">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1054">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-1055">
            <see cref="T:System.IFormatProvider" /> Obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1055">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="6fdc5-1056">(Określ <see langword="null" /> ponieważ <c>dostawcy</c> parametr jest ignorowany.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1056">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1057">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1057">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1058">Przekonwertowane wartości bieżącego <see cref="T:System.Char" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1058">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1059">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1059">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6fdc5-1060">Mogą być używane tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowany na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1060">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6fdc5-1061">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1061">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-1062">
            <see cref="T:System.IFormatProvider" /> Obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1062">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="6fdc5-1063">(Określ <see langword="null" /> ponieważ <c>dostawcy</c> parametr jest ignorowany.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1063">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1064">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1064">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1065">Przekonwertowane wartości bieżącego <see cref="T:System.Char" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1065">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1066">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1066">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6fdc5-1067">Mogą być używane tylko wtedy, gdy <xref:System.Char> wystąpienia jest rzutowany na <xref:System.IConvertible> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1067">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6fdc5-1068">Zalecaną alternatywą jest wywołanie <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1068">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-1069">Konwertuje wartość znaku Unicode na odpowiadającą jej małe litery.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1069">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c);" />
      <MemberSignature Language="F#" Value="static member ToLower : char -&gt; char" Usage="System.char.ToLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-1070">Znak Unicode, który ma zostać przekształcony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1070">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1071">Konwertuje wartość znaku Unicode na odpowiadającą jej małe litery.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1071">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1072">Małe równowartość <paramref name="c" />, lub bez zmian wartości <paramref name="c" />, jeśli <paramref name="c" /> jest już nie alfabetycznym czy małą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1072">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1073">Reguł stosowania wielkości liter są uzyskiwane z bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1073">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="6fdc5-1074">Użyj <xref:System.String.ToLower%2A?displayProperty=nameWithType> do przekonwertowania ciągu na małe litery.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1074">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-1075">W poniższym przykładzie pokazano <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1075">The following example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="6fdc5-1076">
            <para>Jak wyjaśniono w [najlepsze rozwiązania dotyczące Using Strings](~/docs/standard/base-types/best-practices-strings.md), zaleca się unikać wywoływania metod wielkość znaków i wielkości liter ciągu, które podstawiają wartości domyślne. Zamiast tego należy wywołać metody, które wymagają być jawnie określone parametry. Aby dokonać konwersji znaków na małe litery, przy użyciu konwencji obudowy bieżącej kultury, należy wywołać <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> przeciążenie metody z wartością <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> dla jego <paramref name="culture" /> parametru.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1076">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToLower (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-1077">Znak Unicode, który ma zostać przekształcony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1077">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="6fdc5-1078">Obiekt, który dostarcza reguły dotyczące wielkości znaków z uwzględnieniem ustawień kulturowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1078">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1079">Konwertuje wartość określonego znaku Unicode równoważnik małe litery, przy użyciu określonego informacje o formatowaniu specyficzne dla kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1079">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1080">Małe równowartość <paramref name="c" />, zmodyfikowane na podstawie położenia <paramref name="culture" />, lub bez zmian wartości <paramref name="c" />, jeśli <paramref name="c" /> jest już nie alfabetycznym czy małą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1080">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1081">Użyj <xref:System.String.ToLower%2A?displayProperty=nameWithType> do przekonwertowania ciągu na małe litery.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1081">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-1082">Poniższy przykład kodu demonstruje <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1082">The following code example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-1083">
            <paramref name="culture" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1083">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static char ToLowerInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLowerInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : char -&gt; char" Usage="System.char.ToLowerInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-1084">Znak Unicode, który ma zostać przekształcony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1084">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1085">Konwertuje wartość znaku Unicode równoważnik małe litery, używając reguł stosowania wielkości liter kultury niezmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1085">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1086">Małe równowartość <paramref name="c" /> parametr lub wartość niezmienione <paramref name="c" />, jeśli <paramref name="c" /> jest już nie alfabetycznym czy małą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1086">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1087">Jeśli aplikacja jest niezależny od bieżącej kultury i zależy od przypadku znak zmiany w przewidywalny sposób, należy użyć <xref:System.Char.ToLowerInvariant%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1087">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="6fdc5-1088"><xref:System.Char.ToLowerInvariant%2A> Metoda jest równoważna `ToLower(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1088">The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="6fdc5-1089">Użyj <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> do przekonwertowania ciągu na małe litery.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1089">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-1090">Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1090">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="char.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-1091">Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1091">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1092">Ciąg reprezentujący wartość tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1092">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fdc5-1093">Poniższy przykład kodu demonstruje <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1093">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.char.ToString c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-1094">Znak Unicode, który ma zostać przekształcony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1094">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1095">Konwertuje określony znak Unicode na jego reprezentację ciągu równoważnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1095">Converts the specified Unicode character to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1096">Ciąg reprezentujący wartość <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1096">The string representation of the value of <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fdc5-1097">Poniższy przykład kodu demonstruje <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1097">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="char.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fdc5-1098">(Parametr zarezerwowany) Obiekt dostarczający informacji o formatowaniu specyficznych dla kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1098">(Reserved) An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1099">Konwertuje wartość tego wystąpienia na jego reprezentację ciągu równoważnego, korzystając z informacji zawartych w określonym formacie specyficzne dla kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1099">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1100">Ciąg reprezentujący wartość tego wystąpienia określony przez <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1100">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1101">`provider` Parametr jest ignorowany; nie uczestniczy w tej operacji.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1101">The `provider` parameter is ignored; it does not participate in this operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-1102">Poniższy przykład kodu demonstruje przeciążenia <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1102">The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fdc5-1103">Konwertuje wartość znaku Unicode na odpowiadającą jej wielkie litery.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1103">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char -&gt; char" Usage="System.char.ToUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-1104">Znak Unicode, który ma zostać przekształcony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1104">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1105">Konwertuje wartość znaku Unicode na odpowiadającą jej wielkie litery.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1105">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1106">Wielkie litery odpowiednikiem <paramref name="c" />, lub bez zmian wartości <paramref name="c" /> Jeśli <paramref name="c" /> już jest wielką literą, zawiera odpowiednika wielkie litery lub alfabetycznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1106">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1107">Reguł stosowania wielkości liter są uzyskiwane z bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1107">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="6fdc5-1108">Użyj <xref:System.String.ToUpper%2A?displayProperty=nameWithType> do przekonwertowania ciągu na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1108">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-1109">Poniższy przykład konwertuje każdy znak w tablicy na odpowiadającą jej wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1109">The following example converts each character in an array to its uppercase equivalent.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]
 [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="6fdc5-1110">
            <para>Jak wyjaśniono w [najlepsze rozwiązania dotyczące Using Strings](~/docs/standard/base-types/best-practices-strings.md), zaleca się unikać wywoływania metod wielkość znaków i wielkości liter ciągu, które podstawiają wartości domyślne. Zamiast tego należy wywołać metody, które wymagają być jawnie określone parametry. Aby dokonać konwersji znaków na wielkie litery, przy użyciu konwencji obudowy bieżącej kultury, należy wywołać <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> przeciążenie metody z wartością <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> dla jego <paramref name="culture" /> parametru.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1110">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToUpper (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-1111">Znak Unicode, który ma zostać przekształcony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1111">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="6fdc5-1112">Obiekt, który dostarcza reguły dotyczące wielkości znaków z uwzględnieniem ustawień kulturowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1112">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1113">Konwertuje wartość określonego znaku Unicode równoważnik wielkie litery, przy użyciu określonego informacje o formatowaniu specyficzne dla kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1113">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1114">Wielkie litery odpowiednikiem <paramref name="c" />, zmodyfikowane na podstawie położenia <paramref name="culture" />, lub bez zmian wartości <paramref name="c" /> Jeśli <paramref name="c" /> już jest wielką literą, zawiera odpowiednika wielkie litery lub alfabetycznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1114">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1115">Użyj <xref:System.String.ToUpper%2A?displayProperty=nameWithType> do przekonwertowania ciągu na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1115">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-1116">Poniższy przykład konwertuje równoważnik wielkimi literami dla kultury en US, niezmiennej kultury i kultury tr-TR każdego znaku w tablicy.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1116">The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</span></span> <span data-ttu-id="6fdc5-1117">W tym przykładzie wielkie litery odpowiednikiem każdą małą literę jest taka sama dla wszystkich języków, z wyjątkiem jeden przypadek.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1117">In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</span></span> <span data-ttu-id="6fdc5-1118">Małe litery "i" znak (U + 0069) skonwertować "I" (U + 0049) w en US i niezmiennej kultury, ale "İ" (U + 0130) w kulturze tr-TR.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1118">The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]
 [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fdc5-1119">
            <paramref name="culture" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1119">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static char ToUpperInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpperInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : char -&gt; char" Usage="System.char.ToUpperInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="6fdc5-1120">Znak Unicode, który ma zostać przekształcony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1120">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1121">Konwertuje wartość znaku Unicode równoważnik wielkie litery, używając reguł stosowania wielkości liter kultury niezmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1121">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1122">Wielkie litery odpowiednikiem <paramref name="c" /> parametr lub wartość niezmienione <paramref name="c" />, jeśli <paramref name="c" /> jest już wielkie litery lub nie alfabetycznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1122">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1123">Jeśli aplikacja nie jest zależny od bieżącej kultury, zależy od przypadku znak zmiany w przewidywalny sposób użycia <xref:System.Char.ToUpperInvariant%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1123">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.</span></span>  <span data-ttu-id="6fdc5-1124"><xref:System.Char.ToUpperInvariant%2A> Metoda jest równoważna `ToUpper(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1124">The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="6fdc5-1125">Użyj <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> do przekonwertowania ciągu na wielkie litery.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1125">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out char result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] char&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.TryParse(System.String,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] char % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.char.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Char" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fdc5-1126">Ciąg, który zawiera pojedynczy znak lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1126">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="6fdc5-1127">Po powrocie z tej metody zawiera znak Unicode, które jest odpowiednikiem znaku wyłącznie w <c>s</c>, jeśli konwersja powiodła się, lub niezdefiniowaną wartość, jeśli konwersja nie powiodła się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1127">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span>
          </span>
          <span data-ttu-id="6fdc5-1128">Jeśli konwersja nie powiedzie się <c>s</c> parametr jest <see langword="null" /> lub długość <c>s</c> nie jest 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1128">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span>
          </span>
          <span data-ttu-id="6fdc5-1129">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1129">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fdc5-1130">Konwertuje wartość określonego ciągu na jego odpowiadające znaki Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1130">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
          <span data-ttu-id="6fdc5-1131">Kod powrotny wskazuje, czy konwersja powiodła się, czy nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1131">A return code indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fdc5-1132">
            <see langword="true" /> Jeśli <paramref name="s" /> parametr został przekonwertowany pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fdc5-1132">
              <see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdc5-1133"><xref:System.Char.TryParse%2A> Metoda przypomina <xref:System.Char.Parse%2A> metody, z wyjątkiem <xref:System.Char.TryParse%2A> metoda zgłasza wyjątku, jeśli konwersja nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1133">The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdc5-1134">Poniższy przykład kodu demonstruje przeciążenia <xref:System.Char.TryParse%2A> metody dla kilku typów podstawowych, a <xref:System.DateTime.TryParseExact%2A> metodę <xref:System.DateTime> typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="6fdc5-1134">The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.</span></span>  
  
 [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]
 [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]
 [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>