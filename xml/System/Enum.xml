<Type Name="Enum" FullName="System.Enum">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e84548759cfa681f91067026ae0a5e2dba3a9a5" /><Meta Name="ms.sourcegitcommit" Value="f9e71795ba0f9c2dfaa74bec233343ed0f3ffd99" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/14/2019" /><Meta Name="ms.locfileid" Value="57942286" /></Metadata><TypeSignature Language="C#" Value="public abstract class Enum : ValueType, IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Enum extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Enum" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Enum&#xA;Inherits ValueType&#xA;Implements IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Enum abstract : ValueType, IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="F#" Value="type Enum = class&#xA;    inherit ValueType&#xA;    interface IComparable&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="51731-101">Udostępnia klasę bazową dla wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-101">Provides the base class for enumerations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-102">Wyliczenie to zestaw nazwanych stałych o typie podstawowym jest dowolnego typu całkowitoliczbowego.</span><span class="sxs-lookup"><span data-stu-id="51731-102">An enumeration is a set of named constants whose underlying type is any integral type.</span></span> <span data-ttu-id="51731-103">Jeśli żaden typ podstawowy jest zadeklarowany w sposób jawny, <xref:System.Int32> jest używany.</span><span class="sxs-lookup"><span data-stu-id="51731-103">If no underlying type is explicitly declared, <xref:System.Int32> is used.</span></span> <span data-ttu-id="51731-104"><xref:System.Enum> jest klasą bazową dla wszystkich wyliczenia w .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="51731-104"><xref:System.Enum> is the base class for all enumerations in the .NET Framework.</span></span> <span data-ttu-id="51731-105">Typy wyliczeniowe są definiowane przez `enum` — słowo kluczowe w języku C# i `Enum`... `End Enum` konstruowania w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51731-105">Enumeration types are defined by the `enum` keyword in C# and the `Enum`...`End Enum` construct in Visual Basic.</span></span>  
  
 <span data-ttu-id="51731-106"><xref:System.Enum> zawiera metody służące do porównywania wystąpień tej klasy, konwertowania wartości wystąpienia na jego reprezentację ciągu, konwertowania ciąg reprezentujący liczbę na wystąpienie tej klasy i tworzenia wystąpienia obiektu określonego wyliczenie i wartości.</span><span class="sxs-lookup"><span data-stu-id="51731-106"><xref:System.Enum> provides methods for comparing instances of this class, converting the value of an instance to its string representation, converting the string representation of a number to an instance of this class, and creating an instance of a specified enumeration and value.</span></span>  
  
 <span data-ttu-id="51731-107">Wyliczenie można również traktować jako pole bitowe.</span><span class="sxs-lookup"><span data-stu-id="51731-107">You can also treat an enumeration as a bit field.</span></span> <span data-ttu-id="51731-108">Aby uzyskać więcej informacji, zobacz [Non-wyłącznie elementy członkowskie i atrybut flag](#Flags) sekcji i <xref:System.FlagsAttribute> tematu.</span><span class="sxs-lookup"><span data-stu-id="51731-108">For more information, see the [Non-Exclusive Members and the Flags Attribute](#Flags) section and the <xref:System.FlagsAttribute> topic.</span></span>  
  
 <span data-ttu-id="51731-109">W tym temacie:</span><span class="sxs-lookup"><span data-stu-id="51731-109">In this topic:</span></span>  
  
 <span data-ttu-id="51731-110">[Tworzenie typu wyliczania](#Creating) </span><span class="sxs-lookup"><span data-stu-id="51731-110">[Creating an enumeration type](#Creating) </span></span>  
 <span data-ttu-id="51731-111">[Utworzenie typu wyliczania](#Instantiating) </span><span class="sxs-lookup"><span data-stu-id="51731-111">[Instantiating an enumeration type](#Instantiating) </span></span>  
 <span data-ttu-id="51731-112">[Wyliczanie najlepszych praktyk](#BestPractices) </span><span class="sxs-lookup"><span data-stu-id="51731-112">[Enumeration best practices](#BestPractices) </span></span>  
 <span data-ttu-id="51731-113">[Wykonywanie operacji związanych z wyliczeniami](#Operations) </span><span class="sxs-lookup"><span data-stu-id="51731-113">[Performing operations with enumerations](#Operations) </span></span>  
 [<span data-ttu-id="51731-114">Wykonywania konwersji</span><span class="sxs-lookup"><span data-stu-id="51731-114">Performing conversions</span></span>](#conversions)  
 [<span data-ttu-id="51731-115">Analizowanie wartości wyliczenia</span><span class="sxs-lookup"><span data-stu-id="51731-115">Parsing enumeration values</span></span>](#parsing)  
 [<span data-ttu-id="51731-116">Formatowanie wartości wyliczenia</span><span class="sxs-lookup"><span data-stu-id="51731-116">Formatting enumeration values</span></span>](#formatting)  
[<span data-ttu-id="51731-117">Iteracja elementów członkowskich wyliczenia</span><span class="sxs-lookup"><span data-stu-id="51731-117">Iterating enumeration members</span></span>](#iterating)  
[<span data-ttu-id="51731-118">Inne niż wyłącznie elementy członkowskie i atrybut flag</span><span class="sxs-lookup"><span data-stu-id="51731-118">Non-exclusive members and the Flags attribute</span></span>](#Flags)  
[<span data-ttu-id="51731-119">Dodawanie metody wyliczania</span><span class="sxs-lookup"><span data-stu-id="51731-119">Adding enumeration methods</span></span>](#Methods)  
  
<a name="Creating"></a>   
## <a name="creating-an-enumeration-type"></a><span data-ttu-id="51731-120">Tworzenie typu wyliczania</span><span class="sxs-lookup"><span data-stu-id="51731-120">Creating an enumeration type</span></span>  
 <span data-ttu-id="51731-121">Języki programowania zwykle zapewniają składnia do deklarowania wyliczania, który składa się z szeregu nazwanych stałych i ich wartości.</span><span class="sxs-lookup"><span data-stu-id="51731-121">Programming languages typically provide syntax to declare an enumeration that consists of a set of named constants and their values.</span></span> <span data-ttu-id="51731-122">Poniższy przykład ilustruje składnię wykorzystywaną przez C# i Visual Basic zdefiniowanie wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-122">The following example illustrates the syntax used by C# and Visual Basic to define an enumeration.</span></span> <span data-ttu-id="51731-123">Tworzy wyliczenie o nazwie `ArrivalStatus` zawierający trzy elementy członkowskie: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, i `ArrivalStatus.Late`.</span><span class="sxs-lookup"><span data-stu-id="51731-123">It creates an enumeration named `ArrivalStatus` that has three members: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, and `ArrivalStatus.Late`.</span></span> <span data-ttu-id="51731-124">Należy pamiętać, że w obu przypadkach wyliczenia nie jawnie dziedziczy <xref:System.Enum>; relację dziedziczenia jest obsługiwane niejawnie przez kompilator.</span><span class="sxs-lookup"><span data-stu-id="51731-124">Note that in both cases, the enumeration does not explicitly inherit from <xref:System.Enum>; the inheritance relationship is handled implicitly by the compiler.</span></span>  
  
 [!code-csharp[System.Enum.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#1)]
 [!code-vb[System.Enum.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#1)]  
  
> [!WARNING]
>  <span data-ttu-id="51731-125">Typ wyliczenia o typie podstawowym jest niecałkowitoliczbowego nigdy nie należy utworzyć lub <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="51731-125">You should never create an enumeration type whose underlying type is non-integral or <xref:System.Char>.</span></span> <span data-ttu-id="51731-126">Mimo, że typem wyliczenia można tworzyć przy użyciu odbicia, wywołania metod trwające Użyj wynikowy typ jest gwarantowane i może także zgłaszać wyjątki dodatkowe.</span><span class="sxs-lookup"><span data-stu-id="51731-126">Although you can create such an enumeration type by using reflection, method calls that use the resulting type are unreliable and may also throw additional exceptions.</span></span>  
  
<a name="Instantiating"></a>   
## <a name="instantiating-an-enumeration-type"></a><span data-ttu-id="51731-127">Utworzenie typu wyliczania</span><span class="sxs-lookup"><span data-stu-id="51731-127">Instantiating an enumeration type</span></span>  
 <span data-ttu-id="51731-128">Można utworzyć wystąpienie typu wyliczania tak samo, jak wystąpienia inny typ wartości: deklarowanie zmiennej i przypisując jednej ze stałych wyliczenia do niego.</span><span class="sxs-lookup"><span data-stu-id="51731-128">You can instantiate an enumeration type just as you instantiate any other value type: by declaring a variable and assigning one of the enumeration's constants to it.</span></span> <span data-ttu-id="51731-129">Poniższy przykład tworzy wystąpienie `ArrivalStatus` o wartości `ArrivalStatus.OnTime`.</span><span class="sxs-lookup"><span data-stu-id="51731-129">The following example instantiates an `ArrivalStatus` whose value is `ArrivalStatus.OnTime`.</span></span>  
  
 [!code-csharp[System.Enum.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#2)]
 [!code-vb[System.Enum.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#2)]  
  
 <span data-ttu-id="51731-130">Można również utworzyć wystąpienie wartości wyliczenia w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="51731-130">You can also instantiate an enumeration value in the following ways:</span></span>  
  
-   <span data-ttu-id="51731-131">Za pomocą funkcji języków programowania firmy rzutowania (tak jak w języku C#) lub przekonwertować (tak jak w języku Visual Basic) wartość całkowitą wartością wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-131">By using a particular programming language's features to cast (as in C#) or convert (as in Visual Basic) an integer value to an enumeration value.</span></span> <span data-ttu-id="51731-132">Poniższy przykład tworzy `ArrivalStatus` obiektu, którego wartość jest `ArrivalStatus.Early` w ten sposób.</span><span class="sxs-lookup"><span data-stu-id="51731-132">The following example creates an `ArrivalStatus` object whose value is `ArrivalStatus.Early` in this way.</span></span>  
  
     [!code-csharp[System.Enum.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#4)]
     [!code-vb[System.Enum.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#4)]  
  
-   <span data-ttu-id="51731-133">Przez wywołanie jego niejawnego domyślnego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="51731-133">By calling its implicit default constructor.</span></span> <span data-ttu-id="51731-134">Jak pokazano na poniższym przykładzie, w tym przypadku podstawowej wartości wystąpienia wyliczenia to 0.</span><span class="sxs-lookup"><span data-stu-id="51731-134">As the following example shows, in this case the underlying value of the enumeration instance is 0.</span></span> <span data-ttu-id="51731-135">Jednak to nie jest zawsze wartość prawidłową stałą w wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="51731-135">However, this is not necessarily the value of a valid constant in the enumeration.</span></span>  
  
     [!code-csharp[System.Enum.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#3)]
     [!code-vb[System.Enum.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#3)]  
  
-   <span data-ttu-id="51731-136">Przez wywołanie metody <xref:System.Enum.Parse%2A> lub <xref:System.Enum.TryParse%2A> metodę, aby przeanalizować ciąg zawierający nazwę stałą w wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="51731-136">By calling the <xref:System.Enum.Parse%2A> or <xref:System.Enum.TryParse%2A> method to parse a string that contains the name of a constant in the enumeration.</span></span> <span data-ttu-id="51731-137">Aby uzyskać więcej informacji, zobacz [analizowanie wartości wyliczenia](#parsing) sekcji.</span><span class="sxs-lookup"><span data-stu-id="51731-137">For more information, see the [Parsing Enumeration Values](#parsing) section.</span></span>  
  
-   <span data-ttu-id="51731-138">Przez wywołanie metody <xref:System.Enum.ToObject%2A> metodę, aby przekonwertować wartością całkowitą typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-138">By calling the <xref:System.Enum.ToObject%2A> method to convert an integral value to an enumeration type.</span></span> <span data-ttu-id="51731-139">Aby uzyskać więcej informacji, zobacz [wykonywania konwersji](#conversions) sekcji.</span><span class="sxs-lookup"><span data-stu-id="51731-139">For more information, see the [Performing Conversions](#conversions) section.</span></span>  
  
<a name="BestPractices"></a>   
## <a name="enumeration-best-practices"></a><span data-ttu-id="51731-140">Wyliczanie najlepszych praktyk</span><span class="sxs-lookup"><span data-stu-id="51731-140">Enumeration best practices</span></span>  
 <span data-ttu-id="51731-141">Firma Microsoft zaleca, stosować następujące najlepsze rozwiązania, podczas definiowania typów wyliczeń:</span><span class="sxs-lookup"><span data-stu-id="51731-141">We recommend that you use the following best practices when you define enumeration types:</span></span>  
  
-   <span data-ttu-id="51731-142">Jeśli nie zdefiniowano elementu członkowskiego wyliczenia, którego wartość jest równa 0, należy rozważyć utworzenie `None` Stała wyliczeniowa.</span><span class="sxs-lookup"><span data-stu-id="51731-142">If you have not defined an enumeration member whose value is 0, consider creating a `None` enumerated constant.</span></span> <span data-ttu-id="51731-143">Domyślnie, pamięć używana na potrzeby wyliczenia jest inicjowane od zera przez środowisko uruchomieniowe języka wspólnego.</span><span class="sxs-lookup"><span data-stu-id="51731-143">By default, the memory used for the enumeration is initialized to zero by the common language runtime.</span></span> <span data-ttu-id="51731-144">W związku z tym jeżeli nie zdefiniujesz stałą, której wartość wynosi zero, wyliczenia zawiera niedozwoloną wartość, podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="51731-144">Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.</span></span>  
  
-   <span data-ttu-id="51731-145">W przypadku przypadek domyślny oczywiste, że aplikacja musi reprezentować, należy wziąć pod uwagę przy użyciu wyliczenia stałej którego wartość wynosi zero do reprezentowania go.</span><span class="sxs-lookup"><span data-stu-id="51731-145">If there is an obvious default case that your application has to represent, consider using an enumerated constant whose value is zero to represent it.</span></span> <span data-ttu-id="51731-146">Jeśli nie ma żadnych przypadek domyślny, rozważ użycie Stała wyliczeniowa którego wartość wynosi zero, aby określić przypadek, który nie jest reprezentowane przez jedną z innych stałych wyliczeniowych.</span><span class="sxs-lookup"><span data-stu-id="51731-146">If there is no default case, consider using an enumerated constant whose value is zero to specify the case that is not represented by any of the other enumerated constants.</span></span>  
  
-   <span data-ttu-id="51731-147">Nie określaj stałych wyliczeniowych, które są zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="51731-147">Do not specify enumerated constants that are reserved for future use.</span></span>  
  
-   <span data-ttu-id="51731-148">Podczas definiowania metody lub właściwości, która przyjmuje Stała wyliczeniowa jako wartość, należy wziąć pod uwagę sprawdzania poprawności wartości.</span><span class="sxs-lookup"><span data-stu-id="51731-148">When you define a method or property that takes an enumerated constant as a value, consider validating the value.</span></span> <span data-ttu-id="51731-149">Przyczyną jest to, czy można rzutować wartość liczbową na typ wyliczeniowy nawet, jeśli nie zdefiniowano wartości numerycznych w wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="51731-149">The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.</span></span>  
  
 <span data-ttu-id="51731-150">Dodatkowe najlepsze rozwiązania dla typów wyliczenia, których stałe są pola bitowe są wymienione w [Non-wyłącznie elementy członkowskie i atrybut flag](#Flags) sekcji.</span><span class="sxs-lookup"><span data-stu-id="51731-150">Additional best practices for enumeration types whose constants are bit fields are listed in the [Non-Exclusive Members and the Flags Attribute](#Flags) section.</span></span>  
  
<a name="Operations"></a>   
## <a name="performing-operations-with-enumerations"></a><span data-ttu-id="51731-151">Wykonywanie operacji związanych z wyliczeniami</span><span class="sxs-lookup"><span data-stu-id="51731-151">Performing operations with enumerations</span></span>  
 <span data-ttu-id="51731-152">Nie można zdefiniować nowe metody, tworząc wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-152">You cannot define new methods when you are creating an enumeration.</span></span> <span data-ttu-id="51731-153">Jednak typem wyliczenia dziedziczy kompletny zestaw statycznych i metod wystąpienia z <xref:System.Enum> klasy.</span><span class="sxs-lookup"><span data-stu-id="51731-153">However, an enumeration type inherits a complete set of static and instance methods from the <xref:System.Enum> class.</span></span> <span data-ttu-id="51731-154">Poniższe sekcje przeglądu większość z tych metod, oprócz kilka metod, które są często używane podczas pracy z wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-154">The following sections survey most of these methods, in addition to several other methods that are commonly used when working with enumeration values.</span></span>  
  
<a name="conversions"></a>   
### <a name="performing-conversions"></a><span data-ttu-id="51731-155">Wykonywania konwersji</span><span class="sxs-lookup"><span data-stu-id="51731-155">Performing conversions</span></span>  
 <span data-ttu-id="51731-156">Można konwertować między elementu członkowskiego wyliczenia, a jej typ podstawowy, za pomocą rzutowania (w języku C#) lub operatora konwersji (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="51731-156">You can convert between an enumeration member and its underlying type by using a casting (in C#) or conversion (in Visual Basic) operator.</span></span> <span data-ttu-id="51731-157">W poniższym przykładzie użyto operatorów rzutowania lub konwersji do wykonywania konwersji, zarówno z liczbą całkowitą, do metody wartości wyliczenia, jak i z wartością wyliczenia na liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="51731-157">The following example uses casting or conversion operators to perform conversions both from an integer to an enumeration value and from an enumeration value to an integer.</span></span>  
  
 [!code-csharp[System.Enum.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#5)]
 [!code-vb[System.Enum.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#5)]  
  
 <span data-ttu-id="51731-158"><xref:System.Enum> Zawiera również klasy <xref:System.Enum.ToObject%2A> metodę, która konwertuje wartość typu całkowitego na wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-158">The <xref:System.Enum> class also includes a <xref:System.Enum.ToObject%2A> method that converts a value of any integral type to an enumeration value.</span></span> <span data-ttu-id="51731-159">W poniższym przykładzie użyto <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> metodę, aby przekonwertować <xref:System.Int32> do `ArrivalStatus` wartości.</span><span class="sxs-lookup"><span data-stu-id="51731-159">The following example uses the <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method to convert an <xref:System.Int32> to an `ArrivalStatus` value.</span></span> <span data-ttu-id="51731-160">Należy zauważyć, że ponieważ <xref:System.Enum.ToObject%2A> zwraca wartość typu <xref:System.Object>, użyj operatora rzutowania lub konwersji nadal może być konieczne można rzutować obiektu na typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-160">Note that, because the <xref:System.Enum.ToObject%2A> returns a value of type <xref:System.Object>, the use of a casting or conversion operator may still be necessary to cast the object to the enumeration type.</span></span>  
  
 [!code-csharp[System.Enum.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#6)]
 [!code-vb[System.Enum.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#6)]  
  
 <span data-ttu-id="51731-161">Podczas konwertowania liczby całkowitej do metody wartości wyliczenia, jest można przypisać wartość, która nie jest faktycznie elementem członkowskim wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-161">When converting an integer to an enumeration value, it is possible to assign a value that is not actually a member of the enumeration.</span></span> <span data-ttu-id="51731-162">Aby tego uniknąć, można przekazać liczba całkowita <xref:System.Enum.IsDefined%2A> metoda przed przystąpieniem do wykonywania konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-162">To prevent this, you can pass the integer to the <xref:System.Enum.IsDefined%2A> method before performing the conversion.</span></span> <span data-ttu-id="51731-163">W poniższym przykładzie użyto tej metody, aby ustalić, czy elementy w tablicy liczb całkowitych, mogą być konwertowane na `ArrivalStatus` wartości.</span><span class="sxs-lookup"><span data-stu-id="51731-163">The following example uses this method to determine whether the elements in an array of integer values can be converted to `ArrivalStatus` values.</span></span>  
  
 [!code-csharp[System.Enum.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion1.cs#7)]
 [!code-vb[System.Enum.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion1.vb#7)]  
  
 <span data-ttu-id="51731-164">Mimo że <xref:System.Enum> klasa zawiera jawne implementacje interfejsu z <xref:System.IConvertible> interfejsu dla konwersji z wartości wyliczenia na typ całkowity, należy użyć metod <xref:System.Convert> klasy, takie jak <xref:System.Convert.ToInt32%2A>, wykonywania konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-164">Although the <xref:System.Enum> class provides explicit interface implementations of the <xref:System.IConvertible> interface for converting from an enumeration value to an integral type, you should use the methods of the <xref:System.Convert> class, such as <xref:System.Convert.ToInt32%2A>, to perform these conversions.</span></span> <span data-ttu-id="51731-165">W poniższym przykładzie pokazano, jak można użyć <xref:System.Enum.GetUnderlyingType%2A> metoda wraz z <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> metod konwertowania wartości wyliczenia na jej typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="51731-165">The following example illustrates how you can use the <xref:System.Enum.GetUnderlyingType%2A> method along with the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method to convert an enumeration value to its underlying type.</span></span> <span data-ttu-id="51731-166">Należy pamiętać, że w tym przykładzie nie wymaga podstawowym typem wyliczenia, żeby Cię widziano w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="51731-166">Note that this example does not require the underlying type of the enumeration to be known at compile time.</span></span>  
  
 [!code-csharp[System.Enum.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion2.cs#8)]
 [!code-vb[System.Enum.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion2.vb#8)]  
  
<a name="parsing"></a>   
### <a name="parsing-enumeration-values"></a><span data-ttu-id="51731-167">Analizowanie wartości wyliczenia</span><span class="sxs-lookup"><span data-stu-id="51731-167">Parsing enumeration values</span></span>  
 <span data-ttu-id="51731-168"><xref:System.Enum.Parse%2A> i <xref:System.Enum.TryParse%2A> metody umożliwiają konwertowanie reprezentację ciągu wartości wyliczenia na tę wartość.</span><span class="sxs-lookup"><span data-stu-id="51731-168">The <xref:System.Enum.Parse%2A> and <xref:System.Enum.TryParse%2A> methods allow you to convert the string representation of an enumeration value to that value.</span></span> <span data-ttu-id="51731-169">Ciąg reprezentujący może być nazwa lub podstawową wartość stałej wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-169">The string representation can be either the name or the underlying value of an enumeration constant.</span></span> <span data-ttu-id="51731-170">Należy zwrócić uwagę na to, czy metody analizy pomyślnie przekonwertuje ciągów reprezentujących liczb, które nie są członkami określonej wyliczenia, jeśli ciągi mogą być konwertowane na wartość podstawowym typem wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-170">Note that the parsing methods will successfully convert string representations of numbers that are not members of a particular enumeration if the strings can be converted to a value of the enumeration's underlying type.</span></span> <span data-ttu-id="51731-171">Aby temu zapobiec, <xref:System.Enum.IsDefined%2A> można wywołać metody, aby upewnić się, że wynik analizy metoda jest prawidłową wartością wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-171">To prevent this, the <xref:System.Enum.IsDefined%2A> method can be called to ensure that the result of the parsing method is a valid enumeration value.</span></span> <span data-ttu-id="51731-172">To podejście pokazano w przykładzie, a pokazano oba wywołania <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> i <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-172">The example illustrates this approach and demonstrates calls to both the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> and <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="51731-173">Należy zauważyć, że metoda analizowania nieogólnego zwraca obiekt, który może być konieczne rzutowania (w języku C#) lub przekonwertować na typ wyliczenia właściwe (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="51731-173">Note that the non-generic parsing method returns an object that you may have to cast (in C#) or convert (in Visual Basic) to the appropriate enumeration type.</span></span>  
  
 [!code-csharp[System.Enum.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classparse1.cs#9)]
 [!code-vb[System.Enum.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classparse1.vb#9)]  
  
<a name="formatting"></a>   
### <a name="formatting-enumeration-values"></a><span data-ttu-id="51731-174">Formatowanie wartości wyliczenia</span><span class="sxs-lookup"><span data-stu-id="51731-174">Formatting enumeration values</span></span>  
 <span data-ttu-id="51731-175">Do ich reprezentacji ciągu można przekonwertować wartości wyliczenia, przez wywołanie statycznego <xref:System.Enum.Format%2A> metody, a także przeciążenia wystąpienia <xref:System.Enum.ToString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-175">You can convert enumeration values to their string representations by calling the static <xref:System.Enum.Format%2A> method, as well as the overloads of the instance <xref:System.Enum.ToString%2A> method.</span></span> <span data-ttu-id="51731-176">Ciąg formatu umożliwia dokładną kontrolę sposobu w którym wartość wyliczenia jest reprezentowany jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="51731-176">You can use a format string to control the precise way in which an enumeration value is represented as a string.</span></span> <span data-ttu-id="51731-177">Aby uzyskać więcej informacji, zobacz [wyliczanie ciągów formatujących](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="51731-177">For more information, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="51731-178">W poniższym przykładzie użyto każdej z obsługiwanych wyliczanie ciągów formatujących, ("G" lub "g", "D" lub "d", "X" lub "x" i "F" lub "f") można przekonwertować członkiem `ArrivalStatus` wyliczeniu, aby jej reprezentacji ciągu.</span><span class="sxs-lookup"><span data-stu-id="51731-178">The following example uses each of the supported enumeration format strings ("G" or "g", "D" or "d", "X" or "x", and "F" or "f" ) to convert a member of the `ArrivalStatus` enumeration to its string representations.</span></span>  
  
 [!code-csharp[System.Enum.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classformat1.cs#10)]
 [!code-vb[System.Enum.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classformat1.vb#10)]  
  
<a name="iterating"></a>   
### <a name="iterating-enumeration-members"></a><span data-ttu-id="51731-179">Iteracja elementów członkowskich wyliczenia</span><span class="sxs-lookup"><span data-stu-id="51731-179">Iterating enumeration members</span></span>  
 <span data-ttu-id="51731-180"><xref:System.Enum> Typ nie implementuje <xref:System.Collections.IEnumerable> lub <xref:System.Collections.Generic.IEnumerable%601> interfejs, który umożliwiłby iteracji elementów członkowskich kolekcji za pomocą `foreach` (w języku C#) lub `For Each` (w języku Visual Basic) konstruowania.</span><span class="sxs-lookup"><span data-stu-id="51731-180">The <xref:System.Enum> type does not implement the <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601> interface, which would enable you to iterate members of a collection by using a `foreach` (in C#) or `For Each` (in Visual Basic) construct.</span></span> <span data-ttu-id="51731-181">Jednak można wyliczyć elementy członkowskie w jeden z dwóch sposobów.</span><span class="sxs-lookup"><span data-stu-id="51731-181">However, you can enumerate members in either of two ways.</span></span>  
  
-   <span data-ttu-id="51731-182">Możesz wywołać <xref:System.Enum.GetNames%2A> metodę, która pobierze tablica ciągów zawierająca nazwy elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-182">You can call the <xref:System.Enum.GetNames%2A> method to retrieve a string array containing the names of the enumeration members.</span></span> <span data-ttu-id="51731-183">Następnie dla każdego elementu tablicy ciągów, można wywołać <xref:System.Enum.Parse%2A> metody konwersji ciągu na wartość wyliczenia równoważne.</span><span class="sxs-lookup"><span data-stu-id="51731-183">Next, for each element of the string array, you can call the <xref:System.Enum.Parse%2A> method to convert the string to its equivalent enumeration value.</span></span> <span data-ttu-id="51731-184">To podejście pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="51731-184">The following example illustrates this approach.</span></span>  
  
     [!code-csharp[System.Enum.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#11)]
     [!code-vb[System.Enum.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#11)]  
  
-   <span data-ttu-id="51731-185">Możesz wywołać <xref:System.Enum.GetValues%2A> metodę, która pobierze tablicę zawierającą podstawowych wartości w wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="51731-185">You can call the <xref:System.Enum.GetValues%2A> method to retrieve an array that contains the underlying values in the enumeration.</span></span> <span data-ttu-id="51731-186">Następnie dla każdego elementu tablicy, możesz wywołać <xref:System.Enum.ToObject%2A> metod konwertowania liczb całkowitych na wartość wyliczenia równoważne.</span><span class="sxs-lookup"><span data-stu-id="51731-186">Next, for each element of the array, you can call the <xref:System.Enum.ToObject%2A> method to convert the integer to its equivalent enumeration value.</span></span> <span data-ttu-id="51731-187">To podejście pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="51731-187">The following example illustrates this approach.</span></span>  
  
     [!code-csharp[System.Enum.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#12)]
     [!code-vb[System.Enum.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#12)]  
  
<a name="Flags"></a>   
## <a name="non-exclusive-members-and-the-flags-attribute"></a><span data-ttu-id="51731-188">Inne niż wyłącznie elementy członkowskie i atrybut flag</span><span class="sxs-lookup"><span data-stu-id="51731-188">Non-exclusive members and the Flags attribute</span></span>  
 <span data-ttu-id="51731-189">Jeden zazwyczaj wyliczenia jest używane do reprezentowania zestawu wartości wzajemnie się wykluczają.</span><span class="sxs-lookup"><span data-stu-id="51731-189">One common use of an enumeration is to represent a set of mutually exclusive values.</span></span> <span data-ttu-id="51731-190">Na przykład `ArrivalStatus` wystąpienie może mieć wartość `Early`, `OnTime`, lub `Late`.</span><span class="sxs-lookup"><span data-stu-id="51731-190">For example, an `ArrivalStatus` instance can have a value of `Early`, `OnTime`, or `Late`.</span></span> <span data-ttu-id="51731-191">Nie ma sensu dla wartości `ArrivalStatus` wystąpienia w celu uwzględnienia więcej niż jeden stała wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-191">It makes no sense for the value of an `ArrivalStatus` instance to reflect more than one enumeration constant.</span></span>  
  
 <span data-ttu-id="51731-192">W innych przypadkach jednak wartość obiektu wyliczenie może zawierać wiele elementów członkowskich wyliczenia i każdy element członkowski reprezentuje pole bitowe wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-192">In other cases, however, the value of an enumeration object can include multiple enumeration members, and each member represents a bit field in the enumeration value.</span></span> <span data-ttu-id="51731-193"><xref:System.FlagsAttribute> Atrybut może służyć do wskazania, że wyliczenie składa się z pól bitowych.</span><span class="sxs-lookup"><span data-stu-id="51731-193">The <xref:System.FlagsAttribute> attribute can be used to indicate that the enumeration consists of bit fields.</span></span> <span data-ttu-id="51731-194">Na przykład wyliczeń o nazwie `Pets` może służyć do wskazania rodzaje zwierzęta w gospodarstwie domowym.</span><span class="sxs-lookup"><span data-stu-id="51731-194">For example, an enumeration named `Pets` might be used to indicate the kinds of pets in a household.</span></span> <span data-ttu-id="51731-195">Mogą być definiowane w następujący sposób.</span><span class="sxs-lookup"><span data-stu-id="51731-195">It can be defined as follows.</span></span>  
  
 [!code-csharp[System.Enum.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#13)]
 [!code-vb[System.Enum.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#13)]  
  
 <span data-ttu-id="51731-196">`Pets` Wyliczenia mogą następnie służyć jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="51731-196">The `Pets` enumeration can then be used as shown in the following example.</span></span>  
  
 [!code-csharp[System.Enum.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#14)]
 [!code-vb[System.Enum.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#14)]  
  
 <span data-ttu-id="51731-197">Poniższe najlepsze rozwiązania, należy używać, podczas definiowania bitowej wyliczenie i stosowanie <xref:System.FlagsAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="51731-197">The following best practices should be used when defining a bitwise enumeration and applying the <xref:System.FlagsAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="51731-198">Użyj <xref:System.FlagsAttribute> atrybutu niestandardowego wyliczania tylko wtedy, gdy operacja bitowa (AND, OR wyłączne lub) do wykonania na podstawie wartości liczbowej.</span><span class="sxs-lookup"><span data-stu-id="51731-198">Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.</span></span>  
  
-   <span data-ttu-id="51731-199">Definiowanie stałych wyliczenia w potęgi liczby dwa, oznacza to, 1, 2, 4, 8 i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="51731-199">Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on.</span></span> <span data-ttu-id="51731-200">Oznacza to, że poszczególne flagi w stałych wyliczenia połączone nie pokrywają się.</span><span class="sxs-lookup"><span data-stu-id="51731-200">This means the individual flags in combined enumeration constants do not overlap.</span></span>  
  
-   <span data-ttu-id="51731-201">Należy rozważyć utworzenie Stała wyliczeniowa dla często używanych flagi kombinacji.</span><span class="sxs-lookup"><span data-stu-id="51731-201">Consider creating an enumerated constant for commonly used flag combinations.</span></span> <span data-ttu-id="51731-202">Na przykład, jeśli masz wyliczenia używane dla operacji We/Wy pliku zawierający stałych wyliczeniowych `Read = 1` i `Write = 2`, należy rozważyć utworzenie Stała wyliczeniowa `ReadWrite = Read OR Write`, która łączy w sobie `Read` i `Write` flagi.</span><span class="sxs-lookup"><span data-stu-id="51731-202">For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags.</span></span> <span data-ttu-id="51731-203">Ponadto operacja bitowa lub używane do łączenia flagi może zostać uznane za zaawansowanych koncepcji, w niektórych sytuacjach, które nie powinny być wymagane dla prostych zadań.</span><span class="sxs-lookup"><span data-stu-id="51731-203">In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.</span></span>  
  
-   <span data-ttu-id="51731-204">Należy zachować ostrożność, jeśli zdefiniować liczbę ujemną jako stała wyliczenia flag, ponieważ wielu pozycji flagi może być ustawiony na 1, które mogą sprawić, że kod jest mylące i Zachęć błędy kodowania.</span><span class="sxs-lookup"><span data-stu-id="51731-204">Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.</span></span>  
  
-   <span data-ttu-id="51731-205">Wygodny sposób, aby sprawdzić, czy ustawiono flagę w wartość liczbową, jest wywołać wystąpienie <xref:System.Enum.HasFlag%2A> metodzie, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="51731-205">A convenient way to test whether a flag is set in a numeric value is to call the instance <xref:System.Enum.HasFlag%2A> method, as shown in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#15)]
     [!code-vb[System.Enum.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#15)]  
  
     <span data-ttu-id="51731-206">Jest to równoważne do wykonywania operacji bitowej i między wartością numeryczną i Stała wyliczeniowa flagę, która ustawia wszystkie bity w wartości liczbowych na zero, które nie odpowiadają flagę, a następnie testowania, czy wynik tej operacji jest równa Stała wyliczeniowa flagi.</span><span class="sxs-lookup"><span data-stu-id="51731-206">It is equivalent to performing a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, and then testing whether the result of that operation is equal to the flag enumerated constant.</span></span> <span data-ttu-id="51731-207">Jest to zilustrowane w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="51731-207">This is illustrated in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#16)]
     [!code-vb[System.Enum.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#16)]  
  
-   <span data-ttu-id="51731-208">Użyj `None` uprzednie Nazwa flagi stałą, której wartość jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="51731-208">Use `None` as the name of the flag enumerated constant whose value is zero.</span></span> <span data-ttu-id="51731-209">Nie można użyć `None` Stała wyliczeniowa w operacji bitowej i do testowania dla flagi, ponieważ zawsze wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="51731-209">You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero.</span></span> <span data-ttu-id="51731-210">Jednak można wykonać logiczny nie bitowe, porównanie wartości liczbowej i `None` Stała wyliczeniowa w celu ustalenia, czy wszystkie bity w wartości liczbowej są ustawiane.</span><span class="sxs-lookup"><span data-stu-id="51731-210">However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set.</span></span> <span data-ttu-id="51731-211">Jest to zilustrowane w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="51731-211">This is illustrated in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#17)]
     [!code-vb[System.Enum.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#17)]  
  
-   <span data-ttu-id="51731-212">Definiuje wartości wyliczenia wyłącznie w celu utworzenia duplikatów stan samego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-212">Do not define an enumeration value solely to mirror the state of the enumeration itself.</span></span> <span data-ttu-id="51731-213">Na przykład nie definiują Stała wyliczeniowa, jedynie oznaczający koniec wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-213">For example, do not define an enumerated constant that merely marks the end of the enumeration.</span></span> <span data-ttu-id="51731-214">Jeśli zachodzi potrzeba określenia ostatnie wartości wyliczenia, sprawdź, czy wartości jawnie.</span><span class="sxs-lookup"><span data-stu-id="51731-214">If you need to determine the last value of the enumeration, check for that value explicitly.</span></span> <span data-ttu-id="51731-215">Ponadto można wykonać sprawdzania zakresu Stała wyliczeniowa imię i nazwisko, jeśli wszystkie wartości z zakresu są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="51731-215">In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.</span></span>  
  
<a name="Methods"></a>   
## <a name="adding-enumeration-methods"></a><span data-ttu-id="51731-216">Dodawanie metody wyliczania</span><span class="sxs-lookup"><span data-stu-id="51731-216">Adding enumeration methods</span></span>  
 <span data-ttu-id="51731-217">Ponieważ Typy wyliczeniowe są zdefiniowane przez język struktury, takich jak `enum` (C#) i `Enum` (Visual Basic), nie można zdefiniować niestandardowe metody dla typu wyliczeniowego, niż tych metod odziedziczone <xref:System.Enum> klasy.</span><span class="sxs-lookup"><span data-stu-id="51731-217">Because enumeration types are defined by language structures, such as `enum` (C#) and `Enum` (Visual Basic), you cannot define custom methods for an enumeration type other than those methods inherited from the <xref:System.Enum> class.</span></span>  <span data-ttu-id="51731-218">Jednak można użyć metody rozszerzenia, aby dodać funkcje do typu wyliczenia określonego.</span><span class="sxs-lookup"><span data-stu-id="51731-218">However, you can use extension methods to add functionality to a particular enumeration type.</span></span>  
  
 <span data-ttu-id="51731-219">W poniższym przykładzie `Grades` wyliczenie reprezentuje możliwe litery ocen, które student może pojawić się w klasie.</span><span class="sxs-lookup"><span data-stu-id="51731-219">In the following example, the `Grades` enumeration represents the possible letter grades that a student may receive in a class.</span></span> <span data-ttu-id="51731-220">Metody rozszerzenia o nazwie `Passing` jest dodawany do `Grades` wpisz, aby każde wystąpienie tego typu teraz "wie" czy reprezentuje klasy przekazywanie, czy nie.</span><span class="sxs-lookup"><span data-stu-id="51731-220">An extension method named `Passing` is added to the `Grades` type so that each instance of that type now "knows" whether it represents a passing grade or not.</span></span>       <span data-ttu-id="51731-221">`Extensions` Klasa zawiera także zmienna statyczna odczytu i zapisu, definiujący klasy korporacyjnej minimalne przekazywanie.</span><span class="sxs-lookup"><span data-stu-id="51731-221">The `Extensions` class also contains a static read-write variable that defines the minimum passing grade.</span></span> <span data-ttu-id="51731-222">Wartość zwracana przez `Passing` — metoda rozszerzenia odzwierciedla bieżącą wartość tej zmiennej.</span><span class="sxs-lookup"><span data-stu-id="51731-222">The return value of the `Passing` extension method reflects the current value of that variable.</span></span>  
  
 [!code-csharp[System.Enum.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/Extensions.cs#18)]
 [!code-vb[System.Enum.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/Extensions.vb#18)]  
  
   
  
## Examples  
 <span data-ttu-id="51731-223">Poniższy przykład pokazuje, przy użyciu funkcji wyliczania do reprezentowania wartości o nazwie i inny wyliczenia do reprezentowania pola bitowe o nazwie.</span><span class="sxs-lookup"><span data-stu-id="51731-223">The following example demonstrates using an enumeration to represent named values and another enumeration to represent named bit fields.</span></span>  
  
 [!code-cpp[enummain#1](~/samples/snippets/cpp/VS_Snippets_CLR/enummain/CPP/EnumMain.cpp#1)]
 [!code-csharp[enummain#1](~/samples/snippets/csharp/VS_Snippets_CLR/enummain/CS/EnumMain.cs#1)]
 [!code-vb[enummain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enummain/VB/EnumMain.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="51731-224">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="51731-224">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.ValueType" />
    <altmember cref="T:System.FlagsAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Enum ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Enum();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51731-225">Inicjuje nowe wystąpienie klasy <see cref="T:System.Enum" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="51731-225">Initializes a new instance of the <see cref="T:System.Enum" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (target As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="enum.CompareTo target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="51731-226">Obiekt do porównania lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-226">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="51731-227">Porównuje to wystąpienie z określonym obiektem i zwraca wskazanie ich względnych wartości.</span><span class="sxs-lookup"><span data-stu-id="51731-227">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="51731-228">Liczba ze znakiem, która wskazuje wartości względne tego wystąpienia i <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="51731-228">A signed number that indicates the relative values of this instance and <paramref name="target" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="51731-229">Wartość</span><span class="sxs-lookup"><span data-stu-id="51731-229">Value</span></span> 
 </term><description> <span data-ttu-id="51731-230">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="51731-230">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="51731-231">Mniej niż zero</span><span class="sxs-lookup"><span data-stu-id="51731-231">Less than zero</span></span> 
 </term><description> <span data-ttu-id="51731-232">Wartość tego wystąpienia jest mniejsza niż wartość <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="51731-232">The value of this instance is less than the value of <paramref name="target" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="51731-233">Zero</span><span class="sxs-lookup"><span data-stu-id="51731-233">Zero</span></span> 
 </term><description> <span data-ttu-id="51731-234">Wartość tego wystąpienia jest równa wartości <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="51731-234">The value of this instance is equal to the value of <paramref name="target" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="51731-235">Większe od zera</span><span class="sxs-lookup"><span data-stu-id="51731-235">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="51731-236">Wartość tego wystąpienia jest większa niż wartość <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="51731-236">The value of this instance is greater than the value of <paramref name="target" />.</span></span>  
  
<span data-ttu-id="51731-237">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-237">-or-</span></span> 
 <span data-ttu-id="51731-238"><paramref name="target" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-238"><paramref name="target" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51731-239">Poniższy przykład ilustruje użycie `CompareTo` w kontekście `Enum`.</span><span class="sxs-lookup"><span data-stu-id="51731-239">The following example illustrates the use of `CompareTo` in the context of `Enum`.</span></span>  
  
 [!code-cpp[enumcompareto#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumcompareto/CPP/EnumCompareTo.cpp#1)]
 [!code-csharp[enumcompareto#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumcompareto/CS/EnumCompareTo.cs#1)]
 [!code-vb[enumcompareto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumcompareto/VB/EnumCompareTo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-240"><paramref name="target" /> i to wystąpienie są tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="51731-240"><paramref name="target" /> and this instance are not the same type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51731-241">To wystąpienie nie jest typem <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, lub <see cref="T:System.UInt64" />.</span><span class="sxs-lookup"><span data-stu-id="51731-241">This instance is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />.</span></span></exception>
        <altmember cref="M:System.Enum.Equals(System.Object)" />
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="51731-242">To wystąpienie ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="51731-242">This instance is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="enum.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="51731-243">Obiekt do porównania z tym wystąpieniem lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-243">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="51731-244">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</span><span class="sxs-lookup"><span data-stu-id="51731-244">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="51731-245"><see langword="true" /> Jeśli <paramref name="obj" /> jest wartością wyliczenia tego samego typu i o tej samej wartości podstawowej, jak to wystąpienie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51731-245"><see langword="true" /> if <paramref name="obj" /> is an enumeration value of the same type and with the same underlying value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-246"><xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType> Zastąpienia metody <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> do zdefiniowania, jak elementy członkowskie wyliczenia są oceniane pod kątem równości.</span><span class="sxs-lookup"><span data-stu-id="51731-246">The <xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType> method overrides <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> to define how enumeration members are evaluated for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51731-247">Poniższy przykład ilustruje użycie <xref:System.Enum.Equals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-247">The following example illustrates the use of the <xref:System.Enum.Equals%2A> method.</span></span>  
  
 [!code-cpp[enumequals#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumequals/CPP/EnumEquals.cpp#1)]
 [!code-csharp[enumequals#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumequals/CS/EnumEquals.cs#1)]
 [!code-vb[enumequals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumequals/VB/EnumEquals.vb#1)]  
  
 <span data-ttu-id="51731-248">W poniższym przykładzie zdefiniowano dwa typy wyliczeniowe, `SledDog` i `WorkDog`.</span><span class="sxs-lookup"><span data-stu-id="51731-248">The following example defines two enumeration types, `SledDog` and `WorkDog`.</span></span> <span data-ttu-id="51731-249">`SledDog` Wyliczenie ma dwa elementy członkowskie, `SledDog.AlaskanMalamute` i `SledDog.Malamute`, które mają taką samą wartość podstawowy.</span><span class="sxs-lookup"><span data-stu-id="51731-249">The `SledDog` enumeration has two members, `SledDog.AlaskanMalamute` and `SledDog.Malamute`, that have the same underlying value.</span></span> <span data-ttu-id="51731-250">Wywołanie <xref:System.Enum.Equals%2A> metoda wskazuje, że te wartości są równe, ponieważ ich podstawowej wartości są takie same.</span><span class="sxs-lookup"><span data-stu-id="51731-250">The call to the <xref:System.Enum.Equals%2A> method indicates that these values are equal because their underlying values are the same.</span></span> <span data-ttu-id="51731-251">`SledDog.Malamute` i `WorkDog.Newfoundland` członkowie mają tej samej wartości podstawowej, mimo że reprezentują typy wyliczeniowe różne.</span><span class="sxs-lookup"><span data-stu-id="51731-251">The `SledDog.Malamute` and `WorkDog.Newfoundland` members have the same underlying value, although they represent different enumeration types.</span></span> <span data-ttu-id="51731-252">Wywołanie <xref:System.Enum.Equals%2A> metoda wskazuje, że te wartości nie są równe.</span><span class="sxs-lookup"><span data-stu-id="51731-252">A call to the <xref:System.Enum.Equals%2A> method indicates that these values are not equal.</span></span>  
  
 [!code-csharp[System.Enum.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.equals/cs/enumequals.cs#1)]
 [!code-vb[System.Enum.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.equals/vb/enumequals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Enum.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (Type enumType, object value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.Type enumType, object value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Format(System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (enumType As Type, value As Object, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(Type ^ enumType, System::Object ^ value, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Format : Type * obj * string -&gt; string" Usage="System.Enum.Format (enumType, value, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-253">Typ wyliczenia wartość do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="51731-253">The enumeration type of the value to convert.</span></span></param>
        <param name="value"><span data-ttu-id="51731-254">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-254">The value to convert.</span></span></param>
        <param name="format"><span data-ttu-id="51731-255">Format danych wyjściowych do użycia.</span><span class="sxs-lookup"><span data-stu-id="51731-255">The output format to use.</span></span></param>
        <summary><span data-ttu-id="51731-256">Konwertuje określoną wartość określonego typu wyliczeniowego na jego reprezentację ciągu równoważnego zgodnie z określonym formacie.</span><span class="sxs-lookup"><span data-stu-id="51731-256">Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.</span></span></summary>
        <returns><span data-ttu-id="51731-257">Reprezentacja ciągu <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-257">A string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-258">W poniższej tabeli przedstawiono prawidłowe wartości dla `format` parametru.</span><span class="sxs-lookup"><span data-stu-id="51731-258">The following table shows the valid values for the `format` parameter.</span></span>  
  
|<span data-ttu-id="51731-259">Format</span><span class="sxs-lookup"><span data-stu-id="51731-259">Format</span></span>|<span data-ttu-id="51731-260">Opis</span><span class="sxs-lookup"><span data-stu-id="51731-260">Description</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="51731-261">„G” lub „g”</span><span class="sxs-lookup"><span data-stu-id="51731-261">"G" or "g"</span></span>|<span data-ttu-id="51731-262">Jeśli `value` jest równy nazwanej stałej wyliczenia, nazwa tej stałej jest zwracana; w przeciwnym razie wartość dziesiętna ekwiwalent `value` jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="51731-262">If `value` is equal to a named enumerated constant, the name of that constant is returned; otherwise, the decimal equivalent of `value` is returned.</span></span><br /><br /> <span data-ttu-id="51731-263">Na przykład załóżmy, że tylko Stała wyliczeniowa jest o nazwie czerwona, a jego wartość wynosi 1.</span><span class="sxs-lookup"><span data-stu-id="51731-263">For example, suppose the only enumerated constant is named Red, and its value is 1.</span></span> <span data-ttu-id="51731-264">Jeśli `value` jest określony jako 1, ten format zwraca "Red".</span><span class="sxs-lookup"><span data-stu-id="51731-264">If `value` is specified as 1, this format returns "Red".</span></span> <span data-ttu-id="51731-265">Jednak jeśli `value` określono jako 2, ten format zwraca wartość "2".</span><span class="sxs-lookup"><span data-stu-id="51731-265">However, if `value` is specified as 2, this format returns "2".</span></span><br /><br /> <span data-ttu-id="51731-266">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-266">-or-</span></span><br /><br /> <span data-ttu-id="51731-267">Jeśli <xref:System.FlagsAttribute> niestandardowy atrybut jest stosowany do wyliczenia `value` jest traktowany jako pole bitowe, który zawiera co najmniej jeden flagi, które składają się z co najmniej jeden usługi bits.</span><span class="sxs-lookup"><span data-stu-id="51731-267">If the <xref:System.FlagsAttribute> custom attribute is applied to the enumeration, `value` is treated as a bit field that contains one or more flags that consist of one or more bits.</span></span><br /><br /> <span data-ttu-id="51731-268">Jeśli `value` równy kombinacji nosi nazwę stałych wyliczeniowych, listę rozdzielonych ogranicznikami nazwy tych stałych jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="51731-268">If `value` is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned.</span></span> <span data-ttu-id="51731-269">`value` przeszukiwany jest dla flag, przechodząc od flagi mający największą wartość do najmniejszej wartości.</span><span class="sxs-lookup"><span data-stu-id="51731-269">`value` is searched for flags, going from the flag with the largest value to the smallest value.</span></span> <span data-ttu-id="51731-270">Dla każdego flagę, która odnosi się do pola bitowego, w `value`, nazwa stałej jest połączonych do listy rozdzielonych ogranicznikami.</span><span class="sxs-lookup"><span data-stu-id="51731-270">For each flag that corresponds to a bit field in `value`, the name of the constant is concatenated to the delimiter-separated list.</span></span> <span data-ttu-id="51731-271">Wartość tej flagi jest wykluczany z dalszego rozpatrzenia, a wyszukiwanie jest kontynuowane flagi dalej.</span><span class="sxs-lookup"><span data-stu-id="51731-271">The value of that flag is then excluded from further consideration, and the search continues for the next flag.</span></span><br /><br /> <span data-ttu-id="51731-272">Jeśli `value` nie jest równa kombinację nazwanych stałych wyliczeniowych dziesiętna ekwiwalent `value` jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="51731-272">If `value` is not equal to a combination of named enumerated constants, the decimal equivalent of `value` is returned.</span></span>|  
|<span data-ttu-id="51731-273">„X” lub „x”</span><span class="sxs-lookup"><span data-stu-id="51731-273">"X" or "x"</span></span>|<span data-ttu-id="51731-274">Reprezentuje `value` w formacie szesnastkowym bez wiodącego "0 x".</span><span class="sxs-lookup"><span data-stu-id="51731-274">Represents `value` in hexadecimal format without a leading "0x".</span></span>|  
|<span data-ttu-id="51731-275">„D” lub „d”</span><span class="sxs-lookup"><span data-stu-id="51731-275">"D" or "d"</span></span>|<span data-ttu-id="51731-276">Reprezentuje `value` w formie dziesiętnej.</span><span class="sxs-lookup"><span data-stu-id="51731-276">Represents `value` in decimal form.</span></span>|  
|<span data-ttu-id="51731-277">„F” lub „f”</span><span class="sxs-lookup"><span data-stu-id="51731-277">"F" or "f"</span></span>|<span data-ttu-id="51731-278">Działa identycznie do "G" lub "g", chyba że <xref:System.FlagsAttribute> nie musi znajdować się na <xref:System.Enum> deklaracji.</span><span class="sxs-lookup"><span data-stu-id="51731-278">Behaves identically to "G" or "g", except that the <xref:System.FlagsAttribute> is not required to be present on the <xref:System.Enum> declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="51731-279">Poniższy przykład ilustruje użycie `Format` w kontekście `Enum`.</span><span class="sxs-lookup"><span data-stu-id="51731-279">The following example illustrates the use of `Format` in the context of `Enum`.</span></span>  
  
 [!code-cpp[enumformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumformat/CPP/EnumFormat.cpp#1)]
 [!code-csharp[enumformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumformat/CS/EnumFormat.cs#1)]
 [!code-vb[enumformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumformat/VB/EnumFormat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-280"><paramref name="enumType" />, <paramref name="value" />, Lub <paramref name="format" /> parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-280">The <paramref name="enumType" />, <paramref name="value" />, or <paramref name="format" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-281"><paramref name="enumType" /> Parametr nie jest <see cref="T:System.Enum" /> typu.</span><span class="sxs-lookup"><span data-stu-id="51731-281">The <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" /> type.</span></span>  
  
<span data-ttu-id="51731-282">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-282">-or-</span></span> 
<span data-ttu-id="51731-283"><paramref name="value" /> Pochodzi z wyliczeniem, która różni się w typie z <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="51731-283">The <paramref name="value" /> is from an enumeration that differs in type from <paramref name="enumType" />.</span></span>  
  
<span data-ttu-id="51731-284">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-284">-or-</span></span> 
<span data-ttu-id="51731-285">Typ <paramref name="value" /> nie jest podstawowym typem <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="51731-285">The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="51731-286"><paramref name="format" /> Parametrów zawiera nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="51731-286">The <paramref name="format" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51731-287"><paramref name="format" /> jest równy "X", ale typ wyliczeniowy jest nieznany.</span><span class="sxs-lookup"><span data-stu-id="51731-287"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
        <altmember cref="M:System.Enum.ToString(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="51731-288">Typy formatowania na platformie .NET</span><span class="sxs-lookup"><span data-stu-id="51731-288">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="51731-289">Wyliczanie ciągów formatujących</span><span class="sxs-lookup"><span data-stu-id="51731-289">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="enum.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51731-290">Zwraca wartość skrótu dla wartości tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="51731-290">Returns the hash code for the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="51731-291">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="51731-291">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetName(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (enumType As Type, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member GetName : Type * obj -&gt; string" Usage="System.Enum.GetName (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-292">Typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-292">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="51731-293">Wartość określonego Stała wyliczeniowa pod względem jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="51731-293">The value of a particular enumerated constant in terms of its underlying type.</span></span></param>
        <summary><span data-ttu-id="51731-294">Pobiera nazwę stałej w określonym wyliczenia, która ma określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="51731-294">Retrieves the name of the constant in the specified enumeration that has the specified value.</span></span></summary>
        <returns><span data-ttu-id="51731-295">Ciąg zawierający nazwę Stała wyliczeniowa w <paramref name="enumType" /> o wartości <paramref name="value" />; lub <see langword="null" /> Jeśli zostanie znaleziony taki stałej.</span><span class="sxs-lookup"><span data-stu-id="51731-295">A string containing the name of the enumerated constant in <paramref name="enumType" /> whose value is <paramref name="value" />; or <see langword="null" /> if no such constant is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-296">Jeśli wiele elementów członkowskich wyliczenia mają taką samą wartość bazowego <xref:System.Enum.GetName%2A> metoda gwarantuje, że zwróci nazwę jednego z tych elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-296">If multiple enumeration members have the same underlying value, the <xref:System.Enum.GetName%2A> method guarantees that it will return the name of one of those enumeration members.</span></span> <span data-ttu-id="51731-297">Jednak go nie gwarantuje, że zawsze zwróci nazwę tego samego członka wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-297">However, it does not guarantee that it will always return the name of the same enumeration member.</span></span> <span data-ttu-id="51731-298">W rezultacie gdy wiele elementów członkowskich wyliczenia mają taką samą wartość, kod aplikacji powinny nigdy nie zależą od metody zwraca nazwę określonego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="51731-298">As a result, when multiple enumeration members have the same value, your application code should never depend on the method returning a particular member's name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51731-299">Poniższy przykład ilustruje użycie `GetName`.</span><span class="sxs-lookup"><span data-stu-id="51731-299">The following example illustrates the use of `GetName`.</span></span>  
  
 [!code-cpp[enumgetname#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetname/CPP/EnumGetName.cpp#1)]
 [!code-csharp[enumgetname#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetname/CS/EnumGetName.cs#1)]
 [!code-vb[enumgetname#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetname/VB/EnumGetName.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-300"><paramref name="enumType" /> lub <paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-300"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-301"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-301"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="51731-302">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-302">-or-</span></span> 
 <span data-ttu-id="51731-303"><paramref name="value" /> nie jest ani typu <paramref name="enumType" /> ani nie ma ten sam typ podstawowy jako <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="51731-303"><paramref name="value" /> is neither of type <paramref name="enumType" /> nor does it have the same underlying type as <paramref name="enumType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNames">
      <MemberSignature Language="C#" Value="public static string[] GetNames (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetNames(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetNames(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNames (enumType As Type) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetNames(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetNames : Type -&gt; string[]" Usage="System.Enum.GetNames enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-304">Typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-304">An enumeration type.</span></span></param>
        <summary><span data-ttu-id="51731-305">Pobiera tablicę nazw stałych w wyliczeniu określony.</span><span class="sxs-lookup"><span data-stu-id="51731-305">Retrieves an array of the names of the constants in a specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="51731-306">Tablica ciągów nazw stałe w <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="51731-306">A string array of the names of the constants in <paramref name="enumType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-307">Elementy w tablicy zwracanej wartości są sortowane według wartości binarne stałych wyliczeniowych (czyli przez ich wielkość bez znaku).</span><span class="sxs-lookup"><span data-stu-id="51731-307">The elements of the return value array are sorted by the binary values of the enumerated constants (that is, by their unsigned magnitude).</span></span> <span data-ttu-id="51731-308">W poniższym przykładzie przedstawiono Wyświetla informacje o tablica zwrócona przez <xref:System.Enum.GetNames%2A> metoda wyliczania obejmujący ujemnych, zero i wartość dodatnią.</span><span class="sxs-lookup"><span data-stu-id="51731-308">The following example provides displays information about the array returned by the <xref:System.Enum.GetNames%2A> method for an enumeration that includes a negative, zero, and a positive value.</span></span>  
  
 [!code-csharp[System.Enum.GetNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getnames/cs/getnames1.cs#1)]
 [!code-vb[System.Enum.GetNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getnames/vb/getnames1.vb#1)]  
  
 <span data-ttu-id="51731-309">W przypadku stałych wyliczeniowych o tej samej wartości kolejności odpowiadających im nazw jest nieokreślona.</span><span class="sxs-lookup"><span data-stu-id="51731-309">If there are enumerated constants with same value, the order of their corresponding names is unspecified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51731-310">Poniższy przykład ilustruje użycie <xref:System.Enum.GetNames%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-310">The following example illustrates the use of the <xref:System.Enum.GetNames%2A> method.</span></span>  
  
 [!code-cpp[enumgetnames#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetnames/CPP/EnumGetNames.cpp#1)]
 [!code-csharp[enumgetnames#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetnames/CS/EnumGetNames.cs#1)]
 [!code-vb[enumgetnames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetnames/VB/EnumGetNames.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-311"><paramref name="enumType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-311"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-312"><paramref name="enumType" /> Parametr nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-312"><paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="enum.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51731-313">Zwraca numer kierunkowy typu bazowego typu tego elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-313">Returns the type code of the underlying type of this enumeration member.</span></span></summary>
        <returns><span data-ttu-id="51731-314">Kod typu bazowego typu tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="51731-314">The type code of the underlying type of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51731-315">Typ wyliczeniowy jest nieznany.</span><span class="sxs-lookup"><span data-stu-id="51731-315">The enumeration type is unknown.</span></span></exception>
        <altmember cref="M:System.Enum.GetUnderlyingType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnderlyingType">
      <MemberSignature Language="C#" Value="public static Type GetUnderlyingType (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetUnderlyingType(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetUnderlyingType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnderlyingType (enumType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetUnderlyingType(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetUnderlyingType : Type -&gt; Type" Usage="System.Enum.GetUnderlyingType enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-316">Wyliczenie, którego podstawowym typem zostanie pobrana.</span><span class="sxs-lookup"><span data-stu-id="51731-316">The enumeration whose underlying type will be retrieved.</span></span></param>
        <summary><span data-ttu-id="51731-317">Zwraca typ podstawowy elementu określonego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-317">Returns the underlying type of the specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="51731-318">Typ podstawowy elementu <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="51731-318">The underlying type of <paramref name="enumType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-319"><xref:System.Enum> Struktury umożliwia wartości, które mają być reprezentowane jako nazwane stałe.</span><span class="sxs-lookup"><span data-stu-id="51731-319">The <xref:System.Enum> structure enables values to be represented as named constants.</span></span> <span data-ttu-id="51731-320">Typ danych wartości wyliczenia jest znany jako jej typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="51731-320">The data type of the enumeration's values is known as its underlying type.</span></span> <span data-ttu-id="51731-321">Na przykład, podstawowym typem <xref:System.DayOfWeek> wyliczenia, która składa się ze stałych, które reprezentują każdego dnia, tygodnia (<xref:System.DayOfWeek.Monday?displayProperty=nameWithType>, <xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType>i tak dalej), jest <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="51731-321">For example, the underlying type of the <xref:System.DayOfWeek> enumeration, which consists of constants that represent each day of the week (<xref:System.DayOfWeek.Monday?displayProperty=nameWithType>, <xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType>, and so on), is <xref:System.Int32>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51731-322">Poniższy przykład wywołuje <xref:System.Enum.GetUnderlyingType%2A> metodę, aby wyświetlić typ podstawowy elementu niektórych elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-322">The following example calls the <xref:System.Enum.GetUnderlyingType%2A> method to display the underlying type of some enumeration members.</span></span>  
  
 [!code-csharp[System.Enum.GetUnderlyingType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getunderlyingtype/cs/getunderlyingtype1.cs#1)]
 [!code-vb[System.Enum.GetUnderlyingType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getunderlyingtype/vb/getunderlyingtype1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-323"><paramref name="enumType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-323"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-324"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-324"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.GetTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public static Array GetValues (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array GetValues(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetValues(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValues (enumType As Type) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ GetValues(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetValues : Type -&gt; Array" Usage="System.Enum.GetValues enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-325">Typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-325">An enumeration type.</span></span></param>
        <summary><span data-ttu-id="51731-326">Pobiera tablicę wartości stałych w wyliczeniu określony.</span><span class="sxs-lookup"><span data-stu-id="51731-326">Retrieves an array of the values of the constants in a specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="51731-327">Tablica, która zawiera wartości stałych w <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="51731-327">An array that contains the values of the constants in <paramref name="enumType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-328">Elementy tablicy są sortowane według wartości binarne stałych wyliczenia (czyli przez ich wielkość bez znaku).</span><span class="sxs-lookup"><span data-stu-id="51731-328">The elements of the array are sorted by the binary values of the enumeration constants (that is, by their unsigned magnitude).</span></span> <span data-ttu-id="51731-329">Poniższy przykład wyświetla informacje o tablica zwrócona przez <xref:System.Enum.GetValues%2A> metodę wyliczenie, które zawiera wartość ujemną, zero i wartość dodatnią.</span><span class="sxs-lookup"><span data-stu-id="51731-329">The following example displays information about the array returned by the <xref:System.Enum.GetValues%2A> method for an enumeration that includes a negative value, zero, and a positive value.</span></span>  
  
 [!code-csharp[System.Enum.GetValues#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues1.cs#1)]
 [!code-vb[System.Enum.GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues1.vb#1)]  
  
 <span data-ttu-id="51731-330"><xref:System.Enum.GetValues%2A> Metoda zwraca tablicę, która zawiera wartość dla każdego elementu członkowskiego `enumType` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-330">The <xref:System.Enum.GetValues%2A> method returns an array that contains a value for each member of the `enumType` enumeration.</span></span> <span data-ttu-id="51731-331">Jeśli wiele elementów członkowskich mają taką samą wartość, zwróconej tablicy zawiera zduplikowane wartości.</span><span class="sxs-lookup"><span data-stu-id="51731-331">If multiple members have the same value, the returned array includes duplicate values.</span></span> <span data-ttu-id="51731-332">W takim przypadku wywołanie <xref:System.Enum.GetName%2A> metody z każdej wartości zwróconej tablicy nie przywraca unikatowych nazw przypisane do elementów członkowskich, które mają zduplikowane wartości.</span><span class="sxs-lookup"><span data-stu-id="51731-332">In this case, calling the <xref:System.Enum.GetName%2A> method with each value in the returned array does not restore the unique names assigned to members that have duplicate values.</span></span> <span data-ttu-id="51731-333">Aby pobrać wszystkie nazwy elementów członkowskich wyliczenia pomyślnie, należy wywołać <xref:System.Enum.GetNames%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-333">To retrieve all the names of enumeration members successfully, call the <xref:System.Enum.GetNames%2A> method.</span></span>  
  
 <span data-ttu-id="51731-334"><xref:System.Enum.GetValues%2A> Nie można wywołać metody przy użyciu odbicia w kontekstu reflection-only.</span><span class="sxs-lookup"><span data-stu-id="51731-334">The <xref:System.Enum.GetValues%2A> method cannot be invoked by using reflection in a reflection-only context.</span></span> <span data-ttu-id="51731-335">Zamiast tego można pobrać wartości wszystkich elementów członkowskich wyliczenia za pomocą <xref:System.Type.GetFields%2A?displayProperty=nameWithType> metodę, aby uzyskać tablicę <xref:System.Reflection.FieldInfo> obiektów, które reprezentują elementy członkowskie wyliczenia, a następnie wywołać <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType> metody dla każdego elementu tablicy.</span><span class="sxs-lookup"><span data-stu-id="51731-335">Instead, you can retrieve the value of all enumeration members by using the <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method to get an array of <xref:System.Reflection.FieldInfo> objects that represent enumeration members and then call the <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType> method on each element of the array.</span></span> <span data-ttu-id="51731-336">W poniższym przykładzie pokazano tej techniki.</span><span class="sxs-lookup"><span data-stu-id="51731-336">The following example illustrates this technique.</span></span> <span data-ttu-id="51731-337">Zdefiniuj wyliczenie następujące w zestawie o nazwie Enumerations.dll wymaga:</span><span class="sxs-lookup"><span data-stu-id="51731-337">It requires that you define the following enumeration in an assembly named Enumerations.dll:</span></span>  
  
 [!code-csharp[System.Enum.GetValues#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#2)]
 [!code-vb[System.Enum.GetValues#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#2)]  
  
 <span data-ttu-id="51731-338">Zestaw jest ładowany w kontekstu reflection-only <xref:System.Type> obiekt, który reprezentuje `Pets` wyliczenie zostanie uruchomiony, tablicę <xref:System.Reflection.FieldInfo> obiekty są pobierane i wartości pól są wyświetlane w konsoli.</span><span class="sxs-lookup"><span data-stu-id="51731-338">The assembly is loaded in a reflection-only context, a <xref:System.Type> object that represents the `Pets` enumeration is instantiated, an array of <xref:System.Reflection.FieldInfo> objects is retrieved, and the field values are displayed to the console.</span></span>  
  
 [!code-csharp[System.Enum.GetValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#3)]
 [!code-vb[System.Enum.GetValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="51731-339">Poniższy przykład ilustruje użycie <xref:System.Enum.GetValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="51731-339">The following example illustrates the use of <xref:System.Enum.GetValues%2A>.</span></span>  
  
 [!code-cpp[enumgetvalues#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetvalues/CPP/EnumGetValues.cpp#1)]
 [!code-csharp[enumgetvalues#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetvalues/CS/EnumGetValues.cs#1)]
 [!code-vb[enumgetvalues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetvalues/VB/EnumGetValues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-340"><paramref name="enumType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-340"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-341"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-341"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51731-342">Metoda jest wywoływana przez odbicie w kontekstu reflection-only</span><span class="sxs-lookup"><span data-stu-id="51731-342">The method is invoked by reflection in a reflection-only context,</span></span> 
<span data-ttu-id="51731-343">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-343">-or-</span></span> 
 <span data-ttu-id="51731-344"><paramref name="enumType" /> jest to typ z zestawu, który został załadowany do kontekstu reflection-only.</span><span class="sxs-lookup"><span data-stu-id="51731-344"><paramref name="enumType" /> is a type from an assembly loaded in a reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasFlag">
      <MemberSignature Language="C#" Value="public bool HasFlag (Enum flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasFlag(class System.Enum flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.HasFlag(System.Enum)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFlag (flag As Enum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFlag(Enum ^ flag);" />
      <MemberSignature Language="F#" Value="member this.HasFlag : Enum -&gt; bool" Usage="enum.HasFlag flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Enum" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="51731-345">Wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-345">An enumeration value.</span></span></param>
        <summary><span data-ttu-id="51731-346">Określa, czy co najmniej jednego pola bitowe są ustawiane w ramach bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="51731-346">Determines whether one or more bit fields are set in the current instance.</span></span></summary>
        <returns><span data-ttu-id="51731-347"><see langword="true" /> Jeśli pole bitowe lub bitowego pola, które są ustawiane w <paramref name="flag" /> również są ustawione w ramach bieżącego wystąpienia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51731-347"><see langword="true" /> if the bit field or bit fields that are set in <paramref name="flag" /> are also set in the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-348"><xref:System.Enum.HasFlag%2A> Metoda zwraca wynik następujące wyrażenie logiczne.</span><span class="sxs-lookup"><span data-stu-id="51731-348">The <xref:System.Enum.HasFlag%2A> method returns the result of the following Boolean expression.</span></span>  
  
```  
thisInstance And flag = flag   
```  
  
 <span data-ttu-id="51731-349">Jeśli wartość podstawową `flag` wynosi zero, metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="51731-349">If the underlying value of `flag` is zero, the method returns `true`.</span></span> <span data-ttu-id="51731-350">Jeśli to zachowanie nie jest pożądane, możesz użyć <xref:System.Enum.Equals%2A> metody do testowania pod kątem równości zero i wywołania <xref:System.Enum.HasFlag%2A> tylko wtedy, gdy wartość podstawową `flag` jest różna od zera, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="51731-350">If this behavior is not desirable, you can use the <xref:System.Enum.Equals%2A> method to test for equality with zero and call <xref:System.Enum.HasFlag%2A> only if the underlying value of `flag` is non-zero, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Enum.HasFlag#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag0.cs#1)]
 [!code-vb[System.Enum.HasFlag#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag0.vb#1)]  
  
 <span data-ttu-id="51731-351"><xref:System.Enum.HasFlag%2A> Metoda jest przeznaczona do użycia z typów wyliczeń, które są oznaczone <xref:System.FlagsAttribute> atrybutu i może służyć do określenia, czy ustawiono wiele pól bitowych.</span><span class="sxs-lookup"><span data-stu-id="51731-351">The <xref:System.Enum.HasFlag%2A> method is designed to be used with enumeration types that are marked with the <xref:System.FlagsAttribute> attribute and can be used to determine whether multiple bit fields are set.</span></span> <span data-ttu-id="51731-352">Dla typów wyliczenia, które nie są oznaczone przez <xref:System.FlagsAttribute> atrybutu, albo użyć wywołania <xref:System.Enum.Equals%2A> metody lub <xref:System.Enum.CompareTo%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-352">For enumeration types that are not marked with the <xref:System.FlagsAttribute> attribute, call either the <xref:System.Enum.Equals%2A> method or the <xref:System.Enum.CompareTo%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51731-353">W poniższym przykładzie zdefiniowano `ItemsOrdered` wyliczenie, które odzwierciedla kategorie elementów, które klient może zamówić w restauracji.</span><span class="sxs-lookup"><span data-stu-id="51731-353">The following example defines an `ItemsOrdered` enumeration that reflects categories of items that a customer can order in a restaurant.</span></span> <span data-ttu-id="51731-354">Przykład sprawdza, czy zarówno dań głównych, jak przemysł spożywczy złożenia zamówienia klienta.</span><span class="sxs-lookup"><span data-stu-id="51731-354">The example tests whether the customer has ordered both an entrée and a beverage.</span></span>  
  
 [!code-csharp[System.Enum.HasFlag#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag1.cs#2)]
 [!code-vb[System.Enum.HasFlag#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-355"><paramref name="flag" /> jest innego typu niż bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="51731-355"><paramref name="flag" /> is a different type than the current instance.</span></span></exception>
        <altmember cref="T:System.FlagsAttribute" />
        <altmember cref="M:System.Enum.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.IsDefined(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (enumType As Type, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IsDefined : Type * obj -&gt; bool" Usage="System.Enum.IsDefined (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-356">Typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-356">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="51731-357">Wartość lub nazwa stałej w <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="51731-357">The value or name of a constant in <paramref name="enumType" />.</span></span></param>
        <summary><span data-ttu-id="51731-358">Zwraca wartość typu Boolean określającą czy danej wartości typu całkowitego lub jego nazwę w postaci ciągu, istnieje w wyliczeniu określony.</span><span class="sxs-lookup"><span data-stu-id="51731-358">Returns a Boolean telling whether a given integral value, or its name as a string, exists in a specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="51731-359"><see langword="true" /> Jeśli stałej w <paramref name="enumType" /> ma wartość równą <paramref name="value" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51731-359"><see langword="true" /> if a constant in <paramref name="enumType" /> has a value equal to <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-360">`value` Parametru może być dowolną z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="51731-360">The `value` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="51731-361">Dowolny element członkowski typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-361">Any member of type `enumType`.</span></span>  
  
-   <span data-ttu-id="51731-362">Zmienna, której wartość jest elementem członkowskim wyliczenia typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-362">A variable whose value is an enumeration member of type `enumType`.</span></span>  
  
-   <span data-ttu-id="51731-363">Ciąg reprezentujący nazwę elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-363">The string representation of the name of an enumeration member.</span></span> <span data-ttu-id="51731-364">Znaki do ciągu muszą mieć ten sam przypadek jako nazwa składowej wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-364">The characters in the string must have the same case as the enumeration member name.</span></span>  
  
-   <span data-ttu-id="51731-365">Wartości typu bazowego `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-365">A value of the underlying type of `enumType`.</span></span>  
  
 <span data-ttu-id="51731-366">Jeśli stałe w `enumType` zdefiniować zestaw pól bitowych i `value` zawiera wartości, nazwy lub podstawowej wartości wielu pól bitowych, <xref:System.Enum.IsDefined%2A> metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="51731-366">If the constants in `enumType` define a set of bit fields and `value` contains the values, names, or underlying values of multiple bit fields, the <xref:System.Enum.IsDefined%2A> method returns `false`.</span></span> <span data-ttu-id="51731-367">Innymi słowy, w przypadku wyliczenia, które definiują zestaw pól bitowych, metoda zależy tylko czy polem bitowym pojedynczego należy do wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-367">In other words, for enumerations that define a set of bit fields, the method determines only whether a single bit field belongs to the enumeration.</span></span> <span data-ttu-id="51731-368">Aby ustalić, czy wiele pola bitowe są ustawiane w typ wyliczeniowy, który jest oznaczony za pomocą <xref:System.FlagsAttribute> atrybut, można wywołać <xref:System.Enum.HasFlag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-368">To determine whether multiple bit fields are set in an enumeration type that is tagged with the <xref:System.FlagsAttribute> attribute, you can call the <xref:System.Enum.HasFlag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51731-369">W poniższym przykładzie zdefiniowano wyliczenia o nazwie `PetType` składający się z pól bitowych indywidualnych.</span><span class="sxs-lookup"><span data-stu-id="51731-369">The following example defines an enumeration named `PetType` that consists of individual bit fields.</span></span> <span data-ttu-id="51731-370">Następnie wywołuje <xref:System.Enum.IsDefined%2A> metody z podstawowych wartości wyliczenia, nazwy ciągu i złożonych wartości, które wynikają z ustawienia wielu pól bitowych to możliwe.</span><span class="sxs-lookup"><span data-stu-id="51731-370">It then calls the <xref:System.Enum.IsDefined%2A> method with possible underlying enumeration values, string names, and composite values that result from setting multiple bit fields.</span></span>  
  
 [!code-csharp[System.Enum.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined1.cs#1)]
 [!code-vb[System.Enum.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/IsDefined1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-371"><paramref name="enumType" /> lub <paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-371"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-372"><paramref name="enumType" /> nie jest <see langword="Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-372"><paramref name="enumType" /> is not an <see langword="Enum" />.</span></span>  
  
<span data-ttu-id="51731-373">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-373">-or-</span></span> 
<span data-ttu-id="51731-374">Typ <paramref name="value" /> jest wyliczeniem, ale nie jest wyliczenia typu <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="51731-374">The type of <paramref name="value" /> is an enumeration, but it is not an enumeration of type <paramref name="enumType" />.</span></span>  
  
<span data-ttu-id="51731-375">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-375">-or-</span></span> 
<span data-ttu-id="51731-376">Typ <paramref name="value" /> nie jest podstawowym typem <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="51731-376">The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51731-377"><paramref name="value" /> nie jest typem <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, lub <see cref="T:System.UInt64" />, lub <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="51731-377"><paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />, or <see cref="T:System.String" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="51731-378">Jeśli <paramref name="enumType" /> jest wyliczeniem, która jest zdefiniowana za pomocą <see cref="T:System.FlagsAttribute" /> atrybutu, metoda zwraca <see langword="false" /> Jeśli bit wiele pól w <paramref name="value" /> są ustawione, ale <paramref name="value" /> nie odpowiada wartości wyliczenia złożonego, lub jeśli <paramref name="value" /> jest ciągów nazw wielu flag bitowych.</span><span class="sxs-lookup"><span data-stu-id="51731-378">If <paramref name="enumType" /> is an enumeration that is defined by using the <see cref="T:System.FlagsAttribute" /> attribute, the method returns <see langword="false" /> if multiple bit fields in <paramref name="value" /> are set but <paramref name="value" /> does not correspond to a composite enumeration value, or if <paramref name="value" /> is a string concatenation of the names of multiple bit flags.</span></span> <span data-ttu-id="51731-379">W poniższym przykładzie <c>zwierzęta</c> wyliczenia jest zdefiniowana za pomocą <see cref="T:System.FlagsAttribute" /> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="51731-379">In the following example, a <c>Pets</c> enumeration is defined with the <see cref="T:System.FlagsAttribute" /> attribute.</span></span> <span data-ttu-id="51731-380"><see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /> Metoda zwraca <see langword="false" /> podczas przekazywania wartości wyliczenia, która ma dwa pola bitowe (<c>Pets.Dog</c> i <c>Pets.Cat</c>) ustawiona, i gdy przekazujesz ją reprezentację ciągu, który Wartość wyliczenia ("Dog, Cat").</span><span class="sxs-lookup"><span data-stu-id="51731-380">The <see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /> method returns <see langword="false" /> when you pass it an enumeration value that has two bit fields (<c>Pets.Dog</c> and <c>Pets.Cat</c>) set, and when you pass it the string representation of that enumeration value ("Dog, Cat").</span></span>  
  
<span data-ttu-id="51731-381">[! code-csharp[System.Enum.IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined2.cs#2)] [! kodu vb[System.Enum.IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/isdefined2.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="51731-381">[!code-csharp[System.Enum.IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined2.cs#2)] [!code-vb[System.Enum.IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/isdefined2.vb#2)]</span></span> 
<span data-ttu-id="51731-382">Można określić, czy wiele pola bitowe są ustawiane przez wywołanie metody <see cref="M:System.Enum.HasFlag(System.Enum)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-382">You can determine whether multiple bit fields are set by calling the <see cref="M:System.Enum.HasFlag(System.Enum)" /> method.</span></span></para></block>
        <altmember cref="M:System.Enum.GetName(System.Type,System.Object)" />
        <altmember cref="M:System.Enum.GetNames(System.Type)" />
        <altmember cref="M:System.Enum.GetValues(System.Type)" />
        <altmember cref="M:System.Enum.HasFlag(System.Enum)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51731-383">Konwertuje ciąg znaków reprezentujący nazwę lub wartość liczbową jednej lub więcej stałych wyliczeniowych dla równoważnego obiektu wyliczanego.</span><span class="sxs-lookup"><span data-stu-id="51731-383">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span></summary>
        <altmember cref="M:System.Enum.TryParse``1(System.String,``0@)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (Type enumType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(class System.Type enumType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (enumType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(Type ^ enumType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : Type * string -&gt; obj" Usage="System.Enum.Parse (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-384">Typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-384">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="51731-385">Ciąg zawierający nazwę lub wartość do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="51731-385">A string containing the name or value to convert.</span></span></param>
        <summary><span data-ttu-id="51731-386">Konwertuje ciąg znaków reprezentujący nazwę lub wartość liczbową jednej lub więcej stałych wyliczeniowych dla równoważnego obiektu wyliczanego.</span><span class="sxs-lookup"><span data-stu-id="51731-386">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span></summary>
        <returns><span data-ttu-id="51731-387">Obiekt typu <paramref name="enumType" /> którego wartość jest reprezentowana przez <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-387">An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-388">`value` Parametru zawiera ciąg reprezentujący element członkowski wyliczenia wartości podstawowej lub nazwanej stałej lub listę nazwanych stałych rozdzielane przecinkami (,).</span><span class="sxs-lookup"><span data-stu-id="51731-388">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</span></span> <span data-ttu-id="51731-389">Jeden lub więcej spacji może przed lub po każdej wartości, nazwa lub przecinek w `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-389">One or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="51731-390">Jeśli `value` jest listą, wartość zwracana jest wartość określonej nazwy w połączeniu z bitowej `OR` operacji.</span><span class="sxs-lookup"><span data-stu-id="51731-390">If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.</span></span>  
  
 <span data-ttu-id="51731-391">Jeśli `value` jest nazwą, która nie odpowiada stałej nazwanej z `enumType`, metoda zgłasza <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="51731-391">If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="51731-392">Jeśli `value` jest ciąg reprezentujący liczbę całkowitą, która reprezentuje źródłową wartość elementu `enumType` wyliczenia, Metoda ta zwraca element członkowski wyliczenia o wartości podstawowej `value` konwertowany na typ całkowitoliczbowy.</span><span class="sxs-lookup"><span data-stu-id="51731-392">If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="51731-393">Jeśli to zachowanie jest niepożądany, należy wywołać <xref:System.Enum.IsDefined%2A> metody upewnij się, że reprezentacja ciągu określonej liczby całkowitej faktycznie członkiem `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-393">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`.</span></span> <span data-ttu-id="51731-394">W poniższym przykładzie zdefiniowano `Colors` wyliczenie, wywołania <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> Konwertowanie ciągów na odpowiadające im wartości wyliczenia i wywołania metody <xref:System.Enum.IsDefined%2A> metodę, aby upewnić się, że określonej wartości całkowitych są podstawowych wartości w `Colors` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-394">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample1.cs#1)]
 [!code-vb[System.Enum.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample1.vb#1)]  
  
 <span data-ttu-id="51731-395">Ta operacja jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="51731-395">This operation is case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51731-396">W poniższym przykładzie użyto <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metodę, aby przeanalizować tablicę ciągów, które są tworzone przez wywołanie metody <xref:System.Enum.GetNames%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-396">The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method.</span></span> <span data-ttu-id="51731-397">Korzysta również <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metodę, aby przeanalizować wartości wyliczenia, która składa się z polem bitowym.</span><span class="sxs-lookup"><span data-stu-id="51731-397">It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.</span></span>  
  
 [!code-cpp[enumparse#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumparse/CPP/EnumParse.cpp#1)]
 [!code-csharp[enumparse#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumparse/CS/EnumParse.cs#1)]
 [!code-vb[enumparse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumparse/VB/EnumParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-398"><paramref name="enumType" /> lub <paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-398"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-399"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-399"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="51731-400">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-400">-or-</span></span> 
 <span data-ttu-id="51731-401"><paramref name="value" /> jest ciągiem pustym lub zawiera tylko znak odstępu.</span><span class="sxs-lookup"><span data-stu-id="51731-401"><paramref name="value" /> is either an empty string or only contains white space.</span></span>  
  
<span data-ttu-id="51731-402">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-402">-or-</span></span> 
 <span data-ttu-id="51731-403"><paramref name="value" /> jest nazwą, ale nie w jednym z nazwanych stałych, które są zdefiniowane dla wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-403"><paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="51731-404"><paramref name="value" /> znajduje się poza zakresem podstawowym typem <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="51731-404"><paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (Type enumType, string value, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(class System.Type enumType, string value, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (enumType As Type, value As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(Type ^ enumType, System::String ^ value, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Parse : Type * string * bool -&gt; obj" Usage="System.Enum.Parse (enumType, value, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-405">Typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-405">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="51731-406">Ciąg zawierający nazwę lub wartość do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="51731-406">A string containing the name or value to convert.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="51731-407"><see langword="true" /> ignorowanie wielkości liter; <see langword="false" /> uznanie przypadek.</span><span class="sxs-lookup"><span data-stu-id="51731-407"><see langword="true" /> to ignore case; <see langword="false" /> to regard case.</span></span></param>
        <summary><span data-ttu-id="51731-408">Konwertuje ciąg znaków reprezentujący nazwę lub wartość liczbową jednej lub więcej stałych wyliczeniowych dla równoważnego obiektu wyliczanego.</span><span class="sxs-lookup"><span data-stu-id="51731-408">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="51731-409">Parametr określa, czy operacja jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="51731-409">A parameter specifies whether the operation is case-insensitive.</span></span></summary>
        <returns><span data-ttu-id="51731-410">Obiekt typu <paramref name="enumType" /> którego wartość jest reprezentowana przez <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-410">An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-411">`value` Parametru zawiera ciąg reprezentujący element członkowski wyliczenia wartości podstawowej lub nazwanej stałej lub listę nazwanych stałych rozdzielane przecinkami (,).</span><span class="sxs-lookup"><span data-stu-id="51731-411">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</span></span> <span data-ttu-id="51731-412">Jeden lub więcej spacji może przed lub po każdej wartości, nazwa lub przecinek w `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-412">One or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="51731-413">Jeśli `value` jest listą, wartość zwracana jest wartość określonej nazwy w połączeniu z bitowej `OR` operacji.</span><span class="sxs-lookup"><span data-stu-id="51731-413">If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.</span></span>  
  
 <span data-ttu-id="51731-414">Jeśli `value` jest nazwą, która nie odpowiada stałej nazwanej z `enumType`, metoda zgłasza <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="51731-414">If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="51731-415">Jeśli `value` jest ciąg reprezentujący liczbę całkowitą, która reprezentuje źródłową wartość elementu `enumType` wyliczenia, Metoda ta zwraca element członkowski wyliczenia o wartości podstawowej `value` konwertowany na typ całkowitoliczbowy.</span><span class="sxs-lookup"><span data-stu-id="51731-415">If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="51731-416">Jeśli to zachowanie jest niepożądany, należy wywołać <xref:System.Enum.IsDefined%2A> metody upewnij się, że reprezentacja ciągu określonej liczby całkowitej faktycznie członkiem `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-416">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`.</span></span> <span data-ttu-id="51731-417">W poniższym przykładzie zdefiniowano `Colors` wyliczenie, wywołania <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> Konwertowanie ciągów na odpowiadające im wartości wyliczenia i wywołania metody <xref:System.Enum.IsDefined%2A> metodę, aby upewnić się, że określonej wartości całkowitych są podstawowych wartości w `Colors` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-417">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]
 [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]  
  
 <span data-ttu-id="51731-418">`ignoreCase` Parametr określa, czy ta operacja jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="51731-418">The `ignoreCase` parameter specifies whether this operation is case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51731-419">W poniższym przykładzie użyto <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> metodę, aby przeanalizować tablicę ciągów, które są tworzone przez wywołanie metody <xref:System.Enum.GetNames%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-419">The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method.</span></span> <span data-ttu-id="51731-420">Korzysta również <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metodę, aby przeanalizować wartości wyliczenia, która składa się z polem bitowym.</span><span class="sxs-lookup"><span data-stu-id="51731-420">It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.</span></span>  
  
 [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]
 [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-421"><paramref name="enumType" /> lub <paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-421"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-422"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-422"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="51731-423">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-423">-or-</span></span> 
 <span data-ttu-id="51731-424"><paramref name="value" /> jest ciągiem pustym ("") lub zawiera tylko znak odstępu.</span><span class="sxs-lookup"><span data-stu-id="51731-424"><paramref name="value" /> is either an empty string ("") or only contains white space.</span></span>  
  
<span data-ttu-id="51731-425">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-425">-or-</span></span> 
 <span data-ttu-id="51731-426"><paramref name="value" /> jest nazwą, ale nie w jednym z nazwanych stałych, które są zdefiniowane dla wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-426"><paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="51731-427"><paramref name="value" /> znajduje się poza zakresem podstawowym typem <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="51731-427"><paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string value) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TEnum Parse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse(Of TEnum As Structure) (value As String) As TEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static TEnum Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; 'Enum (requires 'Enum : struct)" Usage="System.Enum.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEnum</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string value, bool ignoreCase) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TEnum Parse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse``1(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse(Of TEnum As Structure) (value As String, ignoreCase As Boolean) As TEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static TEnum Parse(System::String ^ value, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Parse : string * bool -&gt; 'Enum (requires 'Enum : struct)" Usage="System.Enum.Parse (value, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEnum</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">To be added.</typeparam>
        <param name="value">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-428">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-428">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-429">Konwertuje wartość bieżącą na wartość logiczną na podstawie typu bazowego.</span><span class="sxs-lookup"><span data-stu-id="51731-429">Converts the current value to a Boolean value based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-430">Ten element członkowski zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51731-430">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-431">Obecnie nie zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="51731-431">Currently not implemented.</span></span> <span data-ttu-id="51731-432">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51731-432">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="51731-433">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="51731-433">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-434">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-434">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-435">Konwertuje wartość bieżącego 8-bitowa liczba całkowita bez znaku na podstawie typu bazowego.</span><span class="sxs-lookup"><span data-stu-id="51731-435">Converts the current value to an 8-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-436">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="51731-436">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-437">Używa <xref:System.Convert> dokonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-437">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-438">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-438">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-439">Konwertuje bieżącą wartość znaku Unicode, w zależności od typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="51731-439">Converts the current value to a Unicode character based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-440">Ten element członkowski zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51731-440">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-441">Obecnie nie zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="51731-441">Currently not implemented.</span></span> <span data-ttu-id="51731-442">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51731-442">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="51731-443">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="51731-443">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-444">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-444">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-445">Konwertuje wartość bieżącego <see cref="T:System.DateTime" /> na podstawie typu bazowego.</span><span class="sxs-lookup"><span data-stu-id="51731-445">Converts the current value to a <see cref="T:System.DateTime" /> based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-446">Ten element członkowski zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51731-446">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-447">Obecnie nie zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="51731-447">Currently not implemented.</span></span> <span data-ttu-id="51731-448">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51731-448">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="51731-449">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="51731-449">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-450">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-450">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-451">Konwertuje wartość bieżącego <see cref="T:System.Decimal" /> na podstawie typu bazowego.</span><span class="sxs-lookup"><span data-stu-id="51731-451">Converts the current value to a <see cref="T:System.Decimal" /> based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-452">Ten element członkowski zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51731-452">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-453">Obecnie nie zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="51731-453">Currently not implemented.</span></span> <span data-ttu-id="51731-454">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51731-454">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="51731-455">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="51731-455">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-456">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-456">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-457">Konwertuje bieżącą wartość zmiennoprzecinkową podwójnej precyzji punktu numer na podstawie typu bazowego.</span><span class="sxs-lookup"><span data-stu-id="51731-457">Converts the current value to a double-precision floating point number based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-458">Ten element członkowski zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51731-458">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-459">Obecnie nie zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="51731-459">Currently not implemented.</span></span> <span data-ttu-id="51731-460">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51731-460">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="51731-461">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="51731-461">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-462">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-462">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-463">Konwertuje bieżącą wartość całkowita 16-bitowych na podstawie typu bazowego.</span><span class="sxs-lookup"><span data-stu-id="51731-463">Converts the current value to a 16-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-464">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="51731-464">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-465">Używa <xref:System.Convert> dokonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-465">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-466">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-466">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-467">Konwertuje bieżącą wartość całkowita 32-bitowy oparty na typie podstawowym.</span><span class="sxs-lookup"><span data-stu-id="51731-467">Converts the current value to a 32-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-468">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="51731-468">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-469">Używa <xref:System.Convert> dokonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-469">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-470">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-470">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-471">Konwertuje bieżącą wartość całkowita 64-bitowy oparty na typie podstawowym.</span><span class="sxs-lookup"><span data-stu-id="51731-471">Converts the current value to a 64-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-472">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="51731-472">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-473">Używa <xref:System.Convert> dokonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-473">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-474">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-474">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-475">Konwertuje wartość bieżącego 8-bitową całkowita na podstawie typu bazowego.</span><span class="sxs-lookup"><span data-stu-id="51731-475">Converts the current value to an 8-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-476">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="51731-476">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-477">Używa <xref:System.Convert> dokonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-477">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-478">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-478">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-479">Konwertuje wartość bieżącego liczba zmiennoprzecinkowa pojedynczej precyzji na podstawie typu bazowego.</span><span class="sxs-lookup"><span data-stu-id="51731-479">Converts the current value to a single-precision floating-point number based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-480">Ten element członkowski zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51731-480">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-481">Obecnie nie zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="51731-481">Currently not implemented.</span></span> <span data-ttu-id="51731-482">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51731-482">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="51731-483">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="51731-483">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString().")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="51731-484">Typ docelowy konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-484">The type to convert to.</span></span></param>
        <param name="provider"><span data-ttu-id="51731-485">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-485">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-486">Konwertuje wartość bieżącego określonego typu, w zależności od typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="51731-486">Converts the current value to a specified type based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-487">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="51731-487">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-488">Używa <xref:System.Convert> dokonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-488">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-489">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-489">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-490">Konwertuje wartość bieżącego 16-bitowa liczba całkowita bez znaku na podstawie typu bazowego.</span><span class="sxs-lookup"><span data-stu-id="51731-490">Converts the current value to a 16-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-491">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="51731-491">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-492">Używa <xref:System.Convert> dokonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-492">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-493">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-493">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-494">Konwertuje wartość bieżącego 32-bitowa liczba całkowita bez znaku na podstawie typu bazowego.</span><span class="sxs-lookup"><span data-stu-id="51731-494">Converts the current value to a 32-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-495">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="51731-495">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-496">Używa <xref:System.Convert> dokonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-496">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-497">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="51731-497">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="51731-498">Konwertuje wartość bieżącego 64-bitowa liczba całkowita bez znaku na podstawie typu bazowego.</span><span class="sxs-lookup"><span data-stu-id="51731-498">Converts the current value to a 64-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="51731-499">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="51731-499">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-500">Używa <xref:System.Convert> dokonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="51731-500">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="51731-501">Specyfikacja formatu.</span><span class="sxs-lookup"><span data-stu-id="51731-501">A format specification.</span></span></param>
        <param name="provider">To be added.</param>
        <summary><span data-ttu-id="51731-502">Tego przeciążenia metody jest przestarzała; Użyj <see cref="M:System.Enum.ToString(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="51731-502">This method overload is obsolete; use <see cref="M:System.Enum.ToString(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="51731-503">Ciąg reprezentujący wartość tego wystąpienia określony parametrami <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="51731-503">The string representation of the value of this instance, as specified by <paramref name="format" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="51731-504"><paramref name="format" /> nie zawiera specyfikacji prawidłowy format.</span><span class="sxs-lookup"><span data-stu-id="51731-504"><paramref name="format" /> does not contain a valid format specification.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51731-505"><paramref name="format" /> jest równy "X", ale typ wyliczeniowy jest nieznany.</span><span class="sxs-lookup"><span data-stu-id="51731-505"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51731-506">Konwertuje wartość całkowitą określonego elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-506">Converts a specified integer value to an enumeration member.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Byte) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * byte -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Byte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-507">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="51731-507">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="51731-508">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-508">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="51731-509">Konwertuje określony 8-bitowa liczba całkowita bez znaku do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-509">Converts the specified 8-bit unsigned integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="51731-510">Instancja wyliczenia ustawiona na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-510">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-511"><xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> Konwertuje metody `value` do elementu członkowskiego wyliczenia, których wartości podstawowej jest `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-511">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="51731-512">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość jest poza granicami `enumType` elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="51731-512">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="51731-513">Aby upewnić się, że `value` jest prawidłową wartością podstawową `enumType` wyliczenia, przekazać go do <xref:System.Enum.IsDefined%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-513">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="51731-514">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="51731-514">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="51731-515">Następnie można rzutować ją lub przekonwertować obiektu typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-515">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-516"><paramref name="enumType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-516"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-517"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-517"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, short value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int16 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Int16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-518">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="51731-518">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="51731-519">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-519">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="51731-520">Konwertuje określony 16-bitowej liczby całkowitej ze znakiem do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-520">Converts the specified 16-bit signed integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="51731-521">Instancja wyliczenia ustawiona na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-521">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-522"><xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> Konwertuje metody `value` do elementu członkowskiego wyliczenia, których wartości podstawowej jest `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-522">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="51731-523">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość jest poza granicami `enumType` elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="51731-523">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="51731-524">Aby upewnić się, że `value` jest prawidłową wartością podstawową `enumType` wyliczenia, przekazać go do <xref:System.Enum.IsDefined%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-524">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="51731-525">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="51731-525">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="51731-526">Następnie można rzutować ją lub przekonwertować obiektu typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-526">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-527"><paramref name="enumType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-527"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-528"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-528"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, int value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-529">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="51731-529">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="51731-530">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-530">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="51731-531">Konwertuje określony 32-bitowej liczby całkowitej ze znakiem do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-531">Converts the specified 32-bit signed integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="51731-532">Instancja wyliczenia ustawiona na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-532">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-533"><xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> Konwertuje metody `value` do elementu członkowskiego wyliczenia, których wartości podstawowej jest `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-533">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="51731-534">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość jest poza granicami `enumType` elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="51731-534">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="51731-535">Aby upewnić się, że `value` jest prawidłową wartością podstawową `enumType` wyliczenia, przekazać go do <xref:System.Enum.IsDefined%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-535">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="51731-536">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="51731-536">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="51731-537">Następnie można rzutować ją lub przekonwertować obiektu typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-537">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-538"><paramref name="enumType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-538"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-539"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-539"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, long value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int64 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-540">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="51731-540">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="51731-541">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-541">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="51731-542">Konwertuje określony 64-bitowej liczby całkowitej ze znakiem do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-542">Converts the specified 64-bit signed integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="51731-543">Instancja wyliczenia ustawiona na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-543">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-544"><xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> Konwertuje metody `value` do elementu członkowskiego wyliczenia, których wartości podstawowej jest `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-544">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="51731-545">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość jest poza granicami `enumType` elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="51731-545">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="51731-546">Aby upewnić się, że `value` jest prawidłową wartością podstawową `enumType` wyliczenia, przekazać go do <xref:System.Enum.IsDefined%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-546">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="51731-547">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="51731-547">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="51731-548">Następnie można rzutować ją lub przekonwertować obiektu typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-548">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-549"><paramref name="enumType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-549"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-550"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-550"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * obj -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-551">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="51731-551">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="51731-552">Przekonwertuj wartość do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-552">The value convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="51731-553">Konwertuje określony obiekt z wartością całkowitą do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-553">Converts the specified object with an integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="51731-554">Obiekt wyliczenie, którego wartość jest <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-554">An enumeration object whose value is <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-555"><xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> Metoda konwertuje wartość całkowitą `value` do elementu członkowskiego wyliczenia, których wartości podstawowej jest `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-555">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> method converts the integral value `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="51731-556">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość jest poza granicami `enumType` elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="51731-556">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="51731-557">Aby upewnić się, że `value` jest prawidłową wartością podstawową `enumType` wyliczenia, przekazać go do <xref:System.Enum.IsDefined%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-557">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="51731-558">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="51731-558">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="51731-559">Następnie można rzutować ją lub przekonwertować obiektu typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-559">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-560"><paramref name="enumType" /> lub <paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-560"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-561"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-561"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="51731-562">—lub—</span><span class="sxs-lookup"><span data-stu-id="51731-562">-or-</span></span> 
 <span data-ttu-id="51731-563"><paramref name="value" /> nie jest typem <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, lub <see cref="T:System.UInt64" />.</span><span class="sxs-lookup"><span data-stu-id="51731-563"><paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As SByte) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * sbyte -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.SByte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-564">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="51731-564">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="51731-565">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-565">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="51731-566">Konwertuje określonej 8-bitowej podpisanej liczby całkowitej do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-566">Converts the specified 8-bit signed integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="51731-567">Instancja wyliczenia ustawiona na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-567">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-568"><xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> Konwertuje metody `value` do elementu członkowskiego wyliczenia, których wartości podstawowej jest `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-568">The <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="51731-569">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość jest poza granicami `enumType` elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="51731-569">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="51731-570">Aby upewnić się, że `value` jest prawidłową wartością podstawową `enumType` wyliczenia, przekazać go do <xref:System.Enum.IsDefined%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-570">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="51731-571">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="51731-571">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="51731-572">Następnie można rzutować ją lub przekonwertować obiektu typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-572">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-573"><paramref name="enumType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-573"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-574"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-574"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As UShort) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint16 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.UInt16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-575">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="51731-575">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="51731-576">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-576">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="51731-577">Konwertuje wartość określonego 16-bitowej nieoznaczonej liczby całkowitej do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-577">Converts the specified 16-bit unsigned integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="51731-578">Instancja wyliczenia ustawiona na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-578">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-579"><xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> Konwertuje metody `value` do elementu członkowskiego wyliczenia, których wartości podstawowej jest `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-579">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="51731-580">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość jest poza granicami `enumType` elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="51731-580">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="51731-581">Aby upewnić się, że `value` jest prawidłową wartością podstawową `enumType` wyliczenia, przekazać go do <xref:System.Enum.IsDefined%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-581">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="51731-582">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="51731-582">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="51731-583">Następnie można rzutować ją lub przekonwertować obiektu typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-583">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-584"><paramref name="enumType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-584"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-585"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-585"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As UInteger) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint32 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.UInt32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-586">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="51731-586">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="51731-587">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-587">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="51731-588">Konwertuje wartość określonego 32-bitowej nieoznaczonej liczby całkowitej do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-588">Converts the specified 32-bit unsigned integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="51731-589">Instancja wyliczenia ustawiona na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-589">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-590"><xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> Konwertuje metody `value` do elementu członkowskiego wyliczenia, których wartości podstawowej jest `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-590">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="51731-591">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość jest poza granicami `enumType` elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="51731-591">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="51731-592">Aby upewnić się, że `value` jest prawidłową wartością podstawową `enumType` wyliczenia, przekazać go do <xref:System.Enum.IsDefined%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-592">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="51731-593">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="51731-593">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="51731-594">Następnie można rzutować ją lub przekonwertować obiektu typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-594">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-595"><paramref name="enumType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-595"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-596"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-596"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As ULong) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint64 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.UInt64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="51731-597">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="51731-597">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="51731-598">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-598">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="51731-599">Konwertuje wartość określonego 64-bitowej nieoznaczonej liczby całkowitej do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-599">Converts the specified 64-bit unsigned integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="51731-600">Instancja wyliczenia ustawiona na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-600">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-601"><xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> Konwertuje metody `value` do elementu członkowskiego wyliczenia, których wartości podstawowej jest `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-601">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="51731-602">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość jest poza granicami `enumType` elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="51731-602">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="51731-603">Aby upewnić się, że `value` jest prawidłową wartością podstawową `enumType` wyliczenia, przekazać go do <xref:System.Enum.IsDefined%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51731-603">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="51731-604">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="51731-604">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="51731-605">Następnie można rzutować ją lub przekonwertować obiektu typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="51731-605">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51731-606"><paramref name="enumType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51731-606"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-607"><paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="51731-607"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51731-608">Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="51731-608">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="51731-609">Wyliczanie ciągów formatujących</span><span class="sxs-lookup"><span data-stu-id="51731-609">Enumeration Format Strings</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="enum.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51731-610">Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="51731-610">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="51731-611">Ciąg reprezentujący wartość tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="51731-611">The string representation of the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-612">Wartość zwracana jest formatowana przy użyciu specyfikatora formatu ogólnego ("G").</span><span class="sxs-lookup"><span data-stu-id="51731-612">The return value is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="51731-613">Oznacza to jeśli <xref:System.FlagsAttribute> nie ma zastosowania do to Typ wyliczany i ma nazwanych stałych równa wartość tego wystąpienia, a następnie wartość zwracana jest ciąg zawierający nazwę stałej.</span><span class="sxs-lookup"><span data-stu-id="51731-613">That is, if the <xref:System.FlagsAttribute> is not applied to this enumerated type and there is a named constant equal to the value of this instance, then the return value is a string containing the name of the constant.</span></span> <span data-ttu-id="51731-614">Jeśli <xref:System.FlagsAttribute> są stosowane i kombinacji jednego lub więcej nazwanych stałych jest równa wartości tego wystąpienia, a następnie wartość zwracana jest ciąg zawierający listę nazw stałych rozdzielonych ogranicznikami.</span><span class="sxs-lookup"><span data-stu-id="51731-614">If the <xref:System.FlagsAttribute> is applied and there is a combination of one or more named constants equal to the value of this instance, then the return value is a string containing a delimiter-separated list of the names of the constants.</span></span> <span data-ttu-id="51731-615">W przeciwnym razie wartość zwracana jest ciąg reprezentujący wartość liczbową tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="51731-615">Otherwise, the return value is the string representation of the numeric value of this instance.</span></span> <span data-ttu-id="51731-616">Aby uzyskać więcej informacji na temat formatowania wartości wyliczenia, zobacz [wyliczanie ciągów formatujących](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="51731-616">For more information about formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="51731-617">Aby uzyskać więcej informacji na temat formatowania ogólnie rzecz biorąc, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="51731-617">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51731-618">W poniższym przykładzie pokazano, konwertowania wartości wyliczenia na ciąg.</span><span class="sxs-lookup"><span data-stu-id="51731-618">The following example demonstrates converting an enumerated value to a string.</span></span>  
  
 [!code-cpp[Classic Enum.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Enum.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CS/source.cs#1)]
 [!code-vb[Classic Enum.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="51731-619">Jeśli wiele elementów członkowskich wyliczenia mają taką samą wartość podstawowych i próbują pobrać ciąg reprezentujący nazwę elementu członkowskiego wyliczenia, na podstawie jego podstawowej wartości, kod nie powinna dokonywać czynić żadnych założeń o nazwie, który zwróci metoda.</span><span class="sxs-lookup"><span data-stu-id="51731-619">If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return.</span></span> <span data-ttu-id="51731-620">Na przykład, poniższy wyliczenie definiuje dwa elementy członkowskie, <c>Shade.Gray</c> i <c>Shade.Grey</c>, które mają taką samą wartość podstawowy.</span><span class="sxs-lookup"><span data-stu-id="51731-620">For example, the following enumeration defines two members, <c>Shade.Gray</c> and <c>Shade.Grey</c>, that have the same underlying value.</span></span>  
  
<span data-ttu-id="51731-621">[!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="51731-621">[!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span></span> 
<span data-ttu-id="51731-622">Następujące wywołanie metody podejmie próbę pobrania nazwy członka <c>odcień</c> wyliczenie, którego podstawowym wartością jest 1.</span><span class="sxs-lookup"><span data-stu-id="51731-622">The following method call attempts to retrieve the name of a member of the <c>Shade</c> enumeration whose underlying value is 1.</span></span> <span data-ttu-id="51731-623">Metoda może zwrócić "Szarym" lub "Grey", a Twój kod, nie należy wprowadzać żadnych założeń, o których zostanie zwrócony ciąg.</span><span class="sxs-lookup"><span data-stu-id="51731-623">The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.</span></span>  
  
<span data-ttu-id="51731-624">[! code-csharp[System.Enum.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#2)] [! kodu vb[System.Enum.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="51731-624">[!code-csharp[System.Enum.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#2)] [!code-vb[System.Enum.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="enum.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString().")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="51731-625">(przestarzałe)</span><span class="sxs-lookup"><span data-stu-id="51731-625">(obsolete)</span></span></param>
        <summary><span data-ttu-id="51731-626">Tego przeciążenia metody jest przestarzała; Użyj <see cref="M:System.Enum.ToString" />.</span><span class="sxs-lookup"><span data-stu-id="51731-626">This method overload is obsolete; use <see cref="M:System.Enum.ToString" />.</span></span></summary>
        <returns><span data-ttu-id="51731-627">Ciąg reprezentujący wartość tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="51731-627">The string representation of the value of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="enum.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="51731-628">Ciąg formatu.</span><span class="sxs-lookup"><span data-stu-id="51731-628">A format string.</span></span></param>
        <summary><span data-ttu-id="51731-629">Konwertuje wartość tego wystąpienia na jego reprezentację ciągu równoważnego przy użyciu określonego formatu.</span><span class="sxs-lookup"><span data-stu-id="51731-629">Converts the value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="51731-630">Ciąg reprezentujący wartość tego wystąpienia określony przez <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="51731-630">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-631">`format` Parametr może być jedną z następujących ciągów formatu: "G" lub "g", "D" lub "d", "X" lub "x" i "F" lub "f" (w formacie ciągu nie jest rozróżniana wielkość liter).</span><span class="sxs-lookup"><span data-stu-id="51731-631">The `format` parameter can be one of the following format strings: "G" or "g", "D" or "d", "X" or "x", and "F" or "f" (the format string is not case-sensitive).</span></span> <span data-ttu-id="51731-632">Jeśli `format` jest `null` ani być pustym ciągiem (""), specyfikator formatu ogólnego ("G") jest używany.</span><span class="sxs-lookup"><span data-stu-id="51731-632">If `format` is `null` or an empty string (""), the general format specifier ("G") is used.</span></span> <span data-ttu-id="51731-633">Aby uzyskać więcej informacji na temat wyliczanie ciągów formatujących i formatowania wartości wyliczenia, zobacz [wyliczanie ciągów formatujących](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="51731-633">For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="51731-634">Aby uzyskać więcej informacji na temat formatowania ogólnie rzecz biorąc, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="51731-634">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51731-635">Poniższy przykład pokazuje, jak przekonwertować wartość wyliczana na ciąg.</span><span class="sxs-lookup"><span data-stu-id="51731-635">The following example demonstrates how to convert an enumerated value to a string.</span></span>  
  
 [!code-cpp[enum.tostring#1](~/samples/snippets/cpp/VS_Snippets_CLR/enum.tostring/CPP/tostr.cpp#1)]
 [!code-csharp[enum.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/enum.tostring/CS/tostr.cs#1)]
 [!code-vb[enum.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enum.tostring/VB/tostr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="51731-636"><paramref name="format" /> zawiera nieprawidłową specyfikację.</span><span class="sxs-lookup"><span data-stu-id="51731-636"><paramref name="format" /> contains an invalid specification.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51731-637"><paramref name="format" /> jest równy "X", ale typ wyliczeniowy jest nieznany.</span><span class="sxs-lookup"><span data-stu-id="51731-637"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="51731-638">Jeśli wiele elementów członkowskich wyliczenia mają taką samą wartość podstawowych i próbują pobrać ciąg reprezentujący nazwę elementu członkowskiego wyliczenia, na podstawie jego podstawowej wartości, kod nie powinna dokonywać czynić żadnych założeń o nazwie, który zwróci metoda.</span><span class="sxs-lookup"><span data-stu-id="51731-638">If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return.</span></span> <span data-ttu-id="51731-639">Na przykład, poniższy wyliczenie definiuje dwa elementy członkowskie, <c>Shade.Gray</c> i <c>Shade.Grey</c>, które mają taką samą wartość podstawowy.</span><span class="sxs-lookup"><span data-stu-id="51731-639">For example, the following enumeration defines two members, <c>Shade.Gray</c> and <c>Shade.Grey</c>, that have the same underlying value.</span></span>  
  
<span data-ttu-id="51731-640">[!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="51731-640">[!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span></span> 
<span data-ttu-id="51731-641">Następujące wywołanie metody podejmie próbę pobrania nazwy członka <c>odcień</c> wyliczenie, którego podstawowym wartością jest 1.</span><span class="sxs-lookup"><span data-stu-id="51731-641">The following method call attempts to retrieve the name of a member of the <c>Shade</c> enumeration whose underlying value is 1.</span></span> <span data-ttu-id="51731-642">Metoda może zwrócić "Szarym" lub "Grey", a Twój kod, nie należy wprowadzać żadnych założeń, o których zostanie zwrócony ciąg.</span><span class="sxs-lookup"><span data-stu-id="51731-642">The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.</span></span>  
  
<span data-ttu-id="51731-643">[!code-csharp[System.Enum.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#3)] [!code-vb[System.Enum.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="51731-643">[!code-csharp[System.Enum.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#3)] [!code-vb[System.Enum.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#3)]</span></span></para></block>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
        <altmember cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="51731-644">Typy formatowania na platformie .NET</span><span class="sxs-lookup"><span data-stu-id="51731-644">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="51731-645">Wyliczanie ciągów formatujących</span><span class="sxs-lookup"><span data-stu-id="51731-645">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="enum.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="51731-646">Specyfikacja formatu.</span><span class="sxs-lookup"><span data-stu-id="51731-646">A format specification.</span></span></param>
        <param name="provider"><span data-ttu-id="51731-647">(Przestarzałe).</span><span class="sxs-lookup"><span data-stu-id="51731-647">(Obsolete.)</span></span></param>
        <summary><span data-ttu-id="51731-648">Tego przeciążenia metody jest przestarzała; Użyj <see cref="M:System.Enum.ToString(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="51731-648">This method overload is obsolete; use <see cref="M:System.Enum.ToString(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="51731-649">Ciąg reprezentujący wartość tego wystąpienia określony przez <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="51731-649">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-650">`format` Parametr może być jedną z następujących ciągów formatu: "G" lub "g", "D" lub "d", "X" lub "x" i "F" lub "f" (w formacie ciągu nie jest rozróżniana wielkość liter).</span><span class="sxs-lookup"><span data-stu-id="51731-650">The `format` parameter can be one of the following format strings: "G" or "g", "D" or "d", "X" or "x", and "F" or "f" (the format string is not case-sensitive).</span></span> <span data-ttu-id="51731-651">Jeśli `format` jest `null` ani być pustym ciągiem (""), specyfikator formatu ogólnego ("G") jest używany.</span><span class="sxs-lookup"><span data-stu-id="51731-651">If `format` is `null` or an empty string (""), the general format specifier ("G") is used.</span></span> <span data-ttu-id="51731-652">Aby uzyskać więcej informacji na temat wyliczanie ciągów formatujących i formatowania wartości wyliczenia, zobacz [wyliczanie ciągów formatujących](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="51731-652">For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="51731-653">Aby uzyskać więcej informacji na temat formatowania ogólnie rzecz biorąc, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="51731-653">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="51731-654">Określ tylko `format`; `provider` parametr jest przestarzały.</span><span class="sxs-lookup"><span data-stu-id="51731-654">Specify only `format`; the `provider` parameter is obsolete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="51731-655"><paramref name="format" /> nie zawiera specyfikacji prawidłowy format.</span><span class="sxs-lookup"><span data-stu-id="51731-655"><paramref name="format" /> does not contain a valid format specification.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51731-656"><paramref name="format" /> jest równy "X", ale typ wyliczeniowy jest nieznany.</span><span class="sxs-lookup"><span data-stu-id="51731-656"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="51731-657">Typy formatowania na platformie .NET</span><span class="sxs-lookup"><span data-stu-id="51731-657">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="51731-658">Wyliczanie ciągów formatujących</span><span class="sxs-lookup"><span data-stu-id="51731-658">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51731-659">Konwertuje ciąg znaków reprezentujący nazwę lub wartość liczbową jednej lub więcej stałych wyliczeniowych dla równoważnego obiektu wyliczanego.</span><span class="sxs-lookup"><span data-stu-id="51731-659">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="51731-660">Zwracana wartość wskazuje, czy konwersja powiodła się.</span><span class="sxs-lookup"><span data-stu-id="51731-660">The return value indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Type enumType, string value, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class System.Type enumType, string value, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse(System.Type,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (enumType As Type, value As String, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Type ^ enumType, System::String ^ value, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : Type * string *  -&gt; bool" Usage="System.Enum.TryParse (enumType, value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="result" Type="System.Object" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="enumType">To be added.</param>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Type enumType, string value, bool ignoreCase, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class System.Type enumType, string value, bool ignoreCase, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse(System.Type,System.String,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (enumType As Type, value As String, ignoreCase As Boolean, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Type ^ enumType, System::String ^ value, bool ignoreCase, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : Type * string * bool *  -&gt; bool" Usage="System.Enum.TryParse (enumType, value, ignoreCase, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="result" Type="System.Object" RefType="out" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="enumType">To be added.</param>
        <param name="value">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string value, out TEnum result) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, [out] !!TEnum&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse(Of TEnum As Structure) (value As String, ByRef result As TEnum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] TEnum % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool (requires 'Enum : struct)" Usage="System.Enum.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="TEnum" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><span data-ttu-id="51731-661">Typ wyliczeniowy, do którego można przekonwertować <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-661">The enumeration type to which to convert <paramref name="value" />.</span></span></typeparam>
        <param name="value"><span data-ttu-id="51731-662">Wielkość liter ciąg reprezentujący nazwę wyliczenia lub podstawowej wartości do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="51731-662">The case-sensitive string representation of the enumeration name or underlying value to convert.</span></span></param>
        <param name="result"><span data-ttu-id="51731-663">Po powrocie z tej metody <paramref name="result" /> zawiera obiekt typu <c>element TEnum</c> którego wartość jest reprezentowana przez <paramref name="value" /> Jeśli operacja analizy się powiodła.</span><span class="sxs-lookup"><span data-stu-id="51731-663">When this method returns, <paramref name="result" /> contains an object of type <c>TEnum</c> whose value is represented by <paramref name="value" /> if the parse operation succeeds.</span></span> <span data-ttu-id="51731-664">W przypadku niepowodzenia operacji analizy <paramref name="result" /> zawiera domyślną wartość podstawowym typem <c>element TEnum</c>.</span><span class="sxs-lookup"><span data-stu-id="51731-664">If the parse operation fails, <paramref name="result" /> contains the default value of the underlying type of <c>TEnum</c>.</span></span> <span data-ttu-id="51731-665">Należy pamiętać, że ta wartość nie muszą być członkiem <c>element TEnum</c> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-665">Note that this value need not be a member of the <c>TEnum</c> enumeration.</span></span> <span data-ttu-id="51731-666">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="51731-666">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="51731-667">Konwertuje ciąg znaków reprezentujący nazwę lub wartość liczbową jednej lub więcej stałych wyliczeniowych dla równoważnego obiektu wyliczanego.</span><span class="sxs-lookup"><span data-stu-id="51731-667">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="51731-668">Zwracana wartość wskazuje, czy konwersja powiodła się.</span><span class="sxs-lookup"><span data-stu-id="51731-668">The return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="51731-669"><see langword="true" /> Jeśli <paramref name="value" /> parametr został przekonwertowany pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51731-669"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-670"><xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> jest taka sama jak <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metody, chyba że zamiast zgłaszać wyjątek, funkcja zwraca `false` Jeśli konwersja nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="51731-670"><xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails.</span></span> <span data-ttu-id="51731-671">Eliminuje to potrzebę obsługi podczas analizowania ciągu reprezentującego wartość wyliczenia wyjątków.</span><span class="sxs-lookup"><span data-stu-id="51731-671">It eliminates the need for exception handling when parsing the string representation of an enumeration value.</span></span>  
  
 <span data-ttu-id="51731-672">`value` Parametru zawiera ciąg reprezentujący element członkowski wyliczenia wartości podstawowej lub nazwanej stałej lub lista nazwanych stałych lub podstawowej wartości rozdzielane przecinkami (,).</span><span class="sxs-lookup"><span data-stu-id="51731-672">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</span></span> <span data-ttu-id="51731-673">Jeśli `value` obejmuje wiele nazwane stałe lub wartości, jeden lub więcej spacji może przed lub po każdej wartości, nazwa lub przecinek w `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-673">If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="51731-674">Jeśli `value` jest to lista `result` odzwierciedla wielkość wartości określonej nazwy lub podstawowej wartości w połączeniu z bitowej `OR` operacji.</span><span class="sxs-lookup"><span data-stu-id="51731-674">If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation.</span></span> <span data-ttu-id="51731-675">Jeśli `value` jest ciąg reprezentujący nazwę wartości wyliczenia, porównanie `value` przy użyciu wyliczenia nazw jest uwzględniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="51731-675">If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names is case-sensitive.</span></span>  
  
 <span data-ttu-id="51731-676">Jeśli `value` jest nazwą, która nie odpowiada stałej nazwanej z `TEnum`, metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="51731-676">If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`.</span></span> <span data-ttu-id="51731-677">Jeśli `value` jest ciąg reprezentujący liczbę całkowitą, która reprezentuje źródłową wartość elementu `TEnum` wyliczenia, Metoda ta zwraca element członkowski wyliczenia o wartości podstawowej `value` konwertowany na typ całkowitoliczbowy.</span><span class="sxs-lookup"><span data-stu-id="51731-677">If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="51731-678">Jeśli to zachowanie jest niepożądany, należy wywołać <xref:System.Enum.IsDefined%2A> metody upewnij się, że reprezentacja ciągu określonej liczby całkowitej faktycznie członkiem `TEnum`.</span><span class="sxs-lookup"><span data-stu-id="51731-678">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51731-679">W poniższym przykładzie zdefiniowano `Colors` wyliczenie, wywołania <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> Konwertowanie ciągów na odpowiadające im wartości wyliczenia i wywołania metody <xref:System.Enum.IsDefined%2A> metodę, aby upewnić się, że określonej wartości całkowitych są podstawowych wartości w `Colors` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-679">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.Enum.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-680"><paramref name="TEnum" /> nie jest typem wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-680"><paramref name="TEnum" /> is not an enumeration type.</span></span></exception>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string value, bool ignoreCase, out TEnum result) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, bool ignoreCase, [out] !!TEnum&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse(Of TEnum As Structure) (value As String, ignoreCase As Boolean, ByRef result As TEnum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static bool TryParse(System::String ^ value, bool ignoreCase, [Runtime::InteropServices::Out] TEnum % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * bool *  -&gt; bool (requires 'Enum : struct)" Usage="System.Enum.TryParse (value, ignoreCase, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="TEnum" RefType="out" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><span data-ttu-id="51731-681">Typ wyliczeniowy, do którego można przekonwertować <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="51731-681">The enumeration type to which to convert <paramref name="value" />.</span></span></typeparam>
        <param name="value"><span data-ttu-id="51731-682">Ciąg reprezentujący nazwę wyliczenia lub podstawowej wartości do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="51731-682">The string representation of the enumeration name or underlying value to convert.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="51731-683"><see langword="true" /> ignorowanie wielkości liter; <see langword="false" /> wziąć pod uwagę przypadek.</span><span class="sxs-lookup"><span data-stu-id="51731-683"><see langword="true" /> to ignore case; <see langword="false" /> to consider case.</span></span></param>
        <param name="result"><span data-ttu-id="51731-684">Po powrocie z tej metody <paramref name="result" /> zawiera obiekt typu <c>element TEnum</c> którego wartość jest reprezentowana przez <paramref name="value" /> Jeśli operacja analizy się powiodła.</span><span class="sxs-lookup"><span data-stu-id="51731-684">When this method returns, <paramref name="result" /> contains an object of type <c>TEnum</c> whose value is represented by <paramref name="value" /> if the parse operation succeeds.</span></span> <span data-ttu-id="51731-685">W przypadku niepowodzenia operacji analizy <paramref name="result" /> zawiera domyślną wartość podstawowym typem <c>element TEnum</c>.</span><span class="sxs-lookup"><span data-stu-id="51731-685">If the parse operation fails, <paramref name="result" /> contains the default value of the underlying type of <c>TEnum</c>.</span></span> <span data-ttu-id="51731-686">Należy pamiętać, że ta wartość nie muszą być członkiem <c>element TEnum</c> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-686">Note that this value need not be a member of the <c>TEnum</c> enumeration.</span></span> <span data-ttu-id="51731-687">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="51731-687">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="51731-688">Konwertuje ciąg znaków reprezentujący nazwę lub wartość liczbową jednej lub więcej stałych wyliczeniowych dla równoważnego obiektu wyliczanego.</span><span class="sxs-lookup"><span data-stu-id="51731-688">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="51731-689">Parametr określa, czy operacja jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="51731-689">A parameter specifies whether the operation is case-sensitive.</span></span> <span data-ttu-id="51731-690">Zwracana wartość wskazuje, czy konwersja powiodła się.</span><span class="sxs-lookup"><span data-stu-id="51731-690">The return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="51731-691"><see langword="true" /> Jeśli <paramref name="value" /> parametr został przekonwertowany pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51731-691"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51731-692"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> jest taka sama jak <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> metody, chyba że zamiast zgłaszać wyjątek, funkcja zwraca `false` Jeśli konwersja nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="51731-692"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails.</span></span> <span data-ttu-id="51731-693">Eliminuje to potrzebę obsługi podczas analizowania ciągu reprezentującego wartość wyliczenia wyjątków.</span><span class="sxs-lookup"><span data-stu-id="51731-693">It eliminates the need for exception handling when parsing the string representation of an enumeration value.</span></span>  
  
 <span data-ttu-id="51731-694">`value` Parametru zawiera ciąg reprezentujący element członkowski wyliczenia wartości podstawowej lub nazwanej stałej lub lista nazwanych stałych lub podstawowej wartości rozdzielane przecinkami (,).</span><span class="sxs-lookup"><span data-stu-id="51731-694">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</span></span> <span data-ttu-id="51731-695">Jeśli `value` obejmuje wiele nazwane stałe lub wartości, jeden lub więcej spacji może przed lub po każdej wartości, nazwa lub przecinek w `value`.</span><span class="sxs-lookup"><span data-stu-id="51731-695">If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="51731-696">Jeśli `value` jest to lista `result` odzwierciedla wielkość wartości określonej nazwy lub podstawowej wartości w połączeniu z bitowej `OR` operacji.</span><span class="sxs-lookup"><span data-stu-id="51731-696">If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation.</span></span> <span data-ttu-id="51731-697">Jeśli `value` jest ciąg reprezentujący nazwę wartości wyliczenia, porównanie `value` przy użyciu wyliczenia nazw zależy od `ignoreCase` parametru.</span><span class="sxs-lookup"><span data-stu-id="51731-697">If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names depends on the `ignoreCase` parameter.</span></span> <span data-ttu-id="51731-698">Jeśli `true`, w porównaniu jest rozróżniana wielkość liter; w wypadku `false`, jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="51731-698">If `true`, the comparison is case-insensitive; if `false`, it is case-sensitive.</span></span>  
  
 <span data-ttu-id="51731-699">Jeśli `value` jest nazwą, która nie odpowiada stałej nazwanej z `TEnum`, metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="51731-699">If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`.</span></span> <span data-ttu-id="51731-700">Jeśli `value` jest ciąg reprezentujący liczbę całkowitą, która reprezentuje źródłową wartość elementu `TEnum` wyliczenia, Metoda ta zwraca element członkowski wyliczenia o wartości podstawowej `value` konwertowany na typ całkowitoliczbowy.</span><span class="sxs-lookup"><span data-stu-id="51731-700">If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="51731-701">Jeśli to zachowanie jest niepożądany, należy wywołać <xref:System.Enum.IsDefined%2A> metody upewnij się, że reprezentacja ciągu określonej liczby całkowitej faktycznie członkiem `TEnum`.</span><span class="sxs-lookup"><span data-stu-id="51731-701">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51731-702">W poniższym przykładzie zdefiniowano `Colors` wyliczenie, wywołania <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> Konwertowanie ciągów na odpowiadające im wartości wyliczenia i wywołania metody <xref:System.Enum.IsDefined%2A> metodę, aby upewnić się, że określonej wartości całkowitych są podstawowych wartości w `Colors` wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-702">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span> <span data-ttu-id="51731-703"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> Metoda używa porównania bez uwzględniania wielkości liter podczas próby konwersji ciągów reprezentujących nazwanych stałych wartości wyliczenia równoważne.</span><span class="sxs-lookup"><span data-stu-id="51731-703">The <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method uses case-insensitive comparison when trying to convert the string representations of named constants to their equivalent enumeration values.</span></span>  
  
 [!code-csharp[System.Enum.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.Enum.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51731-704"><paramref name="TEnum" /> nie jest typem wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51731-704"><paramref name="TEnum" /> is not an enumeration type.</span></span></exception>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String,System.Boolean)" />
      </Docs>
    </Member>
  </Members>
</Type>