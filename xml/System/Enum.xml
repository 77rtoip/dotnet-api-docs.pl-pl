<Type Name="Enum" FullName="System.Enum">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b653dd4624789f0eca94f35954eaa08a3b928c2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69406521" /></Metadata><TypeSignature Language="C#" Value="public abstract class Enum : ValueType, IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Enum extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Enum" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Enum&#xA;Inherits ValueType&#xA;Implements IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Enum abstract : ValueType, IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="F#" Value="type Enum = class&#xA;    inherit ValueType&#xA;    interface IComparable&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e0e1c-101">Dostarcza klasę bazową dla wyliczeń.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-101">Provides the base class for enumerations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-102">Wyliczenie jest zestawem nazwanych stałych, których typem podstawowym jest dowolny typ całkowity.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-102">An enumeration is a set of named constants whose underlying type is any integral type.</span></span> <span data-ttu-id="e0e1c-103">Jeśli żaden typ podstawowy nie jest zadeklarowany <xref:System.Int32> w sposób jawny, jest używany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-103">If no underlying type is explicitly declared, <xref:System.Int32> is used.</span></span> <span data-ttu-id="e0e1c-104"><xref:System.Enum>jest klasą bazową dla wszystkich wyliczeń w .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-104"><xref:System.Enum> is the base class for all enumerations in the .NET Framework.</span></span> <span data-ttu-id="e0e1c-105">Typy wyliczeniowe są zdefiniowane `enum` za pomocą C# słowa kluczowego w i `Enum`... `End Enum` konstrukcja w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-105">Enumeration types are defined by the `enum` keyword in C# and the `Enum`...`End Enum` construct in Visual Basic.</span></span>  
  
 <span data-ttu-id="e0e1c-106"><xref:System.Enum>zapewnia metody porównujące wystąpienia tej klasy, konwertując wartość wystąpienia na jego reprezentację w postaci ciągu, konwertując ciąg reprezentujący liczbę na wystąpienie tej klasy i tworząc wystąpienie określonego wyliczenia i wartości.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-106"><xref:System.Enum> provides methods for comparing instances of this class, converting the value of an instance to its string representation, converting the string representation of a number to an instance of this class, and creating an instance of a specified enumeration and value.</span></span>  
  
 <span data-ttu-id="e0e1c-107">Można również traktować Wyliczenie jako pole bitowe.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-107">You can also treat an enumeration as a bit field.</span></span> <span data-ttu-id="e0e1c-108">Aby uzyskać więcej informacji, zobacz sekcję niewyłączne [elementy członkowskie i atrybuty flag](#Flags) oraz <xref:System.FlagsAttribute> temat.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-108">For more information, see the [Non-Exclusive Members and the Flags Attribute](#Flags) section and the <xref:System.FlagsAttribute> topic.</span></span>  
  
 <span data-ttu-id="e0e1c-109">W tym temacie:</span><span class="sxs-lookup"><span data-stu-id="e0e1c-109">In this topic:</span></span>  
  
 <span data-ttu-id="e0e1c-110">[Tworzenie typu wyliczenia](#Creating) </span><span class="sxs-lookup"><span data-stu-id="e0e1c-110">[Creating an enumeration type](#Creating) </span></span>  
 <span data-ttu-id="e0e1c-111">[Tworzenie wystąpienia typu wyliczeniowego](#Instantiating) </span><span class="sxs-lookup"><span data-stu-id="e0e1c-111">[Instantiating an enumeration type](#Instantiating) </span></span>  
 <span data-ttu-id="e0e1c-112">[Najlepsze rozwiązania w zakresie wyliczania](#BestPractices) </span><span class="sxs-lookup"><span data-stu-id="e0e1c-112">[Enumeration best practices](#BestPractices) </span></span>  
 <span data-ttu-id="e0e1c-113">[Wykonywanie operacji z wyliczeniami](#Operations) </span><span class="sxs-lookup"><span data-stu-id="e0e1c-113">[Performing operations with enumerations](#Operations) </span></span>  
 [<span data-ttu-id="e0e1c-114">Wykonywanie konwersji</span><span class="sxs-lookup"><span data-stu-id="e0e1c-114">Performing conversions</span></span>](#conversions)  
 [<span data-ttu-id="e0e1c-115">Analizowanie wartości wyliczenia</span><span class="sxs-lookup"><span data-stu-id="e0e1c-115">Parsing enumeration values</span></span>](#parsing)  
 [<span data-ttu-id="e0e1c-116">Formatowanie wartości wyliczenia</span><span class="sxs-lookup"><span data-stu-id="e0e1c-116">Formatting enumeration values</span></span>](#formatting)  
[<span data-ttu-id="e0e1c-117">Iterowanie elementów członkowskich wyliczenia</span><span class="sxs-lookup"><span data-stu-id="e0e1c-117">Iterating enumeration members</span></span>](#iterating)  
[<span data-ttu-id="e0e1c-118">Niewyłączne elementy członkowskie i atrybuty flag</span><span class="sxs-lookup"><span data-stu-id="e0e1c-118">Non-exclusive members and the Flags attribute</span></span>](#Flags)  
[<span data-ttu-id="e0e1c-119">Dodawanie metod wyliczenia</span><span class="sxs-lookup"><span data-stu-id="e0e1c-119">Adding enumeration methods</span></span>](#Methods)  
  
<a name="Creating"></a>   
## <a name="creating-an-enumeration-type"></a><span data-ttu-id="e0e1c-120">Tworzenie typu wyliczenia</span><span class="sxs-lookup"><span data-stu-id="e0e1c-120">Creating an enumeration type</span></span>  
 <span data-ttu-id="e0e1c-121">Języki programowania zwykle zapewniają składnię, która deklaruje Wyliczenie, które składa się z zestawu nazwanych stałych i ich wartości.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-121">Programming languages typically provide syntax to declare an enumeration that consists of a set of named constants and their values.</span></span> <span data-ttu-id="e0e1c-122">Poniższy przykład ilustruje składnię używaną przez C# i Visual Basic, aby zdefiniować Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-122">The following example illustrates the syntax used by C# and Visual Basic to define an enumeration.</span></span> <span data-ttu-id="e0e1c-123">Tworzy Wyliczenie o nazwie `ArrivalStatus` , które ma trzy elementy członkowskie: `ArrivalStatus.OnTime` `ArrivalStatus.Early`,, `ArrivalStatus.Late`i.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-123">It creates an enumeration named `ArrivalStatus` that has three members: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, and `ArrivalStatus.Late`.</span></span> <span data-ttu-id="e0e1c-124">Należy zauważyć, że w obu przypadkach Wyliczenie nie dziedziczy jawnie z <xref:System.Enum>; relacja dziedziczenia jest obsługiwana niejawnie przez kompilator.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-124">Note that in both cases, the enumeration does not explicitly inherit from <xref:System.Enum>; the inheritance relationship is handled implicitly by the compiler.</span></span>  
  
 [!code-csharp[System.Enum.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#1)]
 [!code-vb[System.Enum.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#1)]  
  
> [!WARNING]
>  <span data-ttu-id="e0e1c-125">Nigdy nie należy tworzyć typu wyliczenia, którego typ podstawowy jest niecałkowity lub <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-125">You should never create an enumeration type whose underlying type is non-integral or <xref:System.Char>.</span></span> <span data-ttu-id="e0e1c-126">Chociaż można utworzyć taki typ wyliczenia przy użyciu odbicia, wywołania metod, które używają typu wyniku, są wiarygodne i mogą również generować dodatkowe wyjątki.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-126">Although you can create such an enumeration type by using reflection, method calls that use the resulting type are unreliable and may also throw additional exceptions.</span></span>  
  
<a name="Instantiating"></a>   
## <a name="instantiating-an-enumeration-type"></a><span data-ttu-id="e0e1c-127">Tworzenie wystąpienia typu wyliczeniowego</span><span class="sxs-lookup"><span data-stu-id="e0e1c-127">Instantiating an enumeration type</span></span>  
 <span data-ttu-id="e0e1c-128">Typ wyliczenia można utworzyć tak samo jak w przypadku wystąpienia dowolnego innego typu wartości: przez zadeklarowanie zmiennej i przypisanie jednej z jej stałych.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-128">You can instantiate an enumeration type just as you instantiate any other value type: by declaring a variable and assigning one of the enumeration's constants to it.</span></span> <span data-ttu-id="e0e1c-129">Poniższy przykład tworzy wystąpienie, `ArrivalStatus` którego wartość to. `ArrivalStatus.OnTime`</span><span class="sxs-lookup"><span data-stu-id="e0e1c-129">The following example instantiates an `ArrivalStatus` whose value is `ArrivalStatus.OnTime`.</span></span>  
  
 [!code-csharp[System.Enum.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#2)]
 [!code-vb[System.Enum.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#2)]  
  
 <span data-ttu-id="e0e1c-130">Możesz również utworzyć wystąpienie wartości wyliczenia w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="e0e1c-130">You can also instantiate an enumeration value in the following ways:</span></span>  
  
-   <span data-ttu-id="e0e1c-131">Przy użyciu określonych funkcji języka programowania do rzutowania (jak w programie C#) lub konwersji (jak w Visual Basic) wartość całkowita na wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-131">By using a particular programming language's features to cast (as in C#) or convert (as in Visual Basic) an integer value to an enumeration value.</span></span> <span data-ttu-id="e0e1c-132">Poniższy przykład tworzy obiekt, `ArrivalStatus` którego wartość jest `ArrivalStatus.Early` w ten sposób.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-132">The following example creates an `ArrivalStatus` object whose value is `ArrivalStatus.Early` in this way.</span></span>  
  
     [!code-csharp[System.Enum.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#4)]
     [!code-vb[System.Enum.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#4)]  
  
-   <span data-ttu-id="e0e1c-133">Wywoływanie niejawnego konstruktora bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-133">By calling its implicit parameterless constructor.</span></span> <span data-ttu-id="e0e1c-134">Jak pokazano w poniższym przykładzie, w tym przypadku podstawową wartością wystąpienia wyliczenia jest 0.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-134">As the following example shows, in this case the underlying value of the enumeration instance is 0.</span></span> <span data-ttu-id="e0e1c-135">Nie jest to jednak konieczność prawidłowej stałej w wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-135">However, this is not necessarily the value of a valid constant in the enumeration.</span></span>  
  
     [!code-csharp[System.Enum.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#3)]
     [!code-vb[System.Enum.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#3)]  
  
-   <span data-ttu-id="e0e1c-136">Wywołując <xref:System.Enum.Parse%2A> metodę lub <xref:System.Enum.TryParse%2A> , aby przeanalizować ciąg, który zawiera nazwę stałej w wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-136">By calling the <xref:System.Enum.Parse%2A> or <xref:System.Enum.TryParse%2A> method to parse a string that contains the name of a constant in the enumeration.</span></span> <span data-ttu-id="e0e1c-137">Aby uzyskać więcej informacji, zobacz sekcję [Analizowanie wartości wyliczenia](#parsing) .</span><span class="sxs-lookup"><span data-stu-id="e0e1c-137">For more information, see the [Parsing Enumeration Values](#parsing) section.</span></span>  
  
-   <span data-ttu-id="e0e1c-138">Przez wywołanie <xref:System.Enum.ToObject%2A> metody w celu przekonwertowania wartości całkowitej na typ wyliczeniowy.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-138">By calling the <xref:System.Enum.ToObject%2A> method to convert an integral value to an enumeration type.</span></span> <span data-ttu-id="e0e1c-139">Aby uzyskać więcej informacji, zobacz sekcję [wykonywanie konwersji](#conversions) .</span><span class="sxs-lookup"><span data-stu-id="e0e1c-139">For more information, see the [Performing Conversions](#conversions) section.</span></span>  
  
<a name="BestPractices"></a>   
## <a name="enumeration-best-practices"></a><span data-ttu-id="e0e1c-140">Najlepsze rozwiązania w zakresie wyliczania</span><span class="sxs-lookup"><span data-stu-id="e0e1c-140">Enumeration best practices</span></span>  
 <span data-ttu-id="e0e1c-141">Zalecamy stosowanie następujących najlepszych rozwiązań podczas definiowania typów wyliczeniowych:</span><span class="sxs-lookup"><span data-stu-id="e0e1c-141">We recommend that you use the following best practices when you define enumeration types:</span></span>  
  
-   <span data-ttu-id="e0e1c-142">Jeśli nie zdefiniowano elementu członkowskiego wyliczenia, którego wartość wynosi 0, należy rozważyć `None` utworzenie stałej wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-142">If you have not defined an enumeration member whose value is 0, consider creating a `None` enumerated constant.</span></span> <span data-ttu-id="e0e1c-143">Domyślnie pamięć użyta do wyliczenia jest inicjowana do zera przez środowisko uruchomieniowe języka wspólnego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-143">By default, the memory used for the enumeration is initialized to zero by the common language runtime.</span></span> <span data-ttu-id="e0e1c-144">W związku z tym, jeśli nie zdefiniujesz stałej, której wartość wynosi zero, Wyliczenie będzie zawierać niedozwoloną wartość podczas tworzenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-144">Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.</span></span>  
  
-   <span data-ttu-id="e0e1c-145">Jeśli występuje oczywisty przypadek domyślny, który aplikacja musi reprezentować, rozważ użycie stałej wyliczanej, której wartość jest równa zero, aby przedstawić ją.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-145">If there is an obvious default case that your application has to represent, consider using an enumerated constant whose value is zero to represent it.</span></span> <span data-ttu-id="e0e1c-146">Jeśli nie ma domyślnego przypadku, rozważ użycie stałej wyliczenia, której wartość jest równa zero, aby określić przypadek, który nie jest reprezentowany przez żadną z innych stałych wyliczeniowych.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-146">If there is no default case, consider using an enumerated constant whose value is zero to specify the case that is not represented by any of the other enumerated constants.</span></span>  
  
-   <span data-ttu-id="e0e1c-147">Nie określaj stałych, które są zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-147">Do not specify enumerated constants that are reserved for future use.</span></span>  
  
-   <span data-ttu-id="e0e1c-148">Podczas definiowania metody lub właściwości, która pobiera stałą jako wartość, należy rozważyć sprawdzenie poprawności wartości.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-148">When you define a method or property that takes an enumerated constant as a value, consider validating the value.</span></span> <span data-ttu-id="e0e1c-149">Przyczyną jest to, że można rzutować wartość liczbową na typ wyliczeniowy, nawet jeśli ta wartość liczbowa nie jest zdefiniowana w wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-149">The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.</span></span>  
  
 <span data-ttu-id="e0e1c-150">Dodatkowe najlepsze rozwiązania dla typów wyliczeniowych, których stałe są polami bitowymi, znajdują się w niewyłącznym elemencie [członkowskim i](#Flags) sekcji flags.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-150">Additional best practices for enumeration types whose constants are bit fields are listed in the [Non-Exclusive Members and the Flags Attribute](#Flags) section.</span></span>  
  
<a name="Operations"></a>   
## <a name="performing-operations-with-enumerations"></a><span data-ttu-id="e0e1c-151">Wykonywanie operacji z wyliczeniami</span><span class="sxs-lookup"><span data-stu-id="e0e1c-151">Performing operations with enumerations</span></span>  
 <span data-ttu-id="e0e1c-152">Podczas tworzenia wyliczenia nie można definiować nowych metod.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-152">You cannot define new methods when you are creating an enumeration.</span></span> <span data-ttu-id="e0e1c-153">Jednak typ wyliczeniowy dziedziczy kompletny zestaw metod static i instance z <xref:System.Enum> klasy.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-153">However, an enumeration type inherits a complete set of static and instance methods from the <xref:System.Enum> class.</span></span> <span data-ttu-id="e0e1c-154">W poniższych sekcjach opisano większość tych metod, a także kilka innych metod, które są często używane podczas pracy z wartościami wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-154">The following sections survey most of these methods, in addition to several other methods that are commonly used when working with enumeration values.</span></span>  
  
<a name="conversions"></a>   
### <a name="performing-conversions"></a><span data-ttu-id="e0e1c-155">Wykonywanie konwersji</span><span class="sxs-lookup"><span data-stu-id="e0e1c-155">Performing conversions</span></span>  
 <span data-ttu-id="e0e1c-156">Można konwertować między wyliczeniem składowej a jego typem podstawowym przy użyciu operatora rzutowania ( C#in) lub konwersji (w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-156">You can convert between an enumeration member and its underlying type by using a casting (in C#) or conversion (in Visual Basic) operator.</span></span> <span data-ttu-id="e0e1c-157">Poniższy przykład używa rzutowania lub operatory konwersji do wykonania konwersji zarówno z liczby całkowitej na wartość wyliczenia, jak i z wartości wyliczenia na liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-157">The following example uses casting or conversion operators to perform conversions both from an integer to an enumeration value and from an enumeration value to an integer.</span></span>  
  
 [!code-csharp[System.Enum.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#5)]
 [!code-vb[System.Enum.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#5)]  
  
 <span data-ttu-id="e0e1c-158"><xref:System.Enum> Klasa zawierarównieżmetodę,którakonwertujewartośćdowolnegotypu<xref:System.Enum.ToObject%2A> całkowitego na wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-158">The <xref:System.Enum> class also includes a <xref:System.Enum.ToObject%2A> method that converts a value of any integral type to an enumeration value.</span></span> <span data-ttu-id="e0e1c-159">Poniższy przykład używa <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> metody do <xref:System.Int32> konwersji do `ArrivalStatus` wartości.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-159">The following example uses the <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method to convert an <xref:System.Int32> to an `ArrivalStatus` value.</span></span> <span data-ttu-id="e0e1c-160">Należy zauważyć, że ponieważ <xref:System.Enum.ToObject%2A> zwraca wartość typu <xref:System.Object>, użycie rzutowania lub operatora konwersji może być nadal konieczne do rzutowania obiektu na typ wyliczeniowy.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-160">Note that, because the <xref:System.Enum.ToObject%2A> returns a value of type <xref:System.Object>, the use of a casting or conversion operator may still be necessary to cast the object to the enumeration type.</span></span>  
  
 [!code-csharp[System.Enum.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#6)]
 [!code-vb[System.Enum.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#6)]  
  
 <span data-ttu-id="e0e1c-161">Podczas konwertowania liczby całkowitej na wartość wyliczenia można przypisać wartość, która nie jest w rzeczywistości elementem członkowskim wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-161">When converting an integer to an enumeration value, it is possible to assign a value that is not actually a member of the enumeration.</span></span> <span data-ttu-id="e0e1c-162">Aby tego uniknąć, można przekazać liczbę całkowitą do <xref:System.Enum.IsDefined%2A> metody przed przeprowadzeniem konwersji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-162">To prevent this, you can pass the integer to the <xref:System.Enum.IsDefined%2A> method before performing the conversion.</span></span> <span data-ttu-id="e0e1c-163">Poniższy przykład używa tej metody, aby określić, czy elementy tablicy wartości całkowitych mogą być konwertowane na `ArrivalStatus` wartości.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-163">The following example uses this method to determine whether the elements in an array of integer values can be converted to `ArrivalStatus` values.</span></span>  
  
 [!code-csharp[System.Enum.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion1.cs#7)]
 [!code-vb[System.Enum.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion1.vb#7)]  
  
 <span data-ttu-id="e0e1c-164">Chociaż Klasa zawiera jawne implementacje <xref:System.IConvertible> interfejsu w celu przeprowadzenia konwersji z wartości wyliczenia na typ całkowity, należy <xref:System.Convert> użyć metod klasy, takich jak <xref:System.Convert.ToInt32%2A>, do <xref:System.Enum> wykonaj te konwersje.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-164">Although the <xref:System.Enum> class provides explicit interface implementations of the <xref:System.IConvertible> interface for converting from an enumeration value to an integral type, you should use the methods of the <xref:System.Convert> class, such as <xref:System.Convert.ToInt32%2A>, to perform these conversions.</span></span> <span data-ttu-id="e0e1c-165">Poniższy przykład ilustruje, jak można użyć <xref:System.Enum.GetUnderlyingType%2A> metody wraz z metodą, <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> aby przekonwertować wartość wyliczenia na jej typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-165">The following example illustrates how you can use the <xref:System.Enum.GetUnderlyingType%2A> method along with the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method to convert an enumeration value to its underlying type.</span></span> <span data-ttu-id="e0e1c-166">Należy zauważyć, że ten przykład nie wymaga, aby typ podstawowy wyliczenia był znany w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-166">Note that this example does not require the underlying type of the enumeration to be known at compile time.</span></span>  
  
 [!code-csharp[System.Enum.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion2.cs#8)]
 [!code-vb[System.Enum.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion2.vb#8)]  
  
<a name="parsing"></a>   
### <a name="parsing-enumeration-values"></a><span data-ttu-id="e0e1c-167">Analizowanie wartości wyliczenia</span><span class="sxs-lookup"><span data-stu-id="e0e1c-167">Parsing enumeration values</span></span>  
 <span data-ttu-id="e0e1c-168">Metody <xref:System.Enum.Parse%2A> i<xref:System.Enum.TryParse%2A> umożliwiają konwertowanie ciągu reprezentującego wartość wyliczenia na tę wartość.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-168">The <xref:System.Enum.Parse%2A> and <xref:System.Enum.TryParse%2A> methods allow you to convert the string representation of an enumeration value to that value.</span></span> <span data-ttu-id="e0e1c-169">Reprezentacja ciągu może być nazwą lub podstawową wartością stałej wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-169">The string representation can be either the name or the underlying value of an enumeration constant.</span></span> <span data-ttu-id="e0e1c-170">Należy zauważyć, że metody analizy pomyślnie konwertują reprezentacje ciągów liczb, które nie są elementami członkowskimi określonego wyliczenia, jeśli ciągi mogą być konwertowane na wartość typu podstawowego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-170">Note that the parsing methods will successfully convert string representations of numbers that are not members of a particular enumeration if the strings can be converted to a value of the enumeration's underlying type.</span></span> <span data-ttu-id="e0e1c-171">Aby tego uniknąć, można <xref:System.Enum.IsDefined%2A> wywołać metodę, aby upewnić się, że wynik metody analizy jest prawidłową wartością wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-171">To prevent this, the <xref:System.Enum.IsDefined%2A> method can be called to ensure that the result of the parsing method is a valid enumeration value.</span></span> <span data-ttu-id="e0e1c-172">Przykład ilustruje to podejście i demonstruje wywołania obu <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metod i. <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e0e1c-172">The example illustrates this approach and demonstrates calls to both the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> and <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="e0e1c-173">Należy zauważyć, że metoda analizy niegenerycznej zwraca obiekt, który może być konieczne do rzutowania C#(w) lub przekonwertować (w Visual Basic) na odpowiedni typ wyliczeniowy.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-173">Note that the non-generic parsing method returns an object that you may have to cast (in C#) or convert (in Visual Basic) to the appropriate enumeration type.</span></span>  
  
 [!code-csharp[System.Enum.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classparse1.cs#9)]
 [!code-vb[System.Enum.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classparse1.vb#9)]  
  
<a name="formatting"></a>   
### <a name="formatting-enumeration-values"></a><span data-ttu-id="e0e1c-174">Formatowanie wartości wyliczenia</span><span class="sxs-lookup"><span data-stu-id="e0e1c-174">Formatting enumeration values</span></span>  
 <span data-ttu-id="e0e1c-175">Można przekonwertować wartości wyliczenia na ich reprezentacje ciągów, wywołując metodę statyczną <xref:System.Enum.Format%2A> , a także przeciążenia metody wystąpienia. <xref:System.Enum.ToString%2A></span><span class="sxs-lookup"><span data-stu-id="e0e1c-175">You can convert enumeration values to their string representations by calling the static <xref:System.Enum.Format%2A> method, as well as the overloads of the instance <xref:System.Enum.ToString%2A> method.</span></span> <span data-ttu-id="e0e1c-176">Możesz użyć ciągu formatu, aby kontrolować precyzyjną metodę, w której wartość wyliczenia jest reprezentowana jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-176">You can use a format string to control the precise way in which an enumeration value is represented as a string.</span></span> <span data-ttu-id="e0e1c-177">Aby uzyskać więcej informacji, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-177">For more information, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="e0e1c-178">W poniższym przykładzie zastosowano wszystkie obsługiwane ciągi formatujące Wyliczenie ("g" lub "g", "d" lub "d", "x", "x", "f" lub "f") w celu przekonwertowania elementu członkowskiego `ArrivalStatus` wyliczenia na jego reprezentacje ciągów.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-178">The following example uses each of the supported enumeration format strings ("G" or "g", "D" or "d", "X" or "x", and "F" or "f" ) to convert a member of the `ArrivalStatus` enumeration to its string representations.</span></span>  
  
 [!code-csharp[System.Enum.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classformat1.cs#10)]
 [!code-vb[System.Enum.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classformat1.vb#10)]  
  
<a name="iterating"></a>   
### <a name="iterating-enumeration-members"></a><span data-ttu-id="e0e1c-179">Iterowanie elementów członkowskich wyliczenia</span><span class="sxs-lookup"><span data-stu-id="e0e1c-179">Iterating enumeration members</span></span>  
 <span data-ttu-id="e0e1c-180">C# `For Each` `foreach` Typ nie <xref:System.Collections.Generic.IEnumerable%601> implementuje interfejsu lub, co pozwoli na iterację elementów członkowskich kolekcji przy użyciu konstrukcji (in) lub (w Visual Basic). <xref:System.Collections.IEnumerable> <xref:System.Enum></span><span class="sxs-lookup"><span data-stu-id="e0e1c-180">The <xref:System.Enum> type does not implement the <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601> interface, which would enable you to iterate members of a collection by using a `foreach` (in C#) or `For Each` (in Visual Basic) construct.</span></span> <span data-ttu-id="e0e1c-181">Można jednak wyliczać składowe na jeden z dwóch sposobów.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-181">However, you can enumerate members in either of two ways.</span></span>  
  
-   <span data-ttu-id="e0e1c-182">Możesz wywołać metodę, <xref:System.Enum.GetNames%2A> aby pobrać tablicę ciągów zawierającą nazwy elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-182">You can call the <xref:System.Enum.GetNames%2A> method to retrieve a string array containing the names of the enumeration members.</span></span> <span data-ttu-id="e0e1c-183">Następnie dla każdego elementu tablicy ciągów można wywołać <xref:System.Enum.Parse%2A> metodę w celu przekonwertowania ciągu na jego równoważną wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-183">Next, for each element of the string array, you can call the <xref:System.Enum.Parse%2A> method to convert the string to its equivalent enumeration value.</span></span> <span data-ttu-id="e0e1c-184">To podejście pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-184">The following example illustrates this approach.</span></span>  
  
     [!code-csharp[System.Enum.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#11)]
     [!code-vb[System.Enum.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#11)]  
  
-   <span data-ttu-id="e0e1c-185">Możesz wywołać <xref:System.Enum.GetValues%2A> metodę, aby pobrać tablicę, która zawiera bazowe wartości w wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-185">You can call the <xref:System.Enum.GetValues%2A> method to retrieve an array that contains the underlying values in the enumeration.</span></span> <span data-ttu-id="e0e1c-186">Następnie dla każdego elementu tablicy można wywołać <xref:System.Enum.ToObject%2A> metodę, aby przekonwertować liczbę całkowitą na odpowiadającą jej wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-186">Next, for each element of the array, you can call the <xref:System.Enum.ToObject%2A> method to convert the integer to its equivalent enumeration value.</span></span> <span data-ttu-id="e0e1c-187">To podejście pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-187">The following example illustrates this approach.</span></span>  
  
     [!code-csharp[System.Enum.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#12)]
     [!code-vb[System.Enum.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#12)]  
  
<a name="Flags"></a>   
## <a name="non-exclusive-members-and-the-flags-attribute"></a><span data-ttu-id="e0e1c-188">Niewyłączne elementy członkowskie i atrybuty flag</span><span class="sxs-lookup"><span data-stu-id="e0e1c-188">Non-exclusive members and the Flags attribute</span></span>  
 <span data-ttu-id="e0e1c-189">Typowym zastosowaniem wyliczenia jest przedstawienie zestawu wzajemnie wykluczających się wartości.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-189">One common use of an enumeration is to represent a set of mutually exclusive values.</span></span> <span data-ttu-id="e0e1c-190">Na przykład `ArrivalStatus` wystąpienie może mieć `Early`wartość, `OnTime`, lub `Late`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-190">For example, an `ArrivalStatus` instance can have a value of `Early`, `OnTime`, or `Late`.</span></span> <span data-ttu-id="e0e1c-191">Nie ma sensu, aby wartość `ArrivalStatus` wystąpienia odzwierciedlała więcej niż jedną stałą wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-191">It makes no sense for the value of an `ArrivalStatus` instance to reflect more than one enumeration constant.</span></span>  
  
 <span data-ttu-id="e0e1c-192">Jednak w innych przypadkach wartość obiektu wyliczenia może zawierać wiele elementów członkowskich wyliczenia, a każdy element członkowski reprezentuje pole bitowe w wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-192">In other cases, however, the value of an enumeration object can include multiple enumeration members, and each member represents a bit field in the enumeration value.</span></span> <span data-ttu-id="e0e1c-193">Ten <xref:System.FlagsAttribute> atrybut może być używany do wskazania, że Wyliczenie składa się z pól bitowych.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-193">The <xref:System.FlagsAttribute> attribute can be used to indicate that the enumeration consists of bit fields.</span></span> <span data-ttu-id="e0e1c-194">Na przykład Wyliczenie o nazwie `Pets` może służyć do wskazania rodzajów zwierząt domowych w gospodarstwie domowym.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-194">For example, an enumeration named `Pets` might be used to indicate the kinds of pets in a household.</span></span> <span data-ttu-id="e0e1c-195">Można je zdefiniować w następujący sposób.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-195">It can be defined as follows.</span></span>  
  
 [!code-csharp[System.Enum.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#13)]
 [!code-vb[System.Enum.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#13)]  
  
 <span data-ttu-id="e0e1c-196">`Pets` Wyliczenia można następnie użyć, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-196">The `Pets` enumeration can then be used as shown in the following example.</span></span>  
  
 [!code-csharp[System.Enum.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#14)]
 [!code-vb[System.Enum.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#14)]  
  
 <span data-ttu-id="e0e1c-197">Podczas definiowania wyliczenia bitowego i stosowania <xref:System.FlagsAttribute> atrybutu należy stosować następujące najlepsze rozwiązania.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-197">The following best practices should be used when defining a bitwise enumeration and applying the <xref:System.FlagsAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="e0e1c-198">Użyj atrybutu <xref:System.FlagsAttribute> niestandardowego dla wyliczenia tylko wtedy, gdy operacja bitowa (oraz, lub, wyłączny lub) ma być wykonywana na wartości liczbowej.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-198">Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.</span></span>  
  
-   <span data-ttu-id="e0e1c-199">Zdefiniuj stałe wyliczenia w uprawnieniach dwóch, czyli 1, 2, 4, 8 itd.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-199">Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on.</span></span> <span data-ttu-id="e0e1c-200">Oznacza to, że poszczególne flagi w połączonych stałych wyliczenia nie nakładają się na siebie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-200">This means the individual flags in combined enumeration constants do not overlap.</span></span>  
  
-   <span data-ttu-id="e0e1c-201">Rozważ utworzenie stałej wyliczenia dla często używanych kombinacji flag.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-201">Consider creating an enumerated constant for commonly used flag combinations.</span></span> <span data-ttu-id="e0e1c-202">Na przykład jeśli masz Wyliczenie używane dla operacji we/wy na plikach, które zawierają wyliczenia stałe `Read = 1` i `Write = 2`Rozważ utworzenie `Read` stałej `ReadWrite = Read OR Write`wyliczenia, która łączy i `Write` znaczników.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-202">For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags.</span></span> <span data-ttu-id="e0e1c-203">Ponadto bitowe lub operacje używane do łączenia flag mogą być uznawane za zaawansowaną koncepcję w pewnych okolicznościach, które nie powinny być wymagane w przypadku prostych zadań.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-203">In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.</span></span>  
  
-   <span data-ttu-id="e0e1c-204">Należy zachować ostrożność, jeśli zdefiniujesz liczbę ujemną jako stałą jako flagę, ponieważ wiele pozycji flagi może być ustawiona na 1, co może sprawiać, że kod jest mylący i zachęca do błędów kodowania.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-204">Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.</span></span>  
  
-   <span data-ttu-id="e0e1c-205">Wygodnym sposobem sprawdzenia, czy flaga jest ustawiona w wartości liczbowej, jest wywołanie metody instancji <xref:System.Enum.HasFlag%2A> , jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-205">A convenient way to test whether a flag is set in a numeric value is to call the instance <xref:System.Enum.HasFlag%2A> method, as shown in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#15)]
     [!code-vb[System.Enum.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#15)]  
  
     <span data-ttu-id="e0e1c-206">Jest to równoznaczne z wykonywaniem bitowej i operacji między wartością liczbową i stałą oznaczającą flagą, która ustawia wszystkie bity w wartości liczbowej na zero, które nie odpowiadają flagze, a następnie testuje, czy wynik tej operacji jest równy Oznacz stałą jako flagę.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-206">It is equivalent to performing a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, and then testing whether the result of that operation is equal to the flag enumerated constant.</span></span> <span data-ttu-id="e0e1c-207">Jest to zilustrowane w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-207">This is illustrated in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#16)]
     [!code-vb[System.Enum.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#16)]  
  
-   <span data-ttu-id="e0e1c-208">Użyj `None` jako nazwy stałej wyliczeniowej flagi, której wartość jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-208">Use `None` as the name of the flag enumerated constant whose value is zero.</span></span> <span data-ttu-id="e0e1c-209">Nie można użyć `None` stałej wyliczenia w koniunkcji bitowej i do przetestowania flagi, ponieważ wynik jest zawsze równy zero.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-209">You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero.</span></span> <span data-ttu-id="e0e1c-210">Można jednak wykonać logiczne, a nie bitowe, porównanie między wartością liczbową i `None` stałą wyliczaną, aby określić, czy wszystkie bity w wartości liczbowej są ustawione.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-210">However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set.</span></span> <span data-ttu-id="e0e1c-211">Jest to zilustrowane w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-211">This is illustrated in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#17)]
     [!code-vb[System.Enum.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#17)]  
  
-   <span data-ttu-id="e0e1c-212">Nie należy definiować wartości wyliczenia wyłącznie w celu dublowania stanu samego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-212">Do not define an enumeration value solely to mirror the state of the enumeration itself.</span></span> <span data-ttu-id="e0e1c-213">Na przykład nie należy definiować stałej wyliczenia, która jedynie oznacza koniec wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-213">For example, do not define an enumerated constant that merely marks the end of the enumeration.</span></span> <span data-ttu-id="e0e1c-214">Jeśli musisz określić ostatnią wartość wyliczenia, sprawdź tę wartość jawnie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-214">If you need to determine the last value of the enumeration, check for that value explicitly.</span></span> <span data-ttu-id="e0e1c-215">Ponadto można przeprowadzić Sprawdzanie zakresu dla pierwszej i ostatniej wyliczanej stałej, jeśli wszystkie wartości w zakresie są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-215">In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.</span></span>  
  
<a name="Methods"></a>   
## <a name="adding-enumeration-methods"></a><span data-ttu-id="e0e1c-216">Dodawanie metod wyliczenia</span><span class="sxs-lookup"><span data-stu-id="e0e1c-216">Adding enumeration methods</span></span>  
 <span data-ttu-id="e0e1c-217">Ponieważ typy wyliczeniowe są zdefiniowane przez struktury języka, `enum` takieC#jak ( `Enum` ) i (Visual Basic), nie można definiować metod niestandardowych dla typu wyliczenia <xref:System.Enum> innego niż metody dziedziczone z klasy.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-217">Because enumeration types are defined by language structures, such as `enum` (C#) and `Enum` (Visual Basic), you cannot define custom methods for an enumeration type other than those methods inherited from the <xref:System.Enum> class.</span></span>  <span data-ttu-id="e0e1c-218">Można jednak użyć metod rozszerzających, aby dodać funkcjonalność do określonego typu wyliczeniowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-218">However, you can use extension methods to add functionality to a particular enumeration type.</span></span>  
  
 <span data-ttu-id="e0e1c-219">W poniższym przykładzie `Grades` Wyliczenie reprezentuje możliwe klasy liter, które student może odebrać w klasie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-219">In the following example, the `Grades` enumeration represents the possible letter grades that a student may receive in a class.</span></span> <span data-ttu-id="e0e1c-220">Metoda rozszerzenia o nazwie `Passing` jest dodawana `Grades` do typu, tak aby każde wystąpienie tego typu było teraz "znane", niezależnie od tego, czy reprezentuje ona przewagę, czy nie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-220">An extension method named `Passing` is added to the `Grades` type so that each instance of that type now "knows" whether it represents a passing grade or not.</span></span>       <span data-ttu-id="e0e1c-221">`Extensions` Klasa zawiera także statyczną zmienną do odczytu i zapisu, która definiuje minimalną przekazaną ocenę.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-221">The `Extensions` class also contains a static read-write variable that defines the minimum passing grade.</span></span> <span data-ttu-id="e0e1c-222">Wartość zwracana metody `Passing` rozszerzenia odzwierciedla bieżącą wartość tej zmiennej.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-222">The return value of the `Passing` extension method reflects the current value of that variable.</span></span>  
  
 [!code-csharp[System.Enum.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/Extensions.cs#18)]
 [!code-vb[System.Enum.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/Extensions.vb#18)]  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-223">Poniższy przykład ilustruje użycie wyliczenia do reprezentowania nazwanych wartości i inne Wyliczenie do reprezentowania pól bitów nazwanych.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-223">The following example demonstrates using an enumeration to represent named values and another enumeration to represent named bit fields.</span></span>  
  
 [!code-cpp[enummain#1](~/samples/snippets/cpp/VS_Snippets_CLR/enummain/CPP/EnumMain.cpp#1)]
 [!code-csharp[enummain#1](~/samples/snippets/csharp/VS_Snippets_CLR/enummain/CS/EnumMain.cs#1)]
 [!code-vb[enummain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enummain/VB/EnumMain.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e0e1c-224">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-224">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.ValueType" />
    <altmember cref="T:System.FlagsAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Enum ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Enum();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0e1c-225">Inicjuje nowe wystąpienie klasy <see cref="T:System.Enum" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-225">Initializes a new instance of the <see cref="T:System.Enum" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (target As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="enum.CompareTo target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="e0e1c-226">Obiekt do porównania lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-226">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e0e1c-227">Porównuje to wystąpienie z określonym obiektem i zwraca wskazanie ich względnych wartości.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-227">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-228">Liczba ze znakiem, która wskazuje wartości względne tego wystąpienia <paramref name="target" />i.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-228">A signed number that indicates the relative values of this instance and <paramref name="target" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="e0e1c-229">Wartość</span><span class="sxs-lookup"><span data-stu-id="e0e1c-229">Value</span></span> 
 </term><description> <span data-ttu-id="e0e1c-230">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="e0e1c-230">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="e0e1c-231">Mniej niż zero</span><span class="sxs-lookup"><span data-stu-id="e0e1c-231">Less than zero</span></span> 
 </term><description> <span data-ttu-id="e0e1c-232">Wartość tego wystąpienia jest mniejsza niż wartość parametru <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-232">The value of this instance is less than the value of <paramref name="target" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e0e1c-233">Zero</span><span class="sxs-lookup"><span data-stu-id="e0e1c-233">Zero</span></span> 
 </term><description> <span data-ttu-id="e0e1c-234">Wartość tego wystąpienia jest równa wartości <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-234">The value of this instance is equal to the value of <paramref name="target" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e0e1c-235">Większe od zera</span><span class="sxs-lookup"><span data-stu-id="e0e1c-235">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="e0e1c-236">Wartość tego wystąpienia jest większa niż wartość parametru <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-236">The value of this instance is greater than the value of <paramref name="target" />.</span></span>  
  
<span data-ttu-id="e0e1c-237">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-237">-or-</span></span> 
 <span data-ttu-id="e0e1c-238"><paramref name="target" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-238"><paramref name="target" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e0e1c-239">Poniższy przykład ilustruje użycie `CompareTo` w `Enum`kontekście.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-239">The following example illustrates the use of `CompareTo` in the context of `Enum`.</span></span>  
  
 [!code-cpp[enumcompareto#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumcompareto/CPP/EnumCompareTo.cpp#1)]
 [!code-csharp[enumcompareto#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumcompareto/CS/EnumCompareTo.cs#1)]
 [!code-vb[enumcompareto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumcompareto/VB/EnumCompareTo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-240"><paramref name="target" />i to wystąpienie nie jest tym samym typem.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-240"><paramref name="target" /> and this instance are not the same type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e0e1c-241">To wystąpienie nie jest typu <see cref="T:System.SByte" />, <see cref="T:System.Int16" /> <see cref="T:System.Int32" /> <see cref="T:System.Int64" />, ,,<see cref="T:System.UInt16" />,,, lub .<see cref="T:System.UInt64" /> <see cref="T:System.Byte" /> <see cref="T:System.UInt32" /></span><span class="sxs-lookup"><span data-stu-id="e0e1c-241">This instance is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />.</span></span></exception>
        <altmember cref="M:System.Enum.Equals(System.Object)" />
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="e0e1c-242">To wystąpienie ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-242">This instance is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="enum.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e0e1c-243">Obiekt, <see langword="null" />który ma zostać porównany z tym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-243">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e0e1c-244">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-244">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-245"><see langword="true" />if <paramref name="obj" /> jest wartością wyliczenia tego samego typu i z tą samą wartością bazową co to wystąpienie; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-245"><see langword="true" /> if <paramref name="obj" /> is an enumeration value of the same type and with the same underlying value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-246"><xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType> Metoda zastępuje<xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> metodę, aby określić sposób oceniania elementów członkowskich wyliczenia pod kątem równości.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-246">The <xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType> method overrides <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> to define how enumeration members are evaluated for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-247">Poniższy przykład ilustruje <xref:System.Enum.Equals%2A> sposób używania metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-247">The following example illustrates the use of the <xref:System.Enum.Equals%2A> method.</span></span>  
  
 [!code-cpp[enumequals#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumequals/CPP/EnumEquals.cpp#1)]
 [!code-csharp[enumequals#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumequals/CS/EnumEquals.cs#1)]
 [!code-vb[enumequals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumequals/VB/EnumEquals.vb#1)]  
  
 <span data-ttu-id="e0e1c-248">W poniższym przykładzie zdefiniowano dwa typy `SledDog` wyliczeniowe i. `WorkDog`</span><span class="sxs-lookup"><span data-stu-id="e0e1c-248">The following example defines two enumeration types, `SledDog` and `WorkDog`.</span></span> <span data-ttu-id="e0e1c-249">Wyliczenie ma dwa `SledDog.AlaskanMalamute` elementy członkowskie i `SledDog.Malamute`, które ma taką samą wartość podstawową. `SledDog`</span><span class="sxs-lookup"><span data-stu-id="e0e1c-249">The `SledDog` enumeration has two members, `SledDog.AlaskanMalamute` and `SledDog.Malamute`, that have the same underlying value.</span></span> <span data-ttu-id="e0e1c-250">Wywołanie <xref:System.Enum.Equals%2A> metody wskazuje, że te wartości są równe, ponieważ ich wartości bazowe są takie same.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-250">The call to the <xref:System.Enum.Equals%2A> method indicates that these values are equal because their underlying values are the same.</span></span> <span data-ttu-id="e0e1c-251">Elementy członkowskie `WorkDog.Newfoundland` i mają tę samą wartość bazową, chociaż reprezentują różne typy wyliczeniowe. `SledDog.Malamute`</span><span class="sxs-lookup"><span data-stu-id="e0e1c-251">The `SledDog.Malamute` and `WorkDog.Newfoundland` members have the same underlying value, although they represent different enumeration types.</span></span> <span data-ttu-id="e0e1c-252">Wywołanie <xref:System.Enum.Equals%2A> metody wskazuje, że te wartości nie są równe.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-252">A call to the <xref:System.Enum.Equals%2A> method indicates that these values are not equal.</span></span>  
  
 [!code-csharp[System.Enum.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.equals/cs/enumequals.cs#1)]
 [!code-vb[System.Enum.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.equals/vb/enumequals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Enum.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (Type enumType, object value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.Type enumType, object value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Format(System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (enumType As Type, value As Object, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(Type ^ enumType, System::Object ^ value, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Format : Type * obj * string -&gt; string" Usage="System.Enum.Format (enumType, value, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-253">Typ wyliczenia wartości do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-253">The enumeration type of the value to convert.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-254">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-254">The value to convert.</span></span></param>
        <param name="format"><span data-ttu-id="e0e1c-255">Format danych wyjściowych do użycia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-255">The output format to use.</span></span></param>
        <summary><span data-ttu-id="e0e1c-256">Konwertuje określoną wartość określonego typu wyliczeniowego na odpowiadającą reprezentację ciągu zgodną z określonym formatem.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-256">Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-257">Reprezentacja <paramref name="value" />ciągu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-257">A string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-258">W poniższej tabeli przedstawiono prawidłowe wartości `format` parametru.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-258">The following table shows the valid values for the `format` parameter.</span></span>  
  
|<span data-ttu-id="e0e1c-259">Format</span><span class="sxs-lookup"><span data-stu-id="e0e1c-259">Format</span></span>|<span data-ttu-id="e0e1c-260">Opis</span><span class="sxs-lookup"><span data-stu-id="e0e1c-260">Description</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="e0e1c-261">„G” lub „g”</span><span class="sxs-lookup"><span data-stu-id="e0e1c-261">"G" or "g"</span></span>|<span data-ttu-id="e0e1c-262">Jeśli `value` jest taka sama jak nazwana stała wyliczeniowa, zwracana jest nazwa tej stałej; w przeciwnym razie jest zwracany odpowiednik `value` dziesiętny elementu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-262">If `value` is equal to a named enumerated constant, the name of that constant is returned; otherwise, the decimal equivalent of `value` is returned.</span></span><br /><br /> <span data-ttu-id="e0e1c-263">Załóżmy na przykład, że jedyna wyliczona stała ma nazwę Red, a jej wartość to 1.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-263">For example, suppose the only enumerated constant is named Red, and its value is 1.</span></span> <span data-ttu-id="e0e1c-264">Jeśli `value` jest określony jako 1, ten format zwraca "Red".</span><span class="sxs-lookup"><span data-stu-id="e0e1c-264">If `value` is specified as 1, this format returns "Red".</span></span> <span data-ttu-id="e0e1c-265">Jeśli `value` jednak jest określony jako 2, ten format zwraca wartość "2".</span><span class="sxs-lookup"><span data-stu-id="e0e1c-265">However, if `value` is specified as 2, this format returns "2".</span></span><br /><br /> <span data-ttu-id="e0e1c-266">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-266">-or-</span></span><br /><br /> <span data-ttu-id="e0e1c-267">Jeśli atrybut `value` niestandardowy jest stosowany do wyliczenia, jest traktowany jako pole bitowe, które zawiera co najmniej jedną flagę, która składa się z co najmniej jednej usługi BITS. <xref:System.FlagsAttribute></span><span class="sxs-lookup"><span data-stu-id="e0e1c-267">If the <xref:System.FlagsAttribute> custom attribute is applied to the enumeration, `value` is treated as a bit field that contains one or more flags that consist of one or more bits.</span></span><br /><br /> <span data-ttu-id="e0e1c-268">Jeśli `value` jest równa kombinacji nazwanych stałych, zostanie zwrócona lista oddzielających nazwy tych stałych.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-268">If `value` is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned.</span></span> <span data-ttu-id="e0e1c-269">`value`wyszukuje flagi, przechodząc od flagi o największej wartości do najmniejszej wartości.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-269">`value` is searched for flags, going from the flag with the largest value to the smallest value.</span></span> <span data-ttu-id="e0e1c-270">Dla każdej flagi, która odnosi się do pola bitowego `value`w, nazwa stałej jest łączona z listą oddzieloną ogranicznikiem.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-270">For each flag that corresponds to a bit field in `value`, the name of the constant is concatenated to the delimiter-separated list.</span></span> <span data-ttu-id="e0e1c-271">Wartość tej flagi jest następnie wykluczana z dalszych rozważenia i wyszukiwanie będzie kontynuowane dla następnej flagi.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-271">The value of that flag is then excluded from further consideration, and the search continues for the next flag.</span></span><br /><br /> <span data-ttu-id="e0e1c-272">Jeśli `value` nie jest równa kombinacji nazwanych stałych wyliczeniowych, zwracany `value` jest odpowiednik dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-272">If `value` is not equal to a combination of named enumerated constants, the decimal equivalent of `value` is returned.</span></span>|  
|<span data-ttu-id="e0e1c-273">„X” lub „x”</span><span class="sxs-lookup"><span data-stu-id="e0e1c-273">"X" or "x"</span></span>|<span data-ttu-id="e0e1c-274">Reprezentuje `value` format szesnastkowy bez wiodącego znaku "0x".</span><span class="sxs-lookup"><span data-stu-id="e0e1c-274">Represents `value` in hexadecimal format without a leading "0x".</span></span>|  
|<span data-ttu-id="e0e1c-275">„D” lub „d”</span><span class="sxs-lookup"><span data-stu-id="e0e1c-275">"D" or "d"</span></span>|<span data-ttu-id="e0e1c-276">Reprezentuje `value` w postaci dziesiętnej.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-276">Represents `value` in decimal form.</span></span>|  
|<span data-ttu-id="e0e1c-277">„F” lub „f”</span><span class="sxs-lookup"><span data-stu-id="e0e1c-277">"F" or "f"</span></span>|<span data-ttu-id="e0e1c-278">Zachowuje się tak samo jak "g" lub "g", z tą różnicą, że <xref:System.FlagsAttribute> nie musi być obecny <xref:System.Enum> w deklaracji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-278">Behaves identically to "G" or "g", except that the <xref:System.FlagsAttribute> is not required to be present on the <xref:System.Enum> declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-279">Poniższy przykład ilustruje użycie `Format` w `Enum`kontekście.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-279">The following example illustrates the use of `Format` in the context of `Enum`.</span></span>  
  
 [!code-cpp[enumformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumformat/CPP/EnumFormat.cpp#1)]
 [!code-csharp[enumformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumformat/CS/EnumFormat.cs#1)]
 [!code-vb[enumformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumformat/VB/EnumFormat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-280">Parametr <paramref name="enumType" />, <paramref name="value" />, lub <paramref name="format" /> jest .<see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="e0e1c-280">The <paramref name="enumType" />, <paramref name="value" />, or <paramref name="format" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-281"><paramref name="enumType" /> Parametr nie<see cref="T:System.Enum" /> jest typem.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-281">The <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" /> type.</span></span>  
  
<span data-ttu-id="e0e1c-282">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-282">-or-</span></span> 
<span data-ttu-id="e0e1c-283">Pochodzi z wyliczenia, które różni się od typu od <paramref name="enumType" />. <paramref name="value" /></span><span class="sxs-lookup"><span data-stu-id="e0e1c-283">The <paramref name="value" /> is from an enumeration that differs in type from <paramref name="enumType" />.</span></span>  
  
<span data-ttu-id="e0e1c-284">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-284">-or-</span></span> 
<span data-ttu-id="e0e1c-285">Typ elementu <paramref name="value" /> nie jest <paramref name="enumType" />typem podstawowym.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-285">The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e0e1c-286"><paramref name="format" /> Parametr zawiera nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-286">The <paramref name="format" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e0e1c-287"><paramref name="format" />równa się "X", ale typ wyliczeniowy jest nieznany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-287"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
        <altmember cref="M:System.Enum.ToString(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="e0e1c-288">Formatowanie typów w programie .NET</span><span class="sxs-lookup"><span data-stu-id="e0e1c-288">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="e0e1c-289">Wyliczanie ciągów formatujących</span><span class="sxs-lookup"><span data-stu-id="e0e1c-289">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="enum.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0e1c-290">Zwraca kod skrótu dla wartości tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-290">Returns the hash code for the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-291">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-291">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetName(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (enumType As Type, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member GetName : Type * obj -&gt; string" Usage="System.Enum.GetName (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-292">Typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-292">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-293">Wartość konkretnej stałej wyliczenia w zakresie jej typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-293">The value of a particular enumerated constant in terms of its underlying type.</span></span></param>
        <summary><span data-ttu-id="e0e1c-294">Pobiera nazwę stałej w określonym wyliczeniu, która ma określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-294">Retrieves the name of the constant in the specified enumeration that has the specified value.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-295">Ciąg zawierający nazwę stałej wyliczenia w <paramref name="enumType" /> której wartość to <paramref name="value" />lub <see langword="null" /> Jeśli nie można odnaleźć takiej stałej.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-295">A string containing the name of the enumerated constant in <paramref name="enumType" /> whose value is <paramref name="value" />; or <see langword="null" /> if no such constant is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-296">Jeśli wiele elementów członkowskich wyliczenia ma tę samą wartość bazową <xref:System.Enum.GetName%2A> , metoda gwarantuje, że zwróci nazwę jednego z tych elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-296">If multiple enumeration members have the same underlying value, the <xref:System.Enum.GetName%2A> method guarantees that it will return the name of one of those enumeration members.</span></span> <span data-ttu-id="e0e1c-297">Jednak nie gwarantuje to, że zawsze zwróci nazwę tego samego elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-297">However, it does not guarantee that it will always return the name of the same enumeration member.</span></span> <span data-ttu-id="e0e1c-298">W związku z tym, gdy wiele elementów członkowskich wyliczenia ma taką samą wartość, kod aplikacji nigdy nie zależy od metody zwracającej nazwę określonego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-298">As a result, when multiple enumeration members have the same value, your application code should never depend on the method returning a particular member's name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-299">Poniższy przykład ilustruje użycie `GetName`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-299">The following example illustrates the use of `GetName`.</span></span>  
  
 [!code-cpp[enumgetname#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetname/CPP/EnumGetName.cpp#1)]
 [!code-csharp[enumgetname#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetname/CS/EnumGetName.cs#1)]
 [!code-vb[enumgetname#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetname/VB/EnumGetName.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-300"><paramref name="enumType" />lub <paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-300"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-301"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-301"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="e0e1c-302">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-302">-or-</span></span> 
 <span data-ttu-id="e0e1c-303"><paramref name="value" />nie jest typem <paramref name="enumType" /> ani nie ma tego samego typu podstawowego co <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-303"><paramref name="value" /> is neither of type <paramref name="enumType" /> nor does it have the same underlying type as <paramref name="enumType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNames">
      <MemberSignature Language="C#" Value="public static string[] GetNames (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetNames(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetNames(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNames (enumType As Type) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetNames(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetNames : Type -&gt; string[]" Usage="System.Enum.GetNames enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-304">Typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-304">An enumeration type.</span></span></param>
        <summary><span data-ttu-id="e0e1c-305">Pobiera tablicę nazw stałych w określonym wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-305">Retrieves an array of the names of the constants in a specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-306">Tablica ciągów nazw stałych w <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-306">A string array of the names of the constants in <paramref name="enumType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-307">Elementy tablicy wartości zwracanej są sortowane według wartości binarnych stałych wyliczanych (czyli według ich rozmiaru bez znaku).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-307">The elements of the return value array are sorted by the binary values of the enumerated constants (that is, by their unsigned magnitude).</span></span> <span data-ttu-id="e0e1c-308">W poniższym przykładzie przedstawiono informacje na temat tablicy zwracanej przez <xref:System.Enum.GetNames%2A> metodę wyliczania, która zawiera wartość ujemną, zero i dodatnią.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-308">The following example provides displays information about the array returned by the <xref:System.Enum.GetNames%2A> method for an enumeration that includes a negative, zero, and a positive value.</span></span>  
  
 [!code-csharp[System.Enum.GetNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getnames/cs/getnames1.cs#1)]
 [!code-vb[System.Enum.GetNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getnames/vb/getnames1.vb#1)]  
  
 <span data-ttu-id="e0e1c-309">Jeśli istnieją stałe z tą samą wartością, kolejność odpowiadających im nazw jest nieokreślona.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-309">If there are enumerated constants with same value, the order of their corresponding names is unspecified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-310">Poniższy przykład ilustruje <xref:System.Enum.GetNames%2A> sposób używania metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-310">The following example illustrates the use of the <xref:System.Enum.GetNames%2A> method.</span></span>  
  
 [!code-cpp[enumgetnames#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetnames/CPP/EnumGetNames.cpp#1)]
 [!code-csharp[enumgetnames#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetnames/CS/EnumGetNames.cs#1)]
 [!code-vb[enumgetnames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetnames/VB/EnumGetNames.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-311"><paramref name="enumType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-311"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-312"><paramref name="enumType" />parametr nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-312"><paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="enum.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0e1c-313">Zwraca kod typu podstawowego elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-313">Returns the type code of the underlying type of this enumeration member.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-314">Kod typu podstawowego typu tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-314">The type code of the underlying type of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e0e1c-315">Typ wyliczenia jest nieznany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-315">The enumeration type is unknown.</span></span></exception>
        <altmember cref="M:System.Enum.GetUnderlyingType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnderlyingType">
      <MemberSignature Language="C#" Value="public static Type GetUnderlyingType (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetUnderlyingType(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetUnderlyingType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnderlyingType (enumType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetUnderlyingType(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetUnderlyingType : Type -&gt; Type" Usage="System.Enum.GetUnderlyingType enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-316">Wyliczenie, którego typ podstawowy zostanie pobrany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-316">The enumeration whose underlying type will be retrieved.</span></span></param>
        <summary><span data-ttu-id="e0e1c-317">Zwraca typ podstawowy określonego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-317">Returns the underlying type of the specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-318">Typ <paramref name="enumType" />podstawowy.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-318">The underlying type of <paramref name="enumType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-319"><xref:System.Enum> Struktura umożliwia prezentowanie wartości jako nazwanych stałych.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-319">The <xref:System.Enum> structure enables values to be represented as named constants.</span></span> <span data-ttu-id="e0e1c-320">Typ danych wartości wyliczenia jest znany jako jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-320">The data type of the enumeration's values is known as its underlying type.</span></span> <span data-ttu-id="e0e1c-321">Na przykład <xref:System.DayOfWeek> podstawowy typ wyliczenia, który składa się z stałych, które reprezentują każdy dzień tygodnia <xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType>(<xref:System.DayOfWeek.Monday?displayProperty=nameWithType>itd.), to <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-321">For example, the underlying type of the <xref:System.DayOfWeek> enumeration, which consists of constants that represent each day of the week (<xref:System.DayOfWeek.Monday?displayProperty=nameWithType>, <xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType>, and so on), is <xref:System.Int32>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-322">Poniższy przykład wywołuje metodę, <xref:System.Enum.GetUnderlyingType%2A> aby wyświetlić typ podstawowy niektórych elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-322">The following example calls the <xref:System.Enum.GetUnderlyingType%2A> method to display the underlying type of some enumeration members.</span></span>  
  
 [!code-csharp[System.Enum.GetUnderlyingType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getunderlyingtype/cs/getunderlyingtype1.cs#1)]
 [!code-vb[System.Enum.GetUnderlyingType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getunderlyingtype/vb/getunderlyingtype1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-323"><paramref name="enumType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-323"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-324"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-324"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.GetTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public static Array GetValues (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array GetValues(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetValues(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValues (enumType As Type) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ GetValues(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetValues : Type -&gt; Array" Usage="System.Enum.GetValues enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-325">Typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-325">An enumeration type.</span></span></param>
        <summary><span data-ttu-id="e0e1c-326">Pobiera tablicę wartości stałych w określonym wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-326">Retrieves an array of the values of the constants in a specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-327">Tablica zawierająca wartości stałych w <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-327">An array that contains the values of the constants in <paramref name="enumType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-328">Elementy tablicy są sortowane według wartości binarnych stałych wyliczenia (czyli według ich rozmiaru bez znaku).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-328">The elements of the array are sorted by the binary values of the enumeration constants (that is, by their unsigned magnitude).</span></span> <span data-ttu-id="e0e1c-329">Poniższy przykład wyświetla informacje o tablicy zwracanej przez <xref:System.Enum.GetValues%2A> metodę wyliczania, która zawiera wartość ujemną, zero i wartość dodatnią.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-329">The following example displays information about the array returned by the <xref:System.Enum.GetValues%2A> method for an enumeration that includes a negative value, zero, and a positive value.</span></span>  
  
 [!code-csharp[System.Enum.GetValues#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues1.cs#1)]
 [!code-vb[System.Enum.GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues1.vb#1)]  
  
 <span data-ttu-id="e0e1c-330">Metoda zwraca tablicę zawierającą wartość dla każdego elementu członkowskiego `enumType` wyliczenia. <xref:System.Enum.GetValues%2A></span><span class="sxs-lookup"><span data-stu-id="e0e1c-330">The <xref:System.Enum.GetValues%2A> method returns an array that contains a value for each member of the `enumType` enumeration.</span></span> <span data-ttu-id="e0e1c-331">Jeśli wiele składowych ma tę samą wartość, zwracana tablica zawiera zduplikowane wartości.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-331">If multiple members have the same value, the returned array includes duplicate values.</span></span> <span data-ttu-id="e0e1c-332">W takim przypadku wywołanie <xref:System.Enum.GetName%2A> metody z każdą wartością w zwracanej tablicy nie powoduje przywrócenia unikatowych nazw przypisanych do elementów członkowskich, które mają zduplikowane wartości.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-332">In this case, calling the <xref:System.Enum.GetName%2A> method with each value in the returned array does not restore the unique names assigned to members that have duplicate values.</span></span> <span data-ttu-id="e0e1c-333">Aby pomyślnie pobrać wszystkie nazwy członków wyliczenia, wywołaj <xref:System.Enum.GetNames%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-333">To retrieve all the names of enumeration members successfully, call the <xref:System.Enum.GetNames%2A> method.</span></span>  
  
 <span data-ttu-id="e0e1c-334">Nie można wywołać metody przy użyciu odbicia w kontekście tylko odbicia. <xref:System.Enum.GetValues%2A></span><span class="sxs-lookup"><span data-stu-id="e0e1c-334">The <xref:System.Enum.GetValues%2A> method cannot be invoked by using reflection in a reflection-only context.</span></span> <span data-ttu-id="e0e1c-335">Zamiast tego można pobrać wartość wszystkich elementów członkowskich wyliczenia przy użyciu <xref:System.Type.GetFields%2A?displayProperty=nameWithType> metody, aby uzyskać <xref:System.Reflection.FieldInfo> tablicę obiektów, które reprezentują <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType> elementy członkowskie wyliczenia, a następnie wywołać metodę dla każdego elementu tablicy.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-335">Instead, you can retrieve the value of all enumeration members by using the <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method to get an array of <xref:System.Reflection.FieldInfo> objects that represent enumeration members and then call the <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType> method on each element of the array.</span></span> <span data-ttu-id="e0e1c-336">Poniższy przykład ilustruje tę technikę.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-336">The following example illustrates this technique.</span></span> <span data-ttu-id="e0e1c-337">Wymaga zdefiniowania następującego wyliczenia w zestawie o nazwie Enumerations. dll:</span><span class="sxs-lookup"><span data-stu-id="e0e1c-337">It requires that you define the following enumeration in an assembly named Enumerations.dll:</span></span>  
  
 [!code-csharp[System.Enum.GetValues#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#2)]
 [!code-vb[System.Enum.GetValues#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#2)]  
  
 <span data-ttu-id="e0e1c-338">Zestaw jest ładowany w kontekście tylko odbicia, <xref:System.Type> obiektu, który `Pets` reprezentuje Wyliczenie, jest tworzona tablica <xref:System.Reflection.FieldInfo> obiektów, a wartości pól są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-338">The assembly is loaded in a reflection-only context, a <xref:System.Type> object that represents the `Pets` enumeration is instantiated, an array of <xref:System.Reflection.FieldInfo> objects is retrieved, and the field values are displayed to the console.</span></span>  
  
 [!code-csharp[System.Enum.GetValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#3)]
 [!code-vb[System.Enum.GetValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-339">Poniższy przykład ilustruje użycie <xref:System.Enum.GetValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-339">The following example illustrates the use of <xref:System.Enum.GetValues%2A>.</span></span>  
  
 [!code-cpp[enumgetvalues#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetvalues/CPP/EnumGetValues.cpp#1)]
 [!code-csharp[enumgetvalues#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetvalues/CS/EnumGetValues.cs#1)]
 [!code-vb[enumgetvalues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetvalues/VB/EnumGetValues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-340"><paramref name="enumType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-340"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-341"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-341"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e0e1c-342">Metoda jest wywoływana przez odbicie w kontekście tylko odbicia,</span><span class="sxs-lookup"><span data-stu-id="e0e1c-342">The method is invoked by reflection in a reflection-only context,</span></span> 
<span data-ttu-id="e0e1c-343">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-343">-or-</span></span> 
 <span data-ttu-id="e0e1c-344"><paramref name="enumType" />jest typem z zestawu załadowanego w kontekście tylko odbicie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-344"><paramref name="enumType" /> is a type from an assembly loaded in a reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasFlag">
      <MemberSignature Language="C#" Value="public bool HasFlag (Enum flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasFlag(class System.Enum flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.HasFlag(System.Enum)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFlag (flag As Enum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFlag(Enum ^ flag);" />
      <MemberSignature Language="F#" Value="member this.HasFlag : Enum -&gt; bool" Usage="enum.HasFlag flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Enum" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="e0e1c-345">Wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-345">An enumeration value.</span></span></param>
        <summary><span data-ttu-id="e0e1c-346">Określa, czy w bieżącym wystąpieniu są ustawione co najmniej jedno pole bitowe.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-346">Determines whether one or more bit fields are set in the current instance.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-347"><see langword="true" />Jeśli pole bitowe lub pola bitowe, które są ustawione w <paramref name="flag" /> programie, również są ustawiane w bieżącym wystąpieniu; <see langword="false" />w przeciwnym razie,.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-347"><see langword="true" /> if the bit field or bit fields that are set in <paramref name="flag" /> are also set in the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-348"><xref:System.Enum.HasFlag%2A> Metoda zwraca wynik następującego wyrażenia logicznego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-348">The <xref:System.Enum.HasFlag%2A> method returns the result of the following Boolean expression.</span></span>  
  
```  
thisInstance And flag = flag   
```  
  
 <span data-ttu-id="e0e1c-349">Jeśli wartość `flag` bazowa jest równa zero, metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-349">If the underlying value of `flag` is zero, the method returns `true`.</span></span> <span data-ttu-id="e0e1c-350">Jeśli takie zachowanie nie jest pożądane, można użyć <xref:System.Enum.Equals%2A> metody do testowania równości z zerem i wywoływać <xref:System.Enum.HasFlag%2A> tylko `flag` wtedy, gdy wartość bazowa jest różna od zera, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-350">If this behavior is not desirable, you can use the <xref:System.Enum.Equals%2A> method to test for equality with zero and call <xref:System.Enum.HasFlag%2A> only if the underlying value of `flag` is non-zero, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Enum.HasFlag#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag0.cs#1)]
 [!code-vb[System.Enum.HasFlag#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag0.vb#1)]  
  
 <span data-ttu-id="e0e1c-351">Metoda jest przeznaczona do użycia z typami wyliczeniowymi, które są oznaczone <xref:System.FlagsAttribute> atrybutem i mogą służyć do określenia, czy ustawiono wiele pól bitowych. <xref:System.Enum.HasFlag%2A></span><span class="sxs-lookup"><span data-stu-id="e0e1c-351">The <xref:System.Enum.HasFlag%2A> method is designed to be used with enumeration types that are marked with the <xref:System.FlagsAttribute> attribute and can be used to determine whether multiple bit fields are set.</span></span> <span data-ttu-id="e0e1c-352">Dla typów wyliczeniowych, które nie są <xref:System.FlagsAttribute> oznaczone atrybutem, należy <xref:System.Enum.Equals%2A> wywołać metodę lub <xref:System.Enum.CompareTo%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-352">For enumeration types that are not marked with the <xref:System.FlagsAttribute> attribute, call either the <xref:System.Enum.Equals%2A> method or the <xref:System.Enum.CompareTo%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-353">W poniższym przykładzie zdefiniowano `ItemsOrdered` Wyliczenie odzwierciedlające kategorie elementów, które klient może zamówić w restauracji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-353">The following example defines an `ItemsOrdered` enumeration that reflects categories of items that a customer can order in a restaurant.</span></span> <span data-ttu-id="e0e1c-354">Przykład sprawdza, czy klient zamówił zarówno bezboleśnie, jak i napój.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-354">The example tests whether the customer has ordered both an entrée and a beverage.</span></span>  
  
 [!code-csharp[System.Enum.HasFlag#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag1.cs#2)]
 [!code-vb[System.Enum.HasFlag#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-355"><paramref name="flag" />jest innym typem niż bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-355"><paramref name="flag" /> is a different type than the current instance.</span></span></exception>
        <altmember cref="T:System.FlagsAttribute" />
        <altmember cref="M:System.Enum.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.IsDefined(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (enumType As Type, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IsDefined : Type * obj -&gt; bool" Usage="System.Enum.IsDefined (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-356">Typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-356">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-357">Wartość lub nazwa stałej w <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-357">The value or name of a constant in <paramref name="enumType" />.</span></span></param>
        <summary><span data-ttu-id="e0e1c-358">Zwraca wartość Boolean wskazująca, czy dana wartość całkowita, czy jej nazwa jako ciąg, istnieją w określonym wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-358">Returns a Boolean telling whether a given integral value, or its name as a string, exists in a specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-359"><see langword="true" />Jeśli stała w <paramref name="enumType" /> ma wartość <paramref name="value" />równą; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-359"><see langword="true" /> if a constant in <paramref name="enumType" /> has a value equal to <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-360">`value` Parametr może mieć jedną z następujących wartości:</span><span class="sxs-lookup"><span data-stu-id="e0e1c-360">The `value` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="e0e1c-361">Dowolny element członkowski typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-361">Any member of type `enumType`.</span></span>  
  
-   <span data-ttu-id="e0e1c-362">Zmienna, której wartością jest Wyliczenie elementu członkowskiego typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-362">A variable whose value is an enumeration member of type `enumType`.</span></span>  
  
-   <span data-ttu-id="e0e1c-363">Ciąg reprezentujący nazwę elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-363">The string representation of the name of an enumeration member.</span></span> <span data-ttu-id="e0e1c-364">Znaki w ciągu muszą mieć taki sam przypadek jak nazwa elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-364">The characters in the string must have the same case as the enumeration member name.</span></span>  
  
-   <span data-ttu-id="e0e1c-365">Wartość typu `enumType`podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-365">A value of the underlying type of `enumType`.</span></span>  
  
 <span data-ttu-id="e0e1c-366">Jeśli stałe w `enumType` definiują zestaw pól bitowych i `value` zawierają wartości, nazwy lub wartości bazowe <xref:System.Enum.IsDefined%2A> wielu pól bitowych, metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-366">If the constants in `enumType` define a set of bit fields and `value` contains the values, names, or underlying values of multiple bit fields, the <xref:System.Enum.IsDefined%2A> method returns `false`.</span></span> <span data-ttu-id="e0e1c-367">Innymi słowy, w przypadku wyliczenia, które definiują zestaw pól bitowych, Metoda określa tylko, czy pojedyncze pole bitowe należy do wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-367">In other words, for enumerations that define a set of bit fields, the method determines only whether a single bit field belongs to the enumeration.</span></span> <span data-ttu-id="e0e1c-368">Aby określić, czy w typie wyliczenia, który jest oznaczony za pomocą <xref:System.FlagsAttribute> atrybutu, można <xref:System.Enum.HasFlag%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-368">To determine whether multiple bit fields are set in an enumeration type that is tagged with the <xref:System.FlagsAttribute> attribute, you can call the <xref:System.Enum.HasFlag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-369">Poniższy przykład definiuje wyliczenie o nazwie `PetType` , które składa się z poszczególnych pól bitowych.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-369">The following example defines an enumeration named `PetType` that consists of individual bit fields.</span></span> <span data-ttu-id="e0e1c-370">Następnie wywołuje <xref:System.Enum.IsDefined%2A> metodę z możliwymi podstawowymi wartościami wyliczenia, nazwami ciągów i wartościami złożonymi, które wynikają z ustawienia wielu pól bitowych.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-370">It then calls the <xref:System.Enum.IsDefined%2A> method with possible underlying enumeration values, string names, and composite values that result from setting multiple bit fields.</span></span>  
  
 [!code-csharp[System.Enum.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined1.cs#1)]
 [!code-vb[System.Enum.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/IsDefined1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-371"><paramref name="enumType" />lub <paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-371"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-372"><paramref name="enumType" />nie <see langword="Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-372"><paramref name="enumType" /> is not an <see langword="Enum" />.</span></span>  
  
<span data-ttu-id="e0e1c-373">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-373">-or-</span></span> 
<span data-ttu-id="e0e1c-374">Typ <paramref name="value" /> jest wyliczeniem, ale nie jest wyliczeniem typu <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-374">The type of <paramref name="value" /> is an enumeration, but it is not an enumeration of type <paramref name="enumType" />.</span></span>  
  
<span data-ttu-id="e0e1c-375">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-375">-or-</span></span> 
<span data-ttu-id="e0e1c-376">Typ elementu <paramref name="value" /> nie jest <paramref name="enumType" />typem podstawowym.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-376">The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e0e1c-377"><paramref name="value" />nie jest typu <see cref="T:System.SByte" />, <see cref="T:System.Int16" /> <see cref="T:System.Int32" /> ,<see cref="T:System.Int64" /> ,,<see cref="T:System.UInt64" />,, ,lub<see cref="T:System.String" />, lub.<see cref="T:System.UInt32" /> <see cref="T:System.Byte" /> <see cref="T:System.UInt16" /></span><span class="sxs-lookup"><span data-stu-id="e0e1c-377"><paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />, or <see cref="T:System.String" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e0e1c-378">Jeśli <paramref name="enumType" /> jest wyliczeniem zdefiniowanym przy <see cref="T:System.FlagsAttribute" /> użyciu atrybutu, metoda zwraca <see langword="false" /> , jeśli wiele pól bitowych w <paramref name="value" /> jest ustawionych, ale <paramref name="value" /> nie odpowiada wartości wyliczenia złożonego lub jeśli <paramref name="value" /> to ciąg łączenia nazw wielu flag bitowych.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-378">If <paramref name="enumType" /> is an enumeration that is defined by using the <see cref="T:System.FlagsAttribute" /> attribute, the method returns <see langword="false" /> if multiple bit fields in <paramref name="value" /> are set but <paramref name="value" /> does not correspond to a composite enumeration value, or if <paramref name="value" /> is a string concatenation of the names of multiple bit flags.</span></span> <span data-ttu-id="e0e1c-379">W poniższym przykładzie Wyliczenie <c>zwierząt domowych</c> jest zdefiniowane przy użyciu <see cref="T:System.FlagsAttribute" /> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-379">In the following example, a <c>Pets</c> enumeration is defined with the <see cref="T:System.FlagsAttribute" /> attribute.</span></span> <span data-ttu-id="e0e1c-380">Metoda zwraca <c></c>wartość wyliczenia, która ma ustawione dwa pola bitowe (<c>zwierzęta domowe. Dog</c> i Pets.cat) i po przejściu do niej ciąg reprezentujący wartość wyliczenia ("Dog, Cat"). <see langword="false" /> <see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="e0e1c-380">The <see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /> method returns <see langword="false" /> when you pass it an enumeration value that has two bit fields (<c>Pets.Dog</c> and <c>Pets.Cat</c>) set, and when you pass it the string representation of that enumeration value ("Dog, Cat").</span></span>  
  
<span data-ttu-id="e0e1c-381">[! code-CSharp[System. Enum. Isdefinedd # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined2.cs#2)] [! code — VB[System. Enum. Isdefinedd # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/isdefined2.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="e0e1c-381">[!code-csharp[System.Enum.IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined2.cs#2)] [!code-vb[System.Enum.IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/isdefined2.vb#2)]</span></span> 
<span data-ttu-id="e0e1c-382">Można określić, czy wiele pól bitowych jest ustawionych przez wywołanie <see cref="M:System.Enum.HasFlag(System.Enum)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-382">You can determine whether multiple bit fields are set by calling the <see cref="M:System.Enum.HasFlag(System.Enum)" /> method.</span></span></para></block>
        <altmember cref="M:System.Enum.GetName(System.Type,System.Object)" />
        <altmember cref="M:System.Enum.GetNames(System.Type)" />
        <altmember cref="M:System.Enum.GetValues(System.Type)" />
        <altmember cref="M:System.Enum.HasFlag(System.Enum)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e0e1c-383">Konwertuje ciąg znaków reprezentujący nazwę lub wartość liczbową jednej lub więcej stałych wyliczeniowych dla równoważnego obiektu wyliczanego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-383">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span></summary>
        <altmember cref="M:System.Enum.TryParse``1(System.String,``0@)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (Type enumType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(class System.Type enumType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (enumType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(Type ^ enumType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : Type * string -&gt; obj" Usage="System.Enum.Parse (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-384">Typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-384">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-385">Ciąg zawierający nazwę lub wartość do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-385">A string containing the name or value to convert.</span></span></param>
        <summary><span data-ttu-id="e0e1c-386">Konwertuje ciąg znaków reprezentujący nazwę lub wartość liczbową jednej lub więcej stałych wyliczeniowych dla równoważnego obiektu wyliczanego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-386">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-387">Obiekt typu <paramref name="enumType" /> , którego wartość jest reprezentowana przez <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-387">An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-388">`value` Parametr zawiera ciąg reprezentujący wartość bazową lub nazwaną stałą elementu członkowskiego wyliczenia lub listę nazwanych stałych rozdzielanych przecinkami (,).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-388">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</span></span> <span data-ttu-id="e0e1c-389">Co najmniej jedną spację można wykonać przed lub po każdej wartości, nazwie lub przecinka `value`w.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-389">One or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="e0e1c-390">Jeśli `value` jest listą, wartość zwracana jest wartością określonych nazw połączonych z operacją bitową `OR` .</span><span class="sxs-lookup"><span data-stu-id="e0e1c-390">If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.</span></span>  
  
 <span data-ttu-id="e0e1c-391">Jeśli `value` jest nazwą, która nie odpowiada nazwie `enumType`stałe <xref:System.ArgumentException>, Metoda generuje.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-391">If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="e0e1c-392">Jeśli `value` ciąg jest reprezentacją liczby całkowitej, która nie reprezentuje bazowej wartości `enumType` wyliczenia, metoda zwraca element członkowski wyliczenia, którego wartość bazowa jest `value` konwertowana na typ całkowity.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-392">If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="e0e1c-393">Jeśli takie zachowanie jest niepożądane, wywołaj <xref:System.Enum.IsDefined%2A> metodę, aby upewnić się, że określony ciąg reprezentujący liczbę całkowitą jest w `enumType`rzeczywistości członkiem.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-393">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`.</span></span> <span data-ttu-id="e0e1c-394">W poniższym przykładzie zdefiniowano `Colors` Wyliczenie, <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> wywołuje metodę w celu przekonwertowania ciągów na odpowiadające im <xref:System.Enum.IsDefined%2A> wartości wyliczenia i wywołuje metodę, aby upewnić się, że określone wartości całkowite są wartościami podstawowymi w `Colors` Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-394">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample1.cs#1)]
 [!code-vb[System.Enum.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample1.vb#1)]  
  
 <span data-ttu-id="e0e1c-395">W tej operacji jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-395">This operation is case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-396">Poniższy przykład używa <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metody do analizy tablicy ciągów, które są tworzone przez <xref:System.Enum.GetNames%2A> wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-396">The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method.</span></span> <span data-ttu-id="e0e1c-397">Używa ona również <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metody do analizowania wartości wyliczenia, która składa się z pola bitowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-397">It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.</span></span>  
  
 [!code-cpp[enumparse#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumparse/CPP/EnumParse.cpp#1)]
 [!code-csharp[enumparse#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumparse/CS/EnumParse.cs#1)]
 [!code-vb[enumparse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumparse/VB/EnumParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-398"><paramref name="enumType" />lub <paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-398"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-399"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-399"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="e0e1c-400">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-400">-or-</span></span> 
 <span data-ttu-id="e0e1c-401"><paramref name="value" />jest pustym ciągiem lub zawiera tylko białe znaki.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-401"><paramref name="value" /> is either an empty string or only contains white space.</span></span>  
  
<span data-ttu-id="e0e1c-402">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-402">-or-</span></span> 
 <span data-ttu-id="e0e1c-403"><paramref name="value" />jest nazwą, ale nie jedną z nazwanych stałych zdefiniowanych dla wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-403"><paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="e0e1c-404"><paramref name="value" />znajduje się poza zakresem podstawowego typu <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-404"><paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (Type enumType, string value, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(class System.Type enumType, string value, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (enumType As Type, value As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(Type ^ enumType, System::String ^ value, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Parse : Type * string * bool -&gt; obj" Usage="System.Enum.Parse (enumType, value, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-405">Typ wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-405">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-406">Ciąg zawierający nazwę lub wartość do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-406">A string containing the name or value to convert.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="e0e1c-407"><see langword="true" />Aby zignorować wielkość liter; <see langword="false" /> do uwzględnienia wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-407"><see langword="true" /> to ignore case; <see langword="false" /> to regard case.</span></span></param>
        <summary><span data-ttu-id="e0e1c-408">Konwertuje ciąg znaków reprezentujący nazwę lub wartość liczbową jednej lub więcej stałych wyliczeniowych dla równoważnego obiektu wyliczanego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-408">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="e0e1c-409">Parametr określa, czy operacja nie uwzględnia wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-409">A parameter specifies whether the operation is case-insensitive.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-410">Obiekt typu <paramref name="enumType" /> , którego wartość jest reprezentowana przez <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-410">An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-411">`value` Parametr zawiera ciąg reprezentujący wartość bazową lub nazwaną stałą elementu członkowskiego wyliczenia lub listę nazwanych stałych rozdzielanych przecinkami (,).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-411">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</span></span> <span data-ttu-id="e0e1c-412">Co najmniej jedną spację można wykonać przed lub po każdej wartości, nazwie lub przecinka `value`w.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-412">One or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="e0e1c-413">Jeśli `value` jest listą, wartość zwracana jest wartością określonych nazw połączonych z operacją bitową `OR` .</span><span class="sxs-lookup"><span data-stu-id="e0e1c-413">If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.</span></span>  
  
 <span data-ttu-id="e0e1c-414">Jeśli `value` jest nazwą, która nie odpowiada nazwie `enumType`stałe <xref:System.ArgumentException>, Metoda generuje.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-414">If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="e0e1c-415">Jeśli `value` ciąg jest reprezentacją liczby całkowitej, która nie reprezentuje bazowej wartości `enumType` wyliczenia, metoda zwraca element członkowski wyliczenia, którego wartość bazowa jest `value` konwertowana na typ całkowity.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-415">If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="e0e1c-416">Jeśli takie zachowanie jest niepożądane, wywołaj <xref:System.Enum.IsDefined%2A> metodę, aby upewnić się, że określony ciąg reprezentujący liczbę całkowitą jest w `enumType`rzeczywistości członkiem.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-416">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`.</span></span> <span data-ttu-id="e0e1c-417">W poniższym przykładzie zdefiniowano `Colors` Wyliczenie, <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> wywołuje metodę w celu przekonwertowania ciągów na odpowiadające im <xref:System.Enum.IsDefined%2A> wartości wyliczenia i wywołuje metodę, aby upewnić się, że określone wartości całkowite są wartościami podstawowymi w `Colors` Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-417">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]
 [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]  
  
 <span data-ttu-id="e0e1c-418">Ten `ignoreCase` parametr określa, czy w tej operacji jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-418">The `ignoreCase` parameter specifies whether this operation is case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-419">Poniższy przykład używa <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> metody do analizy tablicy ciągów, które są tworzone przez <xref:System.Enum.GetNames%2A> wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-419">The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method.</span></span> <span data-ttu-id="e0e1c-420">Używa ona również <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> metody do analizowania wartości wyliczenia, która składa się z pola bitowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-420">It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.</span></span>  
  
 [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]
 [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-421"><paramref name="enumType" />lub <paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-421"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-422"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-422"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="e0e1c-423">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-423">-or-</span></span> 
 <span data-ttu-id="e0e1c-424"><paramref name="value" />jest pustym ciągiem ("") lub zawiera tylko białe znaki.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-424"><paramref name="value" /> is either an empty string ("") or only contains white space.</span></span>  
  
<span data-ttu-id="e0e1c-425">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-425">-or-</span></span> 
 <span data-ttu-id="e0e1c-426"><paramref name="value" />jest nazwą, ale nie jedną z nazwanych stałych zdefiniowanych dla wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-426"><paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="e0e1c-427"><paramref name="value" />znajduje się poza zakresem podstawowego typu <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-427"><paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string value) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TEnum Parse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse(Of TEnum As Structure) (value As String) As TEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static TEnum Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; 'Enum (requires 'Enum : struct)" Usage="System.Enum.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEnum</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string value, bool ignoreCase) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TEnum Parse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse``1(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse(Of TEnum As Structure) (value As String, ignoreCase As Boolean) As TEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static TEnum Parse(System::String ^ value, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Parse : string * bool -&gt; 'Enum (requires 'Enum : struct)" Usage="System.Enum.Parse (value, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEnum</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">To be added.</typeparam>
        <param name="value">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-428">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-428">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-429">Konwertuje bieżącą wartość na wartość logiczną na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-429">Converts the current value to a Boolean value based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-430">Ten element członkowski zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-430">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-431">Obecnie nie zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-431">Currently not implemented.</span></span> <span data-ttu-id="e0e1c-432">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-432">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e0e1c-433">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-433">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-434">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-434">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-435">Konwertuje bieżącą wartość na 8-bitową liczbę całkowitą bez znaku na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-435">Converts the current value to an 8-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-436">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-436">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-437">Używa <xref:System.Convert> do wykonania konwersji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-437">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-438">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-438">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-439">Konwertuje bieżącą wartość na znak Unicode w oparciu o typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-439">Converts the current value to a Unicode character based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-440">Ten element członkowski zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-440">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-441">Obecnie nie zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-441">Currently not implemented.</span></span> <span data-ttu-id="e0e1c-442">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-442">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e0e1c-443">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-443">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-444">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-444">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-445">Konwertuje bieżącą wartość <see cref="T:System.DateTime" /> na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-445">Converts the current value to a <see cref="T:System.DateTime" /> based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-446">Ten element członkowski zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-446">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-447">Obecnie nie zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-447">Currently not implemented.</span></span> <span data-ttu-id="e0e1c-448">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-448">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e0e1c-449">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-449">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-450">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-450">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-451">Konwertuje bieżącą wartość <see cref="T:System.Decimal" /> na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-451">Converts the current value to a <see cref="T:System.Decimal" /> based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-452">Ten element członkowski zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-452">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-453">Obecnie nie zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-453">Currently not implemented.</span></span> <span data-ttu-id="e0e1c-454">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-454">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e0e1c-455">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-455">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-456">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-456">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-457">Konwertuje bieżącą wartość na liczbę zmiennoprzecinkową o podwójnej precyzji na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-457">Converts the current value to a double-precision floating point number based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-458">Ten element członkowski zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-458">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-459">Obecnie nie zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-459">Currently not implemented.</span></span> <span data-ttu-id="e0e1c-460">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-460">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e0e1c-461">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-461">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-462">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-462">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-463">Konwertuje bieżącą wartość na 16-bitową liczbę całkowitą ze znakiem na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-463">Converts the current value to a 16-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-464">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-464">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-465">Używa <xref:System.Convert> do wykonania konwersji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-465">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-466">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-466">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-467">Konwertuje bieżącą wartość na 32-bitową liczbę całkowitą ze znakiem na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-467">Converts the current value to a 32-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-468">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-468">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-469">Używa <xref:System.Convert> do wykonania konwersji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-469">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-470">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-470">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-471">Konwertuje bieżącą wartość na 64-bitową liczbę całkowitą ze znakiem na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-471">Converts the current value to a 64-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-472">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-472">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-473">Używa <xref:System.Convert> do wykonania konwersji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-473">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-474">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-474">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-475">Konwertuje bieżącą wartość na 8-bitową liczbę całkowitą ze znakiem na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-475">Converts the current value to an 8-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-476">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-476">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-477">Używa <xref:System.Convert> do wykonania konwersji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-477">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-478">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-478">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-479">Konwertuje bieżącą wartość na liczbę zmiennoprzecinkową o pojedynczej precyzji na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-479">Converts the current value to a single-precision floating-point number based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-480">Ten element członkowski zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-480">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-481">Obecnie nie zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-481">Currently not implemented.</span></span> <span data-ttu-id="e0e1c-482">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-482">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e0e1c-483">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-483">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString().")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e0e1c-484">Typ do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-484">The type to convert to.</span></span></param>
        <param name="provider"><span data-ttu-id="e0e1c-485">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-485">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-486">Konwertuje bieżącą wartość na określony typ na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-486">Converts the current value to a specified type based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-487">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-487">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-488">Używa <xref:System.Convert> do wykonania konwersji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-488">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-489">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-489">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-490">Konwertuje bieżącą wartość na 16-bitową liczbę całkowitą bez znaku na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-490">Converts the current value to a 16-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-491">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-491">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-492">Używa <xref:System.Convert> do wykonania konwersji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-492">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-493">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-493">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-494">Konwertuje bieżącą wartość na 32-bitową liczbę całkowitą bez znaku na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-494">Converts the current value to a 32-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-495">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-495">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-496">Używa <xref:System.Convert> do wykonania konwersji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-496">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-497">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-497">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e0e1c-498">Konwertuje bieżącą wartość na 64-bitową liczbę całkowitą bez znaku na podstawie typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-498">Converts the current value to a 64-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-499">Przekonwertowana wartość.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-499">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-500">Używa <xref:System.Convert> do wykonania konwersji.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-500">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e0e1c-501">Specyfikacja formatu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-501">A format specification.</span></span></param>
        <param name="provider">To be added.</param>
        <summary><span data-ttu-id="e0e1c-502">To Przeciążenie metody jest przestarzałe; Użyj <see cref="M:System.Enum.ToString(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-502">This method overload is obsolete; use <see cref="M:System.Enum.ToString(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-503">Ciąg reprezentujący wartość tego wystąpienia, określony przez <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-503">The string representation of the value of this instance, as specified by <paramref name="format" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="e0e1c-504"><paramref name="format" />nie zawiera prawidłowej specyfikacji formatu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-504"><paramref name="format" /> does not contain a valid format specification.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e0e1c-505"><paramref name="format" />równa się "X", ale typ wyliczeniowy jest nieznany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-505"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e0e1c-506">Konwertuje określoną wartość całkowitą na Wyliczenie elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-506">Converts a specified integer value to an enumeration member.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Byte) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * byte -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Byte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-507">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-507">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-508">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-508">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="e0e1c-509">Konwertuje określoną 8-bitową liczbę całkowitą bez znaku na składowaną Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-509">Converts the specified 8-bit unsigned integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-510">Wystąpienie wyliczenia ustawione na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-510">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-511">Metoda jest konwertowana `value` na Wyliczenie elementu członkowskiego, którego podstawową wartością jest `value`. <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29></span><span class="sxs-lookup"><span data-stu-id="e0e1c-511">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="e0e1c-512">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość znajduje się poza `enumType` granicami elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-512">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="e0e1c-513">Aby upewnić `value` się, że jest prawidłową wartością `enumType` bazową wyliczenia <xref:System.Enum.IsDefined%2A> , przekaż ją do metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-513">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="e0e1c-514">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-514">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="e0e1c-515">Następnie można je rzutować lub przekonwertować na obiekt typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-515">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-516"><paramref name="enumType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-516"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-517"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-517"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, short value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int16 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Int16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-518">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-518">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-519">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-519">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="e0e1c-520">Konwertuje określoną 16-bitową liczbę całkowitą ze znakiem na składowaną Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-520">Converts the specified 16-bit signed integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-521">Wystąpienie wyliczenia ustawione na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-521">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-522">Metoda jest konwertowana `value` na Wyliczenie elementu członkowskiego, którego podstawową wartością jest `value`. <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29></span><span class="sxs-lookup"><span data-stu-id="e0e1c-522">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="e0e1c-523">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość znajduje się poza `enumType` granicami elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-523">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="e0e1c-524">Aby upewnić `value` się, że jest prawidłową wartością `enumType` bazową wyliczenia <xref:System.Enum.IsDefined%2A> , przekaż ją do metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-524">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="e0e1c-525">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-525">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="e0e1c-526">Następnie można je rzutować lub przekonwertować na obiekt typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-526">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-527"><paramref name="enumType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-527"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-528"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-528"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, int value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-529">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-529">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-530">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-530">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="e0e1c-531">Konwertuje określoną 32-bitową liczbę całkowitą ze znakiem na składowaną Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-531">Converts the specified 32-bit signed integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-532">Wystąpienie wyliczenia ustawione na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-532">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-533">Metoda jest konwertowana `value` na Wyliczenie elementu członkowskiego, którego podstawową wartością jest `value`. <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="e0e1c-533">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="e0e1c-534">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość znajduje się poza `enumType` granicami elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-534">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="e0e1c-535">Aby upewnić `value` się, że jest prawidłową wartością `enumType` bazową wyliczenia <xref:System.Enum.IsDefined%2A> , przekaż ją do metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-535">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="e0e1c-536">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-536">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="e0e1c-537">Następnie można je rzutować lub przekonwertować na obiekt typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-537">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-538"><paramref name="enumType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-538"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-539"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-539"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, long value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int64 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-540">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-540">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-541">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-541">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="e0e1c-542">Konwertuje określoną 64-bitową liczbę całkowitą ze znakiem na składowaną Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-542">Converts the specified 64-bit signed integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-543">Wystąpienie wyliczenia ustawione na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-543">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-544">Metoda jest konwertowana `value` na Wyliczenie elementu członkowskiego, którego podstawową wartością jest `value`. <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29></span><span class="sxs-lookup"><span data-stu-id="e0e1c-544">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="e0e1c-545">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość znajduje się poza `enumType` granicami elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-545">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="e0e1c-546">Aby upewnić `value` się, że jest prawidłową wartością `enumType` bazową wyliczenia <xref:System.Enum.IsDefined%2A> , przekaż ją do metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-546">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="e0e1c-547">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-547">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="e0e1c-548">Następnie można je rzutować lub przekonwertować na obiekt typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-548">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-549"><paramref name="enumType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-549"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-550"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-550"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * obj -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-551">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-551">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-552">Wartość jest konwertowana na Wyliczenie elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-552">The value convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="e0e1c-553">Konwertuje określony obiekt z wartością całkowitą na Wyliczenie elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-553">Converts the specified object with an integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-554">Obiekt wyliczenia, którego wartość to <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-554">An enumeration object whose value is <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-555">Metoda konwertuje wartość `value` całkowitą na element członkowski wyliczenia, którego podstawową wartością jest `value`. <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29></span><span class="sxs-lookup"><span data-stu-id="e0e1c-555">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> method converts the integral value `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="e0e1c-556">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość znajduje się poza `enumType` granicami elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-556">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="e0e1c-557">Aby upewnić `value` się, że jest prawidłową wartością `enumType` bazową wyliczenia <xref:System.Enum.IsDefined%2A> , przekaż ją do metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-557">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="e0e1c-558">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-558">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="e0e1c-559">Następnie można je rzutować lub przekonwertować na obiekt typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-559">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-560"><paramref name="enumType" />lub <paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-560"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-561"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-561"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="e0e1c-562">—lub—</span><span class="sxs-lookup"><span data-stu-id="e0e1c-562">-or-</span></span> 
 <span data-ttu-id="e0e1c-563"><paramref name="value" />nie jest typu <see cref="T:System.SByte" />, <see cref="T:System.Int16" /> <see cref="T:System.Int32" /> ,<see cref="T:System.Byte" /> ,,<see cref="T:System.UInt64" />,,, lub. <see cref="T:System.Int64" /> <see cref="T:System.UInt16" /> <see cref="T:System.UInt32" /></span><span class="sxs-lookup"><span data-stu-id="e0e1c-563"><paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As SByte) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * sbyte -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.SByte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-564">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-564">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-565">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-565">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="e0e1c-566">Konwertuje określoną 8-bitową liczbę całkowitą ze znakiem na składowaną Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-566">Converts the specified 8-bit signed integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-567">Wystąpienie wyliczenia ustawione na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-567">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-568">Metoda jest konwertowana `value` na Wyliczenie elementu członkowskiego, którego podstawową wartością jest `value`. <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29></span><span class="sxs-lookup"><span data-stu-id="e0e1c-568">The <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="e0e1c-569">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość znajduje się poza `enumType` granicami elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-569">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="e0e1c-570">Aby upewnić `value` się, że jest prawidłową wartością `enumType` bazową wyliczenia <xref:System.Enum.IsDefined%2A> , przekaż ją do metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-570">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="e0e1c-571">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-571">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="e0e1c-572">Następnie można je rzutować lub przekonwertować na obiekt typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-572">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-573"><paramref name="enumType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-573"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-574"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-574"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As UShort) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint16 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UInt16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-575">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-575">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-576">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-576">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="e0e1c-577">Konwertuje określoną 16-bitową liczbę całkowitą bez znaku na składowaną Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-577">Converts the specified 16-bit unsigned integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-578">Wystąpienie wyliczenia ustawione na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-578">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-579">Metoda jest konwertowana `value` na Wyliczenie elementu członkowskiego, którego podstawową wartością jest `value`. <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29></span><span class="sxs-lookup"><span data-stu-id="e0e1c-579">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="e0e1c-580">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość znajduje się poza `enumType` granicami elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-580">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="e0e1c-581">Aby upewnić `value` się, że jest prawidłową wartością `enumType` bazową wyliczenia <xref:System.Enum.IsDefined%2A> , przekaż ją do metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-581">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="e0e1c-582">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-582">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="e0e1c-583">Następnie można je rzutować lub przekonwertować na obiekt typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-583">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-584"><paramref name="enumType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-584"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-585"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-585"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As UInteger) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint32 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UInt32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-586">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-586">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-587">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-587">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="e0e1c-588">Konwertuje określoną 32-bitową liczbę całkowitą bez znaku na składowaną Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-588">Converts the specified 32-bit unsigned integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-589">Wystąpienie wyliczenia ustawione na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-589">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-590">Metoda jest konwertowana `value` na Wyliczenie elementu członkowskiego, którego podstawową wartością jest `value`. <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29></span><span class="sxs-lookup"><span data-stu-id="e0e1c-590">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="e0e1c-591">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość znajduje się poza `enumType` granicami elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-591">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="e0e1c-592">Aby upewnić `value` się, że jest prawidłową wartością `enumType` bazową wyliczenia <xref:System.Enum.IsDefined%2A> , przekaż ją do metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-592">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="e0e1c-593">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-593">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="e0e1c-594">Następnie można je rzutować lub przekonwertować na obiekt typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-594">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-595"><paramref name="enumType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-595"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-596"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-596"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As ULong) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint64 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UInt64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="e0e1c-597">Typ wyliczeniowy, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-597">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="e0e1c-598">Wartość do konwersji do elementu członkowskiego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-598">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="e0e1c-599">Konwertuje określoną 64-bitową liczbę całkowitą bez znaku na składowaną Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-599">Converts the specified 64-bit unsigned integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-600">Wystąpienie wyliczenia ustawione na <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-600">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-601">Metoda jest konwertowana `value` na Wyliczenie elementu członkowskiego, którego podstawową wartością jest `value`. <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29></span><span class="sxs-lookup"><span data-stu-id="e0e1c-601">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="e0e1c-602">Należy zauważyć, że konwersja powiedzie się, nawet jeśli wartość znajduje się poza `enumType` granicami elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-602">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="e0e1c-603">Aby upewnić `value` się, że jest prawidłową wartością `enumType` bazową wyliczenia <xref:System.Enum.IsDefined%2A> , przekaż ją do metody.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-603">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="e0e1c-604">Ta metoda konwersji zwraca wartość typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-604">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="e0e1c-605">Następnie można je rzutować lub przekonwertować na obiekt typu `enumType`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-605">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0e1c-606"><paramref name="enumType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-606"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-607"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-607"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e0e1c-608">Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-608">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="e0e1c-609">Wyliczanie ciągów formatujących</span><span class="sxs-lookup"><span data-stu-id="e0e1c-609">Enumeration Format Strings</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="enum.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0e1c-610">Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-610">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-611">Ciąg reprezentujący wartość tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-611">The string representation of the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-612">Wartość zwracana jest formatowana przy użyciu specyfikatora formatu ogólnego ("G").</span><span class="sxs-lookup"><span data-stu-id="e0e1c-612">The return value is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="e0e1c-613">Oznacza to, że jeśli <xref:System.FlagsAttribute> nie jest stosowany do tego typu wyliczeniowego i istnieje nazwana stała równa wartości tego wystąpienia, wartość zwracana jest ciągiem zawierającym nazwę stałej.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-613">That is, if the <xref:System.FlagsAttribute> is not applied to this enumerated type and there is a named constant equal to the value of this instance, then the return value is a string containing the name of the constant.</span></span> <span data-ttu-id="e0e1c-614"><xref:System.FlagsAttribute> Jeśli jest stosowana i istnieje kombinacja jednej lub więcej nazwanych stałych równych wartości tego wystąpienia, wartość zwracana jest ciągiem zawierającym listę nazw stałych rozdzielanych ogranicznikami.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-614">If the <xref:System.FlagsAttribute> is applied and there is a combination of one or more named constants equal to the value of this instance, then the return value is a string containing a delimiter-separated list of the names of the constants.</span></span> <span data-ttu-id="e0e1c-615">W przeciwnym razie wartością zwracaną jest ciąg reprezentujący wartość liczbową tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-615">Otherwise, the return value is the string representation of the numeric value of this instance.</span></span> <span data-ttu-id="e0e1c-616">Aby uzyskać więcej informacji na temat formatowania wartości wyliczenia, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-616">For more information about formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="e0e1c-617">Aby uzyskać więcej informacji na temat ogólnego formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-617">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-618">Poniższy przykład demonstruje konwersję wartości wyliczanej na ciąg.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-618">The following example demonstrates converting an enumerated value to a string.</span></span>  
  
 [!code-cpp[Classic Enum.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Enum.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CS/source.cs#1)]
 [!code-vb[Classic Enum.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="e0e1c-619">Jeśli wiele elementów członkowskich wyliczenia ma tę samą wartość podstawową i podjęto próbę pobrania ciągu reprezentującego nazwę elementu członkowskiego wyliczenia na podstawie jego podstawowej wartości, kod nie powinien wprowadzać żadnych założeń dotyczących nazwy, która zwróci metodę.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-619">If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return.</span></span> <span data-ttu-id="e0e1c-620">Na przykład następujące Wyliczenie definiuje dwa elementy członkowskie, <c>cieniowanie. szary</c> i <c>cień. szary</c>, który ma taką samą wartość podstawową.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-620">For example, the following enumeration defines two members, <c>Shade.Gray</c> and <c>Shade.Grey</c>, that have the same underlying value.</span></span>  
  
<span data-ttu-id="e0e1c-621">[! code-CSharp[System. Enum. ToString # 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [! code-VB[System. Enum. ToString # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="e0e1c-621">[!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span></span> 
<span data-ttu-id="e0e1c-622">Poniższe wywołanie metody próbuje pobrać nazwę elementu członkowskiego wyliczenia cienia, <c></c> którego wartość bazowa to 1.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-622">The following method call attempts to retrieve the name of a member of the <c>Shade</c> enumeration whose underlying value is 1.</span></span> <span data-ttu-id="e0e1c-623">Metoda może zwracać wartość "szary" lub "szary", a kod nie powinien zawierać żadnych założeń dotyczących tego, który ciąg zostanie zwrócony.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-623">The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.</span></span>  
  
<span data-ttu-id="e0e1c-624">[! code-CSharp[System. Enum. ToString # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#2)] [! code-VB[System. Enum. ToString # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="e0e1c-624">[!code-csharp[System.Enum.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#2)] [!code-vb[System.Enum.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="enum.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString().")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e0e1c-625">zbędn</span><span class="sxs-lookup"><span data-stu-id="e0e1c-625">(obsolete)</span></span></param>
        <summary><span data-ttu-id="e0e1c-626">To Przeciążenie metody jest przestarzałe; Użyj <see cref="M:System.Enum.ToString" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-626">This method overload is obsolete; use <see cref="M:System.Enum.ToString" />.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-627">Ciąg reprezentujący wartość tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-627">The string representation of the value of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="enum.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e0e1c-628">Ciąg formatu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-628">A format string.</span></span></param>
        <summary><span data-ttu-id="e0e1c-629">Konwertuje wartość tego wystąpienia na jego równoważną reprezentację w postaci ciągu przy użyciu podanego formatu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-629">Converts the value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-630">Ciąg reprezentujący wartość tego wystąpienia określony przez <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-630">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-631">`format` Parametr może być jednym z następujących ciągów formatu: "G" lub "g", "D" lub "d", "X" lub "x" oraz "F" lub "f" (ciąg formatu nie jest rozróżniana wielkość liter).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-631">The `format` parameter can be one of the following format strings: "G" or "g", "D" or "d", "X" or "x", and "F" or "f" (the format string is not case-sensitive).</span></span> <span data-ttu-id="e0e1c-632">Jeśli `format` jest `null` lub jest pustym ciągiem (""), używany jest specyfikator formatu ogólnego ("G").</span><span class="sxs-lookup"><span data-stu-id="e0e1c-632">If `format` is `null` or an empty string (""), the general format specifier ("G") is used.</span></span> <span data-ttu-id="e0e1c-633">Aby uzyskać więcej informacji na temat ciągów formatu wyliczenia i wartości wyliczenia formatowania, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-633">For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="e0e1c-634">Aby uzyskać więcej informacji na temat ogólnego formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-634">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-635">Poniższy przykład ilustruje sposób konwersji wartości wyliczanej na ciąg.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-635">The following example demonstrates how to convert an enumerated value to a string.</span></span>  
  
 [!code-cpp[enum.tostring#1](~/samples/snippets/cpp/VS_Snippets_CLR/enum.tostring/CPP/tostr.cpp#1)]
 [!code-csharp[enum.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/enum.tostring/CS/tostr.cs#1)]
 [!code-vb[enum.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enum.tostring/VB/tostr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="e0e1c-636"><paramref name="format" />zawiera nieprawidłową specyfikację.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-636"><paramref name="format" /> contains an invalid specification.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e0e1c-637"><paramref name="format" />równa się "X", ale typ wyliczeniowy jest nieznany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-637"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e0e1c-638">Jeśli wiele elementów członkowskich wyliczenia ma tę samą wartość podstawową i podjęto próbę pobrania ciągu reprezentującego nazwę elementu członkowskiego wyliczenia na podstawie jego podstawowej wartości, kod nie powinien wprowadzać żadnych założeń dotyczących nazwy, która zwróci metodę.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-638">If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return.</span></span> <span data-ttu-id="e0e1c-639">Na przykład następujące Wyliczenie definiuje dwa elementy członkowskie, <c>cieniowanie. szary</c> i <c>cień. szary</c>, który ma taką samą wartość podstawową.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-639">For example, the following enumeration defines two members, <c>Shade.Gray</c> and <c>Shade.Grey</c>, that have the same underlying value.</span></span>  
  
<span data-ttu-id="e0e1c-640">[! code-CSharp[System. Enum. ToString # 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [! code-VB[System. Enum. ToString # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="e0e1c-640">[!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span></span> 
<span data-ttu-id="e0e1c-641">Poniższe wywołanie metody próbuje pobrać nazwę elementu członkowskiego wyliczenia cienia, <c></c> którego wartość bazowa to 1.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-641">The following method call attempts to retrieve the name of a member of the <c>Shade</c> enumeration whose underlying value is 1.</span></span> <span data-ttu-id="e0e1c-642">Metoda może zwracać wartość "szary" lub "szary", a kod nie powinien zawierać żadnych założeń dotyczących tego, który ciąg zostanie zwrócony.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-642">The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.</span></span>  
  
<span data-ttu-id="e0e1c-643">[! code-CSharp[System. Enum. ToString # 3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#3)] [! code-VB[System. Enum. ToString # 3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="e0e1c-643">[!code-csharp[System.Enum.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#3)] [!code-vb[System.Enum.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#3)]</span></span></para></block>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
        <altmember cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="e0e1c-644">Formatowanie typów w programie .NET</span><span class="sxs-lookup"><span data-stu-id="e0e1c-644">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="e0e1c-645">Wyliczanie ciągów formatujących</span><span class="sxs-lookup"><span data-stu-id="e0e1c-645">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="enum.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e0e1c-646">Specyfikacja formatu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-646">A format specification.</span></span></param>
        <param name="provider"><span data-ttu-id="e0e1c-647">(Przestarzałe).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-647">(Obsolete.)</span></span></param>
        <summary><span data-ttu-id="e0e1c-648">To Przeciążenie metody jest przestarzałe; Użyj <see cref="M:System.Enum.ToString(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-648">This method overload is obsolete; use <see cref="M:System.Enum.ToString(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-649">Ciąg reprezentujący wartość tego wystąpienia określony przez <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-649">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-650">`format` Parametr może być jednym z następujących ciągów formatu: "G" lub "g", "D" lub "d", "X" lub "x" oraz "F" lub "f" (ciąg formatu nie jest rozróżniana wielkość liter).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-650">The `format` parameter can be one of the following format strings: "G" or "g", "D" or "d", "X" or "x", and "F" or "f" (the format string is not case-sensitive).</span></span> <span data-ttu-id="e0e1c-651">Jeśli `format` jest `null` lub jest pustym ciągiem (""), używany jest specyfikator formatu ogólnego ("G").</span><span class="sxs-lookup"><span data-stu-id="e0e1c-651">If `format` is `null` or an empty string (""), the general format specifier ("G") is used.</span></span> <span data-ttu-id="e0e1c-652">Aby uzyskać więcej informacji na temat ciągów formatu wyliczenia i wartości wyliczenia formatowania, zobacz [ciągi formatujące Wyliczenie](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-652">For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="e0e1c-653">Aby uzyskać więcej informacji na temat ogólnego formatowania, zobacz [Typy formatowania](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-653">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="e0e1c-654">Określ tylko `format` `provider` ; parametr jest przestarzały.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-654">Specify only `format`; the `provider` parameter is obsolete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="e0e1c-655"><paramref name="format" />nie zawiera prawidłowej specyfikacji formatu.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-655"><paramref name="format" /> does not contain a valid format specification.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e0e1c-656"><paramref name="format" />równa się "X", ale typ wyliczeniowy jest nieznany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-656"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="e0e1c-657">Formatowanie typów w programie .NET</span><span class="sxs-lookup"><span data-stu-id="e0e1c-657">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="e0e1c-658">Wyliczanie ciągów formatujących</span><span class="sxs-lookup"><span data-stu-id="e0e1c-658">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e0e1c-659">Konwertuje ciąg znaków reprezentujący nazwę lub wartość liczbową jednej lub więcej stałych wyliczeniowych dla równoważnego obiektu wyliczanego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-659">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="e0e1c-660">Zwracana wartość wskazuje, czy konwersja powiodła się.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-660">The return value indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Type enumType, string value, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class System.Type enumType, string value, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse(System.Type,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (enumType As Type, value As String, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Type ^ enumType, System::String ^ value, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : Type * string *  -&gt; bool" Usage="System.Enum.TryParse (enumType, value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Object" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType">To be added.</param>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Type enumType, string value, bool ignoreCase, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class System.Type enumType, string value, bool ignoreCase, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse(System.Type,System.String,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (enumType As Type, value As String, ignoreCase As Boolean, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Type ^ enumType, System::String ^ value, bool ignoreCase, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : Type * string * bool *  -&gt; bool" Usage="System.Enum.TryParse (enumType, value, ignoreCase, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Object" RefType="out" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType">To be added.</param>
        <param name="value">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string value, out TEnum result) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, [out] !!TEnum&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse(Of TEnum As Structure) (value As String, ByRef result As TEnum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] TEnum % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool (requires 'Enum : struct)" Usage="System.Enum.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="TEnum" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><span data-ttu-id="e0e1c-661">Typ wyliczenia do przekonwertowania <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-661">The enumeration type to which to convert <paramref name="value" />.</span></span></typeparam>
        <param name="value"><span data-ttu-id="e0e1c-662">Reprezentacja ciągu z uwzględnieniem wielkości liter dla nazwy wyliczenia lub wartości bazowej do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-662">The case-sensitive string representation of the enumeration name or underlying value to convert.</span></span></param>
        <param name="result"><span data-ttu-id="e0e1c-663">Gdy ta metoda zwraca, <paramref name="result" /> zawiera obiekt typu <c>element TEnum</c> , którego wartość jest reprezentowana przez <paramref name="value" /> Jeśli operacja analizy powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-663">When this method returns, <paramref name="result" /> contains an object of type <c>TEnum</c> whose value is represented by <paramref name="value" /> if the parse operation succeeds.</span></span> <span data-ttu-id="e0e1c-664">Jeśli operacja analizy zakończy się <paramref name="result" /> niepowodzeniem, zawiera wartość domyślną typu <c>element TEnum</c>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-664">If the parse operation fails, <paramref name="result" /> contains the default value of the underlying type of <c>TEnum</c>.</span></span> <span data-ttu-id="e0e1c-665">Należy zauważyć, że ta wartość nie musi być elementem członkowskim wyliczenia <c>element TEnum</c> .</span><span class="sxs-lookup"><span data-stu-id="e0e1c-665">Note that this value need not be a member of the <c>TEnum</c> enumeration.</span></span> <span data-ttu-id="e0e1c-666">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-666">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="e0e1c-667">Konwertuje ciąg znaków reprezentujący nazwę lub wartość liczbową jednej lub więcej stałych wyliczeniowych dla równoważnego obiektu wyliczanego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-667">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="e0e1c-668">Zwracana wartość wskazuje, czy konwersja powiodła się.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-668">The return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-669"><see langword="true" />Jeśli parametr został przekonwertowany pomyślnie; w przeciwnym <see langword="false" />razie,. <paramref name="value" /></span><span class="sxs-lookup"><span data-stu-id="e0e1c-669"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-670"><xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29>jest taka sama jak <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> Metoda, z tą różnicą, że zamiast zgłaszania wyjątku `false` , zwraca, jeśli konwersja nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-670"><xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails.</span></span> <span data-ttu-id="e0e1c-671">Eliminuje to potrzebę obsługi wyjątków podczas analizowania ciągu reprezentującego wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-671">It eliminates the need for exception handling when parsing the string representation of an enumeration value.</span></span>  
  
 <span data-ttu-id="e0e1c-672">`value` Parametr zawiera ciąg reprezentujący wartość bazową lub nazwaną stałą elementu członkowskiego wyliczenia lub listę nazwanych stałych lub wartości bazowych rozdzielanych przecinkami (,).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-672">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</span></span> <span data-ttu-id="e0e1c-673">Jeśli `value` zawiera wiele nazwanych stałych lub wartości, co najmniej jedna spacja może poprzedzać lub stosować każdą wartość, nazwę lub przecinek w `value`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-673">If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="e0e1c-674">Jeśli `value` jest listą, `result` odzwierciedla wartość określonych nazw lub wartości bazowych połączonych z operacją bitową `OR` .</span><span class="sxs-lookup"><span data-stu-id="e0e1c-674">If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation.</span></span> <span data-ttu-id="e0e1c-675">Jeśli `value` jest to ciąg reprezentujący nazwę wartości wyliczenia, `value` porównywanie z nazwami wyliczenia jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-675">If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names is case-sensitive.</span></span>  
  
 <span data-ttu-id="e0e1c-676">Jeśli `value` jest nazwą, która nie odpowiada nazwie `TEnum`stałe, metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-676">If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`.</span></span> <span data-ttu-id="e0e1c-677">Jeśli `value` ciąg jest reprezentacją liczby całkowitej, która nie reprezentuje bazowej wartości `TEnum` wyliczenia, metoda zwraca element członkowski wyliczenia, którego wartość bazowa jest `value` konwertowana na typ całkowity.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-677">If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="e0e1c-678">Jeśli takie zachowanie jest niepożądane, wywołaj <xref:System.Enum.IsDefined%2A> metodę, aby upewnić się, że określony ciąg reprezentujący liczbę całkowitą jest w `TEnum`rzeczywistości członkiem.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-678">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-679">W poniższym przykładzie zdefiniowano `Colors` Wyliczenie, <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> wywołuje metodę w celu przekonwertowania ciągów na odpowiadające im <xref:System.Enum.IsDefined%2A> wartości wyliczenia i wywołuje metodę, aby upewnić się, że określone wartości całkowite są wartościami podstawowymi w `Colors` Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-679">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.Enum.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-680"><paramref name="TEnum" />nie jest typem wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-680"><paramref name="TEnum" /> is not an enumeration type.</span></span></exception>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string value, bool ignoreCase, out TEnum result) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, bool ignoreCase, [out] !!TEnum&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse(Of TEnum As Structure) (value As String, ignoreCase As Boolean, ByRef result As TEnum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static bool TryParse(System::String ^ value, bool ignoreCase, [Runtime::InteropServices::Out] TEnum % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * bool *  -&gt; bool (requires 'Enum : struct)" Usage="System.Enum.TryParse (value, ignoreCase, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="TEnum" RefType="out" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><span data-ttu-id="e0e1c-681">Typ wyliczenia do przekonwertowania <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-681">The enumeration type to which to convert <paramref name="value" />.</span></span></typeparam>
        <param name="value"><span data-ttu-id="e0e1c-682">Ciąg reprezentujący nazwę wyliczenia lub wartość bazową do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-682">The string representation of the enumeration name or underlying value to convert.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="e0e1c-683"><see langword="true" />Aby zignorować wielkość liter; <see langword="false" /> Rozważ uwzględnienie wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-683"><see langword="true" /> to ignore case; <see langword="false" /> to consider case.</span></span></param>
        <param name="result"><span data-ttu-id="e0e1c-684">Gdy ta metoda zwraca, <paramref name="result" /> zawiera obiekt typu <c>element TEnum</c> , którego wartość jest reprezentowana przez <paramref name="value" /> Jeśli operacja analizy powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-684">When this method returns, <paramref name="result" /> contains an object of type <c>TEnum</c> whose value is represented by <paramref name="value" /> if the parse operation succeeds.</span></span> <span data-ttu-id="e0e1c-685">Jeśli operacja analizy zakończy się <paramref name="result" /> niepowodzeniem, zawiera wartość domyślną typu <c>element TEnum</c>.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-685">If the parse operation fails, <paramref name="result" /> contains the default value of the underlying type of <c>TEnum</c>.</span></span> <span data-ttu-id="e0e1c-686">Należy zauważyć, że ta wartość nie musi być elementem członkowskim wyliczenia <c>element TEnum</c> .</span><span class="sxs-lookup"><span data-stu-id="e0e1c-686">Note that this value need not be a member of the <c>TEnum</c> enumeration.</span></span> <span data-ttu-id="e0e1c-687">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-687">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="e0e1c-688">Konwertuje ciąg znaków reprezentujący nazwę lub wartość liczbową jednej lub więcej stałych wyliczeniowych dla równoważnego obiektu wyliczanego.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-688">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="e0e1c-689">Parametr określa, czy w operacji jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-689">A parameter specifies whether the operation is case-sensitive.</span></span> <span data-ttu-id="e0e1c-690">Zwracana wartość wskazuje, czy konwersja powiodła się.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-690">The return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="e0e1c-691"><see langword="true" />Jeśli parametr został przekonwertowany pomyślnie; w przeciwnym <see langword="false" />razie,. <paramref name="value" /></span><span class="sxs-lookup"><span data-stu-id="e0e1c-691"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0e1c-692"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29>jest taka sama jak <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> Metoda, z tą różnicą, że zamiast zgłaszania wyjątku `false` , zwraca, jeśli konwersja nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-692"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails.</span></span> <span data-ttu-id="e0e1c-693">Eliminuje to potrzebę obsługi wyjątków podczas analizowania ciągu reprezentującego wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-693">It eliminates the need for exception handling when parsing the string representation of an enumeration value.</span></span>  
  
 <span data-ttu-id="e0e1c-694">`value` Parametr zawiera ciąg reprezentujący wartość bazową lub nazwaną stałą elementu członkowskiego wyliczenia lub listę nazwanych stałych lub wartości bazowych rozdzielanych przecinkami (,).</span><span class="sxs-lookup"><span data-stu-id="e0e1c-694">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</span></span> <span data-ttu-id="e0e1c-695">Jeśli `value` zawiera wiele nazwanych stałych lub wartości, co najmniej jedna spacja może poprzedzać lub stosować każdą wartość, nazwę lub przecinek w `value`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-695">If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="e0e1c-696">Jeśli `value` jest listą, `result` odzwierciedla wartość określonych nazw lub wartości bazowych połączonych z operacją bitową `OR` .</span><span class="sxs-lookup"><span data-stu-id="e0e1c-696">If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation.</span></span> <span data-ttu-id="e0e1c-697">Jeśli `value` jest to ciąg reprezentujący nazwę wartości wyliczenia, `value` porównywanie z `ignoreCase` nazwami wyliczenia zależy od parametru.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-697">If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names depends on the `ignoreCase` parameter.</span></span> <span data-ttu-id="e0e1c-698">W `true`przypadku porównania nie jest rozróżniana wielkość liter; Jeśli `false`jest uwzględniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-698">If `true`, the comparison is case-insensitive; if `false`, it is case-sensitive.</span></span>  
  
 <span data-ttu-id="e0e1c-699">Jeśli `value` jest nazwą, która nie odpowiada nazwie `TEnum`stałe, metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-699">If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`.</span></span> <span data-ttu-id="e0e1c-700">Jeśli `value` ciąg jest reprezentacją liczby całkowitej, która nie reprezentuje bazowej wartości `TEnum` wyliczenia, metoda zwraca element członkowski wyliczenia, którego wartość bazowa jest `value` konwertowana na typ całkowity.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-700">If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="e0e1c-701">Jeśli takie zachowanie jest niepożądane, wywołaj <xref:System.Enum.IsDefined%2A> metodę, aby upewnić się, że określony ciąg reprezentujący liczbę całkowitą jest w `TEnum`rzeczywistości członkiem.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-701">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0e1c-702">W poniższym przykładzie zdefiniowano `Colors` Wyliczenie, <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> wywołuje metodę w celu przekonwertowania ciągów na odpowiadające im <xref:System.Enum.IsDefined%2A> wartości wyliczenia i wywołuje metodę, aby upewnić się, że określone wartości całkowite są wartościami podstawowymi w `Colors` Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-702">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span> <span data-ttu-id="e0e1c-703"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> Metoda używa porównania bez uwzględniania wielkości liter podczas próby przekonwertowania ciągu reprezentujący nazwane stałe na ich równoważne wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-703">The <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method uses case-insensitive comparison when trying to convert the string representations of named constants to their equivalent enumeration values.</span></span>  
  
 [!code-csharp[System.Enum.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.Enum.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0e1c-704"><paramref name="TEnum" />nie jest typem wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e0e1c-704"><paramref name="TEnum" /> is not an enumeration type.</span></span></exception>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String,System.Boolean)" />
      </Docs>
    </Member>
  </Members>
</Type>
