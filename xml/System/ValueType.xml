<Type Name="ValueType" FullName="System.ValueType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28f1d057ec658f2384bcc5dd43aacd177553bacc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69404371" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValueType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ValueType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ValueType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueType abstract" />
  <TypeSignature Language="F#" Value="type ValueType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="71ba1-101">Udostępnia klasę bazową dla typów wartości.</span><span class="sxs-lookup"><span data-stu-id="71ba1-101">Provides the base class for value types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ba1-102"><xref:System.ValueType>przesłania metody wirtualne z <xref:System.Object> programu przy użyciu większej liczby odpowiednich implementacji dla typów wartości.</span><span class="sxs-lookup"><span data-stu-id="71ba1-102"><xref:System.ValueType> overrides the virtual methods from <xref:System.Object> with more appropriate implementations for value types.</span></span> <span data-ttu-id="71ba1-103">Zobacz również <xref:System.Enum>, który dziedziczy z <xref:System.ValueType>.</span><span class="sxs-lookup"><span data-stu-id="71ba1-103">See also <xref:System.Enum>, which inherits from <xref:System.ValueType>.</span></span>  
  
 <span data-ttu-id="71ba1-104">Typy danych są rozdzielane na typy wartości i typy odwołań.</span><span class="sxs-lookup"><span data-stu-id="71ba1-104">Data types are separated into value types and reference types.</span></span> <span data-ttu-id="71ba1-105">Typy wartości są przydzielonymi przez stos lub przydzielonymi wbudowanymi w strukturze.</span><span class="sxs-lookup"><span data-stu-id="71ba1-105">Value types are either stack-allocated or allocated inline in a structure.</span></span> <span data-ttu-id="71ba1-106">Typy odwołań są przydzieloną sterty.</span><span class="sxs-lookup"><span data-stu-id="71ba1-106">Reference types are heap-allocated.</span></span> <span data-ttu-id="71ba1-107">Oba typy odwołań i wartości są wyprowadzane z klasy <xref:System.Object>bazowej Ultimate.</span><span class="sxs-lookup"><span data-stu-id="71ba1-107">Both reference and value types are derived from the ultimate base class <xref:System.Object>.</span></span> <span data-ttu-id="71ba1-108">W przypadkach, gdy jest to konieczne, aby typ wartości działał jak obiekt, otoka, która sprawia, że typ wartości wygląda jak obiekt referencyjny, jest przypisywany na stercie, a wartość typu wartości jest kopiowana do niej.</span><span class="sxs-lookup"><span data-stu-id="71ba1-108">In cases where it is necessary for a value type to behave like an object, a wrapper that makes the value type look like a reference object is allocated on the heap, and the value type's value is copied into it.</span></span> <span data-ttu-id="71ba1-109">Otoka jest oznaczona, więc system wie, że zawiera typ wartości.</span><span class="sxs-lookup"><span data-stu-id="71ba1-109">The wrapper is marked so the system knows that it contains a value type.</span></span> <span data-ttu-id="71ba1-110">Ten proces jest znany jako opakowanie, a proces odwrotny jest znany jako rozpakowywanie.</span><span class="sxs-lookup"><span data-stu-id="71ba1-110">This process is known as boxing, and the reverse process is known as unboxing.</span></span> <span data-ttu-id="71ba1-111">Opakowanie i rozpakowywanie Zezwalaj na każdy typ, który ma być traktowany jako obiekt.</span><span class="sxs-lookup"><span data-stu-id="71ba1-111">Boxing and unboxing allow any type to be treated as an object.</span></span>  
  
 <span data-ttu-id="71ba1-112">Chociaż <xref:System.ValueType> jest niejawną klasą bazową dla typów wartości, nie można utworzyć klasy, <xref:System.ValueType> która dziedziczy po bezpośredniej.</span><span class="sxs-lookup"><span data-stu-id="71ba1-112">Although <xref:System.ValueType> is the implicit base class for value types, you cannot create a class that inherits from <xref:System.ValueType> directly.</span></span> <span data-ttu-id="71ba1-113">Zamiast tego poszczególne kompilatory dostarczają słowo kluczowe lub konstrukcja języka (na przykład `struct` w C# i `Structure`...`End Structure`</span><span class="sxs-lookup"><span data-stu-id="71ba1-113">Instead, individual compilers provide a language keyword or construct (such as `struct` in C# and `Structure`…`End Structure`</span></span> <span data-ttu-id="71ba1-114">w Visual Basic) do obsługi tworzenia typów wartości.</span><span class="sxs-lookup"><span data-stu-id="71ba1-114">in Visual Basic) to support the creation of value types.</span></span>  
  
 <span data-ttu-id="71ba1-115">Nie jest to obsługiwane jako klasa bazowa dla typów wartości w .NET Framework, <xref:System.ValueType> struktura zazwyczaj nie jest używana bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="71ba1-115">Aside from serving as the base class for value types in the .NET Framework, the <xref:System.ValueType> structure is generally not used directly in code.</span></span> <span data-ttu-id="71ba1-116">Można go jednak użyć jako parametru w wywołaniach metod, aby ograniczyć liczbę możliwych argumentów do typów wartości, a nie wszystkich obiektów, lub zezwolić na użycie metody do obsługi wielu różnych typów wartości.</span><span class="sxs-lookup"><span data-stu-id="71ba1-116">However, it can be used as a parameter in method calls to restrict possible arguments to value types instead of all objects, or to permit a method to handle a number of different value types.</span></span> <span data-ttu-id="71ba1-117">Poniższy przykład ilustruje sposób <xref:System.ValueType> uniemożliwia przekazywanie typów odwołań do metod.</span><span class="sxs-lookup"><span data-stu-id="71ba1-117">The following example illustrates how <xref:System.ValueType> prevents reference types from being passed to methods.</span></span> <span data-ttu-id="71ba1-118">Definiuje klasę o nazwie `Utility` , która zawiera cztery metody: `IsNumeric`, która wskazuje, czy jego argument jest liczbą; `IsInteger`, która wskazuje, czy jego argument jest liczbą całkowitą; , która wskazuje, czy jego argument jest liczbą zmiennoprzecinkową; i `Compare`, która wskazuje relację między dwiema wartościami liczbowymi. `IsFloat`</span><span class="sxs-lookup"><span data-stu-id="71ba1-118">It defines a class named `Utility` that contains four methods: `IsNumeric`, which indicates whether its argument is a number; `IsInteger`, which indicates whether its argument is an integer; `IsFloat`, which indicates whether its argument is a floating-point number; and `Compare`, which indicates the relationship between two numeric values.</span></span> <span data-ttu-id="71ba1-119">W każdym przypadku parametry metody są typu <xref:System.ValueType>, a typy odwołań nie mogą być przesyłane do metod.</span><span class="sxs-lookup"><span data-stu-id="71ba1-119">In each case, the method parameters are of type <xref:System.ValueType>, and reference types are prevented from being passed to the methods.</span></span>  
  
 [!code-csharp[System.ValueType.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.valuetype.structure/cs/example1.cs#1)]
 [!code-vb[System.ValueType.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.valuetype.structure/vb/example1.vb#1)]  
  
 <span data-ttu-id="71ba1-120">Poniższy przykład ilustruje wywołania metod `Utility` klasy.</span><span class="sxs-lookup"><span data-stu-id="71ba1-120">The following example illustrates calls to the methods of the `Utility` class.</span></span>  
  
 [!code-csharp[System.ValueType.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.valuetype.structure/cs/example1.cs#2)]
 [!code-vb[System.ValueType.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.valuetype.structure/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Enum" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71ba1-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.ValueType" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="71ba1-121">Initializes a new instance of the <see cref="T:System.ValueType" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="71ba1-122">Obiekt do porównania z bieżącym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="71ba1-122">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="71ba1-123">Wskazuje, czy to wystąpienie i określony obiekt są równe.</span><span class="sxs-lookup"><span data-stu-id="71ba1-123">Indicates whether this instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="71ba1-124"><see langword="true" />Jeśli <paramref name="obj" /> to wystąpienie jest tego samego typu i reprezentuje tę samą wartość, <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="71ba1-124"><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ba1-125"><xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> Metoda przesłania<xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> i zapewnia domyślną implementację równość wartości dla wszystkich typów wartości w .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="71ba1-125">The <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> method overrides <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> and provides the default implementation of value equality for all value types in the .NET Framework.</span></span>  
  
 <span data-ttu-id="71ba1-126">Jeśli żadne z pól bieżącego wystąpienia i `obj` nie są typami odwołań <xref:System.ValueType.Equals%2A> , Metoda wykonuje porównanie bajt po bajcie dwóch obiektów w pamięci.</span><span class="sxs-lookup"><span data-stu-id="71ba1-126">If none of the fields of the current instance and `obj` are reference types, the <xref:System.ValueType.Equals%2A> method performs a byte-by-byte comparison of the two objects in memory.</span></span> <span data-ttu-id="71ba1-127">W przeciwnym razie używa odbicia, aby porównać odpowiednie pola `obj` i to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="71ba1-127">Otherwise, it uses reflection to compare the corresponding fields of `obj` and this instance.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="71ba1-128">Szczególnie jeśli typ wartości zawiera pola, które są typami odwołań, należy zastąpić <xref:System.ValueType.Equals%28System.Object%29> metodę.</span><span class="sxs-lookup"><span data-stu-id="71ba1-128">Particularly if your value type contains fields that are reference types, you should override the <xref:System.ValueType.Equals%28System.Object%29> method.</span></span> <span data-ttu-id="71ba1-129">Pozwala to zwiększyć wydajność i pozwala dokładniej przedstawiać znaczenie dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="71ba1-129">This can improve performance and enable you to more closely represent the meaning of equality for the type.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="71ba1-130">Uwagi dotyczące[!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="71ba1-130">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="71ba1-131">Gdy wywoływana jest <xref:System.ValueType.Equals%2A> Metoda [!INCLUDE[wrt](~/includes/wrt-md.md)] w strukturze, zapewnia domyślne zachowanie dla typów wartości, które nie są zastępowane <xref:System.ValueType.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="71ba1-131">When you call the <xref:System.ValueType.Equals%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don't override <xref:System.ValueType.Equals%2A>.</span></span> <span data-ttu-id="71ba1-132">Jest to część pomocy technicznej zapewnianej [!INCLUDE[wrt](~/includes/wrt-md.md)] przez .NET Framework (zobacz [.NET Framework obsługa aplikacji do sklepu Windows i środowisko wykonawcze systemu Windows](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="71ba1-132">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)]<span data-ttu-id="71ba1-133">nie można przesłonić <xref:System.ValueType.Equals%2A>struktur, nawet jeśli są C# one zapisywana lub Visual Basic, ponieważ nie mogą mieć metod.</span><span class="sxs-lookup"><span data-stu-id="71ba1-133">structures can't override <xref:System.ValueType.Equals%2A>, even if they're written with C# or Visual Basic, because they can't have methods.</span></span> <span data-ttu-id="71ba1-134">(Ponadto struktury [!INCLUDE[wrt](~/includes/wrt-md.md)] same w sobie nie dziedziczą <xref:System.ValueType>). Jednak pojawiają się one w <xref:System.ValueType.ToString%2A>taki <xref:System.ValueType.Equals%2A>sposób, <xref:System.ValueType.GetHashCode%2A> że metody,, i, gdy C# są używane w kodzie lub Visual Basic, a .NET Framework zapewnia domyślne zachowanie tych metod.</span><span class="sxs-lookup"><span data-stu-id="71ba1-134">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don't inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71ba1-135">Poniższy przykład ilustruje sposób <xref:System.ValueType.Equals%2A> przesłania metody przez pochodny typ wartości.</span><span class="sxs-lookup"><span data-stu-id="71ba1-135">The following example demonstrates how the <xref:System.ValueType.Equals%2A> method can be overridden by a derived value type.</span></span>  
  
 [!code-cpp[ValueType.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/ValueType.Equals Example/CPP/source.cpp#1)]
 [!code-csharp[ValueType.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/ValueType.Equals Example/CS/source.cs#1)]
 [!code-vb[ValueType.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ValueType.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71ba1-136">Zwraca kod skrótu dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="71ba1-136">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="71ba1-137">32-bitowa liczba całkowita ze znakiem, która jest kodem skrótu dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="71ba1-137">A 32-bit signed integer that is the hash code for this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ba1-138">Metoda ma zastosowanie do typów pochodnych od <xref:System.ValueType>. <xref:System.ValueType.GetHashCode%2A></span><span class="sxs-lookup"><span data-stu-id="71ba1-138">The <xref:System.ValueType.GetHashCode%2A> method applies to types derived from <xref:System.ValueType>.</span></span> <span data-ttu-id="71ba1-139">Co najmniej jedno pole typu pochodnego jest używane do obliczania wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="71ba1-139">One or more fields of the derived type is used to calculate the return value.</span></span> <span data-ttu-id="71ba1-140">Jeśli wywołasz `GetHashCode` metodę typu pochodnego, wartość zwracana prawdopodobnie nie będzie odpowiednia do użycia jako klucz w tabeli skrótów.</span><span class="sxs-lookup"><span data-stu-id="71ba1-140">If you call the derived type's `GetHashCode` method, the return value is not likely to be suitable for use as a key in a hash table.</span></span> <span data-ttu-id="71ba1-141">Ponadto jeśli wartość jednego lub kilku z tych pól ulegnie zmianie, wartość zwracana może stać się nieodpowiednia do użycia jako klucz w tabeli skrótów.</span><span class="sxs-lookup"><span data-stu-id="71ba1-141">Additionally, if the value of one or more of those fields changes, the return value might become unsuitable for use as a key in a hash table.</span></span> <span data-ttu-id="71ba1-142">W obu przypadkach należy rozważyć napisanie własnej implementacji <xref:System.ValueType.GetHashCode%2A> metody, która dokładniej reprezentuje koncepcję kodu skrótu dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="71ba1-142">In either case, consider writing your own implementation of the <xref:System.ValueType.GetHashCode%2A> method that more closely represents the concept of a hash code for the type.</span></span>  
  
 <span data-ttu-id="71ba1-143">Aby uzyskać więcej informacji, <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>Zobacz i <xref:System.Collections.Hashtable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="71ba1-143">For more information, see <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>, and <xref:System.Collections.Hashtable?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="71ba1-144">Uwagi dotyczące[!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="71ba1-144">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="71ba1-145">Gdy wywoływana jest <xref:System.ValueType.GetHashCode%2A> Metoda [!INCLUDE[wrt](~/includes/wrt-md.md)] w strukturze, zapewnia domyślne zachowanie dla typów wartości, które nie są zastępowane <xref:System.ValueType.GetHashCode%2A>.</span><span class="sxs-lookup"><span data-stu-id="71ba1-145">When you call the <xref:System.ValueType.GetHashCode%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don't override <xref:System.ValueType.GetHashCode%2A>.</span></span> <span data-ttu-id="71ba1-146">Jest to część pomocy technicznej zapewnianej [!INCLUDE[wrt](~/includes/wrt-md.md)] przez .NET Framework (zobacz [.NET Framework obsługa aplikacji do sklepu Windows i środowisko wykonawcze systemu Windows](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="71ba1-146">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)]<span data-ttu-id="71ba1-147">nie można przesłonić <xref:System.ValueType.GetHashCode%2A>struktur, nawet jeśli są C# one zapisywana lub Visual Basic, ponieważ nie mogą mieć metod.</span><span class="sxs-lookup"><span data-stu-id="71ba1-147">structures can't override <xref:System.ValueType.GetHashCode%2A>, even if they're written with C# or Visual Basic, because they can't have methods.</span></span> <span data-ttu-id="71ba1-148">(Ponadto struktury [!INCLUDE[wrt](~/includes/wrt-md.md)] same w sobie nie dziedziczą <xref:System.ValueType>). Jednak pojawiają się one w <xref:System.ValueType.ToString%2A>taki <xref:System.ValueType.Equals%2A>sposób, <xref:System.ValueType.GetHashCode%2A> że metody,, i, gdy C# są używane w kodzie lub Visual Basic, a .NET Framework zapewnia domyślne zachowanie tych metod.</span><span class="sxs-lookup"><span data-stu-id="71ba1-148">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don't inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71ba1-149">Poniższy przykład ilustruje sposób <xref:System.ValueType.GetHashCode%2A> przesłania metody przez pochodny typ wartości.</span><span class="sxs-lookup"><span data-stu-id="71ba1-149">The following example demonstrates how the <xref:System.ValueType.GetHashCode%2A> method can be overridden by a derived value type.</span></span>  
  
 [!code-cpp[ValueType.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/ValueType.Equals Example/CPP/source.cpp#1)]
 [!code-csharp[ValueType.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/ValueType.Equals Example/CS/source.cs#1)]
 [!code-vb[ValueType.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ValueType.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="valueType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71ba1-150">Zwraca w pełni kwalifikowaną nazwę typu tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="71ba1-150">Returns the fully qualified type name of this instance.</span></span></summary>
        <returns><span data-ttu-id="71ba1-151">W pełni kwalifikowana nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="71ba1-151">The fully qualified type name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ba1-152">Metoda przesłania metodę i zapewnia domyślną implementację `ToString` metody dla typów wartości. <xref:System.Object.ToString%2A?displayProperty=nameWithType> <xref:System.ValueType.ToString%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="71ba1-152">The <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method and provides the default implementation of the `ToString` method for value types.</span></span> <span data-ttu-id="71ba1-153">(Typy wartości są typami zdefiniowanymi przez `struct` słowo kluczowe C#w `Structure`, i przez... `End Structure` konstrukcja w Visual Basic.) Jednakże implementacja jest taka sama jak w przypadku <xref:System.Object.ToString%2A?displayProperty=nameWithType>: Metoda zwraca w pełni kwalifikowaną nazwę typu.</span><span class="sxs-lookup"><span data-stu-id="71ba1-153">(Value types are types defined by the `struct` keyword in C#, and by the `Structure`...`End Structure` construct in Visual Basic.) Functionally, however, the implementation is that same as that of <xref:System.Object.ToString%2A?displayProperty=nameWithType>: the method returns the fully qualified type name.</span></span>  
  
 <span data-ttu-id="71ba1-154">Typy wartości zdefiniowane przez `struct` słowo kluczowe w C# i `Structure`... konstrukcja w Visual Basic zwykle przesłania metodę <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> , aby zapewnić bardziej zrozumiałą reprezentację ciągu typu wartości. `End Structure`</span><span class="sxs-lookup"><span data-stu-id="71ba1-154">Value types defined by the `struct` keyword in C# and the `Structure`...`End Structure` construct in Visual Basic typically override the <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method to provide a more meaningful string representation of the value type.</span></span> <span data-ttu-id="71ba1-155">Poniższy przykład ilustruje różnicę.</span><span class="sxs-lookup"><span data-stu-id="71ba1-155">The following example illustrates the difference.</span></span> <span data-ttu-id="71ba1-156">Definiuje dwa typy `EmployeeA` wartości i `EmployeeB`, tworzy wystąpienie każdego i wywołuje jego `ToString` metodę.</span><span class="sxs-lookup"><span data-stu-id="71ba1-156">It defines two value types, `EmployeeA` and `EmployeeB`, creates an instance of each, and calls its `ToString` method.</span></span> <span data-ttu-id="71ba1-157">Ponieważ struktura nie <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> przesłania metody, zostanie wyświetlona tylko w pełni kwalifikowana nazwa typu. `EmployeeA`</span><span class="sxs-lookup"><span data-stu-id="71ba1-157">Because the `EmployeeA` structure does not override the <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method, it displays only the fully qualified type name.</span></span> <span data-ttu-id="71ba1-158">`EmployeeB.ToString` Metoda z drugiej strony zawiera istotne informacje dotyczące obiektu.</span><span class="sxs-lookup"><span data-stu-id="71ba1-158">The `EmployeeB.ToString` method, on the other hand, provides meaningful information about the object.</span></span>  
  
 [!code-csharp[System.ValueType.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ValueType.ToString/cs/ToString2.cs#1)]
 [!code-vb[System.ValueType.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ValueType.ToString/vb/ToString2.vb#1)]  
  
 <span data-ttu-id="71ba1-159">Należy pamiętać, że chociaż typy wyliczeniowe są również typami wartości, pochodzą <xref:System.Enum> z klasy, która <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>zastępuje.</span><span class="sxs-lookup"><span data-stu-id="71ba1-159">Note that, although enumeration types are also value types, they derive from the <xref:System.Enum> class, which overrides  <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-for-the-windows-runtime"></a><span data-ttu-id="71ba1-160">Uwagi dotyczące środowisko wykonawcze systemu Windows</span><span class="sxs-lookup"><span data-stu-id="71ba1-160">Notes for the Windows Runtime</span></span>  
 <span data-ttu-id="71ba1-161">Gdy wywoływana jest <xref:System.ValueType.ToString%2A> Metoda [!INCLUDE[wrt](~/includes/wrt-md.md)] w strukturze, zapewnia domyślne zachowanie dla typów wartości, które nie są zastępowane <xref:System.ValueType.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="71ba1-161">When you call the <xref:System.ValueType.ToString%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don't override <xref:System.ValueType.ToString%2A>.</span></span> <span data-ttu-id="71ba1-162">Jest to część pomocy technicznej zapewnianej [!INCLUDE[wrt](~/includes/wrt-md.md)] przez .NET Framework (zobacz [.NET Framework obsługa aplikacji do sklepu Windows i środowisko wykonawcze systemu Windows](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="71ba1-162">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)]<span data-ttu-id="71ba1-163">nie można przesłonić <xref:System.ValueType.ToString%2A>struktur, nawet jeśli są C# one zapisywana lub Visual Basic, ponieważ nie mogą mieć metod.</span><span class="sxs-lookup"><span data-stu-id="71ba1-163">structures can't override <xref:System.ValueType.ToString%2A>, even if they're written with C# or Visual Basic, because they can't have methods.</span></span> <span data-ttu-id="71ba1-164">(Ponadto struktury [!INCLUDE[wrt](~/includes/wrt-md.md)] same w sobie nie dziedziczą <xref:System.ValueType>). Jednak pojawiają się one w <xref:System.ValueType.ToString%2A>taki <xref:System.ValueType.Equals%2A>sposób, <xref:System.ValueType.GetHashCode%2A> że metody,, i, gdy C# są używane w kodzie lub Visual Basic, a .NET Framework zapewnia domyślne zachowanie tych metod.</span><span class="sxs-lookup"><span data-stu-id="71ba1-164">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don't inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
