<Type Name="ValueType" FullName="System.ValueType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4c0f2c31d479fdf3a2ca531d6d62e0103d1507f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37727363" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ValueType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ValueType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ValueType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueType abstract" />
  <TypeSignature Language="F#" Value="type ValueType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b0f39-101">Udostępnia klasę bazową dla typów wartości.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0f39-101">Provides the base class for value types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0f39-102"><xref:System.ValueType> zastępuje metody wirtualne od <xref:System.Object> z implementacjami bardziej odpowiednie dla typów wartości.</span><span class="sxs-lookup"><span data-stu-id="b0f39-102"><xref:System.ValueType> overrides the virtual methods from <xref:System.Object> with more appropriate implementations for value types.</span></span> <span data-ttu-id="b0f39-103">Zobacz też <xref:System.Enum>, który dziedziczy z <xref:System.ValueType>.</span><span class="sxs-lookup"><span data-stu-id="b0f39-103">See also <xref:System.Enum>, which inherits from <xref:System.ValueType>.</span></span>  
  
 <span data-ttu-id="b0f39-104">Typy danych są podzielone na typy wartości i odwołań.</span><span class="sxs-lookup"><span data-stu-id="b0f39-104">Data types are separated into value types and reference types.</span></span> <span data-ttu-id="b0f39-105">Typy wartości są przydzielone do stosu lub alokowana wewnątrz struktury.</span><span class="sxs-lookup"><span data-stu-id="b0f39-105">Value types are either stack-allocated or allocated inline in a structure.</span></span> <span data-ttu-id="b0f39-106">Typy odwołań są przydzielony w stercie.</span><span class="sxs-lookup"><span data-stu-id="b0f39-106">Reference types are heap-allocated.</span></span> <span data-ttu-id="b0f39-107">Typy odwołań i wartości pochodzą z klasy bazowej ultimate <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="b0f39-107">Both reference and value types are derived from the ultimate base class <xref:System.Object>.</span></span> <span data-ttu-id="b0f39-108">W przypadkach, gdy jest niezbędne dla typu wartości działały jak obiekt otoki, sprawia, że typ wartości wygląd obiektu odwołania jest przydzielony na stosie i typ wartości jest kopiowana do niego.</span><span class="sxs-lookup"><span data-stu-id="b0f39-108">In cases where it is necessary for a value type to behave like an object, a wrapper that makes the value type look like a reference object is allocated on the heap, and the value type's value is copied into it.</span></span> <span data-ttu-id="b0f39-109">Otoki jest oznaczona, więc system wie, że zawiera on typu wartości.</span><span class="sxs-lookup"><span data-stu-id="b0f39-109">The wrapper is marked so the system knows that it contains a value type.</span></span> <span data-ttu-id="b0f39-110">Ten proces jest nazywany pakowania i procesu jest znany jako rozpakowywania.</span><span class="sxs-lookup"><span data-stu-id="b0f39-110">This process is known as boxing, and the reverse process is known as unboxing.</span></span> <span data-ttu-id="b0f39-111">Pakowanie i rozpakowywanie Zezwalaj na dowolny typ powinien być traktowany jako obiekt.</span><span class="sxs-lookup"><span data-stu-id="b0f39-111">Boxing and unboxing allow any type to be treated as an object.</span></span>  
  
 <span data-ttu-id="b0f39-112">Mimo że <xref:System.ValueType> jest niejawne klasa podstawowa dla typów wartości nie można utworzyć klasę, która dziedziczy po elemencie <xref:System.ValueType> bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="b0f39-112">Although <xref:System.ValueType> is the implicit base class for value types, you cannot create a class that inherits from <xref:System.ValueType> directly.</span></span> <span data-ttu-id="b0f39-113">Zamiast tego indywidualnych kompilatorów zapewniają słowo kluczowe języka lub konstrukcji (takie jak `struct` w języku C# i `Structure`...`End Structure`</span><span class="sxs-lookup"><span data-stu-id="b0f39-113">Instead, individual compilers provide a language keyword or construct (such as `struct` in C# and `Structure`…`End Structure`</span></span> <span data-ttu-id="b0f39-114">w Visual Basic), aby obsługiwać tworzenie typów wartości.</span><span class="sxs-lookup"><span data-stu-id="b0f39-114">in Visual Basic) to support the creation of value types.</span></span>  
  
 <span data-ttu-id="b0f39-115">Oprócz służy jako klasa bazowa dla typów wartości w programie .NET Framework <xref:System.ValueType> struktura nie jest zazwyczaj używany bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b0f39-115">Aside from serving as the base class for value types in the .NET Framework, the <xref:System.ValueType> structure is generally not used directly in code.</span></span> <span data-ttu-id="b0f39-116">Jednak może służyć jako parametr w wywołaniach metod ograniczyć możliwe argumenty do typów wartości, a nie wszystkich obiektów lub zezwolić na metodę do obsługi wielu typów inną wartość.</span><span class="sxs-lookup"><span data-stu-id="b0f39-116">However, it can be used as a parameter in method calls to restrict possible arguments to value types instead of all objects, or to permit a method to handle a number of different value types.</span></span> <span data-ttu-id="b0f39-117">Poniższy przykład ilustruje sposób <xref:System.ValueType> zapobiega przekazywaniu do metod typy odwołań.</span><span class="sxs-lookup"><span data-stu-id="b0f39-117">The following example illustrates how <xref:System.ValueType> prevents reference types from being passed to methods.</span></span> <span data-ttu-id="b0f39-118">Definiuje klasę o nazwie `Utility` zawierający cztery metody: `IsNumeric`, która wskazuje, czy argument jest liczbą; `IsInteger`, która wskazuje, czy argument jest liczbą całkowitą; `IsFloat`, która wskazuje, czy argument jest liczbą zmiennoprzecinkową; i `Compare`, który określa relację pomiędzy dwóch wartości liczbowych.</span><span class="sxs-lookup"><span data-stu-id="b0f39-118">It defines a class named `Utility` that contains four methods: `IsNumeric`, which indicates whether its argument is a number; `IsInteger`, which indicates whether its argument is an integer; `IsFloat`, which indicates whether its argument is a floating-point number; and `Compare`, which indicates the relationship between two numeric values.</span></span> <span data-ttu-id="b0f39-119">W obu przypadkach parametry metody są typu <xref:System.ValueType>, i typy referencyjne nie będą mogli przekazywany do metody.</span><span class="sxs-lookup"><span data-stu-id="b0f39-119">In each case, the method parameters are of type <xref:System.ValueType>, and reference types are prevented from being passed to the methods.</span></span>  
  
 [!code-csharp[System.ValueType.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.valuetype.structure/cs/example1.cs#1)]
 [!code-vb[System.ValueType.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.valuetype.structure/vb/example1.vb#1)]  
  
 <span data-ttu-id="b0f39-120">Poniższy przykład ilustruje sposób wywołania metody `Utility` klasy.</span><span class="sxs-lookup"><span data-stu-id="b0f39-120">The following example illustrates calls to the methods of the `Utility` class.</span></span>  
  
 [!code-csharp[System.ValueType.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.valuetype.structure/cs/example1.cs#2)]
 [!code-vb[System.ValueType.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.valuetype.structure/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Enum" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0f39-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.ValueType" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0f39-121">Initializes a new instance of the <see cref="T:System.ValueType" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b0f39-122">Obiekt do porównania z bieżącym wystąpieniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0f39-122">The object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0f39-123">Wskazuje, czy to wystąpienie oraz określony obiekt są równe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0f39-123">Indicates whether this instance and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0f39-124">
            <see langword="true" /> Jeśli <paramref name="obj" /> oraz to wystąpienie są tego samego typu i reprezentują tę samą wartość; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0f39-124">
              <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0f39-125"><xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> Zastąpienia metody <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> i udostępnia domyślną implementację elementu równości wartości dla wszystkich typów wartości w programie .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="b0f39-125">The <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> method overrides <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> and provides the default implementation of value equality for all value types in the .NET Framework.</span></span>  
  
 <span data-ttu-id="b0f39-126">Jeśli żadne z pól bieżącego wystąpienia i `obj` są typami odwołań, <xref:System.ValueType.Equals%2A> metoda wykonuje porównanie bajt po bajcie dwóch obiektów w pamięci.</span><span class="sxs-lookup"><span data-stu-id="b0f39-126">If none of the fields of the current instance and `obj` are reference types, the <xref:System.ValueType.Equals%2A> method performs a byte-by-byte comparison of the two objects in memory.</span></span> <span data-ttu-id="b0f39-127">W przeciwnym razie używa odbicia do porównania odpowiednich pól `obj` i tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="b0f39-127">Otherwise, it uses reflection to compare the corresponding fields of `obj` and this instance.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="b0f39-128">Szczególnie w przypadku, gdy typ wartości zawiera pola, które są typami odwołań, należy zastąpić <xref:System.ValueType.Equals%28System.Object%29> metody.</span><span class="sxs-lookup"><span data-stu-id="b0f39-128">Particularly if your value type contains fields that are reference types, you should override the <xref:System.ValueType.Equals%28System.Object%29> method.</span></span> <span data-ttu-id="b0f39-129">Może to zwiększyć wydajność i pozwalają na dokładniejsze reprezentują znaczenie równości dla typu.</span><span class="sxs-lookup"><span data-stu-id="b0f39-129">This can improve performance and enable you to more closely represent the meaning of equality for the type.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="b0f39-130">Uwagi dla [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="b0f39-130">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="b0f39-131">Gdy wywołujesz <xref:System.ValueType.Equals%2A> metody [!INCLUDE[wrt](~/includes/wrt-md.md)] struktury, zapewnia domyślne zachowanie dla typów wartości, które nie zastąpisz <xref:System.ValueType.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0f39-131">When you call the <xref:System.ValueType.Equals%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don’t override <xref:System.ValueType.Equals%2A>.</span></span> <span data-ttu-id="b0f39-132">Jest to część obsługi, która oferuje funkcje programu .NET Framework [!INCLUDE[wrt](~/includes/wrt-md.md)] (zobacz [.NET Framework obsługuje for Windows Store Apps i środowiska wykonawczego Windows](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="b0f39-132">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)]<span data-ttu-id="b0f39-133"> Nie można zastąpić struktury <xref:System.ValueType.Equals%2A>nawet wtedy, gdy zostały napisane w języku C# lub Visual Basic, ponieważ nie mają metod.</span><span class="sxs-lookup"><span data-stu-id="b0f39-133"> structures can’t override <xref:System.ValueType.Equals%2A>, even if they’re written with C# or Visual Basic, because they can’t have methods.</span></span> <span data-ttu-id="b0f39-134">(Ponadto struktury w [!INCLUDE[wrt](~/includes/wrt-md.md)] sam nie dziedziczą <xref:System.ValueType>.) Jednak wydają się mieć <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, i <xref:System.ValueType.GetHashCode%2A> metody, gdy będziesz ich używać w kodzie języka C# lub Visual Basic a .NET Framework zapewnia domyślne zachowanie dla tych metod.</span><span class="sxs-lookup"><span data-stu-id="b0f39-134">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don’t inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0f39-135">W poniższym przykładzie pokazano sposób, w jaki <xref:System.ValueType.Equals%2A> metodę można przesłonić według typu pochodnego.</span><span class="sxs-lookup"><span data-stu-id="b0f39-135">The following example demonstrates how the <xref:System.ValueType.Equals%2A> method can be overridden by a derived value type.</span></span>  
  
 [!code-cpp[ValueType.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/ValueType.Equals Example/CPP/source.cpp#1)]
 [!code-csharp[ValueType.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/ValueType.Equals Example/CS/source.cs#1)]
 [!code-vb[ValueType.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ValueType.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0f39-136">Zwraca kod skrótu dla tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0f39-136">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0f39-137">32-bitowa liczba całkowita ze znakiem jest wartość skrótu dla tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0f39-137">A 32-bit signed integer that is the hash code for this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0f39-138"><xref:System.ValueType.GetHashCode%2A> Metodę stosuje się do typów pochodnych typu <xref:System.ValueType>.</span><span class="sxs-lookup"><span data-stu-id="b0f39-138">The <xref:System.ValueType.GetHashCode%2A> method applies to types derived from <xref:System.ValueType>.</span></span> <span data-ttu-id="b0f39-139">Co najmniej jedno pole typu pochodnego jest używane do obliczania wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="b0f39-139">One or more fields of the derived type is used to calculate the return value.</span></span> <span data-ttu-id="b0f39-140">Jeśli wywołasz typu pochodnego `GetHashCode` metody, wartość zwracana prawdopodobnie nie można użyć jako klucza w tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="b0f39-140">If you call the derived type's `GetHashCode` method, the return value is not likely to be suitable for use as a key in a hash table.</span></span> <span data-ttu-id="b0f39-141">Ponadto jeśli zmieni się wartość co najmniej jeden z tych pól, wartość zwracana mogą stać się niezdatna do użytku jako klucz w tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="b0f39-141">Additionally, if the value of one or more of those fields changes, the return value might become unsuitable for use as a key in a hash table.</span></span> <span data-ttu-id="b0f39-142">W obu przypadkach należy wziąć pod uwagę pisania własnych implementacji <xref:System.ValueType.GetHashCode%2A> metodę, która lepiej reprezentuje pojęcie wartość skrótu dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="b0f39-142">In either case, consider writing your own implementation of the <xref:System.ValueType.GetHashCode%2A> method that more closely represents the concept of a hash code for the type.</span></span>  
  
 <span data-ttu-id="b0f39-143">Aby uzyskać więcej informacji, zobacz <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>, i <xref:System.Collections.Hashtable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b0f39-143">For more information, see <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>, and <xref:System.Collections.Hashtable?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="b0f39-144">Uwagi dla [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="b0f39-144">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="b0f39-145">Gdy wywołujesz <xref:System.ValueType.GetHashCode%2A> metody [!INCLUDE[wrt](~/includes/wrt-md.md)] struktury, zapewnia domyślne zachowanie dla typów wartości, które nie zastąpisz <xref:System.ValueType.GetHashCode%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0f39-145">When you call the <xref:System.ValueType.GetHashCode%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don’t override <xref:System.ValueType.GetHashCode%2A>.</span></span> <span data-ttu-id="b0f39-146">Jest to część obsługi, która oferuje funkcje programu .NET Framework [!INCLUDE[wrt](~/includes/wrt-md.md)] (zobacz [.NET Framework obsługuje for Windows Store Apps i środowiska wykonawczego Windows](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="b0f39-146">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)]<span data-ttu-id="b0f39-147"> Nie można zastąpić struktury <xref:System.ValueType.GetHashCode%2A>nawet wtedy, gdy zostały napisane w języku C# lub Visual Basic, ponieważ nie mają metod.</span><span class="sxs-lookup"><span data-stu-id="b0f39-147"> structures can’t override <xref:System.ValueType.GetHashCode%2A>, even if they’re written with C# or Visual Basic, because they can’t have methods.</span></span> <span data-ttu-id="b0f39-148">(Ponadto struktury w [!INCLUDE[wrt](~/includes/wrt-md.md)] sam nie dziedziczą <xref:System.ValueType>.) Jednak wydają się mieć <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, i <xref:System.ValueType.GetHashCode%2A> metody, gdy będziesz ich używać w kodzie języka C# lub Visual Basic a .NET Framework zapewnia domyślne zachowanie dla tych metod.</span><span class="sxs-lookup"><span data-stu-id="b0f39-148">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don’t inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0f39-149">W poniższym przykładzie pokazano sposób, w jaki <xref:System.ValueType.GetHashCode%2A> metodę można przesłonić według typu pochodnego.</span><span class="sxs-lookup"><span data-stu-id="b0f39-149">The following example demonstrates how the <xref:System.ValueType.GetHashCode%2A> method can be overridden by a derived value type.</span></span>  
  
 [!code-cpp[ValueType.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/ValueType.Equals Example/CPP/source.cpp#1)]
 [!code-csharp[ValueType.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/ValueType.Equals Example/CS/source.cs#1)]
 [!code-vb[ValueType.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ValueType.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="valueType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0f39-150">Zwraca w pełni kwalifikowana nazwa typu tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0f39-150">Returns the fully qualified type name of this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0f39-151">W pełni kwalifikowana nazwa typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0f39-151">The fully qualified type name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0f39-152"><xref:System.ValueType.ToString%2A?displayProperty=nameWithType> Zastąpienia metody <xref:System.Object.ToString%2A?displayProperty=nameWithType> metody i udostępnia domyślną implementację elementu `ToString` metody dla typów wartości.</span><span class="sxs-lookup"><span data-stu-id="b0f39-152">The <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method and provides the default implementation of the `ToString` method for value types.</span></span> <span data-ttu-id="b0f39-153">(Typy wartości są typy zdefiniowane przez `struct` — słowo kluczowe w języku C# i przez `Structure`... `End Structure` konstruowania w języku Visual Basic.) Funkcjonalnie, jednak jest to ten sam, jak w przypadku wdrożenia <xref:System.Object.ToString%2A?displayProperty=nameWithType>: metoda ta zwraca w pełni kwalifikowana nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="b0f39-153">(Value types are types defined by the `struct` keyword in C#, and by the `Structure`...`End Structure` construct in Visual Basic.) Functionally, however, the implementation is that same as that of <xref:System.Object.ToString%2A?displayProperty=nameWithType>: the method returns the fully qualified type name.</span></span>  
  
 <span data-ttu-id="b0f39-154">Typy zdefiniowane przez wartości `struct` — słowo kluczowe w języku C# i `Structure`... `End Structure` konstrukcja w języku Visual Basic zazwyczaj zastąpienie <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> metody w celu zapewnienia bardziej znaczącą reprezentację ciągu typu wartości.</span><span class="sxs-lookup"><span data-stu-id="b0f39-154">Value types defined by the `struct` keyword in C# and the `Structure`...`End Structure` construct in Visual Basic typically override the <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method to provide a more meaningful string representation of the value type.</span></span> <span data-ttu-id="b0f39-155">Poniższy przykład ilustruje tę różnicę.</span><span class="sxs-lookup"><span data-stu-id="b0f39-155">The following example illustrates the difference.</span></span> <span data-ttu-id="b0f39-156">Definiuje dwa typy wartości, `EmployeeA` i `EmployeeB`, tworzone jest wystąpienie i wywołuje jego `ToString` metody.</span><span class="sxs-lookup"><span data-stu-id="b0f39-156">It defines two value types, `EmployeeA` and `EmployeeB`, creates an instance of each, and calls its `ToString` method.</span></span> <span data-ttu-id="b0f39-157">Ponieważ `EmployeeA` struktury nie zastępuje <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> metody wyświetla tylko w pełni kwalifikowana nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="b0f39-157">Because the `EmployeeA` structure does not override the <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method, it displays only the fully qualified type name.</span></span> <span data-ttu-id="b0f39-158">`EmployeeB.ToString` Metody, z drugiej strony, zapewnia istotnych informacji o obiekcie.</span><span class="sxs-lookup"><span data-stu-id="b0f39-158">The `EmployeeB.ToString` method, on the other hand, provides meaningful information about the object.</span></span>  
  
 [!code-csharp[System.ValueType.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ValueType.ToString/cs/ToString2.cs#1)]
 [!code-vb[System.ValueType.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ValueType.ToString/vb/ToString2.vb#1)]  
  
 <span data-ttu-id="b0f39-159">Należy pamiętać, że chociaż Typy wyliczeniowe są również typy wartości, pochodzą one od <xref:System.Enum> klasy, co zastępuje <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b0f39-159">Note that, although enumeration types are also value types, they derive from the <xref:System.Enum> class, which overrides  <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-for-the-windows-runtime"></a><span data-ttu-id="b0f39-160">Uwagi dotyczące środowiska uruchomieniowego Windows</span><span class="sxs-lookup"><span data-stu-id="b0f39-160">Notes for the Windows Runtime</span></span>  
 <span data-ttu-id="b0f39-161">Gdy wywołujesz <xref:System.ValueType.ToString%2A> metody [!INCLUDE[wrt](~/includes/wrt-md.md)] struktury, zapewnia domyślne zachowanie dla typów wartości, które nie zastąpisz <xref:System.ValueType.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0f39-161">When you call the <xref:System.ValueType.ToString%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don’t override <xref:System.ValueType.ToString%2A>.</span></span> <span data-ttu-id="b0f39-162">Jest to część obsługi, która oferuje funkcje programu .NET Framework [!INCLUDE[wrt](~/includes/wrt-md.md)] (zobacz [.NET Framework obsługuje for Windows Store Apps i środowiska wykonawczego Windows](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="b0f39-162">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)]<span data-ttu-id="b0f39-163"> Nie można zastąpić struktury <xref:System.ValueType.ToString%2A>nawet wtedy, gdy zostały napisane w języku C# lub Visual Basic, ponieważ nie mają metod.</span><span class="sxs-lookup"><span data-stu-id="b0f39-163"> structures can’t override <xref:System.ValueType.ToString%2A>, even if they’re written with C# or Visual Basic, because they can’t have methods.</span></span> <span data-ttu-id="b0f39-164">(Ponadto struktury w [!INCLUDE[wrt](~/includes/wrt-md.md)] sam nie dziedziczą <xref:System.ValueType>.) Jednak wydają się mieć <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, i <xref:System.ValueType.GetHashCode%2A> metody, gdy będziesz ich używać w kodzie języka C# lub Visual Basic a .NET Framework zapewnia domyślne zachowanie dla tych metod.</span><span class="sxs-lookup"><span data-stu-id="b0f39-164">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don’t inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>