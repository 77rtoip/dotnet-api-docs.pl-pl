<Type Name="MathF" FullName="System.MathF">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b72284d390ede7fa9e0265550f568899dce9d8d" /><Meta Name="ms.sourcegitcommit" Value="a9b8eb12d69b131f7c0de74d471798e44e863282" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/04/2019" /><Meta Name="ms.locfileid" Value="66501872" /></Metadata><TypeSignature Language="C#" Value="public static class MathF" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MathF extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.MathF" />
  <TypeSignature Language="VB.NET" Value="Public Class MathF" />
  <TypeSignature Language="C++ CLI" Value="public ref class MathF abstract sealed" />
  <TypeSignature Language="F#" Value="type MathF = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6f612-101">Zapewnia stałe i metody statyczne trygonometrycznych logarytmicznej i innych typowych funkcji matematycznych.</span><span class="sxs-lookup"><span data-stu-id="6f612-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

<span data-ttu-id="6f612-102">Pola statyczne i metody `MathF` klasy odpowiadają identyfikatorom <xref:System.Math> klasy, z tą różnicą, że ich parametry są typu <xref:System.Single> zamiast <xref:System.Double>, a także zwracają <xref:System.Single> zamiast <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="6f612-102">The static fields and methods of the `MathF` class correspond to those of the <xref:System.Math> class, except that their parameters are of type <xref:System.Single> rather than <xref:System.Double>, and they return <xref:System.Single> rather than <xref:System.Double> values.</span></span>

         ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float x);" />
      <MemberSignature Language="F#" Value="static member Abs : single -&gt; single" Usage="System.MathF.Abs x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-103">Liczba, która jest większa lub równa <see cref="F:System.Single.MinValue" />, ale jest mniejsza lub równa <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-103">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="6f612-104">Zwraca wartość bezwzględną liczby zmiennoprzecinkowej pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="6f612-104">Returns the absolute value of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="6f612-105">Liczba zmiennoprzecinkowa pojedynczej precyzji, x, że x ≤ 0 ≤ <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-105">A single-precision floating-point number, x, such that 0 ≤ x ≤ <see cref="F:System.Single.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-106">Wartość bezwzględna <xref:System.Single> jest wartość liczbowa, bez znaku.</span><span class="sxs-lookup"><span data-stu-id="6f612-106">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="6f612-107">Na przykład, wartość bezwzględna zarówno 1.2E-03 i - 1.2e03 jest 1.2e03.</span><span class="sxs-lookup"><span data-stu-id="6f612-107">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="6f612-108">Jeśli `x` jest równa <xref:System.Single.NegativeInfinity> lub <xref:System.Single.PositiveInfinity>, zwracana jest wartość <xref:System.Single.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="6f612-108">If `x` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="6f612-109">Jeśli `x` jest równa <xref:System.Single.NaN>, zwracana jest wartość <xref:System.Single.NaN>.</span><span class="sxs-lookup"><span data-stu-id="6f612-109">If `x` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static float Acos (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Acos(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Acos(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Acos(float x);" />
      <MemberSignature Language="F#" Value="static member Acos : single -&gt; single" Usage="System.MathF.Acos x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-110">Liczba reprezentująca cosinus, gdzie <paramref name="x" /> musi być większa niż lub równy-1, ale jest mniejszy niż 1.</span><span class="sxs-lookup"><span data-stu-id="6f612-110">A number representing a cosine, where <paramref name="x" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="6f612-111">Zwraca kąt, którego cosinus jest równy podanej liczbie.</span><span class="sxs-lookup"><span data-stu-id="6f612-111">Returns the angle whose cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-112">Kąt, θ, wyrażony w radianach, tak że 0 ≤ θ ≤ π.</span><span class="sxs-lookup"><span data-stu-id="6f612-112">An angle, θ, measured in radians, such that 0 ≤ θ ≤ π.</span></span>
  
<span data-ttu-id="6f612-113">—lub—</span><span class="sxs-lookup"><span data-stu-id="6f612-113">-or-</span></span> 
 <span data-ttu-id="6f612-114"><see cref="F:System.Single.NaN" /> Jeśli <paramref name="x" /> &lt; -1 lub <paramref name="x" /> &gt; 1 lub <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-114"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> &lt; -1 or <paramref name="x" /> &gt; 1 or <paramref name="x" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-115">Należy pomnożyć wartość zwracaną przez 180 /<xref:System.MathF.PI?displayProperty=nameWithType> do przekonwertowania z radianów na stopnie.</span><span class="sxs-lookup"><span data-stu-id="6f612-115">Multiply the return value by 180/<xref:System.MathF.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public static float Acosh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Acosh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Acosh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acosh (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Acosh(float x);" />
      <MemberSignature Language="F#" Value="static member Acosh : single -&gt; single" Usage="System.MathF.Acosh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-116">Liczba reprezentująca cosinus hiperboliczny, gdzie <paramref name="x" /> musi być większa lub równa 1, ale jest mniejsza lub równa <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-116">A number representing a hyperbolic cosine, where <paramref name="x" /> must be greater than or equal to 1, but less than or equal to <see cref="F:System.Single.PositiveInfinity" />.</span></span></param>
        <summary><span data-ttu-id="6f612-117">Zwraca kąt, którego cosinus hiperboliczny jest równy podanej liczbie.</span><span class="sxs-lookup"><span data-stu-id="6f612-117">Returns the angle whose hyperbolic cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-118">Kąt, θ, wyrażony w radianach, tak że 0 ≤ θ ≤ ∞;.</span><span class="sxs-lookup"><span data-stu-id="6f612-118">An angle, θ, measured in radians, such that 0 ≤ θ ≤ ∞.</span></span>
  
<span data-ttu-id="6f612-119">—lub—</span><span class="sxs-lookup"><span data-stu-id="6f612-119">-or-</span></span> 
 <span data-ttu-id="6f612-120"><see cref="F:System.Single.NaN" /> Jeśli <paramref name="x" /> &lt; 1 lub <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-120"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> &lt; 1 or <paramref name="x" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-121">Należy pomnożyć wartość zwracaną przez 180 /<xref:System.MathF.PI?displayProperty=nameWithType> do przekonwertowania z radianów na stopnie.</span><span class="sxs-lookup"><span data-stu-id="6f612-121">Multiply the return value by 180/<xref:System.MathF.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static float Asin (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Asin(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Asin(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Asin(float x);" />
      <MemberSignature Language="F#" Value="static member Asin : single -&gt; single" Usage="System.MathF.Asin x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-122">Liczba reprezentująca sinusa, gdzie <paramref name="x" /> musi być większa niż lub równy-1, ale jest mniejszy niż 1.</span><span class="sxs-lookup"><span data-stu-id="6f612-122">A number representing a sine, where <paramref name="x" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="6f612-123">Zwraca kąt, którego sinus jest równy podanej liczbie.</span><span class="sxs-lookup"><span data-stu-id="6f612-123">Returns the angle whose sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-124">Kąt, θ, wyrażony w radianach, tak że ≤ θ ≤ - π/2 π/2.</span><span class="sxs-lookup"><span data-stu-id="6f612-124">An angle, θ, measured in radians, such that -π/2 ≤ θ ≤ π/2.</span></span>
  
<span data-ttu-id="6f612-125">—lub—</span><span class="sxs-lookup"><span data-stu-id="6f612-125">-or-</span></span> 
 <span data-ttu-id="6f612-126"><see cref="F:System.Single.NaN" /> Jeśli <paramref name="x" /> &lt; -1 lub <paramref name="x" /> &gt; 1 lub <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-126"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> &lt; -1 or <paramref name="x" /> &gt; 1 or <paramref name="x" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-127">Dodatnia wartość zwracana reprezentuje kątowi z osi x; ujemna wartość zwracana oznacza kąt obrotu w prawo.</span><span class="sxs-lookup"><span data-stu-id="6f612-127">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="6f612-128">Należy pomnożyć wartość zwracaną przez 180 /<xref:System.MathF.PI?displayProperty=nameWithType> do przekonwertowania z radianów na stopnie.</span><span class="sxs-lookup"><span data-stu-id="6f612-128">Multiply the return value by 180/<xref:System.MathF.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public static float Asinh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Asinh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Asinh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asinh (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Asinh(float x);" />
      <MemberSignature Language="F#" Value="static member Asinh : single -&gt; single" Usage="System.MathF.Asinh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-129">Liczba reprezentująca sinus hiperboliczny, gdzie <paramref name="x" /> musi być większa lub równa <see cref="F:System.Single.NegativeInfinity" />, ale jest mniejsza lub równa <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-129">A number representing a hyperbolic sine, where <paramref name="x" /> must be greater than or equal to <see cref="F:System.Single.NegativeInfinity" />, but less than or equal to <see cref="F:System.Single.PositiveInfinity" />.</span></span></param>
        <summary><span data-ttu-id="6f612-130">Zwraca kąt, którego sinus hiperboliczny jest równy podanej liczbie.</span><span class="sxs-lookup"><span data-stu-id="6f612-130">Returns the angle whose hyperbolic sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-131">Kąt, θ, wyrażony w radianach, tak że ∞; - &lt; θ ≤ -1 lub 1 ≤ θ &lt; ∞;.</span><span class="sxs-lookup"><span data-stu-id="6f612-131">An angle, θ, measured in radians, such that -∞ &lt; θ ≤ -1, or 1 ≤ θ &lt; ∞.</span></span> 
  
<span data-ttu-id="6f612-132">—lub—</span><span class="sxs-lookup"><span data-stu-id="6f612-132">-or-</span></span> 
 <span data-ttu-id="6f612-133"><see cref="F:System.Single.NaN" /> Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-133"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-134">Należy pomnożyć wartość zwracaną przez 180 /<xref:System.MathF.PI?displayProperty=nameWithType> do przekonwertowania z radianów na stopnie.</span><span class="sxs-lookup"><span data-stu-id="6f612-134">Multiply the return value by 180/<xref:System.MathF.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static float Atan (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Atan(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Atan(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Atan(float x);" />
      <MemberSignature Language="F#" Value="static member Atan : single -&gt; single" Usage="System.MathF.Atan x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-135">Liczba reprezentująca stycznej.</span><span class="sxs-lookup"><span data-stu-id="6f612-135">A number representing a tangent.</span></span></param>
        <summary><span data-ttu-id="6f612-136">Zwraca kąt, którego tangens jest równy podanej liczbie.</span><span class="sxs-lookup"><span data-stu-id="6f612-136">Returns the angle whose tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-137">Kąt, θ, wyrażony w radianach, tak że ≤ θ ≤ - π/2 π/2.</span><span class="sxs-lookup"><span data-stu-id="6f612-137">An angle, θ, measured in radians, such that -π/2 ≤ θ ≤ π/2.</span></span>  
  
<span data-ttu-id="6f612-138">—lub—</span><span class="sxs-lookup"><span data-stu-id="6f612-138">-or-</span></span> 
 <span data-ttu-id="6f612-139"><see cref="F:System.Single.NaN" /> Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />, - π/2 jest zaokrąglana do podwójnej precyzji (-1.5707963267949) Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NegativeInfinity" />, lub π/2 jest zaokrąglana do podwójnej precyzji (1.5707963267949) Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-139"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> equals <see cref="F:System.Single.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="x" /> equals <see cref="F:System.Single.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="x" /> equals <see cref="F:System.Single.PositiveInfinity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-140">Dodatnia wartość zwracana reprezentuje kątowi z osi x; ujemna wartość zwracana oznacza kąt obrotu w prawo.</span><span class="sxs-lookup"><span data-stu-id="6f612-140">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="6f612-141">Należy pomnożyć wartość zwracaną przez 180 /<xref:System.MathF.PI?displayProperty=nameWithType> do przekonwertowania z radianów na stopnie.</span><span class="sxs-lookup"><span data-stu-id="6f612-141">Multiply the return value by 180/<xref:System.MathF.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static float Atan2 (float y, float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Atan2(float32 y, float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Atan2(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Single, x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Atan2(float y, float x);" />
      <MemberSignature Language="F#" Value="static member Atan2 : single * single -&gt; single" Usage="System.MathF.Atan2 (y, x)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="y"><span data-ttu-id="6f612-142">Współrzędna y punktu.</span><span class="sxs-lookup"><span data-stu-id="6f612-142">The y coordinate of a point.</span></span></param>
        <param name="x"><span data-ttu-id="6f612-143">Współrzędna x punktu.</span><span class="sxs-lookup"><span data-stu-id="6f612-143">The x coordinate of a point.</span></span></param>
        <summary><span data-ttu-id="6f612-144">Zwraca kąt, którego tangens jest równy ilorazowi dwóch podanych liczb.</span><span class="sxs-lookup"><span data-stu-id="6f612-144">Returns the angle whose tangent is the quotient of two specified numbers.</span></span></summary>
        <returns><span data-ttu-id="6f612-145">Kąt, θ, wyrażony w radianach, tak, aby - π ≤ θ ≤ π i tan(θ) = <paramref name="y" />  /  <paramref name="x" />, gdzie (<paramref name="x" />, <paramref name="y" />) jest punktem na płaszczyźnie formułuje.</span><span class="sxs-lookup"><span data-stu-id="6f612-145">An angle, θ, measured in radians, such that -π ≤ θ ≤ π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span></span> <span data-ttu-id="6f612-146">Sprawdź następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="6f612-146">Observe the following:</span></span> 
<span data-ttu-id="6f612-147">-Aby (<paramref name="x" />, <paramref name="y" />) w quadrant 1, 0 &lt; θ &lt; π/2.</span><span class="sxs-lookup"><span data-stu-id="6f612-147">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span></span>  
  
<span data-ttu-id="6f612-148">-Aby (<paramref name="x" />, <paramref name="y" />) w quadrant 2, π/2 &lt; θ ≤ π.</span><span class="sxs-lookup"><span data-stu-id="6f612-148">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ ≤ π.</span></span>  
  
<span data-ttu-id="6f612-149">-Aby (<paramref name="x" />, <paramref name="y" />) w quadrant 3, - π &lt; θ &lt; - π/2.</span><span class="sxs-lookup"><span data-stu-id="6f612-149">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span></span>  
  
<span data-ttu-id="6f612-150">-Aby (<paramref name="x" />, <paramref name="y" />) w quadrant 4, - π/2 &lt; θ &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="6f612-150">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span></span>  
  
<span data-ttu-id="6f612-151">Dla punktów w granicach ćwiartkach wartość zwracana jest następująca:</span><span class="sxs-lookup"><span data-stu-id="6f612-151">For points on the boundaries of the quadrants, the return value is the following:</span></span> 
<span data-ttu-id="6f612-152">-Y wynosi 0 i x czy nie jest to ujemna θ = 0.</span><span class="sxs-lookup"><span data-stu-id="6f612-152">-   If y is 0 and x is not negative, θ = 0.</span></span>  
  
<span data-ttu-id="6f612-153">— Jeśli y wynosi 0 i x ma wartość ujemną, θ = π.</span><span class="sxs-lookup"><span data-stu-id="6f612-153">-   If y is 0 and x is negative, θ = π.</span></span>  
  
<span data-ttu-id="6f612-154">-Jeśli y jest dodatnia, a x jest równa 0, θ = π/2.</span><span class="sxs-lookup"><span data-stu-id="6f612-154">-   If y is positive and x is 0, θ = π/2.</span></span>  
  
<span data-ttu-id="6f612-155">— Jeśli y jest ujemna, a x jest równa 0, θ = - π/2.</span><span class="sxs-lookup"><span data-stu-id="6f612-155">-   If y is negative and x is 0, θ = -π/2.</span></span>  
  
<span data-ttu-id="6f612-156">— Jeśli y wynosi 0, a x jest równa 0, θ = 0.</span><span class="sxs-lookup"><span data-stu-id="6f612-156">-   If y is 0 and x is 0, θ = 0.</span></span>  
  
<span data-ttu-id="6f612-157">Jeśli <paramref name="x" /> lub <paramref name="y" /> jest <see cref="F:System.Single.NaN" />, lub jeśli <paramref name="x" /> i <paramref name="y" /> są <see cref="F:System.Single.PositiveInfinity" /> lub <see cref="F:System.Single.NegativeInfinity" />, metoda zwraca <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-157">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Single.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Single.PositiveInfinity" /> or <see cref="F:System.Single.NegativeInfinity" />, the method returns <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-158">Wartość zwracana jest wartość kąta w płaszczyzną formułuje utworzoną przez osi x i wektorowej, począwszy od źródła (0,0) i przerywa w punkcie, (x, y).</span><span class="sxs-lookup"><span data-stu-id="6f612-158">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public static float Atanh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Atanh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Atanh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atanh (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Atanh(float x);" />
      <MemberSignature Language="F#" Value="static member Atanh : single -&gt; single" Usage="System.MathF.Atanh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-159">Liczba reprezentująca tangens hiperboliczny, gdzie <paramref name="x" /> musi być większa niż lub równy-1, ale jest mniejszy niż 1.</span><span class="sxs-lookup"><span data-stu-id="6f612-159">A number representing a hyperbolic tangent, where <paramref name="x" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="6f612-160">Zwraca kąt, którego tangens hiperboliczny jest równy podanej liczbie.</span><span class="sxs-lookup"><span data-stu-id="6f612-160">Returns the angle whose hyperbolic tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-161">Kąt, θ, wyrażony w radianach, tak że ∞; - &lt; θ &lt;-1 lub 1 &lt; θ &lt; ∞;.</span><span class="sxs-lookup"><span data-stu-id="6f612-161">An angle, θ, measured in radians, such that -∞ &lt; θ &lt;-1, or 1 &lt; θ &lt; ∞.</span></span>  
  
<span data-ttu-id="6f612-162">—lub—</span><span class="sxs-lookup"><span data-stu-id="6f612-162">-or-</span></span> 
 <span data-ttu-id="6f612-163"><see cref="F:System.Single.NaN" /> Jeśli <paramref name="x" /> &lt; -1 lub <paramref name="x" /> &gt; 1 lub <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-163"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> &lt; -1 or <paramref name="x" /> &gt; 1 or <paramref name="x" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-164">Należy pomnożyć wartość zwracaną przez 180 /<xref:System.MathF.PI?displayProperty=nameWithType> do przekonwertowania z radianów na stopnie.</span><span class="sxs-lookup"><span data-stu-id="6f612-164">Multiply the return value by 180/<xref:System.MathF.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitDecrement">
      <MemberSignature Language="C#" Value="public static float BitDecrement (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 BitDecrement(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.BitDecrement(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitDecrement (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float BitDecrement(float x);" />
      <MemberSignature Language="F#" Value="static member BitDecrement : single -&gt; single" Usage="System.MathF.BitDecrement x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-165">Wartość, aby zmniejszyć.</span><span class="sxs-lookup"><span data-stu-id="6f612-165">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="6f612-166">Zwraca najmniejszą wartość dalej, która porównuje mniejsza niż <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-166">Returns the next smallest value that compares less than <paramref name="x" />.</span></span></summary>
        <returns><span data-ttu-id="6f612-167">Dalej najmniejszą wartość, która porównuje mniej niż <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-167">The next smallest value that compares less than <paramref name="x" />.</span></span>
  
<span data-ttu-id="6f612-168">—lub—</span><span class="sxs-lookup"><span data-stu-id="6f612-168">-or-</span></span> 
 <span data-ttu-id="6f612-169"><see cref="F:System.Single.NegativeInfinity" /> Jeśli <paramref name="x" /> jest równa się <see cref="F:System.Single.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-169"><see cref="F:System.Single.NegativeInfinity" /> if <paramref name="x" /> is equals <see cref="F:System.Single.NegativeInfinity" />.</span></span>
  
<span data-ttu-id="6f612-170">—lub—</span><span class="sxs-lookup"><span data-stu-id="6f612-170">-or-</span></span> 
 <span data-ttu-id="6f612-171"><see cref="F:System.Single.NaN" /> Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-171"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="BitIncrement">
      <MemberSignature Language="C#" Value="public static float BitIncrement (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 BitIncrement(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.BitIncrement(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitIncrement (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float BitIncrement(float x);" />
      <MemberSignature Language="F#" Value="static member BitIncrement : single -&gt; single" Usage="System.MathF.BitIncrement x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-172">Wartość do zwiększenia.</span><span class="sxs-lookup"><span data-stu-id="6f612-172">The value to increment.</span></span></param>
        <summary><span data-ttu-id="6f612-173">Zwraca następny największa wartość, która jest większa niż <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-173">Returns the next largest value that is greater than <paramref name="x" />.</span></span></summary>
        <returns><span data-ttu-id="6f612-174">Dalej największa wartość, która jest większa niż <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-174">The next largest value that is greater than <paramref name="x" />.</span></span>
  
<span data-ttu-id="6f612-175">—lub—</span><span class="sxs-lookup"><span data-stu-id="6f612-175">-or-</span></span> 
 <span data-ttu-id="6f612-176"><see cref="F:System.Single.PositiveInfinity" /> Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-176"><see cref="F:System.Single.PositiveInfinity" /> if <paramref name="x" /> equals <see cref="F:System.Single.PositiveInfinity" />.</span></span>
  
<span data-ttu-id="6f612-177">—lub—</span><span class="sxs-lookup"><span data-stu-id="6f612-177">-or-</span></span> 
 <span data-ttu-id="6f612-178"><see cref="F:System.Single.NaN" /> Jeśli <paramref name="x" /> jest równa się <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-178"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> is equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cbrt">
      <MemberSignature Language="C#" Value="public static float Cbrt (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Cbrt(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Cbrt(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cbrt (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Cbrt(float x);" />
      <MemberSignature Language="F#" Value="static member Cbrt : single -&gt; single" Usage="System.MathF.Cbrt x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-179">Numer główny modułu, którego ma zostać znaleziona.</span><span class="sxs-lookup"><span data-stu-id="6f612-179">The number whose cube root is to be found.</span></span></param>
        <summary><span data-ttu-id="6f612-180">Zwraca katalog główny modułu określonej liczby.</span><span class="sxs-lookup"><span data-stu-id="6f612-180">Returns the cube root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-181">Głównym modułu <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-181">The cube root of <paramref name="x" />.</span></span>
  
<span data-ttu-id="6f612-182">—lub—</span><span class="sxs-lookup"><span data-stu-id="6f612-182">-or-</span></span> 
 <span data-ttu-id="6f612-183"><see cref="F:System.Single.NaN" /> Jeśli <paramref name="x" /> jest równa się <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-183"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> is equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks></remarks>
        <altmember cref="M:System.MathF.Pow(System.Single,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static float Ceiling (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Ceiling(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Ceiling(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Ceiling(float x);" />
      <MemberSignature Language="F#" Value="static member Ceiling : single -&gt; single" Usage="System.MathF.Ceiling x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-184">Liczba zmiennoprzecinkowa pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="6f612-184">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="6f612-185">Zwraca najmniejszą wartość całkowita, która jest większa niż lub równą podanej liczbie zmiennoprzecinkowej pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="6f612-185">Returns the smallest integral value that is greater than or equal to the specified single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="6f612-186">Najmniejsza wartość całkowita, która jest większa lub równa <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-186">The smallest integral value that is greater than or equal to <paramref name="x" />.</span></span> <span data-ttu-id="6f612-187">Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, lub <see cref="F:System.Single.PositiveInfinity" />, jest zwracana wartość.</span><span class="sxs-lookup"><span data-stu-id="6f612-187">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="6f612-188">Należy zauważyć, że ta metoda zwraca <see cref="T:System.Single" /> zamiast typu całkowitego.</span><span class="sxs-lookup"><span data-stu-id="6f612-188">Note that this method returns a <see cref="T:System.Single" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-189">Zachowanie tej metody jest zgodne ze standardem IEEE 754, sekcja 4.</span><span class="sxs-lookup"><span data-stu-id="6f612-189">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="6f612-190">Tego rodzaju zaokrąglenie jest czasami nazywane zaokrąglaniem kierunku plus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="6f612-190">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="6f612-191">Innymi słowy Jeśli `x` jest dodatnia, obecność dowolnej przyczyny części ułamkowych `x` ma zostać zaokrąglona do liczby całkowitej najwyższy.</span><span class="sxs-lookup"><span data-stu-id="6f612-191">In other words, if `x` is positive, the presence of any fractional component causes `x` to be rounded to the next highest integer.</span></span> <span data-ttu-id="6f612-192">Jeśli `x` jest ujemna, operację zaokrąglenia powoduje, że dowolny składnik ułamkowe `x` do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="6f612-192">If `x` is negative, the rounding operation causes any fractional component of `x` to be discarded.</span></span> <span data-ttu-id="6f612-193">Działanie tej metody różni się od <xref:System.MathF.Floor%28System.Single%29> metody, która obsługuje zaokrąglaniem kierunku minus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="6f612-193">The operation of this method differs from the <xref:System.MathF.Floor%28System.Single%29> method, which supports rounding toward negative infinity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.MathF.Round" />
        <altmember cref="M:System.MathF.Floor(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="CopySign">
      <MemberSignature Language="C#" Value="public static float CopySign (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 CopySign(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.CopySign(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopySign (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float CopySign(float x, float y);" />
      <MemberSignature Language="F#" Value="static member CopySign : single * single -&gt; single" Usage="System.MathF.CopySign (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Single" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-194">Liczba, której wartość bezwzględna jest używany w wyniku.</span><span class="sxs-lookup"><span data-stu-id="6f612-194">A number whose magnitude is used in the result.</span></span></param>
        <param name="y"><span data-ttu-id="6f612-195">Liczba, której znak jest używany w wyniku.</span><span class="sxs-lookup"><span data-stu-id="6f612-195">A number whose sign is the used in the result.</span></span></param>
        <summary><span data-ttu-id="6f612-196">Zwraca wartość o wielkości <paramref name="x" /> i znak <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-196">Returns a value with the magnitude of <paramref name="x" /> and the sign of <paramref name="y" />.</span></span></summary>
        <returns><span data-ttu-id="6f612-197">Wartość o wielkości <paramref name="x" /> i znak <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-197">A value with the magnitude of <paramref name="x" /> and the sign of <paramref name="y" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static float Cos (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Cos(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Cos(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Cos(float x);" />
      <MemberSignature Language="F#" Value="static member Cos : single -&gt; single" Usage="System.MathF.Cos x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-198">Kąt wyrażony w radianach.</span><span class="sxs-lookup"><span data-stu-id="6f612-198">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="6f612-199">Zwraca cosinus określonego kąta.</span><span class="sxs-lookup"><span data-stu-id="6f612-199">Returns the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="6f612-200">Cosinus <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-200">The cosine of <paramref name="x" />.</span></span> <span data-ttu-id="6f612-201">Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, lub <see cref="F:System.Single.PositiveInfinity" />, Metoda ta zwraca <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-201">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />, this method returns <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-202">Kąt `x`, musi być podany w radianach.</span><span class="sxs-lookup"><span data-stu-id="6f612-202">The angle, `x`, must be in radians.</span></span> <span data-ttu-id="6f612-203">Mnożenie przez <xref:System.MathF.PI?displayProperty=nameWithType>/180 Konwertuje stopnie na radiany.</span><span class="sxs-lookup"><span data-stu-id="6f612-203">Multiply by <xref:System.MathF.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static float Cosh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Cosh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Cosh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Cosh(float x);" />
      <MemberSignature Language="F#" Value="static member Cosh : single -&gt; single" Usage="System.MathF.Cosh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-204">Kąt wyrażony w radianach.</span><span class="sxs-lookup"><span data-stu-id="6f612-204">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="6f612-205">Zwraca cosinus hiperboliczny podanemu kątowi.</span><span class="sxs-lookup"><span data-stu-id="6f612-205">Returns the hyperbolic cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="6f612-206">Cosinus hiperboliczny liczby <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-206">The hyperbolic cosine of <paramref name="x" />.</span></span> <span data-ttu-id="6f612-207">Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NegativeInfinity" /> lub <see cref="F:System.Single.PositiveInfinity" />, <see cref="F:System.Single.PositiveInfinity" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="6f612-207">If <paramref name="x" /> is equal to <see cref="F:System.Single.NegativeInfinity" /> or <see cref="F:System.Single.PositiveInfinity" />, <see cref="F:System.Single.PositiveInfinity" /> is returned.</span></span> <span data-ttu-id="6f612-208">Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="6f612-208">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-209">Kąt `x`, musi być podany w radianach.</span><span class="sxs-lookup"><span data-stu-id="6f612-209">The angle, `x`, must be in radians.</span></span> <span data-ttu-id="6f612-210">Mnożenie przez <xref:System.MathF.PI?displayProperty=nameWithType>/180 Konwertuje stopnie na radiany.</span><span class="sxs-lookup"><span data-stu-id="6f612-210">Multiply by <xref:System.MathF.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>    
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const float E = 2.718282;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 E = (2.718282)" />
      <MemberSignature Language="DocId" Value="F:System.MathF.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Single  = 2.718282" />
      <MemberSignature Language="C++ CLI" Value="public: float E = 2.718282;" />
      <MemberSignature Language="F#" Value="val mutable E : single" Usage="System.MathF.E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>2.718282</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6f612-211">Reprezentuje logarytmu naturalnego, określony przez wartość stałej, <see langword="e" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-211">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="6f612-212">Wartość tej stałej jest 2.71828175.</span><span class="sxs-lookup"><span data-stu-id="6f612-212">The value of this constant is 2.71828175.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static float Exp (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Exp(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Exp(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Exp(float x);" />
      <MemberSignature Language="F#" Value="static member Exp : single -&gt; single" Usage="System.MathF.Exp x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-213">Liczba określająca potęgi.</span><span class="sxs-lookup"><span data-stu-id="6f612-213">A number specifying a power.</span></span></param>
        <summary><span data-ttu-id="6f612-214">Zwraca <see langword="e" /> podniesione do określonej potęgi.</span><span class="sxs-lookup"><span data-stu-id="6f612-214">Returns <see langword="e" /> raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="6f612-215">Liczba <see langword="e" /> podniesioną do potęgi <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-215">The number <see langword="e" /> raised to the power <paramref name="x" />.</span></span> <span data-ttu-id="6f612-216">Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" /> lub <see cref="F:System.Single.PositiveInfinity" />, jest zwracana wartość.</span><span class="sxs-lookup"><span data-stu-id="6f612-216">If <paramref name="x" /> equals <see cref="F:System.Single.NaN" /> or <see cref="F:System.Single.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="6f612-217">Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NegativeInfinity" />, zwracany jest 0.</span><span class="sxs-lookup"><span data-stu-id="6f612-217">If <paramref name="x" /> equals <see cref="F:System.Single.NegativeInfinity" />, 0 is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-218">`e` jest stałe matematyczne, którego wartością jest około 2.71828.</span><span class="sxs-lookup"><span data-stu-id="6f612-218">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="6f612-219">Użyj <xref:System.MathF.Pow%2A> metodę, aby obliczyć potęgi innych podstaw.</span><span class="sxs-lookup"><span data-stu-id="6f612-219">Use the <xref:System.MathF.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="6f612-220"><xref:System.MathF.Exp%2A> jest przeciwieństwem <xref:System.MathF.Log%2A>.</span><span class="sxs-lookup"><span data-stu-id="6f612-220"><xref:System.MathF.Exp%2A> is the inverse of <xref:System.MathF.Log%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.MathF.E" />
        <altmember cref="M:System.MathF.Pow(System.Single,System.Single)" />
        <altmember cref="M:System.MathF.Log(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static float Floor (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Floor(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Floor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Floor(float x);" />
      <MemberSignature Language="F#" Value="static member Floor : single -&gt; single" Usage="System.MathF.Floor x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-221">Liczba zmiennoprzecinkowa pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="6f612-221">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="6f612-222">Zwraca największą wartość całkowitą mniejszą lub równą podanej liczbie zmiennoprzecinkowej pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="6f612-222">Returns the largest integral value less than or equal to the specified single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="6f612-223">Całkowite największą wartość mniejsze niż lub równe <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-223">The largest integral value less than or equal to <paramref name="x" />.</span></span> <span data-ttu-id="6f612-224">Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, lub <see cref="F:System.Single.PositiveInfinity" />, jest zwracana wartość.</span><span class="sxs-lookup"><span data-stu-id="6f612-224">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />, that value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-225">Zachowanie tej metody jest zgodne ze standardem IEEE 754, sekcja 4.</span><span class="sxs-lookup"><span data-stu-id="6f612-225">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="6f612-226">Tego rodzaju zaokrąglenie jest czasami nazywane zaokrąglaniem kierunku minus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="6f612-226">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="6f612-227">Innymi słowy Jeśli `x` jest dodatnia, dowolny składnik ułamkowe zostały obcięte.</span><span class="sxs-lookup"><span data-stu-id="6f612-227">In other words, if `x` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="6f612-228">Jeśli `x` jest ujemna, obecności części ułamkowych powoduje, że ma zostać zaokrąglona do mniejszej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="6f612-228">If `x` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="6f612-229">Działanie tej metody różni się od <xref:System.MathF.Ceiling%2A> metody, która obsługuje zaokrąglaniem kierunku Plus nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="6f612-229">The operation of this method differs from the <xref:System.MathF.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.MathF.Round" />
        <altmember cref="M:System.MathF.Ceiling(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplyAdd">
      <MemberSignature Language="C#" Value="public static float FusedMultiplyAdd (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 FusedMultiplyAdd(float32 x, float32 y, float32 z) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.FusedMultiplyAdd(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplyAdd (x As Single, y As Single, z As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float FusedMultiplyAdd(float x, float y, float z);" />
      <MemberSignature Language="F#" Value="static member FusedMultiplyAdd : single * single * single -&gt; single" Usage="System.MathF.FusedMultiplyAdd (x, y, z)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Single" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="z" Type="System.Single" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-230">Liczba, należy pomnożyć z <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-230">The number to be multiplied with <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="6f612-231">Liczba, należy pomnożyć z <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-231">The number to be multiplied with <paramref name="x" />.</span></span></param>
        <param name="z"><span data-ttu-id="6f612-232">Numer, który ma zostać dodany do wyniku <paramref name="x" /> pomnożona przez <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-232">The number to be added to the result of <paramref name="x" /> multiplied by <paramref name="y" />.</span></span></param>
        <summary><span data-ttu-id="6f612-233">Zwraca (x \* y) + z, zaokrąglony jako jedna operacja trójargumentowy.</span><span class="sxs-lookup"><span data-stu-id="6f612-233">Returns (x \* y) + z, rounded as one ternary operation.</span></span></summary>
        <returns><span data-ttu-id="6f612-234">(x \* y) + z, zaokrąglony jako jedna operacja trójargumentowy.</span><span class="sxs-lookup"><span data-stu-id="6f612-234">(x \* y) + z, rounded as one ternary operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-235">To oblicza `(x * y)` tak, jakby dokładnością do nieskończoności, dodaje `z` do wyniku tak, jakby dokładnością do nieskończoności, a na koniec powoduje zaokrąglenie do najbliższej wartość.</span><span class="sxs-lookup"><span data-stu-id="6f612-235">This computes `(x * y)` as if to infinite precision, adds `z` to that result as if to infinite precision, and finally rounds to the nearest representable value.</span></span>
  
 <span data-ttu-id="6f612-236">To różni się od sekwencji zespolone, który będzie obliczenia `(x * y)` tak, jakby na nieskończonej preicision zaokrąglony wynik na najbliższą wartość, należy dodać "z", aby zaokrąglony wynik tak, jakby dokładnością do nieskończoności, a na koniec zaokrąglona do najbliższej stałego wartość.</span><span class="sxs-lookup"><span data-stu-id="6f612-236">This differs from the non-fused sequence which would compute `(x * y)` as if to infinite preicision, round the result to the nearest representable value, add 'z' to the rounded result as if to infinite precision, and finally round to the nearest representable value.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static float IEEERemainder (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 IEEERemainder(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.IEEERemainder(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float IEEERemainder(float x, float y);" />
      <MemberSignature Language="F#" Value="static member IEEERemainder : single * single -&gt; single" Usage="System.MathF.IEEERemainder (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-237">Dzielna.</span><span class="sxs-lookup"><span data-stu-id="6f612-237">A dividend.</span></span></param>
        <param name="y"><span data-ttu-id="6f612-238">Dzielnik.</span><span class="sxs-lookup"><span data-stu-id="6f612-238">A divisor.</span></span></param>
        <summary><span data-ttu-id="6f612-239">Zwraca resztę z dzielenia liczby określonej przez inny określony numer.</span><span class="sxs-lookup"><span data-stu-id="6f612-239">Returns the remainder resulting from the division of a specified number by another specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-240">Liczby równej <paramref name="x" /> -(<paramref name="y" /> funkcji pytania i odpowiedzi), w którym funkcji pytania i odpowiedzi jest równy ilorazowi <paramref name="x" />  /  <paramref name="y" /> zaokrąglona do najbliższej liczby całkowitej (Jeśli <paramref name="x" />  /  <paramref name="y" /> przypada w połowie między dwoma liczbami całkowitymi, parzystej liczby całkowitej jest zwracana).</span><span class="sxs-lookup"><span data-stu-id="6f612-240">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span></span>  
  
<span data-ttu-id="6f612-241">Jeśli <paramref name="x" /> -(<paramref name="y" /> funkcji pytania i odpowiedzi) wynosi zero, wartość + 0 jest zwracany, jeśli <paramref name="x" /> jest dodatni lub - 0, jeśli <paramref name="x" /> jest ujemna.</span><span class="sxs-lookup"><span data-stu-id="6f612-241">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span></span>  
  
<span data-ttu-id="6f612-242">Jeśli <paramref name="y" /> = 0, <see cref="F:System.Single.NaN" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="6f612-242">If <paramref name="y" /> = 0, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-243">Ta operacja jest zgodny z zdefiniowane w sekcji 5.1 754-1985 standard ANSI/IEEE; Operacja Reminder Standard IEEE binarne arytmetyki zmiennoprzecinkowej; Instytut elektrycznych i Electronics Engineers, Inc.; 1985 roku.</span><span class="sxs-lookup"><span data-stu-id="6f612-243">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="6f612-244"><xref:System.MathF.IEEERemainder%2A> Metoda nie jest taka sama jak [operator reszty](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="6f612-244">The <xref:System.MathF.IEEERemainder%2A> method is not the same as the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span> <span data-ttu-id="6f612-245">Mimo że oba zwracają resztę po dzielenia, formuł, które używają różnią się.</span><span class="sxs-lookup"><span data-stu-id="6f612-245">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="6f612-246">Formuła <xref:System.MathF.IEEERemainder%2A> metodą jest:</span><span class="sxs-lookup"><span data-stu-id="6f612-246">The formula for the <xref:System.MathF.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * MathF.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="6f612-247">Z kolei dla operatora reszta jest:</span><span class="sxs-lookup"><span data-stu-id="6f612-247">In contrast, the formula for the remainder operator is:</span></span>  
  
```  
Remainder = (MathF.Abs(dividend) - (MathF.Abs(divisor) *   
            (MathF.Floor(MathF.Abs(dividend) / MathF.Abs(divisor))))) *   
            MathF.Sign(dividend)  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ILogB">
      <MemberSignature Language="C#" Value="public static int ILogB (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ILogB(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.ILogB(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ILogB (x As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ILogB(float x);" />
      <MemberSignature Language="F#" Value="static member ILogB : single -&gt; int" Usage="System.MathF.ILogB x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-248">Liczba, której logarytm ma zostać znaleziona.</span><span class="sxs-lookup"><span data-stu-id="6f612-248">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="6f612-249">Zwraca logarytm liczby całkowitej 2 określonej liczby.</span><span class="sxs-lookup"><span data-stu-id="6f612-249">Returns the base 2 integer logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-250">Jedna z wartości w tabeli poniżej.</span><span class="sxs-lookup"><span data-stu-id="6f612-250">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="6f612-251"><paramref name="x" /> Parametr</span><span class="sxs-lookup"><span data-stu-id="6f612-251"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="6f612-252">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="6f612-252">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="6f612-253">Domyślny</span><span class="sxs-lookup"><span data-stu-id="6f612-253">Default</span></span> 
 </term><description> <span data-ttu-id="6f612-254">Podstawowy dziennik 2 całkowitą <paramref name="x" />; czyli log2 (int) (<paramref name="x" />).</span><span class="sxs-lookup"><span data-stu-id="6f612-254">The base 2 integer log of <paramref name="x" />; that is, (int)log2(<paramref name="x" />).</span></span>  
  
 </description></item><item><term> <span data-ttu-id="6f612-255">Zero</span><span class="sxs-lookup"><span data-stu-id="6f612-255">Zero</span></span> 
 </term><description> <see cref="F:System.Int32.MinValue" />
  
 </description></item><item><term> <span data-ttu-id="6f612-256">Równa <see cref="F:System.Single.NaN" /> lub <see cref="F:System.Single.PositiveInfinity" /> lub <see cref="F:System.Single.NegativeInfinity" />
  
 </span><span class="sxs-lookup"><span data-stu-id="6f612-256">Equal to <see cref="F:System.Single.NaN" /> or <see cref="F:System.Single.PositiveInfinity" /> or <see cref="F:System.Single.NegativeInfinity" />
  
 </span></span></term><description> <see cref="F:System.Int32.MaxValue" />
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-257">Parametr `x` jest określony jako podstawowy numer 10.</span><span class="sxs-lookup"><span data-stu-id="6f612-257">Parameter `x` is specified as a base 10 number.</span></span>   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static float Log (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Log(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Log(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Log(float x);" />
      <MemberSignature Language="F#" Value="static member Log : single -&gt; single" Usage="System.MathF.Log x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-258">Liczba, której logarytm ma zostać znaleziona.</span><span class="sxs-lookup"><span data-stu-id="6f612-258">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="6f612-259">Zwraca fizyczna (podstawowy <see langword="e" />) logarytmu określonej liczby.</span><span class="sxs-lookup"><span data-stu-id="6f612-259">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-260">Jedna z wartości w tabeli poniżej.</span><span class="sxs-lookup"><span data-stu-id="6f612-260">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="6f612-261"><paramref name="x" /> Parametr</span><span class="sxs-lookup"><span data-stu-id="6f612-261"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="6f612-262">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="6f612-262">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="6f612-263">Dodatnie</span><span class="sxs-lookup"><span data-stu-id="6f612-263">Positive</span></span> 
 </term><description> <span data-ttu-id="6f612-264">Logarytm naturalny <paramref name="x" />; oznacza to, ln <paramref name="x" />, lub dziennika e <paramref name="x" /></span><span class="sxs-lookup"><span data-stu-id="6f612-264">The natural logarithm of <paramref name="x" />; that is, ln <paramref name="x" />, or log e <paramref name="x" /></span></span></description></item><item><term> <span data-ttu-id="6f612-265">Zero</span><span class="sxs-lookup"><span data-stu-id="6f612-265">Zero</span></span> 
 </term><description><see cref="F:System.Single.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="6f612-266">Ujemne</span><span class="sxs-lookup"><span data-stu-id="6f612-266">Negative</span></span> 
 </term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="6f612-267">Równa się <see cref="F:System.Single.NaN" /></span><span class="sxs-lookup"><span data-stu-id="6f612-267">Equal to <see cref="F:System.Single.NaN" /></span></span></term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="6f612-268">Równa się <see cref="F:System.Single.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="6f612-268">Equal to <see cref="F:System.Single.PositiveInfinity" /></span></span></term><description><see cref="F:System.Single.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-269">Parametr `x` jest określony jako podstawowy numer 10.</span><span class="sxs-lookup"><span data-stu-id="6f612-269">Parameter `x` is specified as a base 10 number.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.MathF.E" />
        <altmember cref="M:System.MathF.Exp(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static float Log (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Log(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Log(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Log(float x, float y);" />
      <MemberSignature Language="F#" Value="static member Log : single * single -&gt; single" Usage="System.MathF.Log (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-270">Liczba, której logarytm ma zostać znaleziona.</span><span class="sxs-lookup"><span data-stu-id="6f612-270">The number whose logarithm is to be found.</span></span></param>
        <param name="newBase"><span data-ttu-id="6f612-271">Podstawa logarytmu.</span><span class="sxs-lookup"><span data-stu-id="6f612-271">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="6f612-272">Zwraca wartość logarytmu określonej liczby, w określonej bazie.</span><span class="sxs-lookup"><span data-stu-id="6f612-272">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="6f612-273">Jedna z wartości w tabeli poniżej.</span><span class="sxs-lookup"><span data-stu-id="6f612-273">One of the values in the following table.</span></span> <span data-ttu-id="6f612-274">(+ Infinity oznacza <see cref="F:System.Single.PositiveInfinity" />, - nieskończoność oznacza <see cref="F:System.Single.NegativeInfinity" />, i oznacza NaN <see cref="F:System.Single.NaN" />.)</span><span class="sxs-lookup"><span data-stu-id="6f612-274">(+Infinity denotes <see cref="F:System.Single.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Single.NegativeInfinity" />, and NaN denotes <see cref="F:System.Single.NaN" />.)</span></span> 
 <list type="table"><listheader><term><paramref name="x" /></term><description><paramref name="newBase" /></description><description> <span data-ttu-id="6f612-275">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="6f612-275">Return value</span></span> 
 </description></listheader><item><term><span data-ttu-id="6f612-276"><paramref name="x" />&gt; 0</span><span class="sxs-lookup"><span data-stu-id="6f612-276"><paramref name="x" />&gt; 0</span></span> 
 </term><description> <span data-ttu-id="6f612-277">(0 &lt; <paramref name="newBase" /> &lt; 1) - lub -(<paramref name="newBase" /> &gt; 1)</span><span class="sxs-lookup"><span data-stu-id="6f612-277">(0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span></span> 
 </description><description> <span data-ttu-id="6f612-278">lognewBase(a)</span><span class="sxs-lookup"><span data-stu-id="6f612-278">lognewBase(a)</span></span> 
 </description></item><item><term><span data-ttu-id="6f612-279"><paramref name="x" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="6f612-279"><paramref name="x" />&lt; 0</span></span> 
 </term><description> <span data-ttu-id="6f612-280">(dowolna wartość)</span><span class="sxs-lookup"><span data-stu-id="6f612-280">(any value)</span></span> 
 </description><description> <span data-ttu-id="6f612-281">NaN</span><span class="sxs-lookup"><span data-stu-id="6f612-281">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="6f612-282">(dowolna wartość)</span><span class="sxs-lookup"><span data-stu-id="6f612-282">(any value)</span></span> 
 </term><description><span data-ttu-id="6f612-283"><paramref name="newBase" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="6f612-283"><paramref name="newBase" />&lt; 0</span></span> 
 </description><description> <span data-ttu-id="6f612-284">NaN</span><span class="sxs-lookup"><span data-stu-id="6f612-284">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="6f612-285"><paramref name="x" /> != 1</span><span class="sxs-lookup"><span data-stu-id="6f612-285"><paramref name="x" /> != 1</span></span> 
 </term><description><span data-ttu-id="6f612-286"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="6f612-286"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="6f612-287">NaN</span><span class="sxs-lookup"><span data-stu-id="6f612-287">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="6f612-288"><paramref name="x" /> != 1</span><span class="sxs-lookup"><span data-stu-id="6f612-288"><paramref name="x" /> != 1</span></span> 
 </term><description><span data-ttu-id="6f612-289"><paramref name="newBase" /> = + Infinity</span><span class="sxs-lookup"><span data-stu-id="6f612-289"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="6f612-290">NaN</span><span class="sxs-lookup"><span data-stu-id="6f612-290">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="6f612-291"><paramref name="x" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="6f612-291"><paramref name="x" /> = NaN</span></span> 
 </term><description> <span data-ttu-id="6f612-292">(dowolna wartość)</span><span class="sxs-lookup"><span data-stu-id="6f612-292">(any value)</span></span> 
 </description><description> <span data-ttu-id="6f612-293">NaN</span><span class="sxs-lookup"><span data-stu-id="6f612-293">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="6f612-294">(dowolna wartość)</span><span class="sxs-lookup"><span data-stu-id="6f612-294">(any value)</span></span> 
 </term><description><span data-ttu-id="6f612-295"><paramref name="newBase" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="6f612-295"><paramref name="newBase" /> = NaN</span></span> 
 </description><description> <span data-ttu-id="6f612-296">NaN</span><span class="sxs-lookup"><span data-stu-id="6f612-296">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="6f612-297">(dowolna wartość)</span><span class="sxs-lookup"><span data-stu-id="6f612-297">(any value)</span></span> 
 </term><description><span data-ttu-id="6f612-298"><paramref name="newBase" /> = 1</span><span class="sxs-lookup"><span data-stu-id="6f612-298"><paramref name="newBase" /> = 1</span></span> 
 </description><description> <span data-ttu-id="6f612-299">NaN</span><span class="sxs-lookup"><span data-stu-id="6f612-299">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="6f612-300"><paramref name="x" /> = 0</span><span class="sxs-lookup"><span data-stu-id="6f612-300"><paramref name="x" /> = 0</span></span> 
 </term><description> <span data-ttu-id="6f612-301">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="6f612-301">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="6f612-302">+ Infinity</span><span class="sxs-lookup"><span data-stu-id="6f612-302">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="6f612-303"><paramref name="x" /> = 0</span><span class="sxs-lookup"><span data-stu-id="6f612-303"><paramref name="x" /> = 0</span></span> 
 </term><description><span data-ttu-id="6f612-304"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="6f612-304"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="6f612-305">-Nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="6f612-305">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="6f612-306"><paramref name="x" /> = + Infinity</span><span class="sxs-lookup"><span data-stu-id="6f612-306"><paramref name="x" /> =  +Infinity</span></span> 
 </term><description> <span data-ttu-id="6f612-307">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="6f612-307">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="6f612-308">-Nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="6f612-308">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="6f612-309"><paramref name="x" /> = + Infinity</span><span class="sxs-lookup"><span data-stu-id="6f612-309"><paramref name="x" /> =  +Infinity</span></span> 
 </term><description><span data-ttu-id="6f612-310"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="6f612-310"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="6f612-311">+ Infinity</span><span class="sxs-lookup"><span data-stu-id="6f612-311">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="6f612-312"><paramref name="x" /> = 1</span><span class="sxs-lookup"><span data-stu-id="6f612-312"><paramref name="x" /> = 1</span></span> 
 </term><description><span data-ttu-id="6f612-313"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="6f612-313"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="6f612-314">0</span><span class="sxs-lookup"><span data-stu-id="6f612-314">0</span></span> 
 </description></item><item><term><span data-ttu-id="6f612-315"><paramref name="x" /> = 1</span><span class="sxs-lookup"><span data-stu-id="6f612-315"><paramref name="x" /> = 1</span></span> 
 </term><description><span data-ttu-id="6f612-316"><paramref name="newBase" /> = + Infinity</span><span class="sxs-lookup"><span data-stu-id="6f612-316"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="6f612-317">0</span><span class="sxs-lookup"><span data-stu-id="6f612-317">0</span></span> 
 </description></item></list></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static float Log10 (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Log10(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Log10(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Log10(float x);" />
      <MemberSignature Language="F#" Value="static member Log10 : single -&gt; single" Usage="System.MathF.Log10 x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-318">Liczba, której logarytm ma zostać znaleziona.</span><span class="sxs-lookup"><span data-stu-id="6f612-318">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="6f612-319">Zwraca logarytm 10 określoną liczbę.</span><span class="sxs-lookup"><span data-stu-id="6f612-319">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-320">Jedna z wartości w tabeli poniżej.</span><span class="sxs-lookup"><span data-stu-id="6f612-320">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="6f612-321"><paramref name="x" /> Parametr</span><span class="sxs-lookup"><span data-stu-id="6f612-321"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="6f612-322">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="6f612-322">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="6f612-323">Dodatnie</span><span class="sxs-lookup"><span data-stu-id="6f612-323">Positive</span></span> 
 </term><description> <span data-ttu-id="6f612-324">Dziennik podstawowy 10 <paramref name="x" />; to, zaloguj się 10<paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-324">The base 10 log of <paramref name="x" />; that is, log 10<paramref name="x" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="6f612-325">Zero</span><span class="sxs-lookup"><span data-stu-id="6f612-325">Zero</span></span> 
 </term><description><see cref="F:System.Single.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="6f612-326">Ujemne</span><span class="sxs-lookup"><span data-stu-id="6f612-326">Negative</span></span> 
 </term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="6f612-327">Równa się <see cref="F:System.Single.NaN" /></span><span class="sxs-lookup"><span data-stu-id="6f612-327">Equal to <see cref="F:System.Single.NaN" /></span></span></term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="6f612-328">Równa się <see cref="F:System.Single.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="6f612-328">Equal to <see cref="F:System.Single.PositiveInfinity" /></span></span></term><description><see cref="F:System.Single.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-329">Parametr `x` jest określony jako podstawowy numer 10.</span><span class="sxs-lookup"><span data-stu-id="6f612-329">Parameter `x` is specified as a base 10 number.</span></span>   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log2">
      <MemberSignature Language="C#" Value="public static float Log2 (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Log2(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Log2(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log2 (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Log2(float x);" />
      <MemberSignature Language="F#" Value="static member Log2 : single -&gt; single" Usage="System.MathF.Log2 x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-330">Liczba, której logarytm ma zostać znaleziona.</span><span class="sxs-lookup"><span data-stu-id="6f612-330">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="6f612-331">Zwraca logarytm 2 określoną liczbę.</span><span class="sxs-lookup"><span data-stu-id="6f612-331">Returns the base 2 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-332">Jedna z wartości w tabeli poniżej.</span><span class="sxs-lookup"><span data-stu-id="6f612-332">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="6f612-333"><paramref name="x" /> Parametr</span><span class="sxs-lookup"><span data-stu-id="6f612-333"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="6f612-334">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="6f612-334">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="6f612-335">Dodatnie</span><span class="sxs-lookup"><span data-stu-id="6f612-335">Positive</span></span> 
 </term><description> <span data-ttu-id="6f612-336">Dziennik podstawowego 2 <paramref name="x" />; to, zaloguj się 2<paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-336">The base 2 log of <paramref name="x" />; that is, log 2<paramref name="x" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="6f612-337">Zero</span><span class="sxs-lookup"><span data-stu-id="6f612-337">Zero</span></span> 
 </term><description><see cref="F:System.Single.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="6f612-338">Ujemne</span><span class="sxs-lookup"><span data-stu-id="6f612-338">Negative</span></span> 
 </term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="6f612-339">Równa się <see cref="F:System.Single.NaN" /></span><span class="sxs-lookup"><span data-stu-id="6f612-339">Equal to <see cref="F:System.Single.NaN" /></span></span></term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="6f612-340">Równa się <see cref="F:System.Single.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="6f612-340">Equal to <see cref="F:System.Single.PositiveInfinity" /></span></span></term><description><see cref="F:System.Single.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-341">Parametr `x` jest określony jako podstawowy numer 10.</span><span class="sxs-lookup"><span data-stu-id="6f612-341">Parameter `x` is specified as a base 10 number.</span></span>   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float x, float y);" />
      <MemberSignature Language="F#" Value="static member Max : single * single -&gt; single" Usage="System.MathF.Max (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-342">Pierwsza z dwóch liczb zmiennoprzecinkowych pojedynczej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="6f612-342">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="y"><span data-ttu-id="6f612-343">Drugi dwóch liczb zmiennoprzecinkowych pojedynczej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="6f612-343">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="6f612-344">Zwraca większy z dwóch liczb zmiennoprzecinkowych pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="6f612-344">Returns the larger of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="6f612-345">Parametr <paramref name="x" /> lub <paramref name="y" />, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="6f612-345">Parameter <paramref name="x" /> or <paramref name="y" />, whichever is larger.</span></span> <span data-ttu-id="6f612-346">Jeśli <paramref name="x" />, lub <paramref name="y" />, i / lub <paramref name="x" /> i <paramref name="y" /> są równe <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="6f612-346">If <paramref name="x" />, or <paramref name="y" />, or both <paramref name="x" /> and <paramref name="y" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxMagnitude">
      <MemberSignature Language="C#" Value="public static float MaxMagnitude (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 MaxMagnitude(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.MaxMagnitude(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxMagnitude (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float MaxMagnitude(float x, float y);" />
      <MemberSignature Language="F#" Value="static member MaxMagnitude : single * single -&gt; single" Usage="System.MathF.MaxMagnitude (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Single" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-347">Pierwsza z dwóch liczb zmiennoprzecinkowych pojedynczej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="6f612-347">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="y"><span data-ttu-id="6f612-348">Drugi dwóch liczb zmiennoprzecinkowych pojedynczej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="6f612-348">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="6f612-349">Zwraca wartość większych dwóch liczb zmiennoprzecinkowych pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="6f612-349">Returns the larger magnitude of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="6f612-350">Parametr <paramref name="x" /> lub <paramref name="y" />, zależnie od ma większe znaczenie.</span><span class="sxs-lookup"><span data-stu-id="6f612-350">Parameter <paramref name="x" /> or <paramref name="y" />, whichever has the larger magnitude.</span></span> <span data-ttu-id="6f612-351">Jeśli <paramref name="x" />, lub <paramref name="y" />, i / lub <paramref name="x" /> i <paramref name="y" /> są równe <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="6f612-351">If <paramref name="x" />, or <paramref name="y" />, or both <paramref name="x" /> and <paramref name="y" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float x, float y);" />
      <MemberSignature Language="F#" Value="static member Min : single * single -&gt; single" Usage="System.MathF.Min (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-352">Pierwsza z dwóch liczb zmiennoprzecinkowych pojedynczej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="6f612-352">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="y"><span data-ttu-id="6f612-353">Drugi dwóch liczb zmiennoprzecinkowych pojedynczej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="6f612-353">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="6f612-354">Zwraca wartość mniejszą z dwóch liczb zmiennoprzecinkowych pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="6f612-354">Returns the smaller of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="6f612-355">Parametr <paramref name="x" /> lub <paramref name="y" />, która kwota jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="6f612-355">Parameter <paramref name="x" /> or <paramref name="y" />, whichever is smaller.</span></span> <span data-ttu-id="6f612-356">Jeśli <paramref name="x" />, <paramref name="y" />, i / lub <paramref name="x" /> i <paramref name="y" /> są równe <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="6f612-356">If <paramref name="x" />, <paramref name="y" />, or both <paramref name="x" /> and <paramref name="y" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="MinMagnitude">
      <MemberSignature Language="C#" Value="public static float MinMagnitude (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 MinMagnitude(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.MinMagnitude(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinMagnitude (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float MinMagnitude(float x, float y);" />
      <MemberSignature Language="F#" Value="static member MinMagnitude : single * single -&gt; single" Usage="System.MathF.MinMagnitude (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Single" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-357">Pierwsza z dwóch liczb zmiennoprzecinkowych pojedynczej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="6f612-357">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="y"><span data-ttu-id="6f612-358">Drugi dwóch liczb zmiennoprzecinkowych pojedynczej precyzji do porównania.</span><span class="sxs-lookup"><span data-stu-id="6f612-358">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="6f612-359">Zwraca wartość mniejszą z dwóch liczb zmiennoprzecinkowych pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="6f612-359">Returns the smaller magnitude of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="6f612-360">Parametr <paramref name="x" /> lub <paramref name="y" />, zależności jest mniejsze znaczenie.</span><span class="sxs-lookup"><span data-stu-id="6f612-360">Parameter <paramref name="x" /> or <paramref name="y" />, whichever has the smaller magnitude.</span></span> <span data-ttu-id="6f612-361">Jeśli <paramref name="x" />, lub <paramref name="y" />, i / lub <paramref name="x" /> i <paramref name="y" /> są równe <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="6f612-361">If <paramref name="x" />, or <paramref name="y" />, or both <paramref name="x" /> and <paramref name="y" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const float PI = 3.141593;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 PI = (3.141593)" />
      <MemberSignature Language="DocId" Value="F:System.MathF.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Single  = 3.141593" />
      <MemberSignature Language="C++ CLI" Value="public: float PI = 3.141593;" />
      <MemberSignature Language="F#" Value="val mutable PI : single" Usage="System.MathF.PI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>3.141593</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6f612-362">Reprezentuje jego średnicy określony przez stałą π stosunek obwód koła.</span><span class="sxs-lookup"><span data-stu-id="6f612-362">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="6f612-363">Wartość tego pola jest 3.14159274.</span><span class="sxs-lookup"><span data-stu-id="6f612-363">The value of this field is 3.14159274.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static float Pow (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Pow(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Pow(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Pow(float x, float y);" />
      <MemberSignature Language="F#" Value="static member Pow : single * single -&gt; single" Usage="System.MathF.Pow (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-364">Liczba zmiennoprzecinkowa pojedynczej precyzji na podniesione do potęgi.</span><span class="sxs-lookup"><span data-stu-id="6f612-364">A single-precision floating-point number to be raised to a power.</span></span></param>
        <param name="y"><span data-ttu-id="6f612-365">Liczba zmiennoprzecinkowa pojedynczej precyzji, która określa potęgi.</span><span class="sxs-lookup"><span data-stu-id="6f612-365">A single-precision floating-point number that specifies a power.</span></span></param>
        <summary><span data-ttu-id="6f612-366">Zwraca określoną liczbę podniesioną do wskazanej potęgi.</span><span class="sxs-lookup"><span data-stu-id="6f612-366">Returns a specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="6f612-367">Liczba <paramref name="x" /> podniesioną do potęgi <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-367">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-368">Poniższa tabela wskazuje wartość zwracana, gdy różne wartości lub wartości, które są określone dla `x` i `y` parametrów.</span><span class="sxs-lookup"><span data-stu-id="6f612-368">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="6f612-369">Aby uzyskać więcej informacji, zobacz <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, i <xref:System.Single.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6f612-369">For more information, see <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Single.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="6f612-370">Parametry</span><span class="sxs-lookup"><span data-stu-id="6f612-370">Parameters</span></span>|<span data-ttu-id="6f612-371">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="6f612-371">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="6f612-372">`x` lub `y`  =  `NaN`.</span><span class="sxs-lookup"><span data-stu-id="6f612-372">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="6f612-373">`x` = Wszystkie wartości z wyjątkiem `NaN`; `y` = 0.</span><span class="sxs-lookup"><span data-stu-id="6f612-373">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="6f612-374">1</span><span class="sxs-lookup"><span data-stu-id="6f612-374">1</span></span>|  
|<span data-ttu-id="6f612-375">`x` = `NegativeInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="6f612-375">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="6f612-376">0</span><span class="sxs-lookup"><span data-stu-id="6f612-376">0</span></span>|  
|<span data-ttu-id="6f612-377">`x` = `NegativeInfinity`; `y` jest dodatnia nieparzystej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="6f612-377">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="6f612-378">`x` = `NegativeInfinity`; `y` jest dodatni, ale nie nieparzystej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="6f612-378">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="6f612-379">`x` < 0, ale nie `NegativeInfinity`; `y` nie jest liczbą całkowitą `NegativeInfinity`, lub `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="6f612-379">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="6f612-380">`x` = -1; `y`  =  `NegativeInfinity` lub `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="6f612-380">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="6f612-381">-1 < `x` < 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="6f612-381">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="6f612-382">-1 < `x` < 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="6f612-382">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="6f612-383">0</span><span class="sxs-lookup"><span data-stu-id="6f612-383">0</span></span>|  
|<span data-ttu-id="6f612-384">`x` < wartość -1 lub `x` > 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="6f612-384">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="6f612-385">0</span><span class="sxs-lookup"><span data-stu-id="6f612-385">0</span></span>|  
|<span data-ttu-id="6f612-386">`x` < wartość -1 lub `x` > 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="6f612-386">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="6f612-387">`x` = 0; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="6f612-387">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="6f612-388">`x` = 0; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="6f612-388">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="6f612-389">0</span><span class="sxs-lookup"><span data-stu-id="6f612-389">0</span></span>|  
|<span data-ttu-id="6f612-390">`x` = 1; `y` oznacza dowolną wartość z wyjątkiem `NaN`.</span><span class="sxs-lookup"><span data-stu-id="6f612-390">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="6f612-391">1</span><span class="sxs-lookup"><span data-stu-id="6f612-391">1</span></span>|  
|<span data-ttu-id="6f612-392">`x` = `PositiveInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="6f612-392">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="6f612-393">0</span><span class="sxs-lookup"><span data-stu-id="6f612-393">0</span></span>|  
|<span data-ttu-id="6f612-394">`x` = `PositiveInfinity`; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="6f612-394">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.MathF.Sqrt(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static float Round (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Round(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Round(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Round(float x);" />
      <MemberSignature Language="F#" Value="static member Round : single -&gt; single" Usage="System.MathF.Round x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-395">Liczba zmiennoprzecinkowa pojedynczej precyzji ma zostać zaokrąglona.</span><span class="sxs-lookup"><span data-stu-id="6f612-395">A single-precision floating-point number to be rounded.</span></span></param>
        <summary><span data-ttu-id="6f612-396">Zaokrągla wartość zmiennoprzecinkową o pojedynczej dokładności do najbliższej wartości całkowitej, a punkt środkowy Zaokrągla do najbliższej parzystej liczby.</span><span class="sxs-lookup"><span data-stu-id="6f612-396">Rounds a single-precision floating-point value to the nearest integral value, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="6f612-397">Liczbę całkowitą najbliższej <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-397">The integer nearest <paramref name="x" />.</span></span> <span data-ttu-id="6f612-398">Jeśli część ułamkową <paramref name="x" /> jest w połowie między dwóch liczb całkowitych, z których jeden jest parzysta, a nieparzysta, zwracana jest liczba parzysta.</span><span class="sxs-lookup"><span data-stu-id="6f612-398">If the fractional component of <paramref name="x" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span></span> <span data-ttu-id="6f612-399">Należy zauważyć, że ta metoda zwraca <see cref="T:System.Single" /> zamiast typu całkowitego.</span><span class="sxs-lookup"><span data-stu-id="6f612-399">Note that this method returns a <see cref="T:System.Single" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6f612-400">Ta metoda używa domyślnej konwencji zaokrąglania <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6f612-400">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="6f612-401">Jeśli wartość `x` argument jest <xref:System.Single.NaN?displayProperty=nameWithType>, metoda zwraca <xref:System.Single.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6f612-401">If the value of the `x` argument is <xref:System.Single.NaN?displayProperty=nameWithType>, the method returns <xref:System.Single.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6f612-402">Jeśli `x` jest <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, metoda zwraca <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="6f612-402">If `x` is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="6f612-403">Ze względu na utratę dokładności, który może wynikać z reprezentujących wartości dziesiętnej jako liczb zmiennoprzecinkowych lub wykonujące operacje arytmetyczne na wartości zmiennoprzecinkowe, w niektórych przypadkach <see cref="M:System.MathF.Round(System.Single)" /> metoda nie może występować zaokrąglić wartości punktu środkowego najbliższej parzystej liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="6f612-403">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.MathF.Round(System.Single)" /> method may not appear to round midpoint values to the nearest even integer.</span></span></para></block>
        <altmember cref="M:System.MathF.Ceiling(System.Single)" />
        <altmember cref="M:System.MathF.Floor(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static float Round (float x, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Round(float32 x, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Round(System.Single,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (x As Single, digits As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Round(float x, int digits);" />
      <MemberSignature Language="F#" Value="static member Round : single * int -&gt; single" Usage="System.MathF.Round (x, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-404">Liczba zmiennoprzecinkowa pojedynczej precyzji ma zostać zaokrąglona.</span><span class="sxs-lookup"><span data-stu-id="6f612-404">A single-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="6f612-405">Liczba cyfr ułamkowych w wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="6f612-405">The number of fractional digits in the return value.</span></span></param>
        <summary><span data-ttu-id="6f612-406">Zaokrągla wartość zmiennoprzecinkową o pojedynczej dokładności określonej liczby cyfr dziesiętnych, a punkt środkowy Zaokrągla do najbliższej parzystej liczby.</span><span class="sxs-lookup"><span data-stu-id="6f612-406">Rounds a single-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="6f612-407">Liczba najbliżej do <paramref name="x" /> zawierającą liczbę cyfr ułamkowych, jaka jest równa <paramref name="digits" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-407">The number nearest to <paramref name="x" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="6f612-408">Wartość `digits` argument do zakresu od 0 do 6.</span><span class="sxs-lookup"><span data-stu-id="6f612-408">The value of the `digits` argument can range from 0 to 6.</span></span> <span data-ttu-id="6f612-409">Należy pamiętać, że 6 maksymalną liczbę cyfr zaokrągleń obsługiwane przez <xref:System.Single> typu.</span><span class="sxs-lookup"><span data-stu-id="6f612-409">Note that 6 is the maximum number of integral and fractional digits supported by the <xref:System.Single> type.</span></span>

<span data-ttu-id="6f612-410">Ta metoda używa domyślnej konwencji zaokrąglania <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6f612-410">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> 

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="6f612-411">Jeśli wartość `x` argument jest <xref:System.Single.NaN?displayProperty=nameWithType>, metoda zwraca <xref:System.Single.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6f612-411">If the value of the `x` argument is <xref:System.Single.NaN?displayProperty=nameWithType>, the method returns <xref:System.Single.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6f612-412">Jeśli `x` jest <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, metoda zwraca <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="6f612-412">If `x` is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6f612-413"><paramref name="digits" /> jest mniejszy niż 0 lub większa niż 6.</span><span class="sxs-lookup"><span data-stu-id="6f612-413"><paramref name="digits" /> is less than 0 or greater than 6.</span></span></exception>
        <altmember cref="M:System.MathF.Ceiling(System.Single)" />
        <altmember cref="M:System.MathF.Floor(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static float Round (float x, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Round(float32 x, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Round(System.Single,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (x As Single, mode As MidpointRounding) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Round(float x, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : single * MidpointRounding -&gt; single" Usage="System.MathF.Round (x, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-414">Liczba zmiennoprzecinkowa pojedynczej precyzji ma zostać zaokrąglona.</span><span class="sxs-lookup"><span data-stu-id="6f612-414">A single-precision floating-point number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="6f612-415">Specyfikacja sposób zaokrąglania <paramref name="x" /> Jeśli pomiędzy dwoma inne liczby pozycjami.</span><span class="sxs-lookup"><span data-stu-id="6f612-415">Specification for how to round <paramref name="x" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="6f612-416">Zaokrągla wartość zmiennoprzecinkową pojedynczej precyzji dla najbliższej liczby całkowitej, a następnie używa określonej konwencji zaokrąglania wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="6f612-416">Rounds a single-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="6f612-417">Liczbę całkowitą najbliższej <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-417">The integer nearest <paramref name="x" />.</span></span> <span data-ttu-id="6f612-418">Jeśli <paramref name="x" /> jest w połowie między dwóch liczb całkowitych, z których jeden jest parzysta, a nieparzysta, następnie <paramref name="mode" /> określa dwóch zwrócony.</span><span class="sxs-lookup"><span data-stu-id="6f612-418">If <paramref name="x" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span> <span data-ttu-id="6f612-419">Należy zauważyć, że ta metoda zwraca <see cref="T:System.Single" /> zamiast typu całkowitego.</span><span class="sxs-lookup"><span data-stu-id="6f612-419">Note that this method returns a <see cref="T:System.Single" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  


[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="6f612-420">Jeśli wartość `x` argument jest <xref:System.Single.NaN?displayProperty=nameWithType>, metoda zwraca <xref:System.Single.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6f612-420">If the value of the `x` argument is <xref:System.Single.NaN?displayProperty=nameWithType>, the method returns <xref:System.Single.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6f612-421">Jeśli `x` jest <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, metoda zwraca <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="6f612-421">If `x` is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6f612-422"><paramref name="mode" /> nie jest prawidłową wartością <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-422"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <altmember cref="M:System.MathF.Ceiling(System.Single)" />
        <altmember cref="M:System.MathF.Floor(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static float Round (float x, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Round(float32 x, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Round(System.Single,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (x As Single, digits As Integer, mode As MidpointRounding) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Round(float x, int digits, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : single * int * MidpointRounding -&gt; single" Usage="System.MathF.Round (x, digits, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="digits" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-423">Liczba zmiennoprzecinkowa pojedynczej precyzji ma zostać zaokrąglona.</span><span class="sxs-lookup"><span data-stu-id="6f612-423">A single-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="6f612-424">Liczba cyfr ułamkowych w wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="6f612-424">The number of fractional digits in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="6f612-425">Specyfikacja sposób zaokrąglania <paramref name="x" /> Jeśli pomiędzy dwoma inne liczby pozycjami.</span><span class="sxs-lookup"><span data-stu-id="6f612-425">Specification for how to round <paramref name="x" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="6f612-426">Zaokrągla wartość zmiennoprzecinkową o pojedynczej dokładności określonej liczby cyfr ułamkowych, jaka i używa określonej konwencji zaokrąglania wartości punktu środkowego.</span><span class="sxs-lookup"><span data-stu-id="6f612-426">Rounds a single-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="6f612-427">Liczba najbliżej do <paramref name="x" /> zawierający liczbę cyfr ułamkowych, jaka jest równa <paramref name="digits" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-427">The number nearest to <paramref name="x" /> that has a number of fractional digits equal to <paramref name="digits" />.</span></span> <span data-ttu-id="6f612-428">Jeśli <paramref name="x" /> ma mniej cyfr ułamkowych, jaka niż <paramref name="digits" />, <paramref name="x" /> jest zwracany bez zmian.</span><span class="sxs-lookup"><span data-stu-id="6f612-428">If <paramref name="x" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="x" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6f612-429">Wartość `digits` argument do zakresu od 0 do 6.</span><span class="sxs-lookup"><span data-stu-id="6f612-429">The value of the `digits` argument can range from 0 to 6.</span></span> <span data-ttu-id="6f612-430">Należy pamiętać, że 6 maksymalną liczbę cyfr zaokrągleń obsługiwane przez <xref:System.Single> typu.</span><span class="sxs-lookup"><span data-stu-id="6f612-430">Note that 6 is the maximum number of integral and fractional digits supported by the <xref:System.Single> type.</span></span>


[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="6f612-431">Jeśli wartość `x` argument jest <xref:System.Single.NaN?displayProperty=nameWithType>, metoda zwraca <xref:System.Single.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6f612-431">If the value of the `x` argument is <xref:System.Single.NaN?displayProperty=nameWithType>, the method returns <xref:System.Single.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6f612-432">Jeśli `x` jest <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, metoda zwraca <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> lub <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="6f612-432">If `x` is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6f612-433"><paramref name="digits" /> jest mniejszy niż 0 lub większa niż 6.</span><span class="sxs-lookup"><span data-stu-id="6f612-433"><paramref name="digits" /> is less than 0 or greater than 6.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6f612-434"><paramref name="mode" /> nie jest prawidłową wartością <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-434"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <altmember cref="M:System.MathF.Ceiling(System.Single)" />
        <altmember cref="M:System.MathF.Floor(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleB">
      <MemberSignature Language="C#" Value="public static float ScaleB (float x, int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ScaleB(float32 x, int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.ScaleB(System.Single,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScaleB (x As Single, n As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ScaleB(float x, int n);" />
      <MemberSignature Language="F#" Value="static member ScaleB : single * int -&gt; single" Usage="System.MathF.ScaleB (x, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="n" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-435">Liczba zmiennoprzecinkowa pojedynczej precyzji, która określa wartości bazowej.</span><span class="sxs-lookup"><span data-stu-id="6f612-435">A single-precision floating-point number that specifies the base value.</span></span></param>
        <param name="n"><span data-ttu-id="6f612-436">Liczba zmiennoprzecinkowa pojedynczej precyzji, która określa możliwości.</span><span class="sxs-lookup"><span data-stu-id="6f612-436">A single-precision floating-point number that specifies the power.</span></span></param>
        <summary><span data-ttu-id="6f612-437">Zwraca x \* 2 ^ n obliczane wydajnie.</span><span class="sxs-lookup"><span data-stu-id="6f612-437">Returns x \* 2^n computed efficiently.</span></span></summary>
        <returns><span data-ttu-id="6f612-438">x \* 2 ^ n obliczane wydajnie.</span><span class="sxs-lookup"><span data-stu-id="6f612-438">x \* 2^n computed efficiently.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (x As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float x);" />
      <MemberSignature Language="F#" Value="static member Sign : single -&gt; int" Usage="System.MathF.Sign x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-439">Liczba oznaczona.</span><span class="sxs-lookup"><span data-stu-id="6f612-439">A signed number.</span></span></param>
        <summary><span data-ttu-id="6f612-440">Zwraca liczbę całkowitą, która określa znak liczba zmiennoprzecinkowa pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="6f612-440">Returns an integer that indicates the sign of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="6f612-441">Liczba, która określa znak <paramref name="x" />, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="6f612-441">A number that indicates the sign of <paramref name="x" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="6f612-442">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="6f612-442">Return value</span></span> 
 </term><description> <span data-ttu-id="6f612-443">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="6f612-443">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="6f612-444">-1</span><span class="sxs-lookup"><span data-stu-id="6f612-444">-1</span></span> 
 </term><description><span data-ttu-id="6f612-445"><paramref name="x" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="6f612-445"><paramref name="x" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="6f612-446">0</span><span class="sxs-lookup"><span data-stu-id="6f612-446">0</span></span> 
 </term><description><span data-ttu-id="6f612-447"><paramref name="x" /> jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="6f612-447"><paramref name="x" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="6f612-448">1</span><span class="sxs-lookup"><span data-stu-id="6f612-448">1</span></span> 
 </term><description><span data-ttu-id="6f612-449"><paramref name="x" /> jest większa niż zero.</span><span class="sxs-lookup"><span data-stu-id="6f612-449"><paramref name="x" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks></remarks>
        <exception cref="T:System.ArithmeticException"><span data-ttu-id="6f612-450"><paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-450"><paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static float Sin (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sin(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Sin(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Sin(float x);" />
      <MemberSignature Language="F#" Value="static member Sin : single -&gt; single" Usage="System.MathF.Sin x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-451">Kąt wyrażony w radianach.</span><span class="sxs-lookup"><span data-stu-id="6f612-451">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="6f612-452">Zwraca sinus określonego kąta.</span><span class="sxs-lookup"><span data-stu-id="6f612-452">Returns the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="6f612-453">Sinus <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-453">The sine of <paramref name="x" />.</span></span> <span data-ttu-id="6f612-454">Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, lub <see cref="F:System.Single.PositiveInfinity" />, Metoda ta zwraca <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-454">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />, this method returns <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-455">Kąt `x`, musi być podany w radianach.</span><span class="sxs-lookup"><span data-stu-id="6f612-455">The angle, `x`, must be in radians.</span></span> <span data-ttu-id="6f612-456">Mnożenie przez <xref:System.MathF.PI?displayProperty=nameWithType>/180 Konwertuje stopnie na radiany.</span><span class="sxs-lookup"><span data-stu-id="6f612-456">Multiply by <xref:System.MathF.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static float Sinh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sinh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Sinh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Sinh(float x);" />
      <MemberSignature Language="F#" Value="static member Sinh : single -&gt; single" Usage="System.MathF.Sinh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-457">Kąt wyrażony w radianach.</span><span class="sxs-lookup"><span data-stu-id="6f612-457">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="6f612-458">Zwraca sinus hiperboliczny liczby podanemu kątowi.</span><span class="sxs-lookup"><span data-stu-id="6f612-458">Returns the hyperbolic sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="6f612-459">Sinus hiperboliczny liczby <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-459">The hyperbolic sine of <paramref name="x" />.</span></span> <span data-ttu-id="6f612-460">Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NegativeInfinity" />, <see cref="F:System.Single.PositiveInfinity" />, lub <see cref="F:System.Single.NaN" />, Metoda ta zwraca <see cref="T:System.Single" /> równa <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-460">If <paramref name="x" /> is equal to <see cref="F:System.Single.NegativeInfinity" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NaN" />, this method returns a <see cref="T:System.Single" /> equal to <paramref name="x" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-461">Kąt `x`, musi być podany w radianach.</span><span class="sxs-lookup"><span data-stu-id="6f612-461">The angle, `x`, must be in radians.</span></span> <span data-ttu-id="6f612-462">Mnożenie przez <xref:System.MathF.PI?displayProperty=nameWithType>/180 Konwertuje stopnie na radiany.</span><span class="sxs-lookup"><span data-stu-id="6f612-462">Multiply by <xref:System.MathF.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static float Sqrt (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sqrt(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Sqrt(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Sqrt(float x);" />
      <MemberSignature Language="F#" Value="static member Sqrt : single -&gt; single" Usage="System.MathF.Sqrt x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-463">Liczba, której pierwiastek kwadratowy ma zostać znaleziona.</span><span class="sxs-lookup"><span data-stu-id="6f612-463">The number whose square root is to be found.</span></span></param>
        <summary><span data-ttu-id="6f612-464">Zwraca pierwiastek kwadratowy z podanej liczby.</span><span class="sxs-lookup"><span data-stu-id="6f612-464">Returns the square root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="6f612-465">Jedna z wartości w tabeli poniżej.</span><span class="sxs-lookup"><span data-stu-id="6f612-465">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="6f612-466"><paramref name="x" /> Parametr</span><span class="sxs-lookup"><span data-stu-id="6f612-466"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="6f612-467">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="6f612-467">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="6f612-468">Zero lub wynik dodatni</span><span class="sxs-lookup"><span data-stu-id="6f612-468">Zero or positive</span></span> 
 </term><description> <span data-ttu-id="6f612-469">Dodatnia pierwiastek kwadratowy liczby <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-469">The positive square root of <paramref name="x" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="6f612-470">Ujemne</span><span class="sxs-lookup"><span data-stu-id="6f612-470">Negative</span></span> 
 </term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="6f612-471">równa się <see cref="F:System.Single.NaN" /></span><span class="sxs-lookup"><span data-stu-id="6f612-471">Equals <see cref="F:System.Single.NaN" /></span></span></term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="6f612-472">równa się <see cref="F:System.Single.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="6f612-472">Equals <see cref="F:System.Single.PositiveInfinity" /></span></span></term><description><see cref="F:System.Single.PositiveInfinity" /></description></item></list></returns>
        <remarks></remarks>
        <altmember cref="M:System.MathF.Pow(System.Single,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static float Tan (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Tan(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Tan(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Tan(float x);" />
      <MemberSignature Language="F#" Value="static member Tan : single -&gt; single" Usage="System.MathF.Tan x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-473">Kąt wyrażony w radianach.</span><span class="sxs-lookup"><span data-stu-id="6f612-473">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="6f612-474">Zwraca tangens określonego kąta.</span><span class="sxs-lookup"><span data-stu-id="6f612-474">Returns the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="6f612-475">Tangens <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-475">The tangent of <paramref name="x" />.</span></span> <span data-ttu-id="6f612-476">Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, lub <see cref="F:System.Single.PositiveInfinity" />, Metoda ta zwraca <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-476">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />, this method returns <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-477">Kąt `x`, musi być podany w radianach.</span><span class="sxs-lookup"><span data-stu-id="6f612-477">The angle, `x`, must be in radians.</span></span> <span data-ttu-id="6f612-478">Mnożenie przez <xref:System.MathF.PI?displayProperty=nameWithType>/180 Konwertuje stopnie na radiany.</span><span class="sxs-lookup"><span data-stu-id="6f612-478">Multiply by <xref:System.MathF.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static float Tanh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Tanh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Tanh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Tanh(float x);" />
      <MemberSignature Language="F#" Value="static member Tanh : single -&gt; single" Usage="System.MathF.Tanh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-479">Kąt wyrażony w radianach.</span><span class="sxs-lookup"><span data-stu-id="6f612-479">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="6f612-480">Zwraca tangens hiperboliczny podanemu kątowi.</span><span class="sxs-lookup"><span data-stu-id="6f612-480">Returns the hyperbolic tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="6f612-481">Tangens hiperboliczny liczby <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-481">The hyperbolic tangent of <paramref name="x" />.</span></span> <span data-ttu-id="6f612-482">Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NegativeInfinity" />, ta metoda zwraca wartość -1.</span><span class="sxs-lookup"><span data-stu-id="6f612-482">If <paramref name="x" /> is equal to <see cref="F:System.Single.NegativeInfinity" />, this method returns -1.</span></span> <span data-ttu-id="6f612-483">Jeśli wartość jest równa <see cref="F:System.Single.PositiveInfinity" />, ta metoda zwraca wartość 1.</span><span class="sxs-lookup"><span data-stu-id="6f612-483">If value is equal to <see cref="F:System.Single.PositiveInfinity" />, this method returns 1.</span></span> <span data-ttu-id="6f612-484">Jeśli <paramref name="x" /> jest równa <see cref="F:System.Single.NaN" />, Metoda ta zwraca <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="6f612-484">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, this method returns <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f612-485">Kąt `x`, musi być podany w radianach.</span><span class="sxs-lookup"><span data-stu-id="6f612-485">The angle, `x`, must be in radians.</span></span> <span data-ttu-id="6f612-486">Mnożenie przez <xref:System.MathF.PI?displayProperty=nameWithType>/180 Konwertuje stopnie na radiany.</span><span class="sxs-lookup"><span data-stu-id="6f612-486">Multiply by <xref:System.MathF.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static float Truncate (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Truncate(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Truncate(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Truncate(float x);" />
      <MemberSignature Language="F#" Value="static member Truncate : single -&gt; single" Usage="System.MathF.Truncate x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="6f612-487">Liczba do obcięcia.</span><span class="sxs-lookup"><span data-stu-id="6f612-487">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="6f612-488">Oblicza integralną część podanej liczbie zmiennoprzecinkowej pojedynczej precyzji.</span><span class="sxs-lookup"><span data-stu-id="6f612-488">Calculates the integral part of a specified single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="6f612-489">Integralną częścią <paramref name="x" />; oznacza to, liczba który pozostaje po wszystkie cyfry ułamkowe zostały odrzucone lub jedna z wartości wymienionych w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="6f612-489">The integral part of <paramref name="x" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span></span>  
  
 <list type="table"><listheader><term><paramref name="x" /></term><description> <span data-ttu-id="6f612-490">Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="6f612-490">Return value</span></span> 
 </description></listheader><item><term><see cref="F:System.Single.NaN" /></term><description><see cref="F:System.Single.NaN" /></description></item><item><term><see cref="F:System.Single.NegativeInfinity" /></term><description><see cref="F:System.Single.NegativeInfinity" /></description></item><item><term><see cref="F:System.Single.PositiveInfinity" /></term><description><see cref="F:System.Single.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="6f612-491"><xref:System.MathF.Truncate%2A> Zaokrągla `x` do najbliższej liczby całkowitej w kierunku zera.</span><span class="sxs-lookup"><span data-stu-id="6f612-491"><xref:System.MathF.Truncate%2A> rounds `x` to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.MathF.Round" />
        <altmember cref="M:System.MathF.Ceiling(System.Single)" />
        <altmember cref="M:System.MathF.Floor(System.Single)" />
      </Docs>
    </Member>
  </Members>
</Type>
