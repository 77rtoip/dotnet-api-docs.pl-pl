<Type Name="Converter&lt;TInput,TOutput&gt;" FullName="System.Converter&lt;TInput,TOutput&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d572a9ac7cdd88d83e2e60e3ab38a089b5d7b1a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37728371" /></Metadata><TypeSignature Language="C#" Value="public delegate TOutput Converter&lt;in TInput,out TOutput&gt;(TInput input);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Converter`2&lt;- TInput, + TOutput&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Converter`2" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Converter(Of In TInput, Out TOutput)(input As TInput) As TOutput " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput, typename TOutput&gt;&#xA;public delegate TOutput Converter(TInput input);" />
  <TypeSignature Language="F#" Value="type Converter&lt;'Input, 'Output&gt; = delegate of 'Input -&gt; 'Output" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TOutput">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="input" Type="TInput" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TOutput</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TInput"><span data-ttu-id="fd865-101">Typ obiektu, który ma zostać przekonwertowany.</span><span class="sxs-lookup"><span data-stu-id="fd865-101">The type of object that is to be converted.</span></span></typeparam>
    <typeparam name="TOutput"><span data-ttu-id="fd865-102">Typ obiektu wejściowego jest ma zostać przekonwertowane na.</span><span class="sxs-lookup"><span data-stu-id="fd865-102">The type the input object is to be converted to.</span></span></typeparam>
    <param name="input"><span data-ttu-id="fd865-103">Obiekt do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="fd865-103">The object to convert.</span></span></param>
    <summary><span data-ttu-id="fd865-104">Reprezentuje metodę, która konwertuje obiekt z jednego typu na inny typ.</span><span class="sxs-lookup"><span data-stu-id="fd865-104">Represents a method that converts an object from one type to another type.</span></span></summary>
    <returns><span data-ttu-id="fd865-105"><typeparamref name="TOutput" /> Reprezentujący skonwertowany <typeparamref name="TInput" />.</span><span class="sxs-lookup"><span data-stu-id="fd865-105">The <typeparamref name="TOutput" /> that represents the converted <typeparamref name="TInput" />.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd865-106">Ten delegat jest używany przez <xref:System.Array.ConvertAll%2A> metody <xref:System.Array> klasy i <xref:System.Collections.Generic.List`1.ConvertAll*> metody <xref:System.Collections.Generic.List%601> klasy w celu przekonwertowania każdego elementu kolekcji z jednego typu na inny.</span><span class="sxs-lookup"><span data-stu-id="fd865-106">This delegate is used by the <xref:System.Array.ConvertAll%2A> method of the <xref:System.Array> class and the <xref:System.Collections.Generic.List`1.ConvertAll*> method of the <xref:System.Collections.Generic.List%601> class to convert each element of the collection from one type to another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd865-107">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="fd865-107">This section contains two code examples.</span></span> <span data-ttu-id="fd865-108">Pierwszy pokazuje <xref:System.Converter%602> delegowanie przy użyciu <xref:System.Array.ConvertAll%2A> metody <xref:System.Array> klasy, a drugi pokazuje delegata z <xref:System.Collections.Generic.List`1.ConvertAll*> metody <xref:System.Collections.Generic.List%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="fd865-108">The first demonstrates the <xref:System.Converter%602> delegate with the <xref:System.Array.ConvertAll%2A> method of the <xref:System.Array> class, and the second demonstrates the delegate with the <xref:System.Collections.Generic.List`1.ConvertAll*> method of the <xref:System.Collections.Generic.List%601> generic class.</span></span>  
  
 <span data-ttu-id="fd865-109">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="fd865-109">Example 1</span></span>  
  
 <span data-ttu-id="fd865-110">Poniższy przykład kodu przedstawia metodę o nazwie `PointFToPoint` konwertująca <xref:System.Drawing.PointF> struktury do <xref:System.Drawing.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="fd865-110">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="fd865-111">Przykład tworzy następnie tablicę <xref:System.Drawing.PointF> struktury, tworzy `Converter<PointF, Point>` delegowanie (`Converter(Of PointF, Point)` w języku Visual Basic) do reprezentowania `PointFToPoint` metody i przekazuje delegata do <xref:System.Array.ConvertAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fd865-111">The example then creates an array of <xref:System.Drawing.PointF> structures, creates a `Converter<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Array.ConvertAll%2A> method.</span></span> <span data-ttu-id="fd865-112"><xref:System.Array.ConvertAll%2A> Metoda kończy się powodzeniem każdy element listy danych wejściowych w celu `PointFToPoint` metody i umieszcza elementy przekonwertowana z nową listę <xref:System.Drawing.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="fd865-112">The <xref:System.Array.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="fd865-113">Zarówno listy są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="fd865-113">Both lists are displayed.</span></span>  
  
 [!code-cpp[Array_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[Array_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_ConvertAll/cs/source.cs#1)]
 [!code-vb[Array_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_ConvertAll/vb/source.vb#1)]  
  
 <span data-ttu-id="fd865-114">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="fd865-114">Example 2</span></span>  
  
 <span data-ttu-id="fd865-115">Poniższy przykład kodu przedstawia metodę o nazwie `PointFToPoint` konwertująca <xref:System.Drawing.PointF> struktury do <xref:System.Drawing.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="fd865-115">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="fd865-116">Przykład tworzy następnie <xref:System.Collections.Generic.List%601> z <xref:System.Drawing.PointF> struktury, tworzy `Converter\<PointF, Point>` delegowanie (`Converter(Of PointF, Point)` w języku Visual Basic) do reprezentowania `PointFToPoint` metody i przekazuje delegata do <xref:System.Collections.Generic.List`1.ConvertAll*> metody.</span><span class="sxs-lookup"><span data-stu-id="fd865-116">The example then creates a <xref:System.Collections.Generic.List%601> of <xref:System.Drawing.PointF> structures, creates a `Converter\<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Collections.Generic.List`1.ConvertAll*> method.</span></span> <span data-ttu-id="fd865-117"><xref:System.Collections.Generic.List`1.ConvertAll*> Metoda kończy się powodzeniem każdy element listy danych wejściowych w celu `PointFToPoint` metody i umieszcza elementy przekonwertowana z nową listę <xref:System.Drawing.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="fd865-117">The <xref:System.Collections.Generic.List`1.ConvertAll*> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="fd865-118">Zarówno listy są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="fd865-118">Both lists are displayed.</span></span>  
  
 [!code-cpp[List\`1_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[List\`1_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_ConvertAll/cs/source.cs#1)]
 [!code-vb[List\`1_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>