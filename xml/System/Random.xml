<Type Name="Random" FullName="System.Random">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d51d70444dab9462315feb569307240656b2446" /><Meta Name="ms.sourcegitcommit" Value="f9e71795ba0f9c2dfaa74bec233343ed0f3ffd99" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/14/2019" /><Meta Name="ms.locfileid" Value="57961071" /></Metadata><TypeSignature Language="C#" Value="public class Random" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Random extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Random" />
  <TypeSignature Language="VB.NET" Value="Public Class Random" />
  <TypeSignature Language="C++ CLI" Value="public ref class Random" />
  <TypeSignature Language="F#" Value="type Random = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8661a-101">Reprezentuje generator liczb losowych pseudolosowego, który jest urządzeniem, który wytwarza sekwencję liczb, które spełniają pewne statystyczne dotyczące losowości.</span><span class="sxs-lookup"><span data-stu-id="8661a-101">Represents a pseudo-random number generator, which is a device that produces a sequence of numbers that meet certain statistical requirements for randomness.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8661a-102">Numery pseudolosową można wybrać z równym prawdopodobieństwem skończoną zbioru liczb.</span><span class="sxs-lookup"><span data-stu-id="8661a-102">Pseudo-random numbers are chosen with equal probability from a finite set of numbers.</span></span> <span data-ttu-id="8661a-103">Wybranej liczby nie są całkowicie losowych, ponieważ matematyczne algorytm jest używany do wybierania je, ale są one dostatecznie losowe ze względów praktycznych.</span><span class="sxs-lookup"><span data-stu-id="8661a-103">The chosen numbers are not completely random because a mathematical algorithm is used to select them, but they are sufficiently random for practical purposes.</span></span> <span data-ttu-id="8661a-104">Bieżąca implementacja parametru <xref:System.Random> klasy opiera się na zmodyfikowaną wersję Donald E. Knuth subtraktywne generator algorytmu liczb.</span><span class="sxs-lookup"><span data-stu-id="8661a-104">The current implementation of the <xref:System.Random> class is based on a modified version of Donald E. Knuth's subtractive random number generator algorithm.</span></span> <span data-ttu-id="8661a-105">Aby uzyskać więcej informacji zobacz D. E.</span><span class="sxs-lookup"><span data-stu-id="8661a-105">For more information, see D. E.</span></span> <span data-ttu-id="8661a-106">Knuth.</span><span class="sxs-lookup"><span data-stu-id="8661a-106">Knuth.</span></span> <span data-ttu-id="8661a-107">*Art of programistycznych woluminie 2: Algorytmy seminumerical*.</span><span class="sxs-lookup"><span data-stu-id="8661a-107">*The Art of Computer Programming, Volume 2: Seminumerical Algorithms*.</span></span> <span data-ttu-id="8661a-108">Addison-Wesley, odczytu, MA, wydanie trzecie 1997.</span><span class="sxs-lookup"><span data-stu-id="8661a-108">Addison-Wesley, Reading, MA, third edition, 1997.</span></span>  
  
 <span data-ttu-id="8661a-109">Aby wygenerować kryptograficznie bezpieczne losową liczbę taki, który jest odpowiedni do tworzenia losowe hasło <xref:System.Security.Cryptography.RNGCryptoServiceProvider> klasy lub wyprowadzić klasę z <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8661a-109">To generate a cryptographically secure random number, such as one that's suitable for creating a random password, use the <xref:System.Security.Cryptography.RNGCryptoServiceProvider> class or derive a class from <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8661a-110">W tym temacie:</span><span class="sxs-lookup"><span data-stu-id="8661a-110">In this topic:</span></span>  
  
 <span data-ttu-id="8661a-111">[Utworzenie wystąpienia generator liczb losowych](#Instantiate) </span><span class="sxs-lookup"><span data-stu-id="8661a-111">[Instantiating the random number generator](#Instantiate) </span></span>  
 <span data-ttu-id="8661a-112">[Unikanie wiele wystąpień](#Multiple) </span><span class="sxs-lookup"><span data-stu-id="8661a-112">[Avoiding multiple instantiations](#Multiple) </span></span>  
 <span data-ttu-id="8661a-113">[System.Random bezpieczeństwa klasy i wątku](#ThreadSafety) </span><span class="sxs-lookup"><span data-stu-id="8661a-113">[The System.Random class and thread safety](#ThreadSafety) </span></span>  
 <span data-ttu-id="8661a-114">[Generowanie różnych typów liczb losowych](#Functionality) </span><span class="sxs-lookup"><span data-stu-id="8661a-114">[Generating different types of random numbers](#Functionality) </span></span>  
 <span data-ttu-id="8661a-115">[Podstawiając własny algorytmu](#Overriding) </span><span class="sxs-lookup"><span data-stu-id="8661a-115">[Substituting your own algorithm](#Overriding) </span></span>  
 <span data-ttu-id="8661a-116">[Jak używać System.Random do...](#Operations) </span><span class="sxs-lookup"><span data-stu-id="8661a-116">[How do you use System.Random to…](#Operations) </span></span>  
 [<span data-ttu-id="8661a-117">Pobierz tę samą sekwencję losowych wartości</span><span class="sxs-lookup"><span data-stu-id="8661a-117">Retrieve the same sequence of random values</span></span>](#Same)  
 [<span data-ttu-id="8661a-118">Pobieranie unikatowych sekwencji losowe wartości</span><span class="sxs-lookup"><span data-stu-id="8661a-118">Retrieve unique sequences of random values</span></span>](#Unique)  
 [<span data-ttu-id="8661a-119">Pobieranie liczby całkowite w określonym zakresie</span><span class="sxs-lookup"><span data-stu-id="8661a-119">Retrieve integers in a specified range</span></span>](#Range)  
 [<span data-ttu-id="8661a-120">Pobieranie liczby całkowite z określonej liczby cyfr</span><span class="sxs-lookup"><span data-stu-id="8661a-120">Retrieve integers with a specified number of digits</span></span>](#Digits)  
 [<span data-ttu-id="8661a-121">Pobieranie wartości zmiennoprzecinkowych w określonym zakresie</span><span class="sxs-lookup"><span data-stu-id="8661a-121">Retrieve floating-point values in a specified range</span></span>](#Floats)  
 [<span data-ttu-id="8661a-122">Generowanie losowe wartości logicznych</span><span class="sxs-lookup"><span data-stu-id="8661a-122">Generate random Boolean values</span></span>](#Boolean)  
 [<span data-ttu-id="8661a-123">Generowanie losowe 64-bitowych liczb całkowitych</span><span class="sxs-lookup"><span data-stu-id="8661a-123">Generate random 64-bit integers</span></span>](#Long)  
 [<span data-ttu-id="8661a-124">Pobieranie bajtów w określonym zakresie</span><span class="sxs-lookup"><span data-stu-id="8661a-124">Retrieve bytes in a specified range</span></span>](#Bytes)  
 [<span data-ttu-id="8661a-125">Pobieranie elementu z tablicy lub kolekcji losowo</span><span class="sxs-lookup"><span data-stu-id="8661a-125">Retrieve an element from an array or collection at random</span></span>](#Array)  
 [<span data-ttu-id="8661a-126">Pobieranie unikatowy element z tablicy lub kolekcji</span><span class="sxs-lookup"><span data-stu-id="8661a-126">Retrieve a unique element from an array or collection</span></span>](#UniqueArray)  
  
<a name="Instantiate"></a>   
## <a name="instantiating-the-random-number-generator"></a><span data-ttu-id="8661a-127">Utworzenie wystąpienia generator liczb losowych</span><span class="sxs-lookup"><span data-stu-id="8661a-127">Instantiating the random number generator</span></span>  
 <span data-ttu-id="8661a-128">Wystąpienia generator liczb losowych, podając wartości początkowej (wartość początkową dla generowania algorytmu liczb), aby <xref:System.Random.%23ctor%2A> konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="8661a-128">You instantiate the random number generator by providing a seed value (a starting value for the pseudo-random number generation algorithm) to a <xref:System.Random.%23ctor%2A> class constructor.</span></span>  <span data-ttu-id="8661a-129">Możesz podać wartości początkowej, jawnie lub niejawnie:</span><span class="sxs-lookup"><span data-stu-id="8661a-129">You can supply the seed value either explicitly or implicitly:</span></span>  
  
-   <span data-ttu-id="8661a-130"><xref:System.Random.%23ctor%28System.Int32%29> Konstruktor korzysta z inicjatora jawną wartość.</span><span class="sxs-lookup"><span data-stu-id="8661a-130">The <xref:System.Random.%23ctor%28System.Int32%29> constructor uses an explicit seed value that you supply.</span></span>  
  
-   <span data-ttu-id="8661a-131"><xref:System.Random.%23ctor> Konstruktor korzysta z zegara systemowego podania wartości inicjatora.</span><span class="sxs-lookup"><span data-stu-id="8661a-131">The <xref:System.Random.%23ctor> constructor uses the system clock to provide a seed value.</span></span> <span data-ttu-id="8661a-132">Jest to najbardziej popularny sposób tworzenia wystąpienia generator liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-132">This is the most common way of instantiating the random number generator.</span></span>  
  
 <span data-ttu-id="8661a-133">Jeśli ten sam inicjatora jest używana do oddzielnych <xref:System.Random> obiektów, generują one serii identycznych liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-133">If the same seed is used for separate <xref:System.Random> objects, they will generate the same series of random numbers.</span></span> <span data-ttu-id="8661a-134">Może to być przydatne do tworzenia zestawu testów, który przetwarza losowe wartości lub dla odtwarzanie gry utworzone swoje dane na podstawie liczby losowe.</span><span class="sxs-lookup"><span data-stu-id="8661a-134">This can be useful for creating a test suite that processes random values, or for replaying games that derive their data from random numbers.</span></span> <span data-ttu-id="8661a-135">Jednak należy pamiętać, że <xref:System.Random> obiektów w procesy uruchomione na różnych wersji programu .NET Framework mogą zwracać różnych serii liczb losowych, nawet wtedy, gdy są one tworzone z wartościami inicjującymi identyczne.</span><span class="sxs-lookup"><span data-stu-id="8661a-135">However, note that <xref:System.Random> objects in processes running under different versions of the .NET Framework may return different series of random numbers even if they're instantiated with identical seed values.</span></span>  
  
 <span data-ttu-id="8661a-136">Aby wygenerować różne sekwencje liczby losowych, wprowadzona wartość początkową zależne od czasu, a tym samym tworzenie różnych serii z każdym wystąpieniem nowe <xref:System.Random>.</span><span class="sxs-lookup"><span data-stu-id="8661a-136">To produce different sequences of random numbers, you can make the seed value time-dependent, thereby producing a different series with each new instance of <xref:System.Random>.</span></span> <span data-ttu-id="8661a-137">Sparametryzowany <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor może potrwać <xref:System.Int32> wartości na podstawie liczby taktów w bieżący czas, dlatego bez parametrów <xref:System.Random.%23ctor> Konstruktor korzysta z zegara systemowego do generowania jego wartości inicjatora.</span><span class="sxs-lookup"><span data-stu-id="8661a-137">The parameterized <xref:System.Random.%23ctor%28System.Int32%29> constructor can take an <xref:System.Int32> value based on the number of ticks in the current time, whereas the parameterless <xref:System.Random.%23ctor> constructor uses the system clock to generate its seed value.</span></span> <span data-ttu-id="8661a-138">Jednak ponieważ zegar ma skończony rozdzielczości, przy użyciu konstruktora bez parametrów do tworzenia różnych <xref:System.Random> obiektów kolejno Zamknij tworzy generatorów liczb losowych, które generują identyczny sekwencje liczby losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-138">However, because the clock has finite resolution, using the parameterless constructor to create different <xref:System.Random> objects in close succession creates random number generators that produce identical sequences of random numbers.</span></span> <span data-ttu-id="8661a-139">Poniższy przykład pokazuje, jak dwa <xref:System.Random> obiektów, które są tworzone w odstępie czasu Zamknij Generowanie identyczne szeregu liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-139">The following example illustrates how two <xref:System.Random> objects that are instantiated in close succession generate an identical series of random numbers.</span></span> <span data-ttu-id="8661a-140">W większości systemów Windows <xref:System.Random> obiektów utworzonych w ciągu 15 milisekund od siebie prawdopodobnie wartościami inicjującymi identyczne.</span><span class="sxs-lookup"><span data-stu-id="8661a-140">On most Windows systems, <xref:System.Random> objects created within 15 milliseconds of one another are likely to have identical seed values.</span></span>  
  
 [!code-cpp[System.Random#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random1.cpp#1)]
 [!code-csharp[System.Random#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random1.cs#1)]
 [!code-vb[System.Random#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random1.vb#1)]  
  
 <span data-ttu-id="8661a-141">Aby uniknąć tego problemu, należy utworzyć jeden <xref:System.Random> obiekt, a nie wielu obiektów.</span><span class="sxs-lookup"><span data-stu-id="8661a-141">To avoid this problem, create a single <xref:System.Random> object instead of multiple objects.</span></span>  
  
<a name="Multiple"></a>   
## <a name="avoiding-multiple-instantiations"></a><span data-ttu-id="8661a-142">Unikanie wiele wystąpień</span><span class="sxs-lookup"><span data-stu-id="8661a-142">Avoiding multiple instantiations</span></span>  
 <span data-ttu-id="8661a-143">Inicjowanie dwóch liczb losowych w pętli lub w krótkim odstępie czasu powoduje utworzenie dwóch liczb losowych generujących identyczne sekwencje liczby losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-143">Initializing two random number generators in a tight loop or in rapid succession creates two random number generators that can produce identical sequences of random numbers.</span></span> <span data-ttu-id="8661a-144">W większości przypadków to nie jest celem dewelopera i może prowadzić do problemów z wydajnością, ponieważ wystąpienia i Inicjowanie generator liczb losowych jest procesem relatywnie kosztowne.</span><span class="sxs-lookup"><span data-stu-id="8661a-144">In most cases, this is not the developer's intent and can lead to performance issues, because instantiating and initializing a random number generator is a relatively expensive process.</span></span>  
  
 <span data-ttu-id="8661a-145">Zarówno do zwiększenia wydajności i uniknięcia przypadkowo tworzenie oddzielnych generatorów liczb losowych, które generują identyczne sekwencje numeryczne, zaleca się utworzenie jednego <xref:System.Random> obiektu umożliwiającą wygenerowanie wiele liczb losowych wraz z upływem czasu, zamiast tworzyć nowe <xref:System.Random> obiekty do generowania jednego liczbę losową.</span><span class="sxs-lookup"><span data-stu-id="8661a-145">Both to improve performance and to avoid inadvertently creating separate random number generators that generate identical numeric sequences, we recommend that you create one <xref:System.Random> object to generate many random numbers over time, instead of creating new <xref:System.Random> objects to generate one random number.</span></span>  
  
 <span data-ttu-id="8661a-146">Jednak <xref:System.Random> klasy nie jest bezpieczny dla wątków.</span><span class="sxs-lookup"><span data-stu-id="8661a-146">However, the <xref:System.Random> class isn't thread safe.</span></span> <span data-ttu-id="8661a-147">Jeśli wywołasz <xref:System.Random> metody z wielu wątków, postępuj zgodnie z wytycznymi omówiona w następnej sekcji.</span><span class="sxs-lookup"><span data-stu-id="8661a-147">If you call <xref:System.Random> methods from multiple threads, follow the guidelines discussed in the next section.</span></span>  
  
<a name="ThreadSafety"></a>   
## <a name="the-systemrandom-class-and-thread-safety"></a><span data-ttu-id="8661a-148">System.Random bezpieczeństwa klasy i wątku</span><span class="sxs-lookup"><span data-stu-id="8661a-148">The System.Random class and thread safety</span></span>  
 <span data-ttu-id="8661a-149">Zamiast tworzenia wystąpienia osoba <xref:System.Random> obiektów, zaleca się utworzenie pojedynczego <xref:System.Random> wystąpienie do generowania liczb losowych wymagane przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="8661a-149">Instead of instantiating individual <xref:System.Random> objects, we recommend that you create a single <xref:System.Random> instance to generate all the random numbers needed by your app.</span></span> <span data-ttu-id="8661a-150">Jednak <xref:System.Random> obiekty nie są bezpieczne dla wątków.</span><span class="sxs-lookup"><span data-stu-id="8661a-150">However, <xref:System.Random> objects are not thread safe.</span></span> <span data-ttu-id="8661a-151">Jeśli aplikacja odwołuje się <xref:System.Random> metod z wielu wątków, musi być obiektem synchronizacji upewnij się, że tylko jeden wątek mają dostęp do generator liczb losowych w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="8661a-151">If your app calls <xref:System.Random> methods from multiple threads, you must use a synchronization object to ensure that only one thread can access the random number generator at a time.</span></span> <span data-ttu-id="8661a-152">Jeśli użytkownik nie upewnij się, że <xref:System.Random> obiektu odbywa się w sposób wątkowo, wywołania do metod, które zwracają liczby losowe zwracają 0.</span><span class="sxs-lookup"><span data-stu-id="8661a-152">If you don't ensure that the <xref:System.Random> object is accessed in a thread-safe way, calls to methods that return random numbers return 0.</span></span>  
  
 <span data-ttu-id="8661a-153">W poniższym przykładzie użyto języka C# [lock — instrukcja](~/docs/csharp/language-reference/keywords/lock-statement.md) i Visual Basic [SyncLock — instrukcja](~/docs/visual-basic/language-reference/statements/synclock-statement.md) aby upewnić się, że pojedynczy generator liczb losowych odbywa się przez 11 wątki w sposób bezpieczny dla wątków.</span><span class="sxs-lookup"><span data-stu-id="8661a-153">The following example uses the C# [lock Statement](~/docs/csharp/language-reference/keywords/lock-statement.md) and the Visual Basic [SyncLock statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md) to ensure that a single random number generator is accessed by 11 threads in a thread-safe manner.</span></span> <span data-ttu-id="8661a-154">Każdy wątek generuje liczby losowe 2 miliony, zlicza liczb losowych, które są generowane i oblicza sumę ich, a następnie aktualizuje łączne wartości dla wszystkich wątków, po zakończeniu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="8661a-154">Each thread generates 2 million random numbers, counts the number of random numbers generated and calculates their sum, and then updates the totals for all threads when it finishes executing.</span></span>  
  
 [!code-cpp[System.Random#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/threadsafeex1.cpp#3)]
 [!code-csharp[System.Random#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex1.cs#3)]
 [!code-vb[System.Random#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex1.vb#3)]  
  
 <span data-ttu-id="8661a-155">Przykład zapewnia bezpieczeństwo wątków w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="8661a-155">The example ensures thread-safety in the following ways:</span></span>  
  
-   <span data-ttu-id="8661a-156"><xref:System.ThreadStaticAttribute> Atrybut jest używany do definiowania zmiennych thread-local, które śledzą sumę liczb losowych generowane i ich sumy dla każdego wątku.</span><span class="sxs-lookup"><span data-stu-id="8661a-156">The <xref:System.ThreadStaticAttribute> attribute is used to define thread-local variables that track the total number of random numbers generated and their sum for each thread.</span></span>  
  
-   <span data-ttu-id="8661a-157">Blokady ( `lock` instrukcji w języku C# i `SyncLock` instrukcji w języku Visual Basic) chroni dostęp do zmiennych, łączna liczba i sumę wszystkich liczb losowych, wygenerowany we wszystkich wątkach.</span><span class="sxs-lookup"><span data-stu-id="8661a-157">A lock (the `lock` statement in C# and the `SyncLock` statement in Visual Basic) protects access to the variables for the total count and sum of all random numbers generated on all threads.</span></span>  
  
-   <span data-ttu-id="8661a-158">Semafor ( <xref:System.Threading.CountdownEvent> obiektów) służy do zapewnienia, że bloki głównego wątku, aż do innych wątków wykonany.</span><span class="sxs-lookup"><span data-stu-id="8661a-158">A semaphore (the <xref:System.Threading.CountdownEvent> object) is used to ensure that the main thread blocks until all other threads complete execution.</span></span>  
  
-   <span data-ttu-id="8661a-159">Przykład sprawdza, czy generator liczb losowych naruszona przez określenie czy dwóch kolejnych wywołań losowych liczb metody generowania zwracają 0.</span><span class="sxs-lookup"><span data-stu-id="8661a-159">The example checks whether the random number generator has become corrupted by determining whether two consecutive calls to random number generation methods return 0.</span></span> <span data-ttu-id="8661a-160">W przypadku wykrycia uszkodzenie w przykładzie użyto <xref:System.Threading.CancellationTokenSource> obiekt do sygnalizowania, że wszystkie wątki powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="8661a-160">If corruption is detected, the example uses the <xref:System.Threading.CancellationTokenSource> object to signal that all threads should be canceled.</span></span>  
  
-   <span data-ttu-id="8661a-161">Przed wygenerowaniem poszczególnych liczb losowych, każdy wątek służy do sprawdzania stanu <xref:System.Threading.CancellationToken> obiektu.</span><span class="sxs-lookup"><span data-stu-id="8661a-161">Before generating each random number, each thread checks the state of the <xref:System.Threading.CancellationToken> object.</span></span> <span data-ttu-id="8661a-162">Jeśli zażądano anulowania <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> metodę, aby anulować wątku.</span><span class="sxs-lookup"><span data-stu-id="8661a-162">If cancellation is requested, the example calls the <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method to cancel the thread.</span></span>  
  
 <span data-ttu-id="8661a-163">Poniższy przykład jest identyczny z pierwszym, z tą różnicą, że używa <xref:System.Threading.Tasks.Task> obiekt i Wyrażenie lambda, zamiast <xref:System.Threading.Thread> obiektów.</span><span class="sxs-lookup"><span data-stu-id="8661a-163">The following example is identical to the first, except that it uses a <xref:System.Threading.Tasks.Task> object and a lambda expression instead of <xref:System.Threading.Thread> objects.</span></span>  
  
 [!code-csharp[System.Random#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex2.cs#4)]
 [!code-vb[System.Random#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex2.vb#4)]  
  
 <span data-ttu-id="8661a-164">Różni się od pierwszego przykładu w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="8661a-164">It differs from the first example in the following ways:</span></span>  
  
-   <span data-ttu-id="8661a-165">Zmienne, aby śledzić liczbę liczb losowych generowane i ich sumy w każdym zadaniu są lokalne do zadania, więc nie trzeba używać <xref:System.ThreadStaticAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="8661a-165">The variables to keep track of the number of random numbers generated and their sum in each task are local to the task, so there is no need to use the <xref:System.ThreadStaticAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="8661a-166">Statyczne <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> metoda służy do zapewnienia, że główny wątek nie wykona przed zakończeniem wszystkich zadań.</span><span class="sxs-lookup"><span data-stu-id="8661a-166">The static <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method is used to ensure that the main thread doesn't complete before all tasks have finished.</span></span> <span data-ttu-id="8661a-167">Nie ma potrzeby dla <xref:System.Threading.CountdownEvent> obiektu.</span><span class="sxs-lookup"><span data-stu-id="8661a-167">There is no need for the <xref:System.Threading.CountdownEvent> object.</span></span>  
  
-   <span data-ttu-id="8661a-168">Wyjątek, który jest wynikiem anulowanie zadania jest udostępniane w <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-168">The exception that results from task cancellation is surfaced in the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8661a-169">W poprzednim przykładzie jest obsługiwane przez poszczególne wątki.</span><span class="sxs-lookup"><span data-stu-id="8661a-169">In the previous example, it is handled by each thread.</span></span>  
  
<a name="Functionality"></a>   
## <a name="generating-different-types-of-random-numbers"></a><span data-ttu-id="8661a-170">Generowanie różnych typów liczb losowych</span><span class="sxs-lookup"><span data-stu-id="8661a-170">Generating different types of random numbers</span></span>  
 <span data-ttu-id="8661a-171">Generator liczb losowych zawiera metody, które umożliwiają generowanie następujące rodzaje losowych liczb:</span><span class="sxs-lookup"><span data-stu-id="8661a-171">The random number generator provides methods that let you generate the following kinds of random numbers:</span></span>  
  
-   <span data-ttu-id="8661a-172">Szereg <xref:System.Byte> wartości.</span><span class="sxs-lookup"><span data-stu-id="8661a-172">A series of <xref:System.Byte> values.</span></span> <span data-ttu-id="8661a-173">Możesz określić liczbę wartości bajtów, przekazując tablicę, zainicjować do liczby elementów ma metodę, aby powrócić do <xref:System.Random.NextBytes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-173">You determine the number of byte values by passing an array initialized to the number of elements you want the method to return to the <xref:System.Random.NextBytes%2A> method.</span></span> <span data-ttu-id="8661a-174">Poniższy przykład generuje 20 bajtów.</span><span class="sxs-lookup"><span data-stu-id="8661a-174">The following example generates 20 bytes.</span></span>  
  
     [!code-cpp[System.Random#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextbytes1.cpp#5)]
     [!code-csharp[System.Random#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextbytes1.cs#5)]
     [!code-vb[System.Random#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextbytes1.vb#5)]  
  
-   <span data-ttu-id="8661a-175">Pojedyncze liczby całkowite.</span><span class="sxs-lookup"><span data-stu-id="8661a-175">A single integer.</span></span> <span data-ttu-id="8661a-176">Można wybrać, czy chcesz, aby liczba całkowita z zakresu od 0 do maksymalnej wartości (<xref:System.Int32.MaxValue?displayProperty=nameWithType> - 1) przez wywołanie metody <xref:System.Random.Next> metody, całkowitą z zakresu od 0 do określonej wartości, wywołując <xref:System.Random.Next%28System.Int32%29> metody lub liczbą całkowitą w zakresie wartości przez wywołanie metody <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-176">You can choose whether you want an integer from 0 to a maximum value (<xref:System.Int32.MaxValue?displayProperty=nameWithType> - 1) by calling the <xref:System.Random.Next> method, an integer between 0 and a specific value by calling the <xref:System.Random.Next%28System.Int32%29> method, or an integer within a range of values by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="8661a-177">W sparametryzowanych przeciążeń jest wyłącznym; określona wartość maksymalna Rzeczywista maksymalna liczba generowany jest jeden mniejsza niż określona wartość.</span><span class="sxs-lookup"><span data-stu-id="8661a-177">In the parameterized overloads, the specified maximum value is exclusive; that is, the actual maximum number generated is one less than the specified value.</span></span>  
  
     <span data-ttu-id="8661a-178">Poniższy przykład wywołuje <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metodę w celu wygenerowania 10 losowych liczb w zakresie od -10 do 10.</span><span class="sxs-lookup"><span data-stu-id="8661a-178">The following example calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to generate 10 random numbers between -10 and 10.</span></span> <span data-ttu-id="8661a-179">Należy pamiętać, że drugi argument do metody określa wyłączne górna granica zakresu wartości losowych zwracany przez metodę.</span><span class="sxs-lookup"><span data-stu-id="8661a-179">Note that the second argument to the method specifies the exclusive upper bound of the range of random values returned by the method.</span></span> <span data-ttu-id="8661a-180">Innymi słowy największa liczba całkowita, która metoda może zwracać jeden mniejsza od tej wartości.</span><span class="sxs-lookup"><span data-stu-id="8661a-180">In other words, the largest integer that the method can return is one less than this value.</span></span>  
  
     [!code-cpp[System.Random#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextex1.cpp#6)]
     [!code-csharp[System.Random#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextex1.cs#6)]
     [!code-vb[System.Random#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextex1.vb#6)]  
  
-   <span data-ttu-id="8661a-181">Jednej wartości zmiennoprzecinkowych od 0,0 mniejszą niż 1,0 przez wywołanie metody <xref:System.Random.NextDouble%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-181">A single floating-point value from 0.0 to less than 1.0 by calling the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="8661a-182">Wyłączne górnej granicy liczby losowe, zwracany przez metodę wynosi 1, dzięki czemu jego rzeczywista górna granica jest 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="8661a-182">The exclusive upper bound of the random number returned by the method is 1, so its actual upper bound is 0.99999999999999978.</span></span> <span data-ttu-id="8661a-183">Poniższy przykład generuje 10 losowych liczb zmiennoprzecinkowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-183">The following example generates 10 random floating-point numbers.</span></span>  
  
     [!code-cpp[System.Random#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextdoubleex1.cpp#7)]
     [!code-csharp[System.Random#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextdoubleex1.cs#7)]
     [!code-vb[System.Random#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextdoubleex1.vb#7)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="8661a-184"><xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Metody umożliwia określenie zakresu zwrócone liczbę losową.</span><span class="sxs-lookup"><span data-stu-id="8661a-184">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method allows you to specify the range of the returned random number.</span></span> <span data-ttu-id="8661a-185">Jednak `maxValue` parametr, który określa górna granica zwracana liczba jest wyłącznie, nie obejmują, wartość.</span><span class="sxs-lookup"><span data-stu-id="8661a-185">However, the `maxValue` parameter, which specifies the upper range returned number, is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="8661a-186">Oznacza to, że wywołanie metody `Next(0, 100)` zwraca wartość z zakresu od 0 do 99, a nie z zakresu od 0 do 100.</span><span class="sxs-lookup"><span data-stu-id="8661a-186">This means that the method call `Next(0, 100)` returns a value between 0 and 99, and not between 0 and 100.</span></span>  
  
 <span data-ttu-id="8661a-187">Można również użyć <xref:System.Random> klasy dla zadania, takie jak Generowanie [losowe wartości T:System.Boolean](#Boolean), generowanie [losowych zmiennoprzecinkowej wartości z zakresu innego niż 0 i 1](#Floats), generowanie [losowych 64-bitowych liczb całkowitych](#Long), i [losowo pobieranie unikatowy element z tablicy lub kolekcji](#UniqueArray).</span><span class="sxs-lookup"><span data-stu-id="8661a-187">You can also use the <xref:System.Random> class for such tasks as generating [random T:System.Boolean values](#Boolean), generating [random floating point values with a range other than 0 to 1](#Floats), generating [random 64-bit integers](#Long), and [randomly retrieving a unique element from an array or collection](#UniqueArray).</span></span> <span data-ttu-id="8661a-188">Dla tych i innych typowych zadań, zobacz [jak używać System.Random do...](#Operations)</span><span class="sxs-lookup"><span data-stu-id="8661a-188">For these and other common tasks, see the [How do you use System.Random to…](#Operations)</span></span> <span data-ttu-id="8661a-189">sekcja.</span><span class="sxs-lookup"><span data-stu-id="8661a-189">section.</span></span>  
  
<a name="Overriding"></a>   
## <a name="substituting-your-own-algorithm"></a><span data-ttu-id="8661a-190">Podstawiając własny algorytmu</span><span class="sxs-lookup"><span data-stu-id="8661a-190">Substituting your own algorithm</span></span>  
 <span data-ttu-id="8661a-191">Możesz zaimplementować własnego generator liczb losowych przez dziedziczenie z <xref:System.Random> klasy i dostarczenie usługi algorytm generowania liczb pseudolosowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-191">You can implement your own random number generator by inheriting from the <xref:System.Random> class and supplying your random number generation algorithm.</span></span> <span data-ttu-id="8661a-192">Aby przekazać własne algorytmu, konieczne jest przesłonięcie <xref:System.Random.Sample%2A> metody, która implementuje algorytm generowania liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-192">To supply your own algorithm, you must override the <xref:System.Random.Sample%2A> method, which implements the random number generation algorithm.</span></span> <span data-ttu-id="8661a-193">Należy również zastąpić <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, i <xref:System.Random.NextBytes%2A> metod w celu zapewnienia będą wywoływać usługi zastąpione <xref:System.Random.Sample%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-193">You should also override the <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, and <xref:System.Random.NextBytes%2A> methods to ensure that they call your overridden <xref:System.Random.Sample%2A> method.</span></span> <span data-ttu-id="8661a-194">Nie trzeba zastąpić <xref:System.Random.Next%28System.Int32%29> i <xref:System.Random.NextDouble%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-194">You don't have to override the <xref:System.Random.Next%28System.Int32%29> and <xref:System.Random.NextDouble%2A> methods.</span></span>  
  
 <span data-ttu-id="8661a-195">Aby uzyskać przykład, która pochodzi od klasy <xref:System.Random> klasy i modyfikuje jego domyślne pseudolosowego generator liczb losowych, zobacz <xref:System.Random.Sample%2A> odwołania do stron.</span><span class="sxs-lookup"><span data-stu-id="8661a-195">For an example that derives from the <xref:System.Random> class and modifies its default pseudo-random number generator, see the <xref:System.Random.Sample%2A> reference page.</span></span>  
  
<a name="Operations"></a>   
## <a name="how-do-you-use-systemrandom-to"></a><span data-ttu-id="8661a-196">Jak używać System.Random do...</span><span class="sxs-lookup"><span data-stu-id="8661a-196">How do you use System.Random to…</span></span>  
 <span data-ttu-id="8661a-197">W poniższych sekcjach omówiono i podaj przykładowy kod na kilka sposobów, możesz chcieć użyć liczb losowych w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8661a-197">The following sections discuss and provide sample code for some of the ways you might want to use random numbers in your app.</span></span>  
  
<a name="Same"></a>   
### <a name="retrieve-the-same-sequence-of-random-values"></a><span data-ttu-id="8661a-198">Pobierz tę samą sekwencję losowych wartości</span><span class="sxs-lookup"><span data-stu-id="8661a-198">Retrieve the same sequence of random values</span></span>  
 <span data-ttu-id="8661a-199">Czasami chcesz wygenerować taką samą sekwencję liczb losowych w scenariuszach testów oprogramowania oraz granie w gry.</span><span class="sxs-lookup"><span data-stu-id="8661a-199">Sometimes you want to generate the same sequence of random numbers in software test scenarios and in game playing.</span></span> <span data-ttu-id="8661a-200">Testowanie za pomocą tej samej sekwencji liczb losowych umożliwia wykrywanie regresji i upewnij się, poprawki błędów.</span><span class="sxs-lookup"><span data-stu-id="8661a-200">Testing with the same sequence of random numbers allows you to detect regressions and confirm bug fixes.</span></span> <span data-ttu-id="8661a-201">Za pomocą tej samej sekwencji liczb losowych w grach pozwala na poprzednim gry oparte na metodzie powtórzeń.</span><span class="sxs-lookup"><span data-stu-id="8661a-201">Using the same sequence of random number in games allows you to replay previous games.</span></span>  
  
 <span data-ttu-id="8661a-202">Możesz wygenerować taką samą sekwencję liczb losowych, podając tę samą wartość inicjatora do <xref:System.Random.%23ctor%28System.Int32%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="8661a-202">You can generate the same sequence of random numbers by providing the same seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="8661a-203">Wartość początkową udostępnia wartość początkową dla generowania algorytmu liczb.</span><span class="sxs-lookup"><span data-stu-id="8661a-203">The seed value provides a starting value for the pseudo-random number generation algorithm.</span></span> <span data-ttu-id="8661a-204">W poniższym przykładzie użyto 100100 jako wartość dowolnego inicjatora do utworzenia wystąpienia <xref:System.Random> obiektów, wyświetla 20 losowych wartości zmiennoprzecinkowe i będzie się powtarzał wartości początkowej.</span><span class="sxs-lookup"><span data-stu-id="8661a-204">The following example uses 100100 as an arbitrary seed value to instantiate the <xref:System.Random> object, displays 20 random floating-point values, and persists the seed value.</span></span> <span data-ttu-id="8661a-205">Następnie przywraca wartość początkową, tworzy nowy generator liczb losowych i wyświetla te same 20 losowych wartości zmiennoprzecinkowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-205">It then restores the seed value, instantiates a new random number generator, and displays the same 20 random floating-point values.</span></span>  <span data-ttu-id="8661a-206">Należy zwrócić uwagę na przykład mogą dawać różne sekwencje liczby losowych uruchomienia różnych wersji programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="8661a-206">Note that the example may produce different sequences of random numbers if run on different versions of the .NET Framework.</span></span>  
  
 [!code-cpp[System.Random#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/same1.cpp#12)]
 [!code-csharp[System.Random#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/same1.cs#12)]
 [!code-vb[System.Random#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/same1.vb#12)]  
  
<a name="Unique"></a>   
### <a name="retrieve-unique-sequences-of-random-numbers"></a><span data-ttu-id="8661a-207">Pobieranie unikatowy sekwencje liczby losowych</span><span class="sxs-lookup"><span data-stu-id="8661a-207">Retrieve unique sequences of random numbers</span></span>  
 <span data-ttu-id="8661a-208">Podając wartości różnych inicjatora do wystąpień <xref:System.Random> klasy powoduje, że każdy generator liczb losowych do tworzenia różnych sekvence hodnot.</span><span class="sxs-lookup"><span data-stu-id="8661a-208">Providing different seed values to instances of the <xref:System.Random> class causes each random number generator to produce a different sequence of values.</span></span> <span data-ttu-id="8661a-209">Wartość początkową można podać albo jawnie przez wywołanie metody <xref:System.Random.%23ctor%28System.Int32%29> konstruktora, lub niejawnie przez wywołanie <xref:System.Random.%23ctor> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="8661a-209">You can provide a seed value either explicitly by calling the <xref:System.Random.%23ctor%28System.Int32%29> constructor, or implicitly by calling the <xref:System.Random.%23ctor> constructor.</span></span> <span data-ttu-id="8661a-210">Większość programistów wywołanie konstruktora bez parametrów, który korzysta z zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="8661a-210">Most developers call the parameterless constructor, which uses the system clock.</span></span> <span data-ttu-id="8661a-211">W poniższym przykładzie użyto tego podejścia do tworzenia wystąpienia dwóch <xref:System.Random> wystąpień.</span><span class="sxs-lookup"><span data-stu-id="8661a-211">The following example uses this approach to instantiate two <xref:System.Random> instances.</span></span> <span data-ttu-id="8661a-212">Każde wystąpienie prezentuje serię 10 losowych liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="8661a-212">Each instance displays a series of 10 random integers.</span></span>  
  
 [!code-cpp[System.Random#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/unique.cpp#13)]
 [!code-csharp[System.Random#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/unique.cs#13)]
 [!code-vb[System.Random#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/unique.vb#13)]  
  
 <span data-ttu-id="8661a-213">Jednak ze względu na jego skończoną rozdzielczość zegara systemowego nie wykrywa różnice czasu, które są mniej niż około 15 milisekund.</span><span class="sxs-lookup"><span data-stu-id="8661a-213">However, because of its finite resolution, the system clock doesn't detect time differences that are less than approximately 15 milliseconds.</span></span> <span data-ttu-id="8661a-214">W związku z tym jeśli kod wywołuje <xref:System.Random.%23ctor> przeładowania do utworzenia wystąpienia dwóch <xref:System.Random> obiektów w odstępie czasu, możesz przypadkowo udostępniają obiekty z wartościami inicjującymi identyczne.</span><span class="sxs-lookup"><span data-stu-id="8661a-214">Therefore, if your code calls the <xref:System.Random.%23ctor> overload to instantiate two <xref:System.Random> objects in succession, you might inadvertently be providing the objects with identical seed values.</span></span> <span data-ttu-id="8661a-215">Aby to zobaczyć w poprzednim przykładzie, komentarz <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> wywołania metody i kompilacji i ponownie uruchom przykład.</span><span class="sxs-lookup"><span data-stu-id="8661a-215">To see this in the previous example, comment out the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method call, and compile and run the example again.</span></span>  
  
 <span data-ttu-id="8661a-216">Aby temu zapobiec, firma Microsoft zaleca, Utwórz wystąpienie jednego <xref:System.Random> obiektu zamiast wiele migawek.</span><span class="sxs-lookup"><span data-stu-id="8661a-216">To prevent this from happening, we recommend that you instantiate a single <xref:System.Random> object rather than multiple ones.</span></span> <span data-ttu-id="8661a-217">Jednak ponieważ <xref:System.Random> nie jest bezpieczny wątkowo, możesz uzyskać dostęp, należy użyć niektórych urządzeń synchronizacji <xref:System.Random> wystąpienia z wielu wątków; Aby uzyskać więcej informacji, zobacz [losowych bezpieczeństwa klasy i wątku](#ThreadSafety) wcześniej w tym temat.</span><span class="sxs-lookup"><span data-stu-id="8661a-217">However, since <xref:System.Random> isn't thread safe, you must use some synchronization device if you access a <xref:System.Random> instance from multiple threads; for more information, see [The Random class and thread safety](#ThreadSafety) earlier in this topic.</span></span> <span data-ttu-id="8661a-218">Alternatywnie służy mechanizm opóźnienie, takie jak <xref:System.Threading.Thread.Sleep%2A> metodę używaną w poprzednim przykładzie, aby upewnić się, że wystąpień wystąpić więcej niż 15 milisekund od siebie.</span><span class="sxs-lookup"><span data-stu-id="8661a-218">Alternately, you can use a delay mechanism, such as the <xref:System.Threading.Thread.Sleep%2A> method used in the previous example, to ensure that the instantiations occur more than 15 millisecond apart.</span></span>  
  
<a name="Range"></a>   
### <a name="retrieve-integers-in-a-specified-range"></a><span data-ttu-id="8661a-219">Pobieranie liczby całkowite w określonym zakresie</span><span class="sxs-lookup"><span data-stu-id="8661a-219">Retrieve integers in a specified range</span></span>  
 <span data-ttu-id="8661a-220">Możesz pobrać liczb całkowitych w określonym zakresie, wywołując <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metody, która umożliwia określenie zarówno dolną i górną granicę numery chcesz generator liczb losowych do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="8661a-220">You can retrieve integers in a specified range by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, which lets you specify both the lower and the upper bound of the numbers you'd like the random number generator to return.</span></span> <span data-ttu-id="8661a-221">Górna granica jest wyłącznie, nie obejmują, wartość.</span><span class="sxs-lookup"><span data-stu-id="8661a-221">The upper bound is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="8661a-222">Oznacza to, że nie jest zawarty w zakresie wartości zwracanych przez metodę.</span><span class="sxs-lookup"><span data-stu-id="8661a-222">That is, it isn't included in the range of values returned by the method.</span></span> <span data-ttu-id="8661a-223">W poniższym przykładzie użyto tej metody do wygenerowania losowych liczby całkowite z zakresu od -10 do 10.</span><span class="sxs-lookup"><span data-stu-id="8661a-223">The following example uses this method to generate random integers between -10 and 10.</span></span> <span data-ttu-id="8661a-224">Należy pamiętać, że Określa on 11, która jest większa o jeden od żądaną wartość, jako wartość z `maxValue` argumentu w wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-224">Note that it specifies 11, which is one greater than the desired value, as the value of the `maxValue` argument in the method call.</span></span>  
  
 [!code-cpp[System.Random#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range1.cpp#15)]
 [!code-csharp[System.Random#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range1.cs#15)]
 [!code-vb[System.Random#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range1.vb#15)]  
  
<a name="Digits"></a>   
### <a name="retrieve-integers-with-a-specified-number-of-digits"></a><span data-ttu-id="8661a-225">Pobieranie liczby całkowite z określonej liczby cyfr</span><span class="sxs-lookup"><span data-stu-id="8661a-225">Retrieve integers with a specified number of digits</span></span>  
 <span data-ttu-id="8661a-226">Możesz wywołać <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metoda pobierania liczb z określonej liczby cyfr.</span><span class="sxs-lookup"><span data-stu-id="8661a-226">You can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to retrieve numbers with a specified number of digits.</span></span> <span data-ttu-id="8661a-227">Na przykład, aby pobrać liczby cztery cyfry (oznacza to, liczby, w zakresie od-1000 do 9999), należy wywołać <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metody z `minValue` wartość 1000 i `maxValue` wartość 10000, co ilustruje poniższy przykład.</span><span class="sxs-lookup"><span data-stu-id="8661a-227">For example, to retrieve numbers with four digits (that is, numbers that range from 1000 to 9999), you call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method with a `minValue` value of 1000 and a `maxValue` value of 10000, as the following example shows.</span></span>  
  
 [!code-cpp[System.Random#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range2.cpp#16)]
 [!code-csharp[System.Random#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range2.cs#16)]
 [!code-vb[System.Random#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range2.vb#16)]  
  
<a name="Floats"></a>   
### <a name="retrieve-floating-point-values-in-a-specified-range"></a><span data-ttu-id="8661a-228">Pobieranie wartości zmiennoprzecinkowych w określonym zakresie</span><span class="sxs-lookup"><span data-stu-id="8661a-228">Retrieve floating-point values in a specified range</span></span>  
 <span data-ttu-id="8661a-229"><xref:System.Random.NextDouble%2A> Metoda zwraca losowych wartości zmiennoprzecinkowych tego zakresu od 0 do mniej niż 1.</span><span class="sxs-lookup"><span data-stu-id="8661a-229">The <xref:System.Random.NextDouble%2A> method returns random floating-point values that range from 0 to less than 1.</span></span> <span data-ttu-id="8661a-230">Jednak często warto Generowanie losowe wartości w niektórych innych zakresu.</span><span class="sxs-lookup"><span data-stu-id="8661a-230">However, you'll often want to generate random values in some other range.</span></span>  
  
 <span data-ttu-id="8661a-231">Jeśli interwał między minimalną i maksymalną żądaną wartość wynosi 1, można dodać różnicę między żądany przedział wyjścia i 0 liczbę zwróconych przez <xref:System.Random.NextDouble%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-231">If the interval between the minimum and maximum desired values is 1, you can add the difference between the desired starting interval and 0 to the number returned by the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="8661a-232">Poniższy przykład robi to w celu generowania liczb losowych 10, od -1 i 0.</span><span class="sxs-lookup"><span data-stu-id="8661a-232">The following example does this to generate 10 random numbers between -1 and 0.</span></span>  
  
 [!code-cpp[System.Random#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange2.cpp#17)]
 [!code-csharp[System.Random#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange2.cs#17)]
 [!code-vb[System.Random#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange2.vb#17)]  
  
 <span data-ttu-id="8661a-233">Do wygenerowania losowych liczb zmiennoprzecinkowych, którego dolna granica jest 0, ale górna granica jest większa niż 1 (lub, w przypadku wartości ujemne, którego dolna granica jest mniejsza niż -1 i górną granicę wynosi 0), należy pomnożyć liczbę losową przez granicę różna od zera.</span><span class="sxs-lookup"><span data-stu-id="8661a-233">To generate random floating-point numbers whose lower bound is 0 but upper bound is greater than 1 (or, in the case of negative numbers, whose lower bound is less than -1 and upper bound is 0), multiply the random number by the non-zero bound.</span></span> <span data-ttu-id="8661a-234">Poniższy przykład robi to w celu wygenerowania losowych liczb zmiennoprzecinkowych 20 milionów tego zakresu od 0 do <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8661a-234">The following example does this to generate 20 million random floating-point numbers that range from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8661a-235">W wyświetla również dystrybucję losowych wartości generowanych przez metodę.</span><span class="sxs-lookup"><span data-stu-id="8661a-235">In also displays the distribution of the random values generated by the method.</span></span>  
  
 [!code-cpp[System.Random#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange1.cpp#18)]
 [!code-csharp[System.Random#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange1.cs#18)]
 [!code-vb[System.Random#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange1.vb#18)]  
  
 <span data-ttu-id="8661a-236">Do wygenerowania losowych liczb zmiennoprzecinkowych między dwiema wartościami dowolnego, takich jak <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metoda wykonuje liczb całkowitych, należy użyć następującej formuły:</span><span class="sxs-lookup"><span data-stu-id="8661a-236">To generate random floating-point numbers between two arbitrary values, like the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method does for integers, use the following formula:</span></span>  
  
```csharp  
Random.NextDouble() * (maxValue - minValue) + minValue  
```  
  
 <span data-ttu-id="8661a-237">Poniższy przykład generuje 1 milion losowych liczb z zakresu od 10.0 do 11.0 i wyświetla ich dystrybucji.</span><span class="sxs-lookup"><span data-stu-id="8661a-237">The following example generates 1 million random numbers that range from 10.0 to 11.0, and displays their distribution.</span></span>  
  
 [!code-cpp[System.Random#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange3.cpp#19)]
 [!code-csharp[System.Random#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange3.cs#19)]
 [!code-vb[System.Random#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange3.vb#19)]  
  
<a name="Boolean"></a>   
### <a name="generate-random-boolean-values"></a><span data-ttu-id="8661a-238">Generowanie losowe wartości logicznych</span><span class="sxs-lookup"><span data-stu-id="8661a-238">Generate random Boolean values</span></span>  
 <span data-ttu-id="8661a-239"><xref:System.Random> Klasy nie udostępnia metody, które generują <xref:System.Boolean> wartości.</span><span class="sxs-lookup"><span data-stu-id="8661a-239">The <xref:System.Random> class doesn't provide methods that generate <xref:System.Boolean> values.</span></span> <span data-ttu-id="8661a-240">Można jednak zdefiniować własne klasy lub metody, aby to zrobić.</span><span class="sxs-lookup"><span data-stu-id="8661a-240">However, you can define your own class or method to do that.</span></span> <span data-ttu-id="8661a-241">W poniższym przykładzie zdefiniowano klasę, `BooleanGenerator`, z jedną metodą `NextBoolean`.</span><span class="sxs-lookup"><span data-stu-id="8661a-241">The following example defines a class, `BooleanGenerator`, with a single method, `NextBoolean`.</span></span> <span data-ttu-id="8661a-242">`BooleanGenerator` Klasa przechowuje <xref:System.Random> obiektu jako zmienną prywatną.</span><span class="sxs-lookup"><span data-stu-id="8661a-242">The `BooleanGenerator` class stores a <xref:System.Random> object as a private variable.</span></span> <span data-ttu-id="8661a-243">`NextBoolean` Wywołania metody <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metody i przekazuje jego wynik do <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-243">The `NextBoolean` method calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method and passes the result to the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8661a-244">Należy pamiętać, że 2 służy jako argument do określania górną granicę liczbę losową.</span><span class="sxs-lookup"><span data-stu-id="8661a-244">Note that 2 is used as the argument to specify the upper bound of the random number.</span></span> <span data-ttu-id="8661a-245">Ponieważ jest to wartość będącą liczbą wyłączny, wywołanie metody zwraca wartość 0 lub 1.</span><span class="sxs-lookup"><span data-stu-id="8661a-245">Since this is an exclusive value, the method call returns either 0 or 1.</span></span>  
  
 [!code-cpp[System.Random#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans1.cpp#8)]
 [!code-csharp[System.Random#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans1.cs#8)]
 [!code-vb[System.Random#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans1.vb#8)]  
  
 <span data-ttu-id="8661a-246">Zamiast tworzyć osobnej klasy do wygenerowania losowych <xref:System.Boolean> , przykładu można po prostu zdefiniowane wartości pojedynczej metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-246">Instead of creating a separate class to generate random <xref:System.Boolean> values, the example could simply have defined a single method.</span></span> <span data-ttu-id="8661a-247">W takim jednak <xref:System.Random> obiektu powinien został zdefiniowany jako zmiennej na poziomie klasy, aby uniknąć tworzenia wystąpienia nowego <xref:System.Random> wystąpienia w każdym wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-247">In that case, however, the <xref:System.Random> object should have been defined as a class-level variable to avoid instantiating a new <xref:System.Random> instance in each method call.</span></span> <span data-ttu-id="8661a-248">W języku Visual Basic można zdefiniować jako wystąpienie Random [statyczne](~/docs/visual-basic/language-reference/modifiers/static.md) zmienną `NextBoolean` metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-248">In Visual Basic, the Random instance can be defined as a [Static](~/docs/visual-basic/language-reference/modifiers/static.md) variable in the `NextBoolean` method.</span></span>  <span data-ttu-id="8661a-249">W poniższym przykładzie przedstawiono implementację.</span><span class="sxs-lookup"><span data-stu-id="8661a-249">The following example provides an implementation.</span></span>  
  
 [!code-cpp[System.Random#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans2.cpp#20)]
 [!code-csharp[System.Random#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans2.cs#20)]
 [!code-vb[System.Random#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans2.vb#20)]  
  
<a name="Long"></a>   
### <a name="generate-random-64-bit-integers"></a><span data-ttu-id="8661a-250">Generowanie losowe 64-bitowych liczb całkowitych</span><span class="sxs-lookup"><span data-stu-id="8661a-250">Generate random 64-bit integers</span></span>  
 <span data-ttu-id="8661a-251">Przeciążenia <xref:System.Random.Next%2A> zwracany przez metodę 32-bitowych liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="8661a-251">The overloads of the <xref:System.Random.Next%2A> method return 32-bit integers.</span></span> <span data-ttu-id="8661a-252">Jednak w niektórych przypadkach można pracować z 64-bitowych liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="8661a-252">However, in some cases, you might want to work with 64-bit integers.</span></span> <span data-ttu-id="8661a-253">Można to zrobić w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="8661a-253">You can do this as follows:</span></span>  
  
1.  <span data-ttu-id="8661a-254">Wywołaj <xref:System.Random.NextDouble%2A> metodę, która pobierze zmiennoprzecinkową podwójnej precyzji punktu wartości.</span><span class="sxs-lookup"><span data-stu-id="8661a-254">Call the <xref:System.Random.NextDouble%2A> method to retrieve a double-precision floating point value.</span></span>  
  
2.  <span data-ttu-id="8661a-255">Pomnóż tę wartość przez <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8661a-255">Multiply that value by <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8661a-256">Poniższy przykład używa tej techniki w celu wygenerowania losowych długich liczb całkowitych 20 milionów i klasyfikuje je w grupach równy 10.</span><span class="sxs-lookup"><span data-stu-id="8661a-256">The following example uses this technique to generate 20 million random long integers and categorizes them in 10 equal groups.</span></span> <span data-ttu-id="8661a-257">Następnie oblicza rozkład liczb losowych liczbą w każdej grupie od 0 do <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8661a-257">It then evaluates the distribution of the random numbers by counting the number in each group from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8661a-258">Dane wyjściowe z przykładu pokazują, liczby są dystrybuowane więcej lub mniej równie w zakresie liczba całkowita typu long.</span><span class="sxs-lookup"><span data-stu-id="8661a-258">As the output from the example shows, the numbers are distributed more or less equally through the range of a long integer.</span></span>  
  
 [!code-cpp[System.Random#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/long1.cpp#14)]
 [!code-csharp[System.Random#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/long1.cs#14)]
 [!code-vb[System.Random#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/long1.vb#14)]  
  
 <span data-ttu-id="8661a-259">Technika alternatywne, manipulowania bit używa nie generuje naprawdę losowych liczb.</span><span class="sxs-lookup"><span data-stu-id="8661a-259">An alternative technique that uses bit manipulation does not generate truly random numbers.</span></span> <span data-ttu-id="8661a-260">Ta metoda wywołuje <xref:System.Random.Next> do generowania dwóch liczb całkowitych, bity jeden na 32 przesunięcia w lewo i ORs je razem.</span><span class="sxs-lookup"><span data-stu-id="8661a-260">This technique calls <xref:System.Random.Next> to generate two integers, left-shifts one by 32 bits, and ORs them together.</span></span> <span data-ttu-id="8661a-261">Technika ta ma dwa ograniczenia:</span><span class="sxs-lookup"><span data-stu-id="8661a-261">This technique has two limitations:</span></span>  
  
1.  <span data-ttu-id="8661a-262">Ponieważ bitowe 31 bitu znaku, wartość bitowa 31 wynikowa liczba całkowita typu long jest zawsze 0.</span><span class="sxs-lookup"><span data-stu-id="8661a-262">Because bit 31 is the sign bit, the value in bit 31 of the resulting long integer is always 0.</span></span>  <span data-ttu-id="8661a-263">Można temu zaradzić przez Generowanie losowe 0 lub 1, po lewej stronie zmiany jego 31 bitów i ORing ją za pomocą oryginalnego losowe długich liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="8661a-263">This can be addressed by generating a random 0 or 1, left-shifting it 31 bits, and ORing it with the original random long integer.</span></span>  
  
2.  <span data-ttu-id="8661a-264">Więcej naszych użytkowników bardzo poważnie ponieważ prawdopodobieństwo, że wartość zwracana przez <xref:System.Random.Next> będzie mieć wartość 0, będzie kilka ewentualne losowych liczb z zakresu od 0x0 0x00000000FFFFFFFF.</span><span class="sxs-lookup"><span data-stu-id="8661a-264">More seriously, because the probability that the value returned by <xref:System.Random.Next> will be 0, there will be few if any random numbers in the range 0x0-0x00000000FFFFFFFF.</span></span>  
  
<a name="Bytes"></a>   
### <a name="retrieve-bytes-in-a-specified-range"></a><span data-ttu-id="8661a-265">Pobieranie bajtów w określonym zakresie</span><span class="sxs-lookup"><span data-stu-id="8661a-265">Retrieve bytes in a specified range</span></span>  
 <span data-ttu-id="8661a-266">Przeciążenia <xref:System.Random.Next%2A> metody pozwalają na określenie zakresu liczb losowych, ale <xref:System.Random.NextBytes%2A> nie obsługuje metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-266">The overloads of the <xref:System.Random.Next%2A> method allow you to specify the range of random numbers, but the <xref:System.Random.NextBytes%2A> method does not.</span></span> <span data-ttu-id="8661a-267">Poniższy przykład implementuje `NextBytes` metodę, która umożliwia określenie zakresu bajtów zwrócona.</span><span class="sxs-lookup"><span data-stu-id="8661a-267">The following example implements a `NextBytes` method that lets you specify the range of the returned bytes.</span></span> <span data-ttu-id="8661a-268">Definiuje on `Random2` klasę pochodzącą od <xref:System.Random> i przeciążenia jego `NextBytes` metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-268">It defines a `Random2` class that derives from <xref:System.Random> and overloads its `NextBytes` method.</span></span>  
  
 [!code-cpp[System.Random#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/bytes1.cpp#9)]
 [!code-csharp[System.Random#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/bytes1.cs#9)]
 [!code-vb[System.Random#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/bytes1.vb#9)]  
  
 <span data-ttu-id="8661a-269">`NextBytes(Byte[], Byte, Byte)` Metoda zawija wywołanie do <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metody i określa wartość minimalna i jeden większa niż wartość maksymalna (w tym przypadku 0 i 101), firma Microsoft mają być zwracane w tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="8661a-269">The `NextBytes(Byte[], Byte, Byte)` method wraps a call to the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method and specifies the minimum value and one greater than the maximum value (in this case, 0 and 101) that we want returned in the byte array.</span></span> <span data-ttu-id="8661a-270">Ponieważ firma Microsoft pewności, czy zwrócone wartości całkowitych, przez <xref:System.Random.Next%2A> metody są w zakresie <xref:System.Byte> typu danych, firma Microsoft może bezpiecznie je rzutowania (w języku C#) lub też przekonwertować je (w języku Visual Basic) z liczbami całkowitymi bajtów.</span><span class="sxs-lookup"><span data-stu-id="8661a-270">Because we are sure that the integer values returned by the <xref:System.Random.Next%2A> method are within the range of the <xref:System.Byte> data type, we can safely cast them (in C#) or convert them (in Visual Basic) from integers to bytes.</span></span>  
  
<a name="Array"></a>   
### <a name="retrieve-an-element-from-an-array-or-collection-at-random"></a><span data-ttu-id="8661a-271">Pobieranie elementu z tablicy lub kolekcji losowo</span><span class="sxs-lookup"><span data-stu-id="8661a-271">Retrieve an element from an array or collection at random</span></span>  
 <span data-ttu-id="8661a-272">Liczby losowe często służą jako indeksy, aby pobrać wartości z tablic lub kolekcji.</span><span class="sxs-lookup"><span data-stu-id="8661a-272">Random numbers often serve as indexes to retrieve values from arrays or collections.</span></span> <span data-ttu-id="8661a-273">Do pobierania wartości losowych indeksu, można wywołać <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metoda i użyj dolnej granicy tablicy jako wartość jej `minValue` argument i jeden większa niż górna granica tablicy jako wartość jej `maxValue` argumentu.</span><span class="sxs-lookup"><span data-stu-id="8661a-273">To retrieve a random index value, you can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, and use the lower bound of the array as the value of its `minValue` argument and one greater than the upper bound of the array as the value of its `maxValue` argument.</span></span> <span data-ttu-id="8661a-274">Tablicę indeksowaną od zera, jest to odpowiednik do jego <xref:System.Array.Length%2A> właściwości lub jeden większa niż wartość zwrócona przez obiekt <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-274">For a zero-based array, this is equivalent to its <xref:System.Array.Length%2A> property, or one greater than the value returned by the <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8661a-275">Poniższy przykład pobiera losowo nazwę miasta w Stanach Zjednoczonych z tablicy miast.</span><span class="sxs-lookup"><span data-stu-id="8661a-275">The following example randomly retrieves the name of a city in the United States from an array of cities.</span></span>  
  
 [!code-cpp[System.Random#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/array1.cpp#10)]
 [!code-csharp[System.Random#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/array1.cs#10)]
 [!code-vb[System.Random#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/array1.vb#10)]  
  
<a name="UniqueArray"></a>   
### <a name="retrieve-a-unique-element-from-an-array-or-collection"></a><span data-ttu-id="8661a-276">Pobieranie unikatowy element z tablicy lub kolekcji</span><span class="sxs-lookup"><span data-stu-id="8661a-276">Retrieve a unique element from an array or collection</span></span>  
 <span data-ttu-id="8661a-277">Generator liczb losowych, zawsze możesz wrócić zduplikowanych wartości.</span><span class="sxs-lookup"><span data-stu-id="8661a-277">A random number generator can always return duplicate values.</span></span> <span data-ttu-id="8661a-278">Zakres numerów staje się mniejszy lub liczba wartości generowane staje się większe, zwiększa się prawdopodobieństwo duplikaty.</span><span class="sxs-lookup"><span data-stu-id="8661a-278">As the range of numbers becomes smaller or the number of values generated becomes larger, the probability of duplicates grows.</span></span> <span data-ttu-id="8661a-279">Jeśli losowych wartości muszą być unikatowe, więcej cyfr są generowane kompensuje duplikaty, skutkuje coraz bardziej pogorszenia wydajności.</span><span class="sxs-lookup"><span data-stu-id="8661a-279">If random values must be unique, more numbers are generated to compensate for duplicates, resulting in increasingly poor performance.</span></span>  
  
 <span data-ttu-id="8661a-280">Istnieje kilka technik do obsługi tego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="8661a-280">There are a number of techniques to handle this scenario.</span></span> <span data-ttu-id="8661a-281">Jest jednym z typowych rozwiązań do utworzenia tablicy lub kolekcji, która zawiera wartości, które mają zostać pobrane i równoległych tablicę, która zawiera losowych liczb zmiennoprzecinkowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-281">One common solution is to create an array or collection that contains the values to be retrieved, and a parallel array that contains random floating-point numbers.</span></span> <span data-ttu-id="8661a-282">Druga tablica jest wypełniana przy użyciu liczb losowych w momencie pierwszej tablicy jest tworzony, i <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> metoda jest używana do sortowania pierwszą tablicę przy użyciu wartości w tablicy równoległych.</span><span class="sxs-lookup"><span data-stu-id="8661a-282">The second array is populated with random numbers at the time the first array is created, and the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is used to sort the first array by using the values in the parallel array.</span></span>  
  
 <span data-ttu-id="8661a-283">Na przykład jeśli tworzysz gry Pasjans chcesz upewnić się, że każda karta jest używana tylko raz.</span><span class="sxs-lookup"><span data-stu-id="8661a-283">For example, if you're developing a Solitaire game, you want to ensure that each card is used only once.</span></span> <span data-ttu-id="8661a-284">Zamiast generowania liczb losowych, aby pobrać karty i śledzenia, czy karty już zostały uwzględnione, można utworzyć równoległej tablicy liczb losowych, który może służyć do sortowania na pokład.</span><span class="sxs-lookup"><span data-stu-id="8661a-284">Instead of generating random numbers to retrieve a card and tracking whether that card has already been dealt, you can create a parallel array of random numbers that can be used to sort the deck.</span></span> <span data-ttu-id="8661a-285">Po talii jest sortowana, aplikacja może zachować wskaźnik do wskazania indeks następnej karty na pokładzie.</span><span class="sxs-lookup"><span data-stu-id="8661a-285">Once the deck is sorted, your app can maintain a pointer to indicate the index of the next card on the deck.</span></span>  
  
 <span data-ttu-id="8661a-286">To podejście pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="8661a-286">The following example illustrates this approach.</span></span> <span data-ttu-id="8661a-287">Definiuje on `Card` klasy, który reprezentuje kartę i a `Dealer` klasę, która zajmuje talii kart losowe.</span><span class="sxs-lookup"><span data-stu-id="8661a-287">It defines a `Card` class that represents a playing card and a `Dealer` class that deals a deck of shuffled cards.</span></span> <span data-ttu-id="8661a-288">`Dealer` Konstruktora klasy wypełnia dwie tablice: `deck` tablicy, która ma zakres klasy i reprezentujący wszystkie karty w talii; i lokalnym `order` tablica, która ma taką samą liczbę elementów jak `deck` macierz, a następnie jest wypełniana z losowym <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="8661a-288">The `Dealer` class constructor populates two arrays: a `deck` array that has class scope and that represents all the cards in the deck; and a local `order` array that has the same number of elements as the `deck` array and is populated with randomly generated <xref:System.Double> values.</span></span>  <span data-ttu-id="8661a-289"><xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> Następnie wywoływana jest metoda, aby posortować `deck` tablicy na podstawie wartości w `order` tablicy.</span><span class="sxs-lookup"><span data-stu-id="8661a-289">The <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is then called to sort the `deck` array based on the values in the `order` array.</span></span>  
  
 [!code-cpp[System.Random#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/uniquearray1.cpp#11)]
 [!code-csharp[System.Random#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/uniquearray1.cs#11)]
 [!code-vb[System.Random#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/uniquearray1.vb#11)]  
  
   
  
## Examples  
 <span data-ttu-id="8661a-290">Poniższy przykład tworzy pojedynczy generator liczb losowych i wywołuje jego <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, i <xref:System.Random.NextDouble%2A> metod do wygenerowania sekwencje liczby losowych w różnych zakresach.</span><span class="sxs-lookup"><span data-stu-id="8661a-290">The following example creates a single random number generator and calls its <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, and <xref:System.Random.NextDouble%2A> methods to generate sequences of random numbers within different ranges.</span></span>  
  
 [!code-cpp[System.Random#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random2.cpp#2)]
 [!code-csharp[System.Random#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random2.cs#2)]
 [!code-vb[System.Random#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random2.vb#2)]  
  
 <span data-ttu-id="8661a-291">Poniższy przykład generuje przypadkową liczbę całkowitą, która jest używana jako indeks do pobierania wartości ciągu z tablicy.</span><span class="sxs-lookup"><span data-stu-id="8661a-291">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="8661a-292">W .NET Framework 1.0 i 1.1 minimalne wdrożenie klasę pochodną <see cref="T:System.Random" /> wymagane zastępowanie <see cref="M:System.Random.Sample" /> metodę, aby zdefiniować nowe lub zmodyfikowane algorytmu do generowania liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-292">In the .NET Framework 1.0 and 1.1, a minimum implementation of a class derived from <see cref="T:System.Random" /> required overriding the <see cref="M:System.Random.Sample" /> method to define a new or modified algorithm for generating random numbers.</span></span> <span data-ttu-id="8661a-293">Klasa pochodna może następnie zależą od implementacji klasy podstawowej <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, i <see cref="M:System.Random.NextDouble" /> metod do wywołania implementacji klasy pochodnej <see cref="M:System.Random.Sample" /> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-293">The derived class could then rely on the base class implementation of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, and <see cref="M:System.Random.NextDouble" /> methods to call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.</span></span>  
  
<span data-ttu-id="8661a-294">W .NET Framework 2.0 i nowsze wersje, z zachowaniem <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, i <see cref="M:System.Random.NextBytes(System.Byte[])" /> metody zostały zmienione tak, aby te metody nie wywołuj implementacji klasy pochodnej <see cref="M:System.Random.Sample" /> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-294">In the .NET Framework 2.0 and later, the behavior of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, and <see cref="M:System.Random.NextBytes(System.Byte[])" /> methods have changed so that these methods do not necessarily call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.</span></span> <span data-ttu-id="8661a-295">W rezultacie klasy pochodne klasy <see cref="T:System.Random" /> docelowych programu .NET Framework 2.0 i nowszej powinien także zastąpić te trzy metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-295">As a result, classes derived from <see cref="T:System.Random" /> that target the .NET Framework 2.0 and later should also override these three methods.</span></span></para></block>
    <block subset="none" type="usage"><para><span data-ttu-id="8661a-296">Implementacja generator liczb losowych w <see cref="T:System.Random" /> klasy nie jest gwarantowane pozostają takie same w różnych wersjach głównych programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="8661a-296">The implementation of the random number generator in the <see cref="T:System.Random" /> class isn't guaranteed to remain the same across major versions of the .NET Framework.</span></span> <span data-ttu-id="8661a-297">Co w efekcie nie należy zakładać, że tego samego inicjatora spowodują tę samą sekwencję pseudolosową w różnych wersjach programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="8661a-297">As a result, you shouldn't assume that the same seed will result in the same pseudo-random sequence in different versions of the .NET Framework.</span></span></para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8661a-298">Inicjuje nowe wystąpienie klasy <see cref="T:System.Random" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8661a-298">Initializes a new instance of the <see cref="T:System.Random" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8661a-299">Inicjuje nowe wystąpienie klasy <see cref="T:System.Random" /> klasy za pomocą inicjatora zależne od czasu domyślnie.</span><span class="sxs-lookup"><span data-stu-id="8661a-299">Initializes a new instance of the <see cref="T:System.Random" /> class, using a time-dependent default seed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8661a-300">Wartość domyślna, inicjator jest tworzony na podstawie zegara systemowego i skończoną rozdzielczości.</span><span class="sxs-lookup"><span data-stu-id="8661a-300">The default seed value is derived from the system clock and has finite resolution.</span></span> <span data-ttu-id="8661a-301">W wyniku innego <xref:System.Random> obiektów, które są tworzone w odstępie czasu Zamknij przez wywołanie konstruktora domyślnego mają identyczne domyślnymi wartościami inicjującymi i dlatego dadzą identyczne zestawy warunków o losowych liczb.</span><span class="sxs-lookup"><span data-stu-id="8661a-301">As a result, different <xref:System.Random> objects that are created in close succession by a call to the default constructor will have identical default seed values and, therefore, will produce identical sets of random numbers.</span></span> <span data-ttu-id="8661a-302">Można uniknąć tego problemu przy użyciu pojedynczej <xref:System.Random> obiektu umożliwiającą wygenerowanie wszystkich liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-302">This problem can be avoided by using a single <xref:System.Random> object to generate all random numbers.</span></span> <span data-ttu-id="8661a-303">Można również obejść go przy użyciu inicjatora wartości zwracane przez zegar systemowy i następnie jawnie podając tej nowej wartości inicjatora do <xref:System.Random.%23ctor%28System.Int32%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="8661a-303">You can also work around it by modifying the seed value returned by the system clock and then explicitly providing this new seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="8661a-304">Aby uzyskać więcej informacji, zobacz <xref:System.Random.%23ctor%28System.Int32%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="8661a-304">For more information, see the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="8661a-305">Wywołania tego konstruktora, jeśli chcesz, aby Twoje generator liczb losowych do wygenerowania losowych sekwencji liczb.</span><span class="sxs-lookup"><span data-stu-id="8661a-305">Call this constructor if you want your random number generator to generate a random sequence of numbers.</span></span> <span data-ttu-id="8661a-306">Aby wygenerować stały sekwencji liczb losowych, który ma być takie same dla różnych generatorów liczb losowych, należy wywołać <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor wartością inicjatora stałej.</span><span class="sxs-lookup"><span data-stu-id="8661a-306">To generate a fixed  sequence of random numbers that will be the same for different random number generators, call the <xref:System.Random.%23ctor%28System.Int32%29> constructor with a fixed seed value .</span></span> <span data-ttu-id="8661a-307">To <xref:System.Random> przeciążenia konstruktora jest często używany podczas testowania aplikacji, które używają liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-307">This <xref:System.Random> constructor overload is frequently used when testing apps that use random numbers.</span></span>  
  
 <span data-ttu-id="8661a-308">Po został uruchomiony generator liczb losowych, należy wywołać poszczególnych <xref:System.Random> metod, takich jak <xref:System.Random.Next> lub <xref:System.Random.NextDouble>w celu generowania liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-308">Once you've instantiated the random number generator, you call individual <xref:System.Random> methods, such as <xref:System.Random.Next> or <xref:System.Random.NextDouble>, to generate random numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8661a-309">W poniższym przykładzie użyto domyślnego konstruktora do utworzenia wystąpienia trzech <xref:System.Random> obiektów i wyświetla sekwencję pięciu losowych liczb całkowitych dla każdego.</span><span class="sxs-lookup"><span data-stu-id="8661a-309">The following example uses the default constructor to instantiate three <xref:System.Random> objects and displays a sequence of five random integers for each.</span></span> <span data-ttu-id="8661a-310">Ponieważ pierwsze dwa <xref:System.Random> obiekty są tworzone w odstępie czasu Zamknij, są tworzone przy użyciu inicjatora identyczne wartości na podstawie zegara systemowego i dlatego produkują identyczne sekwencji liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-310">Because the first two <xref:System.Random> objects are created in close succession, they are instantiated using identical seed values based on the system clock and, therefore, they produce an identical sequence of random numbers.</span></span> <span data-ttu-id="8661a-311">Z drugiej strony, domyślny konstruktor obiektu trzeci <xref:System.Random> obiektu jest wywoływana po dwóch sekund opóźnienia spowodowane przez wywołanie metody <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-311">On the other hand, the default constructor of the third <xref:System.Random> object is called after a two-second delay caused by calling the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8661a-312">Ponieważ to daje wartość inicjatora różnych trzeci <xref:System.Random> obiektu, wywołuje inną kombinację liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-312">Because this produces a different seed value for the third <xref:System.Random> object, it produces a different sequence of random numbers.</span></span>  
  
 [!code-csharp[System.Random.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor1.cs#2)]
 [!code-vb[System.Random.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random (int Seed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 Seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Seed As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random(int Seed);" />
      <MemberSignature Language="F#" Value="new Random : int -&gt; Random" Usage="new System.Random Seed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Seed"><span data-ttu-id="8661a-313">Liczba, używane do obliczania wartość początkową dla pseudolosową numer sekwencji.</span><span class="sxs-lookup"><span data-stu-id="8661a-313">A number used to calculate a starting value for the pseudo-random number sequence.</span></span> <span data-ttu-id="8661a-314">Jeśli określono wartość ujemną, jest używana wartość bezwzględną liczby.</span><span class="sxs-lookup"><span data-stu-id="8661a-314">If a negative number is specified, the absolute value of the number is used.</span></span></param>
        <summary><span data-ttu-id="8661a-315">Inicjuje nowe wystąpienie klasy <see cref="T:System.Random" /> klasy przy użyciu wartości inicjatora określona.</span><span class="sxs-lookup"><span data-stu-id="8661a-315">Initializes a new instance of the <see cref="T:System.Random" /> class, using the specified seed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8661a-316">Podawania wartości inicjatora identyczne do różnych <xref:System.Random> obiektów powoduje, że każde wystąpienie wygenerować identyczne sekwencje liczby losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-316">Providing an identical seed value to different <xref:System.Random> objects causes each instance to produce identical sequences of random numbers.</span></span> <span data-ttu-id="8661a-317">Często jest to wykonywane podczas testowania aplikacji, które zależą od generatorów liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-317">This is often done when testing apps that rely on random number generators.</span></span>  
  
 <span data-ttu-id="8661a-318">Jeśli aplikacja wymaga różnych sekwencji liczb losowych, należy wywołać ten konstruktor wielokrotnie z wartościami inicjującymi różne.</span><span class="sxs-lookup"><span data-stu-id="8661a-318">If your application requires different random number sequences, invoke this constructor repeatedly with different seed values.</span></span> <span data-ttu-id="8661a-319">Jednym ze sposobów uzyskiwania wartości inicjatora unikatowy jest zapewnienie zależne od czasu.</span><span class="sxs-lookup"><span data-stu-id="8661a-319">One way to produce a unique seed value is to make it time-dependent.</span></span> <span data-ttu-id="8661a-320">Na przykład dziedziczyć wartość początkową jako zegara systemowego <xref:System.Random.%23ctor> jest przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="8661a-320">For example, derive the seed value from the system clock, as the <xref:System.Random.%23ctor> overload does.</span></span> <span data-ttu-id="8661a-321">Jednak zegara systemowego może nie mieć wystarczającą rozdzielczość zapewnienie różnych wywołania tego konstruktora z wartością innego inicjatora.</span><span class="sxs-lookup"><span data-stu-id="8661a-321">However, the system clock might not have sufficient resolution to provide different invocations of this constructor with a different seed value.</span></span> <span data-ttu-id="8661a-322">Skutkuje to generatorów liczb losowych, które generują identyczny sekwencji pseudolosową liczb, zgodnie z przedstawionymi pierwsze dwa <xref:System.Random> obiektów w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="8661a-322">This results in random number generators that generate identical sequences of pseudo-random numbers, as illustrated by the first two <xref:System.Random> objects in the following example.</span></span> <span data-ttu-id="8661a-323">Aby tego uniknąć, należy zastosować algorytm odróżnienie wartości początkowej, w każdym wywołaniem lub wywołanie <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> metodę, aby upewnić się, udostępnia każdego konstruktora wartością inicjatora różnych.</span><span class="sxs-lookup"><span data-stu-id="8661a-323">To prevent this, apply an algorithm to differentiate the seed value in each invocation, or call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to ensure that you provide each constructor with a different seed value.</span></span>  
  
 [!code-csharp[System.Random.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor4.cs#4)]
 [!code-vb[System.Random.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor4.vb#4)]  
  
 <span data-ttu-id="8661a-324">Innym rozwiązaniem jest utworzenie wystąpienia jednego <xref:System.Random> obiektu służącego do generowania liczb losowych w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8661a-324">Another option is to instantiate a single <xref:System.Random> object that you use to generate all the random numbers in your application.</span></span> <span data-ttu-id="8661a-325">Daje to nieznacznie wyższa wydajność, ponieważ wystąpienia generator liczb losowych jest dość kosztowna.</span><span class="sxs-lookup"><span data-stu-id="8661a-325">This yields slightly better performance, since instantiating a random number generator is fairly expensive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8661a-326">Poniższy przykład tworzy <xref:System.Random> obiektów za pomocą konstruktora klasy, która przyjmuje parametr inicjatora i generuje sekwencję losowych liczb całkowitych oraz wartości podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="8661a-326">The following example creates <xref:System.Random> objects with the class constructor that takes a seed parameter and generates a sequence of random integers and doubles.</span></span> <span data-ttu-id="8661a-327">W przykładzie pokazano, że tej samej sekwencji jest generowany podczas <xref:System.Random> obiekt zostanie utworzony ponownie z parametrem Konstruktor i inicjatora.</span><span class="sxs-lookup"><span data-stu-id="8661a-327">The example illustrates that the same sequence is generated when the <xref:System.Random> object is created again with the constructor and seed parameter.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Next">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8661a-328">Zwraca losową liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="8661a-328">Returns a random integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next();" />
      <MemberSignature Language="F#" Value="abstract member Next : unit -&gt; int&#xA;override this.Next : unit -&gt; int" Usage="random.Next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8661a-329">Zwraca losową wartość nieujemną liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="8661a-329">Returns a non-negative random integer.</span></span></summary>
        <returns><span data-ttu-id="8661a-330">32-bitowa liczba całkowita ze znakiem jest większa niż lub równa 0 i mniejsza niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8661a-330">A 32-bit signed integer that is greater than or equal to 0 and less than <see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8661a-331"><xref:System.Random.Next%2A?displayProperty=nameWithType> generuje losową liczbę, którego wartość należy do zakresu od 0 do mniej niż <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8661a-331"><xref:System.Random.Next%2A?displayProperty=nameWithType> generates a random number whose value ranges from 0 to less than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8661a-332">Aby wygenerować losową liczbę, którego wartość należy do zakresu od 0 dodatnią liczbę, należy użyć <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-332">To generate a random number whose value ranges from 0 to some other positive number, use the <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="8661a-333">Aby wygenerować losową liczbę do innego zakresu, należy użyć <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-333">To generate a random number within a different range, use the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8661a-334">Poniższy przykład wykonuje wielokrotnego wywołania <xref:System.Random.Next%2A> metodę w celu wygenerowania określoną liczbę liczb losowych żądanej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="8661a-334">The following example makes repeated calls to the <xref:System.Random.Next%2A> method to generate a specific number of random numbers requested by the user.</span></span> <span data-ttu-id="8661a-335"><xref:System.Console.ReadLine%2A?displayProperty=nameWithType> Metoda jest używana do pobierania danych wejściowych klienta.</span><span class="sxs-lookup"><span data-stu-id="8661a-335">The <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method is used to get customer input.</span></span>  
  
 [!code-cpp[System.Random.Next#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next3.cpp#5)]
 [!code-csharp[System.Random.Next#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next3.cs#5)]
 [!code-vb[System.Random.Next#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next3.vb#5)]  
  
 <span data-ttu-id="8661a-336">Poniższy przykład pochodzi z klasy <xref:System.Random> na wygenerowanie sekwencji liczb losowych, których dystrybucja różni się od jednolity rozkład generowane przez <xref:System.Random.Sample%2A> metody klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="8661a-336">The following example derives a class from <xref:System.Random> to generate a sequence of random numbers whose distribution differs from the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span> <span data-ttu-id="8661a-337">Zastępuje ona <xref:System.Random.Sample%2A> metody w celu zapewnienia rozkład liczb losowych i zastąpień <xref:System.Random.Next%2A?displayProperty=nameWithType> metodę serii liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-337">It overrides the <xref:System.Random.Sample%2A> method to provide the distribution of random numbers, and overrides the <xref:System.Random.Next%2A?displayProperty=nameWithType> method to use series of random numbers.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8661a-338">Począwszy od programu .NET Framework w wersji 2.0, jeśli wyprowadzić klasę z <see cref="T:System.Random" /> i zastąpić <see cref="M:System.Random.Sample" /> metody, dystrybucji dostarczone przez implementację klasy pochodnej <see cref="M:System.Random.Sample" /> metoda nie jest używany w wywołania do klasy bazowej Implementacja <see cref="M:System.Random.Next" /> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-338">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next" /> method.</span></span> <span data-ttu-id="8661a-339">Zamiast tego jednolity rozkład zwrócony przez base <see cref="T:System.Random" /> klasa jest używana.</span><span class="sxs-lookup"><span data-stu-id="8661a-339">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="8661a-340">To zachowanie zwiększa ogólną wydajność <see cref="T:System.Random" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8661a-340">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="8661a-341">Aby zmienić to zachowanie, aby wywołać <see cref="M:System.Random.Sample" /> metody w klasie pochodnej, konieczne jest również przesłonięcie <see cref="M:System.Random.Next" /> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-341">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next" /> method.</span></span></para></block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int maxValue);" />
      <MemberSignature Language="F#" Value="abstract member Next : int -&gt; int&#xA;override this.Next : int -&gt; int" Usage="random.Next maxValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxValue"><span data-ttu-id="8661a-342">Wyłączne górną granicę losową liczbę do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="8661a-342">The exclusive upper bound of the random number to be generated.</span></span> <span data-ttu-id="8661a-343"><paramref name="maxValue" /> Musi być większa lub równa 0.</span><span class="sxs-lookup"><span data-stu-id="8661a-343"><paramref name="maxValue" /> must be greater than or equal to 0.</span></span></param>
        <summary><span data-ttu-id="8661a-344">Zwraca wartość nieujemną losową wartość całkowitą mniejszą niż określona wartość maksymalna.</span><span class="sxs-lookup"><span data-stu-id="8661a-344">Returns a non-negative random integer that is less than the specified maximum.</span></span></summary>
        <returns><span data-ttu-id="8661a-345">32-bitowa liczba całkowita ze znakiem jest większa niż lub równa 0 i mniejsza niż <paramref name="maxValue" />; oznacza to, że zakres zwracanych wartości zwykle obejmuje 0, ale nie <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8661a-345">A 32-bit signed integer that is greater than or equal to 0, and less than <paramref name="maxValue" />; that is, the range of return values ordinarily includes 0 but not <paramref name="maxValue" />.</span></span> <span data-ttu-id="8661a-346">Jednak jeśli <paramref name="maxValue" /> jest równa 0, <paramref name="maxValue" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="8661a-346">However, if <paramref name="maxValue" /> equals 0, <paramref name="maxValue" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8661a-347"><xref:System.Random.Next%28System.Int32%29> Przeciążenia zwraca losowych liczb całkowitych tego zakresu od 0 do `maxValue` - 1.</span><span class="sxs-lookup"><span data-stu-id="8661a-347">The <xref:System.Random.Next%28System.Int32%29> overload returns random integers that range from 0 to `maxValue` - 1.</span></span> <span data-ttu-id="8661a-348">Jednak jeśli `maxValue` wynosi 0, metoda zwróci wartość 0.</span><span class="sxs-lookup"><span data-stu-id="8661a-348">However, if `maxValue` is 0, the method returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8661a-349">Poniższy przykład generuje losowych liczb całkowitych przy użyciu różnych przeciążenia <xref:System.Random.Next%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-349">The following example generates random integers with various overloads of the <xref:System.Random.Next%2A> method.</span></span>  
  
 [!code-cpp[System.Random.Next#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next.cpp#1)]
 [!code-csharp[System.Random.Next#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next.cs#1)]
 [!code-vb[System.Random.Next#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next.vb#1)]  
  
 <span data-ttu-id="8661a-350">Poniższy przykład generuje przypadkową liczbę całkowitą, która jest używana jako indeks do pobierania wartości ciągu z tablicy.</span><span class="sxs-lookup"><span data-stu-id="8661a-350">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="8661a-351">Ponieważ najwyższy indeks tablicy jest jeden mniejsza od jego długości, wartość <xref:System.Array.Length%2A?displayProperty=nameWithType> właściwość jest dostarczany jako `maxValue` parametru.</span><span class="sxs-lookup"><span data-stu-id="8661a-351">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8661a-352"><paramref name="maxValue" /> jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="8661a-352"><paramref name="maxValue" /> is less than 0.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (minValue As Integer, maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int minValue, int maxValue);" />
      <MemberSignature Language="F#" Value="abstract member Next : int * int -&gt; int&#xA;override this.Next : int * int -&gt; int" Usage="random.Next (minValue, maxValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="8661a-353">Zwracane włącznie dolna granica liczbę losową.</span><span class="sxs-lookup"><span data-stu-id="8661a-353">The inclusive lower bound of the random number returned.</span></span></param>
        <param name="maxValue"><span data-ttu-id="8661a-354">Wyłączne górnej granicy liczby losowe są zwracane.</span><span class="sxs-lookup"><span data-stu-id="8661a-354">The exclusive upper bound of the random number returned.</span></span> <span data-ttu-id="8661a-355"><paramref name="maxValue" /> musi być większa lub równa <paramref name="minValue" />.</span><span class="sxs-lookup"><span data-stu-id="8661a-355"><paramref name="maxValue" /> must be greater than or equal to <paramref name="minValue" />.</span></span></param>
        <summary><span data-ttu-id="8661a-356">Zwraca losową liczbę całkowitą, która znajduje się w określonym zakresie.</span><span class="sxs-lookup"><span data-stu-id="8661a-356">Returns a random integer that is within a specified range.</span></span></summary>
        <returns><span data-ttu-id="8661a-357">32-bitowych całkowita większa lub równa <paramref name="minValue" /> i mniej niż <paramref name="maxValue" />; to, że zakres wartości zwracanych obejmuje <paramref name="minValue" /> , ale nie <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8661a-357">A 32-bit signed integer greater than or equal to <paramref name="minValue" /> and less than <paramref name="maxValue" />; that is, the range of return values includes <paramref name="minValue" /> but not <paramref name="maxValue" />.</span></span> <span data-ttu-id="8661a-358">Jeśli <paramref name="minValue" /> jest równa <paramref name="maxValue" />, <paramref name="minValue" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="8661a-358">If <paramref name="minValue" /> equals <paramref name="maxValue" />, <paramref name="minValue" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8661a-359"><xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Przeciążenia zwraca losowych liczb całkowitych w zakresie od `minValue` do `maxValue` - 1.</span><span class="sxs-lookup"><span data-stu-id="8661a-359">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> overload returns random integers that range from `minValue` to `maxValue` - 1.</span></span> <span data-ttu-id="8661a-360">Jednak jeśli `maxValue` jest równa `minValue`, metoda zwraca `minValue`.</span><span class="sxs-lookup"><span data-stu-id="8661a-360">However, if `maxValue` equals `minValue`, the method returns `minValue`.</span></span>  
  
 <span data-ttu-id="8661a-361">W przeciwieństwie do innych przeciążeń <xref:System.Random.Next%2A> metody zwracają wartości tylko wartość nieujemną, ta metoda może zwracać ujemna losową wartość całkowitą.</span><span class="sxs-lookup"><span data-stu-id="8661a-361">Unlike the other overloads of the <xref:System.Random.Next%2A> method, which return only non-negative values, this method can return a negative random integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8661a-362">W poniższym przykładzie użyto <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metodę w celu wygenerowania losowych liczb całkowitych z trzech różnych zakresów.</span><span class="sxs-lookup"><span data-stu-id="8661a-362">The following example uses the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to generate random integers with three distinct ranges.</span></span> <span data-ttu-id="8661a-363">Należy pamiętać, że dokładnie wynika z przykładu zależy od wartości inicjatora dostarczane przez system przekazany do <xref:System.Random> konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="8661a-363">Note that the exact output from the example depends on the system-supplied seed value passed to the <xref:System.Random> class constructor.</span></span>  
  
 [!code-cpp[System.Random.Next#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next2.cpp#2)]
 [!code-csharp[System.Random.Next#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/Next2.cs#2)]
 [!code-vb[System.Random.Next#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next2.vb#2)]  
  
 <span data-ttu-id="8661a-364">Poniższy przykład generuje przypadkową liczbę całkowitą, która jest używana jako indeks do pobierania wartości ciągu z tablicy.</span><span class="sxs-lookup"><span data-stu-id="8661a-364">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="8661a-365">Ponieważ najwyższy indeks tablicy jest jeden mniejsza od jego długości, wartość <xref:System.Array.Length%2A?displayProperty=nameWithType> właściwość jest dostarczany jako `maxValue` parametru.</span><span class="sxs-lookup"><span data-stu-id="8661a-365">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next4.cpp#4)]
 [!code-csharp[System.Random.Next#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next4.cs#4)]
 [!code-vb[System.Random.Next#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8661a-366"><paramref name="minValue" /> jest większa niż <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8661a-366"><paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="8661a-367">Począwszy od programu .NET Framework w wersji 2.0, jeśli wyprowadzić klasę z <see cref="T:System.Random" /> i zastąpić <see cref="M:System.Random.Sample" /> metody, dystrybucji dostarczone przez implementację klasy pochodnej <see cref="M:System.Random.Sample" /> metoda nie jest używany w wywołania do klasy bazowej Implementacja <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> przeciążenia metody, jeśli różnica między <paramref name="minValue" /> i <paramref name="maxValue" /> parametrów jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8661a-367">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload if the difference between the <paramref name="minValue" /> and <paramref name="maxValue" /> parameters is greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8661a-368">Zamiast tego jednolity rozkład zwrócony przez base <see cref="T:System.Random" /> klasa jest używana.</span><span class="sxs-lookup"><span data-stu-id="8661a-368">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="8661a-369">To zachowanie zwiększa ogólną wydajność <see cref="T:System.Random" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8661a-369">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="8661a-370">Aby zmienić to zachowanie, aby wywołać <see cref="M:System.Random.Sample" /> metody w klasie pochodnej, konieczne jest również przesłonięcie <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-370">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload.</span></span></para></block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member NextBytes : byte[] -&gt; unit&#xA;override this.NextBytes : byte[] -&gt; unit" Usage="random.NextBytes buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8661a-371">Tablica bajtów, które mają zawierać liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-371">An array of bytes to contain random numbers.</span></span></param>
        <summary><span data-ttu-id="8661a-372">Wypełnia elementów określonej tablicy bajtów przy użyciu liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-372">Fills the elements of a specified array of bytes with random numbers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8661a-373">Każdy element tablicy bajtów jest równa losową liczbę większy lub równy 0 i mniejsza niż lub równa <xref:System.Byte.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="8661a-373">Each element of the array of bytes is set to a random number greater than or equal to 0, and less than or equal to <xref:System.Byte.MaxValue>.</span></span>  
  
 <span data-ttu-id="8661a-374">Na przykład, aby wygenerować zabezpieczone kryptograficznie losową liczbę umożliwiających tworzenie losowego hasła, użyć metody takie jak <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8661a-374">For example, to generate a cryptographically secured random number suitable for creating a random password, use a method such as <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8661a-375">Poniższy przykład pokazuje sposób użycia <xref:System.Random.NextBytes%2A> metodę, aby wypełnić tablicę bajtów losowych wartości bajtów.</span><span class="sxs-lookup"><span data-stu-id="8661a-375">The following example demonstrates how to use the <xref:System.Random.NextBytes%2A> method to fill an array of bytes with random byte values.</span></span>  
  
 [!code-cpp[Classic Random.NextBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Random.NextBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CS/source.cs#1)]
 [!code-vb[Classic Random.NextBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8661a-376"><paramref name="buffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8661a-376"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="8661a-377">Począwszy od programu .NET Framework w wersji 2.0, jeśli wyprowadzić klasę z <see cref="T:System.Random" /> i zastąpić <see cref="M:System.Random.Sample" /> metody, dystrybucji dostarczone przez implementację klasy pochodnej <see cref="M:System.Random.Sample" /> metoda nie jest używany w wywołania do klasy bazowej Implementacja <see cref="M:System.Random.NextBytes(System.Byte[])" /> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-377">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span> <span data-ttu-id="8661a-378">Zamiast tego jednolity rozkład zwrócony przez base <see cref="T:System.Random" /> klasa jest używana.</span><span class="sxs-lookup"><span data-stu-id="8661a-378">Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="8661a-379">To zachowanie zwiększa ogólną wydajność <see cref="T:System.Random" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8661a-379">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="8661a-380">Aby zmienić to zachowanie, aby wywołać <see cref="M:System.Random.Sample" /> metody w klasie pochodnej, konieczne jest również przesłonięcie <see cref="M:System.Random.NextBytes(System.Byte[])" /> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-380">To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span></para></block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member NextBytes : Span&lt;byte&gt; -&gt; unit&#xA;override this.NextBytes : Span&lt;byte&gt; -&gt; unit" Usage="random.NextBytes buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextDouble">
      <MemberSignature Language="C#" Value="public virtual double NextDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NextDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double NextDouble();" />
      <MemberSignature Language="F#" Value="abstract member NextDouble : unit -&gt; double&#xA;override this.NextDouble : unit -&gt; double" Usage="random.NextDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8661a-381">Zwraca losową liczbę zmiennoprzecinkową, która jest większa niż lub równy od 0,0 i mniejszą niż 1,0.</span><span class="sxs-lookup"><span data-stu-id="8661a-381">Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0.</span></span></summary>
        <returns><span data-ttu-id="8661a-382">Podwójnej precyzji ruchomy punkt liczba, która jest większa niż lub równy od 0,0 i mniejszą niż 1,0.</span><span class="sxs-lookup"><span data-stu-id="8661a-382">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8661a-383">Rzeczywiste górnej granicy liczby losowe zwracanego przez tę metodę jest 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="8661a-383">The actual upper bound of the random number returned by this method is 0.99999999999999978.</span></span>  
  
 <span data-ttu-id="8661a-384">Aby pobrać losowych wartości zmiennoprzecinkowych w zakresie innym niż od 0,0 do 1,0, zobacz sekcję "Pobieranie wartości zmiennoprzecinkowych w określonym zakresie" <xref:System.Random> temat poświęcony klasie.</span><span class="sxs-lookup"><span data-stu-id="8661a-384">To retrieve random floating-point values within a range other than 0.0 and 1.0, see the "Retrieve floating-point values in a specified range" section of the <xref:System.Random> class topic.</span></span>  
  
 <span data-ttu-id="8661a-385">Ta metoda jest w publicznej wersji Metoda chroniona <xref:System.Random.Sample%2A>.</span><span class="sxs-lookup"><span data-stu-id="8661a-385">This method is the public version of the protected method, <xref:System.Random.Sample%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8661a-386">W poniższym przykładzie użyto <xref:System.Random.NextDouble%2A> metodę w celu wygenerowania sekwencje losowych wartości podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="8661a-386">The following example uses the <xref:System.Random.NextDouble%2A> method to generate sequences of random doubles.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 <span data-ttu-id="8661a-387">Poniższy przykład wywołuje <xref:System.Random.NextDouble%2A> metodę w celu wygenerowania losowych 100 liczby i wyświetla ich dystrybucji częstotliwości.</span><span class="sxs-lookup"><span data-stu-id="8661a-387">The following example calls the <xref:System.Random.NextDouble%2A> method to generate 100 random numbers and displays their frequency distribution.</span></span>  
  
 [!code-csharp[System.Random.NextDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.random.nextdouble/cs/nextdouble1.cs#2)]
 [!code-vb[System.Random.NextDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.random.nextdouble/vb/nextdouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sample">
      <MemberSignature Language="C#" Value="protected virtual double Sample ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float64 Sample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Sample" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Sample () As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual double Sample();" />
      <MemberSignature Language="F#" Value="abstract member Sample : unit -&gt; double&#xA;override this.Sample : unit -&gt; double" Usage="random.Sample " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8661a-388">Zwraca liczbę losową zmiennoprzecinkową z zakresu od 0,0 do 1,0.</span><span class="sxs-lookup"><span data-stu-id="8661a-388">Returns a random floating-point number between 0.0 and 1.0.</span></span></summary>
        <returns><span data-ttu-id="8661a-389">Podwójnej precyzji ruchomy punkt liczba, która jest większa niż lub równy od 0,0 i mniejszą niż 1,0.</span><span class="sxs-lookup"><span data-stu-id="8661a-389">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8661a-390">Aby wygenerować różne losowa dystrybucja lub różnych losowych liczb generator regułę, należy wyprowadzić klasę z <xref:System.Random> klasy, a także Przesłoń <xref:System.Random.Sample%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-390">To produce a different random distribution or a different random number generator principle, derive a class from the <xref:System.Random> class and override the <xref:System.Random.Sample%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8661a-391"><xref:System.Random.Sample%2A> Metodą jest `protected`, co oznacza, że jest dostępny tylko w obrębie <xref:System.Random> klasy i jej klasy pochodne.</span><span class="sxs-lookup"><span data-stu-id="8661a-391">The <xref:System.Random.Sample%2A> method is `protected`, which means that it is accessible only within the <xref:System.Random> class and its derived classes.</span></span> <span data-ttu-id="8661a-392">Aby wygenerować losową liczbę od 0 do 1 z <xref:System.Random> wystąpienia, wywołaj <xref:System.Random.NextDouble%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-392">To generate a random number between 0 and 1 from a <xref:System.Random> instance, call the <xref:System.Random.NextDouble%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8661a-393">Poniższy przykład pochodzi z klasy <xref:System.Random> i zastępuje <xref:System.Random.Sample%2A> metodę w celu wygenerowania dystrybucji liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="8661a-393">The following example derives a class from <xref:System.Random> and overrides the <xref:System.Random.Sample%2A> method to generate a distribution of random numbers.</span></span> <span data-ttu-id="8661a-394">Tej dystrybucji jest inny niż jednolity rozkład generowane przez <xref:System.Random.Sample%2A> metody klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="8661a-394">This distribution is different than the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8661a-395">Począwszy od programu .NET Framework w wersji 2.0, jeśli wyprowadzić klasę z <see cref="T:System.Random" /> i zastąpić <see cref="M:System.Random.Sample" /> metody, dystrybucji dostarczone przez implementację klasy pochodnej <see cref="M:System.Random.Sample" /> metoda nie jest używany w wywołania do klasy bazowej Implementacja następujących metod:</span><span class="sxs-lookup"><span data-stu-id="8661a-395">Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the following methods:</span></span> 
<span data-ttu-id="8661a-396"><see cref="M:System.Random.NextBytes(System.Byte[])" /> Metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-396">-   The <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</span></span>  
  
<span data-ttu-id="8661a-397"><see cref="M:System.Random.Next" /> Metody.</span><span class="sxs-lookup"><span data-stu-id="8661a-397">-   The <see cref="M:System.Random.Next" /> method.</span></span>  
  
<span data-ttu-id="8661a-398"><see cref="M:System.Random.Next(System.Int32,System.Int32)" /> Metody, jeśli (<paramref name="maxValue" /> - <paramref name="minValue" />) jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8661a-398">-   The <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method, if (<paramref name="maxValue" /> - <paramref name="minValue" />) is greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="8661a-399">Zamiast tego jednolity rozkład dostarczone przez base <see cref="T:System.Random" /> klasa jest używana.</span><span class="sxs-lookup"><span data-stu-id="8661a-399">Instead, the uniform distribution provided by the base <see cref="T:System.Random" /> class is used.</span></span> <span data-ttu-id="8661a-400">To zachowanie zwiększa ogólną wydajność <see cref="T:System.Random" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8661a-400">This behavior improves the overall performance of the <see cref="T:System.Random" /> class.</span></span> <span data-ttu-id="8661a-401">Aby zmienić to zachowanie, aby wywołać implementację <see cref="M:System.Random.Sample" /> metody w klasie pochodnej, możesz również zastąpić zachowanie te trzy elementy członkowskie.</span><span class="sxs-lookup"><span data-stu-id="8661a-401">To modify this behavior to call the implementation of the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the behavior of these three members.</span></span> <span data-ttu-id="8661a-402">Przykład stanowi ilustrację.</span><span class="sxs-lookup"><span data-stu-id="8661a-402">The example provides an illustration.</span></span></para></block>
        <altmember cref="M:System.Random.NextDouble" />
      </Docs>
    </Member>
  </Members>
</Type>