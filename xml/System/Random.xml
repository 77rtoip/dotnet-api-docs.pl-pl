<Type Name="Random" FullName="System.Random">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db0be843724a3e5db9bde798d384dd7ecf5a6c0f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36429197" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Random" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Random extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Random" />
  <TypeSignature Language="VB.NET" Value="Public Class Random" />
  <TypeSignature Language="C++ CLI" Value="public ref class Random" />
  <TypeSignature Language="F#" Value="type Random = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4af46-101">Reprezentuje pseudolosowego generatora liczb, który to urządzenie, które tworzy sekwencję liczb, które spełniają określone wymagania statystyczne losowości.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4af46-101">Represents a pseudo-random number generator, which is a device that produces a sequence of numbers that meet certain statistical requirements for randomness.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af46-102">Numery pseudolosowego można wybrać z równym prawdopodobieństwem skończoną zbioru liczb.</span><span class="sxs-lookup"><span data-stu-id="4af46-102">Pseudo-random numbers are chosen with equal probability from a finite set of numbers.</span></span> <span data-ttu-id="4af46-103">Wybrany liczby nie są losowy, ponieważ matematyczne algorytm jest używany do wybierania je, ale są one dostatecznie losowe do celów praktycznych.</span><span class="sxs-lookup"><span data-stu-id="4af46-103">The chosen numbers are not completely random because a mathematical algorithm is used to select them, but they are sufficiently random for practical purposes.</span></span> <span data-ttu-id="4af46-104">Bieżąca implementacja <xref:System.Random> klasy jest oparta na zmodyfikowanej wersji Donalda E. Knuth subtraktywne generator algorytmu liczb.</span><span class="sxs-lookup"><span data-stu-id="4af46-104">The current implementation of the <xref:System.Random> class is based on a modified version of Donald E. Knuth's subtractive random number generator algorithm.</span></span> <span data-ttu-id="4af46-105">Aby uzyskać więcej informacji zobacz D. E.</span><span class="sxs-lookup"><span data-stu-id="4af46-105">For more information, see D. E.</span></span> <span data-ttu-id="4af46-106">Knuth.</span><span class="sxs-lookup"><span data-stu-id="4af46-106">Knuth.</span></span> <span data-ttu-id="4af46-107">*Kompozycji programistycznych wolumin 2: Seminumerical algorytmy*.</span><span class="sxs-lookup"><span data-stu-id="4af46-107">*The Art of Computer Programming, Volume 2: Seminumerical Algorithms*.</span></span> <span data-ttu-id="4af46-108">Addison-Wesley, odczytu, MA wydanie trzecie 1997.</span><span class="sxs-lookup"><span data-stu-id="4af46-108">Addison-Wesley, Reading, MA, third edition, 1997.</span></span>  
  
 <span data-ttu-id="4af46-109">Aby wygenerować kryptograficznie bezpiecznego liczbę losową, który jest odpowiedni dla tworzenia losowe hasło, należy użyć <xref:System.Security.Cryptography.RNGCryptoServiceProvider> klasy lub pochodzić od klasy <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4af46-109">To generate a cryptographically secure random number, such as one that's suitable for creating a random password, use the <xref:System.Security.Cryptography.RNGCryptoServiceProvider> class or derive a class from <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4af46-110">W tym temacie:</span><span class="sxs-lookup"><span data-stu-id="4af46-110">In this topic:</span></span>  
  
 <span data-ttu-id="4af46-111">[Tworzenie wystąpień generatora liczb losowych](#Instantiate) </span><span class="sxs-lookup"><span data-stu-id="4af46-111">[Instantiating the random number generator](#Instantiate) </span></span>  
 <span data-ttu-id="4af46-112">[Unikanie wiele wystąpień](#Multiple) </span><span class="sxs-lookup"><span data-stu-id="4af46-112">[Avoiding multiple instantiations](#Multiple) </span></span>  
 <span data-ttu-id="4af46-113">[System.Random bezpieczeństwa klasy i wątku](#ThreadSafety) </span><span class="sxs-lookup"><span data-stu-id="4af46-113">[The System.Random class and thread safety](#ThreadSafety) </span></span>  
 <span data-ttu-id="4af46-114">[Generowanie różnego rodzaju liczby losowe](#Functionality) </span><span class="sxs-lookup"><span data-stu-id="4af46-114">[Generating different types of random numbers](#Functionality) </span></span>  
 <span data-ttu-id="4af46-115">[Podstawiając własne algorytmu](#Overriding) </span><span class="sxs-lookup"><span data-stu-id="4af46-115">[Substituting your own algorithm](#Overriding) </span></span>  
 <span data-ttu-id="4af46-116">[Jak używać System.Random do...](#Operations) </span><span class="sxs-lookup"><span data-stu-id="4af46-116">[How do you use System.Random to…](#Operations) </span></span>  
 [<span data-ttu-id="4af46-117">Taką samą sekwencję losowych wartości do pobrania</span><span class="sxs-lookup"><span data-stu-id="4af46-117">Retrieve the same sequence of random values</span></span>](#Same)  
 [<span data-ttu-id="4af46-118">Pobierz unikatowy sekwencje losowych wartości</span><span class="sxs-lookup"><span data-stu-id="4af46-118">Retrieve unique sequences of random values</span></span>](#Unique)  
 [<span data-ttu-id="4af46-119">Pobieranie liczby całkowite w określonym zakresie</span><span class="sxs-lookup"><span data-stu-id="4af46-119">Retrieve integers in a specified range</span></span>](#Range)  
 [<span data-ttu-id="4af46-120">Pobieranie liczby całkowite z określonej liczby miejsc po przecinku</span><span class="sxs-lookup"><span data-stu-id="4af46-120">Retrieve integers with a specified number of digits</span></span>](#Digits)  
 [<span data-ttu-id="4af46-121">Pobieranie wartości zmiennoprzecinkowych w określonym zakresie</span><span class="sxs-lookup"><span data-stu-id="4af46-121">Retrieve floating-point values in a specified range</span></span>](#Floats)  
 [<span data-ttu-id="4af46-122">Generowanie losowych wartości logiczna</span><span class="sxs-lookup"><span data-stu-id="4af46-122">Generate random Boolean values</span></span>](#Boolean)  
 [<span data-ttu-id="4af46-123">Generowanie losowe 64-bitowych liczb całkowitych</span><span class="sxs-lookup"><span data-stu-id="4af46-123">Generate random 64-bit integers</span></span>](#Long)  
 [<span data-ttu-id="4af46-124">Pobrać bajtów w określonym zakresie</span><span class="sxs-lookup"><span data-stu-id="4af46-124">Retrieve bytes in a specified range</span></span>](#Bytes)  
 [<span data-ttu-id="4af46-125">Losowo pobrać element z kolekcji lub tablicy</span><span class="sxs-lookup"><span data-stu-id="4af46-125">Retrieve an element from an array or collection at random</span></span>](#Array)  
 [<span data-ttu-id="4af46-126">Pobierz unikatowy element z kolekcji lub tablicy</span><span class="sxs-lookup"><span data-stu-id="4af46-126">Retrieve a unique element from an array or collection</span></span>](#UniqueArray)  
  
<a name="Instantiate"></a>   
## <a name="instantiating-the-random-number-generator"></a><span data-ttu-id="4af46-127">Tworzenie wystąpień generatora liczb losowych</span><span class="sxs-lookup"><span data-stu-id="4af46-127">Instantiating the random number generator</span></span>  
 <span data-ttu-id="4af46-128">Wystąpienia generatora liczb losowych podając wartości początkowej (początkową wartość pseudolosowego algorytmu generowania liczb), aby <xref:System.Random.%23ctor%2A> konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="4af46-128">You instantiate the random number generator by providing a seed value (a starting value for the pseudo-random number generation algorithm) to a <xref:System.Random.%23ctor%2A> class constructor.</span></span>  <span data-ttu-id="4af46-129">Można podać wartości początkowej, jawnie lub niejawnie:</span><span class="sxs-lookup"><span data-stu-id="4af46-129">You can supply the seed value either explicitly or implicitly:</span></span>  
  
-   <span data-ttu-id="4af46-130"><xref:System.Random.%23ctor%28System.Int32%29> Konstruktor korzysta wartość jawne inicjatora.</span><span class="sxs-lookup"><span data-stu-id="4af46-130">The <xref:System.Random.%23ctor%28System.Int32%29> constructor uses an explicit seed value that you supply.</span></span>  
  
-   <span data-ttu-id="4af46-131"><xref:System.Random.%23ctor> Konstruktor korzysta z zegarem systemowym podania wartości inicjatora.</span><span class="sxs-lookup"><span data-stu-id="4af46-131">The <xref:System.Random.%23ctor> constructor uses the system clock to provide a seed value.</span></span> <span data-ttu-id="4af46-132">Jest to najczęściej o uruchamianiu generatora liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-132">This is the most common way of instantiating the random number generator.</span></span>  
  
 <span data-ttu-id="4af46-133">Jeśli tego samego inicjatora jest używana do oddzielnego <xref:System.Random> obiekty, zostanie wygenerowany dla tej samej serii liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-133">If the same seed is used for separate <xref:System.Random> objects, they will generate the same series of random numbers.</span></span> <span data-ttu-id="4af46-134">Może to być przydatne do tworzenia zestawu testów, który przetwarza losowych wartości lub dla odtwarzanie gry wyprowadzonych swoje dane z liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-134">This can be useful for creating a test suite that processes random values, or for replaying games that derive their data from random numbers.</span></span> <span data-ttu-id="4af46-135">Jednak należy pamiętać, że <xref:System.Random> obiektów w procesów uruchomionych w różnych wersji programu .NET Framework może zwrócić innej serii liczb losowych, nawet wtedy, gdy są one wystąpienia inicjatora identycznymi wartościami.</span><span class="sxs-lookup"><span data-stu-id="4af46-135">However, note that <xref:System.Random> objects in processes running under different versions of the .NET Framework may return different series of random numbers even if they're instantiated with identical seed values.</span></span>  
  
 <span data-ttu-id="4af46-136">Do tworzenia różnych sekwencji liczb losowych, możesz wprowadzić wartości początkowej zależnych od czasu, a tym samym produkujących innej serii z każdym nowe wystąpienie klasy <xref:System.Random>.</span><span class="sxs-lookup"><span data-stu-id="4af46-136">To produce different sequences of random numbers, you can make the seed value time-dependent, thereby producing a different series with each new instance of <xref:System.Random>.</span></span> <span data-ttu-id="4af46-137">Sparametryzowane <xref:System.Random.%23ctor%28System.Int32%29> Konstruktor może zająć <xref:System.Int32> wartość na podstawie ich liczba w bieżącą godzinę, podczas gdy bez parametrów <xref:System.Random.%23ctor> Konstruktor korzysta zegara systemowego do generowania swojej wartości początkowej.</span><span class="sxs-lookup"><span data-stu-id="4af46-137">The parameterized <xref:System.Random.%23ctor%28System.Int32%29> constructor can take an <xref:System.Int32> value based on the number of ticks in the current time, whereas the parameterless <xref:System.Random.%23ctor> constructor uses the system clock to generate its seed value.</span></span> <span data-ttu-id="4af46-138">Jednak ponieważ zegar ma rozdzielczość ograniczone, przy użyciu konstruktora bez parametrów do utworzenia różnych <xref:System.Random> obiektów kolejno Zamknij tworzy losowe numer generatory, które powodują powstanie identyczne sekwencji liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-138">However, because the clock has finite resolution, using the parameterless constructor to create different <xref:System.Random> objects in close succession creates random number generators that produce identical sequences of random numbers.</span></span> <span data-ttu-id="4af46-139">Poniższy przykład przedstawia sposób dwóch <xref:System.Random> obiektów, które są tworzone kolejno Zamknij Generowanie serii identycznych liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-139">The following example illustrates how two <xref:System.Random> objects that are instantiated in close succession generate an identical series of random numbers.</span></span> <span data-ttu-id="4af46-140">W większości systemów Windows <xref:System.Random> obiektów utworzonych w ciągu 15 milisekund siebie prawdopodobnie identycznych inicjatora wartości.</span><span class="sxs-lookup"><span data-stu-id="4af46-140">On most Windows systems, <xref:System.Random> objects created within 15 milliseconds of one another are likely to have identical seed values.</span></span>  
  
 [!code-cpp[System.Random#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random1.cpp#1)]
 [!code-csharp[System.Random#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random1.cs#1)]
 [!code-vb[System.Random#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random1.vb#1)]  
  
 <span data-ttu-id="4af46-141">Aby uniknąć tego problemu, należy utworzyć jeden <xref:System.Random> obiektu zamiast wielu obiektów.</span><span class="sxs-lookup"><span data-stu-id="4af46-141">To avoid this problem, create a single <xref:System.Random> object instead of multiple objects.</span></span>  
  
<a name="Multiple"></a>   
## <a name="avoiding-multiple-instantiations"></a><span data-ttu-id="4af46-142">Unikanie wiele wystąpień</span><span class="sxs-lookup"><span data-stu-id="4af46-142">Avoiding multiple instantiations</span></span>  
 <span data-ttu-id="4af46-143">Inicjowanie dwóch losowych generatory numer w pętli ścisłej lub w krótkim odstępie czasu tworzy dwa losowe generatory numer powodującymi identyczne sekwencji liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-143">Initializing two random number generators in a tight loop or in rapid succession creates two random number generators that can produce identical sequences of random numbers.</span></span> <span data-ttu-id="4af46-144">W większości przypadków nie jest celem dewelopera i może prowadzić do problemów z wydajnością, ponieważ tworzenie wystąpień i Inicjowanie generator liczb losowych jest stosunkowo drogie.</span><span class="sxs-lookup"><span data-stu-id="4af46-144">In most cases, this is not the developer's intent and can lead to performance issues, because instantiating and initializing a random number generator is a relatively expensive process.</span></span>  
  
 <span data-ttu-id="4af46-145">Zarówno do zwiększenia wydajności i uniknąć przypadkowo tworzenie oddzielnych losowe generatory numerów generujących identyczne sekwencji liczbowych, zaleca się utworzenie jednego <xref:System.Random> obiektu dla generatora liczb losowych wiele wraz z upływem czasu, zamiast tworzyć nowe <xref:System.Random> obiekty do wygenerowania jeden liczby losowe.</span><span class="sxs-lookup"><span data-stu-id="4af46-145">Both to improve performance and to avoid inadvertently creating separate random number generators that generate identical numeric sequences, we recommend that you create one <xref:System.Random> object to generate many random numbers over time, instead of creating new <xref:System.Random> objects to generate one random number.</span></span>  
  
 <span data-ttu-id="4af46-146">Jednak <xref:System.Random> klasy nie jest bezpieczne dla wątków.</span><span class="sxs-lookup"><span data-stu-id="4af46-146">However, the <xref:System.Random> class isn't thread safe.</span></span> <span data-ttu-id="4af46-147">Jeśli należy wywołać <xref:System.Random> metody wiele wątków, postępuj zgodnie z wytycznymi, omówiona w następnej sekcji.</span><span class="sxs-lookup"><span data-stu-id="4af46-147">If you call <xref:System.Random> methods from multiple threads, follow the guidelines discussed in the next section.</span></span>  
  
<a name="ThreadSafety"></a>   
## <a name="the-systemrandom-class-and-thread-safety"></a><span data-ttu-id="4af46-148">System.Random bezpieczeństwa klasy i wątku</span><span class="sxs-lookup"><span data-stu-id="4af46-148">The System.Random class and thread safety</span></span>  
 <span data-ttu-id="4af46-149">Zamiast tworzenia wystąpienia osoba <xref:System.Random> obiekty, zaleca się utworzenie pojedynczej <xref:System.Random> wystąpienia dla generatora liczb losowych wymagane przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="4af46-149">Instead of instantiating individual <xref:System.Random> objects, we recommend that you create a single <xref:System.Random> instance to generate all the random numbers needed by your app.</span></span> <span data-ttu-id="4af46-150">Jednak <xref:System.Random> obiekty nie są bezpieczne dla wątków.</span><span class="sxs-lookup"><span data-stu-id="4af46-150">However, <xref:System.Random> objects are not thread safe.</span></span> <span data-ttu-id="4af46-151">Jeśli aplikacja wymaga <xref:System.Random> metod przez wiele wątków, należy użyć obiektu synchronizacji w celu zapewnienia tylko jeden wątek dostęp do generatora liczb losowych w czasie.</span><span class="sxs-lookup"><span data-stu-id="4af46-151">If your app calls <xref:System.Random> methods from multiple threads, you must use a synchronization object to ensure that only one thread can access the random number generator at a time.</span></span> <span data-ttu-id="4af46-152">Jeśli użytkownik nie upewnij się, że <xref:System.Random> obiekt jest dostępny w sposób zapewniający obsługę wielowątkowości, wywołania metody, które zwracają liczb losowych zwraca 0.</span><span class="sxs-lookup"><span data-stu-id="4af46-152">If you don't ensure that the <xref:System.Random> object is accessed in a thread-safe way, calls to methods that return random numbers return 0.</span></span>  
  
 <span data-ttu-id="4af46-153">W poniższym przykładzie użyto C# [lock — instrukcja](~/docs/csharp/language-reference/keywords/lock-statement.md) i Visual Basic [SyncLock — instrukcja](~/docs/visual-basic/language-reference/statements/synclock-statement.md) do upewnij się, że pojedynczy generatora liczb losowych jest dostępne 11 wątków w sposób wątkowo.</span><span class="sxs-lookup"><span data-stu-id="4af46-153">The following example uses the C# [lock Statement](~/docs/csharp/language-reference/keywords/lock-statement.md) and the Visual Basic [SyncLock statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md) to ensure that a single random number generator is accessed by 11 threads in a thread-safe manner.</span></span> <span data-ttu-id="4af46-154">Każdy wątek generuje 2 milionów liczb losowych, zlicza liczby losowe wygenerowany i oblicza sumę ich, a następnie aktualizuje sumy dla wszystkich wątków po zakończeniu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="4af46-154">Each thread generates 2 million random numbers, counts the number of random numbers generated and calculates their sum, and then updates the totals for all threads when it finishes executing.</span></span>  
  
 [!code-cpp[System.Random#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/threadsafeex1.cpp#3)]
 [!code-csharp[System.Random#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex1.cs#3)]
 [!code-vb[System.Random#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex1.vb#3)]  
  
 <span data-ttu-id="4af46-155">Przykład zapewnia bezpieczeństwo wątków w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="4af46-155">The example ensures thread-safety in the following ways:</span></span>  
  
-   <span data-ttu-id="4af46-156"><xref:System.ThreadStaticAttribute> Atrybut służy do definiowania zmiennych thread-local, które śledzą sumę liczb losowych wygenerowany i ich sumy dla każdego wątku.</span><span class="sxs-lookup"><span data-stu-id="4af46-156">The <xref:System.ThreadStaticAttribute> attribute is used to define thread-local variables that track the total number of random numbers generated and their sum for each thread.</span></span>  
  
-   <span data-ttu-id="4af46-157">Blokady ( `lock` instrukcji w języku C# i `SyncLock` instrukcji w języku Visual Basic) chroni dostęp do zmiennych w łączna liczba i sumę wszystkich liczb losowych wygenerowany na wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="4af46-157">A lock (the `lock` statement in C# and the `SyncLock` statement in Visual Basic) protects access to the variables for the total count and sum of all random numbers generated on all threads.</span></span>  
  
-   <span data-ttu-id="4af46-158">Semafor ( <xref:System.Threading.CountdownEvent> obiektu) służy do zapewnienia, że bloki wątku głównego do innych wątków wykonany.</span><span class="sxs-lookup"><span data-stu-id="4af46-158">A semaphore (the <xref:System.Threading.CountdownEvent> object) is used to ensure that the main thread blocks until all other threads complete execution.</span></span>  
  
-   <span data-ttu-id="4af46-159">Przykład sprawdza, czy generatora liczb losowych została uszkodzona przez określenie, czy dwa kolejne wywołania losowych liczb metody generowania zwraca 0.</span><span class="sxs-lookup"><span data-stu-id="4af46-159">The example checks whether the random number generator has become corrupted by determining whether two consecutive calls to random number generation methods return 0.</span></span> <span data-ttu-id="4af46-160">Wykrycie uszkodzenia w przykładzie użyto <xref:System.Threading.CancellationTokenSource> obiektu, która sygnalizuje, że należy anulować wszystkie wątki.</span><span class="sxs-lookup"><span data-stu-id="4af46-160">If corruption is detected, the example uses the <xref:System.Threading.CancellationTokenSource> object to signal that all threads should be canceled.</span></span>  
  
-   <span data-ttu-id="4af46-161">Przed wygenerowaniem każdej liczby losowe, każdy wątek sprawdza stan <xref:System.Threading.CancellationToken> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4af46-161">Before generating each random number, each thread checks the state of the <xref:System.Threading.CancellationToken> object.</span></span> <span data-ttu-id="4af46-162">Jeśli zażądano anulowania <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> metodę, aby anulować wątku.</span><span class="sxs-lookup"><span data-stu-id="4af46-162">If cancellation is requested, the example calls the <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method to cancel the thread.</span></span>  
  
 <span data-ttu-id="4af46-163">Poniższy przykład jest taka sama jak pierwsza strona, z wyjątkiem tego, że używa <xref:System.Threading.Tasks.Task> obiekt i wyrażenia lambda zamiast <xref:System.Threading.Thread> obiektów.</span><span class="sxs-lookup"><span data-stu-id="4af46-163">The following example is identical to the first, except that it uses a <xref:System.Threading.Tasks.Task> object and a lambda expression instead of <xref:System.Threading.Thread> objects.</span></span>  
  
 [!code-csharp[System.Random#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex2.cs#4)]
 [!code-vb[System.Random#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex2.vb#4)]  
  
 <span data-ttu-id="4af46-164">Różni się od pierwszym przykładzie w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="4af46-164">It differs from the first example in the following ways:</span></span>  
  
-   <span data-ttu-id="4af46-165">Zmienne do śledzenia liczby liczb losowych wygenerowany i ich sumy w każdym zadaniu znajdują się lokalnie do zadania, a więc nie trzeba używać <xref:System.ThreadStaticAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="4af46-165">The variables to keep track of the number of random numbers generated and their sum in each task are local to the task, so there is no need to use the <xref:System.ThreadStaticAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="4af46-166">Statycznych <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> metoda służy do zapewnienia, że głównym wątku nie wykona przed zakończeniem wszystkie zadania.</span><span class="sxs-lookup"><span data-stu-id="4af46-166">The static <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method is used to ensure that the main thread doesn't complete before all tasks have finished.</span></span> <span data-ttu-id="4af46-167">Nie istnieje potrzeba dla <xref:System.Threading.CountdownEvent> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4af46-167">There is no need for the <xref:System.Threading.CountdownEvent> object.</span></span>  
  
-   <span data-ttu-id="4af46-168">Wyjątek, który jest wynikiem anulowanie zadania jest udostępniane w <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-168">The exception that results from task cancellation is surfaced in the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4af46-169">W poprzednim przykładzie jest obsługiwane przez poszczególne wątki.</span><span class="sxs-lookup"><span data-stu-id="4af46-169">In the previous example, it is handled by each thread.</span></span>  
  
<a name="Functionality"></a>   
## <a name="generating-different-types-of-random-numbers"></a><span data-ttu-id="4af46-170">Generowanie różnego rodzaju liczby losowe</span><span class="sxs-lookup"><span data-stu-id="4af46-170">Generating different types of random numbers</span></span>  
 <span data-ttu-id="4af46-171">Generatora liczb losowych udostępnia metody, które pozwalają na następujące rodzaje liczby losowe generowanie:</span><span class="sxs-lookup"><span data-stu-id="4af46-171">The random number generator provides methods that let you generate the following kinds of random numbers:</span></span>  
  
-   <span data-ttu-id="4af46-172">Szereg <xref:System.Byte> wartości.</span><span class="sxs-lookup"><span data-stu-id="4af46-172">A series of <xref:System.Byte> values.</span></span> <span data-ttu-id="4af46-173">Określenie liczby wartości bajtu przez przekazanie tablicy inicjowane z liczbą elementów ma metodę, aby powrócić do <xref:System.Random.NextBytes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-173">You determine the number of byte values by passing an array initialized to the number of elements you want the method to return to the <xref:System.Random.NextBytes%2A> method.</span></span> <span data-ttu-id="4af46-174">Poniższy przykład generuje 20 bajtów.</span><span class="sxs-lookup"><span data-stu-id="4af46-174">The following example generates 20 bytes.</span></span>  
  
     [!code-cpp[System.Random#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextbytes1.cpp#5)]
     [!code-csharp[System.Random#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextbytes1.cs#5)]
     [!code-vb[System.Random#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextbytes1.vb#5)]  
  
-   <span data-ttu-id="4af46-175">Pojedynczy liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="4af46-175">A single integer.</span></span> <span data-ttu-id="4af46-176">Można wybrać, czy ma całkowitą z zakresu od 0 do wartości maksymalnej (<xref:System.Int32.MaxValue?displayProperty=nameWithType> -1) przez wywołanie metody <xref:System.Random.Next> metoda, liczbą całkowitą od 0 do określonej wartości przez wywołanie metody <xref:System.Random.Next%28System.Int32%29> metody lub liczbą całkowitą w zakresie wartości przez wywołanie metody <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-176">You can choose whether you want an integer from 0 to a maximum value (<xref:System.Int32.MaxValue?displayProperty=nameWithType> – 1) by calling the <xref:System.Random.Next> method, an integer between 0 and a specific value by calling the <xref:System.Random.Next%28System.Int32%29> method, or an integer within a range of values by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="4af46-177">W sparametryzowane przeciążeń określona wartość maksymalna jest na wyłączność; Rzeczywista liczba maksymalna generowany jest jeden mniej niż określona wartość.</span><span class="sxs-lookup"><span data-stu-id="4af46-177">In the parameterized overloads, the specified maximum value is exclusive; that is, the actual maximum number generated is one less than the specified value.</span></span>  
  
     <span data-ttu-id="4af46-178">Następujące przykładowe wywołania <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metody dla generatora liczb losowych 10 w zakresie od -10 do 10.</span><span class="sxs-lookup"><span data-stu-id="4af46-178">The following example calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to generate 10 random numbers between -10 and 10.</span></span> <span data-ttu-id="4af46-179">Należy pamiętać, że drugi argument do metody określa wyłącznego górna granica zakresu losowych wartości zwracanych przez metodę.</span><span class="sxs-lookup"><span data-stu-id="4af46-179">Note that the second argument to the method specifies the exclusive upper bound of the range of random values returned by the method.</span></span> <span data-ttu-id="4af46-180">Innymi słowy największa liczba całkowita, która metoda może zwracać jedną jest mniejsza od tej wartości.</span><span class="sxs-lookup"><span data-stu-id="4af46-180">In other words, the largest integer that the method can return is one less than this value.</span></span>  
  
     [!code-cpp[System.Random#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextex1.cpp#6)]
     [!code-csharp[System.Random#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextex1.cs#6)]
     [!code-vb[System.Random#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextex1.vb#6)]  
  
-   <span data-ttu-id="4af46-181">Pojedynczą wartość zmiennoprzecinkowa od 0,0 mniejszą niż 1,0 przez wywołanie metody <xref:System.Random.NextDouble%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-181">A single floating-point value from 0.0 to less than 1.0 by calling the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="4af46-182">Wyłączny górna granica liczbę losową zwracany przez metodę to 1, więc jego rzeczywistego górna granica jest 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="4af46-182">The exclusive upper bound of the random number returned by the method is 1, so its actual upper bound is 0.99999999999999978.</span></span> <span data-ttu-id="4af46-183">Poniższy przykład generuje 10 losowych liczb zmiennoprzecinkowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-183">The following example generates 10 random floating-point numbers.</span></span>  
  
     [!code-cpp[System.Random#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextdoubleex1.cpp#7)]
     [!code-csharp[System.Random#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextdoubleex1.cs#7)]
     [!code-vb[System.Random#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextdoubleex1.vb#7)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="4af46-184"><xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Metoda pozwala na określenie zwrócony liczbę losową z zakresu.</span><span class="sxs-lookup"><span data-stu-id="4af46-184">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method allows you to specify the range of the returned random number.</span></span> <span data-ttu-id="4af46-185">Jednak `maxValue` parametr, który określa, górna granica zwracana liczba, jest na wyłączność, nie włącznie, wartość.</span><span class="sxs-lookup"><span data-stu-id="4af46-185">However, the `maxValue` parameter, which specifies the upper range returned number, is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="4af46-186">Oznacza to, że wywołanie metody `Next(0, 100)` zwraca wartość z zakresu od 0 do 99, a nie z zakresu od 0 do 100.</span><span class="sxs-lookup"><span data-stu-id="4af46-186">This means that the method call `Next(0, 100)` returns a value between 0 and 99, and not between 0 and 100.</span></span>  
  
 <span data-ttu-id="4af46-187">Można również użyć <xref:System.Random> klasy dla zadania, takie jak Generowanie [losowych wartości T:System.Boolean](#Boolean), generowanie [zmiennoprzecinkowej losowych wartości z zakresu innych niż 0 lub 1](#Floats), generowanie [losowe 64-bitowych liczb całkowitych](#Long), i [losowo pobierania unikatowy element z kolekcji lub tablicy](#UniqueArray).</span><span class="sxs-lookup"><span data-stu-id="4af46-187">You can also use the <xref:System.Random> class for such tasks as generating [random T:System.Boolean values](#Boolean), generating [random floating point values with a range other than 0 to 1](#Floats), generating [random 64-bit integers](#Long), and [randomly retrieving a unique element from an array or collection](#UniqueArray).</span></span> <span data-ttu-id="4af46-188">Tych i innych typowych zadań, zobacz [jak używać System.Random do...](#Operations)</span><span class="sxs-lookup"><span data-stu-id="4af46-188">For these and other common tasks, see the [How do you use System.Random to…](#Operations)</span></span> <span data-ttu-id="4af46-189">sekcja.</span><span class="sxs-lookup"><span data-stu-id="4af46-189">section.</span></span>  
  
<a name="Overriding"></a>   
## <a name="substituting-your-own-algorithm"></a><span data-ttu-id="4af46-190">Podstawiając własne algorytmu</span><span class="sxs-lookup"><span data-stu-id="4af46-190">Substituting your own algorithm</span></span>  
 <span data-ttu-id="4af46-191">Można wdrożyć własne generatora liczb losowych przy dziedziczących <xref:System.Random> klasy i dostarczenie z algorytmu generowania liczb.</span><span class="sxs-lookup"><span data-stu-id="4af46-191">You can implement your own random number generator by inheriting from the <xref:System.Random> class and supplying your random number generation algorithm.</span></span> <span data-ttu-id="4af46-192">Aby przekazać swoje własne algorytmu, konieczne jest przesłonięcie <xref:System.Random.Sample%2A> metodę, która implementuje algorytm Generowanie liczb pseudolosowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-192">To supply your own algorithm, you must override the <xref:System.Random.Sample%2A> method, which implements the random number generation algorithm.</span></span> <span data-ttu-id="4af46-193">Należy również zastąpić <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, i <xref:System.Random.NextBytes%2A> metod, które zapewniają one wywołać Twojej przesłoniętych <xref:System.Random.Sample%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-193">You should also override the <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, and <xref:System.Random.NextBytes%2A> methods to ensure that they call your overridden <xref:System.Random.Sample%2A> method.</span></span> <span data-ttu-id="4af46-194">Nie trzeba zastąpić <xref:System.Random.Next%28System.Int32%29> i <xref:System.Random.NextDouble%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-194">You don't have to override the <xref:System.Random.Next%28System.Int32%29> and <xref:System.Random.NextDouble%2A> methods.</span></span>  
  
 <span data-ttu-id="4af46-195">Na przykład, która jest pochodną <xref:System.Random> klasy i zmienia jego domyślny pseudolosowego generatora liczb, zobacz <xref:System.Random.Sample%2A> strony odwołania.</span><span class="sxs-lookup"><span data-stu-id="4af46-195">For an example that derives from the <xref:System.Random> class and modifies its default pseudo-random number generator, see the <xref:System.Random.Sample%2A> reference page.</span></span>  
  
<a name="Operations"></a>   
## <a name="how-do-you-use-systemrandom-to"></a><span data-ttu-id="4af46-196">Jak używać System.Random do...</span><span class="sxs-lookup"><span data-stu-id="4af46-196">How do you use System.Random to…</span></span>  
 <span data-ttu-id="4af46-197">Poniższe sekcje omówienia i podaj przykładowy kod niektóre metody można używać liczb losowych w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="4af46-197">The following sections discuss and provide sample code for some of the ways you might want to use random numbers in your app.</span></span>  
  
<a name="Same"></a>   
### <a name="retrieve-the-same-sequence-of-random-values"></a><span data-ttu-id="4af46-198">Taką samą sekwencję losowych wartości do pobrania</span><span class="sxs-lookup"><span data-stu-id="4af46-198">Retrieve the same sequence of random values</span></span>  
 <span data-ttu-id="4af46-199">Czasami chcesz wygenerować taką samą sekwencję losowych liczb znajdujących się w scenariuszach testów oprogramowania i odtwarzanie gier.</span><span class="sxs-lookup"><span data-stu-id="4af46-199">Sometimes you want to generate the same sequence of random numbers in software test scenarios and in game playing.</span></span> <span data-ttu-id="4af46-200">Testowanie za pomocą tej samej sekwencji liczb losowych umożliwia wykrywanie regresji i Potwierdź poprawki błędów.</span><span class="sxs-lookup"><span data-stu-id="4af46-200">Testing with the same sequence of random numbers allows you to detect regressions and confirm bug fixes.</span></span> <span data-ttu-id="4af46-201">Przy użyciu takiej samej kolejności liczbę losową w grach służy do powtarzania poprzednich gier.</span><span class="sxs-lookup"><span data-stu-id="4af46-201">Using the same sequence of random number in games allows you to replay previous games.</span></span>  
  
 <span data-ttu-id="4af46-202">Można wygenerować tej samej sekwencji liczb losowych, podając tę samą wartość inicjatora na <xref:System.Random.%23ctor%28System.Int32%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="4af46-202">You can generate the same sequence of random numbers by providing the same seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="4af46-203">Wartość zalążka zapewnia wartości początkowej pseudolosowego algorytmu generowania liczb.</span><span class="sxs-lookup"><span data-stu-id="4af46-203">The seed value provides a starting value for the pseudo-random number generation algorithm.</span></span> <span data-ttu-id="4af46-204">W poniższym przykładzie użyto 100100 jako wartości początkowej dowolnego można utworzyć wystąpienia <xref:System.Random> obiektów, wyświetla 20 losowych wartości zmiennoprzecinkowych i będzie się powtarzał wartości początkowej.</span><span class="sxs-lookup"><span data-stu-id="4af46-204">The following example uses 100100 as an arbitrary seed value to instantiate the <xref:System.Random> object, displays 20 random floating-point values, and persists the seed value.</span></span> <span data-ttu-id="4af46-205">Następnie przywraca wartości początkowej, tworzy nowy generator liczb losowych i wyświetla te same 20 losowych liczb zmiennoprzecinkowych wartości.</span><span class="sxs-lookup"><span data-stu-id="4af46-205">It then restores the seed value, instantiates a new random number generator, and displays the same 20 random floating-point values.</span></span>  <span data-ttu-id="4af46-206">Należy zwrócić uwagę na przykładzie może powodować różnych sekwencji liczb losowych Jeśli uruchomione w różnych wersjach programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4af46-206">Note that the example may produce different sequences of random numbers if run on different versions of the .NET Framework.</span></span>  
  
 [!code-cpp[System.Random#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/same1.cpp#12)]
 [!code-csharp[System.Random#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/same1.cs#12)]
 [!code-vb[System.Random#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/same1.vb#12)]  
  
<a name="Unique"></a>   
### <a name="retrieve-unique-sequences-of-random-numbers"></a><span data-ttu-id="4af46-207">Pobierz unikatowy sekwencji liczb losowych</span><span class="sxs-lookup"><span data-stu-id="4af46-207">Retrieve unique sequences of random numbers</span></span>  
 <span data-ttu-id="4af46-208">Podając wartości inicjatora różnych wystąpień <xref:System.Random> klasy powoduje, że każdy generator liczb losowych wygenerowało sekwencję różnych wartości.</span><span class="sxs-lookup"><span data-stu-id="4af46-208">Providing different seed values to instances of the <xref:System.Random> class causes each random number generator to produce a different sequence of values.</span></span> <span data-ttu-id="4af46-209">Wartość zalążka można podać albo jawnie przez wywołanie metody <xref:System.Random.%23ctor%28System.Int32%29> konstruktora, lub niejawnie, wywołując <xref:System.Random.%23ctor> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="4af46-209">You can provide a seed value either explicitly by calling the <xref:System.Random.%23ctor%28System.Int32%29> constructor, or implicitly by calling the <xref:System.Random.%23ctor> constructor.</span></span> <span data-ttu-id="4af46-210">Większość deweloperów wywołać konstruktora, który używa zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="4af46-210">Most developers call the parameterless constructor, which uses the system clock.</span></span> <span data-ttu-id="4af46-211">Poniższy przykład korzysta z tej metody można utworzyć dwa wystąpienia <xref:System.Random> wystąpień.</span><span class="sxs-lookup"><span data-stu-id="4af46-211">The following example uses this approach to instantiate two <xref:System.Random> instances.</span></span> <span data-ttu-id="4af46-212">Każde wystąpienie prezentuje serię 10 losowych liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="4af46-212">Each instance displays a series of 10 random integers.</span></span>  
  
 [!code-cpp[System.Random#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/unique.cpp#13)]
 [!code-csharp[System.Random#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/unique.cs#13)]
 [!code-vb[System.Random#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/unique.vb#13)]  
  
 <span data-ttu-id="4af46-213">Jednak ze względu na jego ograniczone rozwiązanie zegar systemowy nie wykrywa różnice czasu, które są mniej niż około 15 milisekund.</span><span class="sxs-lookup"><span data-stu-id="4af46-213">However, because of its finite resolution, the system clock doesn't detect time differences that are less than approximately 15 milliseconds.</span></span> <span data-ttu-id="4af46-214">W związku z tym jeśli kod wywołuje <xref:System.Random.%23ctor> przeciążenia można utworzyć dwa wystąpienia <xref:System.Random> obiekty kolejno, możesz przypadkowo udostępniają obiekty z wartościami identyczne inicjatora.</span><span class="sxs-lookup"><span data-stu-id="4af46-214">Therefore, if your code calls the <xref:System.Random.%23ctor> overload to instantiate two <xref:System.Random> objects in succession, you might inadvertently be providing the objects with identical seed values.</span></span> <span data-ttu-id="4af46-215">Aby wyświetlić to w poprzednim przykładzie, komentarz <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> wywołanie metody i kompilacji i ponownie uruchom przykładzie.</span><span class="sxs-lookup"><span data-stu-id="4af46-215">To see this in the previous example, comment out the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method call, and compile and run the example again.</span></span>  
  
 <span data-ttu-id="4af46-216">Aby temu zapobiec, zaleca się utworzenie wystąpienia pojedynczy <xref:System.Random> obiekt zamiast wiele migawek.</span><span class="sxs-lookup"><span data-stu-id="4af46-216">To prevent this from happening, we recommend that you instantiate a single <xref:System.Random> object rather than multiple ones.</span></span> <span data-ttu-id="4af46-217">Ponieważ jednak <xref:System.Random> nie jest bezpieczne, możesz uzyskać dostępu do niektórych urządzeń synchronizacji należy użyć dla wątków <xref:System.Random> wystąpienia z wielu wątków; Aby uzyskać więcej informacji, zobacz [losowe bezpieczeństwa klasy i wątku](#ThreadSafety) wcześniej w tym temat.</span><span class="sxs-lookup"><span data-stu-id="4af46-217">However, since <xref:System.Random> isn't thread safe, you must use some synchronization device if you access a <xref:System.Random> instance from multiple threads; for more information, see [The Random class and thread safety](#ThreadSafety) earlier in this topic.</span></span> <span data-ttu-id="4af46-218">Alternatywnie można mechanizm opóźnienia, takich jak <xref:System.Threading.Thread.Sleep%2A> metodę używaną w poprzednim przykładzie, aby upewnić się, że wystąpień występuje więcej niż 15 milisekund od siebie.</span><span class="sxs-lookup"><span data-stu-id="4af46-218">Alternately, you can use a delay mechanism, such as the <xref:System.Threading.Thread.Sleep%2A> method used in the previous example, to ensure that the instantiations occur more than 15 millisecond apart.</span></span>  
  
<a name="Range"></a>   
### <a name="retrieve-integers-in-a-specified-range"></a><span data-ttu-id="4af46-219">Pobieranie liczby całkowite w określonym zakresie</span><span class="sxs-lookup"><span data-stu-id="4af46-219">Retrieve integers in a specified range</span></span>  
 <span data-ttu-id="4af46-220">Można pobrać liczby całkowite z zakresu określonego przez wywołanie metody <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metodę, która pozwala określić zarówno dolna i górna granica chcesz powrócić generator liczb losowych liczb.</span><span class="sxs-lookup"><span data-stu-id="4af46-220">You can retrieve integers in a specified range by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, which lets you specify both the lower and the upper bound of the numbers you'd like the random number generator to return.</span></span> <span data-ttu-id="4af46-221">Górna granica jest na wyłączność, nie włącznie, wartość.</span><span class="sxs-lookup"><span data-stu-id="4af46-221">The upper bound is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="4af46-222">Oznacza to, że nie jest zawarty w zakresie wartości zwracanych przez metodę.</span><span class="sxs-lookup"><span data-stu-id="4af46-222">That is, it isn't included in the range of values returned by the method.</span></span> <span data-ttu-id="4af46-223">W poniższym przykładzie użyto tej metody do generowania losowego liczby całkowite z zakresu od -10 do 10.</span><span class="sxs-lookup"><span data-stu-id="4af46-223">The following example uses this method to generate random integers between -10 and 10.</span></span> <span data-ttu-id="4af46-224">Należy pamiętać, że określa 11, która jest większa niż żądaną wartość jako wartość o jeden z `maxValue` argument w wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-224">Note that it specifies 11, which is one greater than the desired value, as the value of the `maxValue` argument in the method call.</span></span>  
  
 [!code-cpp[System.Random#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range1.cpp#15)]
 [!code-csharp[System.Random#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range1.cs#15)]
 [!code-vb[System.Random#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range1.vb#15)]  
  
<a name="Digits"></a>   
### <a name="retrieve-integers-with-a-specified-number-of-digits"></a><span data-ttu-id="4af46-225">Pobieranie liczby całkowite z określonej liczby miejsc po przecinku</span><span class="sxs-lookup"><span data-stu-id="4af46-225">Retrieve integers with a specified number of digits</span></span>  
 <span data-ttu-id="4af46-226">Możesz wywołać <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metoda pobierania liczby z określonej liczby cyfr.</span><span class="sxs-lookup"><span data-stu-id="4af46-226">You can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to retrieve numbers with a specified number of digits.</span></span> <span data-ttu-id="4af46-227">Na przykład, aby pobrać liczby z czterech cyfr (czyli liczby z zakresu od 1000 do 9999), należy wywołać <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metody z `minValue` wartość 1000 i `maxValue` wartość 10000, jak przedstawiono na poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="4af46-227">For example, to retrieve numbers with four digits (that is, numbers that range from 1000 to 9999), you call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method with a `minValue` value of 1000 and a `maxValue` value of 10000, as the following example shows.</span></span>  
  
 [!code-cpp[System.Random#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range2.cpp#16)]
 [!code-csharp[System.Random#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range2.cs#16)]
 [!code-vb[System.Random#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range2.vb#16)]  
  
<a name="Floats"></a>   
### <a name="retrieve-floating-point-values-in-a-specified-range"></a><span data-ttu-id="4af46-228">Pobieranie wartości zmiennoprzecinkowych w określonym zakresie</span><span class="sxs-lookup"><span data-stu-id="4af46-228">Retrieve floating-point values in a specified range</span></span>  
 <span data-ttu-id="4af46-229"><xref:System.Random.NextDouble%2A> Metoda zwraca losowych wartości zmiennoprzecinkowych zakresu od 0 do mniej niż 1.</span><span class="sxs-lookup"><span data-stu-id="4af46-229">The <xref:System.Random.NextDouble%2A> method returns random floating-point values that range from 0 to less than 1.</span></span> <span data-ttu-id="4af46-230">Jednak często należy wygenerować losowych wartości w niektórych inny zakres.</span><span class="sxs-lookup"><span data-stu-id="4af46-230">However, you'll often want to generate random values in some other range.</span></span>  
  
 <span data-ttu-id="4af46-231">Jeśli interwał między minimalną i maksymalną odpowiednie wartości to 1, możesz dodać różnica między wymagany przedział czasu rozpoczęcia i 0 liczbę zwracanych przez <xref:System.Random.NextDouble%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-231">If the interval between the minimum and maximum desired values is 1, you can add the difference between the desired starting interval and 0 to the number returned by the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="4af46-232">Poniższy przykład jest to, aby wygenerować 10 losowych liczbami z przedziału od -1 i 0.</span><span class="sxs-lookup"><span data-stu-id="4af46-232">The following example does this to generate 10 random numbers between -1 and 0.</span></span>  
  
 [!code-cpp[System.Random#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange2.cpp#17)]
 [!code-csharp[System.Random#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange2.cs#17)]
 [!code-vb[System.Random#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange2.vb#17)]  
  
 <span data-ttu-id="4af46-233">Dla generatora liczb losowych liczb zmiennoprzecinkowych którego dolna granica jest 0, ale górna granica jest większa niż 1 (lub, w przypadku wartości ujemne, którego dolna granica jest mniejsza niż -1 i górna granica jest 0), należy pomnożyć liczbę losową przez granicą inną niż zero.</span><span class="sxs-lookup"><span data-stu-id="4af46-233">To generate random floating-point numbers whose lower bound is 0 but upper bound is greater than 1 (or, in the case of negative numbers, whose lower bound is less than -1 and upper bound is 0), multiply the random number by the non-zero bound.</span></span> <span data-ttu-id="4af46-234">Poniższy przykład robi to dla generatora liczb losowych liczb zmiennoprzecinkowych 20 milionów zakresu od 0 do <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4af46-234">The following example does this to generate 20 million random floating-point numbers that range from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4af46-235">W wyświetla również dystrybucji losowych wartości generowanych przez metodę.</span><span class="sxs-lookup"><span data-stu-id="4af46-235">In also displays the distribution of the random values generated by the method.</span></span>  
  
 [!code-cpp[System.Random#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange1.cpp#18)]
 [!code-csharp[System.Random#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange1.cs#18)]
 [!code-vb[System.Random#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange1.vb#18)]  
  
 <span data-ttu-id="4af46-236">Aby wygenerować losowych liczb zmiennoprzecinkowych między dwiema wartościami dowolnego, takich jak <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> metoda wykonuje liczb całkowitych, należy użyć następującej formuły:</span><span class="sxs-lookup"><span data-stu-id="4af46-236">To generate random floating-point numbers between two arbitrary values, like the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method does for integers, use the following formula:</span></span>  
  
```csharp  
Random.NextDouble() * (maxValue – minValue) + minValue  
```  
  
 <span data-ttu-id="4af46-237">Poniższy przykład generuje 1 milion liczb losowych, które należeć do zakresu od 10.0 do 11.0 i wyświetla jego dystrybucji.</span><span class="sxs-lookup"><span data-stu-id="4af46-237">The following example generates 1 million random numbers that range from 10.0 to 11.0, and displays their distribution.</span></span>  
  
 [!code-cpp[System.Random#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange3.cpp#19)]
 [!code-csharp[System.Random#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange3.cs#19)]
 [!code-vb[System.Random#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange3.vb#19)]  
  
<a name="Boolean"></a>   
### <a name="generate-random-boolean-values"></a><span data-ttu-id="4af46-238">Generowanie losowych wartości logiczna</span><span class="sxs-lookup"><span data-stu-id="4af46-238">Generate random Boolean values</span></span>  
 <span data-ttu-id="4af46-239"><xref:System.Random> Klasy nie udostępnia metody, które generują <xref:System.Boolean> wartości.</span><span class="sxs-lookup"><span data-stu-id="4af46-239">The <xref:System.Random> class doesn't provide methods that generate <xref:System.Boolean> values.</span></span> <span data-ttu-id="4af46-240">Można jednak zdefiniować własne klasa lub metoda w tym celu.</span><span class="sxs-lookup"><span data-stu-id="4af46-240">However, you can define your own class or method to do that.</span></span> <span data-ttu-id="4af46-241">W poniższym przykładzie zdefiniowano klasę, `BooleanGenerator`, z jedną metodę `NextBoolean`.</span><span class="sxs-lookup"><span data-stu-id="4af46-241">The following example defines a class, `BooleanGenerator`, with a single method, `NextBoolean`.</span></span> <span data-ttu-id="4af46-242">`BooleanGenerator` Klasy magazynów <xref:System.Random> obiektu jako zmiennej prywatnej.</span><span class="sxs-lookup"><span data-stu-id="4af46-242">The `BooleanGenerator` class stores a <xref:System.Random> object as a private variable.</span></span> <span data-ttu-id="4af46-243">`NextBoolean` Wywołania metody <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> — metoda i przekazuje jego wynik do <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-243">The `NextBoolean` method calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method and passes the result to the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4af46-244">Należy pamiętać, że 2 jest używany jako argument do określenia górnej granicy liczby losowe.</span><span class="sxs-lookup"><span data-stu-id="4af46-244">Note that 2 is used as the argument to specify the upper bound of the random number.</span></span> <span data-ttu-id="4af46-245">Ponieważ jest to wartość wyłączności, wywołanie metody zwraca 0 lub 1.</span><span class="sxs-lookup"><span data-stu-id="4af46-245">Since this is an exclusive value, the method call returns either 0 or 1.</span></span>  
  
 [!code-cpp[System.Random#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans1.cpp#8)]
 [!code-csharp[System.Random#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans1.cs#8)]
 [!code-vb[System.Random#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans1.vb#8)]  
  
 <span data-ttu-id="4af46-246">Zamiast tworzyć osobnej klasy do generowania losowego <xref:System.Boolean> wartości, na przykład można po prostu zdefiniowanych pojedynczej metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-246">Instead of creating a separate class to generate random <xref:System.Boolean> values, the example could simply have defined a single method.</span></span> <span data-ttu-id="4af46-247">W takim przypadku jednak <xref:System.Random> obiektu powinien zostały zdefiniowane jako zmienna poziomie klasy, aby zapobiec uruchamianiu nową <xref:System.Random> wystąpienia w każdym wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-247">In that case, however, the <xref:System.Random> object should have been defined as a class-level variable to avoid instantiating a new <xref:System.Random> instance in each method call.</span></span> <span data-ttu-id="4af46-248">W języku Visual Basic, można zdefiniować jako wystąpienie losowe [statycznych](~/docs/visual-basic/language-reference/modifiers/static.md) zmiennej w `NextBoolean` metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-248">In Visual Basic, the Random instance can be defined as a [Static](~/docs/visual-basic/language-reference/modifiers/static.md) variable in the `NextBoolean` method.</span></span>  <span data-ttu-id="4af46-249">W poniższym przykładzie przedstawiono implementację.</span><span class="sxs-lookup"><span data-stu-id="4af46-249">The following example provides an implementation.</span></span>  
  
 [!code-cpp[System.Random#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans2.cpp#20)]
 [!code-csharp[System.Random#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans2.cs#20)]
 [!code-vb[System.Random#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans2.vb#20)]  
  
<a name="Long"></a>   
### <a name="generate-random-64-bit-integers"></a><span data-ttu-id="4af46-250">Generowanie losowe 64-bitowych liczb całkowitych</span><span class="sxs-lookup"><span data-stu-id="4af46-250">Generate random 64-bit integers</span></span>  
 <span data-ttu-id="4af46-251">Przeciążeń <xref:System.Random.Next%2A> zwracany przez metodę 32-bitowych liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="4af46-251">The overloads of the <xref:System.Random.Next%2A> method return 32-bit integers.</span></span> <span data-ttu-id="4af46-252">W niektórych przypadkach może być do pracy z 64-bitowych liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="4af46-252">However, in some cases, you might want to work with 64-bit integers.</span></span> <span data-ttu-id="4af46-253">Można to zrobić w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="4af46-253">You can do this as follows:</span></span>  
  
1.  <span data-ttu-id="4af46-254">Wywołanie <xref:System.Random.NextDouble%2A> wartość punktów metoda pobierania zmiennoprzecinkowej podwójnej precyzji.</span><span class="sxs-lookup"><span data-stu-id="4af46-254">Call the <xref:System.Random.NextDouble%2A> method to retrieve a double-precision floating point value.</span></span>  
  
2.  <span data-ttu-id="4af46-255">Należy pomnożyć tę wartość przez <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4af46-255">Multiply that value by <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4af46-256">Poniższy przykład korzysta z tej techniki do generowania milionów 20 losowe długich liczb całkowitych i kategoryzuje je w grupach równy 10.</span><span class="sxs-lookup"><span data-stu-id="4af46-256">The following example uses this technique to generate 20 million random long integers and categorizes them in 10 equal groups.</span></span> <span data-ttu-id="4af46-257">Następnie oblicza rozkład liczby losowe liczbą w każdej grupie z zakresu od 0 do <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4af46-257">It then evaluates the distribution of the random numbers by counting the number in each group from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4af46-258">Jak pokazano na dane wyjściowe z przykładu, numery są dystrybuowane mniej lub bardziej równomiernie w zakresie długich liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="4af46-258">As the output from the example shows, the numbers are distributed more or less equally through the range of a long integer.</span></span>  
  
 [!code-cpp[System.Random#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/long1.cpp#14)]
 [!code-csharp[System.Random#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/long1.cs#14)]
 [!code-vb[System.Random#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/long1.vb#14)]  
  
 <span data-ttu-id="4af46-259">Alternatywne technika używa bit manipulowanie nie generuje naprawdę losowych liczb.</span><span class="sxs-lookup"><span data-stu-id="4af46-259">An alternative technique that uses bit manipulation does not generate truly random numbers.</span></span> <span data-ttu-id="4af46-260">Ta metoda wywołuje <xref:System.Random.Next> do generowania dwie liczb całkowitych, co na 32 przesunięcia w lewo bitów i ORs je razem.</span><span class="sxs-lookup"><span data-stu-id="4af46-260">This technique calls <xref:System.Random.Next> to generate two integers, left-shifts one by 32 bits, and ORs them together.</span></span> <span data-ttu-id="4af46-261">Ta technika ma dwa ograniczenia:</span><span class="sxs-lookup"><span data-stu-id="4af46-261">This technique has two limitations:</span></span>  
  
1.  <span data-ttu-id="4af46-262">Ponieważ bitowe 31 jest znaku, wartość w bit 31 wynikowy długich liczb całkowitych jest zawsze 0.</span><span class="sxs-lookup"><span data-stu-id="4af46-262">Because bit 31 is the sign bit, the value in bit 31 of the resulting long integer is always 0.</span></span>  <span data-ttu-id="4af46-263">Można temu zaradzić, generując losowe 0 lub 1, lewo przesuwania go 31 bitów i ORing go przy użyciu oryginalnego losowe długich liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="4af46-263">This can be addressed by generating a random 0 or 1, left-shifting it 31 bits, and ORing it with the original random long integer.</span></span>  
  
2.  <span data-ttu-id="4af46-264">Więcej poważnie ponieważ prawdopodobieństwo, że wartość zwracana przez <xref:System.Random.Next> będzie równa 0, w zakresie od 0x0 0x00000000FFFFFFFF będzie kilka ewentualne liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-264">More seriously, because the probability that the value returned by <xref:System.Random.Next> will be 0, there will be few if any random numbers in the range 0x0-0x00000000FFFFFFFF.</span></span>  
  
<a name="Bytes"></a>   
### <a name="retrieve-bytes-in-a-specified-range"></a><span data-ttu-id="4af46-265">Pobrać bajtów w określonym zakresie</span><span class="sxs-lookup"><span data-stu-id="4af46-265">Retrieve bytes in a specified range</span></span>  
 <span data-ttu-id="4af46-266">Przeciążeń <xref:System.Random.Next%2A> metody umożliwiają określenie zakresu liczb losowych, ale <xref:System.Random.NextBytes%2A> nie ma metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-266">The overloads of the <xref:System.Random.Next%2A> method allow you to specify the range of random numbers, but the <xref:System.Random.NextBytes%2A> method does not.</span></span> <span data-ttu-id="4af46-267">Poniższy przykład implementuje `NextBytes` metodę, która umożliwia określenie zakresu bajtów zwrócona.</span><span class="sxs-lookup"><span data-stu-id="4af46-267">The following example implements a `NextBytes` method that lets you specify the range of the returned bytes.</span></span> <span data-ttu-id="4af46-268">Definiuje `Random2` klasą pochodzącą z <xref:System.Random> i overloads jego `NextBytes` metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-268">It defines a `Random2` class that derives from <xref:System.Random> and overloads its `NextBytes` method.</span></span>  
  
 [!code-cpp[System.Random#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/bytes1.cpp#9)]
 [!code-csharp[System.Random#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/bytes1.cs#9)]
 [!code-vb[System.Random#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/bytes1.vb#9)]  
  
 <span data-ttu-id="4af46-269">`NextBytes(Byte[], Byte, Byte)` Metoda opakowuje wywołanie <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> — metoda i określa wartość minimalną i jeden większa niż wartość maksymalna (w tym przypadku 0 i 101) czy chcemy zwrócony w tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="4af46-269">The `NextBytes(Byte[], Byte, Byte)` method wraps a call to the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method and specifies the minimum value and one greater than the maximum value (in this case, 0 and 101) that we want returned in the byte array.</span></span> <span data-ttu-id="4af46-270">Ponieważ firma Microsoft pewności, czy wartości całkowite zwrócone przez <xref:System.Random.Next%2A> metody są w zakresie <xref:System.Byte> typu danych, firma Microsoft może bezpiecznie rzutowanie je (C#) i konwertowanie (w języku Visual Basic) z liczbami całkowitymi bajtów.</span><span class="sxs-lookup"><span data-stu-id="4af46-270">Because we are sure that the integer values returned by the <xref:System.Random.Next%2A> method are within the range of the <xref:System.Byte> data type, we can safely cast them (in C#) or convert them (in Visual Basic) from integers to bytes.</span></span>  
  
<a name="Array"></a>   
### <a name="retrieve-an-element-from-an-array-or-collection-at-random"></a><span data-ttu-id="4af46-271">Losowo pobrać element z kolekcji lub tablicy</span><span class="sxs-lookup"><span data-stu-id="4af46-271">Retrieve an element from an array or collection at random</span></span>  
 <span data-ttu-id="4af46-272">Liczby losowe często służą jako indeksów do pobierania wartości z tablicą lub kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4af46-272">Random numbers often serve as indexes to retrieve values from arrays or collections.</span></span> <span data-ttu-id="4af46-273">Można pobrać wartości losowych indeksu, należy wywołać <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> — metoda i użyj dolnej granicy tablicy jako wartość jego `minValue` argument i jeden większa niż górna granica tablicy jako wartości jego `maxValue` argumentu.</span><span class="sxs-lookup"><span data-stu-id="4af46-273">To retrieve a random index value, you can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, and use the lower bound of the array as the value of its `minValue` argument and one greater than the upper bound of the array as the value of its `maxValue` argument.</span></span> <span data-ttu-id="4af46-274">Dla tablicy liczony od zera, co jest równoważne jego <xref:System.Array.Length%2A> właściwości lub większa niż wartość zwrócona przez jedną <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-274">For a zero-based array, this is equivalent to its <xref:System.Array.Length%2A> property, or one greater than the value returned by the <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4af46-275">Poniższy przykład losowo pobiera nazwę miejscowości w Stanach Zjednoczonych z tablicy miast.</span><span class="sxs-lookup"><span data-stu-id="4af46-275">The following example randomly retrieves the name of a city in the United States from an array of cities.</span></span>  
  
 [!code-cpp[System.Random#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/array1.cpp#10)]
 [!code-csharp[System.Random#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/array1.cs#10)]
 [!code-vb[System.Random#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/array1.vb#10)]  
  
<a name="UniqueArray"></a>   
### <a name="retrieve-a-unique-element-from-an-array-or-collection"></a><span data-ttu-id="4af46-276">Pobierz unikatowy element z kolekcji lub tablicy</span><span class="sxs-lookup"><span data-stu-id="4af46-276">Retrieve a unique element from an array or collection</span></span>  
 <span data-ttu-id="4af46-277">Generator liczb losowych zawsze wrócić zduplikowane wartości.</span><span class="sxs-lookup"><span data-stu-id="4af46-277">A random number generator can always return duplicate values.</span></span> <span data-ttu-id="4af46-278">Zakres numerów staje się mniejszą lub liczbę wartości wygenerowany staje się większy, rozwoju prawdopodobieństwo duplikaty.</span><span class="sxs-lookup"><span data-stu-id="4af46-278">As the range of numbers becomes smaller or the number of values generated becomes larger, the probability of duplicates grows.</span></span> <span data-ttu-id="4af46-279">Jeśli losowych wartości muszą być unikatowe, numery więcej są generowane odpowiednio duplikatów, co coraz pogorszenie wydajności.</span><span class="sxs-lookup"><span data-stu-id="4af46-279">If random values must be unique, more numbers are generated to compensate for duplicates, resulting in increasingly poor performance.</span></span>  
  
 <span data-ttu-id="4af46-280">Istnieje szereg technik w celu obsługi tego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="4af46-280">There are a number of techniques to handle this scenario.</span></span> <span data-ttu-id="4af46-281">Jest jednym z typowych rozwiązań do utworzenia tablicy lub kolekcję, która zawiera wartości, które mają zostać pobrane i Tablica równoległa losowych liczb zmiennoprzecinkowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-281">One common solution is to create an array or collection that contains the values to be retrieved, and a parallel array that contains random floating-point numbers.</span></span> <span data-ttu-id="4af46-282">Druga tablica jest wypełniana liczb losowych w chwili pierwszego tablicy jest tworzony, i <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> metoda jest używana do sortowania pierwszego tablicy przy użyciu wartości w tablicy równoległych.</span><span class="sxs-lookup"><span data-stu-id="4af46-282">The second array is populated with random numbers at the time the first array is created, and the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is used to sort the first array by using the values in the parallel array.</span></span>  
  
 <span data-ttu-id="4af46-283">Na przykład Jeśli projektujesz gra Pasjans chcesz upewnij się, że każda karta jest używana tylko raz.</span><span class="sxs-lookup"><span data-stu-id="4af46-283">For example, if you're developing a Solitaire game, you want to ensure that each card is used only once.</span></span> <span data-ttu-id="4af46-284">Zamiast generowania liczby losowe, aby pobrać karty i śledzenie czy karty już zostały uwzględnione, można utworzyć tablica równoległa losowych liczb, które mogą być używane do sortowania talii.</span><span class="sxs-lookup"><span data-stu-id="4af46-284">Instead of generating random numbers to retrieve a card and tracking whether that card has already been dealt, you can create a parallel array of random numbers that can be used to sort the deck.</span></span> <span data-ttu-id="4af46-285">Po talii jest sortowana, aplikację można zachować wskaźnik wskazuje indeks następnej karty w talii.</span><span class="sxs-lookup"><span data-stu-id="4af46-285">Once the deck is sorted, your app can maintain a pointer to indicate the index of the next card on the deck.</span></span>  
  
 <span data-ttu-id="4af46-286">To podejście pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="4af46-286">The following example illustrates this approach.</span></span> <span data-ttu-id="4af46-287">Definiuje `Card` Klasa reprezentująca karty do gry i a `Dealer` klasy, która zajmuje talii przesuniętą kart.</span><span class="sxs-lookup"><span data-stu-id="4af46-287">It defines a `Card` class that represents a playing card and a `Dealer` class that deals a deck of shuffled cards.</span></span> <span data-ttu-id="4af46-288">`Dealer` Konstruktora klasy wypełnia dwie tablice: `deck` tablicy z zakresem klasy, który reprezentuje wszystkie karty w talii; i lokalnym `order` tablica, która ma taką samą liczbę elementów jako `deck` tablicy i jest wypełniana z losowo generowany <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="4af46-288">The `Dealer` class constructor populates two arrays: a `deck` array that has class scope and that represents all the cards in the deck; and a local `order` array that has the same number of elements as the `deck` array and is populated with randomly generated <xref:System.Double> values.</span></span>  <span data-ttu-id="4af46-289"><xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> Wywoływana jest metoda następnie Sortuj `deck` tablicy na podstawie wartości w `order` tablicy.</span><span class="sxs-lookup"><span data-stu-id="4af46-289">The <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is then called to sort the `deck` array based on the values in the `order` array.</span></span>  
  
 [!code-cpp[System.Random#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/uniquearray1.cpp#11)]
 [!code-csharp[System.Random#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/uniquearray1.cs#11)]
 [!code-vb[System.Random#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/uniquearray1.vb#11)]  
  
   
  
## Examples  
 <span data-ttu-id="4af46-290">Poniższy przykład tworzy pojedynczy generatora liczb losowych i wywołania jego <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, i <xref:System.Random.NextDouble%2A> metod do wygenerowania sekwencji liczb losowych w różnych zakresów.</span><span class="sxs-lookup"><span data-stu-id="4af46-290">The following example creates a single random number generator and calls its <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, and <xref:System.Random.NextDouble%2A> methods to generate sequences of random numbers within different ranges.</span></span>  
  
 [!code-cpp[System.Random#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random2.cpp#2)]
 [!code-csharp[System.Random#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random2.cs#2)]
 [!code-vb[System.Random#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random2.vb#2)]  
  
 <span data-ttu-id="4af46-291">Poniższy przykład generuje losową liczbę całkowitą, która jest używana jako indeks można pobrać wartości ciągu z tablicy.</span><span class="sxs-lookup"><span data-stu-id="4af46-291">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="4af46-292">
        <para>.NET Framework 1.0 i 1.1, minimalna implementacji klasy pochodzące z <see cref="T:System.Random" /> wymagane zastępowanie <see cref="M:System.Random.Sample" /> metody do definiowania nowych lub zmodyfikowanych algorytmu generowania liczb losowych. Klasa pochodna może następnie zależne od implementacji klasy podstawowej <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, i <see cref="M:System.Random.NextDouble" /> metod do wywołania implementacji klasy pochodnej <see cref="M:System.Random.Sample" /> metody.  W programie .NET Framework 2.0 lub nowszy, zachowanie <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, i <see cref="M:System.Random.NextBytes(System.Byte[])" /> metody zostały zmienione tak, aby te metody nie wymagają wykonania klasy pochodnej <see cref="M:System.Random.Sample" /> metody. W związku z tym klas pochodnych <see cref="T:System.Random" /> który docelową programu .NET Framework 2.0 i później również powinny zastępować tych trzech metod.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="4af46-292">
          <para>In the .NET Framework 1.0 and 1.1, a minimum implementation of a class derived from <see cref="T:System.Random" /> required overriding the <see cref="M:System.Random.Sample" /> method to define a new or modified algorithm for generating random numbers. The derived class could then rely on the base class implementation of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, and <see cref="M:System.Random.NextDouble" /> methods to call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.  In the .NET Framework 2.0 and later, the behavior of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, and <see cref="M:System.Random.NextBytes(System.Byte[])" /> methods have changed so that these methods do not necessarily call the derived class implementation of the <see cref="M:System.Random.Sample" /> method. As a result, classes derived from <see cref="T:System.Random" /> that target the .NET Framework 2.0 and later should also override these three methods.</para>
        </span>
      </span>
    </block>
    <block subset="none" type="usage">
      <span data-ttu-id="4af46-293">
        <para>Implementacja generatora liczb losowych w <see cref="T:System.Random" /> klasy nie jest gwarantowana ma pozostać niezmienione przez główne wersje programu .NET Framework. W związku z tym nie należy założono, tej samej inicjatora spowoduje taką samą sekwencję pseudolosowego w różnych wersjach programu .NET Framework.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="4af46-293">
          <para>The implementation of the random number generator in the <see cref="T:System.Random" /> class isn't guaranteed to remain the same across major versions of the .NET Framework. As a result, you shouldn't assume that the same seed will result in the same pseudo-random sequence in different versions of the .NET Framework.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4af46-294">Inicjuje nowe wystąpienie klasy <see cref="T:System.Random" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-294">Initializes a new instance of the <see cref="T:System.Random" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4af46-295">Inicjuje nowe wystąpienie klasy <see cref="T:System.Random" /> przy użyciu wartości początkowej domyślny zależny od czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-295">Initializes a new instance of the <see cref="T:System.Random" /> class, using a time-dependent default seed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af46-296">Domyślna wartość zalążka pochodzi z zegara systemowego i ma ograniczone rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="4af46-296">The default seed value is derived from the system clock and has finite resolution.</span></span> <span data-ttu-id="4af46-297">Dzięki temu różnych <xref:System.Random> obiektów, które są tworzone Zamknij kolejno przez wywołanie konstruktora domyślnego będzie mieć identyczne domyślne wartości inicjatora i, w związku z tym spowoduje identyczne zestawy liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-297">As a result, different <xref:System.Random> objects that are created in close succession by a call to the default constructor will have identical default seed values and, therefore, will produce identical sets of random numbers.</span></span> <span data-ttu-id="4af46-298">Ten problem można uniknąć przy użyciu pojedynczej <xref:System.Random> obiektu do wygenerowania wszystkich liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-298">This problem can be avoided by using a single <xref:System.Random> object to generate all random numbers.</span></span> <span data-ttu-id="4af46-299">Można również obejść go przez zmodyfikowanie wartości początkowej zwrócony przez zegara systemowego i podają jawnie tej nowej wartości inicjatora <xref:System.Random.%23ctor%28System.Int32%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="4af46-299">You can also work around it by modifying the seed value returned by the system clock and then explicitly providing this new seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="4af46-300">Aby uzyskać więcej informacji, zobacz <xref:System.Random.%23ctor%28System.Int32%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="4af46-300">For more information, see the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="4af46-301">Jeśli chcesz, aby Twoje generator liczb losowych wygenerować sekwencję losowych liczb, należy wywołać tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="4af46-301">Call this constructor if you want your random number generator to generate a random sequence of numbers.</span></span> <span data-ttu-id="4af46-302">Aby wygenerować stałym sekwencji liczb losowych, który ma być taka sama dla różnych generatory liczb losowych, należy wywołać <xref:System.Random.%23ctor%28System.Int32%29> konstruktora o wartości inicjatora stałej.</span><span class="sxs-lookup"><span data-stu-id="4af46-302">To generate a fixed  sequence of random numbers that will be the same for different random number generators, call the <xref:System.Random.%23ctor%28System.Int32%29> constructor with a fixed seed value .</span></span> <span data-ttu-id="4af46-303">To <xref:System.Random> przeładowania konstruktora jest często używany podczas testowania aplikacji, które używają liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-303">This <xref:System.Random> constructor overload is frequently used when testing apps that use random numbers.</span></span>  
  
 <span data-ttu-id="4af46-304">Po został uruchomiony generatora liczb losowych, należy wywołać poszczególnych <xref:System.Random> metod, takich jak <xref:System.Random.Next> lub <xref:System.Random.NextDouble>, aby generatora liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-304">Once you've instantiated the random number generator, you call individual <xref:System.Random> methods, such as <xref:System.Random.Next> or <xref:System.Random.NextDouble>, to generate random numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af46-305">W poniższym przykładzie użyto domyślnego konstruktora do utworzenia wystąpienia trzy <xref:System.Random> obiekty i wyświetla sekwencję pięć losowych liczb całkowitych dla każdego.</span><span class="sxs-lookup"><span data-stu-id="4af46-305">The following example uses the default constructor to instantiate three <xref:System.Random> objects and displays a sequence of five random integers for each.</span></span> <span data-ttu-id="4af46-306">Ponieważ dwa pierwsze <xref:System.Random> obiekty są tworzone po kolei Zamknij, są tworzone, używając inicjatora identyczne wartości na podstawie zegara systemowego i, w związku z tym wygenerowanie identyczne sekwencji liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-306">Because the first two <xref:System.Random> objects are created in close succession, they are instantiated using identical seed values based on the system clock and, therefore, they produce an identical sequence of random numbers.</span></span> <span data-ttu-id="4af46-307">Z drugiej strony, domyślny konstruktor obiektu trzeci <xref:System.Random> obiektu jest wywoływana po wykonaniu dwóch sekund opóźnienia spowodowane przez wywołanie metody <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-307">On the other hand, the default constructor of the third <xref:System.Random> object is called after a two-second delay caused by calling the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4af46-308">Ponieważ to daje wartość inicjatora różnych trzeci <xref:System.Random> obiekt, tworzy inną sekwencję liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-308">Because this produces a different seed value for the third <xref:System.Random> object, it produces a different sequence of random numbers.</span></span>  
  
 [!code-csharp[System.Random.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor1.cs#2)]
 [!code-vb[System.Random.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random (int Seed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 Seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Seed As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random(int Seed);" />
      <MemberSignature Language="F#" Value="new Random : int -&gt; Random" Usage="new System.Random Seed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Seed">
          <span data-ttu-id="4af46-309">Liczba używane do obliczania wartości początkowej pseudolosowego numeru sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-309">A number used to calculate a starting value for the pseudo-random number sequence.</span>
          </span>
          <span data-ttu-id="4af46-310">Jeśli określono wartość ujemną, jest używana wartość bezwzględną liczby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-310">If a negative number is specified, the absolute value of the number is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4af46-311">Inicjuje nowe wystąpienie klasy <see cref="T:System.Random" /> przy użyciu wartości początkowej określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-311">Initializes a new instance of the <see cref="T:System.Random" /> class, using the specified seed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af46-312">Podawania wartości inicjatora identyczne do różnych <xref:System.Random> obiektów powoduje, że każde wystąpienie wygenerować identyczne sekwencji liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-312">Providing an identical seed value to different <xref:System.Random> objects causes each instance to produce identical sequences of random numbers.</span></span> <span data-ttu-id="4af46-313">Często jest to podczas testowania aplikacji, które opierają się na generatory liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-313">This is often done when testing apps that rely on random number generators.</span></span>  
  
 <span data-ttu-id="4af46-314">Jeśli aplikacja wymaga innego losowe sekwencje, wywołaj ten konstruktor wielokrotnie z inicjatora różnych wartości.</span><span class="sxs-lookup"><span data-stu-id="4af46-314">If your application requires different random number sequences, invoke this constructor repeatedly with different seed values.</span></span> <span data-ttu-id="4af46-315">Jednym ze sposobów uzyskiwania wartości inicjatora unikatowy jest aby była zależna od czasu.</span><span class="sxs-lookup"><span data-stu-id="4af46-315">One way to produce a unique seed value is to make it time-dependent.</span></span> <span data-ttu-id="4af46-316">Na przykład pochodzi z zegarem systemowym wartości początkowej jako <xref:System.Random.%23ctor> jest przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="4af46-316">For example, derive the seed value from the system clock, as the <xref:System.Random.%23ctor> overload does.</span></span> <span data-ttu-id="4af46-317">Jednak zegara systemowego może nie mieć wystarczającą rozdzielczość zapewnienie różnymi wywołaniami tego konstruktora z wartością innego inicjatora.</span><span class="sxs-lookup"><span data-stu-id="4af46-317">However, the system clock might not have sufficient resolution to provide different invocations of this constructor with a different seed value.</span></span> <span data-ttu-id="4af46-318">W efekcie losowych liczb generatory, generujących identyczne sekwencji liczb pseudolosowego, jak pokazano dwa pierwsze <xref:System.Random> obiektów w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="4af46-318">This results in random number generators that generate identical sequences of pseudo-random numbers, as illustrated by the first two <xref:System.Random> objects in the following example.</span></span> <span data-ttu-id="4af46-319">Aby tego uniknąć, należy zastosować algorytm rozróżnianie wartości początkowej w każdym wywołania lub wywołanie <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> sposób zapewnienia zapewniają każdego konstruktora z wartością innego inicjatora.</span><span class="sxs-lookup"><span data-stu-id="4af46-319">To prevent this, apply an algorithm to differentiate the seed value in each invocation, or call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to ensure that you provide each constructor with a different seed value.</span></span>  
  
 [!code-csharp[System.Random.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor4.cs#4)]
 [!code-vb[System.Random.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor4.vb#4)]  
  
 <span data-ttu-id="4af46-320">Innym rozwiązaniem jest utworzenie wystąpienia pojedynczy <xref:System.Random> obiektu umożliwia generowanie liczb losowych w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="4af46-320">Another option is to instantiate a single <xref:System.Random> object that you use to generate all the random numbers in your application.</span></span> <span data-ttu-id="4af46-321">Daje to nieco lepszą wydajność, ponieważ tworzenie wystąpień generator liczb losowych jest dość kosztowna.</span><span class="sxs-lookup"><span data-stu-id="4af46-321">This yields slightly better performance, since instantiating a random number generator is fairly expensive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af46-322">Poniższy przykład tworzy <xref:System.Random> obiektów z konstruktora klasy, która przyjmuje parametr inicjatora i generuje sekwencję losowych liczb całkowitych i na symulacyjnych.</span><span class="sxs-lookup"><span data-stu-id="4af46-322">The following example creates <xref:System.Random> objects with the class constructor that takes a seed parameter and generates a sequence of random integers and doubles.</span></span> <span data-ttu-id="4af46-323">Pokazano w przykładzie wygenerowania takiej samej kolejności podczas <xref:System.Random> ponownie utworzyć obiektu z parametrem Konstruktor i inicjatora.</span><span class="sxs-lookup"><span data-stu-id="4af46-323">The example illustrates that the same sequence is generated when the <xref:System.Random> object is created again with the constructor and seed parameter.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Next">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4af46-324">Zwraca losową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-324">Returns a random integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next();" />
      <MemberSignature Language="F#" Value="abstract member Next : unit -&gt; int&#xA;override this.Next : unit -&gt; int" Usage="random.Next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4af46-325">Zwraca nieujemną losową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-325">Returns a non-negative random integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4af46-326">32-bitowe liczby całkowite ze znakiem jest większa niż lub równa 0 i mniejsza niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-326">A 32-bit signed integer that is greater than or equal to 0 and less than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af46-327"><xref:System.Random.Next%2A?displayProperty=nameWithType> generuje losową liczbę, którego wartość należy do zakresu od 0 do mniej niż <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4af46-327"><xref:System.Random.Next%2A?displayProperty=nameWithType> generates a random number whose value ranges from 0 to less than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4af46-328">Aby generować losową liczbę, którego wartość należy do zakresu od 0 dodatnią liczbę, należy użyć <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-328">To generate a random number whose value ranges from 0 to some other positive number, use the <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="4af46-329">Aby generować losową liczbę z zakresu innego, należy użyć <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-329">To generate a random number within a different range, use the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af46-330">Poniższy przykład powoduje, że powtarzane wywołania <xref:System.Random.Next%2A> metody do wygenerowania określoną liczbę liczb losowych żądanej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="4af46-330">The following example makes repeated calls to the <xref:System.Random.Next%2A> method to generate a specific number of random numbers requested by the user.</span></span> <span data-ttu-id="4af46-331"><xref:System.Console.ReadLine%2A?displayProperty=nameWithType> Metody jest używany do pobierania danych wejściowych klienta.</span><span class="sxs-lookup"><span data-stu-id="4af46-331">The <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method is used to get customer input.</span></span>  
  
 [!code-cpp[System.Random.Next#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next3.cpp#5)]
 [!code-csharp[System.Random.Next#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next3.cs#5)]
 [!code-vb[System.Random.Next#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next3.vb#5)]  
  
 <span data-ttu-id="4af46-332">Poniższy przykład pochodzi z klasy <xref:System.Random> do generowania sekwencji liczb losowych, którego dystrybucji różni się z dystrybucji uniform generowane przez <xref:System.Random.Sample%2A> metody klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="4af46-332">The following example derives a class from <xref:System.Random> to generate a sequence of random numbers whose distribution differs from the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span> <span data-ttu-id="4af46-333">Zastępuje on <xref:System.Random.Sample%2A> metodę w celu zapewnienia dystrybucji liczb losowych i zastąpienia <xref:System.Random.Next%2A?displayProperty=nameWithType> metodę serii liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-333">It overrides the <xref:System.Random.Sample%2A> method to provide the distribution of random numbers, and overrides the <xref:System.Random.Next%2A?displayProperty=nameWithType> method to use series of random numbers.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="4af46-334">
            <para>W programie .NET Framework w wersji 2.0, jeśli pochodzi z klasy <see cref="T:System.Random" /> i zastąpić <see cref="M:System.Random.Sample" /> metoda, dystrybucji dostarczonej przez implementację klasy pochodnej z <see cref="M:System.Random.Sample" /> — metoda nie jest używany w wywołania do klasy podstawowej Implementacja <see cref="M:System.Random.Next" /> metody. Zamiast tego uniform dystrybucji zwrócony przez podstawowym <see cref="T:System.Random" /> klasa jest używana. To zachowanie zwiększa ogólną wydajność <see cref="T:System.Random" /> klasy. Aby zmienić to zachowanie do wywołania <see cref="M:System.Random.Sample" /> metody w klasie pochodnej, konieczne jest również przesłonięcie <see cref="M:System.Random.Next" /> metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-334">
              <para>Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next" /> method. Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used. This behavior improves the overall performance of the <see cref="T:System.Random" /> class. To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int maxValue);" />
      <MemberSignature Language="F#" Value="abstract member Next : int -&gt; int&#xA;override this.Next : int -&gt; int" Usage="random.Next maxValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxValue">
          <span data-ttu-id="4af46-335">Wyłączny górnej granicy liczby losowe do wygenerowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-335">The exclusive upper bound of the random number to be generated.</span>
          </span>
          <span data-ttu-id="4af46-336">
            <c>maxValue</c> musi być większa lub równa 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-336">
              <c>maxValue</c> must be greater than or equal to 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4af46-337">Zwraca nieujemną losową liczbę całkowitą mniejszą niż określona wartość maksymalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-337">Returns a non-negative random integer that is less than the specified maximum.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4af46-338">32-bitowe liczby całkowite ze znakiem jest większa niż lub równa 0 i mniejsza niż <paramref name="maxValue" />; oznacza to, że zakres wartości zwracanych zwykle obejmuje 0, ale nie <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-338">A 32-bit signed integer that is greater than or equal to 0, and less than <paramref name="maxValue" />; that is, the range of return values ordinarily includes 0 but not <paramref name="maxValue" />.</span>
          </span>
          <span data-ttu-id="4af46-339">Jednak jeśli <paramref name="maxValue" /> jest równe 0, <paramref name="maxValue" /> jest zwracany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-339">However, if <paramref name="maxValue" /> equals 0, <paramref name="maxValue" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af46-340"><xref:System.Random.Next%28System.Int32%29> Przeciążenia zwraca losowych liczb całkowitych zakresu od 0 do `maxValue` -1.</span><span class="sxs-lookup"><span data-stu-id="4af46-340">The <xref:System.Random.Next%28System.Int32%29> overload returns random integers that range from 0 to `maxValue` – 1.</span></span> <span data-ttu-id="4af46-341">Jednak jeśli `maxValue` wynosi 0, metoda zwraca wartość 0.</span><span class="sxs-lookup"><span data-stu-id="4af46-341">However, if `maxValue` is 0, the method returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af46-342">Poniższy przykład generuje losowych liczb całkowitych z różnych przeciążeń <xref:System.Random.Next%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-342">The following example generates random integers with various overloads of the <xref:System.Random.Next%2A> method.</span></span>  
  
 [!code-cpp[System.Random.Next#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next.cpp#1)]
 [!code-csharp[System.Random.Next#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next.cs#1)]
 [!code-vb[System.Random.Next#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next.vb#1)]  
  
 <span data-ttu-id="4af46-343">Poniższy przykład generuje losową liczbę całkowitą, która jest używana jako indeks można pobrać wartości ciągu z tablicy.</span><span class="sxs-lookup"><span data-stu-id="4af46-343">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="4af46-344">Ponieważ najwyższy indeks tablicy jest jeden mniejsza niż długość, wartość <xref:System.Array.Length%2A?displayProperty=nameWithType> właściwość jest podana jako `maxValue` parametru.</span><span class="sxs-lookup"><span data-stu-id="4af46-344">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4af46-345">
            <paramref name="maxValue" /> jest mniejsza niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-345">
              <paramref name="maxValue" /> is less than 0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (minValue As Integer, maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int minValue, int maxValue);" />
      <MemberSignature Language="F#" Value="abstract member Next : int * int -&gt; int&#xA;override this.Next : int * int -&gt; int" Usage="random.Next (minValue, maxValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue">
          <span data-ttu-id="4af46-346">Dolna granica włącznie liczbę losową zwracane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-346">The inclusive lower bound of the random number returned.</span>
          </span>
        </param>
        <param name="maxValue">
          <span data-ttu-id="4af46-347">Wyłączny górnej granicy liczby losowe są zwracane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-347">The exclusive upper bound of the random number returned.</span>
          </span>
          <span data-ttu-id="4af46-348">
            <c>maxValue</c> musi być większa niż lub równa <c>minValue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-348">
              <c>maxValue</c> must be greater than or equal to <c>minValue</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4af46-349">Zwraca losową liczbę całkowitą, która znajduje się w określonym zakresie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-349">Returns a random integer that is within a specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4af46-350">32-bitowe całkowita większa lub równa <paramref name="minValue" /> i mniejsza niż <paramref name="maxValue" />; zakres wartości zwracanych obejmuje <paramref name="minValue" /> , ale nie <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-350">A 32-bit signed integer greater than or equal to <paramref name="minValue" /> and less than <paramref name="maxValue" />; that is, the range of return values includes <paramref name="minValue" /> but not <paramref name="maxValue" />.</span>
          </span>
          <span data-ttu-id="4af46-351">Jeśli <paramref name="minValue" /> jest równe <paramref name="maxValue" />, <paramref name="minValue" /> jest zwracany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-351">If <paramref name="minValue" /> equals <paramref name="maxValue" />, <paramref name="minValue" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af46-352"><xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Przeciążenia zwraca losowych liczb całkowitych w zakresie od `minValue` do `maxValue` -1.</span><span class="sxs-lookup"><span data-stu-id="4af46-352">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> overload returns random integers that range from `minValue` to `maxValue` – 1.</span></span> <span data-ttu-id="4af46-353">Jednak jeśli `maxValue` jest równe `minValue`, metoda zwraca `minValue`.</span><span class="sxs-lookup"><span data-stu-id="4af46-353">However, if `maxValue` equals `minValue`, the method returns `minValue`.</span></span>  
  
 <span data-ttu-id="4af46-354">W przeciwieństwie do innych przeciążeń <xref:System.Random.Next%2A> , która zwracać tylko nieujemnej wartości, ta metoda może zwracać metoda ujemna losową liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="4af46-354">Unlike the other overloads of the <xref:System.Random.Next%2A> method, which return only non-negative values, this method can return a negative random integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af46-355">W poniższym przykładzie użyto <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metody do wygenerowania losowych liczb całkowitych na trzy różne zakresy.</span><span class="sxs-lookup"><span data-stu-id="4af46-355">The following example uses the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to generate random integers with three distinct ranges.</span></span> <span data-ttu-id="4af46-356">Należy pamiętać, że dokładne dane wyjściowe z przykładu zależy od wartości inicjatora dostarczany przez system przekazany do <xref:System.Random> konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="4af46-356">Note that the exact output from the example depends on the system-supplied seed value passed to the <xref:System.Random> class constructor.</span></span>  
  
 [!code-cpp[System.Random.Next#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next2.cpp#2)]
 [!code-csharp[System.Random.Next#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/Next2.cs#2)]
 [!code-vb[System.Random.Next#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next2.vb#2)]  
  
 <span data-ttu-id="4af46-357">Poniższy przykład generuje losową liczbę całkowitą, która jest używana jako indeks można pobrać wartości ciągu z tablicy.</span><span class="sxs-lookup"><span data-stu-id="4af46-357">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="4af46-358">Ponieważ najwyższy indeks tablicy jest jeden mniejsza niż długość, wartość <xref:System.Array.Length%2A?displayProperty=nameWithType> właściwość jest podana jako `maxValue` parametru.</span><span class="sxs-lookup"><span data-stu-id="4af46-358">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next4.cpp#4)]
 [!code-csharp[System.Random.Next#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next4.cs#4)]
 [!code-vb[System.Random.Next#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4af46-359">
            <paramref name="minValue" /> jest większa niż <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-359">
              <paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="4af46-360">
            <para>W programie .NET Framework w wersji 2.0, jeśli pochodzi z klasy <see cref="T:System.Random" /> i zastąpić <see cref="M:System.Random.Sample" /> metoda, dystrybucji dostarczonej przez implementację klasy pochodnej z <see cref="M:System.Random.Sample" /> — metoda nie jest używany w wywołania do klasy podstawowej Implementacja <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> przeciążenia metody, jeśli różnica między <paramref name="minValue" /> i <paramref name="maxValue" /> parametrów jest większa niż <see cref="F:System.Int32.MaxValue" />. Zamiast tego uniform dystrybucji zwrócony przez podstawowym <see cref="T:System.Random" /> klasa jest używana. To zachowanie zwiększa ogólną wydajność <see cref="T:System.Random" /> klasy. Aby zmienić to zachowanie do wywołania <see cref="M:System.Random.Sample" /> metody w klasie pochodnej, konieczne jest również przesłonięcie <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> przeciążenie metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-360">
              <para>Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload if the difference between the <paramref name="minValue" /> and <paramref name="maxValue" /> parameters is greater than <see cref="F:System.Int32.MaxValue" />. Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used. This behavior improves the overall performance of the <see cref="T:System.Random" /> class. To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member NextBytes : byte[] -&gt; unit&#xA;override this.NextBytes : byte[] -&gt; unit" Usage="random.NextBytes buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="4af46-361">Tablica bajtów, aby zawierała liczby losowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-361">An array of bytes to contain random numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4af46-362">Wstawia elementy określonej tablicy bajtów liczb losowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-362">Fills the elements of a specified array of bytes with random numbers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af46-363">Każdy element tablicy bajtów ma ustawioną liczbę losową większą niż lub równa 0 i mniejsza niż lub równa <xref:System.Byte.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="4af46-363">Each element of the array of bytes is set to a random number greater than or equal to 0, and less than or equal to <xref:System.Byte.MaxValue>.</span></span>  
  
 <span data-ttu-id="4af46-364">Na przykład aby wygenerować zabezpieczone kryptograficznie liczbę losową odpowiedni w przypadku tworzenia losowe hasło, użyj metody takie jak <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4af46-364">For example, to generate a cryptographically secured random number suitable for creating a random password, use a method such as <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af46-365">W poniższym przykładzie pokazano sposób użycia <xref:System.Random.NextBytes%2A> metody, aby wypełnić tablicę bajtów losowych wartości bajtów.</span><span class="sxs-lookup"><span data-stu-id="4af46-365">The following example demonstrates how to use the <xref:System.Random.NextBytes%2A> method to fill an array of bytes with random byte values.</span></span>  
  
 [!code-cpp[Classic Random.NextBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Random.NextBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CS/source.cs#1)]
 [!code-vb[Classic Random.NextBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4af46-366">
            <paramref name="buffer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-366">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="4af46-367">
            <para>W programie .NET Framework w wersji 2.0, jeśli pochodzi z klasy <see cref="T:System.Random" /> i zastąpić <see cref="M:System.Random.Sample" /> metoda, dystrybucji dostarczonej przez implementację klasy pochodnej z <see cref="M:System.Random.Sample" /> — metoda nie jest używany w wywołania do klasy podstawowej Implementacja <see cref="M:System.Random.NextBytes(System.Byte[])" /> metody. Zamiast tego uniform dystrybucji zwrócony przez podstawowym <see cref="T:System.Random" /> klasa jest używana. To zachowanie zwiększa ogólną wydajność <see cref="T:System.Random" /> klasy. Aby zmienić to zachowanie do wywołania <see cref="M:System.Random.Sample" /> metody w klasie pochodnej, konieczne jest również przesłonięcie <see cref="M:System.Random.NextBytes(System.Byte[])" /> metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-367">
              <para>Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method. Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used. This behavior improves the overall performance of the <see cref="T:System.Random" /> class. To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member NextBytes : Span&lt;byte&gt; -&gt; unit&#xA;override this.NextBytes : Span&lt;byte&gt; -&gt; unit" Usage="random.NextBytes buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextDouble">
      <MemberSignature Language="C#" Value="public virtual double NextDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NextDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double NextDouble();" />
      <MemberSignature Language="F#" Value="abstract member NextDouble : unit -&gt; double&#xA;override this.NextDouble : unit -&gt; double" Usage="random.NextDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4af46-368">Zwraca zmiennoprzecinkowe liczba jest większa niż lub równa 0,0 i mniejszą niż 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-368">Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4af46-369">Podwójnej precyzji liczba zmiennoprzecinkowa, która jest większa niż lub równa 0,0 i mniejszą niż 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-369">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af46-370">Górna granica rzeczywista liczba zwracanych przez tę metodę jest 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="4af46-370">The actual upper bound of the random number returned by this method is 0.99999999999999978.</span></span>  
  
 <span data-ttu-id="4af46-371">Aby pobrać losowych wartości zmiennoprzecinkowych w zakresie innym niż 0,0 do 1,0, zobacz sekcję "Pobrać wartości zmiennoprzecinkowych w określonym zakresie" <xref:System.Random> klasy tematu.</span><span class="sxs-lookup"><span data-stu-id="4af46-371">To retrieve random floating-point values within a range other than 0.0 and 1.0, see the "Retrieve floating-point values in a specified range" section of the <xref:System.Random> class topic.</span></span>  
  
 <span data-ttu-id="4af46-372">Ta metoda jest publicznej wersji Metoda chroniona <xref:System.Random.Sample%2A>.</span><span class="sxs-lookup"><span data-stu-id="4af46-372">This method is the public version of the protected method, <xref:System.Random.Sample%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af46-373">W poniższym przykładzie użyto <xref:System.Random.NextDouble%2A> do generowania sekwencji symulacyjnych losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-373">The following example uses the <xref:System.Random.NextDouble%2A> method to generate sequences of random doubles.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 <span data-ttu-id="4af46-374">Następujące wywołania przykład <xref:System.Random.NextDouble%2A> do generowania losowego 100 numery i wyświetlenie ich rozkład częstotliwości.</span><span class="sxs-lookup"><span data-stu-id="4af46-374">The following example calls the <xref:System.Random.NextDouble%2A> method to generate 100 random numbers and displays their frequency distribution.</span></span>  
  
 [!code-csharp[System.Random.NextDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.random.nextdouble/cs/nextdouble1.cs#2)]
 [!code-vb[System.Random.NextDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.random.nextdouble/vb/nextdouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sample">
      <MemberSignature Language="C#" Value="protected virtual double Sample ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float64 Sample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Sample" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Sample () As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual double Sample();" />
      <MemberSignature Language="F#" Value="abstract member Sample : unit -&gt; double&#xA;override this.Sample : unit -&gt; double" Usage="random.Sample " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4af46-375">Zwraca liczbę losową zmiennoprzecinkowe z przedziału od 0,0 do 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-375">Returns a random floating-point number between 0.0 and 1.0.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4af46-376">Podwójnej precyzji liczba zmiennoprzecinkowa, która jest większa niż lub równa 0,0 i mniejszą niż 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-376">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af46-377">Do tworzenia różnych dystrybucji losowych lub różnych losowych liczb generator regułę, klasa wyprowadzona z <xref:System.Random> klasy i zastąpić <xref:System.Random.Sample%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-377">To produce a different random distribution or a different random number generator principle, derive a class from the <xref:System.Random> class and override the <xref:System.Random.Sample%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4af46-378"><xref:System.Random.Sample%2A> Jest metoda `protected`, co oznacza, że jest dostępny tylko w obrębie <xref:System.Random> klasy i jej klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="4af46-378">The <xref:System.Random.Sample%2A> method is `protected`, which means that it is accessible only within the <xref:System.Random> class and its derived classes.</span></span> <span data-ttu-id="4af46-379">Do generowania losowego liczbą z zakresu od 0 i 1 z <xref:System.Random> wystąpienia, należy wywołać <xref:System.Random.NextDouble%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="4af46-379">To generate a random number between 0 and 1 from a <xref:System.Random> instance, call the <xref:System.Random.NextDouble%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af46-380">Poniższy przykład pochodzi z klasy <xref:System.Random> i zastępuje <xref:System.Random.Sample%2A> metody do wygenerowania dystrybucji liczb losowych.</span><span class="sxs-lookup"><span data-stu-id="4af46-380">The following example derives a class from <xref:System.Random> and overrides the <xref:System.Random.Sample%2A> method to generate a distribution of random numbers.</span></span> <span data-ttu-id="4af46-381">Tej dystrybucji jest inny niż uniform dystrybucji wygenerowanych przez <xref:System.Random.Sample%2A> metody klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="4af46-381">This distribution is different than the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="4af46-382">
            <para>W programie .NET Framework w wersji 2.0, jeśli pochodzi z klasy <see cref="T:System.Random" /> i zastąpić <see cref="M:System.Random.Sample" /> metoda, dystrybucji dostarczonej przez implementację klasy pochodnej z <see cref="M:System.Random.Sample" /> — metoda nie jest używany w wywołania do klasy podstawowej wdrożenia z następujących metod: - <see cref="M:System.Random.NextBytes(System.Byte[])" /> metody.  - <see cref="M:System.Random.Next" /> Metody.  - <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> Metody, jeśli (<paramref name="maxValue" /> - <paramref name="minValue" />) jest większa niż <see cref="F:System.Int32.MaxValue" />.  Zamiast tego uniform dystrybucji dostarczone przez podstawowym <see cref="T:System.Random" /> klasa jest używana. To zachowanie zwiększa ogólną wydajność <see cref="T:System.Random" /> klasy. Aby zmodyfikować to działanie do wykonania wywołania <see cref="M:System.Random.Sample" /> metody w klasie pochodnej, musi także zastępować zachowanie tych trzech elementów członkowskich. W przykładzie przedstawiono ilustracji.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4af46-382">
              <para>Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the following methods:  -   The <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.  -   The <see cref="M:System.Random.Next" /> method.  -   The <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method, if (<paramref name="maxValue" /> - <paramref name="minValue" />) is greater than <see cref="F:System.Int32.MaxValue" />.  Instead, the uniform distribution provided by the base <see cref="T:System.Random" /> class is used. This behavior improves the overall performance of the <see cref="T:System.Random" /> class. To modify this behavior to call the implementation of the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the behavior of these three members. The example provides an illustration.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Random.NextDouble" />
      </Docs>
    </Member>
  </Members>
</Type>