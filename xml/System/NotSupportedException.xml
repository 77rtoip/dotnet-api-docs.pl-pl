<Type Name="NotSupportedException" FullName="System.NotSupportedException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8efb79e649d8ac96df50ccdc12c788e3be082c83" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30744452" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NotSupportedException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit NotSupportedException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.NotSupportedException" />
  <TypeSignature Language="VB.NET" Value="Public Class NotSupportedException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class NotSupportedException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyjątek zgłaszany, gdy jest wywoływana metoda nie jest obsługiwany lub jest próba odczytu, wyszukiwanie lub zapisać do strumienia, który nie obsługuje wywołanej funkcji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.NotSupportedException> Wskazuje, czy implementacja nie istnieje dla wywołanej metody lub właściwości.  
  
 <xref:System.NotSupportedException> używa COR_E_NOTSUPPORTED HRESULT, która ma wartość 0x80131515.  
  
 Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.NotSupportedException>, zobacz <xref:System.NotSupportedException.%23ctor%2A> konstruktorów.  
  
## <a name="throwing-a-notsupportedexception-exception"></a>Wyrzucanie wyjątków notsupportedexception —  
 Należy rozważyć zgłaszanie <xref:System.NotSupportedException> wyjątek w następujących przypadkach:  
  
-   W przypadku implementowania interfejsu ogólnego przeznaczenia, a liczba metod ma znaczenie implementacji. Na przykład w przypadku tworzenia Data i godzina wpisz tego implementuje <xref:System.IConvertible> interfejsu spowoduje zgłoszenie <xref:System.NotSupportedException> wyjątek dla większości konwersji.  
  
-   Klasa abstrakcyjna, która wymaga, aby zastąpić metody zostały odziedziczone. Jednak tylko w przypadku przygotowane do implementacji podzbiór tych. Dla metody, których nie chcesz wdrożyć, użytkownik może zgłosić <xref:System.NotSupportedException>.  
  
-   Definiujesz typu ogólnego przeznaczenia o stanie, który umożliwia warunkowo operacji. Na przykład danego typu może być tylko do odczytu lub odczytu i zapisu. W takim przypadku:  
  
    -   Jeśli obiekt jest tylko do odczytu, spróbuje przypisać wartości do właściwości wystąpienia lub wywołanie metody, które modyfikują stan wystąpienia powinien zgłosić <xref:System.NotSupportedException> wyjątku.  
  
    -   Należy zaimplementować właściwości, która zwraca <xref:System.Boolean> wartość, która wskazuje, czy konkretnej funkcji jest dostępna. Na przykład dla typu, który może być tylko do odczytu lub odczytu i zapisu, można zaimplementować `IsReadOnly` właściwość, która wskazuje, czy zestaw metod odczytu i zapisu są dostępne lub niedostępne.  
  
## <a name="handling-a-notsupportedexception-exception"></a>Obsługa notsupportedexception — wyjątek  
 <xref:System.NotSupportedException> Wyjątek wskazuje, czy metoda nie ma żadnej implementacji i że należy nie wywołania go.  Nie powinna obsługiwać wyjątek. Zamiast tego, co należy zrobić zależy od przyczyną wyjątku: implementacja jest całkowicie nieobecne, czy wywołanie elementu członkowskiego jest niespójna w celu obiektu (takie jak wywołanie <xref:System.IO.FileStream.Read%2A?displayProperty=nameWithType> metoda tylko do odczytu <xref:System.IO.FileStream> obiektu .  
  
 **Nie dostarczono implementacji, ponieważ nie można wykonać operacji w znaczący sposób.**  
 To jest typowe wyjątek podczas wywoływania metody dla obiektu, który udostępnia implementacje metod abstrakcyjna klasa podstawowa lub że implementuje interfejs ogólnego przeznaczenia, a metoda ma znaczenie implementacji.  
  
 Na przykład <xref:System.Convert> klasa implementuje <xref:System.IConvertible> interfejsu, co oznacza, że musi zawierać metodę konwersji każdego typu pierwotnego do wszystkich typów pierwotnych. Wiele z tych konwersji, jednak nie są możliwe. W wyniku wywołania <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> , na przykład metodę <xref:System.NotSupportedException> wyjątku, ponieważ nie jest możliwa konwersja między <xref:System.DateTime> i <xref:System.Boolean> wartość  
  
 Aby wyeliminować wyjątek, należy wyeliminować wywołania metody.  
  
 **Wywołanie metody nie jest obsługiwany w podanej stan obiektu.**  
 Podjęto próbę wywołania element członkowski, którego funkcja jest niedostępna z powodu stanu obiektu. Można wyeliminować wyjątek w jeden z trzech sposobów:  
  
-   Wcześniej znać stan obiektu, ale został wywołany nieobsługiwanej metody lub właściwości. W takim przypadku wywołania elementu jest błędem i wyeliminować go.  
  
-   Wcześniej znać stan obiektu (zazwyczaj z powodu kod ma wystąpienia go), ale obiekt jest niepoprawnie skonfigurowana. Poniższy przykład przedstawia ten problem. Tworzy ona tylko do odczytu <xref:System.IO.FileStream> obiektu, a następnie próby zapisu do niego.  
  
     [!code-csharp[System.NotSupportedException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/BadState1.cs#1)]
     [!code-vb[System.NotSupportedException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/BadState1.vb#1)]  
  
     Można wyeliminować wyjątku przez zapewnienie im wystąpień obiektu obsługuje funkcje, które mają. Poniższy przykład rozwiązuje problem tylko do odczytu <xref:System.IO.FileStream> obiektu podając poprawne argumenty <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%29?displayProperty=nameWithType> konstruktora.  
  
-   Stan obiektu nie wiadomo z wyprzedzeniem, a obiekt nie obsługuje określonej operacji. W większości przypadków obiektu powinna zawierać właściwości lub metody, która wskazuje, czy obsługuje ona określonego zestawu operacji. Wyjątek można wyeliminować, sprawdzając wartość obiektu i wywoływanie elementu członkowskiego tylko wtedy, gdy jest to odpowiednie.  
  
     W poniższym przykładzie zdefiniowano `DetectEncoding` — metoda, która zgłasza <xref:System.NotSupportedException> wyjątek podczas próby odczytu z początku strumienia, który nie obsługuje dostęp do odczytu.  
  
     [!code-csharp[System.NotSupportedException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/TestProp1.cs#3)]
     [!code-vb[System.NotSupportedException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/TestProp1.vb#3)]  
  
     Wyjątek można wyeliminować, sprawdzając wartość <xref:System.IO.FileStream.CanRead%2A?displayProperty=nameWithType> właściwości i metody został zakończony, jeśli strumień jest tylko do odczytu.  
  
     [!code-csharp[System.NotSupportedException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/TestProp2.cs#4)]
     [!code-vb[System.NotSupportedException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/TestProp2.vb#4)]  
  
## <a name="related-exception-types"></a>Typy wyjątków pokrewne  
 <xref:System.NotSupportedException> Wyjątku jest ściśle związana z dwóch innych typów wyjątków;  
  
 <xref:System.NotImplementedException>.  
 Ten wyjątek zgłoszony, gdy metody może zostać zaimplementowana, ale nie jest albo, ponieważ element członkowski zostanie wdrożone w nowszej wersji, element członkowski nie jest dostępna w danej platformy, lub element członkowski należy do klasy abstrakcyjnej i Klasa pochodna musi dostarczyć wiadomości błyskawicznych plementation.  
  
 <xref:System.InvalidOperationException>  
 Wyjątek w scenariuszach, w których zazwyczaj zdarza się dla obiekt do wykonania żądanej operacji, a stan obiektu określa, czy można wykonać operacji.  
  
## <a name="net-compact-framework-notes"></a>Informacje o .NET compact Framework  
 Podczas pracy z [!INCLUDE[Compact](~/includes/compact-md.md)] i użyciu P/Invoke w funkcji natywnej, ten wyjątek może zostać zgłoszony, jeśli:  
  
-   Deklaracji w kodzie zarządzanym jest niepoprawny.  
  
-   [!INCLUDE[Compact](~/includes/compact-md.md)] Nie obsługuje co chcesz zrobić.  
  
-   Nazwy bibliotek DLL są zniekształcone na eksportu.  
  
 Jeśli <xref:System.NotSupportedException.%23ctor%2A> wyjątek, sprawdź:  
  
-   Dla dowolnego naruszeń [!INCLUDE[Compact](~/includes/compact-md.md)] ograniczenia P/Invoke.  
  
-   Dla argumentów, które wymagają wstępnie przydzielić pamięci. Jeśli takie istnieją, należy przekazać odwołanie do istniejącej zmiennej.  
  
-   Czy nazwy eksportowane funkcje są poprawne. Można to sprawdzić za [DumpBin.exe](https://msdn.microsoft.com/library/c1h23y6c.aspx).  
  
-   Że nie próbujesz przekazać zbyt wiele argumentów.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <altmember cref="T:System.IO.FileStream" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NotSupportedException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NotSupportedException" /> klasy ustawienie <see cref="P:System.Exception.Message" /> właściwość nowego wystąpienia systemu dostarczanego przez komunikatu opisującego błąd. Ten komunikat uwzględnia bieżącą kulturę systemu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.NotSupportedException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.Exception.Message%2A>|Zlokalizowany ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.String" /> opisujący błąd. Zawartość <c>komunikat</c> ma na celu rozumiane przez człowieka. Obiekt wywołujący tego konstruktora jest wymagany w celu zagwarantowania, że ten ciąg został zlokalizowany w bieżącej kulturze systemu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NotSupportedException" /> klasy z powodu określonego błędu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.NotSupportedException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NotSupportedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NotSupportedException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt zawierający dane serializowanego obiektu.</param>
        <param name="context">Informacje kontekstowe o źródłowego lub miejscu docelowym.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NotSupportedException" /> z zserializowanymi danymi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływana podczas deserializacji do odtworzenia obiektu wyjątku przesyłanego za pomocą strumienia. Aby uzyskać więcej informacji, zobacz [XML i serializacji SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</param>
        <param name="innerException">Wyjątek, który jest przyczyną bieżącego wyjątku. Jeśli <c>innerException</c> parametru nie jest odwołaniem o wartości zerowej, bieżący wyjątek jest zgłaszany w <see langword="catch" /> bloku, który obsługuje wyjątek wewnętrzny.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NotSupportedException" /> z określonego komunikatu o błędzie i odwołania do wyjątek wewnętrzny będący przyczyną tego wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątek zgłaszany bezpośrednio w wyniku poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości. <xref:System.Exception.InnerException%2A> Właściwość zwraca tę samą wartość, która została przekazana do konstruktora, lub `null` Jeśli <xref:System.Exception.InnerException%2A> właściwości nie dostarcza do konstruktora wartości wyjątku wewnętrznego.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.NotSupportedException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie do wewnętrznego wyjątku.|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>