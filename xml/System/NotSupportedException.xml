<Type Name="NotSupportedException" FullName="System.NotSupportedException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42231e15f1b7cf5fdb39bfb6819b254b076b460c" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39900663" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NotSupportedException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit NotSupportedException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.NotSupportedException" />
  <TypeSignature Language="VB.NET" Value="Public Class NotSupportedException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class NotSupportedException : SystemException" />
  <TypeSignature Language="F#" Value="type NotSupportedException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyjątek, który jest generowany, gdy wywoływana metoda nie jest obsługiwana lub po próbie odczytania, wyszukiwanie lub zapisać do strumienia, który nie obsługuje wywołanej funkcji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.NotSupportedException> Wskazuje, że implementacja nie istnieje dla wywoływanej metody lub właściwości.  
  
 <xref:System.NotSupportedException> używa COR_E_NOTSUPPORTED HRESULT, która ma wartość 0x80131515.  
  
 Aby uzyskać listę początkowe wartości właściwości wystąpienia <xref:System.NotSupportedException>, zobacz <xref:System.NotSupportedException.%23ctor%2A> konstruktorów.  
  
## <a name="throwing-a-notsupportedexception-exception"></a>Zostanie zgłoszony wyjątek notsupportedexception —  
 Warto rozważyć zgłaszanie <xref:System.NotSupportedException> wyjątek w następujących przypadkach:  
  
-   W przypadku implementowania interfejsu ogólnego przeznaczenia, a liczba metod nie mają znaczący implementacji. Na przykład, jeśli tworzysz daty i godziny wpisz który implementuje <xref:System.IConvertible> interfejsu, będzie zgłaszają <xref:System.NotSupportedException> wyjątek dla większości konwersje.  
  
-   Została odziedziczona klasa abstrakcyjna, która wymaga zastąpienia pewnej liczby metod. Jednak tylko w przypadku przygotowane zapewniać implementację dla podzestawów tych. Dla metod, które nie chcesz wdrożyć, użytkownik może zgłaszać <xref:System.NotSupportedException>.  
  
-   Definiowania typów ogólnego przeznaczenia o stanie, który umożliwia wykonywanie operacji warunkowo. Na przykład danego typu może być tylko do odczytu lub odczytu i zapisu. W takiej sytuacji:  
  
    -   Jeśli obiekt jest tylko do odczytu, próba przypisania wartości do właściwości wystąpienia lub wywołanie metody, które modyfikują stan wystąpienia powinno zgłosić <xref:System.NotSupportedException> wyjątku.  
  
    -   Powinny implementować właściwość, która zwraca <xref:System.Boolean> wartość, która wskazuje, czy konkretnej funkcji są dostępne. Na przykład dla typu, który może być tylko do odczytu lub odczytu i zapisu, można zaimplementować `IsReadOnly` właściwość, która wskazuje, czy zestaw metod odczytu i zapisu są dostępne lub niedostępne.  
  
## <a name="handling-a-notsupportedexception-exception"></a>Wyjątek notsupportedexception — Obsługa  
 <xref:System.NotSupportedException> Wyjątku wskazuje, że metoda nie ma implementacji i że nie należy wywołać go.  Nie powinien obsługiwać wyjątek. Zamiast tego, co należy zrobić zależy od przyczyną wyjątku: implementacja jest całkowicie nieobecne, czy wywołanie elementu członkowskiego jest niespójny mający na celu ułatwienie obiektu (takie jak wywołanie <xref:System.IO.FileStream.Read%2A?displayProperty=nameWithType> metody tylko do odczytu <xref:System.IO.FileStream> obiektu .  
  
 **Nie podano implementacji, ponieważ nie można wykonać operacji w znaczący sposób.**  
 Jest to typowe wyjątku, gdy wywołujesz metody na obiekt, który zawiera implementacje dla metod abstrakcyjną klasę bazową lub który implementuje interfejs ogólnego przeznaczenia, a metoda nie ma istotnych implementacji.  
  
 Na przykład <xref:System.Convert> klasy implementuje <xref:System.IConvertible> interfejsu, co oznacza, że musi ona zawierać metodę, aby skonwertować wszystkich pierwotnych typów do wszystkich pierwotnych typów. Wiele z tych konwersji, jednak nie są możliwe. W wyniku wywołania <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> metody, na przykład zgłasza <xref:System.NotSupportedException> wyjątek, ponieważ nie jest możliwe konwersja między <xref:System.DateTime> i <xref:System.Boolean> wartość  
  
 Aby wyeliminować wyjątek, należy wyeliminować wywołania metody.  
  
 **Wywołanie metody nie jest obsługiwany w podanej stan obiektu.**  
 Podjęto próbę wywołania członka, którego funkcja jest niedostępna z powodu stanu obiektu. Możesz wyeliminować wyjątku w jeden z trzech sposobów:  
  
-   Wcześniej znać stan obiektu, ale została wywołana nieobsługiwanej metody lub właściwości. W takim przypadku wywołania elementu błędu i można je wyeliminować.  
  
-   Wcześniej znać stan obiektu (zazwyczaj, ponieważ kod został uruchomiony go), ale obiekt jest niepoprawnie skonfigurowana. Poniższy przykład ilustruje ten problem. Tworzy on tylko do odczytu <xref:System.IO.FileStream> obiektu, a następnie próbuje zapisanie w nim.  
  
     [!code-csharp[System.NotSupportedException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/BadState1.cs#1)]
     [!code-vb[System.NotSupportedException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/BadState1.vb#1)]  
  
     Możesz wyeliminować wyjątek przez zapewnienie im wystąpień obiektu obsługuje funkcje, które chcesz. Poniższy przykład rozwiązuje problem z tylko do odczytu <xref:System.IO.FileStream> obiektu, podając poprawne argumenty <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%29?displayProperty=nameWithType> konstruktora.  
  
-   Stan obiektu nie jest znany wcześniej, a obiekt nie obsługuje określonej operacji. W większości przypadków obiekt powinien zawierać właściwości lub metody, która wskazuje, czy obsługuje ona określonego zestawu operacji. Wyjątek można wyeliminować, sprawdzając wartość obiektu i wywoływania elementu członkowskiego, tylko wtedy, gdy jest to odpowiednie.  
  
     W poniższym przykładzie zdefiniowano `DetectEncoding` metodę, która zgłasza <xref:System.NotSupportedException> wyjątek podczas próby odczytu od początku strumienia, który nie obsługuje dostęp do odczytu.  
  
     [!code-csharp[System.NotSupportedException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/TestProp1.cs#3)]
     [!code-vb[System.NotSupportedException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/TestProp1.vb#3)]  
  
     Wyjątek można wyeliminować, sprawdzając wartość <xref:System.IO.FileStream.CanRead%2A?displayProperty=nameWithType> właściwość i Kończenie wykonywania metody, jeśli strumień jest tylko do odczytu.  
  
     [!code-csharp[System.NotSupportedException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/TestProp2.cs#4)]
     [!code-vb[System.NotSupportedException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/TestProp2.vb#4)]  
  
## <a name="related-exception-types"></a>Typy wyjątków pokrewne  
 <xref:System.NotSupportedException> Wyjątek jest ściśle powiązane z dwóch innych typów wyjątków;  
  
 <xref:System.NotImplementedException>.  
 Ten wyjątek jest zgłaszany, gdy metoda może być wdrażany, ale nie jest dostępna, albo, ponieważ element członkowski będzie wykonywany w nowszej wersji, element członkowski nie jest dostępna na konkretnej platformie, lub element członkowski należy do klasy abstrakcyjnej i klasy pochodnej musi dostarczyć wiadomości błyskawicznych plementation.  
  
 <xref:System.InvalidOperationException>  
 Wyjątek w scenariuszach, w których zazwyczaj zdarza się dla obiektu do wykonania żądanej operacji, a stan obiektu określa, czy można wykonać operacji.  
  
## <a name="net-compact-framework-notes"></a>Informacje o .NET compact Framework  
 Podczas pracy z [!INCLUDE[Compact](~/includes/compact-md.md)] i użyciu metody P/Invoke w funkcji natywnej, ten wyjątek może zostać wygenerowany, jeśli:  
  
-   Deklaracji w kodzie zarządzanym jest nieprawidłowy.  
  
-   [!INCLUDE[Compact](~/includes/compact-md.md)] Nie obsługuje co próbujesz zrobić.  
  
-   Nazwy bibliotek DLL są zniekształcone na eksportu.  
  
 Jeśli <xref:System.NotSupportedException.%23ctor%2A> jest zgłaszany wyjątek, sprawdź:  
  
-   Dla wszelkich naruszeniach [!INCLUDE[Compact](~/includes/compact-md.md)] ograniczenia metody P/Invoke.  
  
-   Aby uzyskać argumenty, które wymagają wstępnie przydzielić pamięci. Jeśli takie istnieją, należy przekazać odwołanie do istniejącej zmiennej.  
  
-   Czy nazwy eksportowanych funkcji są poprawne. Można to sprawdzić za pomocą [DumpBin.exe](https://msdn.microsoft.com/library/c1h23y6c.aspx).  
  
-   Czy nie próbujesz przekazać zbyt wiele argumentów.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <altmember cref="T:System.IO.FileStream" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NotSupportedException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NotSupportedException" /> klasy, ustawienie <see cref="P:System.Exception.Message" /> właściwości nowego wystąpienia dostarczane przez system komunikatu, który opisuje błąd. Ten komunikat uwzględnia bieżącą kulturę systemu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.NotSupportedException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.Exception.Message%2A>|Zlokalizowany ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new NotSupportedException : string -&gt; NotSupportedException" Usage="new System.NotSupportedException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Element <see cref="T:System.String" /> , który opisuje błąd. Zawartość <c>komunikat</c> ma być zrozumiała dla ludzi. Obiekt wywołujący tego konstruktora jest wymagany w celu zagwarantowania, że ten ciąg został zlokalizowany w bieżącej kulturze systemu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NotSupportedException" /> klasy przy użyciu określonego komunikatu o błędzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.NotSupportedException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NotSupportedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NotSupportedException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new NotSupportedException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; NotSupportedException" Usage="new System.NotSupportedException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt zawierający dane serializowanego obiektu.</param>
        <param name="context">Informacje kontekstowe o źródłowego lub miejscu docelowym.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NotSupportedException" /> klasy z serializowanych danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływana podczas deserializacji do odtworzenia obiektu wyjątku przesyłanego za pomocą strumienia. Aby uzyskać więcej informacji, zobacz [XML oraz serializacji protokołu SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new NotSupportedException : string * Exception -&gt; NotSupportedException" Usage="new System.NotSupportedException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</param>
        <param name="innerException">Wyjątek, który jest przyczyną bieżącego wyjątku. Jeśli <c>innerException</c> parametr nie jest odwołanie o wartości null, bieżący wyjątek jest zgłaszany w <see langword="catch" /> blok, który obsługuje wyjątek wewnętrzny.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.NotSupportedException" /> klasy przy użyciu określonego komunikatu o błędzie i odwołania do wewnętrznego wyjątku, który jest przyczyną tego wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątek generowany jako bezpośredni wynik poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości. <xref:System.Exception.InnerException%2A> Właściwość zwraca taką samą wartość, która jest przekazywana do konstruktora, lub `null` Jeśli <xref:System.Exception.InnerException%2A> nie dostarcza wartości wewnętrznego wyjątku do konstruktora.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.NotSupportedException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie do wewnętrznego wyjątku.|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>