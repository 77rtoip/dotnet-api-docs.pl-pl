<Type Name="IAsyncResult" FullName="System.IAsyncResult">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e146db19e5a83c2ef68363fb3b583f92f2c62b48" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69420478" /></Metadata><TypeSignature Language="C#" Value="public interface IAsyncResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAsyncResult" />
  <TypeSignature Language="DocId" Value="T:System.IAsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAsyncResult" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAsyncResult" />
  <TypeSignature Language="F#" Value="type IAsyncResult = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5e282-101">Reprezentuje stan operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="5e282-101">Represents the status of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e282-102"><xref:System.IAsyncResult> Interfejs jest implementowany przez klasy zawierające metody, które mogą działać asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="5e282-102">The <xref:System.IAsyncResult> interface is implemented by classes containing methods that can operate asynchronously.</span></span> <span data-ttu-id="5e282-103">Jest to typ zwracany metod, które inicjują operację asynchroniczną, taką jak <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>i są przesyłane do metod kończących operację asynchroniczną, takich jak. <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="5e282-103">It is the return type of methods that initiate an asynchronous operation, such as <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>, and it is passed to methods that conclude an asynchronous operation, such as <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e282-104"><xref:System.IAsyncResult>obiekty są również przesyłane do metod wywoływanych <xref:System.AsyncCallback> przez delegatów po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="5e282-104"><xref:System.IAsyncResult> objects are also passed to methods invoked by <xref:System.AsyncCallback> delegates when an asynchronous operation completes.</span></span>  
  
 <span data-ttu-id="5e282-105">Obiekt obsługujący <xref:System.IAsyncResult> interfejs przechowuje informacje o stanie operacji asynchronicznej i udostępnia obiekt synchronizacji, aby zezwolić na zasygnalizowanie wątków po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="5e282-105">An object that supports the <xref:System.IAsyncResult> interface stores state information for an asynchronous operation and provides a synchronization object to allow threads to be signaled when the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e282-106">Klasa jest implementacją `BeginInvoke`,która jest zwracana przez metodę w przypadku użycia delegata do wywołania metody asynchronicznie. <xref:System.IAsyncResult> <xref:System.Runtime.Remoting.Messaging.AsyncResult></span><span class="sxs-lookup"><span data-stu-id="5e282-106">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> class is the implementation of <xref:System.IAsyncResult> that is returned by the `BeginInvoke` method when you use a delegate to call a method asynchronously.</span></span>  
  
 <span data-ttu-id="5e282-107">Szczegółowy opis sposobu <xref:System.IAsyncResult> użycia interfejsu znajduje się w temacie [wywoływanie metod synchronicznych asynchronicznie](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) .</span><span class="sxs-lookup"><span data-stu-id="5e282-107">For a detailed description of how the <xref:System.IAsyncResult> interface is used, see the [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e282-108">W poniższym przykładzie pokazano <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> <xref:System.Threading.WaitHandle>, jak użyć właściwości w celu uzyskania i jak czekać na wywołanie asynchroniczne na delegatze.</span><span class="sxs-lookup"><span data-stu-id="5e282-108">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="5e282-109">Jest sygnalizowane sygnałem, gdy wywołanie asynchroniczne zostanie zakończone, i można go oczekiwać przez <xref:System.Threading.WaitHandle.WaitOne%2A> wywołanie metody. <xref:System.Threading.WaitHandle></span><span class="sxs-lookup"><span data-stu-id="5e282-109">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="5e282-110">Przykład składa się z dwóch klas: klasy zawierającej metodę, która jest wywoływana asynchronicznie, oraz klasy `Main` zawierającej metodę, która wywołuje wywołanie.</span><span class="sxs-lookup"><span data-stu-id="5e282-110">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="5e282-111">Aby uzyskać więcej informacji i więcej przykładów wywoływania metod asynchronicznie za pomocą delegatów, zobacz [Asynchroniczne wywoływanie metod synchronicznych](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="5e282-111">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e282-112">Pobiera obiekt zdefiniowany przez użytkownika, który kwalifikuje lub zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="5e282-112">Gets a user-defined object that qualifies or contains information about an asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="5e282-113">Obiekt zdefiniowany przez użytkownika, który kwalifikuje lub zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="5e282-113">A user-defined object that qualifies or contains information about an asynchronous operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e282-114">Ta właściwość zwraca obiekt, który jest ostatnim parametrem metody inicjującej operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="5e282-114">This property returns the object that is the last parameter of the method that initiates an asynchronous operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e282-115">Poniższy przykład kodu demonstruje, <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> jak właściwość służy do przekazywania informacji do metody wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="5e282-115">The following code example demonstrates how the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> property is used to pass information to a callback method.</span></span> <span data-ttu-id="5e282-116">Ostatni parametr `BeginInvoke` wywołania metody jest ciągiem formatu, którego Metoda wywołania zwrotnego używa do formatowania wiadomości wyjściowej.</span><span class="sxs-lookup"><span data-stu-id="5e282-116">The last parameter of the `BeginInvoke` method call is a format string, which the callback method uses to format an output message.</span></span>  
  
 <span data-ttu-id="5e282-117">Przykład składa się z dwóch klas: klasy zawierającej metodę, która jest wywoływana asynchronicznie, oraz klasy `Main` zawierającej metodę, która wywołuje wywołanie.</span><span class="sxs-lookup"><span data-stu-id="5e282-117">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="5e282-118">Aby uzyskać więcej informacji na temat sposobu działania tego przykładowego wywołania zwrotnego i więcej przykładów wywoływania metod asynchronicznie za pomocą delegatów, zobacz [wywoływanie metod synchronicznych asynchronicznie](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="5e282-118">For more information about how this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5e282-119">Zaimplementuj tę właściwość, aby zezwolić obiektowi wywołującemu asynchronicznej operacji na uzyskanie obiektu zdefiniowanego przez aplikację na początku operacji.</span><span class="sxs-lookup"><span data-stu-id="5e282-119">Implement this property to allow the caller of an asynchronous operation to obtain an application-defined object specified at the start of the operation.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="5e282-120">Ten obiekt może służyć do przekazywania informacji o stanie dla operacji asynchronicznej do <see cref="T:System.AsyncCallback" /> podanej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="5e282-120">This object can be used to pass state information for the asynchronous operation to an <see cref="T:System.AsyncCallback" /> that you provide.</span></span></para></block>
        <altmember cref="T:System.AsyncCallback" />
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e282-121"><see cref="T:System.Threading.WaitHandle" /> Pobiera, który jest używany do oczekiwania na zakończenie operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="5e282-121">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></summary>
        <value><span data-ttu-id="5e282-122"><see cref="T:System.Threading.WaitHandle" /> , Który jest używany do oczekiwania na zakończenie operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="5e282-122">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e282-123">Wartość zwracana umożliwia klientowi oczekiwanie na zakończenie operacji asynchronicznej zamiast sondowania <xref:System.IAsyncResult.IsCompleted%2A> do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="5e282-123">The return value allows the client to wait for an asynchronous operation to complete instead of polling <xref:System.IAsyncResult.IsCompleted%2A> until the operation concludes.</span></span> <span data-ttu-id="5e282-124">Wartość zwracana może służyć do wykonywania <xref:System.Threading.WaitHandle.WaitOne%2A>operacji, <xref:System.Threading.WaitHandle.WaitAny%2A>lub <xref:System.Threading.WaitHandle.WaitAll%2A> .</span><span class="sxs-lookup"><span data-stu-id="5e282-124">The return value can be used to perform a <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, or <xref:System.Threading.WaitHandle.WaitAll%2A> operation.</span></span>  
  
 <span data-ttu-id="5e282-125">Środowisko uruchomieniowe języka wspólnego udostępnia wiele obiektów oczekujących, takich jak <xref:System.Threading.ManualResetEvent>, <xref:System.Threading.AutoResetEvent>, i <xref:System.Threading.Mutex>wszystkich duplikatów elementów pierwotnych synchronizacji Win32.</span><span class="sxs-lookup"><span data-stu-id="5e282-125">The common language runtime supplies a number of waitable objects, such as <xref:System.Threading.ManualResetEvent>, <xref:System.Threading.AutoResetEvent>, and <xref:System.Threading.Mutex>, all of which mirror Win32 synchronization primitives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e282-126">W poniższym przykładzie pokazano <xref:System.IAsyncResult.AsyncWaitHandle%2A> <xref:System.Threading.WaitHandle>, jak użyć właściwości w celu uzyskania i jak czekać na wywołanie asynchroniczne na delegatze.</span><span class="sxs-lookup"><span data-stu-id="5e282-126">The following example demonstrates how to use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="5e282-127">Jest sygnalizowane sygnałem, gdy wywołanie asynchroniczne zostanie zakończone, i można go oczekiwać przez <xref:System.Threading.WaitHandle.WaitOne%2A> wywołanie metody. <xref:System.Threading.WaitHandle></span><span class="sxs-lookup"><span data-stu-id="5e282-127">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="5e282-128">Przykład składa się z dwóch klas: klasy zawierającej metodę, która jest wywoływana asynchronicznie, oraz klasy `Main` zawierającej metodę, która wywołuje wywołanie.</span><span class="sxs-lookup"><span data-stu-id="5e282-128">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="5e282-129">Aby uzyskać więcej informacji i więcej przykładów wywoływania metod asynchronicznie za pomocą delegatów, zobacz [Asynchroniczne wywoływanie metod synchronicznych](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="5e282-129">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5e282-130">Obiekt, który implementuje <see cref="T:System.IAsyncResult" /> , nie musi <see cref="T:System.Threading.WaitHandle" /> tworzyć do momentu <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> odczytania właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e282-130">The object that implements <see cref="T:System.IAsyncResult" /> does not need to create the <see cref="T:System.Threading.WaitHandle" /> until the <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> property is read.</span></span> <span data-ttu-id="5e282-131">Jest to wybór <see cref="T:System.IAsyncResult" /> implementujący.</span><span class="sxs-lookup"><span data-stu-id="5e282-131">It is the choice of the <see cref="T:System.IAsyncResult" /> implementer.</span></span> <span data-ttu-id="5e282-132">Jeśli jednak program implementujący tworzy <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, jest odpowiedzialny za program implementujący <see cref="T:System.Threading.WaitHandle" /> , który zakończy oczekiwanie w odpowiednim czasie.</span><span class="sxs-lookup"><span data-stu-id="5e282-132">However, if the implementer creates <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, it is the responsibility of the implementer to signal the <see cref="T:System.Threading.WaitHandle" /> that will terminate the wait at the appropriate time.</span></span> <span data-ttu-id="5e282-133">Na przykład <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> kończy oczekiwanie na rzecz obiektu wywołującego, gdy wywoływana asynchronicznie Metoda zwraca.</span><span class="sxs-lookup"><span data-stu-id="5e282-133">For example, <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> terminates the wait on behalf of the caller when an asynchronously invoked method returns.</span></span> <span data-ttu-id="5e282-134">Po utworzeniu należy <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> zachować aktywność, dopóki użytkownik nie wywoła metody kończącej operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="5e282-134">Once created, <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> should be kept alive until the user calls the method that concludes the asynchronous operation.</span></span> <span data-ttu-id="5e282-135">W tym czasie obiekt za <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> można odrzucić.</span><span class="sxs-lookup"><span data-stu-id="5e282-135">At that time the object behind <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> can be discarded.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="5e282-136">Klienci, którzy oczekują na zakończenie operacji (w przeciwieństwie do sondowania), używają tej właściwości, aby uzyskać obiekt synchronizacji, aby oczekiwać.</span><span class="sxs-lookup"><span data-stu-id="5e282-136">Clients that wait for the operation to complete (as opposed to polling) use this property to obtain a synchronization object to wait on.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="5e282-137">W przypadku użycia <see langword="BeginInvoke" /> metody delegata do wywołania metody asynchronicznie i uzyskania dojścia oczekiwania od wyniku <see cref="T:System.IAsyncResult" />, zalecamy zamknięcie dojścia oczekiwania zaraz po zakończeniu korzystania z <see cref="M:System.Threading.WaitHandle.Close" /> niego, wywołując metodę.</span><span class="sxs-lookup"><span data-stu-id="5e282-137">When you use the <see langword="BeginInvoke" /> method of a delegate to call a method asynchronously and obtain a wait handle from the resulting <see cref="T:System.IAsyncResult" />, we recommend that you close the wait handle as soon as you are finished using it, by calling the <see cref="M:System.Threading.WaitHandle.Close" /> method.</span></span> <span data-ttu-id="5e282-138">Po prostu zwolnij wszystkie odwołania do dojścia oczekiwania, zasoby systemowe są zwalniane, gdy odzyskiwanie pamięci zostanie odzyskane dla dojścia oczekiwania, ale odzyskiwanie pamięci działa wydajniej, gdy bezpośrednie zamknięcia lub usunięcia obiektów do pobrania.</span><span class="sxs-lookup"><span data-stu-id="5e282-138">If you simply release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle, but garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</span></span> <span data-ttu-id="5e282-139">Aby uzyskać więcej informacji, zobacz <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /> właściwość.</span><span class="sxs-lookup"><span data-stu-id="5e282-139">For more information, see the <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /> property.</span></span>  
  
</para></block></para></block>
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e282-140">Pobiera wartość wskazującą, czy operacja asynchroniczna została zakończona synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="5e282-140">Gets a value that indicates whether the asynchronous operation completed synchronously.</span></span></summary>
        <value><span data-ttu-id="5e282-141"><see langword="true" />Jeśli operacja asynchroniczna zakończyła się synchronicznie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5e282-141"><see langword="true" /> if the asynchronous operation completed synchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e282-142">Jeśli synchroniczne zakończenie wywołania zostanie wykryte w <xref:System.AsyncCallback> delegatze, prawdopodobnie wątek, który zainicjował operację asynchroniczną, jest bieżącym wątkiem.</span><span class="sxs-lookup"><span data-stu-id="5e282-142">If the synchronous completion of the call is detected in the <xref:System.AsyncCallback> delegate, it is probable that the thread that initiated the asynchronous operation is the current thread.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5e282-143">Większość realizatorów <see cref="T:System.IAsyncResult" /> interfejsu nie będzie używać tej właściwości i powinna zwracać <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e282-143">Most implementers of the <see cref="T:System.IAsyncResult" /> interface will not use this property and should return <see langword="false" />.</span></span> <span data-ttu-id="5e282-144">Począwszy od <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> , zadanie, które jest tworzone za pomocą metody, nie zostanie ukończone, jeśli ta właściwość nie zostanie poprawnie zaimplementowana. [!INCLUDE[net_v45](~/includes/net-v45-md.md)]</span><span class="sxs-lookup"><span data-stu-id="5e282-144">Beginning with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], a task that is created with the <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> method will not complete if this property is not implemented correctly.</span></span> <span data-ttu-id="5e282-145">Zobacz [zgodność aplikacji w 4,5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</span><span class="sxs-lookup"><span data-stu-id="5e282-145">See [Application Compatibility in 4.5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="5e282-146">Użyj tej właściwości, aby określić, czy operacja asynchroniczna zakończyła się synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="5e282-146">Use this property to determine if the asynchronous operation completed synchronously.</span></span> <span data-ttu-id="5e282-147">Na przykład ta właściwość może zwracać <see langword="true" /> dla asynchronicznej operacji we/wy, jeśli żądanie we/wy było małe.</span><span class="sxs-lookup"><span data-stu-id="5e282-147">For example, this property can return <see langword="true" /> for an asynchronous I/O operation if the I/O request was small.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e282-148">Pobiera wartość wskazującą, czy operacja asynchroniczna została ukończona.</span><span class="sxs-lookup"><span data-stu-id="5e282-148">Gets a value that indicates whether the asynchronous operation has completed.</span></span></summary>
        <value><span data-ttu-id="5e282-149"><see langword="true" />Jeśli operacja została zakończona; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5e282-149"><see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e282-150">Gdy ta właściwość ma `true`wartość, można założyć, że jest bezpiecznie odrzucać wszelkie zasoby przydzielone do użycia przez operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="5e282-150">When this property is `true`, you can assume it is safe to discard any resources you allocate for use by the asynchronous operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e282-151">Poniższy przykład pokazuje, jak używać <xref:System.IAsyncResult.IsCompleted%2A> właściwości do odnajdywania, <xref:System.IAsyncResult> gdy asynchroniczne wywołanie zostało zakończone.</span><span class="sxs-lookup"><span data-stu-id="5e282-151">The following example shows how to use the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> to discover when an asynchronous call completes.</span></span> <span data-ttu-id="5e282-152">W takim przypadku wywołanie asynchroniczne odbywa się przy użyciu `BeginInvoke` metody delegata.</span><span class="sxs-lookup"><span data-stu-id="5e282-152">In this case, the asynchronous call is made by using the `BeginInvoke` method of a delegate.</span></span> <span data-ttu-id="5e282-153">Można użyć <xref:System.IAsyncResult.IsCompleted%2A> właściwości do sondowania w celu zakończenia podczas wykonywania wywołania asynchronicznego z wątku, który jest usługami interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="5e282-153">You might use the <xref:System.IAsyncResult.IsCompleted%2A> property to poll for completion when making the asynchronous call from a thread that services the user interface.</span></span> <span data-ttu-id="5e282-154">Sondowanie pod kątem ukończenia pozwala wątek wywołujący kontynuować wykonywanie podczas wywołania asynchronicznego wykonywanego na <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="5e282-154">Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <xref:System.Threading.ThreadPool> thread.</span></span>  
  
 <span data-ttu-id="5e282-155">Przykład składa się z dwóch klas: klasy zawierającej metodę, która jest wywoływana asynchronicznie, oraz klasy `Main` zawierającej metodę, która wywołuje wywołanie.</span><span class="sxs-lookup"><span data-stu-id="5e282-155">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="5e282-156">Aby uzyskać więcej informacji i więcej przykładów wywoływania metod asynchronicznie za pomocą delegatów, zobacz [Asynchroniczne wywoływanie metod synchronicznych](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="5e282-156">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5e282-157">Implementacje zwykle zwracają wartość pola prywatnego lub testu wewnętrznego jako wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e282-157">Implementers will typically return the value of a private field or internal test as the value of this property.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="5e282-158">Klienci, którzy sondowają w poszukiwaniu stanu operacji (w przeciwieństwie do oczekiwania na obiekt synchronizacji), używają tej właściwości do określenia stanu operacji.</span><span class="sxs-lookup"><span data-stu-id="5e282-158">Clients that poll for operation status (as opposed to waiting on a synchronization object) use this property to determine the status of the operation.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
