<Type Name="IAsyncResult" FullName="System.IAsyncResult">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d58c5d7d0755ba744adb0fc63e586f88a9bd828" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430917" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAsyncResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAsyncResult" />
  <TypeSignature Language="DocId" Value="T:System.IAsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAsyncResult" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAsyncResult" />
  <TypeSignature Language="F#" Value="type IAsyncResult = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e7566-101">Reprezentuje stan operacji asynchronicznej.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7566-101">Represents the status of an asynchronous operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7566-102"><xref:System.IAsyncResult> Interfejs jest implementowany przez klasy zawierające metody, które mogą działać w sposób asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="e7566-102">The <xref:System.IAsyncResult> interface is implemented by classes containing methods that can operate asynchronously.</span></span> <span data-ttu-id="e7566-103">Jest zwracany typ metody, które inicjują operację asynchroniczną, takich jak <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>, i jest przekazywany do metody, które zawierają operację asynchroniczną, takich jak <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e7566-103">It is the return type of methods that initiate an asynchronous operation, such as <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>, and it is passed to methods that conclude an asynchronous operation, such as <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e7566-104"><xref:System.IAsyncResult> obiekty również są przekazywane do metody wywoływane przez <xref:System.AsyncCallback> deleguje po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="e7566-104"><xref:System.IAsyncResult> objects are also passed to methods invoked by <xref:System.AsyncCallback> delegates when an asynchronous operation completes.</span></span>  
  
 <span data-ttu-id="e7566-105">Obiekt, który obsługuje <xref:System.IAsyncResult> interfejsu przechowuje informacje o stanie dla operacji asynchronicznej i udostępnia obiekt synchronizacji, aby umożliwić wątków, aby być sygnalizowane po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="e7566-105">An object that supports the <xref:System.IAsyncResult> interface stores state information for an asynchronous operation and provides a synchronization object to allow threads to be signaled when the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7566-106"><xref:System.Runtime.Remoting.Messaging.AsyncResult> Klasa jest implementacją <xref:System.IAsyncResult> zwróconego przez `BeginInvoke` metody, używając delegata do asynchronicznego wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="e7566-106">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> class is the implementation of <xref:System.IAsyncResult> that is returned by the `BeginInvoke` method when you use a delegate to call a method asynchronously.</span></span>  
  
 <span data-ttu-id="e7566-107">Aby uzyskać szczegółowy opis sposobu <xref:System.IAsyncResult> interfejs jest używany, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) tematu.</span><span class="sxs-lookup"><span data-stu-id="e7566-107">For a detailed description of how the <xref:System.IAsyncResult> interface is used, see the [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7566-108">W poniższym przykładzie pokazano sposób użycia <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> właściwości do pobrania <xref:System.Threading.WaitHandle>i Oczekiwanie na wywołanie asynchroniczne obiektu delegowanego.</span><span class="sxs-lookup"><span data-stu-id="e7566-108">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="e7566-109"><xref:System.Threading.WaitHandle> Jest sygnalizowane po zakończeniu wywołania asynchronicznego i poczekaj na jego, wywołując <xref:System.Threading.WaitHandle.WaitOne%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e7566-109">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="e7566-110">Przykład składa się z dwóch klas: klasy zawierającej metodę, która jest wywoływana asynchronicznie, a klasa, która zawiera `Main` metodę, która sprawia, że wywołanie.</span><span class="sxs-lookup"><span data-stu-id="e7566-110">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e7566-111">Więcej informacji oraz więcej przykładów wywoływania metod asynchronicznie przy użyciu delegatów, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e7566-111">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7566-112">Pobiera obiekt użytkownika, który kwalifikacji lub zawierający informacje o operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-112">Gets a user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7566-113">Zdefiniowane przez użytkownika obiekt podlegający kwalifikacji lub zawierający informacje o operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-113">A user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7566-114">Ta właściwość zwraca obiekt, który jest ostatnim parametrem metody, która inicjuje operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="e7566-114">This property returns the object that is the last parameter of the method that initiates an asynchronous operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7566-115">Poniższy przykład kodu pokazuje sposób <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> właściwość jest używana do przekazywania informacji do metody wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="e7566-115">The following code example demonstrates how the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> property is used to pass information to a callback method.</span></span> <span data-ttu-id="e7566-116">Ostatni parametr `BeginInvoke` wywołania metody jest ciąg formatu, który używa metody wywołania zwrotnego do sformatowania komunikatu wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="e7566-116">The last parameter of the `BeginInvoke` method call is a format string, which the callback method uses to format an output message.</span></span>  
  
 <span data-ttu-id="e7566-117">Przykład składa się z dwóch klas: klasy zawierającej metodę, która jest wywoływana asynchronicznie, a klasa, która zawiera `Main` metodę, która sprawia, że wywołanie.</span><span class="sxs-lookup"><span data-stu-id="e7566-117">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e7566-118">Więcej informacji na temat działania w tym przykładzie wywołania zwrotnego i więcej przykładów wywoływania metod asynchronicznie przy użyciu delegatów, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e7566-118">For more information about how this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e7566-119">
            <para>Implementuje tę właściwość, aby umożliwić wywołującego operację asynchroniczną można uzyskać przez aplikację obiektu określonego w chwili rozpoczęcia operacji.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-119">
              <para>Implement this property to allow the caller of an asynchronous operation to obtain an application-defined object specified at the start of the operation.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="e7566-120">
            <para>Ten obiekt może służyć do przekazywania informacji o stanie dla operacji asynchronicznej do <see cref="T:System.AsyncCallback" /> podane.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-120">
              <para>This object can be used to pass state information for the asynchronous operation to an <see cref="T:System.AsyncCallback" /> that you provide.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.AsyncCallback" />
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7566-121">Pobiera <see cref="T:System.Threading.WaitHandle" /> umożliwiające poczekaj na zakończenie operacji asynchronicznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-121">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7566-122">A <see cref="T:System.Threading.WaitHandle" /> umożliwiające poczekaj na zakończenie operacji asynchronicznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-122">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7566-123">Wartość zwracana umożliwia klientowi poczekaj na zakończenie zamiast sondowania operacji asynchronicznych <xref:System.IAsyncResult.IsCompleted%2A> dopóki zawiera operację.</span><span class="sxs-lookup"><span data-stu-id="e7566-123">The return value allows the client to wait for an asynchronous operation to complete instead of polling <xref:System.IAsyncResult.IsCompleted%2A> until the operation concludes.</span></span> <span data-ttu-id="e7566-124">Wartość zwracana może służyć do wykonywania <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, lub <xref:System.Threading.WaitHandle.WaitAll%2A> operacji.</span><span class="sxs-lookup"><span data-stu-id="e7566-124">The return value can be used to perform a <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, or <xref:System.Threading.WaitHandle.WaitAll%2A> operation.</span></span>  
  
 <span data-ttu-id="e7566-125">Środowisko uruchomieniowe języka wspólnego udostępnia szereg waitable obiekty, takie jak <xref:System.Threading.ManualResetEvent>, <xref:System.Threading.AutoResetEvent>, i <xref:System.Threading.Mutex>, które duplikatów elementy podstawowe synchronizacji Win32.</span><span class="sxs-lookup"><span data-stu-id="e7566-125">The common language runtime supplies a number of waitable objects, such as <xref:System.Threading.ManualResetEvent>, <xref:System.Threading.AutoResetEvent>, and <xref:System.Threading.Mutex>, all of which mirror Win32 synchronization primitives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7566-126">W poniższym przykładzie pokazano sposób użycia <xref:System.IAsyncResult.AsyncWaitHandle%2A> właściwości do pobrania <xref:System.Threading.WaitHandle>i Oczekiwanie na wywołanie asynchroniczne obiektu delegowanego.</span><span class="sxs-lookup"><span data-stu-id="e7566-126">The following example demonstrates how to use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="e7566-127"><xref:System.Threading.WaitHandle> Jest sygnalizowane po zakończeniu wywołania asynchronicznego i poczekaj na jego, wywołując <xref:System.Threading.WaitHandle.WaitOne%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e7566-127">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="e7566-128">Przykład składa się z dwóch klas: klasy zawierającej metodę, która jest wywoływana asynchronicznie, a klasa, która zawiera `Main` metodę, która sprawia, że wywołanie.</span><span class="sxs-lookup"><span data-stu-id="e7566-128">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e7566-129">Więcej informacji oraz więcej przykładów wywoływania metod asynchronicznie przy użyciu delegatów, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e7566-129">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e7566-130">
            <para>Obiekt, który implementuje <see cref="T:System.IAsyncResult" /> nie trzeba tworzyć <see cref="T:System.Threading.WaitHandle" /> do momentu <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> odczytać właściwości. Jest wybór <see cref="T:System.IAsyncResult" /> implementujący. Jednak jeśli tworzy implementujący <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, jest odpowiedzialny za implementujący w celu zasygnalizowania <see cref="T:System.Threading.WaitHandle" /> który spowoduje przerwanie czas oczekiwania w odpowiednim czasie. Na przykład <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> kończy Oczekiwanie w imieniu wywołującego zwrócona asynchronicznie wywołana metoda. Raz utworzone, <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> powinny być aktywne, dopóki użytkownik wywołuje metodę, która zawiera operację asynchroniczną. W tym czasie obiekt za <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> mogą zostać odrzucone.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-130">
              <para>The object that implements <see cref="T:System.IAsyncResult" /> does not need to create the <see cref="T:System.Threading.WaitHandle" /> until the <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> property is read. It is the choice of the <see cref="T:System.IAsyncResult" /> implementer. However, if the implementer creates <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, it is the responsibility of the implementer to signal the <see cref="T:System.Threading.WaitHandle" /> that will terminate the wait at the appropriate time. For example, <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> terminates the wait on behalf of the caller when an asynchronously invoked method returns. Once created, <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> should be kept alive until the user calls the method that concludes the asynchronous operation. At that time the object behind <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> can be discarded.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="e7566-131">
            <para>Klienci, którzy poczekaj na zakończenie (w przeciwieństwie do sondowania) operacji ta właściwość umożliwia uzyskanie obiektu synchronizacji oczekiwania.  <block subset="none" type="note"><para> Jeśli używasz <see langword="BeginInvoke" /> metody delegata wywołania metody asynchronicznie i uzyskanie dojście oczekiwania z powstałe w ten sposób <see cref="T:System.IAsyncResult" />, zalecamy zamknięcie dojście oczekiwania, natychmiast po zakończeniu korzystania, wywołując <see cref="M:System.Threading.WaitHandle.Close" /> metody. Jeśli po prostu zwolnić wszystkie odwołania do dojścia oczekiwania, zasoby systemu są zwalniane podczas odzyskiwania pamięci Zwraca dojście oczekiwania, ale wyrzucanie elementów bezużytecznych działa wydajniej, gdy obiekty możliwe do rozporządzania są jawnie zamknięty lub usunięty. Aby uzyskać więcej informacji, zobacz <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /> właściwości.  </para></block></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-131">
              <para>Clients that wait for the operation to complete (as opposed to polling) use this property to obtain a synchronization object to wait on.  <block subset="none" type="note"><para> When you use the <see langword="BeginInvoke" /> method of a delegate to call a method asynchronously and obtain a wait handle from the resulting <see cref="T:System.IAsyncResult" />, we recommend that you close the wait handle as soon as you are finished using it, by calling the <see cref="M:System.Threading.WaitHandle.Close" /> method. If you simply release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle, but garbage collection works more efficiently when disposable objects are explicitly closed or disposed. For more information, see the <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /> property.  </para></block></para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7566-132">Pobiera wartość wskazującą, czy operacja asynchroniczna została ukończona synchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-132">Gets a value that indicates whether the asynchronous operation completed synchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7566-133">
            <see langword="true" /> Jeśli operacja asynchroniczna ukończona synchronicznie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-133">
              <see langword="true" /> if the asynchronous operation completed synchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7566-134">Jeśli kończenie synchroniczne wywołania zostanie wykryta w <xref:System.AsyncCallback> delegata, jest prawdopodobne, że wątek, który zainicjował operację asynchroniczną będzie bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="e7566-134">If the synchronous completion of the call is detected in the <xref:System.AsyncCallback> delegate, it is probable that the thread that initiated the asynchronous operation is the current thread.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e7566-135">
            <para>Większość obiektów implementujących z <see cref="T:System.IAsyncResult" /> interfejsu nie będzie używać tej właściwości oraz powinna zwrócić <see langword="false" />. Począwszy od [! INCLUDE[net_v45](~/includes/NET-V45-MD.MD)], zadań, który jest tworzony z <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> — metoda nie zostanie wykonana, jeśli ta właściwość nie jest zaimplementowana poprawnie. Zobacz [zgodność aplikacji w 4.5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-135">
              <para>Most implementers of the <see cref="T:System.IAsyncResult" /> interface will not use this property and should return <see langword="false" />. Beginning with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], a task that is created with the <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> method will not complete if this property is not implemented correctly. See [Application Compatibility in 4.5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="e7566-136">
            <para>Ta właściwość umożliwia określenie, czy operacja asynchroniczna została ukończona synchronicznie. Na przykład można zwrócić ta właściwość <see langword="true" /> asynchronicznej operacji We/Wy, jeśli żądanie operacji We/Wy jest mały.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-136">
              <para>Use this property to determine if the asynchronous operation completed synchronously. For example, this property can return <see langword="true" /> for an asynchronous I/O operation if the I/O request was small.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7566-137">Pobiera wartość wskazującą, czy operacja asynchroniczna została ukończona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-137">Gets a value that indicates whether the asynchronous operation has completed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7566-138">
            <see langword="true" /> Jeśli operacja została zakończona; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-138">
              <see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7566-139">Gdy ta właściwość jest `true`, można założyć, można bezpiecznie odrzucić wszystkie zasoby przydzielić do użytku przez operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="e7566-139">When this property is `true`, you can assume it is safe to discard any resources you allocate for use by the asynchronous operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7566-140">Poniższy przykład przedstawia użycie <xref:System.IAsyncResult.IsCompleted%2A> właściwość <xref:System.IAsyncResult> do odnajdywania, po zakończeniu wykonywania wywołanie asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="e7566-140">The following example shows how to use the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> to discover when an asynchronous call completes.</span></span> <span data-ttu-id="e7566-141">W takim przypadku wywołanie asynchroniczne jest nawiązywane za pomocą `BeginInvoke` metody delegata.</span><span class="sxs-lookup"><span data-stu-id="e7566-141">In this case, the asynchronous call is made by using the `BeginInvoke` method of a delegate.</span></span> <span data-ttu-id="e7566-142">Można na przykład <xref:System.IAsyncResult.IsCompleted%2A> właściwości sondowanie ukończenia podczas wywołania asynchronicznego wprowadzanych przez wątek który usług interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="e7566-142">You might use the <xref:System.IAsyncResult.IsCompleted%2A> property to poll for completion when making the asynchronous call from a thread that services the user interface.</span></span> <span data-ttu-id="e7566-143">Sondowanie w celu ukończenia umożliwia wątek wywołujący kontynuować wykonywanie podczas wywołania asynchronicznego wykonuje na <xref:System.Threading.ThreadPool> wątku.</span><span class="sxs-lookup"><span data-stu-id="e7566-143">Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <xref:System.Threading.ThreadPool> thread.</span></span>  
  
 <span data-ttu-id="e7566-144">Przykład składa się z dwóch klas: klasy zawierającej metodę, która jest wywoływana asynchronicznie, a klasa, która zawiera `Main` metodę, która sprawia, że wywołanie.</span><span class="sxs-lookup"><span data-stu-id="e7566-144">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e7566-145">Więcej informacji oraz więcej przykładów wywoływania metod asynchronicznie przy użyciu delegatów, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e7566-145">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e7566-146">
            <para>Implementacje zwykle zwraca wartość pola prywatnego lub wewnętrznego testu jako wartość tej właściwości.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-146">
              <para>Implementers will typically return the value of a private field or internal test as the value of this property.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="e7566-147">
            <para>Klienci, których sondowania stanu operacji (zamiast oczekiwania na obiekt synchronizacji) używają tej właściwości można określić stanu operacji.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e7566-147">
              <para>Clients that poll for operation status (as opposed to waiting on a synchronization object) use this property to determine the status of the operation.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>