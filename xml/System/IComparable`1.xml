<Type Name="IComparable&lt;T&gt;" FullName="System.IComparable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5931aa26cc190dfe5da0d88c66d2c06eaa43d705" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58727331" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IComparable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="61049-101">Typ obiektu do porównania.</span><span class="sxs-lookup"><span data-stu-id="61049-101">The type of object to compare.</span></span></typeparam>
    <summary><span data-ttu-id="61049-102">Definiuje metody uogólnionego porównania, która jest typem wartości lub klasa implementuje do utworzenia metody porównania specyficznego dla typu do porządkowania i sortowania jego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="61049-102">Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61049-103">Ten interfejs jest implementowany przez typy, których wartości mogą być uporządkowane lub sortowane i udostępnia metodę porównywania silnie typizowaną kolejność elementów członkowskich obiektu kolekcji ogólnej.</span><span class="sxs-lookup"><span data-stu-id="61049-103">This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="61049-104">Na przykład jedna cyfra może być większy niż drugi numer i jednego ciągu, mogą być wyświetlane w kolejności alfabetycznej przed inny.</span><span class="sxs-lookup"><span data-stu-id="61049-104">For example, one number can be larger than a second number, and one string can appear in alphabetical order before another.</span></span> <span data-ttu-id="61049-105">Wymaga to, że typy implementujące definiują jedną metodę <xref:System.IComparable%601.CompareTo%28%600%29>, który wskazuje, czy bieżące wystąpienie w porządku sortowania znajdował się przed, po lub taka sama jak drugi obiekt tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="61049-105">It requires that implementing types define a single method, <xref:System.IComparable%601.CompareTo%28%600%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="61049-106">Metoda nie jest zazwyczaj wywoływana bezpośrednio z kodu dla deweloperów.</span><span class="sxs-lookup"><span data-stu-id="61049-106">Typically, the method is not called directly from developer code.</span></span> <span data-ttu-id="61049-107">Zamiast tego jest ona wywoływana automatycznie przez metody takie jak <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> i <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="61049-107">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="61049-108">Zwykle typy dostarczające <xref:System.IComparable%601> implementacja także implementować <xref:System.IEquatable%601> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="61049-108">Typically, types that provide an <xref:System.IComparable%601> implementation also implement the <xref:System.IEquatable%601> interface.</span></span> <span data-ttu-id="61049-109"><xref:System.IEquatable%601> Interfejs definiuje <xref:System.IEquatable%601.Equals%2A> metody, która określa równości wystąpienia typu implementującego.</span><span class="sxs-lookup"><span data-stu-id="61049-109">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="61049-110">Implementacja <xref:System.IComparable%601.CompareTo%28%600%29> metoda musi zwracać <xref:System.Int32> zawierający jedną z trzech wartości, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="61049-110">The implementation of the <xref:System.IComparable%601.CompareTo%28%600%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="61049-111">Wartość</span><span class="sxs-lookup"><span data-stu-id="61049-111">Value</span></span>|<span data-ttu-id="61049-112">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="61049-112">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="61049-113">Mniej niż zero</span><span class="sxs-lookup"><span data-stu-id="61049-113">Less than zero</span></span>|<span data-ttu-id="61049-114">Ten obiekt poprzedza obiekt określony przez <xref:System.IComparable%601.CompareTo%2A> metody w porządku sortowania.</span><span class="sxs-lookup"><span data-stu-id="61049-114">This object precedes the object specified by the <xref:System.IComparable%601.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="61049-115">Zero</span><span class="sxs-lookup"><span data-stu-id="61049-115">Zero</span></span>|<span data-ttu-id="61049-116">Tego bieżącego wystąpienia odbywa się w tej samej pozycji w porządku sortowania, co obiekt określony przez <xref:System.IComparable%601.CompareTo%2A> argumentu metody.</span><span class="sxs-lookup"><span data-stu-id="61049-116">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument.</span></span>|  
|<span data-ttu-id="61049-117">Większe od zera</span><span class="sxs-lookup"><span data-stu-id="61049-117">Greater than zero</span></span>|<span data-ttu-id="61049-118">Tego bieżącego wystąpienia następuje w obiekcie określonym przez <xref:System.IComparable%601.CompareTo%2A> argumentu metody w porządku sortowania.</span><span class="sxs-lookup"><span data-stu-id="61049-118">This current instance follows the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument in the sort order.</span></span>|  
  
 <span data-ttu-id="61049-119">Wszystkie typy liczbowe (takich jak <xref:System.Int32> i <xref:System.Double>) implementuje <xref:System.IComparable%601>, tak jak <xref:System.String>, <xref:System.Char>, i <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="61049-119">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable%601>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="61049-120">Niestandardowe typy powinien również dostarczyć zapewniali własną implementację <xref:System.IComparable%601> umożliwiające wystąpienia obiektów, które mają być uporządkowane lub sortowania.</span><span class="sxs-lookup"><span data-stu-id="61049-120">Custom types should also provide their own implementation of <xref:System.IComparable%601> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61049-121">Poniższy przykładowy kod przedstawia implementację <xref:System.IComparable%601> dla prostego `Temperature` obiektu.</span><span class="sxs-lookup"><span data-stu-id="61049-121">The following code example illustrates the implementation of  <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="61049-122">W przykładzie jest tworzony <xref:System.Collections.Generic.SortedList%602> kolekcji ciągów `Temperature` obiektów kluczy i dodaje kilka pary ciągów i temperatury do listy poza sekwencją.</span><span class="sxs-lookup"><span data-stu-id="61049-122">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="61049-123">W wywołaniu <xref:System.Collections.Generic.SortedList%602.Add%2A> metody <xref:System.Collections.Generic.SortedList%602> używa kolekcji <xref:System.IComparable%601> implementacji sortowania pozycji listy, które następnie są wyświetlane w celu zwiększenia temperatury.</span><span class="sxs-lookup"><span data-stu-id="61049-123">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="61049-124">Zastąp parametr typu <see cref="T:System.IComparable`1" /> interfejsu z typem, który implementuje ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="61049-124">Replace the type parameter of the <see cref="T:System.IComparable`1" /> interface with the type that is implementing this interface.</span></span>  
  
<span data-ttu-id="61049-125">W przypadku zaimplementowania <see cref="T:System.IComparable`1" />, powinien przeciążać <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" />, i <see langword="op_LessThanOrEqual" /> operatory, aby zwrócić wartości, które są zgodne z <see cref="M:System.IComparable`1.CompareTo(`0)" />.</span><span class="sxs-lookup"><span data-stu-id="61049-125">If you implement <see cref="T:System.IComparable`1" />, you should overload the <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" />, and <see langword="op_LessThanOrEqual" /> operators to return values that are consistent with <see cref="M:System.IComparable`1.CompareTo(`0)" />.</span></span> <span data-ttu-id="61049-126">Ponadto, należy także zaimplementować <see cref="T:System.IEquatable`1" />.</span><span class="sxs-lookup"><span data-stu-id="61049-126">In addition, you should also implement <see cref="T:System.IEquatable`1" />.</span></span> <span data-ttu-id="61049-127">Zobacz <see cref="T:System.IEquatable`1" /> artykuł, aby uzyskać pełne informacje.</span><span class="sxs-lookup"><span data-stu-id="61049-127">See the <see cref="T:System.IEquatable`1" /> article for complete information.</span></span></para></block>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable`1.CompareTo(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : 'T -&gt; int" Usage="iComparable.CompareTo other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(T other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="61049-128">Obiekt, który ma zostać porównany z tym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="61049-128">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="61049-129">Porównuje bieżące wystąpienie z innym obiektem tego samego typu i zwraca liczbę całkowitą, która wskazuje, czy bieżące wystąpienie poprzedza, następuje po lub występuje w tym samym położeniu, co inny obiekt w porządku sortowania.</span><span class="sxs-lookup"><span data-stu-id="61049-129">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="61049-130">Wartość, która wskazuje względną kolejność obiektów, którą jest porównywany.</span><span class="sxs-lookup"><span data-stu-id="61049-130">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="61049-131">Wartość zwracana ma znaczenie tych:</span><span class="sxs-lookup"><span data-stu-id="61049-131">The return value has these meanings:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="61049-132">Wartość</span><span class="sxs-lookup"><span data-stu-id="61049-132">Value</span></span> 
 </term><description> <span data-ttu-id="61049-133">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="61049-133">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="61049-134">Mniej niż zero</span><span class="sxs-lookup"><span data-stu-id="61049-134">Less than zero</span></span> 
 </term><description> <span data-ttu-id="61049-135">To wystąpienie poprzedza <paramref name="other" /> w porządku sortowania.</span><span class="sxs-lookup"><span data-stu-id="61049-135">This instance precedes <paramref name="other" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="61049-136">Zero</span><span class="sxs-lookup"><span data-stu-id="61049-136">Zero</span></span> 
 </term><description> <span data-ttu-id="61049-137">To wystąpienie odbywa się w tej samej pozycji w kolejności sortowania, co <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="61049-137">This instance occurs in the same position in the sort order as <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="61049-138">Większe od zera</span><span class="sxs-lookup"><span data-stu-id="61049-138">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="61049-139">To wystąpienie następuje po <paramref name="other" /> w porządku sortowania.</span><span class="sxs-lookup"><span data-stu-id="61049-139">This instance follows <paramref name="other" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61049-140"><xref:System.IComparable%601.CompareTo%2A> udostępnia metodę porównywania silnie typizowaną kolejność elementów członkowskich obiektu kolekcji ogólnej.</span><span class="sxs-lookup"><span data-stu-id="61049-140"><xref:System.IComparable%601.CompareTo%2A> provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="61049-141">W związku z tym zazwyczaj nie jest wywoływany bezpośrednio z kodu dla deweloperów.</span><span class="sxs-lookup"><span data-stu-id="61049-141">Because of this, it is usually not called directly from developer code.</span></span> <span data-ttu-id="61049-142">Zamiast tego jest ona wywoływana automatycznie przez metody takie jak <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> i <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="61049-142">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="61049-143">Ta metoda jest tylko definicję i muszą być zaimplementowane przez określonego typu klasy lub wartości efekty.</span><span class="sxs-lookup"><span data-stu-id="61049-143">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="61049-144">Znaczenie porównania określony w Return Values sekcję ("poprzedzający", "występuje w tym samym położeniu co" i "poniżej) jest zależna od określonej implementacji.</span><span class="sxs-lookup"><span data-stu-id="61049-144">The meaning of the comparisons specified in the Return Values section ("precedes", "occurs in the same position as", and "follows) depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="61049-145">Zgodnie z definicją, porównuje większa od dowolnego obiektu `null`, a dwa odwołania zerowe są sobie równe do siebie nawzajem.</span><span class="sxs-lookup"><span data-stu-id="61049-145">By definition, any object compares greater than `null`, and two null references compare equal to each other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61049-146">Poniższy przykładowy kod przedstawia implementację <xref:System.IComparable%601> dla prostego `Temperature` obiektu.</span><span class="sxs-lookup"><span data-stu-id="61049-146">The following code example illustrates the implementation of <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="61049-147">W przykładzie jest tworzony <xref:System.Collections.Generic.SortedList%602> kolekcji ciągów `Temperature` obiektów kluczy i dodaje kilka pary ciągów i temperatury do listy poza sekwencją.</span><span class="sxs-lookup"><span data-stu-id="61049-147">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="61049-148">W wywołaniu <xref:System.Collections.Generic.SortedList%602.Add%2A> metody <xref:System.Collections.Generic.SortedList%602> używa kolekcji <xref:System.IComparable%601> implementacji sortowania pozycji listy, które następnie są wyświetlane w celu zwiększenia temperatury.</span><span class="sxs-lookup"><span data-stu-id="61049-148">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="61049-149">Dla obiektów, A, B i C, wymaga spełnienia następujących warunków:</span><span class="sxs-lookup"><span data-stu-id="61049-149">For objects A, B, and C, the following must be true:</span></span> 
 <span data-ttu-id="61049-150"><c>A.CompareTo(A)</c> jest wymagana, aby zwrócić zero.</span><span class="sxs-lookup"><span data-stu-id="61049-150"><c>A.CompareTo(A)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="61049-151">Jeśli <c>A.CompareTo(B)</c> zwraca zero, następnie <c>B.CompareTo(A)</c> jest wymagana, aby zwrócić zero.</span><span class="sxs-lookup"><span data-stu-id="61049-151">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="61049-152">Jeśli <c>A.CompareTo(B)</c> zwraca zero i <c>B.CompareTo(C)</c> zwraca zero, następnie <c>A.CompareTo(C)</c> jest wymagana, aby zwrócić zero.</span><span class="sxs-lookup"><span data-stu-id="61049-152">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="61049-153">Jeśli <c>A.CompareTo(B)</c> zwraca wartość różną od zera, następnie <c>B.CompareTo(A)</c> jest wymagane, aby przywrócić wartość przeciwną wartość.</span><span class="sxs-lookup"><span data-stu-id="61049-153">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> is required to return a value of the opposite sign.</span></span>  
  
<span data-ttu-id="61049-154">Jeśli <c>A.CompareTo(B)</c> zwraca wartość <paramref name="x" /> , nie jest równa zero, a <c>B.CompareTo(C)</c> zwraca wartość <paramref name="y" /> o ten sam znak co <paramref name="x" />, następnie <c>A.CompareTo(C)</c> jest wymagany w celu zwrócenia wartości ten sam znak co <paramref name="x" /> i <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="61049-154">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> that is not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> is required to return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="61049-155">Użyj <see cref="M:System.IComparable`1.CompareTo(`0)" /> metodę pozwala ustalić kolejność wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="61049-155">Use the <see cref="M:System.IComparable`1.CompareTo(`0)" /> method to determine the ordering of instances of a class.</span></span></para></block>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
  </Members>
</Type>