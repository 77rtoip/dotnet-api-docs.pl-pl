<Type Name="IComparable&lt;T&gt;" FullName="System.IComparable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="66c28a588c6563962b8b229acd02051259aa5897" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69420398" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IComparable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="65477-101">Typ obiektu do porównania.</span><span class="sxs-lookup"><span data-stu-id="65477-101">The type of object to compare.</span></span></typeparam>
    <summary><span data-ttu-id="65477-102">Definiuje uogólnioną metodę porównania, która jest implementowana przez typ wartości lub klasy w celu utworzenia metody porównywania specyficznego dla typu w celu porządkowania lub sortowania jej wystąpień.</span><span class="sxs-lookup"><span data-stu-id="65477-102">Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65477-103">Ten interfejs jest implementowany przez typy, których wartości mogą być uporządkowane lub sortowane i zapewnia metodę porównania silnie wpisaną do porządkowania elementów członkowskich obiektu kolekcji ogólnej.</span><span class="sxs-lookup"><span data-stu-id="65477-103">This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="65477-104">Na przykład jedna liczba może być większa niż druga cyfra, a jeden ciąg może być wyświetlany w kolejności alfabetycznej przed inną.</span><span class="sxs-lookup"><span data-stu-id="65477-104">For example, one number can be larger than a second number, and one string can appear in alphabetical order before another.</span></span> <span data-ttu-id="65477-105">Wymaga, aby implementacje typów definiują pojedynczą <xref:System.IComparable%601.CompareTo%28%600%29>metodę,, która wskazuje, czy pozycja bieżącego wystąpienia w kolejności sortowania jest wcześniejsza niż, po lub taka sama jak w przypadku drugiego obiektu tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="65477-105">It requires that implementing types define a single method, <xref:System.IComparable%601.CompareTo%28%600%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="65477-106">Zazwyczaj metoda nie jest wywoływana bezpośrednio z kodu dewelopera.</span><span class="sxs-lookup"><span data-stu-id="65477-106">Typically, the method is not called directly from developer code.</span></span> <span data-ttu-id="65477-107">Zamiast tego jest wywoływana automatycznie przy użyciu metod, takich <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> jak <xref:System.Collections.Generic.SortedList%602.Add%2A>i.</span><span class="sxs-lookup"><span data-stu-id="65477-107">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="65477-108">Zazwyczaj typy, które oferują <xref:System.IComparable%601> implementację, <xref:System.IEquatable%601> implementują również interfejs.</span><span class="sxs-lookup"><span data-stu-id="65477-108">Typically, types that provide an <xref:System.IComparable%601> implementation also implement the <xref:System.IEquatable%601> interface.</span></span> <span data-ttu-id="65477-109"><xref:System.IEquatable%601> Interfejs<xref:System.IEquatable%601.Equals%2A> definiuje metodę, która określa równość wystąpień typu implementującego.</span><span class="sxs-lookup"><span data-stu-id="65477-109">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="65477-110">Implementacja <xref:System.IComparable%601.CompareTo%28%600%29> metody musi <xref:System.Int32> zwracać, która ma jedną z trzech wartości, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="65477-110">The implementation of the <xref:System.IComparable%601.CompareTo%28%600%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="65477-111">Wartość</span><span class="sxs-lookup"><span data-stu-id="65477-111">Value</span></span>|<span data-ttu-id="65477-112">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="65477-112">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="65477-113">Mniej niż zero</span><span class="sxs-lookup"><span data-stu-id="65477-113">Less than zero</span></span>|<span data-ttu-id="65477-114">Ten obiekt poprzedza obiekt określony przez <xref:System.IComparable%601.CompareTo%2A> metodę w kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="65477-114">This object precedes the object specified by the <xref:System.IComparable%601.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="65477-115">Zero</span><span class="sxs-lookup"><span data-stu-id="65477-115">Zero</span></span>|<span data-ttu-id="65477-116">To bieżące wystąpienie występuje w tym samym położeniu w porządku sortowania co obiekt określony przez <xref:System.IComparable%601.CompareTo%2A> argument metody.</span><span class="sxs-lookup"><span data-stu-id="65477-116">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument.</span></span>|  
|<span data-ttu-id="65477-117">Większe od zera</span><span class="sxs-lookup"><span data-stu-id="65477-117">Greater than zero</span></span>|<span data-ttu-id="65477-118">To bieżące wystąpienie następuje po obiekcie określonym przez <xref:System.IComparable%601.CompareTo%2A> argument Method w kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="65477-118">This current instance follows the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument in the sort order.</span></span>|  
  
 <span data-ttu-id="65477-119">Wszystkie typy liczbowe (takie jak <xref:System.Int32> i <xref:System.Double> <xref:System.String>) <xref:System.IComparable%601> <xref:System.DateTime>implementują jako, i. <xref:System.Char></span><span class="sxs-lookup"><span data-stu-id="65477-119">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable%601>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="65477-120">Typy niestandardowe powinny również zapewniać własną implementację <xref:System.IComparable%601> , aby umożliwić porządkowanie lub sortowanie wystąpień obiektów.</span><span class="sxs-lookup"><span data-stu-id="65477-120">Custom types should also provide their own implementation of <xref:System.IComparable%601> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65477-121">Poniższy przykład kodu ilustruje implementację <xref:System.IComparable%601> dla prostego `Temperature` obiektu.</span><span class="sxs-lookup"><span data-stu-id="65477-121">The following code example illustrates the implementation of  <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="65477-122">Przykład tworzy <xref:System.Collections.Generic.SortedList%602> kolekcję ciągów z `Temperature` kluczami obiektów i dodaje kilka par temperatury i ciągów do listy poza sekwencją.</span><span class="sxs-lookup"><span data-stu-id="65477-122">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="65477-123">W wywołaniu <xref:System.Collections.Generic.SortedList%602.Add%2A> metody <xref:System.Collections.Generic.SortedList%602> kolekcja używa <xref:System.IComparable%601> implementacji do sortowania wpisów listy, które są następnie wyświetlane w kolejności rosnącej temperatury.</span><span class="sxs-lookup"><span data-stu-id="65477-123">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="65477-124">Zastąp parametr <see cref="T:System.IComparable`1" /> Type interfejsu typem implementującym ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="65477-124">Replace the type parameter of the <see cref="T:System.IComparable`1" /> interface with the type that is implementing this interface.</span></span>  
  
<span data-ttu-id="65477-125">W <see cref="T:System.IComparable`1" />przypadku zaimplementowania należy <see langword="op_GreaterThan" />przeciążać <see langword="op_GreaterThanOrEqual" />operatory <see langword="op_LessThan" />,, <see langword="op_LessThanOrEqual" /> i, aby zwracały wartości, które <see cref="M:System.IComparable`1.CompareTo(`0)" />są spójne z.</span><span class="sxs-lookup"><span data-stu-id="65477-125">If you implement <see cref="T:System.IComparable`1" />, you should overload the <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" />, and <see langword="op_LessThanOrEqual" /> operators to return values that are consistent with <see cref="M:System.IComparable`1.CompareTo(`0)" />.</span></span> <span data-ttu-id="65477-126">Ponadto należy również zaimplementować <see cref="T:System.IEquatable`1" />.</span><span class="sxs-lookup"><span data-stu-id="65477-126">In addition, you should also implement <see cref="T:System.IEquatable`1" />.</span></span> <span data-ttu-id="65477-127">Aby uzyskać <see cref="T:System.IEquatable`1" /> pełne informacje, zobacz artykuł.</span><span class="sxs-lookup"><span data-stu-id="65477-127">See the <see cref="T:System.IEquatable`1" /> article for complete information.</span></span></para></block>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable`1.CompareTo(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : 'T -&gt; int" Usage="iComparable.CompareTo other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(T other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="65477-128">Obiekt, który ma zostać porównany z tym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="65477-128">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="65477-129">Porównuje bieżące wystąpienie z innym obiektem tego samego typu i zwraca liczbę całkowitą, która wskazuje, czy bieżące wystąpienie poprzedza, następuje po lub występuje w tym samym położeniu, co inny obiekt w porządku sortowania.</span><span class="sxs-lookup"><span data-stu-id="65477-129">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="65477-130">Wartość, która wskazuje względną kolejność porównywanych obiektów.</span><span class="sxs-lookup"><span data-stu-id="65477-130">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="65477-131">Wartość zwracana ma następujące znaczenie:</span><span class="sxs-lookup"><span data-stu-id="65477-131">The return value has these meanings:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="65477-132">Wartość</span><span class="sxs-lookup"><span data-stu-id="65477-132">Value</span></span> 
 </term><description> <span data-ttu-id="65477-133">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="65477-133">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="65477-134">Mniej niż zero</span><span class="sxs-lookup"><span data-stu-id="65477-134">Less than zero</span></span> 
 </term><description> <span data-ttu-id="65477-135">To wystąpienie poprzedza <paramref name="other" /> porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="65477-135">This instance precedes <paramref name="other" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="65477-136">Zero</span><span class="sxs-lookup"><span data-stu-id="65477-136">Zero</span></span> 
 </term><description> <span data-ttu-id="65477-137">To wystąpienie występuje w tym samym położeniu w kolejności sortowania, <paramref name="other" />jak.</span><span class="sxs-lookup"><span data-stu-id="65477-137">This instance occurs in the same position in the sort order as <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="65477-138">Większe od zera</span><span class="sxs-lookup"><span data-stu-id="65477-138">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="65477-139">To wystąpienie następuje <paramref name="other" /> w kolejności sortowania.</span><span class="sxs-lookup"><span data-stu-id="65477-139">This instance follows <paramref name="other" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65477-140"><xref:System.IComparable%601.CompareTo%2A>zapewnia metodę porównania silnie wpisaną do porządkowania elementów członkowskich obiektu kolekcji ogólnej.</span><span class="sxs-lookup"><span data-stu-id="65477-140"><xref:System.IComparable%601.CompareTo%2A> provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="65477-141">Z tego względu zazwyczaj nie jest on wywoływany bezpośrednio z kodu dewelopera.</span><span class="sxs-lookup"><span data-stu-id="65477-141">Because of this, it is usually not called directly from developer code.</span></span> <span data-ttu-id="65477-142">Zamiast tego jest wywoływana automatycznie przy użyciu metod, takich <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> jak <xref:System.Collections.Generic.SortedList%602.Add%2A>i.</span><span class="sxs-lookup"><span data-stu-id="65477-142">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="65477-143">Ta metoda jest tylko definicją i musi być implementowana przez określoną klasę lub typ wartości, aby mieć efekt.</span><span class="sxs-lookup"><span data-stu-id="65477-143">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="65477-144">Znaczenie porównania określone w sekcji wartości zwracane ("poprzedza", "występuje w tym samym położeniu co" i "poniżej") zależy od określonej implementacji.</span><span class="sxs-lookup"><span data-stu-id="65477-144">The meaning of the comparisons specified in the Return Values section ("precedes", "occurs in the same position as", and "follows) depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="65477-145">Według definicji, każdy obiekt porównuje więcej `null`niż i dwa odwołania o wartości null są porównywane ze sobą.</span><span class="sxs-lookup"><span data-stu-id="65477-145">By definition, any object compares greater than `null`, and two null references compare equal to each other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65477-146">Poniższy przykład kodu ilustruje implementację <xref:System.IComparable%601> dla prostego `Temperature` obiektu.</span><span class="sxs-lookup"><span data-stu-id="65477-146">The following code example illustrates the implementation of <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="65477-147">Przykład tworzy <xref:System.Collections.Generic.SortedList%602> kolekcję ciągów z `Temperature` kluczami obiektów i dodaje kilka par temperatury i ciągów do listy poza sekwencją.</span><span class="sxs-lookup"><span data-stu-id="65477-147">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="65477-148">W wywołaniu <xref:System.Collections.Generic.SortedList%602.Add%2A> metody <xref:System.Collections.Generic.SortedList%602> kolekcja używa <xref:System.IComparable%601> implementacji do sortowania wpisów listy, które są następnie wyświetlane w kolejności rosnącej temperatury.</span><span class="sxs-lookup"><span data-stu-id="65477-148">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="65477-149">Dla obiektów A, B i C, muszą być spełnione następujące wartości:</span><span class="sxs-lookup"><span data-stu-id="65477-149">For objects A, B, and C, the following must be true:</span></span> 
 <span data-ttu-id="65477-150">Do zwrócenia wartości zero wymagany jest <c>element a. CompareTo (a)</c> .</span><span class="sxs-lookup"><span data-stu-id="65477-150"><c>A.CompareTo(A)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="65477-151">Jeśli <c>A. CompareTo (B)</c> zwraca zero, wówczas do zwrócenia zera wymagany jest ciąg <c>B. CompareTo (A)</c> .</span><span class="sxs-lookup"><span data-stu-id="65477-151">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="65477-152">Jeśli <c>a. CompareTo (B)</c> zwraca zero i <c>B. CompareTo (C)</c> zwraca zero, a a <c>. CompareTo (c)</c> jest wymagany do zwrócenia zera.</span><span class="sxs-lookup"><span data-stu-id="65477-152">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="65477-153">Jeśli <c>obiekt. CompareTo (B)</c> zwraca wartość inną niż zero, wówczas do zwrócenia wartości znaku odwrotnego wymagana jest funkcja <c>B. CompareTo (A)</c> .</span><span class="sxs-lookup"><span data-stu-id="65477-153">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> is required to return a value of the opposite sign.</span></span>  
  
<span data-ttu-id="65477-154">Jeśli <c>a. CompareTo (B)</c> zwraca wartość <paramref name="x" /> , która nie jest równa zero, a <c>B. CompareTo (c)</c> zwraca wartość <paramref name="y" /> tego samego znaku co <paramref name="x" />, a <c>. CompareTo (c)</c> jest wymagana do zwrócenia wartości tego samego znaku co <paramref name="x" /> i .<paramref name="y" /></span><span class="sxs-lookup"><span data-stu-id="65477-154">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> that is not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> is required to return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="65477-155"><see cref="M:System.IComparable`1.CompareTo(`0)" /> Użyj metody, aby określić kolejność wystąpień klasy.</span><span class="sxs-lookup"><span data-stu-id="65477-155">Use the <see cref="M:System.IComparable`1.CompareTo(`0)" /> method to determine the ordering of instances of a class.</span></span></para></block>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
  </Members>
</Type>
