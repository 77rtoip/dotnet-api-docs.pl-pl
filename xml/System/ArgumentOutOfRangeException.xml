<Type Name="ArgumentOutOfRangeException" FullName="System.ArgumentOutOfRangeException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="649827fe694b95530c3724d19055299544ed5170" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39917241" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArgumentOutOfRangeException : ArgumentException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArgumentOutOfRangeException extends System.ArgumentException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ArgumentOutOfRangeException" />
  <TypeSignature Language="VB.NET" Value="Public Class ArgumentOutOfRangeException&#xA;Inherits ArgumentException" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArgumentOutOfRangeException : ArgumentException" />
  <TypeSignature Language="F#" Value="type ArgumentOutOfRangeException = class&#xA;    inherit ArgumentException&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ArgumentException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyjątek, który jest zgłaszany, gdy wartość argumentu jest spoza zakresu dopuszczalnych wartości zgodnie z definicją wywoływanej metody.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ArgumentOutOfRangeException> Wyjątek jest zgłaszany, gdy wywoływana jest metoda i co najmniej jeden z argumentów przekazanych do metody nie jest `null` i zawiera nieprawidłową wartość, która nie jest elementem członkowskim zestawu wartości oczekuje dla argumentu. <xref:System.ArgumentException.ParamName%2A> Właściwość identyfikuje nieprawidłowy argument i <xref:System.ArgumentOutOfRangeException.ActualValue%2A> właściwość, jeśli wartość jest obecny, określa nieprawidłową wartość.  
  
 Zazwyczaj <xref:System.ArgumentOutOfRangeException> powstały na skutek błędu dla deweloperów. Zamiast Obsługa wyjątku w `try` / `catch` bloku, należy wyeliminować przyczyną wyjątku lub, jeśli argument jest zwracany przez wywołanie metody lub danych wejściowych przez użytkownika przed przesłaniem do metody, która zgłasza wyjątek , należy sprawdzić, czy argumenty przed przekazaniem ich do metody.  
  
 <xref:System.ArgumentOutOfRangeException> jest często używany przez:  
  
-   Klasy w <xref:System.Collections> i <xref:System.IO> przestrzeni nazw.  
  
-   <xref:System.Array> Klasy.  
  
-   Ciąg metod manipulowania <xref:System.String> klasy.  
  
 Warunki, w których <xref:System.ArgumentOutOfRangeException> wyjątku są następujące:  
  
 Element członkowski kolekcji są pobierane za jego numer indeksu, a numer indeksu jest nieprawidłowy.  
 Jest to najbardziej typowe przyczyny <xref:System.ArgumentOutOfRangeException> wyjątku.   Zazwyczaj numer indeksu jest nieprawidłowy dla jednego z trzech powodów:  
  
-   Kolekcja nie ma elementów członkowskich i kodzie przyjęto założenie, że nie. Poniższy przykład podejmie próbę pobrania pierwszego elementu w kolekcji, która nie ma żadnych elementów:  
  
     [!code-csharp[System.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#4)]
     [!code-vb[System.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#4)]  
  
     Aby zapobiec wyjątek, sprawdź, czy kolekcja `Count` właściwość jest większa niż zero, przed podjęciem próby pobrania żadnych elementów członkowskich, tak jak poniższy fragment kodu.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#5)]
     [!code-vb[System.ArgumentOutOfRangeException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#5)]  
  
     W niektórych przypadkach może to nastąpić, ponieważ próbujesz dodać członka do kolekcji przy użyciu indeksu, który nie istnieje, a nie przez wywołanie metody, takie jak `Add`, który istnieje w tym celu.  Poniższy przykład podejmie próbę dodania elementu do kolekcji przy użyciu indeksu nieistniejącej zamiast wywoływania <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> metody.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#13)]
     [!code-vb[System.ArgumentOutOfRangeException#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#13)]  
  
     Poniższy fragment kodu naprawia ten błąd:  
  
     [!code-csharp[System.ArgumentOutOfRangeException#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#14)]
     [!code-vb[System.ArgumentOutOfRangeException#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#14)]  
  
-   Próbuje pobrać element, którego indeks jest ujemny. Zwykle dzieje się tak, ponieważ przeszukaliśmy kolekcji dla indeksu określonego elementu i błędnie założono że wyszukiwania zakończyła się powodzeniem. W poniższym przykładzie wywołanie <xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29?displayProperty=nameWithType> metoda nie powiedzie się dowiedzieć się, równa się "Z", a tym samym ciągiem zwraca wartość -1. Jednak jest to wartość nieprawidłowy indeks.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#6)]
     [!code-vb[System.ArgumentOutOfRangeException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#6)]  
  
     Aby zapobiec wyjątek, sprawdź, czy wyszukiwanie jest pomyślne, upewniając się, że zwrócony indeksie jest większa niż lub równa zero, przed podjęciem próby pobrania elementu z kolekcji, jako następujący kod fragment nie.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#7)]
     [!code-vb[System.ArgumentOutOfRangeException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#7)]  
  
-   Próbuje pobrać element, którego indeks jest równa wartości kolekcji `Count` właściwości, w poniższym przykładzie pokazano.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#8)]
     [!code-vb[System.ArgumentOutOfRangeException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#8)]  
  
     Ponieważ kolekcje w programie .NET Framework Użyj indeksowania zaczynającego się od zera, pierwszy element w kolekcji jest umieszczony pod indeksem 0, a ostatni element jest indeksem `Count` - 1. Można wyeliminować ten błąd, zapewniając dostęp do ostatniego elementu o indeksie `Count` - 1, tak jak w poniższym kodzie.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#9)]
     [!code-vb[System.ArgumentOutOfRangeException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#9)]  
  
 Podjęto próbę wykonania operacji ciąg przez wywołanie metody manipulowania ciągiem, a indeks początkowy nie istnieje w ciągu.  
 Przeciążenia metody, takie jak <xref:System.String.Compare%2A?displayProperty=nameWithType>, <xref:System.String.CompareOrdinal%2A?displayProperty=nameWithType>, <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, <xref:System.String.IndexOfAny%2A>, <xref:System.String.Insert%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType>, <xref:System.String.Remove%2A>, lub <xref:System.String.Substring%2A?displayProperty=nameWithType> , pozwalają na określenie indeks początkowy Operacja wymagają indeksu poprawnej pozycji w ciągu. Prawidłowych indeksów należeć do zakresu od 0 do <xref:System.String.Length%2A?displayProperty=nameWithType> - 1.  
  
 Istnieją cztery typowe przyczyny to <xref:System.ArgumentOutOfRangeException> wyjątek:  
  
-   Pracujesz z pustym ciągiem., lub <xref:System.String.Empty?displayProperty=nameWithType>. Ponieważ jej <xref:System.String.Length%2A?displayProperty=nameWithType> właściwość zwraca wartość 0, wszelkie próby do manipulowania go przez indeks zgłasza <xref:System.ArgumentOutOfRangeException> wyjątku. W poniższym przykładzie zdefiniowano `GetFirstCharacter` metodę, która zwraca pierwszy znak w ciągu. Jeśli ciąg jest pusty, jako ostatni ciąg przekazywany do metody, metoda zgłasza <xref:System.ArgumentOutOfRangeException> wyjątku.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#15)]
     [!code-vb[System.ArgumentOutOfRangeException#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#15)]  
  
     Wyjątek może wyeliminować testując czy ciągu <xref:System.String.Length%2A?displayProperty=nameWithType> jest większa od zera lub przez wywołanie metody <xref:System.String.IsNullOrEmpty%2A> metodę, aby upewnić się, że ten ciąg nie jest `null` lub jest pusty. Poniższy fragment kodu jest drugim. W tym przypadku, jeśli ciąg jest `null` lub jest pusty, `GetFirstCharacter` metoda zwróci wartość U + 0000.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#16)]
     [!code-vb[System.ArgumentOutOfRangeException#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#16)]  
  
-   Manipulacje ciąg na podstawie położenia podciągu wewnątrz tego ciągu i już nie można określić, czy podciąg rzeczywiście został znaleziony.  
  
     Poniższy przykład wyodrębnia drugi słowo frazy dwa słowa. Wyniku weryfikacji zgłasza wyjątek <xref:System.ArgumentOutOfRangeException> wyjątek, jeśli wyrażenie składa się z tylko jednego słowa i w związku z tym nie zawiera znak spacji osadzonych.  Dzieje się tak dlatego wywołanie <xref:System.String.IndexOf%28System.String%29?displayProperty=nameWithType> metoda zwraca wartość -1 oznacza, że wyszukiwanie nie powiodło się i to nieprawidłowa wartość jest następnie przekazywany do <xref:System.String.Substring%28System.Int32%29?displayProperty=nameWithType> metody.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind1.cs#17)]
     [!code-vb[System.ArgumentOutOfRangeException#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind1.vb#17)]  
  
     Aby wyeliminować wyjątek, sprawdź poprawność wartości zwracanej przez metodę wyszukiwania ciągów przed wywołaniem metody manipulowania ciągiem.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind2.cs#18)]
     [!code-vb[System.ArgumentOutOfRangeException#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind2.vb#18)]  
  
-  
  
 Próbowano Wyodrębnij podciąg, który znajduje się poza zakresem bieżącego ciągu.  
 Metody, które umożliwiają wyodrębnianie podciągów wszystkie wymagają określenia pozycji początkowej podciągu, a w przypadku podciągi, które nie należy przechodzić do końca ciągu, liczba znaków w podciąg. Należy zauważyć, że nie jest to *indeksu* ostatniego znaku w podciągu.  
  
 <xref:System.ArgumentOutOfRangeException> Jest zazwyczaj zgłaszany wyjątek w tym przypadku ponieważ został niepoprawnie obliczyć liczbę znaków w podciągu.  Jeśli używane są metody wyszukiwania, takie jak <xref:System.String.IndexOf%2A?displayProperty=nameWithType> do identyfikowania początkową i końcową pozycję podciąg:  
  
-   Jeśli znak w pozycji końcowej zwrócone przez <xref:System.String.IndexOf%2A?displayProperty=nameWithType> ma być zawarty w podciąg, końcowy położenie podciągu jest nadawana przez formułę  
  
    ```  
    endIndex - startIndex + 1  
    ```  
  
-   Jeśli znak w pozycji końcowej zwrócony przez <xref:System.String.IndexOf%2A?displayProperty=nameWithType> jest mają być wykluczone z podciąg, końcowy położenie podciągu jest nadawana przez formułę  
  
    ```  
    endIndex - startIndex   
    ```  
  
 W poniższym przykładzie zdefiniowano `FindWords` metody, która używa <xref:System.String.IndexOfAny%28System.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> metodę, aby zidentyfikować znaków spacji i znaków interpunkcyjnych znaków w ciągu i zwraca tablicę, która zawiera wyrazy w ciągu.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/FindWords1.cs#19)]
 [!code-vb[System.ArgumentOutOfRangeException#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/FindWords1.vb#19)]  
  
 Przekazana do metody z nieprawidłowym argumentem, który wymaga jedynie liczb dodatnich i zera liczbą ujemną lub przekazana wartość ujemną lub zero do metody z nieprawidłowym argumentem, który wymaga tylko liczby dodatnie.  
 Na przykład <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metoda wymaga, aby określić liczbę elementów w każdym wymiarze tablicy dwuwymiarowej; prawidłowe wartości dla każdego wymiaru można dostosować w zakresie od 0 do <xref:System.Int32.MaxValue?displayProperty=nameWithType>. Ale ponieważ argument wymiaru w poniższym przykładzie ma wartość ujemną, metoda zgłasza <xref:System.ArgumentOutOfRangeException> wyjątku.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#1)]
 [!code-vb[System.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#1)]  
  
 Aby poprawić ten błąd, upewnij się, że wartość argumentu Nieprawidłowa wartość nieujemną. Możesz można to zrobić, podając prawidłową wartość, podobnie jak poniższy fragment kodu.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#2)]
 [!code-vb[System.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#2)]  
  
 Możesz również sprawdzić poprawność danych wejściowych i, jeśli jest on nieprawidłowy, wykonania określonego działania. Poniższy fragment kodu wyświetla komunikat o błędzie zamiast wywołania metody.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#3)]
 [!code-vb[System.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#3)]  
  
 Sytuacja wyścigu istnieje w aplikacji, która jest wielowątkowa lub zawiera zadania, które są wykonywane asynchronicznie i aktualizuje się on tablicę lub kolekcję.  
 W poniższym przykładzie użyto <xref:System.Collections.Generic.List%601> obiektu, aby wypełnić kolekcję `Continent` obiektów. Wyniku weryfikacji zgłasza wyjątek <xref:System.ArgumentOutOfRangeException> wyjątek, jeśli na przykład próbuje wyświetlić siedem elementów w kolekcji, zanim kolekcji jest w pełni wypełniony.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race1.cs#11)]
 [!code-vb[System.ArgumentOutOfRangeException#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race1.vb#11)]  
  
 W takim przypadku dwa zasoby są dostępne z wielu wątków:  
  
-   `continents` Kolekcji. Jego <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> metoda jest wywoływana z wielu wątków. Ponadto wątek główny lub podstawowego przyjęto założenie, że kolekcji jest w pełni wypełniony siedem elementów podczas wykonuje iteracje jej członków.  
  
-   `msg` Parametry, które jest połączone z wielu wątków.  
  
 Aby poprawić ten błąd, upewnij się, że udostępnionego stanu odbywa się w sposób wątkowo bezpieczny, w następujący sposób.  
  
-   Jeśli aplikacja używa obiektu tablicy lub kolekcji, należy wziąć pod uwagę przy użyciu klasy kolekcji metodą o bezpiecznych wątkach, takich jak typy w <xref:System.Collections.Concurrent> przestrzeni nazw lub <xref:System.Collections.Immutable> wersji poza pasmem.  
  
-   Upewnij się, że udostępnionego stanu (oznacza to, że zasoby, które są dostępne dla wielu wątków) odbywa się w sposób wątkowo bezpieczny, tak aby tylko jeden wątek jednocześnie ma już wyłączny dostęp do zasobów. Dużej liczby klas, takie jak <xref:System.Threading.CountdownEvent>, <xref:System.Threading.Interlocked>, <xref:System.Threading.Monitor>, i <xref:System.Threading.Mutex>, są dostępne do synchronizowania dostępu do zasobów. Aby uzyskać więcej informacji, zobacz [wątki](http://msdn.microsoft.com/library/7b46a7d9-c6f1-46d1-a947-ae97471bba87). Ponadto obsługa języków jest dostępna za pośrednictwem [blokady](~/docs/csharp/language-reference/keywords/lock-statement.md) instrukcji w języku C# i [SyncLock](~/docs/visual-basic/language-reference/statements/synclock-statement.md) konstruowania w języku Visual Basic.  
  
 Następujące adresy przykład <xref:System.ArgumentOutOfRangeException> wyjątków i inne problemy z poprzedniego przykładu. Zastępuje on programy <xref:System.Collections.Generic.List%601> obiekt z <xref:System.Collections.Concurrent.ConcurrentBag%601> obiektu, aby upewnić się, że dostęp do kolekcji jest bezpieczna dla wątków, używa <xref:System.Threading.CountdownEvent> obiektu, aby upewnić się, że wątek aplikacji działa tylko wtedy, gdy inne wątki zostały wykonane i stosowana jest blokada, aby upewnić się, dostęp tylko jeden wątek `msg` zmiennej w danym momencie.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race2.cs#12)]
 [!code-vb[System.ArgumentOutOfRangeException#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race2.vb#12)]  
  
 <xref:System.ArgumentOutOfRangeException> używa COR_E_ARGUMENTOUTOFRANGE HRESULT, która ma wartość 0x80131502.  
  
 Aby uzyskać listę początkowe wartości właściwości wystąpienia <xref:System.ArgumentOutOfRangeException>, zobacz <xref:System.ArgumentOutOfRangeException> konstruktorów.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano klasę umożliwiającą zawierają informacje na temat zaproszonego gościa. Jeśli gość ma mniej niż 21, <xref:System.ArgumentOutOfRangeException> wyjątku.  
  
 [!code-csharp[ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR/ArgumentOutOfRangeException/CS/program.cs#1)]
 [!code-vb[ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ArgumentOutOfRangeException/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.ArgumentException.Message%2A> właściwości nowego wystąpienia dostarczane przez system komunikat, który opisuje błąd, takie jak "Nieujemna liczba wymaganych". Ten komunikat uwzględnia bieżącą kulturę systemu.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.ArgumentOutOfRangeException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Zlokalizowany ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException paramName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nazwa parametru, który powoduje, że ten wyjątek.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> klasy o nazwie parametru, który powoduje, że ten wyjątek.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.ArgumentException.Message%2A> właściwości nowego wystąpienia dostarczane przez system komunikat, który opisuje błąd, takie jak "Nieujemna liczba wymaganych". Ten komunikat uwzględnia bieżącą kulturę systemu.  
  
 Ten konstruktor inicjuje <xref:System.ArgumentException.ParamName%2A> własności do nowego wystąpienia przy użyciu `paramName` parametru. Zawartość `paramName` ma być zrozumiała dla ludzi.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.ArgumentOutOfRangeException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Ciąg pusty ("").|  
|<xref:System.ArgumentException.ParamName%2A>|Ciąg nazwy parametru.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArgumentOutOfRangeException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArgumentOutOfRangeException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt zawierający dane serializowanego obiektu.</param>
        <param name="context">Obiekt, który opisuje źródle lub miejscu docelowym serializowanych danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> klasy z serializowanych danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływana podczas deserializacji do odtworzenia obiektu wyjątku przesyłanego za pomocą strumienia. Aby uzyskać więcej informacji, zobacz [XML oraz serializacji protokołu SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * Exception -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat o błędzie wyjaśniający przyczynę tego wyjątku.</param>
        <param name="innerException">Wyjątek będący przyczyną bieżącego wyjątku lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), jeśli jest określony żaden wyjątek wewnętrzny.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> klasy przy użyciu określonego komunikatu o błędzie, a wyjątek, który jest przyczyną tego wyjątku.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (paramName, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nazwa parametru, który spowodował wyjątek.</param>
        <param name="message">Komunikat, który opisuje błąd.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> klasy o nazwie parametru, który powoduje, że ten wyjątek i określony komunikat o błędzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.ArgumentOutOfRangeException.Message%2A> właściwości nowego wystąpienia, używając wartości `message` parametru. Zawartość `message` powinna być zrozumiała dla ludzi. Obiekt wywołujący tego konstruktora jest wymagany w celu zagwarantowania, że ten ciąg został zlokalizowany w bieżącej kulturze systemu.  
  
 Ten konstruktor inicjuje <xref:System.ArgumentException.ParamName%2A> własności do nowego wystąpienia przy użyciu `paramName` parametru. Zawartość `paramName` ma być zrozumiała dla ludzi.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.ArgumentOutOfRangeException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Ciąg komunikatu o błędzie.|  
|<xref:System.ArgumentException.ParamName%2A>|Ciąg nazwy parametru.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, object actualValue, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, object actualValue, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String, actualValue As Object, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName, System::Object ^ actualValue, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * obj * string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (paramName, actualValue, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="actualValue" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nazwa parametru, który spowodował wyjątek.</param>
        <param name="actualValue">Wartość argumentu, który powoduje, że ten wyjątek.</param>
        <param name="message">Komunikat, który opisuje błąd.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> nazwę klasy z parametrem, wartość tego argumentu i określony komunikat o błędzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.ArgumentException.ParamName%2A> własności do nowego wystąpienia przy użyciu `paramName` parametru <xref:System.ArgumentOutOfRangeException.ActualValue%2A> właściwość za pomocą `actualValue` parametru i <xref:System.ArgumentException.Message%2A> właściwość za pomocą `message` parametru. Zawartość `paramName` i `message` parametry mają być zrozumiała dla ludzi. Obiekt wywołujący tego konstruktora jest wymagany w celu zagwarantowania, że te ciągi zostały zlokalizowane dla bieżącej kultury systemu.  
  
 `actualValue` Parametr nie jest używany w bibliotece klas programu .NET Framework. Jednak <xref:System.ArgumentOutOfRangeException.ActualValue%2A> właściwość została podana, dzięki czemu aplikacje mogą używać wartości argumentu dostępne.  
  
 `actualValue` Parametrów zawiera nieprawidłową wartość jest przekazywana do metody, która powoduje to zgłoszenie wyjątku. Ta wartość jest przechowywana w <xref:System.ArgumentOutOfRangeException.ActualValue%2A> właściwość i jego reprezentację ciągu jest dołączany do ciągu wiadomości przechowywanych w <xref:System.ArgumentOutOfRangeException.Message%2A> właściwości.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.ArgumentOutOfRangeException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.ArgumentOutOfRangeException.ActualValue%2A>|Wartość argumentu.|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Ciąg komunikatu o błędzie.|  
|<xref:System.ArgumentException.ParamName%2A>|Ciąg nazwy parametru.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualValue">
      <MemberSignature Language="C#" Value="public virtual object ActualValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActualValue" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.ActualValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActualValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ ActualValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActualValue : obj" Usage="System.ArgumentOutOfRangeException.ActualValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość argumentu, który powoduje, że ten wyjątek.</summary>
        <value>
          <see langword="Object" /> Zawierającą wartość parametru, który spowodował bieżący <see cref="T:System.Exception" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do pobierania nieprawidłowy argument.  
  
 `ActualValue` Właściwość zwraca taką samą wartość, która została przekazana do konstruktora, lub `null` Jeśli nie dostarczono żadnej wartości.  
  
 <xref:System.ArgumentOutOfRangeException.ActualValue%2A> Właściwość ma przypisaną wartość, w czasie konstrukcji obiektu. Jeśli <xref:System.ArgumentOutOfRangeException.ActualValue%2A> wartość właściwości jest `null`, ciąg reprezentujący wartość jest dołączana do ciąg komunikatu o posiadaniu <xref:System.ArgumentOutOfRangeException.Message%2A> właściwości.  
  
 <xref:System.ArgumentOutOfRangeException.ActualValue%2A> Właściwość nie jest używana w bibliotece klas programu .NET Framework. Wykonuje wartość null we wszystkich <xref:System.ArgumentOutOfRangeException> obiektów zgłoszony przez biblioteki klas .NET Framework. <xref:System.ArgumentOutOfRangeException.ActualValue%2A> Właściwość została podana, dzięki czemu aplikacje mogą używać wartości argumentu dostępne.  
  
 Ta właściwość jest tylko do odczytu i powinna zostać zastąpiona tylko po to, aby dostosować zawartość lub format wartości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="argumentOutOfRangeException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt zawierający dane serializowanego obiektu.</param>
        <param name="context">Obiekt, który opisuje źródle lub miejscu docelowym serializowanych danych.</param>
        <summary>Zestawy <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiektu z nieprawidłową wartość argumentu i dodatkowe informacje o wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ArgumentOutOfRangeException.GetObjectData%2A> Ustawia <xref:System.Runtime.Serialization.SerializationInfo> obiekt z wszystkimi danymi obiekt wyjątku, przeznaczony dla serializacji. Podczas deserializacji obiektu wyjątku jest odtworzonych z <xref:System.Runtime.Serialization.SerializationInfo> przesyłanego w strumieniu.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Runtime.Serialization.SerializationInfo>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> Obiekt jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">w celu świadczenia usług serializacji. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.ArgumentOutOfRangeException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera komunikat o błędzie i ciąg reprezentujący wartość nieprawidłowy argument lub w komunikacie o błędzie, jeśli wartość argumentu jest równa null.</summary>
        <value>Wiadomość SMS dla tego wyjątku. Wartość tej właściwości ma jedną z dwóch form w następujący sposób.  
  
 <list type="table"><listheader><term> Warunek </term><description> wartość </description></listheader><item><term><paramref name="actualValue" /> jest <see langword="null" />.  </term><description><paramref name="message" /> Ciąg przekazany do konstruktora.  </description></item><item><term><paramref name="actualValue" /> Nie <see langword="null" />.  </term><description><paramref name="message" /> Ciąg dołączany wraz z ciągu reprezentującego wartość nieprawidłowy argument.  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zastępuje <xref:System.ArgumentException.Message%2A>.  
  
 Komunikat o błędzie powinna opisywać oczekiwane wartości parametru, który powoduje, że ten wyjątek. Komunikat o błędzie powinien być zlokalizowany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>