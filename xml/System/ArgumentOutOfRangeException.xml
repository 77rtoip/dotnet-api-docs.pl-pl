<Type Name="ArgumentOutOfRangeException" FullName="System.ArgumentOutOfRangeException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="871ce8e626c522e32533cc316f2276a56cc23569" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433714" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArgumentOutOfRangeException : ArgumentException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArgumentOutOfRangeException extends System.ArgumentException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ArgumentOutOfRangeException" />
  <TypeSignature Language="VB.NET" Value="Public Class ArgumentOutOfRangeException&#xA;Inherits ArgumentException" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArgumentOutOfRangeException : ArgumentException" />
  <TypeSignature Language="F#" Value="type ArgumentOutOfRangeException = class&#xA;    inherit ArgumentException&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ArgumentException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyjątek zgłaszany, gdy wartość argumentu jest poza dozwolonym zakresem wartości zgodnie z definicją wywoływanej metody.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ArgumentOutOfRangeException> Wyjątek jest zgłaszany, gdy wywoływana jest metoda i co najmniej jeden z argumentów przekazanych do metody nie jest `null` i zawiera nieprawidłową wartość, która nie jest elementem członkowskim zestaw wartości Oczekiwano argumentu. <xref:System.ArgumentException.ParamName%2A> Właściwość identyfikuje nieprawidłowy argument i <xref:System.ArgumentOutOfRangeException.ActualValue%2A> właściwości, jeśli wartość jest obecny, określa nieprawidłową wartość.  
  
 Zazwyczaj <xref:System.ArgumentOutOfRangeException> wynikiem błędu developer. Zamiast obsługi wyjątków w `try` / `catch` bloku, należy usunąć przyczyną wyjątku lub, jeśli argument jest zwracany przez wywołanie metody lub danych wejściowych przez użytkownika przed przesłaniem do metody który zgłasza wyjątek , należy sprawdzić, czy argumenty przed przekazaniem ich do metody.  
  
 <xref:System.ArgumentOutOfRangeException> jest często używany przez:  
  
-   Klasy w <xref:System.Collections> i <xref:System.IO> przestrzeni nazw.  
  
-   <xref:System.Array> Klasy.  
  
-   Manipulowanie metod w ciągu <xref:System.String> klasy.  
  
 Warunki, w których <xref:System.ArgumentOutOfRangeException> wyjątku są następujące:  
  
 Element członkowski kolekcji są pobierane przy użyciu numeru indeksu, a numer indeksu jest nieprawidłowy.  
 Jest to najczęstsza Przyczyna <xref:System.ArgumentOutOfRangeException> wyjątku.   Zazwyczaj numer indeksu jest nieprawidłowy dla jednego z trzech powodów:  
  
-   Kolekcja nie ma elementów członkowskich, a kodu przyjęto założenie, że istnieje. Poniższy przykład podejmie próbę pobrania pierwszym elementem kolekcji, która nie ma żadnych elementów:  
  
     [!code-csharp[System.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#4)]
     [!code-vb[System.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#4)]  
  
     Aby zapobiec wyjątek, sprawdź, czy kolekcja `Count` właściwość jest większa niż zero, przed próbą pobrania żadnych elementów członkowskich, tak jak w przypadku następującego fragmentu kodu.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#5)]
     [!code-vb[System.ArgumentOutOfRangeException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#5)]  
  
     W niektórych przypadkach może to nastąpić ponieważ próbujesz dodać członka do kolekcji przy użyciu indeksu, który nie istnieje, a nie przez wywołanie metody, takie jak `Add`, który istnieje w tym celu.  Poniższy przykład podejmie próbę dodania elementu do kolekcji przy użyciu indeksu nieistniejącą zamiast wywoływania <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> metody.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#13)]
     [!code-vb[System.ArgumentOutOfRangeException#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#13)]  
  
     Poniższy fragment kodu rozwiąże ten błąd:  
  
     [!code-csharp[System.ArgumentOutOfRangeException#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#14)]
     [!code-vb[System.ArgumentOutOfRangeException#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#14)]  
  
-   W przypadku próby pobrania elementu, którego indeks jest liczbą ujemną. Najczęstszą przyczyną po przeszukaniu kolekcji dla indeksu określonego elementu i mieć błędnego założono, że wyszukiwanie powiodło się. W poniższym przykładzie, wywołanie <xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29?displayProperty=nameWithType> — metoda nie może odnaleźć ciągu równa "Z" i dlatego zwraca wartość -1. Jednak jest to wartość nieprawidłowy indeks.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#6)]
     [!code-vb[System.ArgumentOutOfRangeException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#6)]  
  
     Aby zapobiec wyjątek, sprawdź, czy wyszukiwanie jest pomyślne, upewniając się, że zwrócony indeksu jest większa niż lub równa zero, przed podjęciem próby pobrania elementu z kolekcji, jako następujący kod fragmentu nie.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#7)]
     [!code-vb[System.ArgumentOutOfRangeException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#7)]  
  
-   W przypadku próby pobrania elementu, którego indeks jest równa wartości do kolekcji `Count` właściwości, jak w poniższym przykładzie przedstawiono.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#8)]
     [!code-vb[System.ArgumentOutOfRangeException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#8)]  
  
     Ponieważ kolekcje w programie .NET Framework Użyj indeksowania liczony od zera, pierwszym elementem kolekcji znajduje się pod indeksem 0, a ostatnim elementem znajduje się pod indeksem `Count` - 1. Błąd można wyeliminować, zapewniając dostęp do ostatniego elementu w indeksie `Count` - 1, tak jak w poniższym kodzie.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#9)]
     [!code-vb[System.ArgumentOutOfRangeException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#9)]  
  
 Podjęto próbę wykonania operacji ciąg przez wywołanie metody manipulowania ciąg, a indeks początkowy nie istnieje w ciągu.  
 Przeciążenia metod, takich jak <xref:System.String.Compare%2A?displayProperty=nameWithType>, <xref:System.String.CompareOrdinal%2A?displayProperty=nameWithType>, <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, <xref:System.String.IndexOfAny%2A>, <xref:System.String.Insert%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType>, <xref:System.String.Remove%2A>, lub <xref:System.String.Substring%2A?displayProperty=nameWithType> które pozwalają określić indeks początkowy Operacja wymagają indeks prawidłową pozycją w ciągu. Nieprawidłowa indeksów należeć do zakresu od 0 do <xref:System.String.Length%2A?displayProperty=nameWithType> - 1.  
  
 Istnieją cztery typowe przyczyny tego <xref:System.ArgumentOutOfRangeException> wyjątek:  
  
-   Użytkownik pracuje z pustym ciągiem., lub <xref:System.String.Empty?displayProperty=nameWithType>. Ponieważ jego <xref:System.String.Length%2A?displayProperty=nameWithType> właściwość zwraca wartość 0, wszelkie próby modyfikowania jej przez indeks zgłasza <xref:System.ArgumentOutOfRangeException> wyjątku. W poniższym przykładzie zdefiniowano `GetFirstCharacter` metodę zwracającą pierwszego znaku ciągu. Jeśli ciąg jest pusty, jak ostatni ciąg przekazany do metody, metoda wygeneruje <xref:System.ArgumentOutOfRangeException> wyjątku.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#15)]
     [!code-vb[System.ArgumentOutOfRangeException#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#15)]  
  
     Można wyeliminować wyjątku przez sprawdzenie, czy ten ciąg <xref:System.String.Length%2A?displayProperty=nameWithType> jest większa niż zero, przez wywołanie <xref:System.String.IsNullOrEmpty%2A> metody, aby upewnić się, że ciąg nie jest `null` lub jest pusty. Poniższy fragment kodu jest jego. W tym przypadku, jeśli ciąg jest `null` lub jest pusta, `GetFirstCharacter` metoda zwróci wartość U + 0000.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#16)]
     [!code-vb[System.ArgumentOutOfRangeException#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#16)]  
  
-   Manipulacje ciąg na podstawie położenia substring w tym ciągu, a już nie można określić, czy rzeczywiście został znaleziony podciąg.  
  
     Poniższy przykład wyodrębnia drugie słowo frazy słowa dwa. Zgłasza <xref:System.ArgumentOutOfRangeException> wyjątek, jeśli wyrażenie składa się tylko jedno słowo i w związku z tym nie zawiera znaku spacji osadzonych.  Dzieje się tak dlatego wywołanie <xref:System.String.IndexOf%28System.String%29?displayProperty=nameWithType> metoda zwraca wartość -1 oznacza, że wyszukiwanie nie powiodło się i to nieprawidłowa wartość są następnie przekazywane do <xref:System.String.Substring%28System.Int32%29?displayProperty=nameWithType> metody.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind1.cs#17)]
     [!code-vb[System.ArgumentOutOfRangeException#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind1.vb#17)]  
  
     Aby wyeliminować wyjątek, sprawdź poprawność wartości zwracanej przez metodę wyszukiwania ciągów przed wywołaniem metody manipulowania ciągu.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind2.cs#18)]
     [!code-vb[System.ArgumentOutOfRangeException#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind2.vb#18)]  
  
-  
  
 Próbowano wyodrębnianie podciągu, który znajduje się poza zakresem bieżących parametrów.  
 Metody, które wyodrębnić podciągów wymaga określenia pozycji początkowej podciąg, a dla podciągów, które nie należy kontynuować do końca ciągu, liczba znaków w podciąg. Należy pamiętać, że nie jest to *indeksu* z ostatnim znakiem w podciąg.  
  
 <xref:System.ArgumentOutOfRangeException> Jest zwracany wyjątek, zazwyczaj w takim przypadku ponieważ został niepoprawnie obliczone liczba znaków w podciąg.  Jeśli używasz metody wyszukiwania, takie jak <xref:System.String.IndexOf%2A?displayProperty=nameWithType> do identyfikowania początkową i końcową pozycji podciągu:  
  
-   Jeśli znak w pozycji końcowej zwrócony przez <xref:System.String.IndexOf%2A?displayProperty=nameWithType> mają być zawarte w podciąg, pozycję końcową podciąg jest określany przez formułę  
  
    ```  
    endIndex - startIndex + 1  
    ```  
  
-   Jeśli znak w pozycji końcowej zwrócony przez <xref:System.String.IndexOf%2A?displayProperty=nameWithType> jest mają być wykluczone z podciąg, pozycję końcową podciąg jest określany przez formułę  
  
    ```  
    endIndex - startIndex   
    ```  
  
 W poniższym przykładzie zdefiniowano `FindWords` metody, która używa <xref:System.String.IndexOfAny%28System.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> metodę identyfikowania znaków spacji i znaków interpunkcyjnych oznacza w ciągu i zwraca tablicę, która zawiera wyrazy, w ciągu.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/FindWords1.cs#19)]
 [!code-vb[System.ArgumentOutOfRangeException#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/FindWords1.vb#19)]  
  
 Wartość ujemną przekazanego do metody z argument, który wymaga tylko liczby dodatnie i zero lub przekazanego wartość ujemną lub zero do metody z argument, który wymaga tylko liczby dodatnie.  
 Na przykład <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metoda wymaga, aby określić liczbę elementów w każdy wymiar jest tablicą dwuwymiarową; prawidłowe wartości dla każdego wymiaru mogą należeć do zakresu od 0 do <xref:System.Int32.MaxValue?displayProperty=nameWithType>. Jednak ponieważ argument wymiaru w poniższym przykładzie ma wartość ujemną, metoda wygeneruje <xref:System.ArgumentOutOfRangeException> wyjątku.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#1)]
 [!code-vb[System.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#1)]  
  
 Aby naprawić błąd, upewnij się, że wartość nieprawidłowy argument jest ujemna. Można w tym podając prawidłową wartość, tak jak w przypadku następującego fragmentu kodu.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#2)]
 [!code-vb[System.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#2)]  
  
 Można sprawdzić poprawności danych wejściowych i, jeśli jest on nieprawidłowy, należy podjąć inną akcję. Poniższy fragment kodu wyświetla komunikat o błędzie zamiast wywoływania metody.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#3)]
 [!code-vb[System.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#3)]  
  
 Sytuacja wyścigu istnieje w aplikacji, która jest wielowątkowe lub zawiera zadania, które asynchronicznie wykonania i który aktualizuje tablicą lub kolekcją.  
 W poniższym przykładzie użyto <xref:System.Collections.Generic.List%601> obiektu, aby wypełnić kolekcję `Continent` obiektów. Zgłasza <xref:System.ArgumentOutOfRangeException> wyjątków, na przykład próba wyświetlenia siedmiu elementów w kolekcji przed kolekcji jest w pełni wypełnione.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race1.cs#11)]
 [!code-vb[System.ArgumentOutOfRangeException#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race1.vb#11)]  
  
 W takim przypadku dwa zasoby są dostępne z wielu wątków:  
  
-   `continents` Kolekcji. Jego <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> metoda jest wywoływana przez wiele wątków. Ponadto wątku głównego lub podstawowego przyjęto założenie, że kolekcja jest całkowicie wypełniana siedmiu elementów podczas jego iteruje po jej elementów członkowskich.  
  
-   `msg` Ciąg, który jest połączony z wielu wątków.  
  
 Aby naprawić błąd, upewnij się, że stan współużytkowany jest dostępne w sposób zapewniający obsługę wielowątkowości, w następujący sposób.  
  
-   Jeśli aplikacja korzysta z obiektu tablicą lub kolekcją, rozważ użycie klasy obsługującej wielowątkowość kolekcji, takie jak typy w <xref:System.Collections.Concurrent> przestrzeni nazw lub <xref:System.Collections.Immutable> wersji poza pasmem.  
  
-   Upewnij się, że udostępniony stan (to znaczy zasobów, które są dostępne dla wielu wątków) jest dostępny w sposób zapewniający obsługę wielowątkowości, tak aby tylko jeden wątek w czasie ma już wyłączny dostęp do zasobów. Duża liczba klas, takich jak <xref:System.Threading.CountdownEvent>, <xref:System.Threading.Interlocked>, <xref:System.Threading.Monitor>, i <xref:System.Threading.Mutex>, można zsynchronizować dostęp do zasobów. Aby uzyskać więcej informacji, zobacz [wątki](http://msdn.microsoft.com/library/7b46a7d9-c6f1-46d1-a947-ae97471bba87). Ponadto obsługa języków jest dostępna za pośrednictwem [blokady](~/docs/csharp/language-reference/keywords/lock-statement.md) instrukcji w języku C# i [SyncLock](~/docs/visual-basic/language-reference/statements/synclock-statement.md) utworzyć w języku Visual Basic.  
  
 Następujące adresy przykład <xref:System.ArgumentOutOfRangeException> wyjątku i inne problemy z poprzedniego przykładu. Zastępuje <xref:System.Collections.Generic.List%601> obiekt z <xref:System.Collections.Concurrent.ConcurrentBag%601> obiekt, aby upewnić się, że dostęp do kolekcji jest bezpieczne wątkowo, używa <xref:System.Threading.CountdownEvent> obiekt, aby upewnić się, że wątek aplikacji działa tylko wtedy, gdy inne wątki zostały wykonane, a używa blokady w celu zapewnienia Czy można uzyskać dostęp tylko jeden wątek `msg` zmiennej w czasie.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race2.cs#12)]
 [!code-vb[System.ArgumentOutOfRangeException#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race2.vb#12)]  
  
 <xref:System.ArgumentOutOfRangeException> używa COR_E_ARGUMENTOUTOFRANGE HRESULT, która ma wartość 0x80131502.  
  
 Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.ArgumentOutOfRangeException>, zobacz <xref:System.ArgumentOutOfRangeException> konstruktorów.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano klasę, aby zawierają informacje na temat zaproszonych gościa. Jeśli gościa jest młodszych niż 21 <xref:System.ArgumentOutOfRangeException> wyjątku.  
  
 [!code-csharp[ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR/ArgumentOutOfRangeException/CS/program.cs#1)]
 [!code-vb[ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ArgumentOutOfRangeException/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.ArgumentException.Message%2A> właściwość nowego wystąpienia dostarczony przez system komunikat, który opisuje błąd, takich jak "Liczba nieujemna wymagane." Ten komunikat uwzględnia bieżącą kulturę systemu.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.ArgumentOutOfRangeException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Zlokalizowany ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException paramName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nazwa parametru, który powoduje, że ten wyjątek.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> klasa o nazwie parametru, który powoduje, że ten wyjątek.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.ArgumentException.Message%2A> właściwość nowego wystąpienia dostarczony przez system komunikat, który opisuje błąd, takich jak "Liczba nieujemna wymagane." Ten komunikat uwzględnia bieżącą kulturę systemu.  
  
 Ten konstruktor inicjuje <xref:System.ArgumentException.ParamName%2A> właściwość nowego przy użyciu wystąpienia `paramName` parametru. Zawartość `paramName` ma na celu rozumiane przez człowieka.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.ArgumentOutOfRangeException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Ciąg pusty ("").|  
|<xref:System.ArgumentException.ParamName%2A>|Ciąg nazwy parametru.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArgumentOutOfRangeException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArgumentOutOfRangeException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt zawierający dane serializowanego obiektu.</param>
        <param name="context">Obiekt, który opisuje serwerem źródłowym lub docelowym danych serializacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> z zserializowanymi danymi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływana podczas deserializacji do odtworzenia obiektu wyjątku przesyłanego za pomocą strumienia. Aby uzyskać więcej informacji, zobacz [XML i serializacji SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * Exception -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat o błędzie opisujący przyczynę tego wyjątku.</param>
        <param name="innerException">Wyjątek będący przyczyną bieżącego wyjątku lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), jeśli jest określony żaden wyjątek wewnętrzny.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> z określonego komunikatu o błędzie i wyjątek będący przyczyną tego wyjątku.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (paramName, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nazwa parametru, który spowodował wyjątek.</param>
        <param name="message">Komunikat, który opisuje błąd.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> klasa o nazwie parametru, który powoduje, że ten wyjątek i określony komunikat o błędzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.ArgumentOutOfRangeException.Message%2A> właściwość nowego wystąpienia przy użyciu wartości `message` parametru. Zawartość `message` parametr ma na celu rozumiane przez człowieka. Obiekt wywołujący tego konstruktora jest wymagany w celu zagwarantowania, że ten ciąg został zlokalizowany w bieżącej kulturze systemu.  
  
 Ten konstruktor inicjuje <xref:System.ArgumentException.ParamName%2A> właściwość nowego przy użyciu wystąpienia `paramName` parametru. Zawartość `paramName` ma na celu rozumiane przez człowieka.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.ArgumentOutOfRangeException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Ciąg komunikatu o błędzie.|  
|<xref:System.ArgumentException.ParamName%2A>|Ciąg nazwy parametru.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, object actualValue, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, object actualValue, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String, actualValue As Object, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName, System::Object ^ actualValue, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * obj * string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (paramName, actualValue, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="actualValue" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nazwa parametru, który spowodował wyjątek.</param>
        <param name="actualValue">Wartość argumentu, który powoduje, że ten wyjątek.</param>
        <param name="message">Komunikat, który opisuje błąd.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ArgumentOutOfRangeException" /> klasy za pomocą parametru name, wartość tego argumentu i określony komunikat o błędzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.ArgumentException.ParamName%2A> właściwość nowego przy użyciu wystąpienia `paramName` parametru <xref:System.ArgumentOutOfRangeException.ActualValue%2A> za pomocą właściwości `actualValue` parametru i <xref:System.ArgumentException.Message%2A> przy użyciu właściwości `message` parametru. Zawartość `paramName` i `message` parametry mają rozumiane przez człowieka. Element wywołujący tego konstruktora jest wymagana, aby upewnić się, że te ciągi zostały zlokalizowane dla bieżącego ustawienia kulturowego systemu.  
  
 `actualValue` Parametr nie jest używany w bibliotece klas programu .NET Framework. Jednak <xref:System.ArgumentOutOfRangeException.ActualValue%2A> właściwość jest udostępniana, dzięki czemu aplikacje mogą używać wartość argumentu dostępne.  
  
 `actualValue` Parametrów zawiera nieprawidłową wartość jest przekazywany do metody, która powoduje, że ten wyjątek zostanie wygenerowany. Ta wartość jest przechowywana w <xref:System.ArgumentOutOfRangeException.ActualValue%2A> właściwość i jej reprezentacji ciągu jest dołączany do ciągu wiadomości w <xref:System.ArgumentOutOfRangeException.Message%2A> właściwości.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.ArgumentOutOfRangeException>.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.ArgumentOutOfRangeException.ActualValue%2A>|Wartość argumentu.|  
|<xref:System.Exception.InnerException%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Ciąg komunikatu o błędzie.|  
|<xref:System.ArgumentException.ParamName%2A>|Ciąg nazwy parametru.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualValue">
      <MemberSignature Language="C#" Value="public virtual object ActualValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActualValue" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.ActualValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActualValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ ActualValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActualValue : obj" Usage="System.ArgumentOutOfRangeException.ActualValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość argumentu, który powoduje, że ten wyjątek.</summary>
        <value>
          <see langword="Object" /> Zawierający wartości parametru, który spowodował bieżącego <see cref="T:System.Exception" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do pobierania nieprawidłowy argument.  
  
 `ActualValue` Właściwość zwraca tę samą wartość, który został przekazany do konstruktora, lub `null` Jeśli żadna wartość nie został dostarczony.  
  
 <xref:System.ArgumentOutOfRangeException.ActualValue%2A> Właściwości jest przypisywana wartość w momencie tworzenia obiektu. Jeśli <xref:System.ArgumentOutOfRangeException.ActualValue%2A> wartość właściwości jest `null`, reprezentacja ciągu wartości jest dołączany do ciągu komunikat posiadaniu <xref:System.ArgumentOutOfRangeException.Message%2A> właściwości.  
  
 <xref:System.ArgumentOutOfRangeException.ActualValue%2A> Właściwość nie jest używana w bibliotece klas programu .NET Framework. Prowadzi wartość null we wszystkich <xref:System.ArgumentOutOfRangeException> obiektów zgłoszony w bibliotece klas programu .NET Framework. <xref:System.ArgumentOutOfRangeException.ActualValue%2A> Właściwość jest udostępniana, dzięki czemu aplikacje mogą używać wartość argumentu dostępne.  
  
 Ta właściwość jest tylko do odczytu i powinna zostać zastąpiona tylko w celu dostosowania treści lub formatu wartości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="argumentOutOfRangeException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt zawierający dane serializowanego obiektu.</param>
        <param name="context">Obiekt, który opisuje serwerem źródłowym lub docelowym danych serializacji.</param>
        <summary>Ustawia <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiektu Nieprawidłowa wartość argumentu i dodatkowe informacje o wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ArgumentOutOfRangeException.GetObjectData%2A> Ustawia <xref:System.Runtime.Serialization.SerializationInfo> obiektu ze wszystkimi danymi obiektu wyjątków przeznaczone do serializacji. Podczas deserializacji, obiekt wyjątku jest odtworzonych z <xref:System.Runtime.Serialization.SerializationInfo> przesyłane przez strumień.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Runtime.Serialization.SerializationInfo>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> Obiekt jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">w celu świadczenia usług serializacji. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> akcji zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.ArgumentOutOfRangeException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera komunikat o błędzie i reprezentację ciągu wartość nieprawidłowy argument lub w komunikacie o błędzie, jeśli wartością argumentu ma wartość null.</summary>
        <value>Tekst komunikatu dla tego wyjątku. Wartość tej właściwości przyjmuje jeden z dwóch form w następujący sposób.  
  
 <list type="table"><listheader><term> Warunek </term><description> wartość </description></listheader><item><term><paramref name="actualValue" /> jest <see langword="null" />.  </term><description><paramref name="message" /> Ciągu przekazany do konstruktora.  </description></item><item><term><paramref name="actualValue" /> Nie jest <see langword="null" />.  </term><description><paramref name="message" /> Ciąg dołączany z reprezentacji ciągu wartości nieprawidłowy argument.  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zastępuje <xref:System.ArgumentException.Message%2A>.  
  
 Komunikat o błędzie powinien opisano oczekiwanych wartości parametru, który powoduje, że ten wyjątek. Komunikat o błędzie powinien być zlokalizowany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>